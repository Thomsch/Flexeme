digraph  {
n710 [label="Newtonsoft.Json.Serialization.DefaultContractResolver", span=""];
n711 [label=namingStrategy, span=""];
n712 [label=getExtensionDataDictionary, span=""];
n713 [label=setExtensionDataDictionary, span=""];
n714 [label="System.Reflection.MemberInfo", span=""];
n715 [label=createExtensionDataDictionary, span=""];
n716 [label=setExtensionDataDictionaryValue, span=""];
n717 [label=createEnumerableWrapper, span=""];
n718 [label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", span=""];
n719 [label=namingStrategy, span=""];
n720 [label=shouldSerializeCall, span=""];
n721 [label=specifiedPropertyGet, span=""];
n0 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="175-175", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()"];
n1 [label="DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.Public", span="182-182", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()"];
n2 [label="_contractCache = new ThreadSafeStore<Type, JsonContract>(CreateContract)", span="185-185", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()"];
n3 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="175-175", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()"];
n4 [label="Entry ThreadSafeStore<Type, JsonContract>.cstr", span="", cluster="ThreadSafeStore<Type, JsonContract>.cstr"];
n5 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="193-193", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)"];
n6 [label="ValidationUtils.ArgumentNotNull(type, nameof(type))", span="195-195", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)"];
n7 [label="return _contractCache.Get(type);", span="197-197", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)"];
n9 [label="Entry Unk.nameof", span="", cluster="Unk.nameof"];
n10 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)"];
n8 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="193-193", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)"];
n11 [label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="60-60", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)"];
n12 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="205-205", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n13 [label="bool ignoreSerializableAttribute", span="207-207", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n15 [label="MemberSerialization memberSerialization = JsonTypeReflector.GetObjectMemberSerialization(objectType, ignoreSerializableAttribute)", span="214-214", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n16 [label="IEnumerable<MemberInfo> allMembers = ReflectionUtils.GetFieldsAndProperties(objectType, BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static)\r\n                .Where(m => !ReflectionUtils.IsIndexedProperty(m))", span="216-217", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n19 [label="List<MemberInfo> defaultMembers = ReflectionUtils.GetFieldsAndProperties(objectType, DefaultMembersSearchFlags)\r\n                    .Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="228-229", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n14 [label="ignoreSerializableAttribute = true", span="211-211", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n36 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", span="153-153", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)"];
n18 [label="memberSerialization != MemberSerialization.Fields", span="221-221", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n28 [label="memberSerialization == MemberSerialization.Fields && member.MemberType() == MemberTypes.Field", span="260-260", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n17 [label="List<MemberInfo> serializableMembers = new List<MemberInfo>()", span="219-219", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n37 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="631-631", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)"];
n38 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
n46 [label="Entry lambda expression", span="217-217", cluster="lambda expression"];
n20 [label=allMembers, span="232-232", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n30 [label=allMembers, span="280-280", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n39 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n23 [label="serializableMembers.Add(member)", span="240-240", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n25 [label="serializableMembers.Add(member)", span="248-248", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n27 [label="serializableMembers.Add(member)", span="252-252", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n29 [label="serializableMembers.Add(member)", span="262-262", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n33 [label="serializableMembers.Add(member)", span="284-284", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n34 [label="return serializableMembers;", span="289-289", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n40 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="817-817", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()"];
n50 [label="Entry lambda expression", span="229-229", cluster="lambda expression"];
n22 [label="defaultMembers.Contains(member)", span="237-237", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n21 [label="SerializeCompilerGeneratedMembers || !member.IsDefined(typeof(CompilerGeneratedAttribute), true)", span="235-235", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n24 [label="JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(member) != null", span="246-246", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n26 [label="JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(member) != null", span="250-250", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n41 [label="Entry System.Reflection.MemberInfo.IsDefined(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.IsDefined(System.Type, bool)"];
n42 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)"];
n44 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="419-419", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)"];
n45 [label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107", cluster="System.Reflection.MemberInfo.MemberType()"];
n43 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n31 [label="member is FieldInfo", span="282-282", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n32 [label="field && !field.IsStatic", span="282-282", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n35 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="205-205", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)"];
n47 [label="!ReflectionUtils.IsIndexedProperty(m)", span="217-217", cluster="lambda expression"];
n48 [label="Exit lambda expression", span="217-217", cluster="lambda expression"];
n49 [label="Entry Unk.IsIndexedProperty", span="", cluster="Unk.IsIndexedProperty"];
n51 [label="!ReflectionUtils.IsIndexedProperty(m)", span="229-229", cluster="lambda expression"];
n52 [label="Exit lambda expression", span="229-229", cluster="lambda expression"];
n53 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="313-313", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n54 [label="Array.IndexOf(BlacklistedTypeNames, objectType.FullName) != -1", span="317-317", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", color=red, community=0];
n55 [label="throw new JsonSerializationException(''Unable to serialize instance of '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="319-319", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", color=red, community=0];
n56 [label="JsonObjectContract contract = new JsonObjectContract(objectType)", span="322-322", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n94 [label="Entry System.Array.IndexOf<T>(T[], T)", span="0-0", cluster="System.Array.IndexOf<T>(T[], T)"];
n57 [label="InitializeContract(contract)", span="323-323", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n97 [label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="168-168", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)"];
n60 [label="contract.MemberSerialization = JsonTypeReflector.GetObjectMemberSerialization(contract.NonNullableUnderlyingType, ignoreSerializableAttribute)", span="332-332", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n61 [label="contract.Properties.AddRange(CreateProperties(contract.NonNullableUnderlyingType, contract.MemberSerialization))", span="333-333", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n63 [label="JsonObjectAttribute attribute = JsonTypeReflector.GetCachedAttribute<JsonObjectAttribute>(contract.NonNullableUnderlyingType)", span="337-337", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n65 [label="contract.ItemRequired = attribute._itemRequired", span="340-340", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n66 [label="contract.ItemNullValueHandling = attribute._itemNullValueHandling", span="341-341", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n72 [label="contract.ExtensionDataNameResolver = extensionDataNameResolver", span="355-355", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n73 [label="contract.IsInstantiable", span="357-357", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n74 [label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="359-359", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n76 [label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="364-364", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n77 [label="contract.CreatorParameters.AddRange(CreateConstructorParameters(overrideConstructor, contract.Properties))", span="365-365", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n78 [label="contract.MemberSerialization == MemberSerialization.Fields", span="367-367", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n79 [label="contract.DefaultCreator == null || contract.DefaultCreatorNonPublic", span="378-378", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n80 [label="ConstructorInfo constructor = GetParameterizedConstructor(contract.NonNullableUnderlyingType)", span="380-380", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n82 [label="contract.ParameterizedCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructor)", span="383-383", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n83 [label="contract.CreatorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="384-384", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n84 [label="contract.NonNullableUnderlyingType.IsValueType()", span="387-387", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n85 [label="ConstructorInfo constructor = GetImmutableConstructor(contract.NonNullableUnderlyingType, contract.Properties)", span="391-391", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n87 [label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructor)", span="394-394", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n88 [label="contract.CreatorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="395-395", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n89 [label="MemberInfo extensionDataMember = GetExtensionDataMemberForType(contract.NonNullableUnderlyingType)", span="400-400", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n91 [label="SetExtensionDataDelegates(contract, extensionDataMember)", span="403-403", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n92 [label="return contract;", span="406-406", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n58 [label="bool ignoreSerializableAttribute", span="325-325", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n98 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="757-757", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n59 [label="ignoreSerializableAttribute = true", span="329-329", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n62 [label="Func<string, string> extensionDataNameResolver = null", span="335-335", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n99 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1327-1327", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n100 [label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="68-68", cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)"];
n70 [label="extensionDataNameResolver == null", span="350-350", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n64 [label="attribute != null", span="338-338", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n101 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="68-68", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)"];
n67 [label="attribute.NamingStrategyType != null", span="343-343", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n68 [label="NamingStrategy namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(attribute)", span="345-345", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n69 [label="extensionDataNameResolver = s => namingStrategy.GetDictionaryKey(s)", span="346-346", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n102 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", span="214-214", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)"];
n112 [label="namingStrategy.GetDictionaryKey(s)", span="346-346", cluster="lambda expression"];
n71 [label="extensionDataNameResolver = ResolveExtensionDataName", span="352-352", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n75 [label="overrideConstructor != null", span="362-362", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n103 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="572-572", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n104 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="75-75", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)"];
n81 [label="constructor != null", span="381-381", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n106 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", span="625-625", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)"];
n107 [label="Entry System.Type.IsValueType()", span="560-560", cluster="System.Type.IsValueType()"];
n86 [label="constructor != null", span="392-392", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n108 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="596-596", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n105 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="654-654", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n90 [label="extensionDataMember != null", span="401-401", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n109 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", span="409-409", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)"];
n110 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="458-458", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n93 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="313-313", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
n95 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)"];
n96 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)"];
n111 [label="Entry lambda expression", span="346-346", cluster="lambda expression"];
n113 [label="Exit lambda expression", span="346-346", cluster="lambda expression"];
n114 [label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", span="87-87", cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)"];
n115 [label="IEnumerable<MemberInfo> members = GetClassHierarchyForType(type).SelectMany(baseType =>\r\n            {\r\n                IList<MemberInfo> m = new List<MemberInfo>();\r\n                m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));\r\n                m.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));\r\n\r\n                return m;\r\n            })", span="411-418", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)"];
n116 [label="MemberInfo extensionDataMember = members.LastOrDefault(m =>\r\n            {\r\n                MemberTypes memberType = m.MemberType();\r\n                if (memberType != MemberTypes.Property && memberType != MemberTypes.Field)\r\n                {\r\n                    return false;\r\n                }\r\n\r\n                // last instance of attribute wins on type if there are multiple\r\n                if (!m.IsDefined(typeof(JsonExtensionDataAttribute), false))\r\n                {\r\n                    return false;\r\n                }\r\n\r\n                if (!ReflectionUtils.CanReadMemberValue(m, true))\r\n                {\r\n                    throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' must have a getter.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));\r\n                }\r\n\r\n                Type t = ReflectionUtils.GetMemberUnderlyingType(m);\r\n\r\n                if (ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out Type dictionaryType))\r\n                {\r\n                    Type keyType = dictionaryType.GetGenericArguments()[0];\r\n                    Type valueType = dictionaryType.GetGenericArguments()[1];\r\n\r\n                    if (keyType.IsAssignableFrom(typeof(string)) && valueType.IsAssignableFrom(typeof(JToken)))\r\n                    {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' type must implement IDictionary<string, JToken>.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));\r\n            })", span="420-453", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)"];
n119 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="950-950", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n120 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany"];
n122 [label="Entry lambda expression", span="411-418", cluster="lambda expression"];
n117 [label="return extensionDataMember;", span="455-455", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)"];
n121 [label="Entry Unk.LastOrDefault", span="", cluster="Unk.LastOrDefault"];
n131 [label="Entry lambda expression", span="420-453", cluster="lambda expression"];
n118 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)", span="409-409", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetExtensionDataMemberForType(System.Type)"];
n123 [label="IList<MemberInfo> m = new List<MemberInfo>()", span="413-413", cluster="lambda expression"];
n124 [label="m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="414-414", cluster="lambda expression"];
n125 [label="m.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="415-415", cluster="lambda expression"];
n126 [label="return m;", span="417-417", cluster="lambda expression"];
n128 [label="Entry Unk.GetProperties", span="", cluster="Unk.GetProperties"];
n129 [label="Entry Unk.AddRange", span="", cluster="Unk.AddRange"];
n130 [label="Entry Unk.GetFields", span="", cluster="Unk.GetFields"];
n127 [label="Exit lambda expression", span="411-418", cluster="lambda expression"];
n132 [label="MemberTypes memberType = m.MemberType()", span="422-422", cluster="lambda expression"];
n135 [label="!m.IsDefined(typeof(JsonExtensionDataAttribute), false)", span="429-429", cluster="lambda expression"];
n137 [label="!ReflectionUtils.CanReadMemberValue(m, true)", span="434-434", cluster="lambda expression"];
n138 [label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' must have a getter.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));", span="436-436", cluster="lambda expression"];
n139 [label="Type t = ReflectionUtils.GetMemberUnderlyingType(m)", span="439-439", cluster="lambda expression"];
n145 [label="throw new JsonException(''Invalid extension data attribute on '{0}'. Member '{1}' type must implement IDictionary<string, JToken>.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(m.DeclaringType), m.Name));", span="452-452", cluster="lambda expression"];
n133 [label="memberType != MemberTypes.Property && memberType != MemberTypes.Field", span="423-423", cluster="lambda expression"];
n147 [label="Entry Unk.MemberType", span="", cluster="Unk.MemberType"];
n134 [label="return false;", span="425-425", cluster="lambda expression"];
n136 [label="return false;", span="431-431", cluster="lambda expression"];
n148 [label="Entry Unk.IsDefined", span="", cluster="Unk.IsDefined"];
n149 [label="Entry Unk.CanReadMemberValue", span="", cluster="Unk.CanReadMemberValue"];
n140 [label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out Type dictionaryType)", span="441-441", cluster="lambda expression"];
n153 [label="Entry Unk.GetMemberUnderlyingType", span="", cluster="Unk.GetMemberUnderlyingType"];
n141 [label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="443-443", cluster="lambda expression"];
n154 [label="Entry Unk.ImplementsGenericDefinition", span="", cluster="Unk.ImplementsGenericDefinition"];
n142 [label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="444-444", cluster="lambda expression"];
n155 [label="Entry Unk.GetGenericArguments", span="", cluster="Unk.GetGenericArguments"];
n143 [label="keyType.IsAssignableFrom(typeof(string)) && valueType.IsAssignableFrom(typeof(JToken))", span="446-446", cluster="lambda expression"];
n144 [label="return true;", span="448-448", cluster="lambda expression"];
n156 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)"];
n146 [label="Exit lambda expression", span="420-453", cluster="lambda expression"];
n150 [label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54", cluster="Newtonsoft.Json.JsonException.JsonException(string)"];
n151 [label="Entry Unk.GetClrTypeFullName", span="", cluster="Unk.GetClrTypeFullName"];
n152 [label="Entry Unk.FormatWith", span="", cluster="Unk.FormatWith"];
n157 [label="JsonExtensionDataAttribute extensionDataAttribute = ReflectionUtils.GetAttribute<JsonExtensionDataAttribute>(member)", span="460-460", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n160 [label="Type t = ReflectionUtils.GetMemberUnderlyingType(member)", span="466-466", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n168 [label="Func<object, object> getExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(member)", span="485-485", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n170 [label="Action<object, object> setExtensionDataDictionary = (ReflectionUtils.CanSetMemberValue(member, true, false))\r\n                 ? JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(member)\r\n                 : null", span="489-491", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n176 [label="ExtensionDataSetter extensionDataSetter = (o, key, value) =>\r\n                {\r\n                    object dictionary = getExtensionDataDictionary(o);\r\n                    if (dictionary == null)\r\n                    {\r\n                        if (setExtensionDataDictionary == null)\r\n                        {\r\n                            throw new JsonSerializationException(''Cannot set value onto extension data member '{0}'. The extension data collection is null and it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));\r\n                        }\r\n\r\n                        dictionary = createExtensionDataDictionary();\r\n                        setExtensionDataDictionary(o, dictionary);\r\n                    }\r\n\r\n                    setExtensionDataDictionaryValue(dictionary, key, value);\r\n                }", span="503-518", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n203 [label="throw new JsonSerializationException(''Cannot set value onto extension data member '{0}'. The extension data collection is null and it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));", span="510-510", cluster="lambda expression"];
n177 [label="contract.ExtensionDataSetter = extensionDataSetter", span="520-520", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n183 [label="contract.ExtensionDataGetter = extensionDataGetter", span="540-540", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n184 [label="contract.ExtensionDataValueType = valueType", span="543-543", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n158 [label="extensionDataAttribute == null", span="461-461", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n186 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="721-721", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)"];
n169 [label="extensionDataAttribute.ReadData", span="487-487", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n178 [label="extensionDataAttribute.WriteData", span="523-523", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n159 [label="return;", span="463-463", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n161 [label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out Type dictionaryType)", span="468-468", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n187 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="433-433", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)"];
n165 [label="ReflectionUtils.IsGenericDefinition(t, typeof(IDictionary<,>))", span="476-476", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n167 [label="createdType = t", span="482-482", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n172 [label="MethodInfo addMethod = t.GetMethod(''Add'', new[] { keyType, valueType })", span="493-493", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n162 [label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="470-470", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n163 [label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="471-471", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n166 [label="createdType = typeof(Dictionary<,>).MakeGenericType(keyType, valueType)", span="478-478", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n174 [label="addMethod = dictionaryType.GetMethod(''Add'', new[] {keyType, valueType})", span="498-498", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n179 [label="Type enumerableWrapper = typeof(EnumerableDictionaryWrapper<,>).MakeGenericType(keyType, valueType)", span="525-525", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n164 [label="Type createdType", span="473-473", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n188 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="277-277", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)"];
n171 [label="Func<object> createExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType)", span="492-492", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n189 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])"];
n190 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="38-38", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)"];
n200 [label="object dictionary = getExtensionDataDictionary(o)", span="505-505", cluster="lambda expression"];
n182 [label="ExtensionDataGetter extensionDataGetter = o =>\r\n                {\r\n                    object dictionary = getExtensionDataDictionary(o);\r\n                    if (dictionary == null)\r\n                    {\r\n                        return null;\r\n                    }\r\n\r\n                    return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);\r\n                }", span="529-538", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n213 [label="object dictionary = getExtensionDataDictionary(o)", span="531-531", cluster="lambda expression"];
n191 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="590-590", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)"];
n192 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="59-59", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)"];
n202 [label="setExtensionDataDictionary == null", span="508-508", cluster="lambda expression"];
n205 [label="setExtensionDataDictionary(o, dictionary)", span="514-514", cluster="lambda expression"];
n193 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="76-76", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)"];
n204 [label="dictionary = createExtensionDataDictionary()", span="513-513", cluster="lambda expression"];
n173 [label="addMethod == null", span="494-494", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n194 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])"];
n175 [label="MethodCall<object, object> setExtensionDataDictionaryValue = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(addMethod)", span="501-501", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n195 [label="Entry Unk.GetMethod", span="", cluster="Unk.GetMethod"];
n196 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="74-74", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)"];
n206 [label="setExtensionDataDictionaryValue(dictionary, key, value)", span="517-517", cluster="lambda expression"];
n180 [label="ConstructorInfo constructors = enumerableWrapper.GetConstructors().First()", span="526-526", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n181 [label="ObjectConstructor<object> createEnumerableWrapper = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructors)", span="527-527", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n197 [label="Entry System.Type.GetConstructors()", span="0-0", cluster="System.Type.GetConstructors()"];
n198 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="391-391", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()"];
n216 [label="return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);", span="537-537", cluster="lambda expression"];
n185 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="458-458", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)"];
n199 [label="Entry lambda expression", span="503-518", cluster="lambda expression"];
n201 [label="dictionary == null", span="506-506", cluster="lambda expression"];
n208 [label="Entry Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", span="3037-3037", cluster="Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)"];
n209 [label="Entry Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", span="3035-3035", cluster="Newtonsoft.Json.Serialization.Func<TResult>.Invoke()"];
n210 [label="Entry Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)", span="3047-3047", cluster="Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)"];
n207 [label="Exit lambda expression", span="503-518", cluster="lambda expression"];
n211 [label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27", cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])"];
n212 [label="Entry lambda expression", span="529-538", cluster="lambda expression"];
n214 [label="dictionary == null", span="532-532", cluster="lambda expression"];
n215 [label="return null;", span="534-534", cluster="lambda expression"];
n217 [label="Exit lambda expression", span="529-538", cluster="lambda expression"];
n218 [label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31", cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])"];
n219 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="552-552", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)"];
n220 [label="ValidationUtils.ArgumentNotNull(e, nameof(e))", span="554-554", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)"];
n221 [label="_e = e", span="555-555", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)"];
n222 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="552-552", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.EnumerableDictionaryWrapper(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)"];
n223 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="558-558", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()"];
n224 [label=_e, span="560-560", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()"];
n225 [label="yield return new KeyValuePair<object, object>(item.Key, item.Value);", span="562-562", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()"];
n226 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="558-558", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()"];
n227 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)"];
n228 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="566-566", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()"];
n229 [label="return GetEnumerator();", span="568-568", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()"];
n230 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="566-566", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()"];
n231 [label="IEnumerator<ConstructorInfo> en = objectType.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).Where(c => c.IsDefined(typeof(JsonConstructorAttribute), true)).GetEnumerator()", span="574-574", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n237 [label="objectType == typeof(Version)", span="588-588", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n238 [label="return objectType.GetConstructor(new[] { typeof(int), typeof(int), typeof(int), typeof(int) });", span="590-590", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n232 [label="en.MoveNext()", span="576-576", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n241 [label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)"];
n242 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()"];
n245 [label="Entry lambda expression", span="574-574", cluster="lambda expression"];
n233 [label="ConstructorInfo conInfo = en.Current", span="578-578", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n234 [label="en.MoveNext()", span="579-579", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n243 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()"];
n236 [label="return conInfo;", span="584-584", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n235 [label="throw new JsonException(''Multiple constructors with the JsonConstructorAttribute.'');", span="581-581", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n239 [label="return null;", span="593-593", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n240 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="572-572", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)"];
n244 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])"];
n246 [label="c.IsDefined(typeof(JsonConstructorAttribute), true)", span="574-574", cluster="lambda expression"];
n247 [label="Exit lambda expression", span="574-574", cluster="lambda expression"];
n248 [label="IEnumerable<ConstructorInfo> constructors = objectType.GetConstructors()", span="598-598", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n256 [label="JsonProperty memberProperty = MatchProperty(memberProperties, parameterInfo.Name, parameterInfo.ParameterType)", span="610-610", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n249 [label="IEnumerator<ConstructorInfo> en = constructors.GetEnumerator()", span="599-599", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n250 [label="en.MoveNext()", span="600-600", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n251 [label="ConstructorInfo constructor = en.Current", span="602-602", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n252 [label="!en.MoveNext()", span="603-603", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n260 [label="return null;", span="622-622", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n253 [label="ParameterInfo[] parameters = constructor.GetParameters()", span="605-605", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n259 [label="return constructor;", span="617-617", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n254 [label="parameters.Length > 0", span="606-606", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n262 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()"];
n255 [label=parameters, span="608-608", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n257 [label="memberProperty == null || memberProperty.Writable", span="611-611", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n263 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", span="680-680", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)"];
n258 [label="return null;", span="613-613", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n261 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="596-596", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetImmutableConstructor(System.Type, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n264 [label="ConstructorInfo[] constructors = objectType.GetConstructors(BindingFlags.Public | BindingFlags.Instance)", span="639-639", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)"];
n265 [label="constructors.Length == 1", span="640-640", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)"];
n266 [label="return constructors[0];", span="642-642", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)"];
n267 [label="return null;", span="645-645", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)"];
n268 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", span="625-625", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)"];
n269 [label="ParameterInfo[] constructorParameters = constructor.GetParameters()", span="656-656", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n270 [label="JsonPropertyCollection parameterCollection = new JsonPropertyCollection(constructor.DeclaringType)", span="658-658", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n272 [label="JsonProperty matchingMemberProperty = MatchProperty(memberProperties, parameterInfo.Name, parameterInfo.ParameterType)", span="662-662", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n271 [label=constructorParameters, span="660-660", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n279 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)"];
n276 [label="parameterCollection.AddProperty(property)", span="672-672", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n277 [label="return parameterCollection;", span="677-677", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n273 [label="matchingMemberProperty != null || parameterInfo.Name != null", span="666-666", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n274 [label="JsonProperty property = CreatePropertyFromConstructorParameter(matchingMemberProperty, parameterInfo)", span="668-668", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n275 [label="property != null", span="670-670", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n280 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="705-705", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n281 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="70-70", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)"];
n278 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="654-654", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)"];
n282 [label="name == null", span="684-684", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)"];
n284 [label="JsonProperty property = properties.GetClosestMatchProperty(name)", span="689-689", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)"];
n285 [label="property == null || property.PropertyType != type", span="691-691", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)"];
n283 [label="return null;", span="686-686", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)"];
n289 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="131-131", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)"];
n287 [label="return property;", span="696-696", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)"];
n286 [label="return null;", span="693-693", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)"];
n288 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", span="680-680", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)"];
n290 [label="JsonProperty property = new JsonProperty()", span="707-707", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n291 [label="property.PropertyType = parameterInfo.ParameterType", span="708-708", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n292 [label="property.AttributeProvider = new ReflectionAttributeProvider(parameterInfo)", span="709-709", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n293 [label="SetPropertySettingsFromAttributes(property, parameterInfo, parameterInfo.Name, parameterInfo.Member.DeclaringType, MemberSerialization.OptOut, out _)", span="711-711", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n296 [label="matchingMemberProperty != null", span="717-717", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n297 [label="property.PropertyName = (property.PropertyName != parameterInfo.Name) ? property.PropertyName : matchingMemberProperty.PropertyName", span="719-719", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n298 [label="property.Converter = property.Converter ?? matchingMemberProperty.Converter", span="720-720", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n299 [label="!property._hasExplicitDefaultValue && matchingMemberProperty._hasExplicitDefaultValue", span="722-722", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n300 [label="property.DefaultValue = matchingMemberProperty.DefaultValue", span="724-724", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n301 [label="property._required = property._required ?? matchingMemberProperty._required", span="727-727", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n302 [label="property.IsReference = property.IsReference ?? matchingMemberProperty.IsReference", span="728-728", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n303 [label="property.NullValueHandling = property.NullValueHandling ?? matchingMemberProperty.NullValueHandling", span="729-729", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n304 [label="property.DefaultValueHandling = property.DefaultValueHandling ?? matchingMemberProperty.DefaultValueHandling", span="730-730", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n305 [label="property.ReferenceLoopHandling = property.ReferenceLoopHandling ?? matchingMemberProperty.ReferenceLoopHandling", span="731-731", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n306 [label="property.ObjectCreationHandling = property.ObjectCreationHandling ?? matchingMemberProperty.ObjectCreationHandling", span="732-732", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n307 [label="property.TypeNameHandling = property.TypeNameHandling ?? matchingMemberProperty.TypeNameHandling", span="733-733", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n310 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()"];
n294 [label="property.Readable = false", span="713-713", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n295 [label="property.Writable = true", span="714-714", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n308 [label="return property;", span="736-736", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n311 [label="Entry Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)", span="43-43", cluster="Newtonsoft.Json.Serialization.ReflectionAttributeProvider.ReflectionAttributeProvider(object)"];
n312 [label="Entry Unk.SetPropertySettingsFromAttributes", span="", cluster="Unk.SetPropertySettingsFromAttributes"];
n309 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="705-705", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)"];
n313 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="744-744", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)"];
n314 [label="return JsonTypeReflector.GetJsonConverter(objectType);", span="746-746", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)"];
n315 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="744-744", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)"];
n316 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="180-180", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)"];
n317 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="749-749", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)"];
n318 [label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType);", span="751-751", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)"];
n319 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="749-749", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)"];
n320 [label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(contract.NonNullableUnderlyingType)", span="759-759", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n322 [label="contract.IsReference = containerAttribute._isReference", span="762-762", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n323 [label="contract.Converter = ResolveContractConverter(contract.NonNullableUnderlyingType)", span="776-776", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n324 [label="contract.InternalConverter = JsonSerializer.GetMatchingConverter(BuiltInConverters, contract.NonNullableUnderlyingType)", span="779-779", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n325 [label="contract.IsInstantiable\r\n                && (ReflectionUtils.HasDefaultConstructor(contract.CreatedType, true) || contract.CreatedType.IsValueType())", span="781-782", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n326 [label="contract.DefaultCreator = GetDefaultCreator(contract.CreatedType)", span="784-784", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n327 [label="contract.DefaultCreatorNonPublic = (!contract.CreatedType.IsValueType() &&\r\n                                                    ReflectionUtils.GetDefaultConstructor(contract.CreatedType) == null)", span="786-787", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n328 [label="ResolveCallbackMethods(contract, contract.NonNullableUnderlyingType)", span="790-790", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n321 [label="containerAttribute != null", span="760-760", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n330 [label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="1194-1194", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)"];
n331 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="223-223", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)"];
n332 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="235-235", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)"];
n329 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="757-757", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)"];
n333 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="793-793", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n334 [label="GetCallbackMethodsForType(\r\n                t,\r\n                out List<SerializationCallback> onSerializing,\r\n                out List<SerializationCallback> onSerialized,\r\n                out List<SerializationCallback> onDeserializing,\r\n                out List<SerializationCallback> onDeserialized,\r\n                out List<SerializationErrorCallback> onError)", span="795-801", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n336 [label="contract.OnSerializingCallbacks.AddRange(onSerializing)", span="805-805", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n338 [label="contract.OnSerializedCallbacks.AddRange(onSerialized)", span="810-810", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n340 [label="contract.OnDeserializingCallbacks.AddRange(onDeserializing)", span="815-815", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n342 [label="contract.OnDeserializedCallbacks.AddRange(onDeserialized)", span="820-820", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n344 [label="contract.OnErrorCallbacks.AddRange(onError)", span="825-825", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n335 [label="onSerializing != null", span="803-803", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n346 [label="Entry Unk.GetCallbackMethodsForType", span="", cluster="Unk.GetCallbackMethodsForType"];
n337 [label="onSerialized != null", span="808-808", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n339 [label="onDeserializing != null", span="813-813", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n341 [label="onDeserialized != null", span="818-818", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n343 [label="onError != null", span="823-823", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n345 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="793-793", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)"];
n347 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="829-829", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n348 [label="onSerializing = null", span="831-831", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n353 [label="GetClassHierarchyForType(type)", span="837-837", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n349 [label="onSerialized = null", span="832-832", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n366 [label="onSerializing = onSerializing ?? new List<SerializationCallback>()", span="863-863", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n385 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="829-829", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n350 [label="onDeserializing = null", span="833-833", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n370 [label="onSerialized = onSerialized ?? new List<SerializationCallback>()", span="869-869", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n351 [label="onDeserialized = null", span="834-834", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n374 [label="onDeserializing = onDeserializing ?? new List<SerializationCallback>()", span="875-875", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n352 [label="onError = null", span="835-835", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n378 [label="onDeserialized = onDeserialized ?? new List<SerializationCallback>()", span="881-881", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n382 [label="onError = onError ?? new List<SerializationErrorCallback>()", span="887-887", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n354 [label="MethodInfo currentOnSerializing = null", span="840-840", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n359 [label="bool skipSerializing = ShouldSkipSerializing(baseType)", span="846-846", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n360 [label="bool skipDeserialized = ShouldSkipDeserialized(baseType)", span="847-847", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n361 [label="baseType.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)", span="849-849", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n355 [label="MethodInfo currentOnSerialized = null", span="841-841", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n365 [label="!skipSerializing && IsValidCallback(method, parameters, typeof(OnSerializingAttribute), currentOnSerializing, ref prevAttributeType)", span="861-861", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n356 [label="MethodInfo currentOnDeserializing = null", span="842-842", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n369 [label="IsValidCallback(method, parameters, typeof(OnSerializedAttribute), currentOnSerialized, ref prevAttributeType)", span="867-867", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n357 [label="MethodInfo currentOnDeserialized = null", span="843-843", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n373 [label="IsValidCallback(method, parameters, typeof(OnDeserializingAttribute), currentOnDeserializing, ref prevAttributeType)", span="873-873", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n358 [label="MethodInfo currentOnError = null", span="844-844", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n377 [label="!skipDeserialized && IsValidCallback(method, parameters, typeof(OnDeserializedAttribute), currentOnDeserialized, ref prevAttributeType)", span="879-879", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n381 [label="IsValidCallback(method, parameters, typeof(OnErrorAttribute), currentOnError, ref prevAttributeType)", span="885-885", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n386 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="933-933", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)"];
n387 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="915-915", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)"];
n362 [label="method.ContainsGenericParameters", span="853-853", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n388 [label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMethods(System.Reflection.BindingFlags)"];
n364 [label="ParameterInfo[] parameters = method.GetParameters()", span="859-859", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n367 [label="onSerializing.Add(JsonContract.CreateSerializationCallback(method))", span="864-864", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n368 [label="currentOnSerializing = method", span="865-865", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n371 [label="onSerialized.Add(JsonContract.CreateSerializationCallback(method))", span="870-870", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n372 [label="currentOnSerialized = method", span="871-871", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n375 [label="onDeserializing.Add(JsonContract.CreateSerializationCallback(method))", span="876-876", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n376 [label="currentOnDeserializing = method", span="877-877", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n379 [label="onDeserialized.Add(JsonContract.CreateSerializationCallback(method))", span="882-882", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n380 [label="currentOnDeserialized = method", span="883-883", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n383 [label="onError.Add(JsonContract.CreateSerializationErrorCallback(method))", span="888-888", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n384 [label="currentOnError = method", span="889-889", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n363 [label="Type prevAttributeType = null", span="858-858", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)"];
n389 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="1264-1264", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n390 [label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", span="306-306", cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)"];
n391 [label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", span="311-311", cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)"];
n392 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", span="895-895", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n393 [label="t.IsGenericType()", span="897-897", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n394 [label="Type definition = t.GetGenericTypeDefinition()", span="899-899", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n402 [label="return false;", span="912-912", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n404 [label="Entry System.Type.IsGenericType()", span="153-153", cluster="System.Type.IsGenericType()"];
n395 [label="definition.FullName", span="901-901", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n405 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()"];
n396 [label="''System.Collections.Concurrent.ConcurrentQueue`1''", span="903-903", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n397 [label="''System.Collections.Concurrent.ConcurrentStack`1''", span="904-904", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n398 [label="''System.Collections.Concurrent.ConcurrentBag`1''", span="905-905", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n399 [label="JsonTypeReflector.ConcurrentDictionaryTypeName", span="906-906", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n400 [label="''System.Collections.ObjectModel.ObservableCollection`1''", span="907-907", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n401 [label="return true;", span="908-908", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n403 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)", span="895-895", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsConcurrentOrObservableCollection(System.Type)"];
n406 [label="IsConcurrentOrObservableCollection(t)", span="918-918", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)"];
n407 [label="return true;", span="920-920", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)"];
n408 [label="return false;", span="930-930", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)"];
n409 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="915-915", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)"];
n410 [label="IsConcurrentOrObservableCollection(t)", span="935-935", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)"];
n411 [label="return true;", span="937-937", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)"];
n412 [label="return false;", span="947-947", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)"];
n413 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)", span="933-933", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipSerializing(System.Type)"];
n414 [label="List<Type> ret = new List<Type>()", span="952-952", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n415 [label="Type current = type", span="954-954", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n417 [label="ret.Add(current)", span="957-957", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n419 [label="ret.Reverse()", span="962-962", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n420 [label="return ret;", span="963-963", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n416 [label="current != null && current != typeof(object)", span="955-955", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n418 [label="current = current.BaseType()", span="958-958", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n422 [label="Entry System.Type.BaseType()", span="171-171", cluster="System.Type.BaseType()"];
n423 [label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0", cluster="System.Collections.Generic.List<T>.Reverse()"];
n421 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="950-950", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)"];
n424 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="971-971", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n425 [label="JsonDictionaryContract contract = new JsonDictionaryContract(objectType)", span="973-973", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n427 [label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetAttribute<JsonContainerAttribute>(objectType)", span="976-976", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n426 [label="InitializeContract(contract)", span="974-974", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n444 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="112-112", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)"];
n430 [label="contract.DictionaryKeyResolver = s => namingStrategy.GetDictionaryKey(s)", span="980-980", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n431 [label="contract.DictionaryKeyResolver = ResolveDictionaryKey", span="984-984", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n432 [label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="987-987", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n435 [label="Type expectedParameterType = (contract.DictionaryKeyType != null && contract.DictionaryValueType != null)\r\n                    ? typeof(IEnumerable<>).MakeGenericType(typeof(KeyValuePair<,>).MakeGenericType(contract.DictionaryKeyType, contract.DictionaryValueType))\r\n                    : typeof(IDictionary)", span="992-994", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n437 [label="contract.HasParameterizedCreator = false", span="998-998", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n439 [label="contract.HasParameterizedCreator = true", span="1002-1002", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n440 [label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="1006-1006", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n441 [label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="1009-1009", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n442 [label="return contract;", span="1012-1012", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n428 [label="containerAttribute?.NamingStrategyType != null", span="977-977", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n429 [label="NamingStrategy namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(containerAttribute)", span="979-979", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n447 [label="namingStrategy.GetDictionaryKey(s)", span="980-980", cluster="lambda expression"];
n433 [label="overrideConstructor != null", span="989-989", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n434 [label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="991-991", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n436 [label="parameters.Length == 0", span="996-996", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n438 [label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="1000-1000", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n443 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="971-971", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)"];
n445 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)"];
n446 [label="Entry lambda expression", span="980-980", cluster="lambda expression"];
n448 [label="Exit lambda expression", span="980-980", cluster="lambda expression"];
n449 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="1020-1020", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n450 [label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="1022-1022", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n451 [label="InitializeContract(contract)", span="1023-1023", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n464 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="114-114", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)"];
n452 [label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="1025-1025", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n455 [label="Type expectedParameterType = (contract.CollectionItemType != null)\r\n                    ? typeof(IEnumerable<>).MakeGenericType(contract.CollectionItemType)\r\n                    : typeof(IEnumerable)", span="1030-1032", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n457 [label="contract.HasParameterizedCreator = false", span="1036-1036", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n459 [label="contract.HasParameterizedCreator = true", span="1040-1040", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n460 [label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="1044-1044", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n461 [label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="1047-1047", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n462 [label="return contract;", span="1050-1050", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n453 [label="overrideConstructor != null", span="1027-1027", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n454 [label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="1029-1029", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n456 [label="parameters.Length == 0", span="1034-1034", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n458 [label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="1038-1038", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n463 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="1020-1020", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)"];
n465 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="1058-1058", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)"];
n466 [label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="1060-1060", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)"];
n467 [label="InitializeContract(contract)", span="1061-1061", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)"];
n470 [label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="42-42", cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)"];
n468 [label="return contract;", span="1063-1063", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)"];
n469 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="1058-1058", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)"];
n471 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1071-1071", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)"];
n472 [label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="1073-1073", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)"];
n473 [label="InitializeContract(contract)", span="1074-1074", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)"];
n476 [label="Entry Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)"];
n474 [label="return contract;", span="1076-1076", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)"];
n475 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1071-1071", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)"];
n477 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="1135-1135", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)"];
n478 [label="JsonStringContract contract = new JsonStringContract(objectType)", span="1137-1137", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)"];
n479 [label="InitializeContract(contract)", span="1138-1138", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)"];
n482 [label="Entry Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)"];
n480 [label="return contract;", span="1140-1140", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)"];
n481 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="1135-1135", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)"];
n483 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="1148-1148", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n484 [label="IsJsonPrimitiveType(objectType)", span="1150-1150", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n485 [label="return CreatePrimitiveContract(objectType);", span="1152-1152", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n486 [label="Type t = ReflectionUtils.EnsureNotNullableType(objectType)", span="1155-1155", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n489 [label="return CreateObjectContract(objectType);", span="1160-1160", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n491 [label="return CreateArrayContract(objectType);", span="1165-1165", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n493 [label="return CreateDictionaryContract(objectType);", span="1170-1170", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n495 [label="return CreateLinqContract(objectType);", span="1184-1184", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n497 [label="return CreateDictionaryContract(objectType);", span="1189-1189", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n501 [label="return CreateStringContract(objectType);", span="1199-1199", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n502 [label="return CreateObjectContract(objectType);", span="1224-1224", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n504 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1227-1227", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)"];
n487 [label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(t)", span="1156-1156", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n505 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="270-270", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)"];
n494 [label="t == typeof(JToken) || t.IsSubclassOf(typeof(JToken))", span="1182-1182", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n496 [label="CollectionUtils.IsDictionaryType(t)", span="1187-1187", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n498 [label="typeof(IEnumerable).IsAssignableFrom(t)", span="1192-1192", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n499 [label="return CreateArrayContract(t);", span="1194-1194", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n500 [label="CanConvertToString(t)", span="1197-1197", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n488 [label="containerAttribute is JsonObjectAttribute", span="1158-1158", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n490 [label="containerAttribute is JsonArrayAttribute", span="1163-1163", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n492 [label="containerAttribute is JsonDictionaryAttribute", span="1168-1168", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n506 [label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0", cluster="System.Type.IsSubclassOf(System.Type)"];
n507 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="96-96", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)"];
n508 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1247-1247", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)"];
n503 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="1148-1148", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)"];
n509 [label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(t)", span="1229-1229", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)"];
n510 [label="return (typeCode != PrimitiveTypeCode.Empty && typeCode != PrimitiveTypeCode.Object);", span="1231-1231", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)"];
n512 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="187-187", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)"];
n511 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1227-1227", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)"];
n513 [label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="1256-1256", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)"];
n514 [label="return true;", span="1258-1258", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)"];
n515 [label="return false;", span="1261-1261", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)"];
n516 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1247-1247", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)"];
n517 [label="!method.IsDefined(attributeType, false)", span="1266-1266", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n519 [label="currentCallback != null", span="1271-1271", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n520 [label="throw new JsonException(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, method, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1273-1273", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n521 [label="prevAttributeType != null", span="1276-1276", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n522 [label="throw new JsonException(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, prevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="1278-1278", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n523 [label="method.IsVirtual", span="1281-1281", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n524 [label="throw new JsonException(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, method, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1283-1283", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n525 [label="method.ReturnType != typeof(void)", span="1286-1286", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n526 [label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method));", span="1288-1288", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n527 [label="attributeType == typeof(OnErrorAttribute)", span="1291-1291", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n528 [label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != typeof(ErrorContext)", span="1293-1293", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n529 [label="throw new JsonException(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext), typeof(ErrorContext)));", span="1295-1295", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n530 [label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="1300-1300", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n531 [label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="1302-1302", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n532 [label="prevAttributeType = attributeType", span="1306-1306", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n518 [label="return false;", span="1268-1268", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n533 [label="return true;", span="1308-1308", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n534 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="1264-1264", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)"];
n535 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1311-1311", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)"];
n537 [label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57", cluster="string.FormatWith(System.IFormatProvider, object, object, object)"];
n536 [label="Entry string.FormatWith(System.IFormatProvider, object, object, object, object)", span="62-62", cluster="string.FormatWith(System.IFormatProvider, object, object, object, object)"];
n538 [label="type.IsGenericTypeDefinition() || !type.ContainsGenericParameters()", span="1313-1313", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)"];
n539 [label="return type.FullName;", span="1315-1315", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)"];
n540 [label="return ''{0}.{1}''.FormatWith(CultureInfo.InvariantCulture, type.Namespace, type.Name);", span="1318-1318", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)"];
n542 [label="Entry System.Type.IsGenericTypeDefinition()", span="162-162", cluster="System.Type.IsGenericTypeDefinition()"];
n543 [label="Entry System.Type.ContainsGenericParameters()", span="135-135", cluster="System.Type.ContainsGenericParameters()"];
n541 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1311-1311", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)"];
n544 [label="List<MemberInfo> members = GetSerializableMembers(type)", span="1329-1329", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n548 [label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="1337-1337", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n550 [label="JsonProperty property = CreateProperty(member, memberSerialization)", span="1341-1341", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n545 [label="members == null", span="1330-1330", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n549 [label=members, span="1339-1339", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n546 [label="throw new JsonSerializationException(''Null collection of serializable members returned.'');", span="1332-1332", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n547 [label="PropertyNameTable nameTable = GetNameTable()", span="1335-1335", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n558 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", span="1359-1359", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()"];
n552 [label=nameTable, span="1346-1346", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n553 [label="property.PropertyName = nameTable.Add(property.PropertyName)", span="1348-1348", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n554 [label="properties.AddProperty(property)", span="1351-1351", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n555 [label="IList<JsonProperty> orderedProperties = properties.OrderBy(p => p.Order ?? -1).ToList()", span="1355-1355", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n551 [label="property != null", span="1343-1343", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n559 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1398-1398", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n560 [label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)", span="76-76", cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Add(string)"];
n556 [label="return orderedProperties;", span="1356-1356", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n561 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy"];
n562 [label="Entry Unk.ToList", span="", cluster="Unk.ToList"];
n563 [label="Entry lambda expression", span="1355-1355", cluster="lambda expression"];
n557 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1327-1327", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)"];
n564 [label="p.Order ?? -1", span="1355-1355", cluster="lambda expression"];
n565 [label="Exit lambda expression", span="1355-1355", cluster="lambda expression"];
n566 [label="return _nameTable;", span="1361-1361", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()"];
n567 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", span="1359-1359", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()"];
n568 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1369-1369", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)"];
n569 [label="IValueProvider valueProvider", span="1372-1372", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)"];
n571 [label="valueProvider = new DynamicValueProvider(member)", span="1377-1377", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)"];
n572 [label="valueProvider = new ReflectionValueProvider(member)", span="1381-1381", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)"];
n570 [label=DynamicCodeGeneration, span="1375-1375", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)"];
n573 [label="return valueProvider;", span="1389-1389", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)"];
n576 [label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43", cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)"];
n575 [label="Entry DynamicValueProvider.cstr", span="", cluster="DynamicValueProvider.cstr"];
n574 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1369-1369", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)"];
n577 [label="JsonProperty property = new JsonProperty()", span="1400-1400", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n578 [label="property.PropertyType = ReflectionUtils.GetMemberUnderlyingType(member)", span="1401-1401", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n579 [label="property.DeclaringType = member.DeclaringType", span="1402-1402", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n580 [label="property.ValueProvider = CreateMemberValueProvider(member)", span="1403-1403", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n581 [label="property.AttributeProvider = new ReflectionAttributeProvider(member)", span="1404-1404", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n582 [label="SetPropertySettingsFromAttributes(property, member, member.Name, member.DeclaringType, memberSerialization, out bool allowNonPublicAccess)", span="1406-1406", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n583 [label="memberSerialization != MemberSerialization.Fields", span="1408-1408", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n584 [label="property.Readable = ReflectionUtils.CanReadMemberValue(member, allowNonPublicAccess)", span="1410-1410", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n585 [label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess, property.HasMemberAttribute)", span="1411-1411", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n589 [label="property.ShouldSerialize = CreateShouldSerializeTest(member)", span="1422-1422", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n591 [label="SetIsSpecifiedActions(property, member, allowNonPublicAccess)", span="1427-1427", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n586 [label="property.Readable = true", span="1416-1416", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n587 [label="property.Writable = true", span="1417-1417", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n592 [label="return property;", span="1430-1430", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n588 [label="!IgnoreShouldSerializeMembers", span="1420-1420", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n594 [label="Entry Unk.CanSetMemberValue", span="", cluster="Unk.CanSetMemberValue"];
n590 [label="!IgnoreIsSpecifiedMembers", span="1425-1425", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n595 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1602-1602", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)"];
n596 [label="Entry Unk.SetIsSpecifiedActions", span="", cluster="Unk.SetIsSpecifiedActions"];
n593 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1398-1398", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)"];
n597 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1433-1433", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n598 [label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(attributeProvider)", span="1451-1451", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n599 [label="JsonRequiredAttribute requiredAttribute = JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(attributeProvider)", span="1452-1452", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n605 [label="mappedName = name", span="1470-1470", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n607 [label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetAttribute<JsonContainerAttribute>(declaringType)", span="1474-1474", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n615 [label="property.PropertyName = namingStrategy.GetPropertyName(mappedName, hasSpecifiedName)", span="1492-1492", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n616 [label="property.PropertyName = ResolvePropertyName(mappedName)", span="1496-1496", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n617 [label="property.UnderlyingName = name", span="1499-1499", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n620 [label="property._required = propertyAttribute._required", span="1504-1504", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n621 [label="property.Order = propertyAttribute._order", span="1505-1505", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n622 [label="property.DefaultValueHandling = propertyAttribute._defaultValueHandling", span="1506-1506", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n624 [label="property.NullValueHandling = propertyAttribute._nullValueHandling", span="1508-1508", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n625 [label="property.ReferenceLoopHandling = propertyAttribute._referenceLoopHandling", span="1509-1509", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n626 [label="property.ObjectCreationHandling = propertyAttribute._objectCreationHandling", span="1510-1510", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n627 [label="property.TypeNameHandling = propertyAttribute._typeNameHandling", span="1511-1511", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n628 [label="property.IsReference = propertyAttribute._isReference", span="1512-1512", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n629 [label="property.ItemIsReference = propertyAttribute._itemIsReference", span="1514-1514", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n630 [label="property.ItemConverter = propertyAttribute.ItemConverterType != null ? JsonTypeReflector.CreateJsonConverterInstance(propertyAttribute.ItemConverterType, propertyAttribute.ItemConverterParameters) : null", span="1515-1515", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n631 [label="property.ItemReferenceLoopHandling = propertyAttribute._itemReferenceLoopHandling", span="1516-1516", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n632 [label="property.ItemTypeNameHandling = propertyAttribute._itemTypeNameHandling", span="1517-1517", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n633 [label="property.NullValueHandling = null", span="1521-1521", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n634 [label="property.ReferenceLoopHandling = null", span="1522-1522", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n635 [label="property.ObjectCreationHandling = null", span="1523-1523", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n636 [label="property.TypeNameHandling = null", span="1524-1524", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n637 [label="property.IsReference = null", span="1525-1525", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n638 [label="property.ItemIsReference = null", span="1526-1526", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n639 [label="property.ItemConverter = null", span="1527-1527", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n640 [label="property.ItemReferenceLoopHandling = null", span="1528-1528", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n641 [label="property.ItemTypeNameHandling = null", span="1529-1529", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n643 [label="property._required = Required.Always", span="1543-1543", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n645 [label="property.HasMemberAttribute = hasMemberAttribute", span="1547-1547", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n646 [label="bool hasJsonIgnoreAttribute =\r\n                JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(attributeProvider) != null\r\n                    // automatically ignore extension data dictionary property if it is public\r\n                || JsonTypeReflector.GetAttribute<JsonExtensionDataAttribute>(attributeProvider) != null", span="1549-1552", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n647 [label="memberSerialization != MemberSerialization.OptIn", span="1558-1558", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n649 [label="property.Ignored = (hasJsonIgnoreAttribute || hasIgnoreDataMemberAttribute)", span="1567-1567", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n650 [label="property.Ignored = (hasJsonIgnoreAttribute || !hasMemberAttribute)", span="1572-1572", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n651 [label="property.Converter = JsonTypeReflector.GetJsonConverter(attributeProvider)", span="1577-1577", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n652 [label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(attributeProvider)", span="1579-1579", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n654 [label="property.DefaultValue = defaultValueAttribute.Value", span="1582-1582", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n660 [label="memberSerialization == MemberSerialization.Fields", span="1596-1596", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n602 [label="propertyAttribute?.PropertyName != null", span="1456-1456", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n603 [label="mappedName = propertyAttribute.PropertyName", span="1458-1458", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n609 [label="propertyAttribute?.NamingStrategyType != null", span="1477-1477", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n610 [label="namingStrategy = JsonTypeReflector.CreateNamingStrategyInstance(propertyAttribute.NamingStrategyType, propertyAttribute.NamingStrategyParameters)", span="1479-1479", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n619 [label="propertyAttribute != null", span="1502-1502", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n600 [label="string mappedName", span="1454-1454", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n642 [label="requiredAttribute != null", span="1541-1541", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n601 [label="bool hasSpecifiedName", span="1455-1455", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n604 [label="hasSpecifiedName = true", span="1459-1459", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n606 [label="hasSpecifiedName = false", span="1471-1471", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n608 [label="NamingStrategy namingStrategy", span="1476-1476", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n611 [label="containerAttribute?.NamingStrategyType != null", span="1481-1481", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n612 [label="namingStrategy = JsonTypeReflector.GetContainerNamingStrategy(containerAttribute)", span="1483-1483", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n613 [label="namingStrategy = NamingStrategy", span="1487-1487", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n614 [label="namingStrategy != null", span="1490-1490", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n663 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="208-208", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])"];
n665 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1645-1645", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)"];
n664 [label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", span="57-57", cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)"];
n618 [label="bool hasMemberAttribute = false", span="1501-1501", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n658 [label=hasMemberAttribute, span="1592-1592", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n623 [label="hasMemberAttribute = true", span="1507-1507", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n666 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="202-202", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])"];
n644 [label="hasMemberAttribute = true", span="1544-1544", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n648 [label="bool hasIgnoreDataMemberAttribute = false", span="1560-1560", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n653 [label="defaultValueAttribute != null", span="1580-1580", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n655 [label="allowNonPublicAccess = false", span="1585-1585", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n656 [label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="1587-1587", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n662 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1433-1433", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n657 [label="allowNonPublicAccess = true", span="1589-1589", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n659 [label="allowNonPublicAccess = true", span="1594-1594", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n661 [label="allowNonPublicAccess = true", span="1598-1598", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)"];
n667 [label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, ReflectionUtils.EmptyTypes)", span="1604-1604", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)"];
n668 [label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="1606-1606", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)"];
n670 [label="MethodCall<object, object> shouldSerializeCall =\r\n                JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(shouldSerializeMethod)", span="1611-1612", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)"];
n669 [label="return null;", span="1608-1608", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)"];
n671 [label="return o => (bool)shouldSerializeCall(o);", span="1614-1614", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)"];
n674 [label="(bool)shouldSerializeCall(o)", span="1614-1614", cluster="lambda expression"];
n672 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1602-1602", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)"];
n673 [label="Entry lambda expression", span="1614-1614", cluster="lambda expression"];
n675 [label="Exit lambda expression", span="1614-1614", cluster="lambda expression"];
n676 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1617-1617", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)"];
n677 [label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix, BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)", span="1619-1619", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)"];
n679 [label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix, BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)", span="1622-1622", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)"];
n683 [label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="1632-1632", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)"];
n684 [label="ReflectionUtils.CanSetMemberValue(specifiedMember, allowNonPublicAccess, false)", span="1634-1634", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)"];
n685 [label="property.SetIsSpecified = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(specifiedMember)", span="1636-1636", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)"];
n678 [label="specifiedMember == null", span="1620-1620", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)"];
n687 [label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)"];
n680 [label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", span="1625-1625", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)"];
n682 [label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="1630-1630", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)"];
n688 [label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)"];
n681 [label="return;", span="1627-1627", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)"];
n690 [label="(bool)specifiedPropertyGet(o)", span="1632-1632", cluster="lambda expression"];
n686 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1617-1617", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)"];
n689 [label="Entry lambda expression", span="1632-1632", cluster="lambda expression"];
n691 [label="Exit lambda expression", span="1632-1632", cluster="lambda expression"];
n692 [label="NamingStrategy != null", span="1647-1647", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)"];
n693 [label="return NamingStrategy.GetPropertyName(propertyName, false);", span="1649-1649", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)"];
n694 [label="return propertyName;", span="1652-1652", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)"];
n695 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1645-1645", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)"];
n696 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", span="1660-1660", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)"];
n697 [label="NamingStrategy != null", span="1662-1662", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)"];
n698 [label="return NamingStrategy.GetExtensionDataName(extensionDataName);", span="1664-1664", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)"];
n699 [label="return extensionDataName;", span="1667-1667", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)"];
n700 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", span="1660-1660", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)"];
n701 [label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName(string)", span="72-72", cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName(string)"];
n702 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1675-1675", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)"];
n703 [label="NamingStrategy != null", span="1677-1677", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)"];
n704 [label="return NamingStrategy.GetDictionaryKey(dictionaryKey);", span="1679-1679", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)"];
n705 [label="return ResolvePropertyName(dictionaryKey);", span="1682-1682", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)"];
n706 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1675-1675", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)"];
n707 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1690-1690", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)"];
n708 [label="return ResolvePropertyName(propertyName);", span="1694-1694", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)"];
n709 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1690-1690", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)"];
d90 [label="Array.IndexOf(BlacklistedTypeNames, objectType.FullName) != -1", span="401-401", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", color=green, community=0];
d89 [label="SetExtensionDataDelegates(contract, extensionDataMember)", span="396-396", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
d88 [label="extensionDataMember != null", span="394-394", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)"];
d91 [label="contract.OnSerializingCallbacks.Add(ThrowUnableToSerializeError)", span="403-403", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", color=green, community=0];
d109 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)"];
d115 [label="throw new JsonSerializationException(''Unable to serialize instance of '{0}'.''.FormatWith(CultureInfo.InvariantCulture, o.GetType()));", span="411-411", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ThrowUnableToSerializeError(object, System.Runtime.Serialization.StreamingContext)", color=green, community=0];
d114 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ThrowUnableToSerializeError(object, System.Runtime.Serialization.StreamingContext)", span="409-409", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ThrowUnableToSerializeError(object, System.Runtime.Serialization.StreamingContext)"];
d116 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ThrowUnableToSerializeError(object, System.Runtime.Serialization.StreamingContext)", span="409-409", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ThrowUnableToSerializeError(object, System.Runtime.Serialization.StreamingContext)"];
d118 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
m0_371 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="689-689", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="DemoTests.cs"];
m0_50 [label="string j = JsonConvert.SerializeObject(roles, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                TraceWriter = traceWriter\r\n            })", span="201-205", cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics()", file="DemoTests.cs"];
m0_211 [label="Type t = ReflectionUtils.EnsureNotNullableType(objectType)", span="489-489", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_212 [label="JsonConvert.IsJsonPrimitiveType(t)", span="491-491", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_213 [label="return CreatePrimitiveContract(t);", span="492-492", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_214 [label="JsonTypeReflector.GetJsonObjectAttribute(t) != null", span="494-494", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_215 [label="return CreateObjectContract(t);", span="495-495", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_216 [label="JsonTypeReflector.GetJsonArrayAttribute(t) != null", span="497-497", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_217 [label="return CreateArrayContract(t);", span="498-498", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_218 [label="t.IsSubclassOf(typeof(JToken))", span="500-500", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_219 [label="return CreateLinqContract(t);", span="501-501", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_220 [label="CollectionUtils.IsDictionaryType(t)", span="503-503", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_221 [label="return CreateDictionaryContract(t);", span="504-504", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_222 [label="typeof(IEnumerable).IsAssignableFrom(t)", span="506-506", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_223 [label="return CreateArrayContract(t);", span="507-507", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_224 [label="CanConvertToString(t)", span="509-509", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_225 [label="return CreateStringContract(t);", span="510-510", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_226 [label="typeof(ISerializable).IsAssignableFrom(t)", span="513-513", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_227 [label="return CreateISerializableContract(t);", span="514-514", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_228 [label="typeof(IDynamicMetaObjectProvider).IsAssignableFrom(t)", span="518-518", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_229 [label="return CreateDynamicContract(t);", span="519-519", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_230 [label="return CreateObjectContract(t);", span="522-522", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_231 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="487-487", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DemoTests.cs"];
m0_198 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="458-458", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DemoTests.cs"];
m0_199 [label="JsonDynamicContract contract = new JsonDynamicContract(objectType)", span="460-460", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DemoTests.cs"];
m0_201 [label="contract.Properties.AddRange(CreateProperties(objectType, MemberSerialization.OptOut))", span="463-463", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DemoTests.cs"];
m0_200 [label="InitializeContract(contract)", span="461-461", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DemoTests.cs"];
m0_202 [label="return contract;", span="465-465", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DemoTests.cs"];
m0_203 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="458-458", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DemoTests.cs"];
m0_346 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="572-572", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DemoTests.cs"];
m0_356 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])", file="DemoTests.cs"];
m0_74 [label="Exit Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", span="263-263", cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", file="DemoTests.cs"];
m0_105 [label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="57-57", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="DemoTests.cs"];
m0_152 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="DemoTests.cs"];
m0_122 [label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType);", span="305-305", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DemoTests.cs"];
m0_155 [label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="DemoTests.cs"];
m0_156 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", color=green, community=0, file="DemoTests.cs"];
m0_157 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="554-554", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_76 [label="Entry Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", span="294-294", cluster="Newtonsoft.Json.Tests.DemoTests.SerializeReferencesByValue()", file="DemoTests.cs"];
m0_109 [label="house.Bedrooms = 2", span="521-521", cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="DemoTests.cs"];
m0_18 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="145-145", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DemoTests.cs"];
m0_19 [label="DefaultMembersSearchFlags = BindingFlags.Public | BindingFlags.Instance", span="147-147", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DemoTests.cs"];
m0_20 [label="_sharedCache = shareCache", span="148-148", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DemoTests.cs"];
m0_21 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="145-145", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DemoTests.cs"];
m0_116 [label="JObject o1 = JObject.Parse(@''{\r\n              'FirstName': 'John',\r\n              'LastName': 'Smith',\r\n              'Enabled': false,\r\n              'Roles': [ 'User' ]\r\n            }'')", span="555-560", cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", file="DemoTests.cs"];
m0_110 [label="house.FloorArea = 100m", span="522-522", cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="DemoTests.cs"];
m0_111 [label="house.BuildDate = new DateTime(1890, 1, 1)", span="523-523", cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="DemoTests.cs"];
m0_112 [label="string json = JsonConvert.SerializeObject(house, Formatting.Indented)", span="525-525", cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="DemoTests.cs"];
m0_113 [label="Exit Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", span="517-517", cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="DemoTests.cs"];
m0_114 [label="Entry Newtonsoft.Json.Tests.DemoTests.House3.House3()", span="468-468", cluster="Newtonsoft.Json.Tests.DemoTests.House3.House3()", file="DemoTests.cs"];
m0_115 [label="Entry Newtonsoft.Json.Tests.DemoTests.MergeJson()", span="553-553", cluster="Newtonsoft.Json.Tests.DemoTests.MergeJson()", file="DemoTests.cs"];
m0_191 [label="Entry Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", span="49-49", cluster="Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", file="DemoTests.cs"];
m0_16 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="131-131", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DemoTests.cs"];
m0_17 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="131-131", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DemoTests.cs"];
m0_4 [label="HtmlColor r2 = JsonConvert.DeserializeObject<HtmlColor>(json, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                Converters = { new HtmlColorConverter() }\r\n            })", span="87-91", cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DemoTests.cs"];
m0_5 [label="Assert.AreEqual(255, r2.Red)", span="92-92", cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DemoTests.cs"];
m0_6 [label="Assert.AreEqual(0, r2.Green)", span="93-93", cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DemoTests.cs"];
m0_149 [label="contract.OnError = method", span="372-372", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DemoTests.cs"];
m0_87 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="DemoTests.cs"];
m0_93 [label="return true;", span="261-261", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_89 [label="PropertyInfo propertyInfo = memberInfo as PropertyInfo", span="254-254", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_92 [label="return false;", span="258-258", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_94 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="252-252", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_88 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="252-252", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_90 [label="propertyInfo != null", span="255-255", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_91 [label="propertyInfo.PropertyType.IsGenericType && propertyInfo.PropertyType.GetGenericTypeDefinition().FullName == ''System.Data.Objects.DataClasses.EntityReference`1''", span="257-257", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_95 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="DemoTests.cs"];
m0_150 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="311-311", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DemoTests.cs"];
m0_106 [label="Entry Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", span="517-517", cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="DemoTests.cs"];
m0_125 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="419-419", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="DemoTests.cs"];
m0_127 [label="IList<int> value", span="598-598", cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", file="DemoTests.cs"];
m0_128 [label="JsonSerializer serializer = new JsonSerializer()", span="600-600", cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", file="DemoTests.cs"];
m0_130 [label="reader.ArrayPool = JsonArrayPool.Instance", span="603-603", cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", file="DemoTests.cs"];
m0_131 [label="value = serializer.Deserialize<IList<int>>(reader)", span="605-605", cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", file="DemoTests.cs"];
m0_132 [label="Assert.AreEqual(4, value.Count)", span="608-608", cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", file="DemoTests.cs"];
m0_133 [label="Exit Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", span="596-596", cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", file="DemoTests.cs"];
m0_134 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="557-557", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="DemoTests.cs"];
m0_135 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="82-82", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="DemoTests.cs"];
m0_136 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="DemoTests.cs"];
m0_140 [label="TextReader textReader = new StreamReader(new FileStream(ResolvePath(@''large.json''), FileMode.Open, FileAccess.Read, FileShare.Read, 4096, true))", span="619-619", cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", file="DemoTests.cs", color=green, community=0];
m0_141 [label="largeJson = await JArray.LoadAsync(new JsonTextReader(textReader))", span="621-621", cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", file="DemoTests.cs", color=green, community=0];
m0_142 [label="JToken user = largeJson.SelectToken(''$[?(@.name == 'Woodard Caldwell')]'')", span="624-624", cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", file="DemoTests.cs", color=green, community=0];
m0_143 [label="user[''isActive''] = false", span="625-625", cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", file="DemoTests.cs", color=green, community=0];
m0_144 [label="TextWriter textWriter = new StreamWriter(new FileStream(ResolvePath(@''large.json''), FileMode.Open, FileAccess.Write, FileShare.Write, 4096, true))", span="628-628", cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", file="DemoTests.cs", color=green, community=0];
m0_145 [label="await largeJson.WriteToAsync(new JsonTextWriter(textWriter))", span="630-630", cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", file="DemoTests.cs", color=green, community=0];
m0_146 [label="Exit Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", span="614-614", cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", file="DemoTests.cs"];
m0_147 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="DemoTests.cs"];
m0_148 [label="Entry System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, int, bool)", span="0-0", cluster="System.IO.FileStream.FileStream(string, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare, int, bool)", file="DemoTests.cs"];
m0_126 [label="Entry Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", span="596-596", cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", file="DemoTests.cs"];
m0_129 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1,2,3,4]''))", span="601-601", cluster="Newtonsoft.Json.Tests.DemoTests.ArrayPooling()", file="DemoTests.cs"];
m0_137 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="865-865", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="DemoTests.cs"];
m0_139 [label="JArray largeJson", span="616-616", cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", file="DemoTests.cs", color=green, community=0];
m0_138 [label="Entry Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", span="614-614", cluster="Newtonsoft.Json.Tests.DemoTests.AsyncDemo()", file="DemoTests.cs"];
m0_47 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DemoTests.cs"];
m0_48 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DemoTests.cs"];
m0_49 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DemoTests.cs"];
m0_51 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="DemoTests.cs"];
m0_52 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DemoTests.cs"];
m0_296 [label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="46-46", cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_73 [label="JsonConvert.PopulateObject(j, s)", span="272-272", cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", file="DemoTests.cs"];
m0_8 [label="Assert.AreEqual(@''''''#FF0000'''''', json)", span="96-96", cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DemoTests.cs"];
m0_9 [label="Exit Newtonsoft.Json.Tests.DemoTests.JsonConverter()", span="61-61", cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DemoTests.cs"];
m0_11 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="447-447", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DemoTests.cs"];
m0_10 [label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColor.HtmlColor()", span="53-53", cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColor.HtmlColor()", file="DemoTests.cs"];
m0_12 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="582-582", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="DemoTests.cs"];
m0_234 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", span="84-84", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", file="DemoTests.cs"];
m0_153 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="DemoTests.cs"];
m0_72 [label="string j = @''{\r\n              'Name': 'Serialize All The Things'\r\n            }''", span="268-270", cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", file="DemoTests.cs"];
m0_343 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="32-32", cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", file="DemoTests.cs"];
m0_268 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="DemoTests.cs"];
m0_96 [label="Entry Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", span="403-403", cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="DemoTests.cs"];
m0_97 [label="string json = @''{\r\n  '$id': '1',\r\n  '$type': 'Newtonsoft.Json.Tests.DemoTests+Manager, Newtonsoft.Json.Tests',\r\n  'Reportees': [\r\n    {\r\n      '$id': '2',\r\n      '$type': 'Newtonsoft.Json.Tests.DemoTests+Employee, Newtonsoft.Json.Tests',\r\n      'Name': 'Arnie Admin'\r\n    },\r\n    {\r\n      '$id': '3',\r\n      '$type': 'Newtonsoft.Json.Tests.DemoTests+Manager, Newtonsoft.Json.Tests',\r\n      'Reportees': [\r\n        {\r\n          '$ref': '2'\r\n        }\r\n      ],\r\n      'Name': 'Susan Supervisor'\r\n    }\r\n  ],\r\n  'Name': 'Mike Manager'\r\n}''", span="405-426", cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="DemoTests.cs"];
m0_99 [label="Manager mike = (Manager)e", span="436-436", cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="DemoTests.cs"];
m0_102 [label="Assert.IsTrue(ReferenceEquals(mike.Reportees[0], susan.Reportees[0]))", span="442-442", cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="DemoTests.cs"];
m0_98 [label="var e = JsonConvert.DeserializeObject<Employee>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="428-432", cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="DemoTests.cs"];
m0_100 [label="Manager susan = (Manager)mike.Reportees[1]", span="437-437", cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="DemoTests.cs"];
m0_101 [label="Object.ReferenceEquals(mike.Reportees[0], susan.Reportees[0])", span="439-439", cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="DemoTests.cs"];
m0_103 [label="Exit Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", span="403-403", cluster="Newtonsoft.Json.Tests.DemoTests.RoundtripTypesAndReferences()", file="DemoTests.cs"];
m0_104 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="DemoTests.cs"];
m0_197 [label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27", cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="DemoTests.cs"];
m0_270 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="DemoTests.cs"];
m0_181 [label="Entry Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", span="16-16", cluster="Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", file="DemoTests.cs"];
m0_289 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="65-65", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="DemoTests.cs"];
m0_233 [label="Entry Newtonsoft.Json.JsonConvert.IsJsonPrimitiveType(System.Type)", span="484-484", cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitiveType(System.Type)", file="DemoTests.cs"];
m0_176 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="421-421", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DemoTests.cs"];
m0_177 [label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="423-423", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DemoTests.cs"];
m0_178 [label="InitializeContract(contract)", span="424-424", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DemoTests.cs"];
m0_179 [label="return contract;", span="426-426", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DemoTests.cs"];
m0_180 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="421-421", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DemoTests.cs"];
m0_83 [label="Exit lambda expression", span="213-213", cluster="lambda expression", file="DemoTests.cs"];
m0_78 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="DemoTests.cs"];
m0_79 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="239-239", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="DemoTests.cs"];
m0_82 [label="!ReflectionUtils.IsIndexedProperty(m)", span="213-213", cluster="lambda expression", file="DemoTests.cs"];
m0_77 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="DemoTests.cs"];
m0_80 [label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="267-267", cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="DemoTests.cs"];
m0_81 [label="Entry lambda expression", span="213-213", cluster="lambda expression", file="DemoTests.cs"];
m0_84 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="485-485", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_377 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="DemoTests.cs"];
m0_182 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="435-435", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DemoTests.cs"];
m0_183 [label="JsonISerializableContract contract = new JsonISerializableContract(objectType)", span="437-437", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DemoTests.cs"];
m0_185 [label="ConstructorInfo constructorInfo = objectType.GetConstructor(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance, null, new [] {typeof (SerializationInfo), typeof (StreamingContext)}, null)", span="440-440", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DemoTests.cs"];
m0_184 [label="InitializeContract(contract)", span="438-438", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DemoTests.cs"];
m0_188 [label="contract.ISerializableCreator = (args => methodCall(null, args))", span="445-445", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DemoTests.cs"];
m0_189 [label="return contract;", span="448-448", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DemoTests.cs"];
m0_186 [label="constructorInfo != null", span="441-441", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DemoTests.cs"];
m0_187 [label="MethodCall<object, object> methodCall = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(constructorInfo)", span="443-443", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DemoTests.cs"];
m0_190 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="435-435", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DemoTests.cs"];
m0_162 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="382-382", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DemoTests.cs"];
m0_120 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", span="133-133", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="DemoTests.cs"];
m0_119 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="298-298", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DemoTests.cs"];
m0_118 [label="return JsonTypeReflector.GetJsonConverter(objectType, objectType);", span="300-300", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DemoTests.cs"];
m0_117 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="298-298", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DemoTests.cs"];
m0_121 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="303-303", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DemoTests.cs"];
m0_53 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="30-30", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="DemoTests.cs"];
m0_54 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", span="80-80", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", file="DemoTests.cs"];
m0_55 [label="Entry Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", span="218-218", cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", file="DemoTests.cs"];
m0_56 [label="var s = new Session\r\n            {\r\n                Name = ''Serialize All The Things'',\r\n                Date = new DateTime(2014, 6, 4, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="220-224", cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", file="DemoTests.cs"];
m0_67 [label="Assert.AreEqual(''Serialize All The Things'', s.Name)", span="259-259", cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", file="DemoTests.cs"];
m0_64 [label="Entry Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", span="245-245", cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", file="DemoTests.cs"];
m0_60 [label="Entry Newtonsoft.Json.Tests.DemoTests.Session.Session()", span="106-106", cluster="Newtonsoft.Json.Tests.DemoTests.Session.Session()", file="DemoTests.cs"];
m0_57 [label="string j = JsonConvert.SerializeObject(s, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                Converters = { new JavaScriptDateTimeConverter() }\r\n            })", span="226-230", cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", file="DemoTests.cs"];
m0_58 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Serialize All The Things'''',\r\n  ''''Date'''': new Date(\r\n    1401840000000\r\n  )\r\n}'', j)", span="236-241", cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", file="DemoTests.cs"];
m0_61 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DemoTests.cs"];
m0_63 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="341-341", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="DemoTests.cs"];
m0_65 [label="string j = @''{\r\n              'Name': 'Serialize All The Things',\r\n              'Date': new Date(1401796800000)\r\n            }''", span="247-250", cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", file="DemoTests.cs"];
m0_68 [label="Exit Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", span="245-245", cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", file="DemoTests.cs"];
m0_69 [label="Entry Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", span="263-263", cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", file="DemoTests.cs"];
m0_59 [label="Exit Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", span="218-218", cluster="Newtonsoft.Json.Tests.DemoTests.SerializationBasics2()", file="DemoTests.cs"];
m0_66 [label="var s = JsonConvert.DeserializeObject<Session>(j, new JsonSerializerSettings\r\n            {\r\n                Converters = { new JavaScriptDateTimeConverter() }\r\n            })", span="252-255", cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics1()", file="DemoTests.cs"];
m0_62 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="DemoTests.cs"];
m0_70 [label="Session s = new Session()", span="265-265", cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", file="DemoTests.cs"];
m0_210 [label="Entry Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", span="41-41", cluster="Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", file="DemoTests.cs"];
m0_28 [label=_sharedCache, span="161-161", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="DemoTests.cs"];
m0_347 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", span="605-605", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="DemoTests.cs"];
m0_249 [label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="DemoTests.cs"];
m0_232 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="171-171", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="DemoTests.cs"];
m0_46 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="172-172", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DemoTests.cs"];
m0_32 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="172-172", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DemoTests.cs"];
m0_33 [label="type == null", span="174-174", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DemoTests.cs"];
m0_36 [label="string roleJson = JsonConvert.SerializeObject(roles, Formatting.Indented)", span="163-163", cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="DemoTests.cs"];
m0_39 [label="City c = new City { Name = ''Oslo'', Population = 650000 }", span="181-181", cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="DemoTests.cs"];
m0_34 [label="Entry Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", span="155-155", cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="DemoTests.cs"];
m0_35 [label="IList<string> roles = new List<string>\r\n            {\r\n                ''User'',\r\n                ''Admin''\r\n            }", span="157-161", cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="DemoTests.cs"];
m0_37 [label="IDictionary<DateTime, int> dailyRegistrations = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2014, 6, 1), 23 },\r\n                { new DateTime(2014, 6, 2), 50 }\r\n            }", span="169-173", cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="DemoTests.cs"];
m0_38 [label="string regJson = JsonConvert.SerializeObject(dailyRegistrations, Formatting.Indented)", span="175-175", cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="DemoTests.cs"];
m0_43 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DemoTests.cs"];
m0_45 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="DemoTests.cs"];
m0_40 [label="string cityJson = JsonConvert.SerializeObject(c, Formatting.Indented)", span="183-183", cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="DemoTests.cs"];
m0_41 [label="Exit Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", span="155-155", cluster="Newtonsoft.Json.Tests.DemoTests.SerializationGuide()", file="DemoTests.cs"];
m0_42 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="DemoTests.cs"];
m0_44 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DemoTests.cs"];
m0_75 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="DemoTests.cs"];
m0_29 [label="_sharedContractCache = cache", span="162-162", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="DemoTests.cs"];
m0_158 [label="Entry Unk.Rent", span="", cluster="Unk.Rent", file="DemoTests.cs"];
m0_159 [label="Entry Newtonsoft.Json.Tests.JsonArrayPool.Return(char[])", span="647-647", cluster="Newtonsoft.Json.Tests.JsonArrayPool.Return(char[])", file="DemoTests.cs"];
m0_160 [label="ArrayPool<char>.Shared.Return(array)", span="650-650", cluster="Newtonsoft.Json.Tests.JsonArrayPool.Return(char[])", file="DemoTests.cs", color=green, community=0];
m0_161 [label="Exit Newtonsoft.Json.Tests.JsonArrayPool.Return(char[])", span="647-647", cluster="Newtonsoft.Json.Tests.JsonArrayPool.Return(char[])", file="DemoTests.cs"];
m0_286 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="DemoTests.cs"];
m0_205 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="474-474", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DemoTests.cs"];
m0_206 [label="JsonStringContract contract = new JsonStringContract(objectType)", span="476-476", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DemoTests.cs"];
m0_207 [label="InitializeContract(contract)", span="477-477", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DemoTests.cs"];
m0_208 [label="return contract;", span="479-479", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DemoTests.cs"];
m0_209 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="474-474", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DemoTests.cs"];
m0_71 [label="s.Date = new DateTime(2014, 6, 4)", span="266-266", cluster="Newtonsoft.Json.Tests.DemoTests.DeserializationBasics2()", file="DemoTests.cs"];
m0_235 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", span="89-89", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", file="DemoTests.cs"];
m0_288 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="641-641", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_297 [label="JsonProperty property = new JsonProperty()", span="643-643", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_298 [label="property.PropertyType = ReflectionUtils.GetMemberUnderlyingType(member)", span="644-644", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_299 [label="property.ValueProvider = CreateMemberValueProvider(member)", span="645-645", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_300 [label="property.Converter = JsonTypeReflector.GetJsonConverter(member, property.PropertyType)", span="649-649", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_301 [label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(member.DeclaringType)", span="652-652", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_304 [label="dataMemberAttribute = JsonTypeReflector.GetAttribute<DataMemberAttribute>(member)", span="656-656", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_306 [label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(member)", span="661-661", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_307 [label="bool hasIgnoreAttribute = (JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(member) != null)", span="662-662", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_313 [label="mappedName = member.Name", span="672-672", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_320 [label="property.Ignored = (hasIgnoreAttribute ||\r\n                      (memberSerialization == MemberSerialization.OptIn\r\n                       && propertyAttribute == null\r\n#if !PocketPC && !NET20\r\n                       && dataMemberAttribute == null\r\n#endif\r\n))", span="685-691", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_328 [label="property.Readable = ReflectionUtils.CanReadMemberValue(member, allowNonPublicAccess)", span="703-703", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_329 [label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess)", span="704-704", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_330 [label="property.MemberConverter = JsonTypeReflector.GetJsonConverter(member, ReflectionUtils.GetMemberUnderlyingType(member))", span="706-706", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_331 [label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(member)", span="708-708", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_339 [label="property.ShouldSerialize = CreateShouldSerializeTest(member)", span="718-718", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_340 [label="SetIsSpecifiedActions(property, member)", span="720-720", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_314 [label="property.PropertyName = ResolvePropertyName(mappedName)", span="674-674", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_316 [label="property.Required = propertyAttribute.Required", span="677-677", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_318 [label="property.Required = (dataMemberAttribute.IsRequired) ? Required.AllowNull : Required.Default", span="680-680", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_319 [label="property.Required = Required.Default", span="683-683", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_332 [label="property.DefaultValue = (defaultValueAttribute != null) ? defaultValueAttribute.Value : null", span="709-709", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_333 [label="property.NullValueHandling = (propertyAttribute != null) ? propertyAttribute._nullValueHandling : null", span="711-711", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_334 [label="property.DefaultValueHandling = (propertyAttribute != null) ? propertyAttribute._defaultValueHandling : null", span="712-712", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_335 [label="property.ReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._referenceLoopHandling : null", span="713-713", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_336 [label="property.ObjectCreationHandling = (propertyAttribute != null) ? propertyAttribute._objectCreationHandling : null", span="714-714", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_337 [label="property.TypeNameHandling = (propertyAttribute != null) ? propertyAttribute._typeNameHandling : null", span="715-715", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_338 [label="property.IsReference = (propertyAttribute != null) ? propertyAttribute._isReference : null", span="716-716", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_341 [label="return property;", span="722-722", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_302 [label="DataMemberAttribute dataMemberAttribute", span="654-654", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_303 [label="dataContractAttribute != null", span="655-655", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_305 [label="dataMemberAttribute = null", span="658-658", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_311 [label="dataMemberAttribute != null && dataMemberAttribute.Name != null", span="668-668", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_312 [label="mappedName = dataMemberAttribute.Name", span="669-669", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_317 [label="dataMemberAttribute != null", span="679-679", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_326 [label="dataMemberAttribute != null", span="699-699", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_309 [label="propertyAttribute != null && propertyAttribute.PropertyName != null", span="665-665", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_310 [label="mappedName = propertyAttribute.PropertyName", span="666-666", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_315 [label="propertyAttribute != null", span="676-676", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_324 [label="propertyAttribute != null", span="696-696", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_308 [label="string mappedName", span="664-664", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_321 [label="bool allowNonPublicAccess = false", span="693-693", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_322 [label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="694-694", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_323 [label="allowNonPublicAccess = true", span="695-695", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_325 [label="allowNonPublicAccess = true", span="697-697", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_327 [label="allowNonPublicAccess = true", span="700-700", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_342 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="641-641", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_287 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="45-45", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="DemoTests.cs"];
m0_373 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="46-46", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_14 [label="return (_resolverType == other._resolverType && _contractType == other._contractType);", span="71-71", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", file="DemoTests.cs"];
m0_204 [label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", span="49-49", cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", file="DemoTests.cs"];
m0_123 [label="Entry Newtonsoft.Json.Linq.JsonMergeSettings.JsonMergeSettings()", span="7-7", cluster="Newtonsoft.Json.Linq.JsonMergeSettings.JsonMergeSettings()", file="DemoTests.cs"];
m0_372 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="33-33", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_0 [label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="50-50", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DemoTests.cs"];
m0_7 [label="Entry System.Type.GetHashCode()", span="0-0", cluster="System.Type.GetHashCode()", file="DemoTests.cs"];
m0_3 [label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="50-50", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DemoTests.cs"];
m0_1 [label="_resolverType = resolverType", span="52-52", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DemoTests.cs"];
m0_2 [label="_contractType = contractType", span="53-53", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DemoTests.cs"];
m0_248 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="490-490", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="DemoTests.cs"];
m0_269 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="587-587", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DemoTests.cs"];
m0_271 [label="type.IsGenericTypeDefinition || !type.ContainsGenericParameters", span="589-589", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DemoTests.cs"];
m0_272 [label="return type.FullName;", span="590-590", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DemoTests.cs"];
m0_273 [label="return string.Format(CultureInfo.InvariantCulture, ''{0}.{1}'', new object[] { type.Namespace, type.Name });", span="592-592", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DemoTests.cs"];
m0_274 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="587-587", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DemoTests.cs"];
m0_13 [label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.HtmlColorConverter()", span="112-112", cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.HtmlColorConverter()", file="DemoTests.cs"];
m0_15 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="DemoTests.cs"];
m0_107 [label="var house = new House3()", span="519-519", cluster="Newtonsoft.Json.Tests.DemoTests.SerializeAttributes()", file="DemoTests.cs"];
m0_154 [label="Entry Unk.WriteToAsync", span="", cluster="Unk.WriteToAsync", file="DemoTests.cs"];
m0_85 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="DemoTests.cs"];
m0_348 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="725-725", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_350 [label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, new Type[0])", span="727-727", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_351 [label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="729-729", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_353 [label="MethodCall<object, object> shouldSerializeCall =\r\n        JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(shouldSerializeMethod)", span="732-733", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_352 [label="return null;", span="730-730", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_354 [label="return o => (bool) shouldSerializeCall(o);", span="735-735", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_355 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="725-725", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_27 [label="Exit Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="132-132", cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DemoTests.cs"];
m0_30 [label="Entry System.Convert.ToInt32(string, int)", span="0-0", cluster="System.Convert.ToInt32(string, int)", file="DemoTests.cs"];
m0_31 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", span="159-159", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="DemoTests.cs"];
m0_151 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", span="79-79", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", file="DemoTests.cs"];
m0_164 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="395-395", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DemoTests.cs"];
m0_165 [label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="397-397", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DemoTests.cs"];
m0_166 [label="InitializeContract(contract)", span="398-398", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DemoTests.cs"];
m0_167 [label="return contract;", span="400-400", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DemoTests.cs"];
m0_168 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="395-395", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DemoTests.cs"];
m0_193 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="59-59", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="DemoTests.cs"];
m0_86 [label="!ReflectionUtils.IsIndexedProperty(m)", span="215-215", cluster="lambda expression", file="DemoTests.cs"];
m0_345 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="762-762", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DemoTests.cs"];
m0_378 [label="return propertyName;", span="764-764", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DemoTests.cs"];
m0_379 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="762-762", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DemoTests.cs"];
m0_238 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="DemoTests.cs"];
m0_192 [label="Entry System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", span="0-0", cluster="System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", file="DemoTests.cs"];
m0_374 [label="Entry lambda expression", span="753-753", cluster="lambda expression", file="DemoTests.cs"];
m0_195 [label="methodCall(null, args)", span="445-445", cluster="lambda expression", file="DemoTests.cs"];
m0_194 [label="Entry lambda expression", span="445-445", cluster="lambda expression", file="DemoTests.cs"];
m0_196 [label="Exit lambda expression", span="445-445", cluster="lambda expression", file="DemoTests.cs"];
m0_358 [label="(bool) shouldSerializeCall(o)", span="735-735", cluster="lambda expression", file="DemoTests.cs"];
m0_357 [label="Entry lambda expression", span="735-735", cluster="lambda expression", file="DemoTests.cs"];
m0_359 [label="Exit lambda expression", span="735-735", cluster="lambda expression", file="DemoTests.cs"];
m0_375 [label="(bool)specifiedPropertyGet(o)", span="753-753", cluster="lambda expression", file="DemoTests.cs"];
m0_376 [label="Exit lambda expression", span="753-753", cluster="lambda expression", file="DemoTests.cs"];
m0_169 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="50-50", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="DemoTests.cs"];
m0_124 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="60-60", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="DemoTests.cs"];
m0_349 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", span="738-738", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_360 [label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="740-740", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_362 [label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="742-742", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_366 [label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="753-753", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_367 [label="property.SetIsSpecified = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(specifiedMember)", span="754-754", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_361 [label="specifiedMember == null", span="741-741", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_363 [label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)\r\n        || (ReflectionUtils.GetAttribute<XmlIgnoreAttribute>(specifiedMember) != null\r\n        && ReflectionUtils.GetAttribute<JsonIgnoreAttribute>(specifiedMember) != null)", span="744-746", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_365 [label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="751-751", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_364 [label="return;", span="748-748", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_368 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", span="738-738", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_370 [label="Entry System.Type.GetField(string)", span="0-0", cluster="System.Type.GetField(string)", file="DemoTests.cs"];
m0_170 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="408-408", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DemoTests.cs"];
m0_171 [label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="410-410", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DemoTests.cs"];
m0_172 [label="InitializeContract(contract)", span="411-411", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DemoTests.cs"];
m0_173 [label="return contract;", span="413-413", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DemoTests.cs"];
m0_174 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="408-408", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DemoTests.cs"];
m0_237 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="379-379", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="DemoTests.cs"];
m0_239 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="525-525", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DemoTests.cs"];
m0_240 [label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="528-528", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DemoTests.cs"];
m0_244 [label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="543-543", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DemoTests.cs"];
m0_241 [label="converter != null\r\n#if !SILVERLIGHT\r\n && !(converter is ComponentConverter)\r\n && !(converter is ReferenceConverter)\r\n#endif\r\n && converter.GetType() != typeof(TypeConverter)", span="531-536", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DemoTests.cs"];
m0_242 [label="converter.CanConvertTo(typeof(string))", span="538-538", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DemoTests.cs"];
m0_243 [label="return true;", span="539-539", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DemoTests.cs"];
m0_245 [label="return true;", span="544-544", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DemoTests.cs"];
m0_246 [label="return false;", span="551-551", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DemoTests.cs"];
m0_247 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="525-525", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DemoTests.cs"];
m0_23 [label=_sharedCache, span="153-153", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DemoTests.cs"];
m0_26 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="151-151", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DemoTests.cs"];
m0_25 [label="return _instanceContractCache;", span="156-156", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DemoTests.cs"];
m0_24 [label="return _sharedContractCache;", span="154-154", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DemoTests.cs"];
m0_236 [label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0", cluster="System.Type.IsSubclassOf(System.Type)", file="DemoTests.cs"];
m0_250 [label="!method.IsDefined(attributeType, false)", span="556-556", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_252 [label="currentCallback != null", span="559-559", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_253 [label="throw new Exception(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, method, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="560-560", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_254 [label="prevAttributeType != null", span="562-562", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_255 [label="throw new Exception(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, prevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="563-563", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_256 [label="method.IsVirtual", span="565-565", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_257 [label="throw new Exception(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, method, GetClrTypeFullName(method.DeclaringType), attributeType));", span="566-566", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_258 [label="method.ReturnType != typeof(void)", span="568-568", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_259 [label="throw new Exception(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method));", span="569-569", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_260 [label="attributeType == typeof(OnErrorAttribute)", span="571-571", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_261 [label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != typeof(ErrorContext)", span="573-573", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_262 [label="throw new Exception(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof (StreamingContext), typeof(ErrorContext)));", span="574-574", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_263 [label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="578-578", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_264 [label="throw new Exception(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="579-579", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_265 [label="prevAttributeType = attributeType", span="582-582", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_251 [label="return false;", span="557-557", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_266 [label="return true;", span="584-584", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_267 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="554-554", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="DemoTests.cs"];
m0_295 [label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="49-49", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_290 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="625-625", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_291 [label=DynamicCodeGeneration, span="628-628", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_292 [label="return new DynamicValueProvider(member);", span="629-629", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_293 [label="return new ReflectionValueProvider(member);", span="632-632", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_294 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="625-625", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_175 [label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="DemoTests.cs"];
m0_108 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="601-601", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_22 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="151-151", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DemoTests.cs"];
m0_275 [label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0", cluster="string.Format(System.IFormatProvider, string, params object[])", file="DemoTests.cs"];
m0_344 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="461-461", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DemoTests.cs"];
m0_369 [label="Entry System.Type.GetProperty(string)", span="0-0", cluster="System.Type.GetProperty(string)", file="DemoTests.cs"];
m0_276 [label="List<MemberInfo> members = GetSerializableMembers(type)", span="603-603", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_279 [label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="607-607", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_281 [label="JsonProperty property = CreateProperty(member, memberSerialization)", span="611-611", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_277 [label="members == null", span="604-604", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_280 [label=members, span="609-609", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_278 [label="throw new JsonSerializationException(''Null collection of seralizable members returned.'');", span="605-605", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_283 [label="properties.AddProperty(property)", span="614-614", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_284 [label="return properties;", span="617-617", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_282 [label="property != null", span="613-613", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_285 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="601-601", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DemoTests.cs"];
m0_380 [label="out Newtonsoft.Json.Serialization.ResolverContractKey", span="", file="DemoTests.cs"];
m0_381 [label="Newtonsoft.Json.Serialization.ResolverContractKey", span="", file="DemoTests.cs"];
m0_382 [label="ref Newtonsoft.Json.Serialization.ResolverContractKey", span="", file="DemoTests.cs"];
m0_383 [label="Newtonsoft.Json.Serialization.DefaultContractResolver", span="", file="DemoTests.cs"];
m0_384 [label=methodCall, span="", file="DemoTests.cs"];
m0_385 [label=shouldSerializeCall, span="", file="DemoTests.cs"];
m0_386 [label=specifiedPropertyGet, span="", file="DemoTests.cs"];
m1_8 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="Issue1353.cs"];
m1_12 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="Issue1353.cs"];
m1_0 [label="Entry Newtonsoft.Json.Tests.Issues.Issue1353.Test()", span="42-42", cluster="Newtonsoft.Json.Tests.Issues.Issue1353.Test()", file="Issue1353.cs"];
m1_1 [label="ConcurrentDictionary<string, string> d1 = new ConcurrentDictionary<string, string>()", span="44-44", cluster="Newtonsoft.Json.Tests.Issues.Issue1353.Test()", color=green, community=0, file="Issue1353.cs"];
m1_2 [label="d1.TryAdd(''key!'', ''value!'')", span="45-45", cluster="Newtonsoft.Json.Tests.Issues.Issue1353.Test()", color=green, community=0, file="Issue1353.cs"];
m1_3 [label="string json = JsonConvert.SerializeObject(d1, Formatting.Indented)", span="47-47", cluster="Newtonsoft.Json.Tests.Issues.Issue1353.Test()", color=green, community=0, file="Issue1353.cs"];
m1_4 [label="ConcurrentDictionary<string, string> d2 = JsonConvert.DeserializeObject<ConcurrentDictionary<string, string>>(json)", span="49-49", cluster="Newtonsoft.Json.Tests.Issues.Issue1353.Test()", color=green, community=0, file="Issue1353.cs"];
m1_5 [label="Assert.AreEqual(1, d2.Count)", span="51-51", cluster="Newtonsoft.Json.Tests.Issues.Issue1353.Test()", color=green, community=0, file="Issue1353.cs"];
m1_6 [label="Assert.AreEqual(''value!'', d2[''key!''])", span="52-52", cluster="Newtonsoft.Json.Tests.Issues.Issue1353.Test()", color=green, community=0, file="Issue1353.cs"];
m1_7 [label="Exit Newtonsoft.Json.Tests.Issues.Issue1353.Test()", span="42-42", cluster="Newtonsoft.Json.Tests.Issues.Issue1353.Test()", file="Issue1353.cs"];
m1_10 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="Issue1353.cs"];
m1_9 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="Issue1353.cs"];
m1_11 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="Issue1353.cs"];
m2_128 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="Issue1619.cs"];
m2_0 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", span="70-70", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", file="Issue1619.cs"];
m2_1 [label="object[] cases = (object[])FSharpUtils.GetUnionCases(null, t, null)", span="76-76", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", color=green, community=0, file="Issue1619.cs"];
m2_2 [label="object caseInfo = cases.First()", span="78-78", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", color=green, community=0, file="Issue1619.cs"];
m2_3 [label="Type unionType = (Type)FSharpUtils.GetUnionCaseInfoDeclaringType(caseInfo)", span="80-80", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", color=green, community=0, file="Issue1619.cs"];
m2_4 [label="return unionType;", span="81-81", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", color=green, community=0, file="Issue1619.cs"];
m2_5 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", span="70-70", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", file="Issue1619.cs"];
m2_112 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", span="229-229", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="Issue1619.cs"];
m2_125 [label="return (bool)FSharpUtils.IsUnion(null, objectType, null);", span="259-259", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="Issue1619.cs"];
m2_123 [label="!isFSharpType", span="256-256", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="Issue1619.cs"];
m2_113 [label="typeof(IEnumerable).IsAssignableFrom(objectType)", span="231-231", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="Issue1619.cs"];
m2_116 [label="attributes = objectType.GetCustomAttributes(true)", span="238-238", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="Issue1619.cs"];
m2_117 [label="bool isFSharpType = false", span="243-243", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="Issue1619.cs"];
m2_118 [label=attributes, span="244-244", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="Issue1619.cs"];
m2_122 [label="isFSharpType = true", span="251-251", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="Issue1619.cs"];
m2_124 [label="return false;", span="257-257", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="Issue1619.cs"];
m2_114 [label="return false;", span="232-232", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="Issue1619.cs"];
m2_115 [label="object[] attributes", span="236-236", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="Issue1619.cs"];
m2_120 [label="attributeType.FullName == ''Microsoft.FSharp.Core.CompilationMappingAttribute''", span="247-247", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="Issue1619.cs"];
m2_119 [label="Type attributeType = attribute.GetType()", span="246-246", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="Issue1619.cs"];
m2_121 [label="FSharpUtils.EnsureInitialized(attributeType.Assembly())", span="249-249", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="Issue1619.cs"];
m2_126 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", span="229-229", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="Issue1619.cs"];
m2_7 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="Issue1619.cs"];
m2_8 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Issue1619.cs"];
m2_49 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="Issue1619.cs"];
m2_103 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="Issue1619.cs"];
m2_129 [label="Entry System.Type.Assembly()", span="160-160", cluster="System.Type.Assembly()", file="Issue1619.cs"];
m2_25 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="Issue1619.cs"];
m2_134 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365", cluster="Newtonsoft.Json.JsonReader.Read()", file="Issue1619.cs"];
m2_54 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="Issue1619.cs"];
m2_28 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="114-114", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_30 [label="Type unionType = UnionTypeLookupCache.Get(value.GetType())", span="118-118", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_29 [label="DefaultContractResolver resolver = serializer.ContractResolver as DefaultContractResolver", span="116-116", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_31 [label="Union union = UnionCache.Get(unionType)", span="119-119", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_32 [label="int tag = (int)union.TagReader.Invoke(value)", span="121-121", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_34 [label="writer.WriteStartObject()", span="124-124", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_35 [label="writer.WritePropertyName((resolver != null) ? resolver.GetResolvedPropertyName(CasePropertyName) : CasePropertyName)", span="125-125", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_36 [label="writer.WriteValue(caseInfo.Name)", span="126-126", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_38 [label="object[] fields = (object[])caseInfo.FieldReader.Invoke(value)", span="129-129", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_39 [label="writer.WritePropertyName((resolver != null) ? resolver.GetResolvedPropertyName(FieldsPropertyName) : FieldsPropertyName)", span="131-131", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_40 [label="writer.WriteStartArray()", span="132-132", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_42 [label="serializer.Serialize(writer, field)", span="135-135", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_43 [label="writer.WriteEndArray()", span="137-137", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_44 [label="writer.WriteEndObject()", span="139-139", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_33 [label="UnionCase caseInfo = union.Cases.Single(c => c.Tag == tag)", span="122-122", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_37 [label="caseInfo.Fields != null && caseInfo.Fields.Length > 0", span="127-127", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_41 [label=fields, span="133-133", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_45 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="114-114", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_26 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.UnionCase.UnionCase()", span="54-54", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.UnionCase.UnionCase()", file="Issue1619.cs"];
m2_51 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1368-1368", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="Issue1619.cs"];
m2_55 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="860-860", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="Issue1619.cs"];
m2_108 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", span="1830-1830", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_27 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="Issue1619.cs"];
m2_102 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="Issue1619.cs"];
m2_53 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="819-819", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="Issue1619.cs"];
m2_101 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", span="262-262", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="Issue1619.cs"];
m2_131 [label="!reader.Read()", span="264-264", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="Issue1619.cs"];
m2_132 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when reading union.'');", span="265-265", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="Issue1619.cs"];
m2_133 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", span="262-262", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="Issue1619.cs"];
m2_57 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="Issue1619.cs"];
m2_52 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="Issue1619.cs"];
m2_47 [label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="50-50", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="Issue1619.cs"];
m2_48 [label="Entry Newtonsoft.Json.Utilities.FSharpFunction.Invoke(params object[])", span="47-47", cluster="Newtonsoft.Json.Utilities.FSharpFunction.Invoke(params object[])", file="Issue1619.cs"];
m2_24 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.Union.Union()", span="48-48", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.Union.Union()", file="Issue1619.cs"];
m2_56 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="Issue1619.cs"];
m2_9 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", span="84-84", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="Issue1619.cs"];
m2_11 [label="u.TagReader = (FSharpFunction)FSharpUtils.PreComputeUnionTagReader(null, t, null)", span="88-88", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="Issue1619.cs"];
m2_13 [label="object[] cases = (object[])FSharpUtils.GetUnionCases(null, t, null)", span="91-91", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="Issue1619.cs"];
m2_18 [label="unionCase.Fields = (PropertyInfo[])FSharpUtils.GetUnionCaseInfoFields(unionCaseInfo)", span="98-98", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="Issue1619.cs"];
m2_19 [label="unionCase.FieldReader = (FSharpFunction)FSharpUtils.PreComputeUnionReader(null, unionCaseInfo, null)", span="99-99", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="Issue1619.cs"];
m2_20 [label="unionCase.Constructor = (FSharpFunction)FSharpUtils.PreComputeUnionConstructor(null, unionCaseInfo, null)", span="100-100", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="Issue1619.cs"];
m2_16 [label="unionCase.Tag = (int)FSharpUtils.GetUnionCaseInfoTag(unionCaseInfo)", span="96-96", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="Issue1619.cs"];
m2_17 [label="unionCase.Name = (string)FSharpUtils.GetUnionCaseInfoName(unionCaseInfo)", span="97-97", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="Issue1619.cs"];
m2_10 [label="Union u = new Union()", span="86-86", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="Issue1619.cs"];
m2_12 [label="u.Cases = new List<UnionCase>()", span="89-89", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="Issue1619.cs"];
m2_14 [label=cases, span="93-93", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="Issue1619.cs"];
m2_15 [label="UnionCase unionCase = new UnionCase()", span="95-95", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="Issue1619.cs"];
m2_21 [label="u.Cases.Add(unionCase)", span="102-102", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="Issue1619.cs"];
m2_22 [label="return u;", span="105-105", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="Issue1619.cs"];
m2_23 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", span="84-84", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="Issue1619.cs"];
m2_61 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="150-150", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_72 [label="Union union = UnionCache.Get(objectType)", span="169-169", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_71 [label="ReadAndAssert(reader)", span="167-167", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_73 [label="caseName = reader.Value.ToString()", span="171-171", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_74 [label="caseInfo = union.Cases.SingleOrDefault(c => c.Name == caseName)", span="173-173", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_99 [label="return caseInfo.Constructor.Invoke(args);", span="219-219", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_62 [label="reader.TokenType == JsonToken.Null", span="152-152", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_67 [label="ReadAndAssert(reader)", span="160-160", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_68 [label="reader.TokenType == JsonToken.PropertyName", span="162-162", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_69 [label="string propertyName = reader.Value.ToString()", span="164-164", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_76 [label="throw JsonSerializationException.Create(reader, ''No union type found with the name '{0}'.''.FormatWith(CultureInfo.InvariantCulture, caseName));", span="176-176", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_78 [label="ReadAndAssert(reader)", span="180-180", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_79 [label="reader.TokenType != JsonToken.StartArray", span="181-181", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_80 [label="throw JsonSerializationException.Create(reader, ''Union fields must been an array.'');", span="182-182", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_81 [label="fields = (JArray)JToken.ReadFrom(reader)", span="184-184", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_82 [label="throw JsonSerializationException.Create(reader, ''Unexpected property '{0}' found when reading union.''.FormatWith(CultureInfo.InvariantCulture, propertyName));", span="188-188", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_83 [label="ReadAndAssert(reader)", span="191-191", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_85 [label="throw JsonSerializationException.Create(reader, ''No '{0}' property with union name found.''.FormatWith(CultureInfo.InvariantCulture, CasePropertyName));", span="195-195", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_88 [label="throw JsonSerializationException.Create(reader, ''No '{0}' property with union fields found.''.FormatWith(CultureInfo.InvariantCulture, FieldsPropertyName));", span="200-200", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_91 [label="throw JsonSerializationException.Create(reader, ''The number of field values does not match the number of properties definied by union '{0}'.''.FormatWith(CultureInfo.InvariantCulture, caseName));", span="205-205", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_96 [label="typedFieldValues[i] = t.ToObject(fieldProperty.PropertyType, serializer)", span="213-213", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_70 [label="string.Equals(propertyName, CasePropertyName, StringComparison.OrdinalIgnoreCase)", span="165-165", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_75 [label="caseInfo == null", span="175-175", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_84 [label="caseInfo == null", span="194-194", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_86 [label="object[] typedFieldValues = new object[caseInfo.Fields.Length]", span="197-197", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_87 [label="caseInfo.Fields.Length > 0 && fields == null", span="199-199", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_90 [label="caseInfo.Fields.Length != fields.Count", span="204-204", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_95 [label="PropertyInfo fieldProperty = caseInfo.Fields[i]", span="211-211", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_64 [label="UnionCase caseInfo = null", span="155-155", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_98 [label="object[] args = { typedFieldValues }", span="217-217", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_63 [label="return null;", span="153-153", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_66 [label="JArray fields = null", span="157-157", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_77 [label="string.Equals(propertyName, FieldsPropertyName, StringComparison.OrdinalIgnoreCase)", span="178-178", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_89 [label="fields != null", span="202-202", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_93 [label="i < fields.Count", span="208-208", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_94 [label="JToken t = fields[i]", span="210-210", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_65 [label="string caseName = null", span="156-156", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_92 [label="int i = 0", span="208-208", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_97 [label="i++", span="208-208", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_100 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="150-150", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1619.cs"];
m2_127 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="Issue1619.cs"];
m2_130 [label="Entry Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", span="78-78", cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="Issue1619.cs"];
m2_109 [label="Entry lambda expression", span="173-173", cluster="lambda expression", file="Issue1619.cs"];
m2_59 [label="c.Tag == tag", span="122-122", cluster="lambda expression", file="Issue1619.cs"];
m2_58 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="Issue1619.cs"];
m2_60 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="Issue1619.cs"];
m2_110 [label="c.Name == caseName", span="173-173", cluster="lambda expression", file="Issue1619.cs"];
m2_111 [label="Exit lambda expression", span="173-173", cluster="lambda expression", file="Issue1619.cs"];
m2_46 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="Issue1619.cs"];
m2_107 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1849-1849", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="Issue1619.cs"];
m2_106 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="Issue1619.cs"];
m2_104 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="Issue1619.cs"];
m2_50 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="Issue1619.cs"];
m2_105 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="Issue1619.cs"];
m2_135 [label=tag, span="", file="Issue1619.cs"];
m2_136 [label=caseName, span="", file="Issue1619.cs"];
m3_1349 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="JsonTextWriterAsyncTests.cs"];
m3_565 [label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="7-7", cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1121 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="2531-2531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1122 [label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="2533-2533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1123 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="2531-2531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1546 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", span="3354-3354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1554 [label="Console.WriteLine(json)", span="3377-3377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1553 [label="string json = JsonConvert.SerializeObject(new[] { joe, mike }, Formatting.Indented)", span="3364-3364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1547 [label="Employee joe = new Employee()", span="3356-3356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1549 [label="Employee mike = new Employee()", span="3358-3358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1552 [label="mike.Manager = mike", span="3362-3362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1548 [label="joe.Name = ''Joe Employee''", span="3357-3357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1551 [label="joe.Manager = mike", span="3361-3361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1550 [label="mike.Name = ''Mike Manager''", span="3359-3359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1555 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", span="3354-3354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1601 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="JsonTextWriterAsyncTests.cs"];
m3_1079 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="2366-2366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JsonTextWriterAsyncTests.cs"];
m3_697 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1418-1418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonTextWriterAsyncTests.cs"];
m3_698 [label="_name = name", span="1420-1420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonTextWriterAsyncTests.cs"];
m3_699 [label="Age = age", span="1421-1421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonTextWriterAsyncTests.cs"];
m3_700 [label="Rank = rank", span="1422-1422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonTextWriterAsyncTests.cs"];
m3_701 [label="Title = title", span="1423-1423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonTextWriterAsyncTests.cs"];
m3_702 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1418-1418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonTextWriterAsyncTests.cs"];
m3_618 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="9-9", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_1350 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="JsonTextWriterAsyncTests.cs"];
m3_300 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="386-386", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonTextWriterAsyncTests.cs"];
m3_1213 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JsonTextWriterAsyncTests.cs"];
m3_410 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonTextWriterAsyncTests.cs"];
m3_787 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="1647-1647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonTextWriterAsyncTests.cs"];
m3_790 [label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="1653-1653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonTextWriterAsyncTests.cs"];
m3_791 [label="Assert.AreEqual(''Admin'', r.RoleName)", span="1654-1654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonTextWriterAsyncTests.cs"];
m3_792 [label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="1655-1655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonTextWriterAsyncTests.cs"];
m3_789 [label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="1651-1651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonTextWriterAsyncTests.cs"];
m3_788 [label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="1649-1649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonTextWriterAsyncTests.cs"];
m3_793 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="1647-1647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonTextWriterAsyncTests.cs"];
m3_756 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="280-280", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonTextWriterAsyncTests.cs"];
m3_61 [label="Assert.IsTrue(MathUtils.ApproxEquals(0.0, 0.0))", span="267-267", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", file="JsonTextWriterAsyncTests.cs"];
m3_1442 [label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="7-7", cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="JsonTextWriterAsyncTests.cs"];
m3_28 [label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21, TestProperty1 = ''NotDefault'' },\r\n                Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="163-164", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1502 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="3256-3256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonTextWriterAsyncTests.cs"];
m3_1511 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="3270-3270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonTextWriterAsyncTests.cs"];
m3_1510 [label="var json = JsonConvert.SerializeObject(child)", span="3269-3269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonTextWriterAsyncTests.cs"];
m3_1503 [label="var reference = new Dictionary<string, object>()", span="3260-3260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonTextWriterAsyncTests.cs"];
m3_1506 [label="var child = new Dictionary<string, object>()", span="3264-3264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonTextWriterAsyncTests.cs"];
m3_1504 [label="reference.Add(''$ref'', 1)", span="3261-3261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonTextWriterAsyncTests.cs"];
m3_1505 [label="reference.Add(''$id'', 1)", span="3262-3262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonTextWriterAsyncTests.cs"];
m3_1509 [label="child.Add(''Father'', reference)", span="3267-3267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonTextWriterAsyncTests.cs"];
m3_1507 [label="child.Add(''_id'', 2)", span="3265-3265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonTextWriterAsyncTests.cs"];
m3_1508 [label="child.Add(''Name'', ''Isabell'')", span="3266-3266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonTextWriterAsyncTests.cs"];
m3_1512 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="3256-3256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonTextWriterAsyncTests.cs"];
m3_1045 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="2299-2299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonTextWriterAsyncTests.cs"];
m3_1047 [label="Add(pair.Key, pair.Value)", span="2303-2303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonTextWriterAsyncTests.cs"];
m3_1046 [label=initial, span="2301-2301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonTextWriterAsyncTests.cs"];
m3_1048 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="2299-2299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonTextWriterAsyncTests.cs"];
m3_1405 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", span="3069-3069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_1411 [label="Assert.AreEqual(2, newValue.GenericList.Count)", span="3078-3078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_1412 [label="Assert.AreEqual(typeof(List<string>), newValue.GenericList.GetType())", span="3079-3079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_1410 [label="GenericListTestClass newValue = JsonConvert.DeserializeObject<GenericListTestClass>(json)", span="3077-3077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_1409 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3075-3075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_1406 [label="GenericListTestClass c = new GenericListTestClass()", span="3071-3071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_1408 [label="c.GenericList.Add(''2'')", span="3073-3073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_1407 [label="c.GenericList.Add(''1'')", span="3072-3072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_1413 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", span="3069-3069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeExistingGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_243 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="653-653", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonTextWriterAsyncTests.cs"];
m3_867 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="1833-1833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonTextWriterAsyncTests.cs"];
m3_869 [label="Assert.AreEqual(3, l.Count)", span="1836-1836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonTextWriterAsyncTests.cs"];
m3_870 [label="Assert.AreEqual(3.3m, l[0])", span="1838-1838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonTextWriterAsyncTests.cs"];
m3_871 [label="Assert.AreEqual(null, l[1])", span="1839-1839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonTextWriterAsyncTests.cs"];
m3_872 [label="Assert.AreEqual(1.1m, l[2])", span="1840-1840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonTextWriterAsyncTests.cs"];
m3_868 [label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="1835-1835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonTextWriterAsyncTests.cs"];
m3_873 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="1833-1833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonTextWriterAsyncTests.cs"];
m3_766 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="1579-1579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonTextWriterAsyncTests.cs"];
m3_769 [label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="1588-1588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonTextWriterAsyncTests.cs"];
m3_768 [label="string json = JsonConvert.SerializeObject(value)", span="1586-1586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonTextWriterAsyncTests.cs"];
m3_767 [label="var value = new\r\n        {\r\n          bar = new JObject(new JProperty(''baz'', 13))\r\n        }", span="1581-1584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonTextWriterAsyncTests.cs"];
m3_770 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="1579-1579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonTextWriterAsyncTests.cs"];
m3_566 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="1090-1090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_576 [label="Assert.AreEqual(json, after)", span="1105-1105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_569 [label="Assert.AreEqual(''Before!'', aa.Before)", span="1096-1096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_570 [label="Assert.AreEqual(''After!'', aa.After)", span="1097-1097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_571 [label="Assert.AreEqual(4, aa.Coordinates.Length)", span="1098-1098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_572 [label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="1099-1099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_573 [label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="1100-1100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_574 [label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="1101-1101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_567 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1092-1092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_575 [label="string after = JsonConvert.SerializeObject(aa)", span="1103-1103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_568 [label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="1094-1094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_577 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="1090-1090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_850 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="1805-1805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonTextWriterAsyncTests.cs"];
m3_852 [label="Event e = JsonConvert.DeserializeObject<Event>(json)", span="1809-1809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonTextWriterAsyncTests.cs"];
m3_851 [label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="1807-1807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonTextWriterAsyncTests.cs"];
m3_853 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="1805-1805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonTextWriterAsyncTests.cs"];
m3_448 [label="Entry System.Convert.ToDateTime(string)", span="0-0", cluster="System.Convert.ToDateTime(string)", file="JsonTextWriterAsyncTests.cs"];
m3_764 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1745 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="3812-3812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JsonTextWriterAsyncTests.cs"];
m3_1484 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", span="3222-3222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1488 [label="Assert.AreEqual(p.Name, ''Existing,Appended'')", span="3232-3232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1485 [label="Movie p = new Movie()", span="3224-3224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1487 [label="JsonConvert.PopulateObject(''{'Name':'Appended'}'', p, new JsonSerializerSettings\r\n      {\r\n        Converters = new List<JsonConverter> { new StringAppenderConverter() }\r\n      })", span="3227-3230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1486 [label="p.Name = ''Existing,''", span="3225-3225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1489 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", span="3222-3222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverterTest()", file="JsonTextWriterAsyncTests.cs"];
m3_130 [label="IntValue1 = int.MaxValue", span="435-435", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate.DefaultValueHandlingDeserializePopulate()", file="JsonTextWriterAsyncTests.cs"];
m3_1214 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JsonTextWriterAsyncTests.cs"];
m3_268 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="573-573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonTextWriterAsyncTests.cs"];
m3_270 [label="Assert.AreEqual(''null'', json)", span="576-576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonTextWriterAsyncTests.cs"];
m3_269 [label="string json = JsonConvert.SerializeObject(null)", span="575-575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonTextWriterAsyncTests.cs"];
m3_271 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="573-573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonTextWriterAsyncTests.cs"];
m3_557 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="1077-1077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_563 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="1086-1086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_562 [label="string json = JsonConvert.SerializeObject(aa)", span="1084-1084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_558 [label="JaggedArray aa = new JaggedArray()", span="1079-1079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_561 [label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="1082-1082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_559 [label="aa.Before = ''Before!''", span="1080-1080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_560 [label="aa.After = ''After!''", span="1081-1081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_564 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="1077-1077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1609 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="3528-3528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterAsyncTests.cs"];
m3_1614 [label="Assert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="3537-3540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterAsyncTests.cs"];
m3_1616 [label="Assert.AreEqual(2, newDictionary.Count)", span="3545-3545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterAsyncTests.cs"];
m3_1613 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3535-3535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterAsyncTests.cs"];
m3_1615 [label="Dictionary<DictionaryKey, string> newDictionary =\r\n        JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="3542-3543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterAsyncTests.cs"];
m3_1610 [label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="3530-3530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterAsyncTests.cs"];
m3_1612 [label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="3533-3533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterAsyncTests.cs"];
m3_1611 [label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="3532-3532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterAsyncTests.cs"];
m3_1617 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="3528-3528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterAsyncTests.cs"];
m3_1041 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="2291-2291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_1043 [label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="2294-2294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_1042 [label="string json = ''{key1:'value',key2:'value',key3:'value'}''", span="2293-2293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_1044 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="2291-2291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_449 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="JsonTextWriterAsyncTests.cs"];
m3_157 [label="Entry Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1129 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="2541-2541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonTextWriterAsyncTests.cs"];
m3_1130 [label="return _innerDictionary.TryGetValue(key, out value);", span="2543-2543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonTextWriterAsyncTests.cs"];
m3_1131 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="2541-2541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonTextWriterAsyncTests.cs"];
m3_1471 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.StringListAppenderConverter()", span="3153-3153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.StringListAppenderConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_1217 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JsonTextWriterAsyncTests.cs"];
m3_60 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="JsonTextWriterAsyncTests.cs"];
m3_62 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="JsonTextWriterAsyncTests.cs"];
m3_63 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="172-172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterAsyncTests.cs"];
m3_64 [label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="174-174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterAsyncTests.cs"];
m3_65 [label="executorObject.serverClassName = ''BanSubs''", span="175-175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1014 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="2201-2201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonTextWriterAsyncTests.cs"];
m3_1015 [label="this._dict1.Add(item.Key, item)", span="2203-2203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonTextWriterAsyncTests.cs"];
m3_1016 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="2201-2201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonTextWriterAsyncTests.cs"];
m3_1707 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_229 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonTextWriterAsyncTests.cs"];
m3_1580 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JsonTextWriterAsyncTests.cs"];
m3_68 [label="string output = JsonConvert.SerializeObject(executorObject)", span="179-179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterAsyncTests.cs"];
m3_772 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="215-215", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonTextWriterAsyncTests.cs"];
m3_1600 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FamilyDetails.FamilyDetails()", span="3467-3467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FamilyDetails.FamilyDetails()", file="JsonTextWriterAsyncTests.cs"];
m3_1717 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="3777-3777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1720 [label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="3781-3781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1719 [label="Invoice i = JsonConvert.DeserializeObject<Invoice>(json)", span="3780-3780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1718 [label="string json = ''{Amount:123456789876543.21}''", span="3779-3779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1721 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="3777-3777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1746 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="3800-3800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JsonTextWriterAsyncTests.cs"];
m3_317 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1082 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2424-2424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1086 [label="_innerDictionary.Add(entry.Key, entry.Value)", span="2433-2433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1085 [label=dictionary, span="2431-2431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1083 [label="dictionary == null", span="2426-2426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1084 [label="throw new ArgumentNullException(''dictionary'');", span="2428-2428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1087 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2424-2424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterAsyncTests.cs"];
m3_537 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1019-1019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonTextWriterAsyncTests.cs"];
m3_540 [label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="1030-1030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonTextWriterAsyncTests.cs"];
m3_541 [label="Assert.AreEqual(null, c.MiddleName)", span="1031-1031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonTextWriterAsyncTests.cs"];
m3_542 [label="Assert.AreEqual(null, c.LastName)", span="1032-1032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonTextWriterAsyncTests.cs"];
m3_539 [label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1028-1028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonTextWriterAsyncTests.cs"];
m3_538 [label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="1021-1026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonTextWriterAsyncTests.cs"];
m3_543 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="1019-1019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonTextWriterAsyncTests.cs"];
m3_951 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonTextWriterAsyncTests.cs"];
m3_1402 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", span="3062-3062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="JsonTextWriterAsyncTests.cs"];
m3_1403 [label="GenericList = new List<string>()", span="3064-3064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="JsonTextWriterAsyncTests.cs"];
m3_1404 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", span="3062-3062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass.GenericListTestClass()", file="JsonTextWriterAsyncTests.cs"];
m3_418 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_13 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="81-81", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterAsyncTests.cs"];
m3_1098 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonTextWriterAsyncTests.cs"];
m3_1146 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="2589-2589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonTextWriterAsyncTests.cs"];
m3_1151 [label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="2595-2595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonTextWriterAsyncTests.cs"];
m3_1150 [label="_personValue = personValue", span="2594-2594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonTextWriterAsyncTests.cs"];
m3_1147 [label="_stringValue = stringValue", span="2591-2591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonTextWriterAsyncTests.cs"];
m3_1148 [label="_intValue = intValue", span="2592-2592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonTextWriterAsyncTests.cs"];
m3_1149 [label="_dateTimeOffsetValue = dateTimeOffset", span="2593-2593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonTextWriterAsyncTests.cs"];
m3_1152 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="2589-2589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonTextWriterAsyncTests.cs"];
m3_1089 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="2483-2483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1090 [label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="2485-2485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1091 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="2483-2483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1709 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="3763-3763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1711 [label="Assert.AreEqual(123456789876543.21m, d)", span="3766-3766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1710 [label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="3765-3765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1712 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="3763-3763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1529 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", span="3317-3317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1534 [label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="3325-3327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1537 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27\r\n}'', json)", span="3332-3335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1539 [label="Assert.AreEqual(''James'', deserialized.Name)", span="3338-3338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1540 [label="Assert.AreEqual(27, deserialized.Age)", span="3339-3339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1533 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3323-3323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1535 [label="c._shouldSerializeName = true", span="3329-3329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1536 [label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3330-3330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1538 [label="ShouldSerializeTestClass deserialized = JsonConvert.DeserializeObject<ShouldSerializeTestClass>(json)", span="3337-3337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1530 [label="ShouldSerializeTestClass c = new ShouldSerializeTestClass()", span="3319-3319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1532 [label="c.Age = 27", span="3321-3321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1531 [label="c.Name = ''James''", span="3320-3320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1541 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", span="3317-3317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_665 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="580-580", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriterAsyncTests.cs"];
m3_14 [label="Product product = new Product()", span="83-83", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterAsyncTests.cs"];
m3_1321 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="2914-2914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1329 [label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="2936-2936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1330 [label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="2937-2937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1327 [label="Assert.AreEqual(expected, json)", span="2933-2933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1322 [label="XNodeTestObject testObject = new XNodeTestObject()", span="2916-2916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1328 [label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="2935-2935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1331 [label="Assert.IsNull(newTestObject.Element.Parent)", span="2939-2939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1325 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="2920-2920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1326 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="2921-2932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1323 [label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="2917-2917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1324 [label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="2918-2918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1332 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="2914-2914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_85 [label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", span="296-296", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", file="JsonTextWriterAsyncTests.cs"];
m3_88 [label="StringAssert.AreEqual(@''{\r\n  ''''IntInclude'''': 0,\r\n  ''''IntDefault'''': 0\r\n}'', json)", span="302-305", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", file="JsonTextWriterAsyncTests.cs"];
m3_89 [label="json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Ignore\r\n            })", span="307-310", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", file="JsonTextWriterAsyncTests.cs"];
m3_87 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="300-300", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", file="JsonTextWriterAsyncTests.cs"];
m3_86 [label="DefaultValueHandlingPropertyClass c = new DefaultValueHandlingPropertyClass()", span="298-298", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", file="JsonTextWriterAsyncTests.cs"];
m3_90 [label="StringAssert.AreEqual(@''{\r\n  ''''IntInclude'''': 0\r\n}'', json)", span="312-314", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DefaultValueHandlingPropertyTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1095 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="2493-2493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonTextWriterAsyncTests.cs"];
m3_1096 [label="_innerDictionary.Clear()", span="2495-2495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonTextWriterAsyncTests.cs"];
m3_1097 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="2493-2493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonTextWriterAsyncTests.cs"];
m3_76 [label="Assert.AreEqual(''{}'', json)", span="291-291", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueTest()", file="JsonTextWriterAsyncTests.cs"];
m3_450 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="861-861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_455 [label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="868-868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_457 [label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="872-872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_458 [label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="873-873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_454 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="867-867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_456 [label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="870-870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_451 [label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="863-863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_453 [label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="865-865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_452 [label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="864-864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_459 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="861-861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_899 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="1897-1897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonTextWriterAsyncTests.cs"];
m3_900 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'')", span="1899-1899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonTextWriterAsyncTests.cs"];
m3_901 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="1897-1897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonTextWriterAsyncTests.cs"];
m3_1263 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="2881-2881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterAsyncTests.cs"];
m3_1310 [label="BB_field1 = g", span="2884-2884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterAsyncTests.cs"];
m3_1311 [label="BB_field2 = g", span="2885-2885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterAsyncTests.cs"];
m3_1312 [label="BB_property1 = g", span="2886-2886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterAsyncTests.cs"];
m3_1313 [label="BB_property2 = g", span="2887-2887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterAsyncTests.cs"];
m3_1314 [label="BB_property3 = g", span="2888-2888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterAsyncTests.cs"];
m3_1315 [label="BB_property4 = g", span="2889-2889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterAsyncTests.cs"];
m3_1316 [label="BB_property5 = g", span="2890-2890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterAsyncTests.cs"];
m3_1317 [label="BB_property6 = g", span="2891-2891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterAsyncTests.cs"];
m3_1318 [label="BB_property7 = g", span="2892-2892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterAsyncTests.cs"];
m3_1319 [label="BB_property8 = g", span="2893-2893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterAsyncTests.cs"];
m3_1320 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="2881-2881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterAsyncTests.cs"];
m3_471 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="892-892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonTextWriterAsyncTests.cs"];
m3_474 [label="Assert.AreEqual(''null'', json)", span="897-897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonTextWriterAsyncTests.cs"];
m3_476 [label="Assert.AreEqual(''1'', json)", span="900-900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonTextWriterAsyncTests.cs"];
m3_473 [label="json = JsonConvert.SerializeObject((int?)null)", span="896-896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonTextWriterAsyncTests.cs"];
m3_475 [label="json = JsonConvert.SerializeObject((int?)1)", span="899-899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonTextWriterAsyncTests.cs"];
m3_472 [label="string json", span="894-894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonTextWriterAsyncTests.cs"];
m3_477 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="892-892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonTextWriterAsyncTests.cs"];
m3_773 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="1592-1592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonTextWriterAsyncTests.cs"];
m3_776 [label="Assert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="1606-1618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonTextWriterAsyncTests.cs"];
m3_775 [label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="1604-1604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonTextWriterAsyncTests.cs"];
m3_774 [label="Content content = new Content\r\n        {\r\n          Text = ''Blah, blah, blah'',\r\n          Children = new List<Content>\r\n            {\r\n              new Content { Text = ''First'' },\r\n              new Content { Text = ''Second'' }\r\n            }\r\n        }", span="1594-1602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonTextWriterAsyncTests.cs"];
m3_777 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="1592-1592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1636 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonTextWriterAsyncTests.cs"];
m3_1033 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="2195-2195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1582 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", span="3477-3477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1594 [label="FamilyDetails mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeString)", span="3502-3502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1597 [label="mike = JsonConvert.DeserializeObject<FamilyDetails>(mikeFullDisclosureString)", span="3507-3507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1593 [label="string mikeString = ''{\''Name\'': \''Mike Person\''}''", span="3501-3501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1595 [label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="3504-3504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1596 [label="string mikeFullDisclosureString = ''{\''Name\'': \''Mike Person\'', \''NumberOfChildren\'': \''0\''}''", span="3506-3506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1598 [label="Console.WriteLine(''mikeString specifies number of children: {0}'', mike.NumberOfChildrenSpecified)", span="3509-3509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1592 [label="Console.WriteLine(json)", span="3499-3499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1591 [label="string json = JsonConvert.SerializeObject(new[] { joe, martha }, Formatting.Indented)", span="3489-3489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1583 [label="FamilyDetails joe = new FamilyDetails()", span="3479-3479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1587 [label="FamilyDetails martha = new FamilyDetails()", span="3484-3484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1590 [label="martha.NumberOfChildrenSpecified = false", span="3487-3487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1584 [label="joe.Name = ''Joe Family Details''", span="3480-3480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1585 [label="joe.NumberOfChildren = 4", span="3481-3481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1586 [label="joe.NumberOfChildrenSpecified = true", span="3482-3482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1588 [label="martha.Name = ''Martha Family Details''", span="3485-3485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1589 [label="martha.NumberOfChildren = 3", span="3486-3486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_1599 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", span="3477-3477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedExample()", file="JsonTextWriterAsyncTests.cs"];
m3_378 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", span="736-736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_385 [label="Assert.AreEqual(@''{\r\n  ''''personsName'''': ''''The Idiot in Next To Me'''',\r\n  ''''pNumbers'''': [\r\n    {\r\n      ''''phoneNumber'''': ''''555-1212''''\r\n    },\r\n    {\r\n      ''''phoneNumber'''': ''''444-1212''''\r\n    }\r\n  ]\r\n}'', json)", span="748-758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_387 [label="Assert.AreEqual(''The Idiot in Next To Me'', newName.personsName)", span="762-762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_388 [label="Assert.AreEqual(2, newName.pNumbers.Count)", span="765-765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_389 [label="Assert.AreEqual(''555-1212'', newName.pNumbers[0].phoneNumber)", span="766-766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_390 [label="Assert.AreEqual(''444-1212'', newName.pNumbers[1].phoneNumber)", span="767-767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_384 [label="string json = JsonConvert.SerializeObject(name, Formatting.Indented)", span="746-746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_386 [label="Name newName = JsonConvert.DeserializeObject<Name>(json)", span="760-760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_379 [label="Name name = new Name(''The Idiot in Next To Me'')", span="738-738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_383 [label="name.pNumbers.Add(p2)", span="744-744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_380 [label="PhoneNumber p1 = new PhoneNumber(''555-1212'')", span="740-740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_382 [label="name.pNumbers.Add(p1)", span="743-743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_381 [label="PhoneNumber p2 = new PhoneNumber(''444-1212'')", span="741-741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_391 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", span="736-736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMemberGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_1181 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JsonTextWriterAsyncTests.cs"];
m3_528 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="993-993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterAsyncTests.cs"];
m3_531 [label="Assert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}'', json)", span="1005-1010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterAsyncTests.cs"];
m3_533 [label="Assert.AreEqual(''Bob'', c2.FirstName)", span="1014-1014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterAsyncTests.cs"];
m3_534 [label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="1015-1015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterAsyncTests.cs"];
m3_530 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1003-1003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterAsyncTests.cs"];
m3_532 [label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1012-1012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterAsyncTests.cs"];
m3_529 [label="RequiredMembersClass c = new RequiredMembersClass()\r\n      {\r\n        BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n        FirstName = ''Bob'',\r\n        LastName = ''Smith'',\r\n        MiddleName = ''Cosmo''\r\n      }", span="995-1001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterAsyncTests.cs"];
m3_535 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="993-993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterAsyncTests.cs"];
m3_59 [label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", span="252-252", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="JsonTextWriterAsyncTests.cs"];
m3_81 [label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="196-196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonTextWriterAsyncTests.cs"];
m3_470 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonTextWriterAsyncTests.cs"];
m3_1049 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="2333-2333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1052 [label="Assert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="2338-2343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1051 [label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="2336-2336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1050 [label="B value = new B()", span="2335-2335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1053 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="2333-2333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_666 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1325-1325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonTextWriterAsyncTests.cs"];
m3_669 [label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="1330-1330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonTextWriterAsyncTests.cs"];
m3_667 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1327-1327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonTextWriterAsyncTests.cs"];
m3_668 [label="o.ReferenceLoopHandlingErrorProperty = o", span="1328-1328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonTextWriterAsyncTests.cs"];
m3_670 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1325-1325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonTextWriterAsyncTests.cs"];
m3_544 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1037-1037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_546 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1046-1046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_545 [label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="1039-1044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_547 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="1037-1037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1359 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="2996-2996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_104 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonTextWriterAsyncTests.cs"];
m3_105 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="237-237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_106 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="239-239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_107 [label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="241-241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_108 [label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="243-243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_109 [label="Assert.AreEqual(0, c.IgnoredField)", span="245-245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_110 [label="Assert.AreEqual(99, c.Field)", span="246-246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_15 [label="product.Name = ''Apple''", span="85-85", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterAsyncTests.cs"];
m3_1092 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="2488-2488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonTextWriterAsyncTests.cs"];
m3_1093 [label="_innerDictionary.Add(key, value)", span="2490-2490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonTextWriterAsyncTests.cs"];
m3_1094 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="2488-2488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonTextWriterAsyncTests.cs"];
m3_816 [label="Entry Unk.IsInstanceOfType", span="", cluster="Unk.IsInstanceOfType", file="JsonTextWriterAsyncTests.cs"];
m3_605 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonTextWriterAsyncTests.cs"];
m3_1132 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonTextWriterAsyncTests.cs"];
m3_937 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="1972-1972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_943 [label="Assert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="1980-1986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_945 [label="Assert.AreEqual(3, newFoo.Bars.Count)", span="1989-1989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_946 [label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="1990-1990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_947 [label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="1991-1991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_948 [label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="1992-1992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_942 [label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="1979-1979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_944 [label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="1988-1988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_938 [label="Foo f = new Foo()", span="1974-1974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_941 [label="f.Bars.Add(new Bar { Id = 2 })", span="1977-1977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_939 [label="f.Bars.Add(new Bar { Id = 0 })", span="1975-1975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_940 [label="f.Bars.Add(new Bar { Id = 1 })", span="1976-1976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_949 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="1972-1972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_1188 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2621-2621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1189 [label="info.AddValue(''stringValue'', _stringValue)", span="2623-2623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1190 [label="info.AddValue(''intValue'', _intValue)", span="2624-2624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1191 [label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="2625-2625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1192 [label="info.AddValue(''personValue'', _personValue)", span="2626-2626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1193 [label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="2627-2627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1195 [label="info.AddValue(''booleanValue'', _booleanValue)", span="2630-2630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1196 [label="info.AddValue(''byteValue'', _byteValue)", span="2631-2631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1197 [label="info.AddValue(''charValue'', _charValue)", span="2632-2632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1198 [label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="2633-2633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1199 [label="info.AddValue(''decimalValue'', _decimalValue)", span="2634-2634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1200 [label="info.AddValue(''shortValue'', _shortValue)", span="2635-2635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1201 [label="info.AddValue(''longValue'', _longValue)", span="2636-2636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1202 [label="info.AddValue(''sbyteValue'', _sbyteValue)", span="2637-2637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1203 [label="info.AddValue(''floatValue'', _floatValue)", span="2638-2638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1204 [label="info.AddValue(''ushortValue'', _ushortValue)", span="2639-2639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1205 [label="info.AddValue(''uintValue'', _uintValue)", span="2640-2640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1206 [label="info.AddValue(''ulongValue'', _ulongValue)", span="2641-2641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1194 [label="info.AddValue(''nullableInt'', null)", span="2628-2628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1207 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2621-2621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_146 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", span="382-382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_154 [label="Assert.AreEqual(articles1.Count, articles2.Count)", span="395-395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_155 [label="Assert.AreEqual(articles1[0].Name, articles2[0].Name)", span="396-396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_149 [label="ArticleCollection articles1 = new ArticleCollection()", span="387-387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_153 [label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="393-393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_148 [label="Article a2 = new Article(''a2'')", span="385-385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_150 [label="articles1.Add(a1)", span="388-388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_151 [label="articles1.Add(a2)", span="389-389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_152 [label="string jsonText = JsonConvert.SerializeObject(articles1)", span="391-391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_147 [label="Article a1 = new Article(''a1'')", span="384-384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_156 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", span="382-382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InheritedListSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_513 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="971-971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_517 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="977-977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_519 [label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="980-980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_523 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="986-986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_525 [label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="989-989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_514 [label="string boolRef = typeof(bool).AssemblyQualifiedName", span="973-973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_516 [label="string json = JsonConvert.SerializeObject(typeClass)", span="976-976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_518 [label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="979-979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_520 [label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="982-982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_522 [label="json = JsonConvert.SerializeObject(typeClass)", span="985-985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_524 [label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="988-988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_515 [label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="974-974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_521 [label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="983-983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_526 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="971-971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_210 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonTextWriterAsyncTests.cs"];
m3_116 [label="string s = string.Empty", span="331-331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonTextWriterAsyncTests.cs"];
m3_117 [label="s += s", span="332-332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonTextWriterAsyncTests.cs"];
m3_118 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="250-250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonTextWriterAsyncTests.cs"];
m3_119 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="601-601", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1556 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.Employee()", span="3342-3342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Employee.Employee()", file="JsonTextWriterAsyncTests.cs"];
m3_1264 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="2759-2759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1266 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2773-2773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1267 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2774-2774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1268 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2775-2775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1269 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2776-2776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1270 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2777-2777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1271 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2778-2778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1272 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2779-2779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1273 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="2780-2780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1275 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2804-2804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1276 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2805-2805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1277 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2806-2806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1278 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2807-2807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1279 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2808-2808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1280 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2809-2809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1281 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2810-2810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1282 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2811-2811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1283 [label="Assert.AreEqual(4, myB.BB_field1)", span="2813-2813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1284 [label="Assert.AreEqual(4, myB.BB_field2)", span="2814-2814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1285 [label="Assert.AreEqual(3, myB.BB_property1)", span="2815-2815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1286 [label="Assert.AreEqual(3, myB.BB_property2)", span="2816-2816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1287 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="2817-2817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1288 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="2818-2818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1289 [label="Assert.AreEqual(0, myB.BB_property5)", span="2819-2819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1290 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="2820-2820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1291 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="2821-2821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1292 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="2822-2822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1265 [label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n          @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="2761-2771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1274 [label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n          @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="2782-2802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1293 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="2759-2759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_95 [label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="223-223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_635 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1265-1265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterAsyncTests.cs"];
m3_639 [label="Assert.AreEqual(''firstName'', o.firstName)", span="1277-1277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterAsyncTests.cs"];
m3_640 [label="Assert.AreEqual(''FirstName'', o.FirstName)", span="1278-1278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterAsyncTests.cs"];
m3_641 [label="Assert.AreEqual(''LastName'', o.LastName)", span="1279-1279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterAsyncTests.cs"];
m3_642 [label="Assert.AreEqual(''lastName'', o.lastName)", span="1280-1280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterAsyncTests.cs"];
m3_637 [label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="1274-1274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterAsyncTests.cs"];
m3_638 [label="Assert.IsNotNull(o)", span="1275-1275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterAsyncTests.cs"];
m3_636 [label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="1267-1272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterAsyncTests.cs"];
m3_643 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1265-1265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterAsyncTests.cs"];
m3_441 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="9-9", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_292 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="608-608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterAsyncTests.cs"];
m3_297 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="617-617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterAsyncTests.cs"];
m3_298 [label="Assert.AreEqual(1, wibble.Bar.Count)", span="619-619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterAsyncTests.cs"];
m3_296 [label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="615-615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterAsyncTests.cs"];
m3_293 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="610-610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterAsyncTests.cs"];
m3_294 [label="JsonSerializer s = new JsonSerializer()", span="612-612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterAsyncTests.cs"];
m3_295 [label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="613-613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterAsyncTests.cs"];
m3_299 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="608-608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterAsyncTests.cs"];
m3_1216 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="JsonTextWriterAsyncTests.cs"];
m3_69 [label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="181-181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterAsyncTests.cs"];
m3_70 [label="Assert.AreNotSame(executorObject, executorObject2)", span="183-183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterAsyncTests.cs"];
m3_71 [label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterAsyncTests.cs"];
m3_73 [label="Assert.Contains(''101'', executorObject2.serverMethodParams)", span="186-186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterAsyncTests.cs"];
m3_75 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="172-172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterAsyncTests.cs"];
m3_72 [label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="185-185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterAsyncTests.cs"];
m3_74 [label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="187-187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterAsyncTests.cs"];
m3_77 [label="Entry Unk.AreNotSame", span="", cluster="Unk.AreNotSame", file="JsonTextWriterAsyncTests.cs"];
m3_419 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="549-549", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriterAsyncTests.cs"];
m3_208 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTextWriterAsyncTests.cs"];
m3_230 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="515-515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_241 [label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="537-537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", color=green, community=0, file="JsonTextWriterAsyncTests.cs"];
m3_234 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="530-530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_240 [label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="536-536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_231 [label="var anonymous =\r\n        new\r\n        {\r\n          StringValue = ''I am a string'',\r\n          IntValue = int.MaxValue,\r\n          NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n          NestedArray = new[] { 1, 2 },\r\n          Product = new Product() { Name = ''TestProduct'' }\r\n        }", span="517-525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_232 [label="string json = JsonConvert.SerializeObject(anonymous)", span="527-527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_233 [label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="528-528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_235 [label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="531-531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_236 [label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="532-532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_237 [label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="533-533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_238 [label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="534-534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_239 [label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="535-535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_242 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="515-515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_1517 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="3288-3288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_1520 [label="Assert.AreEqual(''First'', cc.First)", span="3293-3293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_1521 [label="Assert.AreEqual(2, cc.Second)", span="3294-3294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_1522 [label="Assert.AreEqual(null, cc.Ignored)", span="3295-3295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_1519 [label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="3292-3292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_1518 [label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="3290-3290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_1523 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="3288-3288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_392 [label="Entry Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1360 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="3019-3019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_1658 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="3621-3621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonTextWriterAsyncTests.cs"];
m3_1337 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="2945-2945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1346 [label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="2961-2961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1344 [label="Assert.AreEqual(expected, json)", span="2958-2958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1338 [label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="2947-2947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1345 [label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="2960-2960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1342 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="2952-2952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1343 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="2953-2957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1339 [label="XmlDocument document = new XmlDocument()", span="2948-2948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1341 [label="testObject.Document = document", span="2950-2950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1340 [label="document.LoadXml(''<root>hehe, root</root>'')", span="2949-2949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1347 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="2945-2945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1111 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="2513-2513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonTextWriterAsyncTests.cs"];
m3_1112 [label="return _innerDictionary.GetEnumerator();", span="2515-2515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonTextWriterAsyncTests.cs"];
m3_1113 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="2513-2513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonTextWriterAsyncTests.cs"];
m3_1736 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="3818-3818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1741 [label="Assert.AreEqual(1, obj.Position.X)", span="3827-3827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1742 [label="Assert.AreEqual(2, obj.Position.Y)", span="3828-3828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1743 [label="Assert.AreEqual(3, obj.Position.Z)", span="3829-3829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1740 [label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="3825-3825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1739 [label="string str = JsonConvert.SerializeObject(obj)", span="3823-3823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1737 [label="VectorParent obj = new VectorParent()", span="3820-3820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1738 [label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="3821-3821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1744 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="3818-3818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_706 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1445-1445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterAsyncTests.cs"];
m3_710 [label="Assert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="1451-1456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterAsyncTests.cs"];
m3_712 [label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="1459-1459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterAsyncTests.cs"];
m3_709 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1449-1449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterAsyncTests.cs"];
m3_711 [label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="1458-1458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterAsyncTests.cs"];
m3_707 [label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="1447-1447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterAsyncTests.cs"];
m3_708 [label="c.NotIncluded = ''Hi''", span="1448-1448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterAsyncTests.cs"];
m3_713 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1445-1445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterAsyncTests.cs"];
m3_345 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JsonTextWriterAsyncTests.cs"];
m3_337 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonTextWriterAsyncTests.cs"];
m3_403 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="785-785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_406 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="790-790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_408 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="794-794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_405 [label="string json = JsonConvert.SerializeObject(c1)", span="789-789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_407 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="792-792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_404 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="787-787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_409 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="785-785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_1581 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonTextWriterAsyncTests.cs"];
m3_67 [label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="177-177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterAsyncTests.cs"];
m3_8 [label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", span="90-90", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", file="JsonTextWriterAsyncTests.cs"];
m3_1254 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="2727-2727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1257 [label="Assert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="2731-2737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1260 [label="Assert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="2741-2755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1256 [label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="2730-2730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1258 [label="BB myB = new BB(3, 4)", span="2739-2739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1259 [label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="2740-2740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1255 [label="AA myA = new AA(2)", span="2729-2729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1261 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="2727-2727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterAsyncTests.cs"];
m3_1557 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", span="3404-3404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1563 [label="Assert.AreEqual(@''{\r\n  ''''Age'''': 27\r\n}'', json)", span="3413-3415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1568 [label="Assert.AreEqual(27, deserialized.Age)", span="3421-3421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1572 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James'''',\r\n  ''''Age'''': 27,\r\n  ''''Weight'''': 0\r\n}'', json)", span="3427-3431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1574 [label="Assert.AreEqual(''James'', deserialized.Name)", span="3434-3434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1577 [label="Assert.AreEqual(27, deserialized.Age)", span="3437-3437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1562 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3411-3411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1564 [label="SpecifiedTestClass deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="3417-3417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1567 [label="Assert.IsFalse(deserialized.WeightSpecified)", span="3420-3420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1569 [label="c.NameSpecified = true", span="3423-3423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1571 [label="json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3425-3425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1573 [label="deserialized = JsonConvert.DeserializeObject<SpecifiedTestClass>(json)", span="3433-3433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1575 [label="Assert.IsTrue(deserialized.NameSpecified)", span="3435-3435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1576 [label="Assert.IsTrue(deserialized.WeightSpecified)", span="3436-3436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1558 [label="SpecifiedTestClass c = new SpecifiedTestClass()", span="3406-3406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1561 [label="c.NameSpecified = false", span="3409-3409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1565 [label="Assert.IsNull(deserialized.Name)", span="3418-3418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1566 [label="Assert.IsFalse(deserialized.NameSpecified)", span="3419-3419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1570 [label="c.WeightSpecified = true", span="3424-3424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1559 [label="c.Name = ''James''", span="3407-3407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1560 [label="c.Age = 27", span="3408-3408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1578 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", span="3404-3404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTest()", file="JsonTextWriterAsyncTests.cs"];
m3_84 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="527-527", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonTextWriterAsyncTests.cs"];
m3_1789 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="3950-3950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1790 [label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n        serStr,\r\n        new JsonSerializerSettings\r\n        {\r\n          NullValueHandling = NullValueHandling.Ignore,\r\n          MissingMemberHandling = MissingMemberHandling.Ignore\r\n        });", span="3952-3958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1791 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="3950-3950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonTextWriterAsyncTests.cs"];
m3_578 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1109-1109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonTextWriterAsyncTests.cs"];
m3_580 [label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="1148-1148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonTextWriterAsyncTests.cs"];
m3_579 [label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="1111-1146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonTextWriterAsyncTests.cs"];
m3_581 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1109-1109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonTextWriterAsyncTests.cs"];
m3_1001 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="2165-2165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterAsyncTests.cs"];
m3_1005 [label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="2171-2171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterAsyncTests.cs"];
m3_1006 [label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="2172-2172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterAsyncTests.cs"];
m3_1007 [label="Assert.AreEqual(2, d.Dictionary.Count)", span="2173-2173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterAsyncTests.cs"];
m3_1008 [label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="2174-2174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterAsyncTests.cs"];
m3_1009 [label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="2175-2175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterAsyncTests.cs"];
m3_1010 [label="Assert.AreEqual(1, d.List.Count)", span="2176-2176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterAsyncTests.cs"];
m3_1011 [label="Assert.AreEqual(''existing'', d.List[0])", span="2177-2177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterAsyncTests.cs"];
m3_1002 [label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="2167-2167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterAsyncTests.cs"];
m3_1004 [label="Assert.IsNotNull(d.Dictionary)", span="2170-2170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterAsyncTests.cs"];
m3_1003 [label="Assert.IsNotNull(d)", span="2169-2169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterAsyncTests.cs"];
m3_1012 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="2165-2165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterAsyncTests.cs"];
m3_1221 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="JsonTextWriterAsyncTests.cs"];
m3_604 [label="Entry System.IO.File.Open(string, System.IO.FileMode)", span="0-0", cluster="System.IO.File.Open(string, System.IO.FileMode)", file="JsonTextWriterAsyncTests.cs"];
m3_37 [label="Assert.AreEqual(''TestProperty1Value'', c.TestProperty1)", span="181-181", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeDefaultValueAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1457 [label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="JsonTextWriterAsyncTests.cs"];
m3_21 [label="StringAssert.AreEqual(@''{\r\n  ''''Company'''': ''''Acme Ltd.'''',\r\n  ''''Amount'''': 50.0\r\n}'', ignored)", span="146-149", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="JsonTextWriterAsyncTests.cs"];
m3_22 [label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", span="117-117", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="JsonTextWriterAsyncTests.cs"];
m3_23 [label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", span="153-153", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_24 [label="string json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass(),\r\n                Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="155-156", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_25 [label="Assert.AreEqual(@''{''''TestField1'''':0,''''TestProperty1'''':null}'', json)", span="157-157", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_26 [label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = int.MinValue, TestProperty1 = ''NotDefault'' },\r\n                Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="159-160", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_20 [label="string ignored = JsonConvert.SerializeObject(invoice,\r\n                Formatting.Indented,\r\n                new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="142-144", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="JsonTextWriterAsyncTests.cs"];
m3_19 [label="StringAssert.AreEqual(@''{\r\n  ''''Company'''': ''''Acme Ltd.'''',\r\n  ''''Amount'''': 50.0,\r\n  ''''Paid'''': false,\r\n  ''''PaidDate'''': null,\r\n  ''''FollowUpDays'''': 30,\r\n  ''''FollowUpEmailAddress'''': ''''''''\r\n}'', included)", span="133-140", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="JsonTextWriterAsyncTests.cs"];
m3_16 [label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", span="117-117", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="JsonTextWriterAsyncTests.cs"];
m3_17 [label="Invoice invoice = new Invoice\r\n            {\r\n                Company = ''Acme Ltd.'',\r\n                Amount = 50.0m,\r\n                Paid = false,\r\n                FollowUpDays = 30,\r\n                FollowUpEmailAddress = string.Empty,\r\n                PaidDate = null\r\n            }", span="119-127", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="JsonTextWriterAsyncTests.cs"];
m3_18 [label="string included = JsonConvert.SerializeObject(invoice,\r\n                Formatting.Indented,\r\n                new JsonSerializerSettings { })", span="129-131", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="JsonTextWriterAsyncTests.cs"];
m3_27 [label="Assert.AreEqual(@''{''''TestField1'''':-2147483648,''''TestProperty1'''':''''NotDefault''''}'', json)", span="161-161", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1686 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="3724-3724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1697 [label="Assert.AreEqual(expando.Int, newExpando[''Int''])", span="3746-3746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1699 [label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="3749-3749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1703 [label="Assert.AreEqual(expando.Complex.String, (string)o[''String''])", span="3755-3755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1705 [label="Assert.AreEqual(expando.Complex.DateTime, (DateTime)o[''DateTime''])", span="3758-3758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1694 [label="Assert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''\/Date(977338500000)\/''''\r\n  }\r\n}'', json)", span="3734-3741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1687 [label="dynamic expando = new ExpandoObject()", span="3726-3726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1695 [label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="3743-3743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1696 [label="Assert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="3745-3745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1698 [label="Assert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="3748-3748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1700 [label="Assert.IsInstanceOfType(typeof(JObject), newExpando[''Complex''])", span="3751-3751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1701 [label="JObject o = (JObject)newExpando[''Complex'']", span="3752-3752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1702 [label="Assert.IsInstanceOfType(typeof(string), ((JValue)o[''String'']).Value)", span="3754-3754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1704 [label="Assert.IsInstanceOfType(typeof(DateTime), ((JValue)o[''DateTime'']).Value)", span="3757-3757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1693 [label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="3733-3733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1692 [label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="3731-3731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1688 [label="expando.Int = 1", span="3727-3727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1689 [label="expando.Decimal = 99.9d", span="3728-3728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1690 [label="expando.Complex = new ExpandoObject()", span="3729-3729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1691 [label="expando.Complex.String = ''I am a string''", span="3730-3730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1706 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="3724-3724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_485 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="27-27", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonTextWriterAsyncTests.cs"];
m3_1447 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3160-3160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterAsyncTests.cs"];
m3_1453 [label="newStrings.Add(s)", span="3170-3170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterAsyncTests.cs"];
m3_1452 [label="string s = (string)reader.Value", span="3169-3169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterAsyncTests.cs"];
m3_1449 [label="List<string> newStrings = new List<string>(existingStrings)", span="3163-3163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterAsyncTests.cs"];
m3_1454 [label="reader.Read()", span="3172-3172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterAsyncTests.cs"];
m3_1451 [label="reader.TokenType != JsonToken.EndArray", span="3167-3167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterAsyncTests.cs"];
m3_1448 [label="List<string> existingStrings = (List<string>)existingValue", span="3162-3162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterAsyncTests.cs"];
m3_1450 [label="reader.Read()", span="3165-3165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterAsyncTests.cs"];
m3_1455 [label="return newStrings;", span="3175-3175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterAsyncTests.cs"];
m3_1456 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="3160-3160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterAsyncTests.cs"];
m3_891 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="1880-1880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonTextWriterAsyncTests.cs"];
m3_894 [label="Assert.AreEqual('''', p.Name)", span="1885-1885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonTextWriterAsyncTests.cs"];
m3_893 [label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="1884-1884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonTextWriterAsyncTests.cs"];
m3_892 [label="string json = @''{''''Name'''':''''''''}''", span="1882-1882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonTextWriterAsyncTests.cs"];
m3_895 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="1880-1880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonTextWriterAsyncTests.cs"];
m3_1076 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JsonTextWriterAsyncTests.cs"];
m3_925 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="1945-1945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_931 [label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="1965-1965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_929 [label="Assert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="1957-1962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_932 [label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="1966-1966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_933 [label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="1967-1967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_934 [label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="1968-1968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_926 [label="StructTest structTest = new StructTest\r\n                                {\r\n                                  StringProperty = ''StringProperty!'',\r\n                                  StringField = ''StringField'',\r\n                                  IntProperty = 5,\r\n                                  IntField = 10\r\n                                }", span="1947-1953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_930 [label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="1964-1964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_927 [label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="1955-1955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_928 [label="Console.WriteLine(json)", span="1956-1956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_935 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="1945-1945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_420 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="665-665", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriterAsyncTests.cs"];
m3_254 [label="Entry Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", file="JsonTextWriterAsyncTests.cs"];
m3_244 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", span="541-541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_252 [label="CollectionAssert.AreEqual(collection, collectionNew)", span="562-562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_250 [label="Assert.AreEqual(@''[{''''Name'''':''''Test1'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test2'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0.0,''''Sizes'''':null},{''''Name'''':''''Test3'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0.0,''''Sizes'''':null}]'',\r\n        sw.GetStringBuilder().ToString())", span="557-558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_245 [label="ProductCollection collection = new ProductCollection()\r\n      {\r\n        new Product() { Name = ''Test1'' },\r\n        new Product() { Name = ''Test2'' },\r\n        new Product() { Name = ''Test3'' }\r\n      }", span="543-548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_251 [label="ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder().ToString())), typeof(ProductCollection))", span="560-560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_249 [label="jsonSerializer.Serialize(sw, collection)", span="555-555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_248 [label="StringWriter sw = new StringWriter()", span="553-553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_246 [label="JsonSerializer jsonSerializer = new JsonSerializer()", span="550-550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_247 [label="jsonSerializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="551-551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_253 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", span="541-541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomCollectionSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_1788 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="3882-3882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonTextWriterAsyncTests.cs"];
m3_1102 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonTextWriterAsyncTests.cs"];
m3_1173 [label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1185 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="JsonTextWriterAsyncTests.cs"];
m3_189 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="JsonTextWriterAsyncTests.cs"];
m3_191 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="450-450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonTextWriterAsyncTests.cs"];
m3_193 [label="JsonConvert.DeserializeObject<List<string>>(json)", span="454-454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonTextWriterAsyncTests.cs"];
m3_192 [label="string json = @''[''''vvv\jvvv'''']''", span="452-452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonTextWriterAsyncTests.cs"];
m3_194 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="450-450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonTextWriterAsyncTests.cs"];
m3_1175 [label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="JsonTextWriterAsyncTests.cs"];
m3_431 [label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonTextWriterAsyncTests.cs"];
m3_644 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1284-1284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_648 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="1290-1290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_651 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="1295-1295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_647 [label="string json = JsonConvert.SerializeObject(i)", span="1289-1289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_649 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="1292-1292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_650 [label="string newJson = JsonConvert.SerializeObject(ii)", span="1294-1294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_645 [label="SubKlass i = new SubKlass(''my subprop'')", span="1286-1286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_646 [label="i.SuperProp = ''overrided superprop''", span="1287-1287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_652 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1284-1284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterAsyncTests.cs"];
m3_1579 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTestClass.SpecifiedTestClass()", span="3380-3380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SpecifiedTestClass.SpecifiedTestClass()", file="JsonTextWriterAsyncTests.cs"];
m3_217 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonTextWriterAsyncTests.cs"];
m3_78 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="JsonTextWriterAsyncTests.cs"];
m3_97 [label="string json = @''{'Value':null,'IntValue1':1,'IntValue2':0,'IntValue3':null}''", span="330-330", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="JsonTextWriterAsyncTests.cs"];
m3_878 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="1854-1854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonTextWriterAsyncTests.cs"];
m3_880 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="1858-1858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonTextWriterAsyncTests.cs"];
m3_879 [label="string json = @''{}''", span="1856-1856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonTextWriterAsyncTests.cs"];
m3_881 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="1854-1854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1757 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="3862-3862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1762 [label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="3876-3876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1763 [label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="3877-3877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1761 [label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="3874-3874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1759 [label="var settings = new JsonSerializerSettings\r\n      {\r\n        TypeNameHandling = TypeNameHandling.Objects,\r\n        ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n      }", span="3866-3870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1760 [label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="3872-3872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1758 [label="var derived = new Derived(''meh'', ''woo'')", span="3864-3864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1764 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="3862-3862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1186 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="JsonTextWriterAsyncTests.cs"];
m3_460 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonTextWriterAsyncTests.cs"];
m3_80 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="194-194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonTextWriterAsyncTests.cs"];
m3_1727 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="3793-3793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1730 [label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="3797-3797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1729 [label="IDictionary<string, decimal> d = JsonConvert.DeserializeObject<IDictionary<string, decimal>>(json)", span="3796-3796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1728 [label="string json = ''{'Value':123456789876543.21}''", span="3795-3795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1731 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="3793-3793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonTextWriterAsyncTests.cs"];
m3_209 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonTextWriterAsyncTests.cs"];
m3_1179 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="JsonTextWriterAsyncTests.cs"];
m3_353 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="696-696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonTextWriterAsyncTests.cs"];
m3_358 [label="Assert.AreEqual(ts, c.TimeSpanField)", span="706-706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonTextWriterAsyncTests.cs"];
m3_356 [label="Assert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="701-703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonTextWriterAsyncTests.cs"];
m3_354 [label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="698-698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonTextWriterAsyncTests.cs"];
m3_357 [label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="705-705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonTextWriterAsyncTests.cs"];
m3_355 [label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="700-700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonTextWriterAsyncTests.cs"];
m3_359 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="696-696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1153 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2598-2598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1154 [label="_stringValue = info.GetString(''stringValue'')", span="2600-2600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1155 [label="_intValue = info.GetInt32(''intValue'')", span="2601-2601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1156 [label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="2602-2602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1157 [label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="2603-2603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1158 [label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="2604-2604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1159 [label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="2605-2605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1160 [label="_booleanValue = info.GetBoolean(''booleanValue'')", span="2607-2607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1161 [label="_byteValue = info.GetByte(''byteValue'')", span="2608-2608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1162 [label="_charValue = info.GetChar(''charValue'')", span="2609-2609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1163 [label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="2610-2610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1164 [label="_decimalValue = info.GetDecimal(''decimalValue'')", span="2611-2611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1165 [label="_shortValue = info.GetInt16(''shortValue'')", span="2612-2612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1166 [label="_longValue = info.GetInt64(''longValue'')", span="2613-2613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1167 [label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="2614-2614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1168 [label="_floatValue = info.GetSingle(''floatValue'')", span="2615-2615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1169 [label="_ushortValue = info.GetUInt16(''ushortValue'')", span="2616-2616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1170 [label="_uintValue = info.GetUInt32(''uintValue'')", span="2617-2617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1171 [label="_ulongValue = info.GetUInt64(''ulongValue'')", span="2618-2618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1172 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2598-2598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_212 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffset()", span="484-484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffset()", file="JsonTextWriterAsyncTests.cs"];
m3_215 [label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="494-494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffset()", file="JsonTextWriterAsyncTests.cs"];
m3_214 [label="string result = JsonConvert.SerializeObject(testDates)", span="493-493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffset()", file="JsonTextWriterAsyncTests.cs"];
m3_213 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset> {\r\n        new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n      }", span="486-491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffset()", file="JsonTextWriterAsyncTests.cs"];
m3_216 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffset()", span="484-484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffset()", file="JsonTextWriterAsyncTests.cs"];
m3_336 [label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonTextWriterAsyncTests.cs"];
m3_1668 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", span="3680-3680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", file="JsonTextWriterAsyncTests.cs"];
m3_1670 [label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="3687-3687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", file="JsonTextWriterAsyncTests.cs"];
m3_1672 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="3689-3689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", file="JsonTextWriterAsyncTests.cs"];
m3_1673 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="3690-3690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", file="JsonTextWriterAsyncTests.cs"];
m3_1669 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n      {\r\n        Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n      })", span="3682-3685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", file="JsonTextWriterAsyncTests.cs"];
m3_1671 [label="var deserializeObject = JsonConvert.DeserializeObject<TimeZoneOffsetObject>(serializeObject)", span="3688-3688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", file="JsonTextWriterAsyncTests.cs"];
m3_1674 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", span="3680-3680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffset()", file="JsonTextWriterAsyncTests.cs"];
m3_1080 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="2420-2420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_1081 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="2420-2420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_30 [label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21, TestProperty1 = ''TestProperty1Value'' },\r\n                Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="167-168", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_33 [label="Entry Newtonsoft.Json.Tests.TestObjects.DefaultValueAttributeTestClass.DefaultValueAttributeTestClass()", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.DefaultValueAttributeTestClass.DefaultValueAttributeTestClass()", file="JsonTextWriterAsyncTests.cs"];
m3_34 [label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeDefaultValueAttributeTest()", span="173-173", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeDefaultValueAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_35 [label="string json = ''{}''", span="175-175", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeDefaultValueAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_32 [label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", span="153-153", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_31 [label="Assert.AreEqual(@''{}'', json)", span="169-169", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_36 [label="DefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<DefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="177-180", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeDefaultValueAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_590 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="1161-1161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonTextWriterAsyncTests.cs"];
m3_591 [label="Person person = new Person\r\n                        {\r\n                          Name = ''Mike Manager'',\r\n                          BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                          Department = ''IT'',\r\n                          LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n                        }", span="1163-1169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonTextWriterAsyncTests.cs"];
m3_592 [label="return person;", span="1170-1170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonTextWriterAsyncTests.cs"];
m3_593 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="1161-1161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonTextWriterAsyncTests.cs"];
m3_493 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="342-342", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonTextWriterAsyncTests.cs"];
m3_607 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="440-440", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonTextWriterAsyncTests.cs"];
m3_553 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1067-1067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_555 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1073-1073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_554 [label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="1069-1071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_556 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1067-1067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_548 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="1051-1051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_549 [label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n        {\r\n          FirstName = null,\r\n          BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n          LastName = null,\r\n          MiddleName = null\r\n        }", span="1053-1059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_551 [label="Console.WriteLine(json)", span="1062-1062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_550 [label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="1061-1061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_552 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="1051-1051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1768 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3898-3898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1769 [label="info.AddValue(''Name'', _name)", span="3900-3900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1770 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3898-3898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_159 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonTextWriterAsyncTests.cs"];
m3_1357 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="2984-2984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="JsonTextWriterAsyncTests.cs"];
m3_12 [label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", span="90-90", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", file="JsonTextWriterAsyncTests.cs"];
m3_737 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="1518-1518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterAsyncTests.cs"];
m3_740 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="1533-1533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterAsyncTests.cs"];
m3_741 [label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="1534-1534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterAsyncTests.cs"];
m3_742 [label="Assert.AreEqual(3.99, deserializedProduct.Price)", span="1535-1535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterAsyncTests.cs"];
m3_743 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="1536-1536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterAsyncTests.cs"];
m3_744 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="1537-1537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterAsyncTests.cs"];
m3_745 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="1538-1538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterAsyncTests.cs"];
m3_739 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="1531-1531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterAsyncTests.cs"];
m3_738 [label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="1520-1529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterAsyncTests.cs"];
m3_746 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="1518-1518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterAsyncTests.cs"];
m3_0 [label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateWithJsonIgnoreAttribute()", span="80-80", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateWithJsonIgnoreAttribute()", file="JsonTextWriterAsyncTests.cs"];
m3_4 [label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateWithJsonIgnoreAttribute()", span="80-80", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateWithJsonIgnoreAttribute()", file="JsonTextWriterAsyncTests.cs"];
m3_5 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="392-392", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonTextWriterAsyncTests.cs"];
m3_1 [label="string json = ''{\''Data\'':\''Other with some more text\''}''", span="82-82", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateWithJsonIgnoreAttribute()", file="JsonTextWriterAsyncTests.cs"];
m3_3 [label="Assert.AreEqual(MyEnum.Other, result.Status)", span="86-86", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateWithJsonIgnoreAttribute()", file="JsonTextWriterAsyncTests.cs"];
m3_6 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriterAsyncTests.cs"];
m3_2 [label="MyClass result = JsonConvert.DeserializeObject<MyClass>(json, new JsonSerializerSettings() { DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate })", span="84-84", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.PopulateWithJsonIgnoreAttribute()", file="JsonTextWriterAsyncTests.cs"];
m3_7 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonTextWriterAsyncTests.cs"];
m3_1335 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonTextWriterAsyncTests.cs"];
m3_301 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="623-623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterAsyncTests.cs"];
m3_306 [label="wibble.Bar.Add(3)", span="629-629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", color=green, community=0, file="JsonTextWriterAsyncTests.cs"];
m3_302 [label="ClassWithArray wibble = new ClassWithArray()", span="625-625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterAsyncTests.cs"];
m3_305 [label="wibble.Bar.Add(2)", span="628-628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterAsyncTests.cs"];
m3_307 [label="string json = JsonConvert.SerializeObject(wibble)", span="630-630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterAsyncTests.cs"];
m3_315 [label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="640-640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", color=green, community=0, file="JsonTextWriterAsyncTests.cs"];
m3_308 [label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="632-632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterAsyncTests.cs"];
m3_314 [label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="639-639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterAsyncTests.cs"];
m3_309 [label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="633-633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterAsyncTests.cs"];
m3_310 [label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="635-635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterAsyncTests.cs"];
m3_311 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="636-636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterAsyncTests.cs"];
m3_312 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="637-637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterAsyncTests.cs"];
m3_313 [label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="638-638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterAsyncTests.cs"];
m3_303 [label="wibble.Foo = ''hello''", span="626-626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterAsyncTests.cs"];
m3_304 [label="wibble.Bar.Add(1)", span="627-627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterAsyncTests.cs"];
m3_316 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="623-623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterAsyncTests.cs"];
m3_111 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="237-237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_112 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonTextWriterAsyncTests.cs"];
m3_113 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="250-250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonTextWriterAsyncTests.cs"];
m3_114 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="252-329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonTextWriterAsyncTests.cs"];
m3_115 [label="object o = JsonConvert.DeserializeObject(json)", span="330-330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonTextWriterAsyncTests.cs"];
m3_432 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="826-826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_438 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="836-836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_439 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="837-837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_436 [label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="832-832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_433 [label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="828-828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_437 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="834-834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_435 [label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="831-831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_434 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="829-829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_440 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="826-826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_653 [label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonTextWriterAsyncTests.cs"];
m3_606 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="109-109", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriterAsyncTests.cs"];
m3_779 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="1622-1622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterAsyncTests.cs"];
m3_782 [label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="1640-1640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterAsyncTests.cs"];
m3_783 [label="Assert.AreEqual(2, content.Children.Count)", span="1641-1641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterAsyncTests.cs"];
m3_784 [label="Assert.AreEqual(''First'', content.Children[0].Text)", span="1642-1642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterAsyncTests.cs"];
m3_785 [label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="1643-1643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterAsyncTests.cs"];
m3_781 [label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="1638-1638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterAsyncTests.cs"];
m3_780 [label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="1624-1636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterAsyncTests.cs"];
m3_786 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="1622-1622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterAsyncTests.cs"];
m3_58 [label="Assert.AreEqual(@''{''''firstName'''':''''blub''''}'', json)", span="261-261", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="JsonTextWriterAsyncTests.cs"];
m3_79 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="192-192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonTextWriterAsyncTests.cs"];
m3_1391 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", span="3043-3043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_1394 [label="Assert.AreEqual(@''''''host\\user'''''', serialized)", span="3047-3047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_1397 [label="Assert.AreEqual(@''{''''5'''':''''host\\user''''}'', JsonConvert.SerializeObject(d1))", span="3051-3051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_1400 [label="Assert.AreEqual(@''{''''host\\user'''':5}'', JsonConvert.SerializeObject(d2))", span="3055-3055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_1393 [label="string serialized = JsonConvert.SerializeObject(s)", span="3046-3046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_1395 [label="Dictionary<int, object> d1 = new Dictionary<int, object>()", span="3049-3049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_1396 [label="d1.Add(5, s)", span="3050-3050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_1398 [label="Dictionary<string, object> d2 = new Dictionary<string, object>()", span="3053-3053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_1399 [label="d2.Add(s, 5)", span="3054-3054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_1392 [label="string s = @''host\user''", span="3045-3045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_1401 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", span="3043-3043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestEscapeDictionaryStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_1013 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonTextWriterAsyncTests.cs"];
m3_1017 [label="Entry lambda expression", span="2214-2214", cluster="lambda expression", file="JsonTextWriterAsyncTests.cs"];
m3_1018 [label="x.Id == id", span="2214-2214", cluster="lambda expression", file="JsonTextWriterAsyncTests.cs"];
m3_1019 [label="Exit lambda expression", span="2214-2214", cluster="lambda expression", file="JsonTextWriterAsyncTests.cs"];
m3_442 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="841-841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_446 [label="Console.WriteLine(json)", span="853-853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_445 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="851-851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_444 [label="MemberConverterClass c = new MemberConverterClass\r\n        {\r\n          DefaultConverter = date,\r\n          MemberConverter = date\r\n        }", span="845-849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_443 [label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="843-843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_447 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="841-841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonTextWriterAsyncTests.cs"];
m3_902 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="1904-1904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonTextWriterAsyncTests.cs"];
m3_903 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'')", span="1906-1906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonTextWriterAsyncTests.cs"];
m3_904 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="1904-1904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonTextWriterAsyncTests.cs"];
m3_982 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonTextWriterAsyncTests.cs"];
m3_1246 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="2713-2713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterAsyncTests.cs"];
m3_1248 [label="Assert.AreEqual(2, kvPairs.Count)", span="2719-2719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterAsyncTests.cs"];
m3_1249 [label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="2720-2720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterAsyncTests.cs"];
m3_1250 [label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="2721-2721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterAsyncTests.cs"];
m3_1251 [label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="2722-2722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterAsyncTests.cs"];
m3_1252 [label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="2723-2723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterAsyncTests.cs"];
m3_1247 [label="List<KVPair<string, string>> kvPairs =\r\n        JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n          ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="2715-2717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterAsyncTests.cs"];
m3_1253 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="2713-2713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterAsyncTests.cs"];
m3_970 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="2038-2038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterAsyncTests.cs"];
m3_978 [label="Assert.AreEqual(2, searchResults.Count)", span="2113-2113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterAsyncTests.cs"];
m3_979 [label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="2114-2114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterAsyncTests.cs"];
m3_980 [label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="2115-2115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterAsyncTests.cs"];
m3_977 [label="searchResults.Add(searchResult)", span="2102-2102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterAsyncTests.cs"];
m3_974 [label="IList<SearchResult> searchResults = new List<SearchResult>()", span="2098-2098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterAsyncTests.cs"];
m3_975 [label=results, span="2099-2099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterAsyncTests.cs"];
m3_976 [label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="2101-2101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterAsyncTests.cs"];
m3_973 [label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="2095-2095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterAsyncTests.cs"];
m3_972 [label="JObject googleSearch = JObject.Parse(googleSearchText)", span="2092-2092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterAsyncTests.cs"];
m3_971 [label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="2040-2090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterAsyncTests.cs"];
m3_981 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="2038-2038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterAsyncTests.cs"];
m3_9 [label="Invoice invoice = new Invoice\r\n            {\r\n                Company = ''Acme Ltd.'',\r\n                Amount = 50.0m,\r\n                Paid = false,\r\n                FollowUpDays = 30,\r\n                FollowUpEmailAddress = string.Empty,\r\n                PaidDate = null\r\n            }", span="92-100", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", file="JsonTextWriterAsyncTests.cs"];
m3_10 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="626-626", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonTextWriterAsyncTests.cs"];
m3_11 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonTextWriterAsyncTests.cs"];
m3_1110 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonTextWriterAsyncTests.cs"];
m3_582 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="1153-1153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_586 [label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="1158-1158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_585 [label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="1157-1157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_583 [label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="1155-1155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_584 [label="testClass.co = new Co()", span="1156-1156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_587 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="1153-1153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_959 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="2010-2010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_964 [label="Assert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="2018-2021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_963 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="2016-2016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_960 [label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="2012-2012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_962 [label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="2014-2014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_961 [label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="2013-2013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_965 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="2010-2010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_950 [label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonTextWriterAsyncTests.cs"];
m3_1220 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="JsonTextWriterAsyncTests.cs"];
m3_347 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="681-681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonTextWriterAsyncTests.cs"];
m3_349 [label="Assert.AreEqual(@''1'', json)", span="684-684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonTextWriterAsyncTests.cs"];
m3_351 [label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="687-687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonTextWriterAsyncTests.cs"];
m3_348 [label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="683-683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonTextWriterAsyncTests.cs"];
m3_350 [label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="686-686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonTextWriterAsyncTests.cs"];
m3_352 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="681-681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonTextWriterAsyncTests.cs"];
m3_924 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonTextWriterAsyncTests.cs"];
m3_595 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", span="1174-1174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonTextWriterAsyncTests.cs"];
m3_601 [label="JsonSerializer serializer = new JsonSerializer()", span="1190-1190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonTextWriterAsyncTests.cs"];
m3_596 [label="Person person = GetPerson()", span="1182-1182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonTextWriterAsyncTests.cs"];
m3_600 [label="jw.Formatting = Formatting.Indented", span="1188-1188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonTextWriterAsyncTests.cs"];
m3_602 [label="serializer.Serialize(jw, person)", span="1191-1191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonTextWriterAsyncTests.cs"];
m3_597 [label="FileStream fs = System.IO.File.Open(@''c:\person.json'', FileMode.CreateNew)", span="1184-1184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonTextWriterAsyncTests.cs"];
m3_599 [label="JsonWriter jw = new JsonTextWriter(sw)", span="1186-1186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonTextWriterAsyncTests.cs"];
m3_598 [label="StreamWriter sw = new StreamWriter(fs)", span="1185-1185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonTextWriterAsyncTests.cs"];
m3_603 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", span="1174-1174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonToFile()", file="JsonTextWriterAsyncTests.cs"];
m3_328 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="657-657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterAsyncTests.cs"];
m3_334 [label="Assert.AreEqual(''[3,2,1]'', json)", span="665-665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterAsyncTests.cs"];
m3_333 [label="string json = JsonConvert.SerializeObject(s)", span="664-664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterAsyncTests.cs"];
m3_329 [label="Stack<object> s = new Stack<object>()", span="659-659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterAsyncTests.cs"];
m3_332 [label="s.Push(3)", span="662-662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterAsyncTests.cs"];
m3_330 [label="s.Push(1)", span="660-660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterAsyncTests.cs"];
m3_331 [label="s.Push(2)", span="661-661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterAsyncTests.cs"];
m3_335 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="657-657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterAsyncTests.cs"];
m3_195 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="458-458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_205 [label="Assert.AreEqual(expected, result)", span="480-480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_204 [label="result = JsonConvert.SerializeObject(testDates)", span="479-479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_203 [label="string expected = sr.ReadToEnd()", span="477-477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_196 [label="List<DateTime> testDates = new List<DateTime> {\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n      }", span="460-467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_202 [label="StreamReader sr = new StreamReader(ms)", span="475-475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_197 [label="string result", span="468-468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_200 [label="s.WriteObject(ms, testDates)", span="473-473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_198 [label="MemoryStream ms = new MemoryStream()", span="471-471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_201 [label="ms.Seek(0, SeekOrigin.Begin)", span="474-474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_199 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="472-472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_206 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="458-458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_127 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="336-336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_536 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonTextWriterAsyncTests.cs"];
m3_94 [label="Assert.AreEqual(c.Field, ''Field'')", span="222-222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_703 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1438-1438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonTextWriterAsyncTests.cs"];
m3_704 [label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="1440-1440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonTextWriterAsyncTests.cs"];
m3_705 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1438-1438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonTextWriterAsyncTests.cs"];
m3_177 [label="Entry Unk.ReadObject", span="", cluster="Unk.ReadObject", file="JsonTextWriterAsyncTests.cs"];
m3_1333 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="2898-2898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_589 [label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonTextWriterAsyncTests.cs"];
m3_1099 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="2498-2498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1100 [label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="2500-2500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1101 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="2498-2498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterAsyncTests.cs"];
m3_99 [label="Assert.AreEqual(int.MaxValue, o.IntValue1)", span="337-337", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="JsonTextWriterAsyncTests.cs"];
m3_102 [label="Assert.AreEqual(''Derp!'', o.ClassValue.Derp)", span="340-340", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="JsonTextWriterAsyncTests.cs"];
m3_101 [label="Assert.AreEqual(int.MaxValue, o.IntValue3)", span="339-339", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="JsonTextWriterAsyncTests.cs"];
m3_100 [label="Assert.AreEqual(int.MinValue, o.IntValue2)", span="338-338", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="JsonTextWriterAsyncTests.cs"];
m3_103 [label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", span="328-328", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="JsonTextWriterAsyncTests.cs"];
m3_98 [label="var o = JsonConvert.DeserializeObject<DefaultValueHandlingDeserializeHolder>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Ignore\r\n            })", span="332-335", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="JsonTextWriterAsyncTests.cs"];
m3_120 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="336-336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonTextWriterAsyncTests.cs"];
m3_421 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", span="811-811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_427 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="821-821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_428 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="822-822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_425 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="817-817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_422 [label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="813-813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_426 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="819-819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_424 [label="string json = JsonConvert.SerializeObject(m1)", span="816-816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_423 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="814-814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_429 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", span="811-811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_41 [label="testDictionary[''date''] = dateValue", span="147-147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterAsyncTests.cs"];
m3_42 [label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="149-149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterAsyncTests.cs"];
m3_43 [label="MemoryStream ms = new MemoryStream()", span="152-152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterAsyncTests.cs"];
m3_44 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="153-153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterAsyncTests.cs"];
m3_45 [label="serializer.WriteObject(ms, testDictionary)", span="154-154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterAsyncTests.cs"];
m3_46 [label="byte[] data = ms.ToArray()", span="156-156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterAsyncTests.cs"];
m3_47 [label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="157-157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterAsyncTests.cs"];
m3_48 [label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="160-160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterAsyncTests.cs"];
m3_1034 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="2188-2188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="JsonTextWriterAsyncTests.cs"];
m3_617 [label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonTextWriterAsyncTests.cs"];
m3_96 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="216-216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1125 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="2536-2536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1126 [label="return _innerDictionary.Remove(key);", span="2538-2538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1127 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="2536-2536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonTextWriterAsyncTests.cs"];
m3_836 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", span="1761-1761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_842 [label="Assert.AreEqual(2, products.Count)", span="1788-1788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_843 [label="Assert.AreEqual(''Product 1'', products[0].Name)", span="1789-1789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_838 [label="List<Product> products = JsonConvert.DeserializeObject<List<Product>>(json)", span="1778-1778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_841 [label="Console.WriteLine(p1.Name)", span="1785-1785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_837 [label="string json = @''[\r\n        {\r\n          ''''Name'''': ''''Product 1'''',\r\n          ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n          ''''Price'''': 99.95,\r\n          ''''Sizes'''': null\r\n        },\r\n        {\r\n          ''''Name'''': ''''Product 2'''',\r\n          ''''ExpiryDate'''': ''''\/Date(1248998400000)\/'''',\r\n          ''''Price'''': 12.50,\r\n          ''''Sizes'''': null\r\n        }\r\n      ]''", span="1763-1776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_839 [label="Console.WriteLine(products.Count)", span="1780-1780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_840 [label="Product p1 = products[0]", span="1783-1783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_844 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", span="1761-1761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_1077 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="2377-2377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonTextWriterAsyncTests.cs"];
m3_1336 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JsonTextWriterAsyncTests.cs"];
m3_1103 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="2503-2503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1104 [label="return _innerDictionary.ContainsKey(key);", span="2505-2505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1105 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="2503-2503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1542 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTestClass.ShouldSerializeTestClass()", span="3298-3298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ShouldSerializeTestClass.ShouldSerializeTestClass()", file="JsonTextWriterAsyncTests.cs"];
m3_874 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="1845-1845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_876 [label="JsonConvert.DeserializeObject<Person>(json)", span="1849-1849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_875 [label="string json = @''[]''", span="1847-1847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_877 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="1845-1845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1659 [label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0", cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_38 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="143-143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterAsyncTests.cs"];
m3_39 [label="DateTime dateValue = new DateTime(2010, 3, 30)", span="145-145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterAsyncTests.cs"];
m3_40 [label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterAsyncTests.cs"];
m3_211 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="JsonTextWriterAsyncTests.cs"];
m3_1209 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="JsonTextWriterAsyncTests.cs"];
m3_862 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonTextWriterAsyncTests.cs"];
m3_997 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="2151-2151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonTextWriterAsyncTests.cs"];
m3_998 [label="Dictionary = new Dictionary<string, string>\r\n                       {\r\n                         {''existing'', ''yup''}\r\n                       }", span="2153-2156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonTextWriterAsyncTests.cs"];
m3_999 [label="List = new List<string>\r\n                 {\r\n                   ''existing''\r\n                 }", span="2157-2160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonTextWriterAsyncTests.cs"];
m3_1000 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="2151-2151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonTextWriterAsyncTests.cs"];
m3_1608 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="3512-3512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="JsonTextWriterAsyncTests.cs"];
m3_771 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="95-95", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonTextWriterAsyncTests.cs"];
m3_272 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="580-580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_278 [label="Assert.AreEqual(1, wibble.Bar[1])", span="588-588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", color=green, community=0, file="JsonTextWriterAsyncTests.cs"];
m3_274 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="583-583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_277 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="587-587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_279 [label="Assert.AreEqual(2, wibble.Bar[2])", span="589-589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_275 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="584-584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_276 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="586-586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_280 [label="Assert.AreEqual(3, wibble.Bar[3])", span="590-590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_273 [label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="582-582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_281 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="580-580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_262 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="410-410", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextWriterAsyncTests.cs"];
m3_1218 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="JsonTextWriterAsyncTests.cs"];
m3_664 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="121-121", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonTextWriterAsyncTests.cs"];
m3_1178 [label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="JsonTextWriterAsyncTests.cs"];
m3_220 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="499-499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_227 [label="CollectionAssert.AreEqual(values, newValues)", span="511-511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_225 [label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="507-507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_221 [label="Dictionary<int, int> values = new Dictionary<int, int>()", span="501-501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_226 [label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="509-509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_224 [label="string json = JsonConvert.SerializeObject(values)", span="505-505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_222 [label="values.Add(-5, 6)", span="502-502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_223 [label="values.Add(int.MinValue, int.MaxValue)", span="503-503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_228 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="499-499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_1637 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonTextWriterAsyncTests.cs"];
m3_983 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="2119-2119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterAsyncTests.cs"];
m3_994 [label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="2143-2143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterAsyncTests.cs"];
m3_992 [label="Assert.AreEqual(\r\n        @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''\/Date(975542399000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(975542399000)\/''''\r\n  }\r\n}'',\r\n        json)", span="2131-2140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterAsyncTests.cs"];
m3_985 [label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="2122-2122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterAsyncTests.cs"];
m3_993 [label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="2142-2142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterAsyncTests.cs"];
m3_991 [label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="2130-2130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterAsyncTests.cs"];
m3_986 [label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="2124-2124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterAsyncTests.cs"];
m3_989 [label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="2127-2127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterAsyncTests.cs"];
m3_984 [label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="2121-2121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterAsyncTests.cs"];
m3_987 [label="wagePerson.Department = ''McDees''", span="2125-2125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterAsyncTests.cs"];
m3_988 [label="wagePerson.HourlyWage = 12.50m", span="2126-2126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterAsyncTests.cs"];
m3_990 [label="wagePerson.Name = ''Jim Bob''", span="2128-2128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterAsyncTests.cs"];
m3_995 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="2119-2119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterAsyncTests.cs"];
m3_632 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="7-7", cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1472 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="749-749", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriterAsyncTests.cs"];
m3_123 [label="IntValue1 = int.MaxValue", span="411-411", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="JsonTextWriterAsyncTests.cs"];
m3_126 [label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", span="405-405", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="JsonTextWriterAsyncTests.cs"];
m3_122 [label="ClassValue = new DefaultValueHandlingDeserialize\r\n            {\r\n                Derp = ''Derp!''\r\n            }", span="407-410", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="JsonTextWriterAsyncTests.cs"];
m3_124 [label="IntValue2 = int.MinValue", span="412-412", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="JsonTextWriterAsyncTests.cs"];
m3_125 [label="IntValue3 = int.MaxValue", span="413-413", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="JsonTextWriterAsyncTests.cs"];
m3_121 [label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", span="405-405", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder.DefaultValueHandlingDeserializeHolder()", file="JsonTextWriterAsyncTests.cs"];
m3_794 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", span="1659-1659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_797 [label="Assert.AreEqual(''Router'', o.Action)", span="1665-1665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_798 [label="Assert.AreEqual(''Navigate'', o.Method)", span="1666-1666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_799 [label="Assert.AreEqual(2, o.Data.Length)", span="1667-1667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_800 [label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1668-1668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_801 [label="Assert.AreEqual(null, o.Data[1])", span="1669-1669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_796 [label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1663-1663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_795 [label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',null],''''type'''':''''rpc'''',''''tid'''':2}''", span="1661-1661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_802 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", span="1659-1659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrimitiveValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1128 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonTextWriterAsyncTests.cs"];
m3_1182 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="JsonTextWriterAsyncTests.cs"];
m3_371 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonTextWriterAsyncTests.cs"];
m3_374 [label="Assert.AreEqual(4, o.Count)", span="729-729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonTextWriterAsyncTests.cs"];
m3_375 [label="Assert.AreEqual(3, ((JArray)o[2]).Count)", span="730-730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonTextWriterAsyncTests.cs"];
m3_376 [label="Assert.AreEqual(0, ((JObject)o[3]).Count)", span="731-731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonTextWriterAsyncTests.cs"];
m3_373 [label="ArrayList o = JsonConvert.DeserializeObject<ArrayList>(jsonText)", span="727-727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonTextWriterAsyncTests.cs"];
m3_372 [label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="726-726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonTextWriterAsyncTests.cs"];
m3_377 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonTextWriterAsyncTests.cs"];
m3_1208 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonTextWriterAsyncTests.cs"];
m3_1765 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3886-3886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1766 [label="_name = info.GetString(''Name'')", span="3888-3888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_1767 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="3886-3886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterAsyncTests.cs"];
m3_966 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="2026-2026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_968 [label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="2034-2034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_967 [label="string json =\r\n        @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="2028-2032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_969 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="2026-2026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_167 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="413-413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterAsyncTests.cs"];
m3_173 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="423-423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterAsyncTests.cs"];
m3_172 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="422-422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterAsyncTests.cs"];
m3_170 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="418-418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterAsyncTests.cs"];
m3_171 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="420-420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterAsyncTests.cs"];
m3_168 [label="string json = @''[''''PRE\u003cPOST'''']''", span="415-415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterAsyncTests.cs"];
m3_169 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="417-417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterAsyncTests.cs"];
m3_174 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="413-413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterAsyncTests.cs"];
m3_267 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="JsonTextWriterAsyncTests.cs"];
m3_1184 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="JsonTextWriterAsyncTests.cs"];
m3_260 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="62-62", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextWriterAsyncTests.cs"];
m3_50 [label="GlobalId = -1", span="244-244", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="JsonTextWriterAsyncTests.cs"];
m3_49 [label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", span="242-242", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="JsonTextWriterAsyncTests.cs"];
m3_51 [label="FloatGlobalId = -1.0f", span="245-245", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="JsonTextWriterAsyncTests.cs"];
m3_52 [label="Amount = 0.0m", span="246-246", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="JsonTextWriterAsyncTests.cs"];
m3_54 [label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", span="242-242", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="JsonTextWriterAsyncTests.cs"];
m3_53 [label="Age = 0", span="247-247", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="JsonTextWriterAsyncTests.cs"];
m3_55 [label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", span="252-252", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="JsonTextWriterAsyncTests.cs"];
m3_1114 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonTextWriterAsyncTests.cs"];
m3_1133 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="2546-2546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonTextWriterAsyncTests.cs"];
m3_1134 [label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="2548-2548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonTextWriterAsyncTests.cs"];
m3_1135 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="2546-2546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonTextWriterAsyncTests.cs"];
m3_1174 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="JsonTextWriterAsyncTests.cs"];
m3_722 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="1481-1481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_725 [label="Assert.AreEqual(''Name!'', c.Name)", span="1505-1505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_726 [label="Assert.AreEqual(3, c.Dictionary.Count)", span="1506-1506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_727 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="1507-1507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_728 [label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="1508-1508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_729 [label="Assert.AreEqual(4, c.Collection.Count)", span="1509-1509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_730 [label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="1510-1510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_731 [label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="1511-1511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_732 [label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="1512-1512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_733 [label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="1513-1513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_724 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n        new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="1502-1503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_734 [label="Assert.IsNotNull(c.Random)", span="1514-1514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_723 [label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="1483-1500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_735 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="1481-1481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_1210 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="JsonTextWriterAsyncTests.cs"];
m3_478 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="904-904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonTextWriterAsyncTests.cs"];
m3_482 [label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="916-916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonTextWriterAsyncTests.cs"];
m3_481 [label="json = JsonConvert.SerializeObject(personRaw)", span="915-915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonTextWriterAsyncTests.cs"];
m3_479 [label="PersonRaw personRaw = new PersonRaw\r\n      {\r\n        FirstName = ''FirstNameValue'',\r\n        RawContent = new JRaw(''[1,2,3,4,5]''),\r\n        LastName = ''LastNameValue''\r\n      }", span="906-911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonTextWriterAsyncTests.cs"];
m3_480 [label="string json", span="913-913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonTextWriterAsyncTests.cs"];
m3_483 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="904-904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonTextWriterAsyncTests.cs"];
m3_190 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonTextWriterAsyncTests.cs"];
m3_1107 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="2508-2508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonTextWriterAsyncTests.cs"];
m3_1108 [label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="2510-2510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonTextWriterAsyncTests.cs"];
m3_1109 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="2508-2508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonTextWriterAsyncTests.cs"];
m3_663 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_1458 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="204-204", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonTextWriterAsyncTests.cs"];
m3_845 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="1794-1794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonTextWriterAsyncTests.cs"];
m3_848 [label="Assert.AreEqual(null, c.DateTimeField)", span="1799-1799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonTextWriterAsyncTests.cs"];
m3_847 [label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="1798-1798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonTextWriterAsyncTests.cs"];
m3_846 [label="string json = @''{''''DateTimeField'''':''''''''}''", span="1796-1796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonTextWriterAsyncTests.cs"];
m3_849 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="1794-1794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonTextWriterAsyncTests.cs"];
m3_1652 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonTextWriterAsyncTests.cs"];
m3_56 [label="NetworkUser user = new NetworkUser\r\n            {\r\n                Firstname = ''blub''\r\n            }", span="254-257", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="JsonTextWriterAsyncTests.cs"];
m3_1296 [label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonTextWriterAsyncTests.cs"];
m3_633 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonTextWriterAsyncTests.cs"];
m3_318 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonTextWriterAsyncTests.cs"];
m3_141 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonTextWriterAsyncTests.cs"];
m3_1137 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="2553-2553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_1141 [label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="2560-2560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_1143 [label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="2563-2563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_1144 [label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="2564-2564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_1140 [label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="2558-2558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_1142 [label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="2562-2562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_1138 [label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="2555-2555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_1139 [label="modelStateDictionary.Add(''key'', ''value'')", span="2556-2556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_1145 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="2553-2553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_1428 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", span="3102-3102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1434 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''key1'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 1.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''\/Date(975711661000)\/'''',\r\n      ''''LastModified'''': ''''\/Date(975711661000)\/''''\r\n    }\r\n  },\r\n  {\r\n    ''''Key'''': ''''key2'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 2.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''\/Date(975711661000)\/'''',\r\n      ''''LastModified'''': ''''\/Date(975711661000)\/''''\r\n    }\r\n  }\r\n]'', json)", span="3124-3143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1436 [label="Assert.AreEqual(2, result.Count)", span="3146-3146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1437 [label="Assert.AreEqual(''key1'', result[0].Key)", span="3147-3147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1438 [label="Assert.AreEqual(1, result[0].Value.HourlyWage)", span="3148-3148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1439 [label="Assert.AreEqual(''key2'', result[1].Key)", span="3149-3149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1440 [label="Assert.AreEqual(2, result[1].Value.HourlyWage)", span="3150-3150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1433 [label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="3122-3122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1435 [label="List<KeyValuePair<string, WagePerson>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, WagePerson>>>(json)", span="3145-3145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1429 [label="DateTime dateTime = new DateTime(2000, 12, 1, 23, 1, 1, DateTimeKind.Utc)", span="3104-3104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1430 [label="List<KeyValuePair<string, WagePerson>> list = new List<KeyValuePair<string, WagePerson>>()", span="3106-3106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1432 [label="list.Add(new KeyValuePair<string, WagePerson>(''key2'', new WagePerson\r\n      {\r\n        BirthDate = dateTime,\r\n        Department = ''Department2'',\r\n        LastModified = dateTime,\r\n        HourlyWage = 2\r\n      }))", span="3114-3120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1431 [label="list.Add(new KeyValuePair<string, WagePerson>(''key1'', new WagePerson\r\n                                                              {\r\n                                                                BirthDate = dateTime,\r\n                                                                Department = ''Department1'',\r\n                                                                LastModified = dateTime,\r\n                                                                HourlyWage = 1\r\n                                                              }))", span="3107-3113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1441 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", span="3102-3102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeComplexKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1295 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="517-517", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonTextWriterAsyncTests.cs"];
m3_361 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="690-690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonTextWriterAsyncTests.cs"];
m3_360 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonTextWriterAsyncTests.cs"];
m3_908 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="1917-1917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_914 [label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="1926-1926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_913 [label="string json = JsonConvert.SerializeObject(strings)", span="1925-1925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_909 [label="List<String> strings = new List<String>()", span="1919-1919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_912 [label="strings.Add(''str_3'')", span="1923-1923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_910 [label="strings.Add(''str_1'')", span="1921-1921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_911 [label="strings.Add(''str_2'')", span="1922-1922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_915 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="1917-1917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterAsyncTests.cs"];
m3_916 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="1930-1930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterAsyncTests.cs"];
m3_919 [label="Assert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="1934-1937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterAsyncTests.cs"];
m3_921 [label="Assert.AreEqual(''String!'', c2.A)", span="1940-1940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterAsyncTests.cs"];
m3_922 [label="Assert.AreEqual(int.MaxValue, c2.B)", span="1941-1941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterAsyncTests.cs"];
m3_918 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1933-1933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterAsyncTests.cs"];
m3_920 [label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="1939-1939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterAsyncTests.cs"];
m3_917 [label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="1932-1932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterAsyncTests.cs"];
m3_923 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="1930-1930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterAsyncTests.cs"];
m3_261 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1676 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonTextWriterAsyncTests.cs"];
m3_363 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="710-710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonTextWriterAsyncTests.cs"];
m3_365 [label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="714-714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonTextWriterAsyncTests.cs"];
m3_367 [label="Assert.AreEqual(0, c.IgnoredField)", span="718-718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonTextWriterAsyncTests.cs"];
m3_368 [label="Assert.AreEqual(99, c.Field)", span="719-719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonTextWriterAsyncTests.cs"];
m3_364 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="712-712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonTextWriterAsyncTests.cs"];
m3_366 [label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="716-716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonTextWriterAsyncTests.cs"];
m3_369 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="710-710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonTextWriterAsyncTests.cs"];
m3_393 [label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="JsonTextWriterAsyncTests.cs"];
m3_882 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="1863-1863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_884 [label="JsonConvert.PopulateObject(json, new Person())", span="1867-1867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_883 [label="string json = @''[]''", span="1865-1865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_885 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="1863-1863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonTextWriterAsyncTests.cs"];
m3_29 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonTextWriterAsyncTests.cs"];
m3_1212 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="JsonTextWriterAsyncTests.cs"];
m3_817 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="1691-1691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_822 [label="Assert.AreEqual(2, values.Count)", span="1703-1703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_823 [label="Assert.AreEqual(''value1'', values[''key1''])", span="1704-1704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_824 [label="Assert.AreEqual(''value2'', values[''key2''])", span="1705-1705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_819 [label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="1695-1695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_821 [label="Console.WriteLine(values[''key1''])", span="1700-1700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_818 [label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="1693-1693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_820 [label="Console.WriteLine(values.Count)", span="1697-1697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_825 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="1691-1691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_1020 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="2226-2226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonTextWriterAsyncTests.cs"];
m3_1021 [label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="2228-2228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonTextWriterAsyncTests.cs"];
m3_1022 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="2226-2226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonTextWriterAsyncTests.cs"];
m3_256 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonTextWriterAsyncTests.cs"];
m3_1722 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="3785-3785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1725 [label="Assert.AreEqual(123456789876543.21m, a[0])", span="3789-3789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1724 [label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="3788-3788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1723 [label="string json = ''[123456789876543.21]''", span="3787-3787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1726 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="3785-3785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonTextWriterAsyncTests.cs"];
m3_863 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="1825-1825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonTextWriterAsyncTests.cs"];
m3_865 [label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="1829-1829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonTextWriterAsyncTests.cs"];
m3_864 [label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="1827-1827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonTextWriterAsyncTests.cs"];
m3_866 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="1825-1825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonTextWriterAsyncTests.cs"];
m3_996 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="11-11", cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="JsonTextWriterAsyncTests.cs"];
m3_411 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="798-798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_414 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="803-803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_416 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="807-807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_413 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="802-802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_415 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="805-805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_412 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="800-800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_417 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="798-798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_1219 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="JsonTextWriterAsyncTests.cs"];
m3_494 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="933-933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterAsyncTests.cs"];
m3_497 [label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="948-948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterAsyncTests.cs"];
m3_499 [label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="952-952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterAsyncTests.cs"];
m3_500 [label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="953-953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterAsyncTests.cs"];
m3_501 [label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="954-954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterAsyncTests.cs"];
m3_502 [label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="955-955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterAsyncTests.cs"];
m3_503 [label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterAsyncTests.cs"];
m3_504 [label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="957-957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterAsyncTests.cs"];
m3_505 [label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="958-958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterAsyncTests.cs"];
m3_496 [label="string json = JsonConvert.SerializeObject(userNullablle)", span="946-946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterAsyncTests.cs"];
m3_498 [label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="950-950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterAsyncTests.cs"];
m3_495 [label="UserNullable userNullablle = new UserNullable\r\n                                    {\r\n                                      Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                                      FName = ''FirstValue'',\r\n                                      LName = ''LastValue'',\r\n                                      RoleId = 5,\r\n                                      NullableRoleId = 6,\r\n                                      NullRoleId = null,\r\n                                      Active = true\r\n                                    }", span="935-944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterAsyncTests.cs"];
m3_506 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="933-933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterAsyncTests.cs"];
m3_370 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonTextWriterAsyncTests.cs"];
m3_905 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="1911-1911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonTextWriterAsyncTests.cs"];
m3_906 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'')", span="1913-1913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonTextWriterAsyncTests.cs"];
m3_907 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="1911-1911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonTextWriterAsyncTests.cs"];
m3_1685 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="3707-3707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="JsonTextWriterAsyncTests.cs"];
m3_1215 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="JsonTextWriterAsyncTests.cs"];
m3_936 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonTextWriterAsyncTests.cs"];
m3_682 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="1385-1385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_688 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="1394-1397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_690 [label="Assert.AreEqual(26, newOptInClass.Age)", span="1404-1404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_691 [label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="1405-1405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_692 [label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="1406-1406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_687 [label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="1392-1392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_689 [label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="1399-1403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_683 [label="OptInClass optInClass = new OptInClass()", span="1387-1387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_686 [label="optInClass.NotIncluded = ''Poor me :(''", span="1390-1390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_684 [label="optInClass.Age = 26", span="1388-1388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_685 [label="optInClass.Name = ''James NK''", span="1389-1389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_693 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="1385-1385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_176 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonTextWriterAsyncTests.cs"];
m3_608 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="1196-1196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterAsyncTests.cs"];
m3_609 [label="LogEntry entry = new LogEntry\r\n                         {\r\n                           LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                           Details = ''Application started.''\r\n                         }", span="1198-1202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterAsyncTests.cs"];
m3_613 [label="Console.WriteLine(defaultJson)", span="1213-1213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterAsyncTests.cs"];
m3_614 [label="Console.WriteLine(isoJson)", span="1214-1214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterAsyncTests.cs"];
m3_615 [label="Console.WriteLine(javascriptJson)", span="1215-1215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterAsyncTests.cs"];
m3_611 [label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="1207-1207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterAsyncTests.cs"];
m3_612 [label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="1210-1210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterAsyncTests.cs"];
m3_610 [label="string defaultJson = JsonConvert.SerializeObject(entry)", span="1204-1204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterAsyncTests.cs"];
m3_616 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="1196-1196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterAsyncTests.cs"];
m3_327 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonTextWriterAsyncTests.cs"];
m3_66 [label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="171-171", cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JsonTextWriterAsyncTests.cs"];
m3_1180 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="JsonTextWriterAsyncTests.cs"];
m3_91 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="216-216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_92 [label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="218-218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_93 [label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="220-220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_82 [label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="198-198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonTextWriterAsyncTests.cs"];
m3_1660 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="3655-3655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonTextWriterAsyncTests.cs"];
m3_1663 [label="Assert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="3664-3666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonTextWriterAsyncTests.cs"];
m3_1665 [label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="3670-3670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonTextWriterAsyncTests.cs"];
m3_1662 [label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="3662-3662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonTextWriterAsyncTests.cs"];
m3_1664 [label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="3668-3668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonTextWriterAsyncTests.cs"];
m3_1661 [label="StructWithAttribute testStruct = new StructWithAttribute\r\n        {\r\n          MyInt = int.MaxValue\r\n        }", span="3657-3660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonTextWriterAsyncTests.cs"];
m3_1666 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="3655-3655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonTextWriterAsyncTests.cs"];
m3_1187 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="JsonTextWriterAsyncTests.cs"];
m3_594 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonTextWriterAsyncTests.cs"];
m3_1348 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="2906-2906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1183 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="JsonTextWriterAsyncTests.cs"];
m3_486 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="920-920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonTextWriterAsyncTests.cs"];
m3_489 [label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="926-926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonTextWriterAsyncTests.cs"];
m3_490 [label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="927-927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonTextWriterAsyncTests.cs"];
m3_491 [label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="928-928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonTextWriterAsyncTests.cs"];
m3_488 [label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="924-924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonTextWriterAsyncTests.cs"];
m3_487 [label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="922-922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonTextWriterAsyncTests.cs"];
m3_492 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="920-920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonTextWriterAsyncTests.cs"];
m3_83 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="192-192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonTextWriterAsyncTests.cs"];
m3_1708 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="JsonTextWriterAsyncTests.cs"];
m3_1262 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="2845-2845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterAsyncTests.cs"];
m3_1299 [label="AA_field1 = f", span="2847-2847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterAsyncTests.cs"];
m3_1300 [label="AA_field2 = f", span="2848-2848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterAsyncTests.cs"];
m3_1301 [label="AA_property1 = f", span="2849-2849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterAsyncTests.cs"];
m3_1302 [label="AA_property2 = f", span="2850-2850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterAsyncTests.cs"];
m3_1303 [label="AA_property3 = f", span="2851-2851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterAsyncTests.cs"];
m3_1304 [label="AA_property4 = f", span="2852-2852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterAsyncTests.cs"];
m3_1305 [label="AA_property5 = f", span="2853-2853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterAsyncTests.cs"];
m3_1306 [label="AA_property6 = f", span="2854-2854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterAsyncTests.cs"];
m3_1307 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="2845-2845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterAsyncTests.cs"];
m3_1106 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonTextWriterAsyncTests.cs"];
m3_1618 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="3549-3549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1620 [label="Assert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="3553-3557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1622 [label="Assert.AreEqual(3, d.Length)", span="3561-3561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1623 [label="Assert.AreEqual(2.4, d[0])", span="3562-3562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1624 [label="Assert.AreEqual(4.3, d[1])", span="3563-3563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1625 [label="Assert.AreEqual(null, d[2])", span="3564-3564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1619 [label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="3551-3551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1621 [label="double?[] d = (double?[])JsonConvert.DeserializeObject(jsonText, typeof(double?[]))", span="3559-3559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1626 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="3549-3549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonTextWriterAsyncTests.cs"];
m3_394 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="771-771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterAsyncTests.cs"];
m3_398 [label="Assert.AreEqual(''param1'', deserialized.param1)", span="779-779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterAsyncTests.cs"];
m3_399 [label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="780-780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterAsyncTests.cs"];
m3_400 [label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="781-781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterAsyncTests.cs"];
m3_397 [label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="777-777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterAsyncTests.cs"];
m3_396 [label="string json = JsonConvert.SerializeObject(c)", span="775-775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterAsyncTests.cs"];
m3_395 [label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="773-773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterAsyncTests.cs"];
m3_401 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="771-771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterAsyncTests.cs"];
m3_826 [label="Entry System.Console.WriteLine(int)", span="0-0", cluster="System.Console.WriteLine(int)", file="JsonTextWriterAsyncTests.cs"];
m3_1653 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="3628-3628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1656 [label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="3642-3642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1655 [label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="3640-3640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1654 [label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n        {\r\n          StringDictionaryProperty = new StringDictionary()\r\n            {\r\n              {''1'', ''One''},\r\n              {''2'', ''II''},\r\n              {''3'', ''3''}              \r\n            }\r\n        }", span="3630-3638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1657 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="3628-3628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterAsyncTests.cs"];
m3_338 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="669-669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonTextWriterAsyncTests.cs"];
m3_343 [label="Assert.AreEqual(guid, c.GuidField)", span="677-677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonTextWriterAsyncTests.cs"];
m3_341 [label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="674-674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonTextWriterAsyncTests.cs"];
m3_339 [label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="671-671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonTextWriterAsyncTests.cs"];
m3_342 [label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="676-676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonTextWriterAsyncTests.cs"];
m3_340 [label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="673-673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonTextWriterAsyncTests.cs"];
m3_344 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="669-669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1749 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="3840-3840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonTextWriterAsyncTests.cs"];
m3_1750 [label="IDoWork = doWork", span="3843-3843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonTextWriterAsyncTests.cs"];
m3_1751 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="3840-3840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonTextWriterAsyncTests.cs"];
m3_263 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="566-566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonTextWriterAsyncTests.cs"];
m3_265 [label="Assert.AreEqual(''{}'', json)", span="569-569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonTextWriterAsyncTests.cs"];
m3_264 [label="string json = JsonConvert.SerializeObject(new object())", span="568-568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonTextWriterAsyncTests.cs"];
m3_266 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="566-566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonTextWriterAsyncTests.cs"];
m3_694 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="1367-1367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonTextWriterAsyncTests.cs"];
m3_1334 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonTextWriterAsyncTests.cs"];
m3_430 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonTextWriterAsyncTests.cs"];
m3_1605 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="3521-3521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1606 [label="return new DictionaryKey() { Value = value };", span="3523-3523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1607 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="3521-3521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1677 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExact()", span="3694-3694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1679 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="3697-3697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1678 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="3696-3696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1680 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExact()", span="3694-3694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExact()", file="JsonTextWriterAsyncTests.cs"];
m3_778 [label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonTextWriterAsyncTests.cs"];
m3_1078 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonTextWriterAsyncTests.cs"];
m3_1294 [label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonTextWriterAsyncTests.cs"];
m3_319 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="644-644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterAsyncTests.cs"];
m3_321 [label="Assert.AreEqual(@''{''''String'''':''''string'''',''''Int32'''':2147483647,''''UInt32'''':4294967295,''''Byte'''':255,''''SByte'''':127,''''Short'''':32767,''''UShort'''':65535,''''Long'''':9223372036854775807,''''ULong'''':9223372036854775807,''''Double'''':1.7976931348623157E+308,''''Float'''':3.40282347E+38,''''DBNull'''':null,''''Bool'''':true,''''Char'''':''''\u0000''''}'', json)", span="648-648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterAsyncTests.cs"];
m3_323 [label="Assert.AreEqual(''string'', c.String)", span="651-651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterAsyncTests.cs"];
m3_324 [label="Assert.AreEqual(double.MaxValue, c.Double)", span="652-652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterAsyncTests.cs"];
m3_325 [label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="653-653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterAsyncTests.cs"];
m3_320 [label="string json = JsonConvert.SerializeObject(new ConverableMembers())", span="646-646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterAsyncTests.cs"];
m3_322 [label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="650-650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterAsyncTests.cs"];
m3_326 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="644-644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterAsyncTests.cs"];
m3_1641 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="3604-3604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1648 [label="Assert.AreEqual(2, z.Length)", span="3615-3615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1649 [label="Assert.AreEqual(0, z[0].Prop1.Length)", span="3616-3616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1650 [label="Assert.AreEqual(0, z[1].Prop1.Length)", span="3617-3617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1647 [label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="3614-3614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1642 [label="JsonSerializer serializer1 = new JsonSerializer()", span="3606-3606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1646 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3612-3612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1643 [label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="3607-3607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1644 [label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="3608-3608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1645 [label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="3610-3610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1651 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="3604-3604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterAsyncTests.cs"];
m3_747 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="1542-1542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterAsyncTests.cs"];
m3_752 [label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="1561-1561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterAsyncTests.cs"];
m3_753 [label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="1562-1562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterAsyncTests.cs"];
m3_754 [label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="1563-1563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterAsyncTests.cs"];
m3_750 [label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="1558-1558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterAsyncTests.cs"];
m3_751 [label="Assert.IsNotNull(s)", span="1559-1559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterAsyncTests.cs"];
m3_749 [label="JObject o = JObject.Parse(json)", span="1556-1556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterAsyncTests.cs"];
m3_748 [label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="1544-1554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterAsyncTests.cs"];
m3_755 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="1542-1542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterAsyncTests.cs"];
m3_619 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1218-1218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_628 [label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="1259-1259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_629 [label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="1260-1260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_630 [label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="1261-1261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_625 [label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="1238-1254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_620 [label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="1220-1220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_626 [label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="1256-1256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_627 [label="Assert.IsNotNull(deserializedObject)", span="1257-1257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_624 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1236-1236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_621 [label="o.IDictionaryProperty = new Dictionary<string, int>\r\n                                {\r\n                                  {''one'', 1},\r\n                                  {''two'', 2},\r\n                                  {''three'', 3}\r\n                                }", span="1221-1226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_622 [label="o.IListProperty = new List<int>\r\n                          {\r\n                            1, 2, 3\r\n                          }", span="1227-1230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_623 [label="o.IEnumerableProperty = new List<int>\r\n                                {\r\n                                  4, 5, 6\r\n                                }", span="1231-1234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_631 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1218-1218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1358 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="2990-2990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="JsonTextWriterAsyncTests.cs"];
m3_671 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="1334-1334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterAsyncTests.cs"];
m3_674 [label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="1355-1355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterAsyncTests.cs"];
m3_676 [label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="1358-1358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterAsyncTests.cs"];
m3_677 [label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="1359-1359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterAsyncTests.cs"];
m3_678 [label="Assert.AreEqual(8, n.FidOrder.Count)", span="1360-1360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterAsyncTests.cs"];
m3_679 [label="Assert.AreEqual(''id'', n.FidOrder[0])", span="1361-1361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterAsyncTests.cs"];
m3_680 [label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="1362-1362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterAsyncTests.cs"];
m3_673 [label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="1354-1354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterAsyncTests.cs"];
m3_675 [label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="1357-1357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterAsyncTests.cs"];
m3_672 [label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="1336-1352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterAsyncTests.cs"];
m3_681 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="1334-1334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterAsyncTests.cs"];
m3_1490 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", span="3200-3200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringAppenderConverter.StringAppenderConverter()", file="JsonTextWriterAsyncTests.cs"];
m3_1771 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="3926-3926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_1780 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="3939-3939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_1781 [label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="3940-3940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_1784 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="3945-3945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_1785 [label="Assert.AreEqual(deserialized.Foo2, null)", span="3946-3946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_1779 [label="NullableStructPropertyClass deserialized = deserialize(s)", span="3938-3938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_1782 [label="s = JsonConvert.SerializeObject(barWithNull)", span="3943-3943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_1783 [label="deserialized = deserialize(s)", span="3944-3944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_1778 [label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="3937-3937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_1775 [label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="3932-3932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_1772 [label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="3928-3928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_1777 [label="barWithNull.Foo2 = null", span="3934-3934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_1774 [label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="3930-3930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_1776 [label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="3933-3933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_1773 [label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="3929-3929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_1786 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="3926-3926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterAsyncTests.cs"];
m3_527 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonTextWriterAsyncTests.cs"];
m3_508 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="962-962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonTextWriterAsyncTests.cs"];
m3_511 [label="Assert.AreEqual(1, c.Height)", span="967-967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonTextWriterAsyncTests.cs"];
m3_510 [label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="966-966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonTextWriterAsyncTests.cs"];
m3_509 [label="string json = @''{''''Height'''':1}''", span="964-964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonTextWriterAsyncTests.cs"];
m3_512 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="962-962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonTextWriterAsyncTests.cs"];
m3_1414 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", span="3083-3083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1419 [label="Assert.AreEqual(@''[{''''Key'''':''''key1'''',''''Value'''':''''value1''''},{''''Key'''':''''key2'''',''''Value'''':''''value2''''}]'', json)", span="3091-3091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1421 [label="Assert.AreEqual(2, result.Count)", span="3094-3094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1422 [label="Assert.AreEqual(''key1'', result[0].Key)", span="3095-3095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1423 [label="Assert.AreEqual(''value1'', result[0].Value)", span="3096-3096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1424 [label="Assert.AreEqual(''key2'', result[1].Key)", span="3097-3097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1425 [label="Assert.AreEqual(''value2'', result[1].Value)", span="3098-3098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1418 [label="string json = JsonConvert.SerializeObject(list)", span="3089-3089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1420 [label="List<KeyValuePair<string, string>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, string>>>(json)", span="3093-3093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1415 [label="List<KeyValuePair<string, string>> list = new List<KeyValuePair<string, string>>()", span="3085-3085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1417 [label="list.Add(new KeyValuePair<string, string>(''key2'', ''value2''))", span="3087-3087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1416 [label="list.Add(new KeyValuePair<string, string>(''key1'', ''value1''))", span="3086-3086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_1426 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", span="3083-3083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeSimpleKeyValuePair()", file="JsonTextWriterAsyncTests.cs"];
m3_129 [label="ClassValue = new DefaultValueHandlingDeserialize\r\n            {\r\n                Derp = ''Derp!''\r\n            }", span="431-434", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate.DefaultValueHandlingDeserializePopulate()", file="JsonTextWriterAsyncTests.cs"];
m3_1351 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="2966-2966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_1354 [label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="2975-2975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_1353 [label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="2974-2974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_1352 [label="ClientMap source = new ClientMap()\r\n      {\r\n        position = new Pos() { X = 100, Y = 200 },\r\n        center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n      }", span="2968-2972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_1355 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="2966-2966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_1088 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1356 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="2978-2978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="JsonTextWriterAsyncTests.cs"];
m3_160 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_164 [label="CollectionAssert.AreEqual(r1, r2)", span="408-408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_161 [label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="402-402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_163 [label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="406-406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_162 [label="string jsonText = JsonConvert.SerializeObject(r1)", span="404-404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_165 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_634 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonTextWriterAsyncTests.cs"];
m3_1176 [label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="JsonTextWriterAsyncTests.cs"];
m3_1124 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonTextWriterAsyncTests.cs"];
m3_1115 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2518-2518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1119 [label="this[entry.Key] = entry.Value", span="2527-2527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1118 [label=dictionary, span="2525-2525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1116 [label="dictionary == null", span="2520-2520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1117 [label="return;", span="2522-2522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1120 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="2518-2518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterAsyncTests.cs"];
m3_1681 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="3713-3713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonTextWriterAsyncTests.cs"];
m3_1683 [label="Assert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="3717-3719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonTextWriterAsyncTests.cs"];
m3_1682 [label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="3715-3715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonTextWriterAsyncTests.cs"];
m3_1684 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="3713-3713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonTextWriterAsyncTests.cs"];
m3_886 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="734-734", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonTextWriterAsyncTests.cs"];
m3_282 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="594-594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_285 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="598-598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_286 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="600-600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_287 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="601-601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_288 [label="Assert.AreEqual(1, wibble.Bar[1])", span="602-602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_289 [label="Assert.AreEqual(2, wibble.Bar[2])", span="603-603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_290 [label="Assert.AreEqual(3, wibble.Bar[3])", span="604-604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_284 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="597-597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_283 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="596-596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_291 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="594-594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterAsyncTests.cs"];
m3_765 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="JsonTextWriterAsyncTests.cs"];
m3_178 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="427-427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterAsyncTests.cs"];
m3_187 [label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="444-444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterAsyncTests.cs"];
m3_186 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="442-442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterAsyncTests.cs"];
m3_185 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterAsyncTests.cs"];
m3_181 [label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="433-433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterAsyncTests.cs"];
m3_184 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterAsyncTests.cs"];
m3_183 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="437-437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterAsyncTests.cs"];
m3_179 [label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="429-429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterAsyncTests.cs"];
m3_180 [label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="432-432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterAsyncTests.cs"];
m3_182 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="436-436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterAsyncTests.cs"];
m3_188 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="427-427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterAsyncTests.cs"];
m3_1667 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="3647-3647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="JsonTextWriterAsyncTests.cs"];
m3_736 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonTextWriterAsyncTests.cs"];
m3_1787 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="3905-3905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonTextWriterAsyncTests.cs"];
m3_402 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonTextWriterAsyncTests.cs"];
m3_257 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="429-429", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonTextWriterAsyncTests.cs"];
m3_346 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonTextWriterAsyncTests.cs"];
m3_721 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="680-680", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriterAsyncTests.cs"];
m3_1470 [label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="7-7", cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="JsonTextWriterAsyncTests.cs"];
m3_1177 [label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="JsonTextWriterAsyncTests.cs"];
m3_258 [label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0", cluster="System.IO.StringWriter.GetStringBuilder()", file="JsonTextWriterAsyncTests.cs"];
m3_255 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="286-286", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonTextWriterAsyncTests.cs"];
m3_714 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="1464-1464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonTextWriterAsyncTests.cs"];
m3_717 [label="Assert.AreEqual(''Name!'', c.Name)", span="1475-1475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonTextWriterAsyncTests.cs"];
m3_718 [label="Assert.AreEqual(1, c.Dictionary.Count)", span="1476-1476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonTextWriterAsyncTests.cs"];
m3_719 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="1477-1477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonTextWriterAsyncTests.cs"];
m3_716 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n        new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="1473-1474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonTextWriterAsyncTests.cs"];
m3_715 [label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="1466-1471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonTextWriterAsyncTests.cs"];
m3_720 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="1464-1464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonTextWriterAsyncTests.cs"];
m3_854 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="1813-1813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_858 [label="Assert.AreEqual(5, a.Count)", span="1819-1819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_859 [label="Assert.AreEqual(1, (int)a[0])", span="1820-1820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_860 [label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="1821-1821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_857 [label="JArray a = (JArray)setOnly.GetValue()", span="1818-1818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_856 [label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="1817-1817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_855 [label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="1815-1815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_861 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="1813-1813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1055 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="2353-2353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1058 [label="Assert.AreEqual(123, item.Value)", span="2358-2358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1057 [label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="2356-2356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1056 [label="var json = ''{ Key: 'abc', Value: 123 }''", span="2355-2355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1059 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="2353-2353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_887 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="1872-1872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonTextWriterAsyncTests.cs"];
m3_889 [label="JsonConvert.PopulateObject(json, new List<Person>())", span="1876-1876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonTextWriterAsyncTests.cs"];
m3_888 [label="string json = @''{}''", span="1874-1874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonTextWriterAsyncTests.cs"];
m3_890 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="1872-1872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1060 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="2386-2386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1072 [label="Console.WriteLine(JObject.Parse(json).ToString())", span="2405-2405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1064 [label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="2392-2392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1074 [label="Console.WriteLine(JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n                                                                          {\r\n                                                                            //               TypeNameHandling = TypeNameHandling.Objects\r\n                                                                          }))", span="2408-2411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1071 [label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="2403-2403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1073 [label="Console.WriteLine()", span="2406-2406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1062 [label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="2390-2390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1063 [label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="2391-2391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1065 [label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="2393-2393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1068 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n        typeof(DataContractJsonSerializerTestClass),\r\n        new Type[] { typeof(Human) })", span="2397-2399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1070 [label="byte[] jsonBytes = ms.ToArray()", span="2402-2402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1061 [label="Exception ex = new Exception(''Blah blah blah'')", span="2388-2388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1066 [label="c.ExceptionProperty = ex", span="2394-2394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1069 [label="serializer.WriteObject(ms, c)", span="2400-2400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1067 [label="MemoryStream ms = new MemoryStream()", span="2396-2396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1075 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="2386-2386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterAsyncTests.cs"];
m3_158 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", file="JsonTextWriterAsyncTests.cs"];
m3_128 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="238-238", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonTextWriterAsyncTests.cs"];
m3_131 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="358-358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_132 [label="JsonPropertyClass test = new JsonPropertyClass()", span="360-360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_952 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="1996-1996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_957 [label="Assert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="2003-2006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_956 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="2002-2002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_954 [label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="1999-1999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_955 [label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="2000-2000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_953 [label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="1998-1998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_958 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="1996-1996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonTextWriterAsyncTests.cs"];
m3_1222 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", span="2646-2646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1237 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="2693-2693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1233 [label="Assert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="2665-2688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1235 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="2691-2691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1236 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="2692-2692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1238 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="2694-2694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1239 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="2695-2695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1240 [label="Assert.AreEqual(null, o2._nullableInt)", span="2696-2696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1228 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="2654-2654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1234 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="2690-2690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1230 [label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="2657-2657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1232 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="2664-2664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1224 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="2649-2649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1227 [label="person.Name = ''Name!''", span="2652-2652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1229 [label="string dateTimeOffsetText", span="2655-2655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1231 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="2662-2662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1223 [label="Person person = new Person()", span="2648-2648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1225 [label="person.LastModified = person.BirthDate", span="2650-2650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1226 [label="person.Department = ''Department!''", span="2651-2651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1241 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", span="2646-2646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1713 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="3770-3770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1715 [label="Assert.AreEqual(123456789876543.21m, d)", span="3773-3773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1714 [label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="3772-3772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1716 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="3770-3770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonTextWriterAsyncTests.cs"];
m3_1211 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="JsonTextWriterAsyncTests.cs"];
m3_1627 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="3569-3569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterAsyncTests.cs"];
m3_1629 [label="Assert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="3578-3582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterAsyncTests.cs"];
m3_1631 [label="Assert.AreEqual(3, d.Count)", span="3586-3586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterAsyncTests.cs"];
m3_1628 [label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n                                                      {\r\n                                                        ''One'',\r\n                                                        ''2'',\r\n                                                        ''III''\r\n                                                      }, Formatting.Indented)", span="3571-3576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterAsyncTests.cs"];
m3_1630 [label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="3584-3584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterAsyncTests.cs"];
m3_1632 [label="Assert.IsTrue(d.Contains(''One''))", span="3587-3587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterAsyncTests.cs"];
m3_1633 [label="Assert.IsTrue(d.Contains(''2''))", span="3588-3588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterAsyncTests.cs"];
m3_1634 [label="Assert.IsTrue(d.Contains(''III''))", span="3589-3589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterAsyncTests.cs"];
m3_1635 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="3569-3569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterAsyncTests.cs"];
m3_218 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonTextWriterAsyncTests.cs"];
m3_757 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="1567-1567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_760 [label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="1572-1572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_762 [label="Assert.AreEqual(uri, newUri)", span="1575-1575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_758 [label="Uri uri = new Uri(''http://codeplex.com'')", span="1569-1569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_759 [label="string json = JsonConvert.SerializeObject(uri)", span="1570-1570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_761 [label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="1574-1574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_763 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="1567-1567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonTextWriterAsyncTests.cs"];
m3_1491 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="3237-3237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterAsyncTests.cs"];
m3_1500 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="3251-3251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterAsyncTests.cs"];
m3_1499 [label="var json = JsonConvert.SerializeObject(child)", span="3250-3250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterAsyncTests.cs"];
m3_1492 [label="var reference = new Dictionary<string, object>()", span="3241-3241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterAsyncTests.cs"];
m3_1495 [label="var child = new Dictionary<string, object>()", span="3245-3245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterAsyncTests.cs"];
m3_1493 [label="reference.Add(''$ref'', ''Persons'')", span="3242-3242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterAsyncTests.cs"];
m3_1494 [label="reference.Add(''$id'', 1)", span="3243-3243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterAsyncTests.cs"];
m3_1498 [label="child.Add(''Father'', reference)", span="3248-3248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterAsyncTests.cs"];
m3_1496 [label="child.Add(''_id'', 2)", span="3246-3246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterAsyncTests.cs"];
m3_1497 [label="child.Add(''Name'', ''Isabell'')", span="3247-3247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterAsyncTests.cs"];
m3_1501 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="3237-3237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterAsyncTests.cs"];
m3_507 [label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonTextWriterAsyncTests.cs"];
m3_588 [label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonTextWriterAsyncTests.cs"];
m3_1054 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="2320-2320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="JsonTextWriterAsyncTests.cs"];
m3_219 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonTextWriterAsyncTests.cs"];
m3_827 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", span="1709-1709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_834 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Name'''': ''''Product 1'''',\r\n    ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''Price'''': 99.95,\r\n    ''''Sizes'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Product 2'''',\r\n    ''''ExpiryDate'''': ''''\/Date(1248998400000)\/'''',\r\n    ''''Price'''': 12.50,\r\n    ''''Sizes'''': null\r\n  }\r\n]'', json)", span="1744-1757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_833 [label="string json = JsonConvert.SerializeObject(products, Formatting.Indented)", span="1728-1728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_828 [label="Product p1 = new Product\r\n        {\r\n          Name = ''Product 1'',\r\n          Price = 99.95m,\r\n          ExpiryDate = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc),\r\n        }", span="1711-1716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_829 [label="Product p2 = new Product\r\n      {\r\n        Name = ''Product 2'',\r\n        Price = 12.50m,\r\n        ExpiryDate = new DateTime(2009, 7, 31, 0, 0, 0, DateTimeKind.Utc),\r\n      }", span="1717-1722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_830 [label="List<Product> products = new List<Product>()", span="1724-1724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_832 [label="products.Add(p2)", span="1726-1726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_831 [label="products.Add(p1)", span="1725-1725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_835 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", span="1709-1709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericList()", file="JsonTextWriterAsyncTests.cs"];
m3_1675 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="3673-3673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonTextWriterAsyncTests.cs"];
m3_1035 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="2280-2280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonTextWriterAsyncTests.cs"];
m3_1037 [label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="2283-2283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonTextWriterAsyncTests.cs"];
m3_1039 [label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="2286-2286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonTextWriterAsyncTests.cs"];
m3_1036 [label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="2282-2282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonTextWriterAsyncTests.cs"];
m3_1038 [label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="2285-2285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonTextWriterAsyncTests.cs"];
m3_1040 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="2280-2280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonTextWriterAsyncTests.cs"];
m3_166 [label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonTextWriterAsyncTests.cs"];
m3_654 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", span="1299-1299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_659 [label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="1307-1313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_661 [label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="1317-1320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_658 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1305-1305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_660 [label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="1315-1315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_655 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1301-1301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_657 [label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="1303-1303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_656 [label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="1302-1302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_662 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", span="1299-1299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonTextWriterAsyncTests.cs"];
m3_1462 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", span="3185-3185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1466 [label="Assert.AreEqual(2, p.ReleaseCountries.Count)", span="3195-3195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1467 [label="Assert.AreEqual(''Existing'', p.ReleaseCountries[0])", span="3196-3196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1468 [label="Assert.AreEqual(''Appended'', p.ReleaseCountries[1])", span="3197-3197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1463 [label="Movie p = new Movie()", span="3187-3187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1465 [label="JsonConvert.PopulateObject(''{'ReleaseCountries':['Appended']}'', p, new JsonSerializerSettings\r\n        {\r\n          Converters = new List<JsonConverter> { new StringListAppenderConverter() }\r\n        })", span="3190-3193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1464 [label="p.ReleaseCountries = new List<string> { ''Existing'' }", span="3188-3188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1469 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", span="3185-3185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringListAppenderConverterTest()", file="JsonTextWriterAsyncTests.cs"];
m3_1427 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonTextWriterAsyncTests.cs"];
m3_57 [label="string json = JsonConvert.SerializeObject(user, Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore, NullValueHandling = NullValueHandling.Ignore })", span="259-259", cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="JsonTextWriterAsyncTests.cs"];
m3_484 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonTextWriterAsyncTests.cs"];
m3_1023 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="2243-2243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1029 [label="Assert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="2254-2268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1031 [label="Assert.AreEqual(''some value'', gen.MyProperty)", span="2271-2271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1028 [label="string json = g.ToJson()", span="2252-2252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1030 [label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="2270-2270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1024 [label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="2245-2245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1027 [label="g.MyProperty = ''some value''", span="2250-2250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1025 [label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="2247-2247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1026 [label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="2248-2248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_1032 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="2243-2243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterAsyncTests.cs"];
m3_466 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="885-885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_468 [label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="888-888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_467 [label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="887-887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_469 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="885-885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonTextWriterAsyncTests.cs"];
m3_1136 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonTextWriterAsyncTests.cs"];
m3_138 [label="Assert.AreEqual(test.Pie, test2.Pie)", span="370-370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_139 [label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="371-371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_136 [label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="366-366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_137 [label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="368-368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_135 [label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate", span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_133 [label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser", span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_134 [label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder", span="", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_140 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="358-358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterAsyncTests.cs"];
m3_259 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JsonTextWriterAsyncTests.cs"];
m3_175 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonTextWriterAsyncTests.cs"];
m3_803 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", span="1673-1673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_806 [label="Assert.AreEqual(''Router'', o.Action)", span="1679-1679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_807 [label="Assert.AreEqual(''Navigate'', o.Method)", span="1680-1680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_808 [label="Assert.AreEqual(3, o.Data.Length)", span="1681-1681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_809 [label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1682-1682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_811 [label="Assert.AreEqual(4, ((JArray)o.Data[1]).Count)", span="1684-1684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_813 [label="Assert.AreEqual(1, ((JObject)o.Data[2]).Count)", span="1686-1686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_814 [label="Assert.AreEqual(1, (int)((JObject)o.Data[2])[''one''])", span="1687-1687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_805 [label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1677-1677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_810 [label="Assert.IsInstanceOfType(typeof(JArray), o.Data[1])", span="1683-1683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_812 [label="Assert.IsInstanceOfType(typeof(JObject), o.Data[2])", span="1685-1685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_804 [label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',[''''id'''', 1, ''''teststring'''', ''''test''''],{''''one'''':1}],''''type'''':''''rpc'''',''''tid'''':2}''", span="1675-1675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_815 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", span="1673-1673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ComplexValuesInObjectArray()", file="JsonTextWriterAsyncTests.cs"];
m3_1797 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span="", file="JsonTextWriterAsyncTests.cs"];
m3_1793 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span="", file="JsonTextWriterAsyncTests.cs"];
m3_1794 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span="", file="JsonTextWriterAsyncTests.cs"];
m3_1798 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span="", file="JsonTextWriterAsyncTests.cs"];
m3_1802 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass", span="", file="JsonTextWriterAsyncTests.cs"];
m3_1795 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span="", file="JsonTextWriterAsyncTests.cs"];
m3_1801 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span="", file="JsonTextWriterAsyncTests.cs"];
m3_1796 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span="", file="JsonTextWriterAsyncTests.cs"];
m3_1792 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span="", file="JsonTextWriterAsyncTests.cs"];
m3_1800 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span="", file="JsonTextWriterAsyncTests.cs"];
m3_1809 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span="", file="JsonTextWriterAsyncTests.cs"];
m3_1811 [label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonTextWriterAsyncTests.cs"];
m3_1812 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonTextWriterAsyncTests.cs"];
m4_2106 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="JsonTextWriterTest.cs"];
m4_1212 [label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonTextWriterTest.cs"];
m4_3568 [label="Entry Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", file="JsonTextWriterTest.cs"];
m4_1864 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4140-4140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterTest.cs"];
m4_1865 [label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="4142-4142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterTest.cs"];
m4_1866 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4140-4140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterTest.cs"];
m4_406 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="863-863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonTextWriterTest.cs"];
m4_407 [label="_stringValue = stringValue", span="865-865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonTextWriterTest.cs"];
m4_408 [label="_intValue = intValue", span="866-866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonTextWriterTest.cs"];
m4_409 [label="_person1 = p1", span="867-867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonTextWriterTest.cs"];
m4_410 [label="_person2 = p2", span="868-868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonTextWriterTest.cs"];
m4_411 [label="_person3 = p3", span="869-869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonTextWriterTest.cs"];
m4_412 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="863-863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonTextWriterTest.cs"];
m4_480 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="994-994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonTextWriterTest.cs"];
m4_486 [label="Assert.AreEqual(null, v.Value)", span="1007-1007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonTextWriterTest.cs"];
m4_487 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="1008-1008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonTextWriterTest.cs"];
m4_482 [label="var v = new JValue(s)", span="997-997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonTextWriterTest.cs"];
m4_485 [label="string output = o.ToString()", span="1005-1005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonTextWriterTest.cs"];
m4_488 [label="StringAssert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="1010-1012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonTextWriterTest.cs"];
m4_481 [label="string s = null", span="996-996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonTextWriterTest.cs"];
m4_483 [label="var o = JObject.FromObject(new { title = v })", span="998-998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonTextWriterTest.cs"];
m4_484 [label="JObject oo = new JObject\r\n            {\r\n                { ''title'', v }\r\n            }", span="1000-1003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonTextWriterTest.cs"];
m4_489 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="994-994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonTextWriterTest.cs"];
m4_1822 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="3995-3995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JsonTextWriterTest.cs"];
m4_513 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", span="1024-1024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", file="JsonTextWriterTest.cs"];
m4_1375 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="2907-2907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonTextWriterTest.cs"];
m4_1376 [label="_name = name", span="2909-2909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonTextWriterTest.cs"];
m4_1377 [label="Age = age", span="2910-2910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonTextWriterTest.cs"];
m4_1378 [label="Rank = rank", span="2911-2911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonTextWriterTest.cs"];
m4_1379 [label="Title = title", span="2912-2912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonTextWriterTest.cs"];
m4_1380 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="2907-2907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonTextWriterTest.cs"];
m4_878 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonTextWriterTest.cs"];
m4_3058 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextWriterTest.cs"];
m4_2107 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="JsonTextWriterTest.cs"];
m4_566 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="662-662", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonTextWriterTest.cs"];
m4_274 [label="Entry System.Globalization.CultureInfo.ToString()", span="0-0", cluster="System.Globalization.CultureInfo.ToString()", file="JsonTextWriterTest.cs"];
m4_3558 [label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35", cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="JsonTextWriterTest.cs"];
m4_558 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="473-473", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriterTest.cs"];
m4_1951 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JsonTextWriterTest.cs"];
m4_521 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1077-1077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_523 [label="var json = JsonConvert.SerializeObject(original)", span="1080-1080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_525 [label="Assert.AreEqual(expectedJson, json)", span="1082-1082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_522 [label="var original = new Foo1<Bar1> { foo = new Bar1 { bar = ''value'' }, foo2 = new Bar1 { bar = ''value2'' } }", span="1079-1079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_524 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1081-1081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_526 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1077-1077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_1017 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonTextWriterTest.cs"];
m4_1462 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3141-3141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonTextWriterTest.cs"];
m4_1464 [label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="3145-3145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonTextWriterTest.cs"];
m4_1465 [label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="3147-3147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonTextWriterTest.cs"];
m4_1466 [label="Assert.AreEqual(''Admin'', r.RoleName)", span="3148-3148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonTextWriterTest.cs"];
m4_1467 [label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="3149-3149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonTextWriterTest.cs"];
m4_1463 [label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="3143-3143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonTextWriterTest.cs"];
m4_1468 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3141-3141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonTextWriterTest.cs"];
m4_201 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonTextWriterTest.cs"];
m4_964 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2035-2035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonTextWriterTest.cs"];
m4_966 [label="string json = JsonConvert.SerializeObject(date)", span="2039-2039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonTextWriterTest.cs"];
m4_967 [label="Assert.AreEqual(@''''''2001-04-04T00:00:00Z'''''', json)", span="2040-2040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonTextWriterTest.cs"];
m4_965 [label="var date = new DateTime(2001, 4, 4, 0, 0, 0, DateTimeKind.Utc)", span="2037-2037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonTextWriterTest.cs"];
m4_968 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2035-2035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonTextWriterTest.cs"];
m4_647 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonTextWriterTest.cs"];
m4_275 [label="Entry Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_682 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonTextWriterTest.cs"];
m4_2161 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4822-4822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonTextWriterTest.cs"];
m4_2162 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                //Additional text found in JSON string after finishing deserializing object.\r\n                //Test 1\r\n                var reference = new Dictionary<string, object>();\r\n                reference.Add(''$ref'', 1);\r\n                reference.Add(''$id'', 1);\r\n\r\n                var child = new Dictionary<string, object>();\r\n                child.Add(''_id'', 2);\r\n                child.Add(''Name'', ''Isabell'');\r\n                child.Add(''Father'', reference);\r\n\r\n                var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n                JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n            }, ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 14.'')", span="4824-4839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonTextWriterTest.cs"];
m4_2163 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4822-4822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonTextWriterTest.cs"];
m4_1769 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="3824-3824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonTextWriterTest.cs"];
m4_1771 [label="Add(pair.Key, pair.Value)", span="3828-3828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonTextWriterTest.cs"];
m4_1770 [label=initial, span="3826-3826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonTextWriterTest.cs"];
m4_1772 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="3824-3824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonTextWriterTest.cs"];
m4_617 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="1241-1241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="JsonTextWriterTest.cs"];
m4_441 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="905-905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_451 [label="PreserveReferencesCallbackTestObject obj2 = JsonConvert.DeserializeObject<PreserveReferencesCallbackTestObject>(json)", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_452 [label="Assert.AreEqual(obj._stringValue, obj2._stringValue)", span="958-958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_453 [label="Assert.AreEqual(obj._intValue, obj2._intValue)", span="959-959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_454 [label="Assert.AreEqual(obj._person1.Name, obj2._person1.Name)", span="960-960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_455 [label="Assert.AreEqual(obj._person2.Name, obj2._person2.Name)", span="961-961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_456 [label="Assert.AreEqual(obj._person3.Name, obj2._person3.Name)", span="962-962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_457 [label="Assert.AreEqual(obj2._person1, obj2._person3)", span="963-963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_458 [label="Assert.AreEqual(obj2._person1.Spouse, obj2._person2)", span="964-964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_459 [label="Assert.AreEqual(obj2._person2.Spouse, obj2._person1)", span="965-965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_460 [label="Assert.AreEqual(obj2._parent, obj2)", span="966-966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_449 [label="string json = JsonConvert.SerializeObject(obj, settings)", span="928-928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_450 [label="StringAssert.AreEqual(json, @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''stringValue'''': ''''string!'''',\r\n  ''''intValue'''': 42,\r\n  ''''person1'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''Mary Sue'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''2''''\r\n      }\r\n    }\r\n  },\r\n  ''''person2'''': {\r\n    ''''$ref'''': ''''3''''\r\n  },\r\n  ''''person3'''': {\r\n    ''''$ref'''': ''''2''''\r\n  },\r\n  ''''parent'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'')", span="930-954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_446 [label="var obj = new PreserveReferencesCallbackTestObject(''string!'', 42, p1, p2, p1)", span="919-919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_448 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            }", span="922-926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_442 [label="var p1 = new PersonReference\r\n            {\r\n                Name = ''John Smith''\r\n            }", span="907-910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_443 [label="var p2 = new PersonReference\r\n            {\r\n                Name = ''Mary Sue'',\r\n            }", span="911-914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_445 [label="p2.Spouse = p1", span="917-917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_447 [label="obj._parent = obj", span="920-920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_444 [label="p1.Spouse = p2", span="916-916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_461 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="905-905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonTextWriterTest.cs"];
m4_867 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="755-755", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonTextWriterTest.cs"];
m4_1056 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2192-2192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1061 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2203-2203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1062 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2205-2205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1063 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2206-2206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1060 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2201-2201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1059 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n            })", span="2197-2200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1057 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2194-2194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1058 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2195-2195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1064 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2192-2192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1504 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3210-3210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonTextWriterTest.cs"];
m4_1505 [label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="3212-3212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonTextWriterTest.cs"];
m4_1506 [label="Assert.AreEqual(3, l.Count)", span="3213-3213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonTextWriterTest.cs"];
m4_1507 [label="Assert.AreEqual(3.3m, l[0])", span="3215-3215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonTextWriterTest.cs"];
m4_1508 [label="Assert.AreEqual(null, l[1])", span="3216-3216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonTextWriterTest.cs"];
m4_1509 [label="Assert.AreEqual(1.1m, l[2])", span="3217-3217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonTextWriterTest.cs"];
m4_1510 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3210-3210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonTextWriterTest.cs"];
m4_2791 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6350-6350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonTextWriterTest.cs"];
m4_2794 [label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="6356-6356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonTextWriterTest.cs"];
m4_2793 [label="string json = JsonConvert.SerializeObject(d1)", span="6354-6354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonTextWriterTest.cs"];
m4_2795 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6358-6358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonTextWriterTest.cs"];
m4_2796 [label="Assert.AreEqual(d1[0], d2[0])", span="6359-6359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonTextWriterTest.cs"];
m4_2792 [label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="6352-6352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonTextWriterTest.cs"];
m4_2797 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6350-6350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonTextWriterTest.cs"];
m4_1442 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3073-3073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonTextWriterTest.cs"];
m4_1444 [label="string json = JsonConvert.SerializeObject(value)", span="3080-3080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonTextWriterTest.cs"];
m4_1445 [label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="3082-3082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonTextWriterTest.cs"];
m4_1443 [label="var value = new\r\n            {\r\n                bar = new JObject(new JProperty(''baz'', 13))\r\n            }", span="3075-3078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonTextWriterTest.cs"];
m4_1446 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3073-3073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonTextWriterTest.cs"];
m4_2312 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5149-5149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonTextWriterTest.cs"];
m4_2313 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="5151-5151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonTextWriterTest.cs"];
m4_2314 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5152-5152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonTextWriterTest.cs"];
m4_2315 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5149-5149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonTextWriterTest.cs"];
m4_1213 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2492-2492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1215 [label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="2496-2496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1222 [label="string after = JsonConvert.SerializeObject(aa)", span="2505-2505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1223 [label="Assert.AreEqual(json, after)", span="2507-2507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1216 [label="Assert.AreEqual(''Before!'', aa.Before)", span="2498-2498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1217 [label="Assert.AreEqual(''After!'', aa.After)", span="2499-2499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1218 [label="Assert.AreEqual(4, aa.Coordinates.Length)", span="2500-2500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1219 [label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="2501-2501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1220 [label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="2502-2502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1221 [label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="2503-2503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1214 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="2494-2494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1224 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2492-2492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1484 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3182-3182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonTextWriterTest.cs"];
m4_1485 [label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="3184-3184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonTextWriterTest.cs"];
m4_1486 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<TestObjects.Event>(json); }, @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'')", span="3186-3186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonTextWriterTest.cs"];
m4_1487 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3182-3182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonTextWriterTest.cs"];
m4_3029 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="6835-6835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="JsonTextWriterTest.cs"];
m4_3778 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", span="8656-8656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", file="JsonTextWriterTest.cs"];
m4_2907 [label="Entry Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", file="JsonTextWriterTest.cs"];
m4_176 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)", file="JsonTextWriterTest.cs"];
m4_1081 [label="Entry System.Convert.ToDateTime(string)", span="0-0", cluster="System.Convert.ToDateTime(string)", file="JsonTextWriterTest.cs"];
m4_1440 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JsonTextWriterTest.cs"];
m4_2386 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="5280-5280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JsonTextWriterTest.cs"];
m4_1952 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JsonTextWriterTest.cs"];
m4_770 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="349-349", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonTextWriterTest.cs"];
m4_2481 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5529-5529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonTextWriterTest.cs"];
m4_2483 [label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="5538-5538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonTextWriterTest.cs"];
m4_2484 [label="Assert.AreEqual(40, p.Age)", span="5539-5539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonTextWriterTest.cs"];
m4_2485 [label="Assert.AreEqual(44.4, p.Height)", span="5540-5540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonTextWriterTest.cs"];
m4_2486 [label="Assert.AreEqual(4m, p.Price)", span="5541-5541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonTextWriterTest.cs"];
m4_2482 [label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="5531-5536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonTextWriterTest.cs"];
m4_2487 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5529-5529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonTextWriterTest.cs"];
m4_2175 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4843-4843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_2186 [label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4859-4859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_2184 [label="string json = JsonConvert.SerializeObject(child)", span="4855-4855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_2187 [label="Assert.AreEqual(3, result.Count)", span="4861-4861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_2188 [label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="4862-4862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_2189 [label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="4863-4863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_2185 [label="Console.WriteLine(json)", span="4857-4857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_2183 [label="child.Add(''Father'', reference)", span="4853-4853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_2180 [label="var child = new Dictionary<string, object>()", span="4850-4850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_2176 [label="var reference = new Dictionary<string, object>()", span="4845-4845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_2182 [label="child.Add(''Name'', ''Isabell'')", span="4852-4852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_2179 [label="reference.Add(''blah'', ''blah!'')", span="4848-4848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_2181 [label="child.Add(''_id'', 2)", span="4851-4851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_2177 [label="reference.Add(''$ref'', null)", span="4846-4846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_2178 [label="reference.Add(''$id'', null)", span="4847-4847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_2190 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4843-4843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonTextWriterTest.cs"];
m4_885 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="1889-1889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonTextWriterTest.cs"];
m4_886 [label="string json = JsonConvert.SerializeObject(null)", span="1891-1891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonTextWriterTest.cs"];
m4_887 [label="Assert.AreEqual(''null'', json)", span="1892-1892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonTextWriterTest.cs"];
m4_888 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="1889-1889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonTextWriterTest.cs"];
m4_3629 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8320-8320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonTextWriterTest.cs"];
m4_3631 [label="var s = JsonConvert.SerializeObject(c, Formatting.Indented)", span="8323-8323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonTextWriterTest.cs"];
m4_3632 [label="StringAssert.AreEqual(@''{\r\n  ''''Id'''': ''''1'''',\r\n  ''''X'''': 2\r\n}'', s)", span="8324-8327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonTextWriterTest.cs"];
m4_3630 [label="var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }, X = 2 }", span="8322-8322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonTextWriterTest.cs"];
m4_3633 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8320-8320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonTextWriterTest.cs"];
m4_3014 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6777-6777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonTextWriterTest.cs"];
m4_3020 [label="string json = JsonConvert.SerializeObject(product)", span="6785-6785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonTextWriterTest.cs"];
m4_3015 [label="Product product = new Product()", span="6779-6779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonTextWriterTest.cs"];
m4_3019 [label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="6783-6783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonTextWriterTest.cs"];
m4_3021 [label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="6793-6798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonTextWriterTest.cs"];
m4_3017 [label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="6781-6781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonTextWriterTest.cs"];
m4_3016 [label="product.Name = ''Apple''", span="6780-6780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonTextWriterTest.cs"];
m4_3018 [label="product.Price = 3.99M", span="6782-6782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonTextWriterTest.cs"];
m4_3022 [label="StringAssert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="6799-6808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonTextWriterTest.cs"];
m4_3025 [label="StringAssert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="6825-6832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonTextWriterTest.cs"];
m4_3024 [label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="6818-6823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonTextWriterTest.cs"];
m4_3023 [label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="6816-6816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonTextWriterTest.cs"];
m4_3026 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6777-6777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonTextWriterTest.cs"];
m4_1204 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2479-2479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1209 [label="string json = JsonConvert.SerializeObject(aa)", span="2486-2486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1210 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="2488-2488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1205 [label="JaggedArray aa = new JaggedArray()", span="2481-2481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1208 [label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="2484-2484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1206 [label="aa.Before = ''Before!''", span="2482-2482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1207 [label="aa.After = ''After!''", span="2483-2483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_1211 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2479-2479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonTextWriterTest.cs"];
m4_3636 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8332-8332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonTextWriterTest.cs"];
m4_3637 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}'';\r\n                JsonConvert.DeserializeObject<JObject>(content);\r\n            }, ''Can not add property time to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'')", span="8334-8338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonTextWriterTest.cs"];
m4_3638 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8332-8332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonTextWriterTest.cs"];
m4_9 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2215 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4925-4925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterTest.cs"];
m4_2221 [label="Dictionary<DictionaryKey, string> newDictionary =\r\n                JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="4939-4940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterTest.cs"];
m4_2222 [label="Assert.AreEqual(2, newDictionary.Count)", span="4942-4942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterTest.cs"];
m4_2219 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4932-4932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterTest.cs"];
m4_2220 [label="StringAssert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="4934-4937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterTest.cs"];
m4_2216 [label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="4927-4927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterTest.cs"];
m4_2218 [label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="4930-4930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterTest.cs"];
m4_2217 [label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="4929-4929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterTest.cs"];
m4_2223 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4925-4925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonTextWriterTest.cs"];
m4_492 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonTextWriterTest.cs"];
m4_2712 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="434-434", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTextWriterTest.cs"];
m4_1754 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3798-3798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1756 [label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="3802-3802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1757 [label="Assert.AreEqual(3, dic.Count)", span="3804-3804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1758 [label="Assert.AreEqual(''value1'', dic[''key1''])", span="3805-3805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1759 [label="Assert.AreEqual(''value2'', dic[''key2''])", span="3806-3806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1760 [label="Assert.AreEqual(''value3'', dic[''key3''])", span="3807-3807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1755 [label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="3800-3800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1761 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3798-3798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1082 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="JsonTextWriterTest.cs"];
m4_2722 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6200-6200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonTextWriterTest.cs"];
m4_2726 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6205-6205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonTextWriterTest.cs"];
m4_2725 [label="string json = JsonConvert.SerializeObject(uri)", span="6204-6204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonTextWriterTest.cs"];
m4_2727 [label="Assert.AreEqual(uri, output)", span="6207-6207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonTextWriterTest.cs"];
m4_2724 [label="Uri uri = new Uri(input)", span="6203-6203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonTextWriterTest.cs"];
m4_2723 [label="string input = @''http://tes/?a=b\\c&d=e\''", span="6202-6202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonTextWriterTest.cs"];
m4_2728 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6200-6200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonTextWriterTest.cs"];
m4_121 [label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="613-613", cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonTextWriterTest.cs"];
m4_963 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="JsonTextWriterTest.cs"];
m4_2634 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5992-5992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonTextWriterTest.cs"];
m4_2635 [label="return _readonlyString;", span="5994-5994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonTextWriterTest.cs"];
m4_2636 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5992-5992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonTextWriterTest.cs"];
m4_1872 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4150-4150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonTextWriterTest.cs"];
m4_1873 [label="return _innerDictionary.TryGetValue(key, out value);", span="4152-4152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonTextWriterTest.cs"];
m4_1874 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4150-4150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonTextWriterTest.cs"];
m4_1955 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JsonTextWriterTest.cs"];
m4_3854 [label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0", cluster="System.Text.Encoding.GetEncoding(string)", file="JsonTextWriterTest.cs"];
m4_2805 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6376-6376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonTextWriterTest.cs"];
m4_2808 [label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="6382-6382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonTextWriterTest.cs"];
m4_2807 [label="string json = JsonConvert.SerializeObject(d1)", span="6380-6380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonTextWriterTest.cs"];
m4_2809 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6384-6384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonTextWriterTest.cs"];
m4_2810 [label="Assert.AreEqual(d1[0], d2[0])", span="6385-6385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonTextWriterTest.cs"];
m4_2806 [label="IList<byte[]> d1 = new List<byte[]> { null }", span="6378-6378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonTextWriterTest.cs"];
m4_2811 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6376-6376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonTextWriterTest.cs"];
m4_3739 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="8579-8579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonTextWriterTest.cs"];
m4_3743 [label="JsonConvert.DeserializeObject<ConstantTestClass>(json)", span="8589-8589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonTextWriterTest.cs"];
m4_3741 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="8583-8583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonTextWriterTest.cs"];
m4_3742 [label="StringAssert.AreEqual(@''{\r\n  ''''MY_CONSTANT'''': ''''.''''\r\n}'', json)", span="8585-8587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonTextWriterTest.cs"];
m4_3740 [label="ConstantTestClass c1 = new ConstantTestClass()", span="8581-8581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonTextWriterTest.cs"];
m4_3744 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="8579-8579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonTextWriterTest.cs"];
m4_3390 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="7748-7748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonTextWriterTest.cs"];
m4_3394 [label="Tuple<int, int> tuple2 = JsonConvert.DeserializeObject<Tuple<int, int>>(json)", span="7754-7754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonTextWriterTest.cs"];
m4_3392 [label="string json = JsonConvert.SerializeObject(tuple)", span="7751-7751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonTextWriterTest.cs"];
m4_3393 [label="Assert.AreEqual(@''{''''Item1'''':500,''''Item2'''':20}'', json)", span="7752-7752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonTextWriterTest.cs"];
m4_3395 [label="Assert.AreEqual(500, tuple2.Item1)", span="7755-7755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonTextWriterTest.cs"];
m4_3396 [label="Assert.AreEqual(20, tuple2.Item2)", span="7756-7756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonTextWriterTest.cs"];
m4_3391 [label="Tuple<int, int> tuple = Tuple.Create(500, 20)", span="7750-7750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonTextWriterTest.cs"];
m4_3397 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="7748-7748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonTextWriterTest.cs"];
m4_1727 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3709-3709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonTextWriterTest.cs"];
m4_1728 [label="_dict1.Add(item.Key, item)", span="3711-3711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonTextWriterTest.cs"];
m4_1729 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3709-3709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonTextWriterTest.cs"];
m4_2342 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2450 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5468-5468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonTextWriterTest.cs"];
m4_2451 [label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="5470-5470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonTextWriterTest.cs"];
m4_2452 [label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="5471-5471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonTextWriterTest.cs"];
m4_2453 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5468-5468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonTextWriterTest.cs"];
m4_557 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonTextWriterTest.cs"];
m4_3349 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7590-7590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonTextWriterTest.cs"];
m4_3350 [label="IgnoreSerializableAttribute = false", span="7592-7592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonTextWriterTest.cs"];
m4_3351 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7590-7590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonTextWriterTest.cs"];
m4_1798 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="3958-3958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonTextWriterTest.cs"];
m4_1800 [label="C2 = c2", span="3960-3960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonTextWriterTest.cs"];
m4_1801 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="3958-3958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonTextWriterTest.cs"];
m4_81 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="287-287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonTextWriterTest.cs"];
m4_82 [label="NullTestClass otc = JsonConvert.DeserializeObject<NullTestClass>(@''{\r\n    ''''Value1'''': null,\r\n    ''''Value2'''': null,\r\n    ''''Value3'''': null,\r\n    ''''Value4'''': null,\r\n    ''''Value5'''': null\r\n}'')", span="289-295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonTextWriterTest.cs"];
m4_84 [label="Assert.AreEqual(JTokenType.Null, otc.Value2.Type)", span="297-297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonTextWriterTest.cs"];
m4_85 [label="Assert.AreEqual(JTokenType.Raw, otc.Value3.Type)", span="298-298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonTextWriterTest.cs"];
m4_86 [label="Assert.AreEqual(JTokenType.Null, otc.Value4.Type)", span="299-299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonTextWriterTest.cs"];
m4_83 [label="Assert.IsNull(otc.Value1)", span="296-296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonTextWriterTest.cs"];
m4_87 [label="Assert.IsNull(otc.Value5)", span="300-300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonTextWriterTest.cs"];
m4_88 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="287-287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonTextWriterTest.cs"];
m4_1447 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonTextWriterTest.cs"];
m4_2524 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5661-5661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonTextWriterTest.cs"];
m4_2526 [label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="5664-5664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonTextWriterTest.cs"];
m4_2525 [label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="5663-5663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonTextWriterTest.cs"];
m4_2527 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5661-5661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonTextWriterTest.cs"];
m4_2285 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5100-5100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonTextWriterTest.cs"];
m4_2286 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            })", span="5102-5105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonTextWriterTest.cs"];
m4_2287 [label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="5107-5107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonTextWriterTest.cs"];
m4_2292 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5116-5116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonTextWriterTest.cs"];
m4_2293 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5117-5117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonTextWriterTest.cs"];
m4_2288 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5109-5109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonTextWriterTest.cs"];
m4_2291 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5114-5114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonTextWriterTest.cs"];
m4_2289 [label="reader.DateParseHandling = DateParseHandling.None", span="5110-5110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonTextWriterTest.cs"];
m4_2290 [label="JsonSerializer serializer = new JsonSerializer()", span="5112-5112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonTextWriterTest.cs"];
m4_2294 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5100-5100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonTextWriterTest.cs"];
m4_2352 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5235-5235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonTextWriterTest.cs"];
m4_2358 [label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="5244-5244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonTextWriterTest.cs"];
m4_2357 [label="Invoice i = serializer.Deserialize<Invoice>(reader)", span="5243-5243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonTextWriterTest.cs"];
m4_2354 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5238-5238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonTextWriterTest.cs"];
m4_2356 [label="JsonSerializer serializer = new JsonSerializer()", span="5241-5241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonTextWriterTest.cs"];
m4_2353 [label="string json = ''{Amount:123456789876543.21}''", span="5237-5237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonTextWriterTest.cs"];
m4_2355 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5239-5239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonTextWriterTest.cs"];
m4_2359 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5235-5235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonTextWriterTest.cs"];
m4_586 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1265-1265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_592 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1280-1280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_593 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1282-1289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_587 [label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1267-1273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_591 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1278-1278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_588 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1275-1275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_589 [label="baseWith.Virtual = ''Virtual2!''", span="1276-1276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_590 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1277-1277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_594 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1265-1265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_2387 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="5268-5268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JsonTextWriterTest.cs"];
m4_3424 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="7818-7818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonTextWriterTest.cs"];
m4_3426 [label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="7822-7822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonTextWriterTest.cs"];
m4_3427 [label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="7824-7824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonTextWriterTest.cs"];
m4_3425 [label="string json = @''[999999999999999999999999999999999999999999999999]''", span="7820-7820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonTextWriterTest.cs"];
m4_3428 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<IList<long>>(json), ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'')", span="7826-7826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonTextWriterTest.cs"];
m4_3429 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="7818-7818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonTextWriterTest.cs"];
m4_500 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", span="1019-1019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", file="JsonTextWriterTest.cs"];
m4_336 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="747-747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_340 [label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="753-753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_342 [label="Assert.AreEqual(true, serializerProxy.CheckAdditionalContent)", span="756-756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_344 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializerProxy.ConstructorHandling)", span="759-759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_346 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializerProxy.Context)", span="763-763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_349 [label="Assert.AreEqual(resolver, serializerProxy.ContractResolver)", span="768-768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_351 [label="Assert.AreEqual(1, serializerProxy.Converters.Count)", span="771-771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_353 [label="Assert.AreEqual(''en-NZ'', serializerProxy.Culture.ToString())", span="774-774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_355 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializerProxy.DateFormatHandling)", span="777-777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_357 [label="Assert.AreEqual(''yyyy'', serializerProxy.DateFormatString)", span="780-780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_359 [label="Assert.AreEqual(DateParseHandling.None, serializerProxy.DateParseHandling)", span="783-783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_361 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializerProxy.DateTimeZoneHandling)", span="786-786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_363 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializerProxy.DefaultValueHandling)", span="789-789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_365 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializerProxy.FloatFormatHandling)", span="792-792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_367 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializerProxy.FloatParseHandling)", span="795-795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_369 [label="Assert.AreEqual(Formatting.Indented, serializerProxy.Formatting)", span="798-798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_371 [label="Assert.AreEqual(9001, serializerProxy.MaxDepth)", span="801-801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_373 [label="Assert.AreEqual(MissingMemberHandling.Error, serializerProxy.MissingMemberHandling)", span="804-804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_375 [label="Assert.AreEqual(NullValueHandling.Ignore, serializerProxy.NullValueHandling)", span="807-807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_377 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializerProxy.ObjectCreationHandling)", span="810-810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_379 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializerProxy.PreserveReferencesHandling)", span="813-813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_381 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializerProxy.ReferenceLoopHandling)", span="816-816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_384 [label="Assert.AreEqual(referenceResolver, serializerProxy.ReferenceResolver)", span="820-820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_386 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializerProxy.StringEscapeHandling)", span="823-823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_389 [label="Assert.AreEqual(traceWriter, serializerProxy.TraceWriter)", span="827-827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_391 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializerProxy.TypeNameAssemblyFormat)", span="831-831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_393 [label="Assert.AreEqual(TypeNameHandling.All, serializerProxy.TypeNameHandling)", span="835-835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_337 [label="JsonSerializerProxy serializerProxy = new JsonSerializerProxy(new JsonSerializerInternalReader(new JsonSerializer()))", span="749-749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_338 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="751-751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_339 [label="serializerProxy.Binder = customBinder", span="752-752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_341 [label="serializerProxy.CheckAdditionalContent = true", span="755-755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_343 [label="serializerProxy.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="758-758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_345 [label="serializerProxy.Context = new StreamingContext(StreamingContextStates.Other)", span="762-762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_347 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="766-766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_348 [label="serializerProxy.ContractResolver = resolver", span="767-767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_350 [label="serializerProxy.Converters.Add(new StringEnumConverter())", span="770-770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_352 [label="serializerProxy.Culture = new CultureInfo(''en-nz'')", span="773-773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_354 [label="serializerProxy.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="776-776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_356 [label="serializerProxy.DateFormatString = ''yyyy''", span="779-779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_358 [label="serializerProxy.DateParseHandling = DateParseHandling.None", span="782-782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_360 [label="serializerProxy.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="785-785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_362 [label="serializerProxy.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="788-788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_364 [label="serializerProxy.FloatFormatHandling = FloatFormatHandling.Symbol", span="791-791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_366 [label="serializerProxy.FloatParseHandling = FloatParseHandling.Decimal", span="794-794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_368 [label="serializerProxy.Formatting = Formatting.Indented", span="797-797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_370 [label="serializerProxy.MaxDepth = 9001", span="800-800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_372 [label="serializerProxy.MissingMemberHandling = MissingMemberHandling.Error", span="803-803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_374 [label="serializerProxy.NullValueHandling = NullValueHandling.Ignore", span="806-806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_376 [label="serializerProxy.ObjectCreationHandling = ObjectCreationHandling.Replace", span="809-809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_378 [label="serializerProxy.PreserveReferencesHandling = PreserveReferencesHandling.All", span="812-812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_380 [label="serializerProxy.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="815-815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_382 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="818-818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_383 [label="serializerProxy.ReferenceResolver = referenceResolver", span="819-819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_385 [label="serializerProxy.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="822-822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_387 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="825-825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_388 [label="serializerProxy.TraceWriter = traceWriter", span="826-826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_390 [label="serializerProxy.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="830-830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_392 [label="serializerProxy.TypeNameHandling = TypeNameHandling.All", span="834-834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_394 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="747-747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonTextWriterTest.cs"];
m4_2830 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6427-6427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonTextWriterTest.cs"];
m4_2832 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6436-6436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonTextWriterTest.cs"];
m4_2833 [label="StringAssert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="6438-6442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonTextWriterTest.cs"];
m4_2831 [label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n            {\r\n                Integer = new ConvertibleInt(1),\r\n                NullableInteger1 = new ConvertibleInt(2),\r\n                NullableInteger2 = null\r\n            }", span="6429-6434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonTextWriterTest.cs"];
m4_2834 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6427-6427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonTextWriterTest.cs"];
m4_933 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonTextWriterTest.cs"];
m4_2850 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", file="JsonTextWriterTest.cs"];
m4_2498 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5559-5559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonTextWriterTest.cs"];
m4_2501 [label="Assert.AreEqual(@''{}'', json)", span="5565-5565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonTextWriterTest.cs"];
m4_2500 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="5563-5563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonTextWriterTest.cs"];
m4_2499 [label="MultiIndexSuper e = new MultiIndexSuper()", span="5561-5561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonTextWriterTest.cs"];
m4_2502 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5559-5559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonTextWriterTest.cs"];
m4_1825 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4048-4048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterTest.cs"];
m4_1829 [label="_innerDictionary.Add(entry.Key, entry.Value)", span="4057-4057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterTest.cs"];
m4_1828 [label=dictionary, span="4055-4055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterTest.cs"];
m4_1826 [label="dictionary == null", span="4050-4050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterTest.cs"];
m4_1827 [label="throw new ArgumentNullException(''dictionary'');", span="4052-4052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterTest.cs"];
m4_1830 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4048-4048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterTest.cs"];
m4_63 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", span="207-207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", file="JsonTextWriterTest.cs"];
m4_3437 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="7851-7851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonTextWriterTest.cs"];
m4_3439 [label="string json = JsonConvert.SerializeObject(p)", span="7855-7855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonTextWriterTest.cs"];
m4_3440 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="7857-7857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonTextWriterTest.cs"];
m4_3444 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="7868-7868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonTextWriterTest.cs"];
m4_3438 [label="Pair<string, int> p = new Pair<string, int>(''One'', 2)", span="7853-7853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonTextWriterTest.cs"];
m4_3441 [label="DefaultContractResolver r = new DefaultContractResolver()", span="7860-7860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonTextWriterTest.cs"];
m4_3443 [label="json = JsonConvert.SerializeObject(p, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = r\r\n            })", span="7863-7866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonTextWriterTest.cs"];
m4_3442 [label="r.IgnoreSerializableAttribute = false", span="7861-7861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonTextWriterTest.cs"];
m4_3445 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="7851-7851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonTextWriterTest.cs"];
m4_1173 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2405-2405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonTextWriterTest.cs"];
m4_1175 [label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2414-2414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonTextWriterTest.cs"];
m4_1176 [label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="2416-2416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonTextWriterTest.cs"];
m4_1177 [label="Assert.AreEqual(null, c.MiddleName)", span="2417-2417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonTextWriterTest.cs"];
m4_1178 [label="Assert.AreEqual(null, c.LastName)", span="2418-2418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonTextWriterTest.cs"];
m4_1174 [label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2407-2412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonTextWriterTest.cs"];
m4_1179 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2405-2405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonTextWriterTest.cs"];
m4_3139 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7031-7031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonTextWriterTest.cs"];
m4_3143 [label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="7046-7046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonTextWriterTest.cs"];
m4_3144 [label="Assert.AreEqual(2, dic2.Count)", span="7048-7048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonTextWriterTest.cs"];
m4_3145 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7049-7049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonTextWriterTest.cs"];
m4_3146 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7050-7050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonTextWriterTest.cs"];
m4_3141 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7039-7039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonTextWriterTest.cs"];
m4_3142 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="7041-7044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonTextWriterTest.cs"];
m4_3140 [label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7033-7037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonTextWriterTest.cs"];
m4_3147 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7031-7031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonTextWriterTest.cs"];
m4_3037 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="JsonTextWriterTest.cs"];
m4_3291 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7416-7416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonTextWriterTest.cs"];
m4_3293 [label="StringAssert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="7424-7427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonTextWriterTest.cs"];
m4_3292 [label="string json =\r\n                JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="7418-7422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonTextWriterTest.cs"];
m4_3294 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7416-7416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonTextWriterTest.cs"];
m4_3271 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="JsonTextWriterTest.cs"];
m4_1663 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonTextWriterTest.cs"];
m4_1188 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="JsonTextWriterTest.cs"];
m4_3208 [label="Entry Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", file="JsonTextWriterTest.cs"];
m4_1539 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3264-3264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonTextWriterTest.cs"];
m4_1540 [label="string json = @''[]''", span="3266-3266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonTextWriterTest.cs"];
m4_1541 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeObject<DynamicDictionary>(json); },\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3268-3272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonTextWriterTest.cs"];
m4_1542 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3264-3264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonTextWriterTest.cs"];
m4_1025 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonTextWriterTest.cs"];
m4_607 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="1232-1232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="JsonTextWriterTest.cs"];
m4_1841 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonTextWriterTest.cs"];
m4_1889 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4198-4198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonTextWriterTest.cs"];
m4_1894 [label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="4204-4204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonTextWriterTest.cs"];
m4_1890 [label="_stringValue = stringValue", span="4200-4200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonTextWriterTest.cs"];
m4_1891 [label="_intValue = intValue", span="4201-4201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonTextWriterTest.cs"];
m4_1892 [label="_dateTimeOffsetValue = dateTimeOffset", span="4202-4202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonTextWriterTest.cs"];
m4_1893 [label="_personValue = personValue", span="4203-4203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonTextWriterTest.cs"];
m4_1895 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4198-4198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonTextWriterTest.cs"];
m4_514 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1068-1068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_516 [label="var deserialized = JsonConvert.DeserializeObject<FooBar1>(json)", span="1071-1071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_518 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1073-1073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_515 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1070-1070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_517 [label="Assert.IsNotNull(deserialized.foo)", span="1072-1072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_519 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1068-1068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_649 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="229-229", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonTextWriterTest.cs"];
m4_2344 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5221-5221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonTextWriterTest.cs"];
m4_2345 [label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="5223-5223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonTextWriterTest.cs"];
m4_2346 [label="Assert.AreEqual(123456789876543.21m, d)", span="5224-5224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonTextWriterTest.cs"];
m4_2347 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5221-5221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonTextWriterTest.cs"];
m4_2202 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4893-4893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonTextWriterTest.cs"];
m4_2205 [label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="4903-4903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonTextWriterTest.cs"];
m4_2206 [label="Assert.AreEqual(9.9m, dic[''value''])", span="4904-4904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonTextWriterTest.cs"];
m4_2204 [label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n                json, new JsonSerializerSettings\r\n                {\r\n                    FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="4897-4901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonTextWriterTest.cs"];
m4_2203 [label="string json = @''{'value':9.9}''", span="4895-4895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonTextWriterTest.cs"];
m4_2207 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4893-4893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonTextWriterTest.cs"];
m4_2550 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="5733-5733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="JsonTextWriterTest.cs"];
m4_1832 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4092-4092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterTest.cs"];
m4_1833 [label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="4094-4094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterTest.cs"];
m4_1834 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4092-4092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterTest.cs"];
m4_962 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriterTest.cs"];
m4_2079 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4674-4674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2086 [label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="4695-4695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2087 [label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="4696-4696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2088 [label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="4697-4697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2083 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4680-4680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2085 [label="StringAssert.AreEqual(expected, json)", span="4693-4693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2089 [label="Assert.IsNull(newTestObject.Element.Parent)", span="4699-4699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2080 [label="XNodeTestObject testObject = new XNodeTestObject()", span="4676-4676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2082 [label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="4678-4678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2084 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="4681-4692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2081 [label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="4677-4677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2090 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4674-4674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonTextWriterTest.cs"];
m4_728 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1536-1536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonTextWriterTest.cs"];
m4_731 [label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="1542-1542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonTextWriterTest.cs"];
m4_730 [label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="1540-1540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonTextWriterTest.cs"];
m4_732 [label="StringAssert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="1543-1545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonTextWriterTest.cs"];
m4_729 [label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="1538-1538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonTextWriterTest.cs"];
m4_733 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1536-1536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonTextWriterTest.cs"];
m4_1838 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4102-4102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonTextWriterTest.cs"];
m4_1839 [label="_innerDictionary.Clear()", span="4104-4104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonTextWriterTest.cs"];
m4_1840 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4102-4102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonTextWriterTest.cs"];
m4_527 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", span="1029-1029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", file="JsonTextWriterTest.cs"];
m4_719 [label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonTextWriterTest.cs"];
m4_2503 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="5568-5568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="JsonTextWriterTest.cs"];
m4_2543 [label="Entry DataContractSerializer.cstr", span="", cluster="DataContractSerializer.cstr", file="JsonTextWriterTest.cs"];
m4_1083 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2245-2245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1088 [label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="2252-2252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1090 [label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="2256-2256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1091 [label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="2257-2257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1087 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2251-2251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1089 [label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2254-2254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1084 [label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="2247-2247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1086 [label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="2249-2249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1085 [label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="2248-2248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1092 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2245-2245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_3059 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6892-6892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonTextWriterTest.cs"];
m4_3070 [label="Console.WriteLine(a.ToString())", span="6909-6909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonTextWriterTest.cs"];
m4_3069 [label="Console.WriteLine(v.Value.GetType())", span="6908-6908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonTextWriterTest.cs"];
m4_3066 [label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n            {\r\n                ReadRootValueAsArray = true\r\n            }", span="6901-6904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonTextWriterTest.cs"];
m4_3067 [label="JArray a = (JArray)JArray.ReadFrom(reader)", span="6906-6906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonTextWriterTest.cs"];
m4_3060 [label="MemoryStream ms = new MemoryStream()", span="6894-6894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonTextWriterTest.cs"];
m4_3068 [label="JValue v = (JValue)a[0]", span="6907-6907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonTextWriterTest.cs"];
m4_3065 [label="byte[] data = ms.ToArray()", span="6900-6900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonTextWriterTest.cs"];
m4_3061 [label="BsonWriter writer = new BsonWriter(ms)", span="6895-6895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonTextWriterTest.cs"];
m4_3064 [label="writer.WriteEndArray()", span="6898-6898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonTextWriterTest.cs"];
m4_3062 [label="writer.WriteStartArray()", span="6896-6896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonTextWriterTest.cs"];
m4_3063 [label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="6897-6897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonTextWriterTest.cs"];
m4_3071 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6892-6892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonTextWriterTest.cs"];
m4_1601 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3367-3367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonTextWriterTest.cs"];
m4_1602 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3369-3380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonTextWriterTest.cs"];
m4_1603 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3367-3367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonTextWriterTest.cs"];
m4_2021 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="4641-4641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterTest.cs"];
m4_2068 [label="BB_field1 = g", span="4644-4644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterTest.cs"];
m4_2069 [label="BB_field2 = g", span="4645-4645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterTest.cs"];
m4_2070 [label="BB_property1 = g", span="4646-4646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterTest.cs"];
m4_2071 [label="BB_property2 = g", span="4647-4647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterTest.cs"];
m4_2072 [label="BB_property3 = g", span="4648-4648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterTest.cs"];
m4_2073 [label="BB_property4 = g", span="4649-4649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterTest.cs"];
m4_2074 [label="BB_property5 = g", span="4650-4650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterTest.cs"];
m4_2075 [label="BB_property6 = g", span="4651-4651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterTest.cs"];
m4_2076 [label="BB_property7 = g", span="4652-4652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterTest.cs"];
m4_2077 [label="BB_property8 = g", span="4653-4653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterTest.cs"];
m4_2078 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="4641-4641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonTextWriterTest.cs"];
m4_574 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1140-1140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonTextWriterTest.cs"];
m4_576 [label="return new DictionaryKeyCast(strings[0], Convert.ToInt32(strings[1]));", span="1143-1143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonTextWriterTest.cs"];
m4_575 [label="var strings = dictionaryKey.Split(' ')", span="1142-1142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonTextWriterTest.cs"];
m4_577 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1140-1140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonTextWriterTest.cs"];
m4_1107 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2278-2278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonTextWriterTest.cs"];
m4_1109 [label="json = JsonConvert.SerializeObject((int?)null)", span="2282-2282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonTextWriterTest.cs"];
m4_1111 [label="json = JsonConvert.SerializeObject((int?)1)", span="2285-2285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonTextWriterTest.cs"];
m4_1110 [label="Assert.AreEqual(''null'', json)", span="2283-2283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonTextWriterTest.cs"];
m4_1112 [label="Assert.AreEqual(''1'', json)", span="2286-2286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonTextWriterTest.cs"];
m4_1108 [label="string json", span="2280-2280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonTextWriterTest.cs"];
m4_1113 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2278-2278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonTextWriterTest.cs"];
m4_51 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonTextWriterTest.cs"];
m4_1448 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3086-3086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonTextWriterTest.cs"];
m4_1450 [label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="3098-3098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonTextWriterTest.cs"];
m4_1451 [label="StringAssert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="3100-3112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonTextWriterTest.cs"];
m4_1449 [label="Content content = new Content\r\n            {\r\n                Text = ''Blah, blah, blah'',\r\n                Children = new List<Content>\r\n                {\r\n                    new Content { Text = ''First'' },\r\n                    new Content { Text = ''Second'' }\r\n                }\r\n            }", span="3088-3096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonTextWriterTest.cs"];
m4_1452 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3086-3086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonTextWriterTest.cs"];
m4_1746 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="3703-3703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JsonTextWriterTest.cs"];
m4_1921 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JsonTextWriterTest.cs"];
m4_3505 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8032-8032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonTextWriterTest.cs"];
m4_3507 [label="var foo = JsonConvert.DeserializeObject<FooConstructor>(json)", span="8035-8035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonTextWriterTest.cs"];
m4_3508 [label="Assert.AreEqual(''my value'', foo.Bar)", span="8036-8036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonTextWriterTest.cs"];
m4_3506 [label="string json = @''{''''something_else'''':''''my value''''}''", span="8034-8034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonTextWriterTest.cs"];
m4_3509 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8032-8032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonTextWriterTest.cs"];
m4_1960 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4333-4333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1972 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4377-4377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1975 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4380-4380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1973 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="4378-4378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1974 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4379-4379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1976 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4381-4381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1977 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="4382-4382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1978 [label="Assert.AreEqual(null, o2._nullableInt)", span="4383-4383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1971 [label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4352-4375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1970 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="4351-4351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1966 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4341-4341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1968 [label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="4344-4344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1969 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4349-4349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1962 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4336-4336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1965 [label="person.Name = ''Name!''", span="4339-4339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1967 [label="string dateTimeOffsetText", span="4342-4342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1961 [label="Person person = new Person()", span="4335-4335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1963 [label="person.LastModified = person.BirthDate", span="4337-4337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1964 [label="person.Department = ''Department!''", span="4338-4338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1979 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4333-4333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonTextWriterTest.cs"];
m4_2812 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6389-6389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonTextWriterTest.cs"];
m4_2819 [label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="6400-6400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonTextWriterTest.cs"];
m4_2817 [label="string json = JsonConvert.SerializeObject(b)", span="6396-6396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonTextWriterTest.cs"];
m4_2818 [label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="6398-6398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonTextWriterTest.cs"];
m4_2820 [label="Assert.AreEqual(true, b2.no)", span="6402-6402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonTextWriterTest.cs"];
m4_2813 [label="Bb b = new Bb()", span="6391-6391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonTextWriterTest.cs"];
m4_2816 [label="a.no = int.MaxValue", span="6394-6394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonTextWriterTest.cs"];
m4_2814 [label="b.no = true", span="6392-6392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonTextWriterTest.cs"];
m4_2815 [label="Aa a = b", span="6393-6393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonTextWriterTest.cs"];
m4_2821 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6389-6389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonTextWriterTest.cs"];
m4_1164 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2379-2379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterTest.cs"];
m4_1168 [label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2398-2398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterTest.cs"];
m4_1169 [label="Assert.AreEqual(''Bob'', c2.FirstName)", span="2400-2400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterTest.cs"];
m4_1170 [label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="2401-2401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterTest.cs"];
m4_1166 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2389-2389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterTest.cs"];
m4_1167 [label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="2391-2396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterTest.cs"];
m4_1165 [label="RequiredMembersClass c = new RequiredMembersClass()\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                FirstName = ''Bob'',\r\n                LastName = ''Smith'',\r\n                MiddleName = ''Cosmo''\r\n            }", span="2381-2387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterTest.cs"];
m4_1171 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2379-2379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonTextWriterTest.cs"];
m4_2564 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5811-5811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonTextWriterTest.cs"];
m4_2566 [label="Categories = new List<string>()", span="5814-5814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonTextWriterTest.cs"];
m4_2565 [label="Title = title", span="5813-5813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonTextWriterTest.cs"];
m4_2567 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5811-5811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonTextWriterTest.cs"];
m4_645 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="JsonTextWriterTest.cs"];
m4_1106 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonTextWriterTest.cs"];
m4_2713 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="141-141", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonTextWriterTest.cs"];
m4_3073 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="JsonTextWriterTest.cs"];
m4_158 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", span="413-413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", file="JsonTextWriterTest.cs"];
m4_1773 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="3868-3868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonTextWriterTest.cs"];
m4_1775 [label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="3871-3871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonTextWriterTest.cs"];
m4_1776 [label="StringAssert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="3873-3878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonTextWriterTest.cs"];
m4_1774 [label="B value = new B()", span="3870-3870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonTextWriterTest.cs"];
m4_1777 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="3868-3868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonTextWriterTest.cs"];
m4_1340 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="2807-2807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonTextWriterTest.cs"];
m4_1342 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n                o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n                JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n            }, ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'')", span="2811-2817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonTextWriterTest.cs"];
m4_1341 [label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="2809-2809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonTextWriterTest.cs"];
m4_1343 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="2807-2807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonTextWriterTest.cs"];
m4_1180 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2422-2422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterTest.cs"];
m4_1182 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2433-2433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterTest.cs"];
m4_1181 [label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2426-2431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterTest.cs"];
m4_1183 [label="Assert.Fail()", span="2434-2434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterTest.cs"];
m4_1184 [label=JsonSerializationException, span="2436-2436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterTest.cs"];
m4_1185 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'FirstName' expects a value but got null. Path ''''))", span="2438-2438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterTest.cs"];
m4_1186 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2422-2422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterTest.cs"];
m4_2116 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="4756-4756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JsonTextWriterTest.cs"];
m4_3368 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7674-7674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonTextWriterTest.cs"];
m4_3369 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7676-7680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonTextWriterTest.cs"];
m4_3371 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7688-7691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonTextWriterTest.cs"];
m4_3370 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = new CultureInfo(''en-NZ'')\r\n            })", span="7682-7686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonTextWriterTest.cs"];
m4_3372 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7674-7674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonTextWriterTest.cs"];
m4_67 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="327-327", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonTextWriterTest.cs"];
m4_1835 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4097-4097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonTextWriterTest.cs"];
m4_1836 [label="_innerDictionary.Add(key, value)", span="4099-4099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonTextWriterTest.cs"];
m4_1837 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4097-4097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonTextWriterTest.cs"];
m4_560 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonTextWriterTest.cs"];
m4_571 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1135-1135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonTextWriterTest.cs"];
m4_572 [label="return _name + '' '' + _number;", span="1137-1137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonTextWriterTest.cs"];
m4_573 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1135-1135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonTextWriterTest.cs"];
m4_1875 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonTextWriterTest.cs"];
m4_1649 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3473-3473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterTest.cs"];
m4_1656 [label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="3489-3489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterTest.cs"];
m4_1657 [label="Assert.AreEqual(3, newFoo.Bars.Count)", span="3490-3490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterTest.cs"];
m4_1658 [label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="3491-3491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterTest.cs"];
m4_1659 [label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="3492-3492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterTest.cs"];
m4_1660 [label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="3493-3493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterTest.cs"];
m4_1654 [label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="3480-3480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterTest.cs"];
m4_1655 [label="StringAssert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="3481-3487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterTest.cs"];
m4_1650 [label="Foo f = new Foo()", span="3475-3475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterTest.cs"];
m4_1653 [label="f.Bars.Add(new Bar { Id = 2 })", span="3478-3478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterTest.cs"];
m4_1651 [label="f.Bars.Add(new Bar { Id = 0 })", span="3476-3476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterTest.cs"];
m4_1652 [label="f.Bars.Add(new Bar { Id = 1 })", span="3477-3477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterTest.cs"];
m4_1661 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3473-3473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonTextWriterTest.cs"];
m4_1928 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4230-4230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1929 [label="info.AddValue(''stringValue'', _stringValue)", span="4232-4232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1930 [label="info.AddValue(''intValue'', _intValue)", span="4233-4233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1931 [label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="4234-4234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1932 [label="info.AddValue(''personValue'', _personValue)", span="4235-4235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1933 [label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="4236-4236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1935 [label="info.AddValue(''booleanValue'', _booleanValue)", span="4239-4239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1936 [label="info.AddValue(''byteValue'', _byteValue)", span="4240-4240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1937 [label="info.AddValue(''charValue'', _charValue)", span="4241-4241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1938 [label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="4242-4242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1939 [label="info.AddValue(''decimalValue'', _decimalValue)", span="4243-4243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1940 [label="info.AddValue(''shortValue'', _shortValue)", span="4244-4244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1941 [label="info.AddValue(''longValue'', _longValue)", span="4245-4245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1942 [label="info.AddValue(''sbyteValue'', _sbyteValue)", span="4246-4246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1943 [label="info.AddValue(''floatValue'', _floatValue)", span="4247-4247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1944 [label="info.AddValue(''ushortValue'', _ushortValue)", span="4248-4248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1945 [label="info.AddValue(''uintValue'', _uintValue)", span="4249-4249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1946 [label="info.AddValue(''ulongValue'', _ulongValue)", span="4250-4250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1934 [label="info.AddValue(''nullableInt'', null)", span="4237-4237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1947 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4230-4230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_2658 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6088-6088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonTextWriterTest.cs"];
m4_2659 [label="Exceptions = new List<Exception>()", span="6090-6090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonTextWriterTest.cs"];
m4_2660 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6088-6088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonTextWriterTest.cs"];
m4_1149 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2357-2357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterTest.cs"];
m4_1154 [label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2365-2365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterTest.cs"];
m4_1160 [label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2374-2374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterTest.cs"];
m4_1152 [label="string json = JsonConvert.SerializeObject(typeClass)", span="2362-2362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterTest.cs"];
m4_1158 [label="json = JsonConvert.SerializeObject(typeClass)", span="2371-2371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterTest.cs"];
m4_1153 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="2363-2363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterTest.cs"];
m4_1155 [label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="2366-2366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterTest.cs"];
m4_1159 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="2372-2372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterTest.cs"];
m4_1161 [label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="2375-2375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterTest.cs"];
m4_1151 [label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="2360-2360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterTest.cs"];
m4_1157 [label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="2369-2369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterTest.cs"];
m4_1150 [label="string boolRef = typeof(bool).AssemblyQualifiedName", span="2359-2359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterTest.cs"];
m4_1156 [label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="2368-2368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterTest.cs"];
m4_1162 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2357-2357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonTextWriterTest.cs"];
m4_3076 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="JsonTextWriterTest.cs"];
m4_3617 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8292-8292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3618 [label="throw new InvalidCastException();", span="8294-8294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3619 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8292-8292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3378 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7715-7715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonTextWriterTest.cs"];
m4_3385 [label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="7735-7735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonTextWriterTest.cs"];
m4_3386 [label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="7736-7736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonTextWriterTest.cs"];
m4_3381 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7724-7724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonTextWriterTest.cs"];
m4_3384 [label="Assert.IsNull(jsonWriter.DateFormatString)", span="7734-7734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonTextWriterTest.cs"];
m4_3387 [label="string json = sw.ToString()", span="7738-7738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonTextWriterTest.cs"];
m4_3379 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7717-7721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonTextWriterTest.cs"];
m4_3380 [label="StringWriter sw = new StringWriter()", span="7723-7723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonTextWriterTest.cs"];
m4_3382 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = new CultureInfo(''en-NZ''),\r\n                Formatting = Formatting.Indented\r\n            })", span="7726-7731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonTextWriterTest.cs"];
m4_3383 [label="serializer.Serialize(jsonWriter, dates)", span="7732-7732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonTextWriterTest.cs"];
m4_3388 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7740-7743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonTextWriterTest.cs"];
m4_3389 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7715-7715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonTextWriterTest.cs"];
m4_1518 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3231-3231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonTextWriterTest.cs"];
m4_1519 [label="string json = @''[]''", span="3233-3233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonTextWriterTest.cs"];
m4_1520 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, string>>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3235-3237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonTextWriterTest.cs"];
m4_1521 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3231-3231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonTextWriterTest.cs"];
m4_120 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonTextWriterTest.cs"];
m4_2584 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5854-5854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2590 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="5869-5869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2591 [label="Assert.AreEqual(c1.Title, c2.Title)", span="5870-5870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2592 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5871-5871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2593 [label="Assert.AreEqual(1, c2.Categories[''one''])", span="5872-5872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2594 [label="Assert.AreEqual(2, c2.Categories[''two''])", span="5873-5873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2588 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5860-5860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2589 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="5861-5867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2585 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="5856-5856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2587 [label="c1.Categories.Add(''two'', 2)", span="5858-5858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2586 [label="c1.Categories.Add(''one'', 1)", span="5857-5857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2595 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5854-5854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonTextWriterTest.cs"];
m4_269 [label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", span="36-36", cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", file="JsonTextWriterTest.cs"];
m4_276 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="JsonTextWriterTest.cs"];
m4_565 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonTextWriterTest.cs"];
m4_2022 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4504-4504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2023 [label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n                @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="4506-4516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2032 [label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n                @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="4527-4547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2024 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4518-4518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2025 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4519-4519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2026 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4520-4520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2027 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4521-4521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2028 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4522-4522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2029 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4523-4523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2030 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4524-4524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2031 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4525-4525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2033 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4549-4549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2034 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4550-4550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2035 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4551-4551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2036 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4552-4552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2037 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4553-4553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2038 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4554-4554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2039 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4555-4555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2040 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4556-4556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2041 [label="Assert.AreEqual(4, myB.BB_field1)", span="4558-4558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2042 [label="Assert.AreEqual(4, myB.BB_field2)", span="4559-4559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2043 [label="Assert.AreEqual(3, myB.BB_property1)", span="4560-4560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2044 [label="Assert.AreEqual(3, myB.BB_property2)", span="4561-4561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2045 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4562-4562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2046 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4563-4563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2047 [label="Assert.AreEqual(0, myB.BB_property5)", span="4564-4564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2048 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4565-4565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2049 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4566-4566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2050 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4567-4567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2051 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4504-4504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_464 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="971-971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonTextWriterTest.cs"];
m4_467 [label="Assert.IsTrue(MathUtils.ApproxEquals(1E+38, (double)o))", span="977-977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonTextWriterTest.cs"];
m4_466 [label="CustomAssert.IsInstanceOfType(typeof(double), o)", span="975-975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonTextWriterTest.cs"];
m4_465 [label="object o = JsonConvert.DeserializeObject(''100000000000000000000000000000000000000.0'')", span="973-973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonTextWriterTest.cs"];
m4_468 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="971-971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonTextWriterTest.cs"];
m4_65 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonTextWriterTest.cs"];
m4_3028 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", file="JsonTextWriterTest.cs"];
m4_3605 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8272-8272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3606 [label="return Value;", span="8274-8274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3607 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8272-8272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_1270 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="2645-2645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterTest.cs"];
m4_1272 [label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="2654-2654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterTest.cs"];
m4_1274 [label="Assert.AreEqual(''firstName'', o.firstName)", span="2657-2657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterTest.cs"];
m4_1275 [label="Assert.AreEqual(''FirstName'', o.FirstName)", span="2658-2658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterTest.cs"];
m4_1276 [label="Assert.AreEqual(''LastName'', o.LastName)", span="2659-2659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterTest.cs"];
m4_1277 [label="Assert.AreEqual(''lastName'', o.lastName)", span="2660-2660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterTest.cs"];
m4_1271 [label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="2647-2652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterTest.cs"];
m4_1273 [label="Assert.IsNotNull(o)", span="2655-2655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterTest.cs"];
m4_1278 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="2645-2645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonTextWriterTest.cs"];
m4_1074 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonTextWriterTest.cs"];
m4_909 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="1924-1924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterTest.cs"];
m4_914 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="1933-1933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterTest.cs"];
m4_915 [label="Assert.AreEqual(1, wibble.Bar.Count)", span="1935-1935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterTest.cs"];
m4_913 [label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="1931-1931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterTest.cs"];
m4_910 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="1926-1926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterTest.cs"];
m4_911 [label="JsonSerializer s = new JsonSerializer()", span="1928-1928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterTest.cs"];
m4_912 [label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1929-1929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterTest.cs"];
m4_916 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="1924-1924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonTextWriterTest.cs"];
m4_1320 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="2766-2766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1326 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="2774-2774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1327 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="2776-2783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1329 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="2787-2791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1328 [label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="2785-2785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1321 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="2768-2768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1325 [label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="2772-2772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1322 [label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="2769-2769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1323 [label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="2770-2770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1324 [label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="2771-2771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1330 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="2766-2766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1954 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="JsonTextWriterTest.cs"];
m4_1026 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="536-536", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriterTest.cs"];
m4_831 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTextWriterTest.cs"];
m4_462 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", file="JsonTextWriterTest.cs"];
m4_3258 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7354-7354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonTextWriterTest.cs"];
m4_3259 [label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="7356-7356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonTextWriterTest.cs"];
m4_3262 [label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="7360-7360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonTextWriterTest.cs"];
m4_3267 [label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="7367-7367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonTextWriterTest.cs"];
m4_3260 [label="Assert.AreEqual(1, uris.Count)", span="7357-7357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonTextWriterTest.cs"];
m4_3261 [label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="7358-7358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonTextWriterTest.cs"];
m4_3266 [label="Assert.AreEqual(i1, i2)", span="7365-7365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonTextWriterTest.cs"];
m4_3269 [label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="7369-7369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonTextWriterTest.cs"];
m4_3263 [label="Assert.IsNotNull(uri)", span="7361-7361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonTextWriterTest.cs"];
m4_3268 [label="Assert.IsNotNull(uri)", span="7368-7368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonTextWriterTest.cs"];
m4_3264 [label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="7363-7363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonTextWriterTest.cs"];
m4_3265 [label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="7364-7364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonTextWriterTest.cs"];
m4_3270 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7354-7354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonTextWriterTest.cs"];
m4_149 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", span="408-408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", file="JsonTextWriterTest.cs"];
m4_2195 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="4882-4882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonTextWriterTest.cs"];
m4_2197 [label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="4886-4886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonTextWriterTest.cs"];
m4_2198 [label="Assert.AreEqual(''First'', cc.First)", span="4887-4887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonTextWriterTest.cs"];
m4_2199 [label="Assert.AreEqual(2, cc.Second)", span="4888-4888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonTextWriterTest.cs"];
m4_2200 [label="Assert.AreEqual(null, cc.Ignored)", span="4889-4889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonTextWriterTest.cs"];
m4_2196 [label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="4884-4884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonTextWriterTest.cs"];
m4_2201 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="4882-4882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonTextWriterTest.cs"];
m4_854 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="1832-1832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterTest.cs"];
m4_856 [label="string json = JsonConvert.SerializeObject(anonymous)", span="1844-1844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterTest.cs"];
m4_857 [label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="1845-1845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterTest.cs"];
m4_859 [label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="1848-1848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterTest.cs"];
m4_860 [label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="1849-1849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterTest.cs"];
m4_861 [label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="1850-1850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterTest.cs"];
m4_862 [label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="1851-1851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterTest.cs"];
m4_863 [label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="1852-1852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterTest.cs"];
m4_864 [label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="1853-1853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterTest.cs"];
m4_865 [label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="1854-1854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterTest.cs"];
m4_855 [label="var anonymous =\r\n                new\r\n                {\r\n                    StringValue = ''I am a string'',\r\n                    IntValue = int.MaxValue,\r\n                    NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n                    NestedArray = new[] { 1, 2 },\r\n                    Product = new Product() { Name = ''TestProduct'' }\r\n                }", span="1834-1842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterTest.cs"];
m4_858 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="1847-1847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterTest.cs"];
m4_866 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="1832-1832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonTextWriterTest.cs"];
m4_564 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="JsonTextWriterTest.cs"];
m4_2661 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6096-6096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonTextWriterTest.cs"];
m4_2667 [label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6108-6108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonTextWriterTest.cs"];
m4_2670 [label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6113-6113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonTextWriterTest.cs"];
m4_2666 [label="string sex = JsonConvert.SerializeObject(classWithException)", span="6107-6107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonTextWriterTest.cs"];
m4_2668 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6109-6109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonTextWriterTest.cs"];
m4_2671 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6114-6114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonTextWriterTest.cs"];
m4_2669 [label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="6111-6111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonTextWriterTest.cs"];
m4_2662 [label="ClassWithException classWithException = new ClassWithException()", span="6098-6098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonTextWriterTest.cs"];
m4_2663 [label="throw new Exception(''Test Exception'');", span="6101-6101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonTextWriterTest.cs"];
m4_2665 [label="classWithException.Exceptions.Add(ex)", span="6105-6105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonTextWriterTest.cs"];
m4_2664 [label=Exception, span="6103-6103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonTextWriterTest.cs"];
m4_2672 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6096-6096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonTextWriterTest.cs"];
m4_0 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffsetText(System.DateTime)", span="33-33", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffsetText(System.DateTime)", file="JsonTextWriterTest.cs"];
m4_1 [label="TimeSpan utcOffset = d.GetUtcOffset()", span="35-35", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffsetText(System.DateTime)", file="JsonTextWriterTest.cs"];
m4_2 [label="return utcOffset.Hours.ToString(''+00;-00'', CultureInfo.InvariantCulture) + '':'' + utcOffset.Minutes.ToString(''00;00'', CultureInfo.InvariantCulture);", span="37-37", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffsetText(System.DateTime)", file="JsonTextWriterTest.cs"];
m4_3 [label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffsetText(System.DateTime)", span="33-33", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffsetText(System.DateTime)", file="JsonTextWriterTest.cs"];
m4_4 [label="Entry System.DateTime.GetUtcOffset()", span="40-40", cluster="System.DateTime.GetUtcOffset()", file="JsonTextWriterTest.cs"];
m4_5 [label="Entry int.ToString(string, System.IFormatProvider)", span="0-0", cluster="int.ToString(string, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_6 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffset(System.DateTime)", span="40-40", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffset(System.DateTime)", file="JsonTextWriterTest.cs"];
m4_7 [label="return TimeZoneInfo.Local.GetUtcOffset(d);", span="45-45", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffset(System.DateTime)", file="JsonTextWriterTest.cs"];
m4_2652 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6066-6066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonTextWriterTest.cs"];
m4_2654 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="6069-6069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonTextWriterTest.cs"];
m4_2655 [label="StringAssert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="6071-6080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonTextWriterTest.cs"];
m4_2653 [label="DerivedType d = new DerivedType()", span="6068-6068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonTextWriterTest.cs"];
m4_2656 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6066-6066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonTextWriterTest.cs"];
m4_3398 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="JsonTextWriterTest.cs"];
m4_3209 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="181-181", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonTextWriterTest.cs"];
m4_2117 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="4779-4779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="JsonTextWriterTest.cs"];
m4_2272 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="5026-5026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonTextWriterTest.cs"];
m4_2094 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="4705-4705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2102 [label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="4720-4720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2103 [label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="4721-4721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2099 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4712-4712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2101 [label="StringAssert.AreEqual(expected, json)", span="4718-4718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2095 [label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="4707-4707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2098 [label="testObject.Document = document", span="4710-4710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2100 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="4713-4717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2096 [label="XmlDocument document = new XmlDocument()", span="4708-4708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2097 [label="document.LoadXml(''<root>hehe, root</root>'')", span="4709-4709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterTest.cs"];
m4_2104 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="4705-4705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonTextWriterTest.cs"];
m4_8 [label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffset(System.DateTime)", span="40-40", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.GetUtcOffset(System.DateTime)", file="JsonTextWriterTest.cs"];
m4_1854 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4122-4122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonTextWriterTest.cs"];
m4_1855 [label="return _innerDictionary.GetEnumerator();", span="4124-4124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonTextWriterTest.cs"];
m4_1856 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4122-4122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonTextWriterTest.cs"];
m4_3186 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7147-7147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonTextWriterTest.cs"];
m4_3187 [label="var json = Serialize(obj)", span="7150-7150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonTextWriterTest.cs"];
m4_3188 [label="return Deserialize<T>(json);", span="7151-7151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonTextWriterTest.cs"];
m4_3189 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7147-7147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonTextWriterTest.cs"];
m4_2377 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5286-5286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterTest.cs"];
m4_2381 [label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="5293-5293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterTest.cs"];
m4_2380 [label="string str = JsonConvert.SerializeObject(obj)", span="5291-5291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterTest.cs"];
m4_2382 [label="Assert.AreEqual(1, obj.Position.X)", span="5295-5295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterTest.cs"];
m4_2383 [label="Assert.AreEqual(2, obj.Position.Y)", span="5296-5296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterTest.cs"];
m4_2384 [label="Assert.AreEqual(3, obj.Position.Z)", span="5297-5297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterTest.cs"];
m4_2378 [label="VectorParent obj = new VectorParent()", span="5288-5288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterTest.cs"];
m4_2379 [label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="5289-5289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterTest.cs"];
m4_2385 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5286-5286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonTextWriterTest.cs"];
m4_1384 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="2937-2937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterTest.cs"];
m4_1389 [label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="2950-2950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterTest.cs"];
m4_1390 [label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="2951-2951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterTest.cs"];
m4_1387 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2941-2941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterTest.cs"];
m4_1388 [label="StringAssert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="2943-2948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterTest.cs"];
m4_1385 [label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="2939-2939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterTest.cs"];
m4_1386 [label="c.NotIncluded = ''Hi''", span="2940-2940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterTest.cs"];
m4_1391 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="2937-2937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonTextWriterTest.cs"];
m4_2939 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6648-6648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonTextWriterTest.cs"];
m4_2940 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(''''); }, ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'')", span="6650-6650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonTextWriterTest.cs"];
m4_2941 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6648-6648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonTextWriterTest.cs"];
m4_976 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JsonTextWriterTest.cs"];
m4_2991 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="JsonTextWriterTest.cs"];
m4_2626 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="5971-5971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonTextWriterTest.cs"];
m4_2627 [label="_privateString = privateString", span="5973-5973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonTextWriterTest.cs"];
m4_2628 [label="_readonlyString = readonlyString", span="5974-5974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonTextWriterTest.cs"];
m4_2629 [label="_internalString = internalString", span="5975-5975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonTextWriterTest.cs"];
m4_2630 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="5971-5971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonTextWriterTest.cs"];
m4_2534 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="5678-5678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="JsonTextWriterTest.cs"];
m4_1779 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="3889-3889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonTextWriterTest.cs"];
m4_1783 [label="Assert.AreEqual(c.DateTimeOffsetValue, cISO.DateTimeOffsetValue)", span="3907-3907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonTextWriterTest.cs"];
m4_1781 [label="DateTimeOffsetWrapper cISO = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset,\r\n                Converters =\r\n                {\r\n                    new IsoDateTimeConverter()\r\n                }\r\n            })", span="3894-3901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonTextWriterTest.cs"];
m4_1782 [label="DateTimeOffsetWrapper c = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="3902-3905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonTextWriterTest.cs"];
m4_1780 [label="string jsonIsoText =\r\n                @''{''''DateTimeOffsetValue'''':''''2012-02-25T19:55:50.6095676+00:00'''', ''''DateTimeValue'''':''''2012-02-25T19:55:50.6095676+00:00''''}''", span="3891-3892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonTextWriterTest.cs"];
m4_1784 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="3889-3889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonTextWriterTest.cs"];
m4_3352 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7622-7622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3357 [label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="7632-7632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3358 [label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="7633-7633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3356 [label="var dateTimeOffset = (DateTimeOffset)((JValue)obj[''startDateTime'']).Value", span="7630-7630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3355 [label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="7628-7628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3354 [label="var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }", span="7626-7626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3353 [label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="7624-7624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3359 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7622-7622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_2766 [label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="8998-8998", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonTextWriterTest.cs"];
m4_954 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonTextWriterTest.cs"];
m4_579 [label="Entry System.Convert.ToInt32(string)", span="0-0", cluster="System.Convert.ToInt32(string)", file="JsonTextWriterTest.cs"];
m4_1010 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2112-2112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonTextWriterTest.cs"];
m4_1014 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="2119-2119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonTextWriterTest.cs"];
m4_1012 [label="string json = JsonConvert.SerializeObject(c1)", span="2116-2116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonTextWriterTest.cs"];
m4_1013 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2117-2117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonTextWriterTest.cs"];
m4_1015 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2121-2121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonTextWriterTest.cs"];
m4_1011 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2114-2114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonTextWriterTest.cs"];
m4_1016 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2112-2112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonTextWriterTest.cs"];
m4_2992 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="JsonTextWriterTest.cs"];
m4_1332 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="2795-2795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1334 [label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="2799-2799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1335 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="2800-2800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1336 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="2801-2801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1337 [label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="2802-2802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1338 [label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="2803-2803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1333 [label="string json = ''{}''", span="2797-2797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_1339 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="2795-2795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_203 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonTextWriterTest.cs"];
m4_665 [label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49", cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonTextWriterTest.cs"];
m4_3013 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", file="JsonTextWriterTest.cs"];
m4_3190 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7154-7154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonTextWriterTest.cs"];
m4_3193 [label="var serializer = new JsonSerializer()", span="7158-7158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonTextWriterTest.cs"];
m4_3196 [label="return stringWriter.ToString();", span="7165-7165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonTextWriterTest.cs"];
m4_3194 [label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7159-7162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonTextWriterTest.cs"];
m4_3192 [label="var stringWriter = new StringWriter()", span="7157-7157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonTextWriterTest.cs"];
m4_3195 [label="serializer.Serialize(stringWriter, obj)", span="7163-7163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonTextWriterTest.cs"];
m4_3197 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7154-7154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonTextWriterTest.cs"];
m4_2440 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="5434-5434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="JsonTextWriterTest.cs"];
m4_2880 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6521-6521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonTextWriterTest.cs"];
m4_2884 [label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="6547-6547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonTextWriterTest.cs"];
m4_2885 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="6549-6549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonTextWriterTest.cs"];
m4_2886 [label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="6550-6550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonTextWriterTest.cs"];
m4_2882 [label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="6533-6533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonTextWriterTest.cs"];
m4_2883 [label="StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="6535-6545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonTextWriterTest.cs"];
m4_2887 [label="byte[] bytes = (byte[])actual.Payload", span="6551-6551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonTextWriterTest.cs"];
m4_2881 [label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="6523-6531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonTextWriterTest.cs"];
m4_2888 [label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="6552-6552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonTextWriterTest.cs"];
m4_2889 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6521-6521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonTextWriterTest.cs"];
m4_141 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonTextWriterTest.cs"];
m4_144 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<int>>(json)", span="451-451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", color=green, community=0, file="JsonTextWriterTest.cs"];
m4_143 [label="var json = JsonConvert.SerializeObject(input)", span="450-450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonTextWriterTest.cs"];
m4_145 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="453-453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonTextWriterTest.cs"];
m4_146 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="454-454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonTextWriterTest.cs"];
m4_147 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="455-455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonTextWriterTest.cs"];
m4_142 [label="var input = new ResponseWithNewGenericProperty<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="443-448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonTextWriterTest.cs"];
m4_148 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonTextWriterTest.cs"];
m4_3225 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7281-7281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_3231 [label="Assert.AreEqual(1, o[''one''])", span="7290-7290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_3229 [label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7287-7287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_3230 [label="Assert.IsNotNull(o)", span="7289-7289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_3232 [label="settings.CheckAdditionalContent = true", span="7292-7292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_3226 [label="string json = ''{one:1}{}''", span="7283-7283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_3228 [label="JsonSerializer s = JsonSerializer.Create(settings)", span="7286-7286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_3227 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="7285-7285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_3233 [label="s = JsonSerializer.Create(settings)", span="7293-7293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_3234 [label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'')", span="7294-7294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_3235 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7281-7281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_2012 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4471-4471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2014 [label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="4474-4474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2017 [label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="4484-4484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2015 [label="StringAssert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="4475-4481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2018 [label="StringAssert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="4485-4499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2013 [label="AA myA = new AA(2)", span="4473-4473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2016 [label="BB myB = new BB(3, 4)", span="4483-4483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_2019 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4471-4471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonTextWriterTest.cs"];
m4_3494 [label="Entry Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", span="45-45", cluster="Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", file="JsonTextWriterTest.cs"];
m4_3599 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="8262-8262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3600 [label="throw new InvalidCastException();", span="8264-8264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3601 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="8262-8262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_727 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonTextWriterTest.cs"];
m4_512 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", span="1036-1036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", file="JsonTextWriterTest.cs"];
m4_2596 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonTextWriterTest.cs"];
m4_2430 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5422-5422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonTextWriterTest.cs"];
m4_2431 [label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n                serStr,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    MissingMemberHandling = MissingMemberHandling.Ignore\r\n                });", span="5424-5430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonTextWriterTest.cs"];
m4_2432 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5422-5422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonTextWriterTest.cs"];
m4_2951 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6660-6660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonTextWriterTest.cs"];
m4_2952 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<int>(''''); }, ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'')", span="6662-6662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonTextWriterTest.cs"];
m4_2953 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6660-6660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonTextWriterTest.cs"];
m4_426 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", file="JsonTextWriterTest.cs"];
m4_1225 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2511-2511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonTextWriterTest.cs"];
m4_1227 [label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="2550-2550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonTextWriterTest.cs"];
m4_1226 [label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="2513-2548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonTextWriterTest.cs"];
m4_1228 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2511-2511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonTextWriterTest.cs"];
m4_1715 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3673-3673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterTest.cs"];
m4_1716 [label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="3675-3675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterTest.cs"];
m4_1719 [label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="3679-3679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterTest.cs"];
m4_1720 [label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="3680-3680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterTest.cs"];
m4_1721 [label="Assert.AreEqual(2, d.Dictionary.Count)", span="3681-3681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterTest.cs"];
m4_1722 [label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="3682-3682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterTest.cs"];
m4_1723 [label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="3683-3683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterTest.cs"];
m4_1724 [label="Assert.AreEqual(1, d.List.Count)", span="3684-3684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterTest.cs"];
m4_1725 [label="Assert.AreEqual(''existing'', d.List[0])", span="3685-3685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterTest.cs"];
m4_1717 [label="Assert.IsNotNull(d)", span="3677-3677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterTest.cs"];
m4_1718 [label="Assert.IsNotNull(d.Dictionary)", span="3678-3678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterTest.cs"];
m4_1726 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3673-3673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonTextWriterTest.cs"];
m4_1959 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="JsonTextWriterTest.cs"];
m4_691 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonTextWriterTest.cs"];
m4_178 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="513-513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_181 [label="Assert.AreEqual(3, o.Count)", span="526-526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_182 [label="Assert.AreEqual(true, (bool)o[''A''])", span="527-527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_183 [label="Assert.AreEqual(false, (bool)o[''B''])", span="528-528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_184 [label="Assert.AreEqual(3, o[''C''].Count())", span="529-529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_185 [label="Assert.AreEqual(JTokenType.Comment, o[''C''][0].Type)", span="530-530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_186 [label="Assert.AreEqual(1, (int)o[''C''][1])", span="531-531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_187 [label="Assert.AreEqual(JTokenType.Comment, o[''C''][2].Type)", span="532-532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_191 [label="Assert.AreEqual(0, o.Count)", span="537-537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_195 [label="Assert.AreEqual(1, o.Count)", span="542-542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_196 [label="Assert.AreEqual(true, (bool)o[''A''])", span="543-543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_180 [label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="525-525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_188 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="533-533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_190 [label="o = (JObject)JsonConvert.DeserializeObject(json)", span="536-536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_192 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="538-538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_194 [label="o = (JObject)JsonConvert.DeserializeObject(json)", span="541-541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_197 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="544-544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_179 [label="string json = @''/* Test */\r\n            {\r\n                /*Test*/''''A'''':/* Test */true/* Test */,\r\n                /* Test */''''B'''':/* Test */false/* Test */,\r\n                /* Test */''''C'''':/* Test */[\r\n                    /* Test */\r\n                    1/* Test */\r\n                ]/* Test */\r\n            }\r\n            /* Test */''", span="515-524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_189 [label="json = @''{/* Test */}''", span="535-535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_193 [label="json = @''{''''A'''': true/* Test */}''", span="540-540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_198 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="513-513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_1546 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3277-3277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonTextWriterTest.cs"];
m4_1547 [label="string json = @''[]''", span="3279-3279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonTextWriterTest.cs"];
m4_1548 [label="ExceptionAssert.Throws<InvalidCastException>(\r\n                () => { JsonConvert.DeserializeObject<JObject>(json); },\r\n                new[]\r\n                {\r\n                    ''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n                    ''Cannot cast from source type to destination type.'' // mono\r\n                })", span="3281-3287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonTextWriterTest.cs"];
m4_1549 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3277-3277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonTextWriterTest.cs"];
m4_2441 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonTextWriterTest.cs"];
m4_3072 [label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65", cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="JsonTextWriterTest.cs"];
m4_667 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="1420-1420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_673 [label="string output = JsonConvert.SerializeObject(product)", span="1429-1429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_675 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="1443-1443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_676 [label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="1444-1444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_677 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="1445-1445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_678 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="1446-1446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_679 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="1447-1447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_680 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="1448-1448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_668 [label="Product product = new Product()", span="1422-1422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_672 [label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="1427-1427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_674 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="1441-1441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_669 [label="product.Name = ''Apple''", span="1424-1424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_670 [label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="1425-1425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_671 [label="product.Price = 3.99M", span="1426-1426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_681 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="1420-1420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_3572 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="8216-8216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3580 [label="return Value.ToString(CultureInfo.InvariantCulture);", span="8232-8232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3579 [label="conversionType == typeof(string)", span="8230-8230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3574 [label="return this;", span="8220-8220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3576 [label="return (int)Value;", span="8224-8224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3578 [label="return (long)Value;", span="8228-8228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3577 [label="conversionType == typeof(long)", span="8226-8226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3581 [label="throw new InvalidCastException();", span="8234-8234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3573 [label="conversionType == typeof(object)", span="8218-8218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3575 [label="conversionType == typeof(int)", span="8222-8222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3582 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="8216-8216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_2321 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5182-5182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2330 [label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="5201-5201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2332 [label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="5204-5204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2334 [label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="5207-5207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2338 [label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="5213-5213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2340 [label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="5216-5216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2328 [label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="5191-5191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2329 [label="StringAssert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="5192-5199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2331 [label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="5203-5203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2333 [label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="5206-5206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2335 [label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="5209-5209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2336 [label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="5210-5210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2322 [label="dynamic expando = new ExpandoObject()", span="5184-5184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2337 [label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="5212-5212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2339 [label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="5215-5215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2327 [label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="5189-5189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2323 [label="expando.Int = 1", span="5185-5185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2324 [label="expando.Decimal = 99.9d", span="5186-5186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2325 [label="expando.Complex = new ExpandoObject()", span="5187-5187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2326 [label="expando.Complex.String = ''I am a string''", span="5188-5188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_2341 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5182-5182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonTextWriterTest.cs"];
m4_413 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="872-872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_414 [label="_serializationInfo = info", span="874-874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_415 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="872-872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_3587 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="8242-8242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3588 [label="throw new InvalidCastException();", span="8244-8244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3589 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="8242-8242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_1121 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonTextWriterTest.cs"];
m4_1589 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3341-3341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonTextWriterTest.cs"];
m4_1591 [label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="3345-3345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonTextWriterTest.cs"];
m4_1592 [label="Assert.AreEqual('''', p.Name)", span="3346-3346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonTextWriterTest.cs"];
m4_1590 [label="string json = @''{''''Name'''':''''''''}''", span="3343-3343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonTextWriterTest.cs"];
m4_1593 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3341-3341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonTextWriterTest.cs"];
m4_3224 [label="Entry Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="JsonTextWriterTest.cs"];
m4_3635 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", span="8207-8207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", file="JsonTextWriterTest.cs"];
m4_2474 [label="Entry Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", span="8972-8972", cluster="Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", file="JsonTextWriterTest.cs"];
m4_3246 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7336-7336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonTextWriterTest.cs"];
m4_3247 [label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = ''[{},1]'';\r\n\r\n                JsonSerializer serializer = new JsonSerializer();\r\n                serializer.CheckAdditionalContent = true;\r\n\r\n                var reader = new JsonTextReader(new StringReader(json));\r\n                reader.Read();\r\n                reader.Read();\r\n\r\n                serializer.Deserialize(reader, typeof(MyType));\r\n            }, ''Additional text found in JSON string after finishing deserializing object.'')", span="7338-7350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonTextWriterTest.cs"];
m4_3248 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7336-7336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonTextWriterTest.cs"];
m4_2673 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JsonTextWriterTest.cs"];
m4_3185 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", file="JsonTextWriterTest.cs"];
m4_3698 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="8464-8464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3705 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8486-8486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3699 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8466-8466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3704 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="8484-8484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3702 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8475-8478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3700 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8467-8467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3701 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="8468-8473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3703 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="8480-8482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3706 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="8464-8464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_1637 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3446-3446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterTest.cs"];
m4_1642 [label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="3465-3465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterTest.cs"];
m4_1643 [label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="3466-3466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterTest.cs"];
m4_1644 [label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="3467-3467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterTest.cs"];
m4_1645 [label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="3468-3468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterTest.cs"];
m4_1646 [label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="3469-3469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterTest.cs"];
m4_1639 [label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="3456-3456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterTest.cs"];
m4_1641 [label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="3458-3463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterTest.cs"];
m4_1638 [label="StructTest structTest = new StructTest\r\n            {\r\n                StringProperty = ''StringProperty!'',\r\n                StringField = ''StringField'',\r\n                IntProperty = 5,\r\n                IntField = 10\r\n            }", span="3448-3454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterTest.cs"];
m4_1640 [label="Console.WriteLine(json)", span="3457-3457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterTest.cs"];
m4_1647 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3446-3446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonTextWriterTest.cs"];
m4_45 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", span="150-150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", file="JsonTextWriterTest.cs"];
m4_2858 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6481-6481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonTextWriterTest.cs"];
m4_2859 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            }, ''Error reading integer. Unexpected token: Boolean. Path 'PreProperty', line 2, position 22.'')", span="6483-6491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonTextWriterTest.cs"];
m4_2860 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6481-6481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonTextWriterTest.cs"];
m4_36 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="787-787", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonTextWriterTest.cs"];
m4_2429 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="5354-5354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonTextWriterTest.cs"];
m4_3557 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", span="83-83", cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", file="JsonTextWriterTest.cs"];
m4_438 [label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonTextWriterTest.cs"];
m4_1845 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonTextWriterTest.cs"];
m4_3223 [label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="JsonTextWriterTest.cs"];
m4_3840 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="JsonTextWriterTest.cs"];
m4_1925 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="JsonTextWriterTest.cs"];
m4_811 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="JsonTextWriterTest.cs"];
m4_3716 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="8516-8516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3723 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8538-8538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3717 [label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="8518-8518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3722 [label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="8536-8536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3720 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8527-8530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3718 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="8519-8519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3719 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="8520-8525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3721 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="8532-8534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_3724 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="8516-8516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonTextWriterTest.cs"];
m4_813 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="1752-1752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonTextWriterTest.cs"];
m4_814 [label="string json = @''[''''vvv\jvvv'''']''", span="1754-1754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonTextWriterTest.cs"];
m4_815 [label="ExceptionAssert.Throws<JsonReaderException>(() => { JsonConvert.DeserializeObject<List<string>>(json); }, @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'')", span="1756-1756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonTextWriterTest.cs"];
m4_816 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="1752-1752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonTextWriterTest.cs"];
m4_440 [label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="JsonTextWriterTest.cs"];
m4_2914 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", file="JsonTextWriterTest.cs"];
m4_1037 [label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonTextWriterTest.cs"];
m4_1301 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="2726-2726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1306 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="2734-2734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1304 [label="string json = JsonConvert.SerializeObject(i)", span="2731-2731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1307 [label="string newJson = JsonConvert.SerializeObject(ii)", span="2736-2736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1305 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="2732-2732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1308 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="2737-2737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1302 [label="SubKlass i = new SubKlass(''my subprop'')", span="2728-2728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1303 [label="i.SuperProp = ''overrided superprop''", span="2729-2729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_1309 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="2726-2726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_3166 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7104-7104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonTextWriterTest.cs"];
m4_3170 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7122-7122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonTextWriterTest.cs"];
m4_3171 [label="Assert.AreEqual(2, dic2.Count)", span="7124-7124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonTextWriterTest.cs"];
m4_3172 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7125-7125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonTextWriterTest.cs"];
m4_3173 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7126-7126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonTextWriterTest.cs"];
m4_3168 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7112-7115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonTextWriterTest.cs"];
m4_3169 [label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="7117-7120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonTextWriterTest.cs"];
m4_3167 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7106-7110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonTextWriterTest.cs"];
m4_3174 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7104-7104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonTextWriterTest.cs"];
m4_506 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_508 [label="var json = JsonConvert.SerializeObject(original)", span="1062-1062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_510 [label="Assert.AreEqual(expectedJson, json)", span="1064-1064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_507 [label="var original = new FooBar1 { foo = new Bar1 { bar = ''value'' } }", span="1061-1061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_509 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1063-1063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_511 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_838 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonTextWriterTest.cs"];
m4_2675 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6119-6119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonTextWriterTest.cs"];
m4_2679 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6132-6132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonTextWriterTest.cs"];
m4_2680 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6133-6133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonTextWriterTest.cs"];
m4_2681 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6134-6134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonTextWriterTest.cs"];
m4_2682 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6135-6135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonTextWriterTest.cs"];
m4_2683 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6136-6136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonTextWriterTest.cs"];
m4_2684 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6137-6137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonTextWriterTest.cs"];
m4_2677 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6122-6122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonTextWriterTest.cs"];
m4_2678 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="6124-6130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonTextWriterTest.cs"];
m4_2676 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="6121-6121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonTextWriterTest.cs"];
m4_2685 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6119-6119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonTextWriterTest.cs"];
m4_3528 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8106-8106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3531 [label="Assert.AreEqual(2, people.Count)", span="8132-8132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3534 [label="Assert.AreEqual(john, jane.Spouse)", span="8137-8137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3535 [label="Assert.AreEqual(jane, john.Spouse)", span="8138-8138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3530 [label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8125-8130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3532 [label="PersonReference john = people[0]", span="8134-8134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3533 [label="PersonReference jane = people[1]", span="8135-8135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3529 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8108-8123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3536 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8106-8106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_1525 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3242-3242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonTextWriterTest.cs"];
m4_1526 [label="string json = @''[]''", span="3244-3244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonTextWriterTest.cs"];
m4_1527 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Exception>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3246-3248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonTextWriterTest.cs"];
m4_1528 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3242-3242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonTextWriterTest.cs"];
m4_740 [label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonTextWriterTest.cs"];
m4_3322 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7514-7514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonTextWriterTest.cs"];
m4_3324 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="7521-7521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonTextWriterTest.cs"];
m4_3325 [label="Assert.AreEqual(1, l[0])", span="7523-7523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonTextWriterTest.cs"];
m4_3326 [label="Assert.AreEqual(null, l[1])", span="7524-7524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonTextWriterTest.cs"];
m4_3323 [label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="7516-7519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonTextWriterTest.cs"];
m4_3327 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7514-7514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonTextWriterTest.cs"];
m4_3811 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8770-8770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3812 [label="var messageJObject = serializer.Deserialize<JObject>(reader)", span="8772-8772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3813 [label="messageJObject == null", span="8773-8773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3815 [label="var address = messageJObject.GetValue(''Address'', StringComparison.OrdinalIgnoreCase).ToObject<string>()", span="8778-8778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3818 [label="messageJObject.TryGetValue(''DisplayName'', StringComparison.OrdinalIgnoreCase, out displayNameToken)\r\n                    && !string.IsNullOrEmpty(displayName = displayNameToken.ToObject<string>())", span="8782-8783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3814 [label="return null;", span="8775-8775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3816 [label="JToken displayNameToken", span="8780-8780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3819 [label="return new System.Net.Mail.MailAddress(address, displayName);", span="8785-8785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3820 [label="return new System.Net.Mail.MailAddress(address);", span="8788-8788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3817 [label="string displayName", span="8781-8781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3821 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8770-8770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_1567 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3307-3307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonTextWriterTest.cs"];
m4_1569 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3313-3313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonTextWriterTest.cs"];
m4_1568 [label="string json = @''{}''", span="3309-3309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonTextWriterTest.cs"];
m4_1570 [label="Assert.Fail()", span="3314-3314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonTextWriterTest.cs"];
m4_1571 [label=JsonSerializationException, span="3316-3316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonTextWriterTest.cs"];
m4_1572 [label="Assert.IsTrue(ex.Message.StartsWith(@''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.'' + Environment.NewLine +\r\n                                                    @''To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine +\r\n                                                    @''Path ''''))", span="3318-3320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonTextWriterTest.cs"];
m4_1573 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3307-3307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonTextWriterTest.cs"];
m4_277 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="655-655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_281 [label="Assert.AreEqual(customBinder, settings.Binder)", span="661-661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_283 [label="Assert.AreEqual(true, settings.CheckAdditionalContent)", span="664-664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_285 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, settings.ConstructorHandling)", span="667-667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_287 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), settings.Context)", span="671-671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_290 [label="Assert.AreEqual(resolver, settings.ContractResolver)", span="676-676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_292 [label="Assert.AreEqual(1, settings.Converters.Count)", span="679-679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_294 [label="Assert.AreEqual(''en-NZ'', settings.Culture.ToString())", span="682-682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_296 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, settings.DateFormatHandling)", span="685-685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_298 [label="Assert.AreEqual(''yyyy'', settings.DateFormatString)", span="688-688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_300 [label="Assert.AreEqual(DateParseHandling.None, settings.DateParseHandling)", span="691-691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_302 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, settings.DateTimeZoneHandling)", span="694-694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_304 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, settings.DefaultValueHandling)", span="697-697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_306 [label="Assert.AreEqual(FloatFormatHandling.Symbol, settings.FloatFormatHandling)", span="700-700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_308 [label="Assert.AreEqual(FloatParseHandling.Decimal, settings.FloatParseHandling)", span="703-703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_310 [label="Assert.AreEqual(Formatting.Indented, settings.Formatting)", span="706-706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_312 [label="Assert.AreEqual(9001, settings.MaxDepth)", span="709-709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_314 [label="Assert.AreEqual(MissingMemberHandling.Error, settings.MissingMemberHandling)", span="712-712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_316 [label="Assert.AreEqual(NullValueHandling.Ignore, settings.NullValueHandling)", span="715-715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_318 [label="Assert.AreEqual(ObjectCreationHandling.Replace, settings.ObjectCreationHandling)", span="718-718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_320 [label="Assert.AreEqual(PreserveReferencesHandling.All, settings.PreserveReferencesHandling)", span="721-721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_322 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, settings.ReferenceLoopHandling)", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_325 [label="Assert.AreEqual(referenceResolver, settings.ReferenceResolver)", span="728-728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_327 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, settings.StringEscapeHandling)", span="731-731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_330 [label="Assert.AreEqual(traceWriter, settings.TraceWriter)", span="735-735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_332 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, settings.TypeNameAssemblyFormat)", span="739-739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_334 [label="Assert.AreEqual(TypeNameHandling.All, settings.TypeNameHandling)", span="743-743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_278 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="657-657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_279 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="659-659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_280 [label="settings.Binder = customBinder", span="660-660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_282 [label="settings.CheckAdditionalContent = true", span="663-663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_284 [label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="666-666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_286 [label="settings.Context = new StreamingContext(StreamingContextStates.Other)", span="670-670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_288 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="674-674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_289 [label="settings.ContractResolver = resolver", span="675-675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_291 [label="settings.Converters.Add(new StringEnumConverter())", span="678-678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_293 [label="settings.Culture = new CultureInfo(''en-nz'')", span="681-681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_295 [label="settings.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="684-684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_297 [label="settings.DateFormatString = ''yyyy''", span="687-687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_299 [label="settings.DateParseHandling = DateParseHandling.None", span="690-690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_301 [label="settings.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="693-693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_303 [label="settings.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="696-696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_305 [label="settings.FloatFormatHandling = FloatFormatHandling.Symbol", span="699-699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_307 [label="settings.FloatParseHandling = FloatParseHandling.Decimal", span="702-702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_309 [label="settings.Formatting = Formatting.Indented", span="705-705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_311 [label="settings.MaxDepth = 9001", span="708-708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_313 [label="settings.MissingMemberHandling = MissingMemberHandling.Error", span="711-711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_315 [label="settings.NullValueHandling = NullValueHandling.Ignore", span="714-714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_317 [label="settings.ObjectCreationHandling = ObjectCreationHandling.Replace", span="717-717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_319 [label="settings.PreserveReferencesHandling = PreserveReferencesHandling.All", span="720-720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_321 [label="settings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="723-723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_323 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="726-726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_324 [label="settings.ReferenceResolver = referenceResolver", span="727-727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_326 [label="settings.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="730-730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_328 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="733-733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_329 [label="settings.TraceWriter = traceWriter", span="734-734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_331 [label="settings.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="738-738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_333 [label="settings.TypeNameHandling = TypeNameHandling.All", span="742-742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_335 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="655-655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonTextWriterTest.cs"];
m4_555 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonTextWriterTest.cs"];
m4_568 [label="_name = name", span="1131-1131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonTextWriterTest.cs"];
m4_569 [label="_number = number", span="1132-1132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonTextWriterTest.cs"];
m4_570 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonTextWriterTest.cs"];
m4_2398 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5334-5334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterTest.cs"];
m4_2403 [label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="5348-5348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterTest.cs"];
m4_2404 [label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="5349-5349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterTest.cs"];
m4_2402 [label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="5346-5346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterTest.cs"];
m4_2400 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            }", span="5338-5342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterTest.cs"];
m4_2401 [label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="5344-5344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterTest.cs"];
m4_2399 [label="var derived = new Derived(''meh'', ''woo'')", span="5336-5336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterTest.cs"];
m4_2405 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5334-5334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonTextWriterTest.cs"];
m4_1553 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3291-3291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonTextWriterTest.cs"];
m4_1554 [label="string json = @''new Constructor(123)''", span="3293-3293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonTextWriterTest.cs"];
m4_1555 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 16.'')", span="3295-3295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonTextWriterTest.cs"];
m4_1556 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3291-3291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonTextWriterTest.cs"];
m4_1926 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="JsonTextWriterTest.cs"];
m4_150 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="459-459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonTextWriterTest.cs"];
m4_153 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyVirtual<int>>(json)", span="469-469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonTextWriterTest.cs"];
m4_152 [label="var json = JsonConvert.SerializeObject(input)", span="468-468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonTextWriterTest.cs"];
m4_154 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="471-471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonTextWriterTest.cs"];
m4_155 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="472-472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonTextWriterTest.cs"];
m4_156 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="473-473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonTextWriterTest.cs"];
m4_151 [label="var input = new ResponseWithNewGenericPropertyVirtual<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="461-466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonTextWriterTest.cs"];
m4_157 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="459-459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonTextWriterTest.cs"];
m4_1093 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonTextWriterTest.cs"];
m4_3839 [label="Entry System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", span="0-0", cluster="System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", file="JsonTextWriterTest.cs"];
m4_559 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JsonTextWriterTest.cs"];
m4_3500 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8022-8022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonTextWriterTest.cs"];
m4_3502 [label="throw new ArgumentNullException(''bar'');", span="8025-8025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonTextWriterTest.cs"];
m4_3501 [label="bar == null", span="8024-8024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonTextWriterTest.cs"];
m4_3503 [label="Bar = bar", span="8027-8027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonTextWriterTest.cs"];
m4_3504 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8022-8022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonTextWriterTest.cs"];
m4_3593 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="8252-8252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3594 [label="throw new InvalidCastException();", span="8254-8254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3595 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="8252-8252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3296 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7435-7435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonTextWriterTest.cs"];
m4_3297 [label="m_Item1 = item1", span="7437-7437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonTextWriterTest.cs"];
m4_3298 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7435-7435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonTextWriterTest.cs"];
m4_2625 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="5891-5891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="JsonTextWriterTest.cs"];
m4_2580 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5846-5846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonTextWriterTest.cs"];
m4_2582 [label="Categories = new Dictionary<string, int>()", span="5849-5849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonTextWriterTest.cs"];
m4_2581 [label="Title = title", span="5848-5848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonTextWriterTest.cs"];
m4_2583 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="5846-5846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonTextWriterTest.cs"];
m4_3367 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="7636-7636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="JsonTextWriterTest.cs"];
m4_2365 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5256-5256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonTextWriterTest.cs"];
m4_2371 [label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="5265-5265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonTextWriterTest.cs"];
m4_2370 [label="IDictionary<string, decimal> d = serializer.Deserialize<IDictionary<string, decimal>>(reader)", span="5264-5264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonTextWriterTest.cs"];
m4_2367 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5259-5259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonTextWriterTest.cs"];
m4_2369 [label="JsonSerializer serializer = new JsonSerializer()", span="5262-5262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonTextWriterTest.cs"];
m4_2366 [label="string json = ''{'Value':123456789876543.21}''", span="5258-5258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonTextWriterTest.cs"];
m4_2368 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5260-5260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonTextWriterTest.cs"];
m4_2372 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5256-5256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonTextWriterTest.cs"];
m4_2631 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="5978-5978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonTextWriterTest.cs"];
m4_2632 [label="_readonlyString = ''default!''", span="5980-5980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonTextWriterTest.cs"];
m4_2633 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="5978-5978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonTextWriterTest.cs"];
m4_563 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonTextWriterTest.cs"];
m4_1919 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="JsonTextWriterTest.cs"];
m4_788 [label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonTextWriterTest.cs"];
m4_984 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2071-2071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonTextWriterTest.cs"];
m4_988 [label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="2080-2080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonTextWriterTest.cs"];
m4_989 [label="Assert.AreEqual(ts, c.TimeSpanField)", span="2081-2081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonTextWriterTest.cs"];
m4_986 [label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="2075-2075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonTextWriterTest.cs"];
m4_987 [label="StringAssert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="2076-2078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonTextWriterTest.cs"];
m4_985 [label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="2073-2073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonTextWriterTest.cs"];
m4_990 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2071-2071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonTextWriterTest.cs"];
m4_478 [label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="JsonTextWriterTest.cs"];
m4_3328 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7529-7529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_3330 [label="var json = JsonConvert.SerializeObject(tuple)", span="7532-7532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_3331 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7533-7533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_3335 [label="Assert.AreEqual(500, obj.Item1)", span="7541-7541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_3329 [label="var tuple = new MyTuple<int>(500)", span="7531-7531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_3333 [label="Action doStuff = () => { obj = JsonConvert.DeserializeObject<MyTuple<int>>(json); }", span="7537-7537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_3332 [label="MyTuple<int> obj = null", span="7535-7535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_3334 [label="doStuff()", span="7540-7540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_3336 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7529-7529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_1896 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4207-4207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1897 [label="_stringValue = info.GetString(''stringValue'')", span="4209-4209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1898 [label="_intValue = info.GetInt32(''intValue'')", span="4210-4210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1899 [label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="4211-4211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1900 [label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="4212-4212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1901 [label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="4213-4213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1902 [label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="4214-4214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1903 [label="_booleanValue = info.GetBoolean(''booleanValue'')", span="4216-4216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1904 [label="_byteValue = info.GetByte(''byteValue'')", span="4217-4217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1905 [label="_charValue = info.GetChar(''charValue'')", span="4218-4218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1906 [label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="4219-4219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1907 [label="_decimalValue = info.GetDecimal(''decimalValue'')", span="4220-4220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1908 [label="_shortValue = info.GetInt16(''shortValue'')", span="4221-4221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1909 [label="_longValue = info.GetInt64(''longValue'')", span="4222-4222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1910 [label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="4223-4223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1911 [label="_floatValue = info.GetSingle(''floatValue'')", span="4224-4224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1912 [label="_ushortValue = info.GetUInt16(''ushortValue'')", span="4225-4225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1913 [label="_uintValue = info.GetUInt32(''uintValue'')", span="4226-4226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1914 [label="_ulongValue = info.GetUInt64(''ulongValue'')", span="4227-4227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1915 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4207-4207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_397 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="840-840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonTextWriterTest.cs"];
m4_401 [label="Ratio ratio2 = JsonConvert.DeserializeObject<Ratio>(json)", span="847-847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonTextWriterTest.cs"];
m4_399 [label="string json = JsonConvert.SerializeObject(ratio)", span="843-843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonTextWriterTest.cs"];
m4_402 [label="Assert.AreEqual(ratio.Denominator, ratio2.Denominator)", span="849-849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonTextWriterTest.cs"];
m4_400 [label="Assert.AreEqual(@''{''''n'''':2,''''d'''':1}'', json)", span="845-845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonTextWriterTest.cs"];
m4_403 [label="Assert.AreEqual(ratio.Numerator, ratio2.Numerator)", span="850-850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonTextWriterTest.cs"];
m4_398 [label="Ratio ratio = new Ratio(2, 1)", span="842-842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonTextWriterTest.cs"];
m4_404 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="840-840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonTextWriterTest.cs"];
m4_2891 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6556-6556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonTextWriterTest.cs"];
m4_2894 [label="Assert.AreEqual('''', dict[''k1''])", span="6561-6561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonTextWriterTest.cs"];
m4_2895 [label="Assert.AreEqual(''v2'', dict[''k2''])", span="6562-6562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonTextWriterTest.cs"];
m4_2893 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6559-6559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonTextWriterTest.cs"];
m4_2892 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6558-6558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonTextWriterTest.cs"];
m4_2896 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6556-6556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonTextWriterTest.cs"];
m4_3175 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7130-7130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonTextWriterTest.cs"];
m4_3177 [label="Assert.AreEqual('''', s)", span="7133-7133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonTextWriterTest.cs"];
m4_3176 [label="string s = (string)new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="7132-7132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonTextWriterTest.cs"];
m4_3178 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7130-7130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonTextWriterTest.cs"];
m4_3286 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7404-7404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonTextWriterTest.cs"];
m4_3287 [label="KeyValuePair<int, string> result =\r\n                JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n                    ''{key: 123, \''VALUE\'': \''test value\''}''\r\n                    )", span="7406-7409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonTextWriterTest.cs"];
m4_3288 [label="Assert.AreEqual(123, result.Key)", span="7411-7411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonTextWriterTest.cs"];
m4_3289 [label="Assert.AreEqual(''test value'', result.Value)", span="7412-7412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonTextWriterTest.cs"];
m4_3290 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7404-7404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonTextWriterTest.cs"];
m4_953 [label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonTextWriterTest.cs"];
m4_1823 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4044-4044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonTextWriterTest.cs"];
m4_1824 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4044-4044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonTextWriterTest.cs"];
m4_2698 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="JsonTextWriterTest.cs"];
m4_684 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1470-1470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonTextWriterTest.cs"];
m4_687 [label="Assert.AreEqual(''Orange'', p.Name)", span="1476-1476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonTextWriterTest.cs"];
m4_688 [label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="1477-1477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonTextWriterTest.cs"];
m4_689 [label="Assert.AreEqual(3.99m, p.Price)", span="1478-1478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonTextWriterTest.cs"];
m4_686 [label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="1474-1474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonTextWriterTest.cs"];
m4_685 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1472-1472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonTextWriterTest.cs"];
m4_690 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1470-1470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonTextWriterTest.cs"];
m4_1240 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="2563-2563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonTextWriterTest.cs"];
m4_1241 [label="Person person = new Person\r\n            {\r\n                Name = ''Mike Manager'',\r\n                BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="2565-2571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonTextWriterTest.cs"];
m4_1242 [label="return person;", span="2572-2572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonTextWriterTest.cs"];
m4_1243 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="2563-2563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonTextWriterTest.cs"];
m4_493 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonTextWriterTest.cs"];
m4_746 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonTextWriterTest.cs"];
m4_3526 [label="Entry Size.cstr", span="", cluster="Size.cstr", file="JsonTextWriterTest.cs"];
m4_1294 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="2710-2710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_1296 [label="JsonConvert.DeserializeObject<ConstructorAndRequiredTestClass>(json)", span="2715-2715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_1295 [label="string json = ''{ 'testProperty1': 'value' }''", span="2714-2714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_1297 [label="Assert.Fail()", span="2717-2717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_1298 [label=JsonSerializationException, span="2719-2719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_1299 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'TestProperty2' not found in JSON. Path ''''))", span="2721-2721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_1300 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="2710-2710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_2746 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="860-860", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonTextWriterTest.cs"];
m4_167 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", span="418-418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", file="JsonTextWriterTest.cs"];
m4_1197 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2461-2461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonTextWriterTest.cs"];
m4_1199 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2469-2469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonTextWriterTest.cs"];
m4_1198 [label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="2465-2467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonTextWriterTest.cs"];
m4_1200 [label="Assert.Fail()", span="2470-2470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonTextWriterTest.cs"];
m4_1201 [label=JsonSerializationException, span="2472-2472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonTextWriterTest.cs"];
m4_1202 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'LastName' not found in JSON. Path ''''))", span="2474-2474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonTextWriterTest.cs"];
m4_1203 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2461-2461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonTextWriterTest.cs"];
m4_20 [label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1'')", span="113-113", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1189 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2443-2443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterTest.cs"];
m4_1190 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                };\r\n\r\n                string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n                Console.WriteLine(json);\r\n            }, ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'')", span="2445-2457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterTest.cs"];
m4_1191 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2443-2443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonTextWriterTest.cs"];
m4_3822 [label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="433-433", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JsonTextWriterTest.cs"];
m4_490 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonTextWriterTest.cs"];
m4_2409 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5370-5370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_2410 [label="info.AddValue(''Name'', _name)", span="5372-5372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_2411 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5370-5370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_3623 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="8302-8302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3624 [label="throw new InvalidCastException();", span="8304-8304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3625 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="8302-8302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_1627 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonTextWriterTest.cs"];
m4_2114 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="4744-4744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="JsonTextWriterTest.cs"];
m4_66 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonTextWriterTest.cs"];
m4_3337 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="JsonTextWriterTest.cs"];
m4_3583 [label="Entry System.InvalidCastException.InvalidCastException()", span="0-0", cluster="System.InvalidCastException.InvalidCastException()", file="JsonTextWriterTest.cs"];
m4_3005 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6762-6762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonTextWriterTest.cs"];
m4_3010 [label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="6769-6769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonTextWriterTest.cs"];
m4_3009 [label="var serializedPerson = JsonConvert.SerializeObject(person)", span="6768-6768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonTextWriterTest.cs"];
m4_3011 [label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="6771-6771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonTextWriterTest.cs"];
m4_3006 [label="var person = PersonWithPrivateConstructor.CreatePerson()", span="6764-6764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonTextWriterTest.cs"];
m4_3008 [label="person.Age = 25", span="6766-6766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonTextWriterTest.cs"];
m4_3007 [label="person.Name = ''John Doe''", span="6765-6765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonTextWriterTest.cs"];
m4_3012 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="6762-6762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonTextWriterTest.cs"];
m4_1414 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3012-3012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterTest.cs"];
m4_1417 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="3027-3027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterTest.cs"];
m4_1418 [label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="3028-3028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterTest.cs"];
m4_1419 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="3029-3029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterTest.cs"];
m4_1420 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="3030-3030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterTest.cs"];
m4_1421 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="3031-3031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterTest.cs"];
m4_1422 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="3032-3032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterTest.cs"];
m4_1416 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="3025-3025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterTest.cs"];
m4_1415 [label="string json = @''/*comment1*/ { /*comment2*/\r\n        ''''Name'''': /*comment3*/ ''''Apple'''' /*comment4*/, /*comment5*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment6*/ [ /*comment7*/\r\n          ''''Small'''', /*comment8*/\r\n          ''''Medium'''' /*comment9*/,\r\n          /*comment10*/ ''''Large''''\r\n        /*comment11*/ ] /*comment12*/\r\n      } /*comment13*/''", span="3014-3023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterTest.cs"];
m4_1423 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3012-3012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonTextWriterTest.cs"];
m4_657 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1405-1405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_659 [label="string jsonText = JsonConvert.SerializeObject(store)", span="1409-1409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_661 [label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="1413-1413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_662 [label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="1414-1414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_658 [label="Store store = new Store()", span="1407-1407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_660 [label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="1411-1411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_663 [label="Console.WriteLine(jsonText)", span="1416-1416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_664 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1405-1405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonTextWriterTest.cs"];
m4_2093 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonTextWriterTest.cs"];
m4_3203 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7183-7183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonTextWriterTest.cs"];
m4_3205 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="7197-7197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonTextWriterTest.cs"];
m4_3206 [label="StringAssert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="7208-7222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonTextWriterTest.cs"];
m4_3204 [label="Event1 e = new Event1\r\n            {\r\n                EventName = ''Blackadder III'',\r\n                Venue = ''Gryphon Theatre'',\r\n                Performances = new List<DateTime>\r\n                {\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n                }\r\n            }", span="7185-7195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonTextWriterTest.cs"];
m4_3207 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7183-7183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonTextWriterTest.cs"];
m4_2459 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5483-5483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonTextWriterTest.cs"];
m4_2460 [label="MultipleParamatrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="5485-5485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonTextWriterTest.cs"];
m4_2461 [label="Assert.AreEqual(''Public Paramatized 2'', c.Constructor)", span="5486-5486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonTextWriterTest.cs"];
m4_2462 [label="Assert.AreEqual(''value!'', c.Value)", span="5487-5487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonTextWriterTest.cs"];
m4_2463 [label="Assert.AreEqual(1, c.Age)", span="5488-5488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonTextWriterTest.cs"];
m4_2464 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5483-5483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonTextWriterTest.cs"];
m4_917 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="1939-1939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_924 [label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="1948-1948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_923 [label="string json = JsonConvert.SerializeObject(wibble)", span="1946-1946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_925 [label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="1949-1949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_926 [label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="1951-1951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_927 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="1952-1952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_928 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="1953-1953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_929 [label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="1954-1954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_930 [label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="1955-1955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_931 [label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="1956-1956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_918 [label="ClassWithArray wibble = new ClassWithArray()", span="1941-1941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_922 [label="wibble.Bar.Add(3)", span="1945-1945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_919 [label="wibble.Foo = ''hello''", span="1942-1942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_920 [label="wibble.Bar.Add(1)", span="1943-1943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_921 [label="wibble.Bar.Add(2)", span="1944-1944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_932 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="1939-1939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonTextWriterTest.cs"];
m4_1980 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4387-4387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1992 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4434-4434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1995 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4437-4437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1993 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="4435-4435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1994 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4436-4436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1996 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4438-4438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1997 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="4439-4439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1998 [label="Assert.AreEqual(null, o2._nullableInt)", span="4440-4440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1991 [label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4409-4432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1990 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="4405-4408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1986 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4395-4395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1988 [label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="4398-4398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1989 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4403-4403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1982 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4390-4390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1985 [label="person.Name = ''Name!''", span="4393-4393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1987 [label="string dateTimeOffsetText", span="4396-4396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1981 [label="Person person = new Person()", span="4389-4389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1983 [label="person.LastModified = person.BirthDate", span="4391-4391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1984 [label="person.Department = ''Department!''", span="4392-4392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_1999 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4387-4387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonTextWriterTest.cs"];
m4_3362 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7647-7647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonTextWriterTest.cs"];
m4_3365 [label="StringAssert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="7663-7670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonTextWriterTest.cs"];
m4_3364 [label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n            })", span="7658-7661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonTextWriterTest.cs"];
m4_3363 [label="NullableFloats floats = new NullableFloats\r\n            {\r\n                Object = double.NaN,\r\n                ObjectNull = null,\r\n                Float = float.NaN,\r\n                NullableDouble = double.NaN,\r\n                NullableFloat = null\r\n            }", span="7649-7656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonTextWriterTest.cs"];
m4_3366 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7647-7647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonTextWriterTest.cs"];
m4_2872 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6507-6507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonTextWriterTest.cs"];
m4_2874 [label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6510-6510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonTextWriterTest.cs"];
m4_2877 [label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6515-6515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonTextWriterTest.cs"];
m4_2875 [label="Assert.AreEqual(null, c.Id)", span="6512-6512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonTextWriterTest.cs"];
m4_2878 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="6517-6517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonTextWriterTest.cs"];
m4_2873 [label="string json = @''{''''Id'''':null}''", span="6509-6509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonTextWriterTest.cs"];
m4_2876 [label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="6514-6514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonTextWriterTest.cs"];
m4_2879 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6507-6507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonTextWriterTest.cs"];
m4_1065 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2210-2210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1071 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2220-2220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1072 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2221-2221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1069 [label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2216-2216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1066 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2212-2212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1070 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="2218-2218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1068 [label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="2215-2215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1067 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2213-2213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1073 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2210-2210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1310 [label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonTextWriterTest.cs"];
m4_2710 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriterTest.cs"];
m4_1454 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3116-3116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterTest.cs"];
m4_1456 [label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="3132-3132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterTest.cs"];
m4_1457 [label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="3134-3134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterTest.cs"];
m4_1458 [label="Assert.AreEqual(2, content.Children.Count)", span="3135-3135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterTest.cs"];
m4_1459 [label="Assert.AreEqual(''First'', content.Children[0].Text)", span="3136-3136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterTest.cs"];
m4_1460 [label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="3137-3137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterTest.cs"];
m4_1455 [label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="3118-3130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterTest.cs"];
m4_1461 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3116-3116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonTextWriterTest.cs"];
m4_650 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JsonTextWriterTest.cs"];
m4_644 [label="Entry DataContractJsonSerializer.cstr", span="", cluster="DataContractJsonSerializer.cstr", file="JsonTextWriterTest.cs"];
m4_1730 [label="Entry lambda expression", span="3722-3722", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_10 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="50-50", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="JsonTextWriterTest.cs"];
m4_14 [label="DateTimeKind.Unspecified", span="56-56", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="JsonTextWriterTest.cs"];
m4_17 [label="return XmlDateTimeSerializationMode.Utc;", span="59-59", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="JsonTextWriterTest.cs"];
m4_23 [label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,'')", span="117-117", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_26 [label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1'')", span="121-121", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_818 [label="JsonConvert.DeserializeObject<List<string>>(json)", span="1756-1756", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1489 [label="JsonConvert.DeserializeObject<TestObjects.Event>(json)", span="3186-3186", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1516 [label="JsonConvert.DeserializeObject<Person>(json)", span="3225-3225", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1523 [label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3235-3235", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1530 [label="JsonConvert.DeserializeObject<Exception>(json)", span="3246-3246", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1537 [label="JsonConvert.DeserializeObject<double>(json)", span="3257-3257", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1544 [label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="3269-3269", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1551 [label="JsonConvert.DeserializeObject<JObject>(json)", span="3282-3282", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1558 [label="JsonConvert.DeserializeObject<Person>(json)", span="3295-3295", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1565 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3303-3303", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2159 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4818-4818", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2173 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4838-4838", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2275 [label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5060-5060", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2828 [label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="6415-6415", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2842 [label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="6454-6454", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2863 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6490-6490", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2870 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6502-6502", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2943 [label="JsonConvert.DeserializeObject<double>('''')", span="6650-6650", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2949 [label="JsonConvert.DeserializeObject<StringComparison>('''')", span="6656-6656", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2955 [label="JsonConvert.DeserializeObject<int>('''')", span="6662-6662", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2965 [label="JsonConvert.DeserializeObject<double>(null)", span="6676-6676", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3339 [label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="7537-7537", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3414 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]'')", span="7797-7797", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3422 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}'')", span="7812-7812", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3431 [label="JsonConvert.DeserializeObject<IList<long>>(json)", span="7826-7826", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3641 [label="JsonConvert.DeserializeObject<JObject>(content)", span="8337-8337", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3783 [label="JsonConvert.DeserializeObject<string>(''020474068'')", span="8669-8669", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_786 [label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="1711-1711", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1099 [label="JsonConvert.SerializeObject(c)", span="2266-2266", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1194 [label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="2455-2455", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3776 [label="JsonConvert.SerializeObject(new ErroringTestClass())", span="8663-8663", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_11 [label=kind, span="52-52", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="JsonTextWriterTest.cs"];
m4_13 [label="return XmlDateTimeSerializationMode.Local;", span="55-55", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="JsonTextWriterTest.cs"];
m4_15 [label="return XmlDateTimeSerializationMode.Unspecified;", span="57-57", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="JsonTextWriterTest.cs"];
m4_16 [label="DateTimeKind.Utc", span="58-58", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="JsonTextWriterTest.cs"];
m4_18 [label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''kind'', kind, ''Unexpected DateTimeKind value.'');", span="61-61", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="JsonTextWriterTest.cs"];
m4_19 [label="Exit Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="50-50", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="JsonTextWriterTest.cs"];
m4_21 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_22 [label="Entry lambda expression", span="117-117", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_24 [label="Exit lambda expression", span="117-117", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_25 [label="Entry lambda expression", span="121-121", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_27 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_817 [label="Entry lambda expression", span="1756-1756", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_819 [label="Exit lambda expression", span="1756-1756", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1488 [label="Entry lambda expression", span="3186-3186", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1490 [label="Exit lambda expression", span="3186-3186", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1515 [label="Entry lambda expression", span="3225-3225", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1517 [label="Exit lambda expression", span="3225-3225", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1522 [label="Entry lambda expression", span="3235-3235", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1524 [label="Exit lambda expression", span="3235-3235", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1529 [label="Entry lambda expression", span="3246-3246", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1531 [label="Exit lambda expression", span="3246-3246", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1536 [label="Entry lambda expression", span="3257-3257", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1538 [label="Exit lambda expression", span="3257-3257", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1543 [label="Entry lambda expression", span="3269-3269", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1545 [label="Exit lambda expression", span="3269-3269", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1550 [label="Entry lambda expression", span="3282-3282", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1552 [label="Exit lambda expression", span="3282-3282", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1557 [label="Entry lambda expression", span="3295-3295", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1559 [label="Exit lambda expression", span="3295-3295", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1564 [label="Entry lambda expression", span="3303-3303", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1566 [label="Exit lambda expression", span="3303-3303", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2158 [label="Entry lambda expression", span="4818-4818", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2160 [label="Exit lambda expression", span="4818-4818", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2172 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="4837-4837", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2174 [label="Exit lambda expression", span="4824-4839", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2274 [label="Entry lambda expression", span="5060-5060", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2276 [label="Exit lambda expression", span="5060-5060", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2827 [label="Entry lambda expression", span="6415-6415", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2829 [label="Exit lambda expression", span="6415-6415", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2841 [label="Entry lambda expression", span="6454-6454", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2843 [label="Exit lambda expression", span="6454-6454", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2862 [label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="6485-6488", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2864 [label="Exit lambda expression", span="6483-6491", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2869 [label="string json = @''{\r\n  ''''PreProperty'''': ''", span="6499-6500", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2871 [label="Exit lambda expression", span="6497-6503", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2942 [label="Entry lambda expression", span="6650-6650", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2944 [label="Exit lambda expression", span="6650-6650", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2948 [label="Entry lambda expression", span="6656-6656", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2950 [label="Exit lambda expression", span="6656-6656", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2954 [label="Entry lambda expression", span="6662-6662", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2956 [label="Exit lambda expression", span="6662-6662", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2964 [label="Entry lambda expression", span="6676-6676", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2966 [label="Exit lambda expression", span="6676-6676", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3338 [label="Entry lambda expression", span="7537-7537", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3340 [label="Exit lambda expression", span="7537-7537", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3413 [label="Entry lambda expression", span="7797-7797", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3415 [label="Exit lambda expression", span="7797-7797", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3421 [label="Entry lambda expression", span="7812-7812", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3423 [label="Exit lambda expression", span="7812-7812", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3430 [label="Entry lambda expression", span="7826-7826", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3432 [label="Exit lambda expression", span="7826-7826", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3640 [label="string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}''", span="8336-8336", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3642 [label="Exit lambda expression", span="8334-8338", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3782 [label="Entry lambda expression", span="8669-8669", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3784 [label="Exit lambda expression", span="8669-8669", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_785 [label="Entry lambda expression", span="1711-1711", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_787 [label="Exit lambda expression", span="1711-1711", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1098 [label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="2265-2265", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1100 [label="Exit lambda expression", span="2263-2267", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1193 [label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                }", span="2447-2453", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1195 [label="Console.WriteLine(json)", span="2456-2456", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1238 [label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="2560-2560", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3775 [label="Entry lambda expression", span="8663-8663", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3777 [label="Exit lambda expression", span="8663-8663", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2171 [label="child.Add(''Father'', reference)", span="4835-4835", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2168 [label="var child = new Dictionary<string, object>()", span="4832-4832", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2164 [label="Entry lambda expression", span="4824-4839", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2861 [label="Entry lambda expression", span="6483-6491", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2868 [label="Entry lambda expression", span="6497-6503", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3639 [label="Entry lambda expression", span="8334-8338", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_651 [label="Entry lambda expression", span="1385-1385", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_654 [label="Entry lambda expression", span="1388-1388", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1097 [label="Entry lambda expression", span="2263-2267", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1192 [label="Entry lambda expression", span="2445-2457", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1196 [label="Exit lambda expression", span="2445-2457", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1237 [label="Entry lambda expression", span="2560-2560", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1239 [label="Exit lambda expression", span="2560-2560", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2165 [label="var reference = new Dictionary<string, object>()", span="4828-4828", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_98 [label="a.ErrorContext.Handled = true", span="332-332", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3092 [label="errors.Add(e.ErrorContext.Error.Message)", span="6920-6920", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3107 [label="errors.Add(e.ErrorContext.Error.Message)", span="6945-6945", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3122 [label="errors.Add(e.ErrorContext.Error.Message)", span="6968-6968", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1598 [label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3354-3362", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1347 [label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="2816-2816", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1605 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3371-3379", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1611 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3388-3396", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1617 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3405-3413", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1767 [label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="3815-3819", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2170 [label="child.Add(''Name'', ''Isabell'')", span="4834-4834", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2167 [label="reference.Add(''$id'', 1)", span="4830-4830", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2169 [label="child.Add(''_id'', 2)", span="4833-4833", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_653 [label="Exit lambda expression", span="1385-1385", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_652 [label="p.Name", span="1385-1385", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_656 [label="Exit lambda expression", span="1388-1388", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_655 [label="p.Name", span="1388-1388", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2492 [label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="5547-5547", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1587 [label="JsonConvert.PopulateObject(json, new List<Person>())", span="3337-3337", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2166 [label="reference.Add(''$ref'', 1)", span="4829-4829", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3237 [label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7294-7294", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3253 [label="var reader = new JsonTextReader(new StringReader(json))", span="7345-7345", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3803 [label="JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter())", span="8754-8758", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_97 [label="Entry lambda expression", span="332-332", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_99 [label="Exit lambda expression", span="332-332", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3251 [label="JsonSerializer serializer = new JsonSerializer()", span="7342-7342", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2971 [label="JsonConvert.DeserializeObject(null)", span="6687-6687", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3256 [label="serializer.Deserialize(reader, typeof(MyType))", span="7349-7349", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3254 [label="reader.Read()", span="7346-7346", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3255 [label="reader.Read()", span="7347-7347", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3093 [label="e.ErrorContext.Handled = true", span="6921-6921", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3091 [label="Entry lambda expression", span="6918-6922", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3108 [label="e.ErrorContext.Handled = true", span="6946-6946", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3106 [label="Entry lambda expression", span="6943-6947", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3123 [label="e.ErrorContext.Handled = true", span="6969-6969", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3121 [label="Entry lambda expression", span="6966-6970", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1597 [label="Entry lambda expression", span="3352-3363", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1599 [label="Exit lambda expression", span="3352-3363", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1345 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="2813-2813", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1346 [label="o.ReferenceLoopHandlingErrorProperty = o", span="2814-2814", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1348 [label="Exit lambda expression", span="2811-2817", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1604 [label="Entry lambda expression", span="3369-3380", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1606 [label="Exit lambda expression", span="3369-3380", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1610 [label="Entry lambda expression", span="3386-3397", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1612 [label="Exit lambda expression", span="3386-3397", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1616 [label="Entry lambda expression", span="3403-3414", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1618 [label="Exit lambda expression", span="3403-3414", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1766 [label="Entry lambda expression", span="3815-3819", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1768 [label="Exit lambda expression", span="3815-3819", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2491 [label="Entry lambda expression", span="5547-5547", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2493 [label="Exit lambda expression", span="5547-5547", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1586 [label="Entry lambda expression", span="3337-3337", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1588 [label="Exit lambda expression", span="3337-3337", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1344 [label="Entry lambda expression", span="2811-2817", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1578 [label="Entry lambda expression", span="3329-3329", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2970 [label="Entry lambda expression", span="6687-6687", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3236 [label="Entry lambda expression", span="7294-7294", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3249 [label="Entry lambda expression", span="7338-7350", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3802 [label="Entry lambda expression", span="8752-8759", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3238 [label="Exit lambda expression", span="7294-7294", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3250 [label="string json = ''[{},1]''", span="7340-7340", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3252 [label="serializer.CheckAdditionalContent = true", span="7343-7343", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3804 [label="Exit lambda expression", span="8752-8759", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_2972 [label="Exit lambda expression", span="6687-6687", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1579 [label="JsonConvert.PopulateObject(json, new Person())", span="3329-3329", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3257 [label="Exit lambda expression", span="7338-7350", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3094 [label="Exit lambda expression", span="6918-6922", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3109 [label="Exit lambda expression", span="6943-6947", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_3124 [label="Exit lambda expression", span="6966-6970", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1731 [label="x.Id == id", span="3722-3722", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1580 [label="Exit lambda expression", span="3329-3329", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_1732 [label="Exit lambda expression", span="3722-3722", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m4_122 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonTextWriterTest.cs"];
m4_3302 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7463-7463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonTextWriterTest.cs"];
m4_3305 [label="json = JsonConvert.SerializeObject(d)", span="7468-7468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonTextWriterTest.cs"];
m4_3308 [label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="7477-7477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonTextWriterTest.cs"];
m4_3304 [label="IList<double> d = new List<double> { 1.1, double.NaN, double.PositiveInfinity }", span="7466-7466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonTextWriterTest.cs"];
m4_3306 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="7471-7471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonTextWriterTest.cs"];
m4_3307 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.DefaultValue })", span="7474-7474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonTextWriterTest.cs"];
m4_3303 [label="string json", span="7465-7465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonTextWriterTest.cs"];
m4_3309 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7463-7463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonTextWriterTest.cs"];
m4_3643 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="8342-8342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonTextWriterTest.cs"];
m4_3647 [label="Uri uriWithPlus2 = JsonConvert.DeserializeObject<Uri>(jsonWithPlus)", span="8350-8350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonTextWriterTest.cs"];
m4_3646 [label="string jsonWithPlus = JsonConvert.SerializeObject(uriWithPlus)", span="8348-8348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonTextWriterTest.cs"];
m4_3648 [label="Assert.AreEqual(originalUri, uriWithPlus2.OriginalString)", span="8352-8352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonTextWriterTest.cs"];
m4_3645 [label="Uri uriWithPlus = new Uri(originalUri)", span="8346-8346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonTextWriterTest.cs"];
m4_3644 [label="string originalUri = ''https://test.com?m=a%2bb''", span="8344-8344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonTextWriterTest.cs"];
m4_3649 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="8342-8342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonTextWriterTest.cs"];
m4_3418 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="7810-7810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonTextWriterTest.cs"];
m4_3419 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}''), ''Cannot deserialize readonly or fixed size dictionary: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyDictionary`2[System.Int32,System.Int32]. Path '1', line 1, position 5.'')", span="7812-7812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonTextWriterTest.cs"];
m4_3420 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="7810-7810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonTextWriterTest.cs"];
m4_1075 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2225-2225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonTextWriterTest.cs"];
m4_1078 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2235-2235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonTextWriterTest.cs"];
m4_1079 [label="Console.WriteLine(json)", span="2237-2237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonTextWriterTest.cs"];
m4_1077 [label="MemberConverterClass c = new MemberConverterClass\r\n            {\r\n                DefaultConverter = date,\r\n                MemberConverter = date\r\n            }", span="2229-2233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonTextWriterTest.cs"];
m4_1076 [label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="2227-2227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonTextWriterTest.cs"];
m4_1080 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2225-2225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonTextWriterTest.cs"];
m4_35 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="59-59", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JsonTextWriterTest.cs"];
m4_177 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonTextWriterTest.cs"];
m4_1607 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3384-3384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonTextWriterTest.cs"];
m4_1608 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'')", span="3386-3397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonTextWriterTest.cs"];
m4_1609 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3384-3384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonTextWriterTest.cs"];
m4_90 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="323-323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonTextWriterTest.cs"];
m4_93 [label="Assert.AreEqual(0, l.ChildId)", span="335-335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonTextWriterTest.cs"];
m4_92 [label="Link l = JsonConvert.DeserializeObject<Link>(json, new JsonSerializerSettings\r\n            {\r\n                Error = (s, a) => a.ErrorContext.Handled = true\r\n            })", span="330-333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonTextWriterTest.cs"];
m4_91 [label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="325-328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonTextWriterTest.cs"];
m4_94 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="323-323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonTextWriterTest.cs"];
m4_100 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="341-341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonTextWriterTest.cs"];
m4_101 [label="ObservableCollection<string> s = JsonConvert.DeserializeObject<ObservableCollection<string>>(''['1','2']'')", span="343-343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonTextWriterTest.cs"];
m4_102 [label="Assert.AreEqual(2, s.Count)", span="344-344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonTextWriterTest.cs"];
m4_103 [label="Assert.AreEqual(''1'', s[0])", span="345-345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonTextWriterTest.cs"];
m4_104 [label="Assert.AreEqual(''2'', s[1])", span="346-346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonTextWriterTest.cs"];
m4_105 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="341-341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonTextWriterTest.cs"];
m4_1685 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3546-3546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterTest.cs"];
m4_1691 [label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="3609-3609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterTest.cs"];
m4_1693 [label="Assert.AreEqual(2, searchResults.Count)", span="3621-3621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterTest.cs"];
m4_1694 [label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="3622-3622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterTest.cs"];
m4_1695 [label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="3623-3623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterTest.cs"];
m4_1690 [label=results, span="3607-3607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterTest.cs"];
m4_1692 [label="searchResults.Add(searchResult)", span="3610-3610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterTest.cs"];
m4_1689 [label="IList<SearchResult> searchResults = new List<SearchResult>()", span="3606-3606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterTest.cs"];
m4_1688 [label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="3603-3603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterTest.cs"];
m4_1687 [label="JObject googleSearch = JObject.Parse(googleSearchText)", span="3600-3600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterTest.cs"];
m4_1686 [label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="3548-3598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterTest.cs"];
m4_1696 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3546-3546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonTextWriterTest.cs"];
m4_2004 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4457-4457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterTest.cs"];
m4_2005 [label="List<KVPair<string, string>> kvPairs =\r\n                JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n                    ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="4459-4461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterTest.cs"];
m4_2006 [label="Assert.AreEqual(2, kvPairs.Count)", span="4463-4463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterTest.cs"];
m4_2007 [label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="4464-4464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterTest.cs"];
m4_2008 [label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="4465-4465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterTest.cs"];
m4_2009 [label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="4466-4466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterTest.cs"];
m4_2010 [label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="4467-4467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterTest.cs"];
m4_2011 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4457-4457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonTextWriterTest.cs"];
m4_3282 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7397-7397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonTextWriterTest.cs"];
m4_3283 [label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="7399-7399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonTextWriterTest.cs"];
m4_3284 [label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="7400-7400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonTextWriterTest.cs"];
m4_3285 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7397-7397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonTextWriterTest.cs"];
m4_1229 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2554-2554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonTextWriterTest.cs"];
m4_1232 [label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="2558-2558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonTextWriterTest.cs"];
m4_1230 [label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="2556-2556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonTextWriterTest.cs"];
m4_1231 [label="testClass.co = new Co()", span="2557-2557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonTextWriterTest.cs"];
m4_1233 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass)); }, @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'')", span="2560-2560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonTextWriterTest.cs"];
m4_1234 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2554-2554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonTextWriterTest.cs"];
m4_536 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1098-1098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_537 [label="var dictStore = new Dictionary<DictionaryKeyCast, int>()", span="1101-1101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_542 [label="var settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="1106-1106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_552 [label="Console.WriteLine(''Time elapsed: '' + stopWatch.ElapsedMilliseconds)", span="1120-1120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_544 [label="var ms = new MemoryStream()", span="1108-1108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_540 [label="dictStore.Add(new DictionaryKeyCast(i.ToString(CultureInfo.InvariantCulture), i), i)", span="1104-1104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_538 [label="var i = 0", span="1102-1102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_546 [label="jsonSerializer.Serialize(streamWriter, dictStore)", span="1111-1111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_550 [label="var deserialize = jsonSerializer.Deserialize(new StreamReader(ms), typeof(Dictionary<DictionaryKeyCast, int>))", span="1117-1117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_539 [label="i < 800", span="1102-1102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_543 [label="var jsonSerializer = JsonSerializer.Create(settings)", span="1107-1107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_549 [label="var stopWatch = Stopwatch.StartNew()", span="1116-1116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_551 [label="stopWatch.Stop()", span="1118-1118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_545 [label="var streamWriter = new StreamWriter(ms)", span="1110-1110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_548 [label="ms.Seek(0, SeekOrigin.Begin)", span="1114-1114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_541 [label="i++", span="1102-1102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_547 [label="streamWriter.Flush()", span="1112-1112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_553 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1098-1098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonTextWriterTest.cs"];
m4_1853 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonTextWriterTest.cs"];
m4_3602 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="8267-8267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3603 [label="return (short)Value;", span="8269-8269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3604 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="8267-8267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_1799 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="3969-3969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonTextWriterTest.cs"];
m4_1802 [label="C1 = c1", span="3971-3971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonTextWriterTest.cs"];
m4_1803 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="3969-3969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonTextWriterTest.cs"];
m4_479 [label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0", cluster="System.Text.RegularExpressions.Regex.ToString()", file="JsonTextWriterTest.cs"];
m4_2961 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6673-6673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonTextWriterTest.cs"];
m4_2962 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject<double>(null); },\r\n                new [] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="6675-6680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonTextWriterTest.cs"];
m4_2963 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6673-6673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonTextWriterTest.cs"];
m4_1671 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3511-3511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1672 [label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="3513-3513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1675 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3517-3517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1676 [label="StringAssert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="3519-3522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1673 [label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="3514-3514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1674 [label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="3515-3515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1677 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3511-3511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1662 [label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonTextWriterTest.cs"];
m4_396 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="61-61", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_1958 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="JsonTextWriterTest.cs"];
m4_204 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="553-553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_205 [label="CommentTestObject o = JsonConvert.DeserializeObject<CommentTestObject>(@''{/* Test */}'')", span="555-555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_207 [label="o = JsonConvert.DeserializeObject<CommentTestObject>(@''{''''A'''': true/* Test */}'')", span="558-558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_206 [label="Assert.AreEqual(null, o.A)", span="556-556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_208 [label="Assert.AreEqual(true, o.A)", span="559-559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_209 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="553-553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonTextWriterTest.cs"];
m4_978 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2056-2056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonTextWriterTest.cs"];
m4_981 [label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="2061-2061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonTextWriterTest.cs"];
m4_979 [label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="2058-2058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonTextWriterTest.cs"];
m4_980 [label="Assert.AreEqual(@''1'', json)", span="2059-2059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonTextWriterTest.cs"];
m4_982 [label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="2062-2062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonTextWriterTest.cs"];
m4_983 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2056-2056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonTextWriterTest.cs"];
m4_2923 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6618-6618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_2924 [label="object v = JsonConvert.DeserializeObject<double?>('''')", span="6620-6620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_2926 [label="v = JsonConvert.DeserializeObject<char?>('''')", span="6623-6623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_2928 [label="v = JsonConvert.DeserializeObject<int?>('''')", span="6626-6626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_2930 [label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="6629-6629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_2932 [label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="6632-6632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_2934 [label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="6635-6635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_2936 [label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="6638-6638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_2925 [label="Assert.IsNull(v)", span="6621-6621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_2927 [label="Assert.IsNull(v)", span="6624-6624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_2929 [label="Assert.IsNull(v)", span="6627-6627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_2931 [label="Assert.IsNull(v)", span="6630-6630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_2933 [label="Assert.IsNull(v)", span="6633-6633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_2935 [label="Assert.IsNull(v)", span="6636-6636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_2937 [label="Assert.IsNull(v)", span="6639-6639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_2938 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6618-6618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonTextWriterTest.cs"];
m4_1636 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonTextWriterTest.cs"];
m4_3465 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="7931-7931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonTextWriterTest.cs"];
m4_3467 [label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="7941-7941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonTextWriterTest.cs"];
m4_3466 [label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="7933-7939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonTextWriterTest.cs"];
m4_3468 [label="Assert.IsNull(c2.MyNullableBool)", span="7942-7942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonTextWriterTest.cs"];
m4_3469 [label="Assert.IsNull(c2.MyNullableInteger)", span="7943-7943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonTextWriterTest.cs"];
m4_3470 [label="Assert.IsNull(c2.MyNullableDateTime)", span="7944-7944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonTextWriterTest.cs"];
m4_3471 [label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="7945-7945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonTextWriterTest.cs"];
m4_3472 [label="Assert.IsNull(c2.MyNullableDecimal)", span="7946-7946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonTextWriterTest.cs"];
m4_3473 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="7931-7931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonTextWriterTest.cs"];
m4_2844 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6459-6459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonTextWriterTest.cs"];
m4_2846 [label="string json = JsonConvert.SerializeObject(widget)", span="6463-6463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonTextWriterTest.cs"];
m4_2847 [label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="6465-6465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonTextWriterTest.cs"];
m4_2845 [label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="6461-6461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonTextWriterTest.cs"];
m4_2848 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6459-6459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonTextWriterTest.cs"];
m4_945 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2011-2011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterTest.cs"];
m4_950 [label="string json = JsonConvert.SerializeObject(s)", span="2018-2018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterTest.cs"];
m4_951 [label="Assert.AreEqual(''[3,2,1]'', json)", span="2019-2019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterTest.cs"];
m4_946 [label="Stack<object> s = new Stack<object>()", span="2013-2013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterTest.cs"];
m4_949 [label="s.Push(3)", span="2016-2016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterTest.cs"];
m4_947 [label="s.Push(1)", span="2014-2014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterTest.cs"];
m4_948 [label="s.Push(2)", span="2015-2015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterTest.cs"];
m4_952 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2011-2011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonTextWriterTest.cs"];
m4_820 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="1760-1760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterTest.cs"];
m4_829 [label="Assert.AreEqual(expected, result)", span="1781-1781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterTest.cs"];
m4_828 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="1780-1780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterTest.cs"];
m4_827 [label="string expected = sr.ReadToEnd()", span="1778-1778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterTest.cs"];
m4_821 [label="List<DateTime> testDates = new List<DateTime>\r\n            {\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n            }", span="1762-1770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterTest.cs"];
m4_826 [label="StreamReader sr = new StreamReader(ms)", span="1776-1776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterTest.cs"];
m4_822 [label="MemoryStream ms = new MemoryStream()", span="1772-1772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterTest.cs"];
m4_824 [label="s.WriteObject(ms, testDates)", span="1774-1774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterTest.cs"];
m4_825 [label="ms.Seek(0, SeekOrigin.Begin)", span="1775-1775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterTest.cs"];
m4_823 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="1773-1773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterTest.cs"];
m4_830 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="1760-1760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonTextWriterTest.cs"];
m4_1172 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonTextWriterTest.cs"];
m4_1381 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="2930-2930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonTextWriterTest.cs"];
m4_1382 [label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="2932-2932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonTextWriterTest.cs"];
m4_1383 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="2930-2930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonTextWriterTest.cs"];
m4_2729 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6211-6211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_2742 [label="Assert.AreEqual(''Test'', newObject.Name)", span="6234-6234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_2741 [label="TestObject newObject = (TestObject)serializer.Deserialize(bsonReader)", span="6232-6232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_2743 [label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="6235-6235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_2731 [label="JsonSerializer serializer = new JsonSerializer()", span="6215-6215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_2740 [label="JsonReader bsonReader = new JsonTextReader(new StreamReader(bsonStream))", span="6229-6229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_2739 [label="MemoryStream bsonStream = new MemoryStream(objectBytes)", span="6228-6228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_2734 [label="MemoryStream bsonStream = new MemoryStream()", span="6219-6219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_2730 [label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="6213-6213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_2732 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="6216-6216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_2736 [label="serializer.Serialize(bsonWriter, test)", span="6222-6222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_2735 [label="JsonWriter bsonWriter = new JsonTextWriter(new StreamWriter(bsonStream))", span="6220-6220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_2738 [label="objectBytes = bsonStream.ToArray()", span="6225-6225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_2733 [label="byte[] objectBytes", span="6218-6218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_2737 [label="bsonWriter.Flush()", span="6223-6223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_2744 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6211-6211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonTextWriterTest.cs"];
m4_799 [label="Entry Unk.ReadObject", span="", cluster="Unk.ReadObject", file="JsonTextWriterTest.cs"];
m4_1236 [label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonTextWriterTest.cs"];
m4_2091 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="4658-4658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonTextWriterTest.cs"];
m4_1842 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4107-4107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterTest.cs"];
m4_1843 [label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="4109-4109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterTest.cs"];
m4_1844 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4107-4107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonTextWriterTest.cs"];
m4_741 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="1561-1561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_743 [label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="1565-1565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_742 [label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="1563-1563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_744 [label="Assert.AreEqual(c.Field, ''Field'')", span="1567-1567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_745 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="1561-1561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_12 [label="DateTimeKind.Local", span="54-54", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="JsonTextWriterTest.cs"];
m4_1747 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="3696-3696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="JsonTextWriterTest.cs"];
m4_3079 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6913-6913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonTextWriterTest.cs"];
m4_3085 [label="Assert.AreEqual(4, errors.Count)", span="6930-6930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonTextWriterTest.cs"];
m4_3081 [label="IList<string> errors = new List<string>()", span="6916-6916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonTextWriterTest.cs"];
m4_3084 [label="Assert.IsNotNull(o)", span="6929-6929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonTextWriterTest.cs"];
m4_3086 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' not found in JSON. Path ''''))", span="6931-6931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonTextWriterTest.cs"];
m4_3080 [label="string json = ''{}''", span="6915-6915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonTextWriterTest.cs"];
m4_3082 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="6918-6922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonTextWriterTest.cs"];
m4_3087 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' not found in JSON. Path ''''))", span="6932-6932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonTextWriterTest.cs"];
m4_3088 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AllowNullProperty' not found in JSON. Path ''''))", span="6933-6933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonTextWriterTest.cs"];
m4_3089 [label="Assert.IsTrue(errors[3].StartsWith(''Required property 'AlwaysProperty' not found in JSON. Path ''''))", span="6934-6934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonTextWriterTest.cs"];
m4_3083 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="6924-6927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonTextWriterTest.cs"];
m4_3090 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="6913-6913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonTextWriterTest.cs"];
m4_3559 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", span="119-119", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", file="JsonTextWriterTest.cs"];
m4_2767 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6285-6285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonTextWriterTest.cs"];
m4_2775 [label="Assert.AreEqual(-1, c2.x)", span="6316-6316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonTextWriterTest.cs"];
m4_2776 [label="Assert.AreEqual(-2, StaticTestClass.y)", span="6317-6317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonTextWriterTest.cs"];
m4_2777 [label="Assert.AreEqual(-3, StaticTestClass.z)", span="6318-6318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonTextWriterTest.cs"];
m4_2774 [label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6306-6314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonTextWriterTest.cs"];
m4_2768 [label="ReflectionContractResolver contractResolver = new ReflectionContractResolver()", span="6287-6287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonTextWriterTest.cs"];
m4_2773 [label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6300-6304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonTextWriterTest.cs"];
m4_2772 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6295-6298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonTextWriterTest.cs"];
m4_2769 [label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6289-6292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonTextWriterTest.cs"];
m4_2771 [label="StaticTestClass.z = 3", span="6294-6294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonTextWriterTest.cs"];
m4_2770 [label="StaticTestClass.y = 2", span="6293-6293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonTextWriterTest.cs"];
m4_2778 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6285-6285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonTextWriterTest.cs"];
m4_3797 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", span="8699-8699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", file="JsonTextWriterTest.cs"];
m4_2915 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", file="JsonTextWriterTest.cs"];
m4_3027 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="JsonTextWriterTest.cs"];
m4_3634 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", span="8313-8313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", file="JsonTextWriterTest.cs"];
m4_1129 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="792-792", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonTextWriterTest.cs"];
m4_1254 [label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonTextWriterTest.cs"];
m4_595 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="1218-1218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="JsonTextWriterTest.cs"];
m4_1047 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2171-2171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1051 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2180-2180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1053 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.DefaultConverter)", span="2187-2187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1054 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.MemberConverter)", span="2188-2188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1050 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n            })", span="2176-2179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1052 [label="var m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            })", span="2182-2185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1049 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2174-2174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1048 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2173-2173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_1055 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2171-2171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonTextWriterTest.cs"];
m4_3446 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="7873-7873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonTextWriterTest.cs"];
m4_3448 [label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="7881-7881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonTextWriterTest.cs"];
m4_3452 [label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="7886-7886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonTextWriterTest.cs"];
m4_3449 [label="Assert.AreEqual(float.NaN, floats[0])", span="7882-7882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonTextWriterTest.cs"];
m4_3450 [label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="7883-7883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonTextWriterTest.cs"];
m4_3451 [label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="7884-7884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonTextWriterTest.cs"];
m4_3453 [label="Assert.AreEqual(float.NaN, doubles[0])", span="7887-7887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonTextWriterTest.cs"];
m4_3454 [label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="7888-7888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonTextWriterTest.cs"];
m4_3455 [label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="7889-7889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonTextWriterTest.cs"];
m4_3447 [label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="7875-7879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonTextWriterTest.cs"];
m4_3456 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="7873-7873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonTextWriterTest.cs"];
m4_1868 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4145-4145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonTextWriterTest.cs"];
m4_1869 [label="return _innerDictionary.Remove(key);", span="4147-4147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonTextWriterTest.cs"];
m4_1870 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4145-4145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonTextWriterTest.cs"];
m4_202 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="151-151", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonTextWriterTest.cs"];
m4_2475 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5517-5517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonTextWriterTest.cs"];
m4_2477 [label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="5521-5521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonTextWriterTest.cs"];
m4_2478 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="5523-5525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonTextWriterTest.cs"];
m4_2476 [label="ComplexItem i = new ComplexItem()", span="5519-5519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonTextWriterTest.cs"];
m4_2479 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5517-5517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonTextWriterTest.cs"];
m4_1532 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3253-3253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonTextWriterTest.cs"];
m4_1533 [label="string json = @''[]''", span="3255-3255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonTextWriterTest.cs"];
m4_1534 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Double' because the type requires a JSON primitive value (e.g. string, number, boolean, null) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON primitive value (e.g. string, number, boolean, null) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3257-3259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonTextWriterTest.cs"];
m4_1535 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3253-3253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonTextWriterTest.cs"];
m4_2993 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6736-6736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2999 [label="NullableDateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="6751-6753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2995 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6746-6746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2996 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6747-6747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2997 [label="Assert.AreEqual(''Pre'', c.PreField)", span="6748-6748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2998 [label="Assert.AreEqual(''Post'', c.PostField)", span="6749-6749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_3000 [label="Assert.AreEqual(null, c2.DateTimeField)", span="6755-6755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_3001 [label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="6756-6756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_3002 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="6757-6757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_3003 [label="Assert.AreEqual(''Post'', c2.PostField)", span="6758-6758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2994 [label="NullableDateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6738-6744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_3004 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6736-6736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_562 [label="Entry System.IO.StreamWriter.Flush()", span="0-0", cluster="System.IO.StreamWriter.Flush()", file="JsonTextWriterTest.cs"];
m4_106 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="352-352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonTextWriterTest.cs"];
m4_108 [label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="355-355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonTextWriterTest.cs"];
m4_115 [label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="366-366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonTextWriterTest.cs"];
m4_113 [label="Assert.AreEqual(typeof(DateTimeOffset), l[0].GetType())", span="363-363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonTextWriterTest.cs"];
m4_114 [label="Assert.AreEqual(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero), l[0])", span="364-364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonTextWriterTest.cs"];
m4_107 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[''''2000-01-01T01:01:01+00:00'''']''))", span="354-354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonTextWriterTest.cs"];
m4_109 [label="JsonSerializer serializer = new JsonSerializer()", span="357-357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonTextWriterTest.cs"];
m4_112 [label="serializer.Populate(reader, l)", span="361-361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonTextWriterTest.cs"];
m4_111 [label="IList<object> l = new List<object>()", span="360-360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonTextWriterTest.cs"];
m4_110 [label="serializer.DateParseHandling = DateParseHandling.DateTimeOffset", span="358-358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonTextWriterTest.cs"];
m4_116 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="352-352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonTextWriterTest.cs"];
m4_754 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonTextWriterTest.cs"];
m4_1820 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="4006-4006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonTextWriterTest.cs"];
m4_3772 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="8661-8661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonTextWriterTest.cs"];
m4_3773 [label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.SerializeObject(new ErroringTestClass()), ''Error creating 'Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+ErroringJsonConverter'.'')", span="8663-8663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonTextWriterTest.cs"];
m4_3774 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="8661-8661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonTextWriterTest.cs"];
m4_89 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JsonTextWriterTest.cs"];
m4_2890 [label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="JsonTextWriterTest.cs"];
m4_1027 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2138-2138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1032 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2146-2146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1030 [label="string json = JsonConvert.SerializeObject(m1)", span="2143-2143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1033 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2148-2148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1034 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2149-2149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1031 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2144-2144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1029 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2141-2141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1028 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2140-2140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonTextWriterTest.cs"];
m4_1035 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2138-2138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonTextWriterTest.cs"];
m4_3626 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="8307-8307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3627 [label="throw new InvalidCastException();", span="8309-8309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3628 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="8307-8307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_1846 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4112-4112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonTextWriterTest.cs"];
m4_1847 [label="return _innerDictionary.ContainsKey(key);", span="4114-4114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonTextWriterTest.cs"];
m4_1848 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4112-4112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonTextWriterTest.cs"];
m4_273 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonTextWriterTest.cs"];
m4_405 [label="Entry Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", span="37-37", cluster="Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", file="JsonTextWriterTest.cs"];
m4_2835 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="6419-6419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="JsonTextWriterTest.cs"];
m4_3041 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="JsonTextWriterTest.cs"];
m4_271 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonTextWriterTest.cs"];
m4_2836 [label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1577-1577", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonTextWriterTest.cs"];
m4_1511 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3221-3221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonTextWriterTest.cs"];
m4_1512 [label="string json = @''[]''", span="3223-3223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonTextWriterTest.cs"];
m4_1513 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3225-3227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonTextWriterTest.cs"];
m4_1514 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3221-3221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonTextWriterTest.cs"];
m4_3095 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6938-6938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonTextWriterTest.cs"];
m4_3101 [label="Assert.AreEqual(3, errors.Count)", span="6955-6955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonTextWriterTest.cs"];
m4_3097 [label="IList<string> errors = new List<string>()", span="6941-6941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonTextWriterTest.cs"];
m4_3100 [label="Assert.IsNotNull(o)", span="6954-6954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonTextWriterTest.cs"];
m4_3102 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' expects a value but got null. Path ''''))", span="6956-6956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonTextWriterTest.cs"];
m4_3096 [label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="6940-6940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonTextWriterTest.cs"];
m4_3098 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="6943-6947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonTextWriterTest.cs"];
m4_3103 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' expects a value but got null. Path ''''))", span="6957-6957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonTextWriterTest.cs"];
m4_3104 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AlwaysProperty' expects a value but got null. Path ''''))", span="6958-6958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonTextWriterTest.cs"];
m4_3099 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="6949-6952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonTextWriterTest.cs"];
m4_3105 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="6938-6938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonTextWriterTest.cs"];
m4_124 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="381-381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonTextWriterTest.cs"];
m4_126 [label="var childClass = JsonConvert.DeserializeObject<ChildClass>(@''{''''IsTransient'''':true}'')", span="385-385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonTextWriterTest.cs"];
m4_125 [label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClass { IsTransient = true }))", span="383-383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonTextWriterTest.cs"];
m4_127 [label="Assert.AreEqual(true, childClass.IsTransient)", span="386-386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonTextWriterTest.cs"];
m4_128 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="381-381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonTextWriterTest.cs"];
m4_2273 [label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0", cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonTextWriterTest.cs"];
m4_832 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="JsonTextWriterTest.cs"];
m4_425 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="JsonTextWriterTest.cs"];
m4_3179 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7138-7138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonTextWriterTest.cs"];
m4_3182 [label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="7143-7143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonTextWriterTest.cs"];
m4_3183 [label="Assert.AreEqual(0, objDeserialized.Age)", span="7144-7144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonTextWriterTest.cs"];
m4_3180 [label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="7140-7140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonTextWriterTest.cs"];
m4_3181 [label="var objDeserialized = SerializeAndDeserialize<PersonSerializable>(testObj)", span="7141-7141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonTextWriterTest.cs"];
m4_3184 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7138-7138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonTextWriterTest.cs"];
m4_1499 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonTextWriterTest.cs"];
m4_1711 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="3659-3659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonTextWriterTest.cs"];
m4_1712 [label="Dictionary = new Dictionary<string, string>\r\n                {\r\n                    { ''existing'', ''yup'' }\r\n                }", span="3661-3664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonTextWriterTest.cs"];
m4_1713 [label="List = new List<string>\r\n                {\r\n                    ''existing''\r\n                }", span="3665-3668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonTextWriterTest.cs"];
m4_1714 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="3659-3659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonTextWriterTest.cs"];
m4_2465 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5492-5492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonTextWriterTest.cs"];
m4_2469 [label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="5509-5509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonTextWriterTest.cs"];
m4_2470 [label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="5511-5511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonTextWriterTest.cs"];
m4_2471 [label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="5512-5512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonTextWriterTest.cs"];
m4_2472 [label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="5513-5513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonTextWriterTest.cs"];
m4_2467 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="5499-5499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonTextWriterTest.cs"];
m4_2468 [label="StringAssert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="5501-5507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonTextWriterTest.cs"];
m4_2466 [label="EnumerableClass c = new EnumerableClass\r\n            {\r\n                Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n            }", span="5494-5497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonTextWriterTest.cs"];
m4_2473 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5492-5492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonTextWriterTest.cs"];
m4_2851 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6469-6469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonTextWriterTest.cs"];
m4_2853 [label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="6473-6473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonTextWriterTest.cs"];
m4_2854 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="6475-6475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonTextWriterTest.cs"];
m4_2855 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="6476-6476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonTextWriterTest.cs"];
m4_2856 [label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="6477-6477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonTextWriterTest.cs"];
m4_2852 [label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="6471-6471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonTextWriterTest.cs"];
m4_2857 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6469-6469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonTextWriterTest.cs"];
m4_2822 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", file="JsonTextWriterTest.cs"];
m4_2714 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonTextWriterTest.cs"];
m4_1038 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2153-2153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonTextWriterTest.cs"];
m4_1043 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2164-2164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonTextWriterTest.cs"];
m4_1044 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2166-2166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonTextWriterTest.cs"];
m4_1045 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2167-2167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonTextWriterTest.cs"];
m4_1042 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2162-2162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonTextWriterTest.cs"];
m4_1041 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="2158-2161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonTextWriterTest.cs"];
m4_1039 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2155-2155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonTextWriterTest.cs"];
m4_1040 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2156-2156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonTextWriterTest.cs"];
m4_1046 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2153-2153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonTextWriterTest.cs"];
m4_2916 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6606-6606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonTextWriterTest.cs"];
m4_2921 [label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="6614-6614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonTextWriterTest.cs"];
m4_2918 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6609-6609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonTextWriterTest.cs"];
m4_2920 [label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="6612-6612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonTextWriterTest.cs"];
m4_2917 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6608-6608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonTextWriterTest.cs"];
m4_2919 [label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="6611-6611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonTextWriterTest.cs"];
m4_2922 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6606-6606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonTextWriterTest.cs"];
m4_2214 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="4909-4909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="JsonTextWriterTest.cs"];
m4_648 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonTextWriterTest.cs"];
m4_596 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1377-1377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_634 [label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="1387-1387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_639 [label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="1394-1394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_633 [label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="1385-1385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_635 [label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="1388-1388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_638 [label="Console.WriteLine(''JsonDotNetSerializer      : '' + jsonNetJson)", span="1392-1392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_640 [label=dataContractJson, span="1395-1395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_642 [label="return jsonNetJson.ToString();", span="1400-1400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_628 [label="MemoryStream ms = new MemoryStream()", span="1379-1379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_629 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="1380-1380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_630 [label="s.WriteObject(ms, o)", span="1381-1381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_636 [label="Console.WriteLine(''Results for '' + o.GetType().Name)", span="1390-1390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_632 [label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="1384-1384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_637 [label="Console.WriteLine(''DataContractJsonSerializer: '' + dataContractJson)", span="1391-1391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_641 [label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="1397-1397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_631 [label="var data = ms.ToArray()", span="1383-1383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_643 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1377-1377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonTextWriterTest.cs"];
m4_3707 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="8491-8491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3714 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8512-8512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3708 [label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="8493-8493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3713 [label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="8510-8510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3711 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8501-8504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3709 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="8494-8494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3710 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="8495-8499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3712 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="8506-8508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3715 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="8491-8491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3110 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6962-6962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonTextWriterTest.cs"];
m4_3115 [label="Assert.AreEqual(3, errors.Count)", span="6983-6983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonTextWriterTest.cs"];
m4_3116 [label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="6984-6984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonTextWriterTest.cs"];
m4_3117 [label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="6985-6985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonTextWriterTest.cs"];
m4_3118 [label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="6986-6986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonTextWriterTest.cs"];
m4_3111 [label="IList<string> errors = new List<string>()", span="6964-6964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonTextWriterTest.cs"];
m4_3114 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="6978-6981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonTextWriterTest.cs"];
m4_3112 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="6966-6970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonTextWriterTest.cs"];
m4_3113 [label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n            {\r\n                Error = error,\r\n                Formatting = Formatting.Indented\r\n            })", span="6972-6976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonTextWriterTest.cs"];
m4_3119 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="6962-6962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonTextWriterTest.cs"];
m4_889 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="1896-1896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_891 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="1899-1899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_892 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="1900-1900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_893 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="1902-1902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_894 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="1903-1903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_895 [label="Assert.AreEqual(1, wibble.Bar[1])", span="1904-1904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_896 [label="Assert.AreEqual(2, wibble.Bar[2])", span="1905-1905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_897 [label="Assert.AreEqual(3, wibble.Bar[3])", span="1906-1906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_890 [label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="1898-1898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_898 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="1896-1896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_2259 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="686-686", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonTextWriterTest.cs"];
m4_48 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="179-179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonTextWriterTest.cs"];
m4_49 [label="this.Sections = new HashSet<FaqSection>()", span="181-181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonTextWriterTest.cs"];
m4_50 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="179-179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonTextWriterTest.cs"];
m4_1101 [label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonTextWriterTest.cs"];
m4_567 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="JsonTextWriterTest.cs"];
m4_3348 [label="Entry System.Tuple.Create<T1>(T1)", span="0-0", cluster="System.Tuple.Create<T1>(T1)", file="JsonTextWriterTest.cs"];
m4_1956 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="JsonTextWriterTest.cs"];
m4_129 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", span="375-375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", file="JsonTextWriterTest.cs"];
m4_95 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonTextWriterTest.cs"];
m4_1918 [label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="JsonTextWriterTest.cs"];
m4_845 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="1816-1816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterTest.cs"];
m4_851 [label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="1826-1826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterTest.cs"];
m4_849 [label="string json = JsonConvert.SerializeObject(values)", span="1822-1822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterTest.cs"];
m4_852 [label="CollectionAssert.AreEqual(values, newValues)", span="1828-1828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterTest.cs"];
m4_850 [label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="1824-1824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterTest.cs"];
m4_846 [label="Dictionary<int, int> values = new Dictionary<int, int>()", span="1818-1818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterTest.cs"];
m4_848 [label="values.Add(int.MinValue, int.MaxValue)", span="1820-1820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterTest.cs"];
m4_847 [label="values.Add(-5, 6)", span="1819-1819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterTest.cs"];
m4_853 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="1816-1816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonTextWriterTest.cs"];
m4_2244 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonTextWriterTest.cs"];
m4_3214 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="7226-7226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="JsonTextWriterTest.cs"];
m4_3537 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8143-8143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3541 [label="Assert.AreEqual(@''''''Console Writer'''''', text1)", span="8159-8159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3543 [label="Assert.AreEqual(''ConsoleWriter'', restoredWriter.PrintTest())", span="8162-8162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3549 [label="Assert.AreEqual(''ConsoleWriter'', restoredObject.First().Key.PrintTest())", span="8177-8177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3555 [label="Assert.AreEqual(''ConsoleWriter'', restoredDict2.First().Value.PrintTest())", span="8192-8192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3540 [label="var text1 = JsonConvert.SerializeObject(consoleWriter, Formatting.Indented, options)", span="8158-8158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3542 [label="var restoredWriter = JsonConvert.DeserializeObject<IMyInterface>(text1, options)", span="8161-8161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3544 [label="var dict2 = new Dictionary<IMyInterface, string>()", span="8168-8168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3548 [label="var restoredObject = JsonConvert.DeserializeObject<Dictionary<IMyInterface, string>>(text2, options)", span="8176-8176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3550 [label="var dict3 = new Dictionary<string, IMyInterface>()", span="8183-8183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3554 [label="var restoredDict2 = JsonConvert.DeserializeObject<Dictionary<string, IMyInterface>>(text3, options)", span="8191-8191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3538 [label="var consoleWriter = new ConsoleWriter()", span="8145-8145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3539 [label="var options = new JsonSerializerSettings\r\n            {\r\n                Converters = new JsonConverterCollection { new TypeConverterJsonConverter() },\r\n                //TypeNameHandling = TypeNameHandling.All\r\n            }", span="8148-8152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3545 [label="dict2.Add(consoleWriter, ''Console'')", span="8169-8169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3546 [label="var text2 = JsonConvert.SerializeObject(dict2, Formatting.Indented, options)", span="8171-8171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3547 [label="StringAssert.AreEqual(@''{\r\n  ''''Console Writer'''': ''''Console''''\r\n}'', text2)", span="8172-8174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3551 [label="dict3.Add(''Console'', consoleWriter)", span="8184-8184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3552 [label="var text3 = JsonConvert.SerializeObject(dict3, Formatting.Indented, options)", span="8186-8186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3553 [label="StringAssert.AreEqual(@''{\r\n  ''''Console'''': ''''Console Writer''''\r\n}'', text3)", span="8187-8189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_3556 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8143-8143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonTextWriterTest.cs"];
m4_1697 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3627-3627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterTest.cs"];
m4_1707 [label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="3650-3650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterTest.cs"];
m4_1708 [label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="3651-3651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterTest.cs"];
m4_1705 [label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="3638-3638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterTest.cs"];
m4_1706 [label="StringAssert.AreEqual(\r\n                @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n                json)", span="3639-3648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterTest.cs"];
m4_1699 [label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="3630-3630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterTest.cs"];
m4_1698 [label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="3629-3629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterTest.cs"];
m4_1704 [label="wagePerson.Name = ''Jim Bob''", span="3636-3636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterTest.cs"];
m4_1700 [label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3632-3632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterTest.cs"];
m4_1703 [label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3635-3635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterTest.cs"];
m4_1701 [label="wagePerson.Department = ''McDees''", span="3633-3633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterTest.cs"];
m4_1702 [label="wagePerson.HourlyWage = 12.50m", span="3634-3634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterTest.cs"];
m4_1709 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3627-3627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonTextWriterTest.cs"];
m4_1268 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterTest.cs"];
m4_1094 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2261-2261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonTextWriterTest.cs"];
m4_1095 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n                JsonConvert.SerializeObject(c);\r\n            }, ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'')", span="2263-2267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonTextWriterTest.cs"];
m4_1096 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2261-2261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonTextWriterTest.cs"];
m4_1762 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3811-3811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonTextWriterTest.cs"];
m4_1764 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            }), ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'')", span="3815-3819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonTextWriterTest.cs"];
m4_1763 [label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="3813-3813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonTextWriterTest.cs"];
m4_1765 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="3811-3811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonTextWriterTest.cs"];
m4_761 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="1670-1670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonTextWriterTest.cs"];
m4_764 [label="Assert.AreEqual(4, o.Children().Count())", span="1684-1684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonTextWriterTest.cs"];
m4_767 [label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="1688-1688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonTextWriterTest.cs"];
m4_763 [label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="1683-1683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonTextWriterTest.cs"];
m4_765 [label="JToken torrentsArray = (JToken)o[''torrents'']", span="1686-1686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonTextWriterTest.cs"];
m4_766 [label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="1687-1687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonTextWriterTest.cs"];
m4_762 [label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="1672-1681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonTextWriterTest.cs"];
m4_768 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="1670-1670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonTextWriterTest.cs"];
m4_3360 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="717-717", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriterTest.cs"];
m4_168 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="495-495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonTextWriterTest.cs"];
m4_171 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<List<int>>>(json)", span="505-505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonTextWriterTest.cs"];
m4_170 [label="var json = JsonConvert.SerializeObject(input)", span="504-504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonTextWriterTest.cs"];
m4_172 [label="CollectionAssert.AreEqual(input.Data, deserialized.Data)", span="507-507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonTextWriterTest.cs"];
m4_173 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="508-508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonTextWriterTest.cs"];
m4_174 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="509-509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonTextWriterTest.cs"];
m4_169 [label="var input = new ResponseWithNewGenericProperty<List<int>>()\r\n            {\r\n                Message = ''More complex case - generic list of int'',\r\n                Data = Enumerable.Range(50, 70).ToList(),\r\n                Result = ''This should be fine too''\r\n            }", span="497-502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonTextWriterTest.cs"];
m4_175 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="495-495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonTextWriterTest.cs"];
m4_1871 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonTextWriterTest.cs"];
m4_2449 [label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="8881-8881", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonTextWriterTest.cs"];
m4_3860 [label="Value = val", span="8883-8883", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonTextWriterTest.cs"];
m4_3861 [label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="8881-8881", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonTextWriterTest.cs"];
m4_3310 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7483-7483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonTextWriterTest.cs"];
m4_3312 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="7489-7489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonTextWriterTest.cs"];
m4_3314 [label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="7494-7494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonTextWriterTest.cs"];
m4_3311 [label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="7485-7487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonTextWriterTest.cs"];
m4_3313 [label="BigInteger nineQuindecillion = l[0]", span="7491-7491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonTextWriterTest.cs"];
m4_3315 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7483-7483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonTextWriterTest.cs"];
m4_1311 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="2741-2741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonTextWriterTest.cs"];
m4_1315 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="2751-2751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonTextWriterTest.cs"];
m4_1318 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="2762-2762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonTextWriterTest.cs"];
m4_1314 [label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="2746-2749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonTextWriterTest.cs"];
m4_1316 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="2753-2756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonTextWriterTest.cs"];
m4_1317 [label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="2758-2761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonTextWriterTest.cs"];
m4_1312 [label="SubKlass i = new SubKlass(''my subprop'')", span="2743-2743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonTextWriterTest.cs"];
m4_1313 [label="i.SuperProp = ''overrided superprop''", span="2744-2744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonTextWriterTest.cs"];
m4_1319 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="2741-2741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonTextWriterTest.cs"];
m4_1922 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="JsonTextWriterTest.cs"];
m4_2973 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6695-6695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonTextWriterTest.cs"];
m4_2976 [label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="6701-6701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonTextWriterTest.cs"];
m4_2975 [label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="6700-6700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonTextWriterTest.cs"];
m4_2974 [label="string jsonIsoText =\r\n                @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="6697-6698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonTextWriterTest.cs"];
m4_2977 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6695-6695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonTextWriterTest.cs"];
m4_3120 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", file="JsonTextWriterTest.cs"];
m4_210 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="563-563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_214 [label="Assert.AreEqual(customBinder, serializer.Binder)", span="569-569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_216 [label="Assert.AreEqual(true, serializer.CheckAdditionalContent)", span="572-572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_218 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializer.ConstructorHandling)", span="575-575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_220 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializer.Context)", span="579-579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_223 [label="Assert.AreEqual(resolver, serializer.ContractResolver)", span="584-584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_225 [label="Assert.AreEqual(1, serializer.Converters.Count)", span="587-587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_227 [label="Assert.AreEqual(''en-NZ'', serializer.Culture.ToString())", span="590-590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_229 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializer.DateFormatHandling)", span="593-593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_231 [label="Assert.AreEqual(''yyyy'', serializer.DateFormatString)", span="596-596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_233 [label="Assert.AreEqual(DateParseHandling.None, serializer.DateParseHandling)", span="599-599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_235 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializer.DateTimeZoneHandling)", span="602-602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_237 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializer.DefaultValueHandling)", span="605-605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_239 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializer.FloatFormatHandling)", span="608-608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_241 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializer.FloatParseHandling)", span="611-611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_243 [label="Assert.AreEqual(Formatting.Indented, serializer.Formatting)", span="614-614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_245 [label="Assert.AreEqual(9001, serializer.MaxDepth)", span="617-617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_247 [label="Assert.AreEqual(MissingMemberHandling.Error, serializer.MissingMemberHandling)", span="620-620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_249 [label="Assert.AreEqual(NullValueHandling.Ignore, serializer.NullValueHandling)", span="623-623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_251 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializer.ObjectCreationHandling)", span="626-626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_253 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializer.PreserveReferencesHandling)", span="629-629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_255 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializer.ReferenceLoopHandling)", span="632-632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_258 [label="Assert.AreEqual(referenceResolver, serializer.ReferenceResolver)", span="636-636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_260 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializer.StringEscapeHandling)", span="639-639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_263 [label="Assert.AreEqual(traceWriter, serializer.TraceWriter)", span="643-643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_265 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializer.TypeNameAssemblyFormat)", span="647-647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_267 [label="Assert.AreEqual(TypeNameHandling.All, serializer.TypeNameHandling)", span="651-651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_211 [label="JsonSerializer serializer = new JsonSerializer()", span="565-565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_212 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="567-567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_213 [label="serializer.Binder = customBinder", span="568-568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_215 [label="serializer.CheckAdditionalContent = true", span="571-571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_217 [label="serializer.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="574-574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_219 [label="serializer.Context = new StreamingContext(StreamingContextStates.Other)", span="578-578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_221 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="582-582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_222 [label="serializer.ContractResolver = resolver", span="583-583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_224 [label="serializer.Converters.Add(new StringEnumConverter())", span="586-586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_226 [label="serializer.Culture = new CultureInfo(''en-nz'')", span="589-589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_228 [label="serializer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="592-592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_230 [label="serializer.DateFormatString = ''yyyy''", span="595-595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_232 [label="serializer.DateParseHandling = DateParseHandling.None", span="598-598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_234 [label="serializer.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="601-601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_236 [label="serializer.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="604-604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_238 [label="serializer.FloatFormatHandling = FloatFormatHandling.Symbol", span="607-607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_240 [label="serializer.FloatParseHandling = FloatParseHandling.Decimal", span="610-610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_242 [label="serializer.Formatting = Formatting.Indented", span="613-613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_244 [label="serializer.MaxDepth = 9001", span="616-616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_246 [label="serializer.MissingMemberHandling = MissingMemberHandling.Error", span="619-619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_248 [label="serializer.NullValueHandling = NullValueHandling.Ignore", span="622-622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_250 [label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", span="625-625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_252 [label="serializer.PreserveReferencesHandling = PreserveReferencesHandling.All", span="628-628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_254 [label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="631-631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_256 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="634-634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_257 [label="serializer.ReferenceResolver = referenceResolver", span="635-635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_259 [label="serializer.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="638-638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_261 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="641-641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_262 [label="serializer.TraceWriter = traceWriter", span="642-642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_264 [label="serializer.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="646-646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_266 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="650-650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_268 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="563-563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonTextWriterTest.cs"];
m4_2433 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5441-5441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonTextWriterTest.cs"];
m4_2436 [label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="5451-5451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonTextWriterTest.cs"];
m4_2437 [label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="5453-5453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonTextWriterTest.cs"];
m4_2435 [label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="5449-5449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonTextWriterTest.cs"];
m4_2438 [label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="5454-5454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonTextWriterTest.cs"];
m4_2434 [label="Response response = new Response\r\n            {\r\n                Name = ''Success'',\r\n                Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n            }", span="5443-5447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonTextWriterTest.cs"];
m4_2439 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5441-5441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonTextWriterTest.cs"];
m4_2480 [label="Entry Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", span="8984-8984", cluster="Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", file="JsonTextWriterTest.cs"];
m4_424 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonTextWriterTest.cs"];
m4_2406 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5358-5358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_2407 [label="_name = info.GetString(''Name'')", span="5360-5360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_2408 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5358-5358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1678 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3526-3526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1680 [label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="3536-3536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1679 [label="string json =\r\n                    @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="3530-3534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1681 [label="Assert.Fail()", span="3537-3537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1682 [label=JsonSerializationException, span="3539-3539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1683 [label="Assert.IsTrue(ex.Message.StartsWith(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path '['Newtonsoft.Json.Tests.TestObjects.Person']'''))", span="3541-3541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1684 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3526-3526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_3373 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7695-7695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonTextWriterTest.cs"];
m4_3374 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7697-7701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonTextWriterTest.cs"];
m4_3376 [label="StringAssert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="7708-7711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonTextWriterTest.cs"];
m4_3375 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n            })", span="7703-7706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonTextWriterTest.cs"];
m4_3377 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7695-7695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonTextWriterTest.cs"];
m4_2454 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5475-5475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonTextWriterTest.cs"];
m4_2455 [label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="5477-5477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonTextWriterTest.cs"];
m4_2456 [label="Assert.AreEqual(''Public Paramatized'', c.Constructor)", span="5478-5478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonTextWriterTest.cs"];
m4_2457 [label="Assert.AreEqual(''value!'', c.Value)", span="5479-5479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonTextWriterTest.cs"];
m4_2458 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5475-5475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonTextWriterTest.cs"];
m4_3596 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="8257-8257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3597 [label="throw new InvalidCastException();", span="8259-8259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3598 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="8257-8257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3779 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="8667-8667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonTextWriterTest.cs"];
m4_3780 [label="ExceptionAssert.Throws<JsonReaderException>(() => JsonConvert.DeserializeObject<string>(''020474068''), ''Input string '020474068' is not a valid number. Path '', line 1, position 9.'')", span="8669-8669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonTextWriterTest.cs"];
m4_3781 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="8667-8667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonTextWriterTest.cs"];
m4_789 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="1716-1716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterTest.cs"];
m4_793 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="1723-1723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterTest.cs"];
m4_795 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="1726-1726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterTest.cs"];
m4_794 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="1725-1725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterTest.cs"];
m4_790 [label="string json = @''[''''PRE\u003cPOST'''']''", span="1718-1718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterTest.cs"];
m4_792 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="1721-1721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterTest.cs"];
m4_791 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="1720-1720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterTest.cs"];
m4_796 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="1716-1716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonTextWriterTest.cs"];
m4_884 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="JsonTextWriterTest.cs"];
m4_1924 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="JsonTextWriterTest.cs"];
m4_2558 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5790-5790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonTextWriterTest.cs"];
m4_2559 [label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n            {\r\n                InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n                NewMember = ''NewMember!''\r\n            }", span="5792-5796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonTextWriterTest.cs"];
m4_2560 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5798-5798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonTextWriterTest.cs"];
m4_2561 [label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="5800-5803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonTextWriterTest.cs"];
m4_2562 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="5790-5790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonTextWriterTest.cs"];
m4_2754 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6248-6248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonTextWriterTest.cs"];
m4_2762 [label="Assert.AreEqual(-1, c2.x)", span="6279-6279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonTextWriterTest.cs"];
m4_2763 [label="Assert.AreEqual(-2, StaticTestClass.y)", span="6280-6280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonTextWriterTest.cs"];
m4_2764 [label="Assert.AreEqual(-3, StaticTestClass.z)", span="6281-6281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonTextWriterTest.cs"];
m4_2761 [label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6269-6277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonTextWriterTest.cs"];
m4_2755 [label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="6250-6250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonTextWriterTest.cs"];
m4_2760 [label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6263-6267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonTextWriterTest.cs"];
m4_2759 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6258-6261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonTextWriterTest.cs"];
m4_2756 [label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6252-6255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonTextWriterTest.cs"];
m4_2758 [label="StaticTestClass.z = 3", span="6257-6257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonTextWriterTest.cs"];
m4_2757 [label="StaticTestClass.y = 2", span="6256-6256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonTextWriterTest.cs"];
m4_2765 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6248-6248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonTextWriterTest.cs"];
m4_117 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextWriterTest.cs"];
m4_580 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1170-1170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonTextWriterTest.cs"];
m4_582 [label="string result = JsonConvert.SerializeObject(cc)", span="1179-1179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonTextWriterTest.cs"];
m4_583 [label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="1180-1180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonTextWriterTest.cs"];
m4_581 [label="var cc = new ChildDataContractWithHidden\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!'',\r\n                NewMember = ''NewMember!''\r\n            }", span="1172-1177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonTextWriterTest.cs"];
m4_584 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1170-1170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonTextWriterTest.cs"];
m4_692 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1482-1482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterTest.cs"];
m4_696 [label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="1488-1488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterTest.cs"];
m4_704 [label="Assert.AreEqual(dateValue, deserializedDate)", span="1502-1502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterTest.cs"];
m4_694 [label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="1485-1485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterTest.cs"];
m4_695 [label="testDictionary[''date''] = dateValue", span="1486-1486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterTest.cs"];
m4_697 [label="MemoryStream ms = new MemoryStream()", span="1491-1491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterTest.cs"];
m4_702 [label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="1499-1499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterTest.cs"];
m4_693 [label="DateTime dateValue = new DateTime(2010, 3, 30)", span="1484-1484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterTest.cs"];
m4_703 [label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="1500-1500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterTest.cs"];
m4_699 [label="serializer.WriteObject(ms, testDictionary)", span="1493-1493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterTest.cs"];
m4_698 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="1492-1492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterTest.cs"];
m4_700 [label="byte[] data = ms.ToArray()", span="1495-1495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterTest.cs"];
m4_701 [label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="1496-1496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterTest.cs"];
m4_705 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1482-1482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonTextWriterTest.cs"];
m4_1857 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonTextWriterTest.cs"];
m4_721 [label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="307-307", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonTextWriterTest.cs"];
m4_720 [label="Entry Unk.AreNotSame", span="", cluster="Unk.AreNotSame", file="JsonTextWriterTest.cs"];
m4_1876 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4155-4155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonTextWriterTest.cs"];
m4_1877 [label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="4157-4157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonTextWriterTest.cs"];
m4_1878 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4155-4155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonTextWriterTest.cs"];
m4_3746 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="8594-8594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonTextWriterTest.cs"];
m4_3752 [label="Assert.AreEqual(''Base'', clonedObject.BaseProperty)", span="8605-8605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonTextWriterTest.cs"];
m4_3753 [label="Assert.AreEqual(''Derived'', clonedObject.DerivedProperty)", span="8606-8606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonTextWriterTest.cs"];
m4_3751 [label="var clonedObject = JsonConvert.DeserializeObject<DerivedConstructorType>(jsonCopy, serializerSettings)", span="8603-8603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonTextWriterTest.cs"];
m4_3748 [label="var serializerSettings = new JsonSerializerSettings()", span="8598-8598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonTextWriterTest.cs"];
m4_3749 [label="var jsonCopy = JsonConvert.SerializeObject(original, serializerSettings)", span="8599-8599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonTextWriterTest.cs"];
m4_3750 [label="Console.WriteLine(original)", span="8601-8601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonTextWriterTest.cs"];
m4_3747 [label="var original = new DerivedConstructorType(''Base'', ''Derived'')", span="8596-8596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonTextWriterTest.cs"];
m4_3754 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="8594-8594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonTextWriterTest.cs"];
m4_463 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriterTest.cs"];
m4_1399 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2975-2975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterTest.cs"];
m4_1402 [label="Assert.AreEqual(''Name!'', c.Name)", span="2999-2999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterTest.cs"];
m4_1403 [label="Assert.AreEqual(3, c.Dictionary.Count)", span="3000-3000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterTest.cs"];
m4_1404 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3001-3001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterTest.cs"];
m4_1405 [label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="3002-3002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterTest.cs"];
m4_1406 [label="Assert.AreEqual(4, c.Collection.Count)", span="3003-3003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterTest.cs"];
m4_1407 [label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="3004-3004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterTest.cs"];
m4_1408 [label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="3005-3005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterTest.cs"];
m4_1409 [label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="3006-3006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterTest.cs"];
m4_1410 [label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="3007-3007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterTest.cs"];
m4_1401 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="2996-2997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterTest.cs"];
m4_1411 [label="Assert.IsNotNull(c.Random)", span="3008-3008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterTest.cs"];
m4_1400 [label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="2977-2994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterTest.cs"];
m4_1412 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2975-2975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonTextWriterTest.cs"];
m4_439 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="JsonTextWriterTest.cs"];
m4_1948 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="JsonTextWriterTest.cs"];
m4_1114 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2290-2290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonTextWriterTest.cs"];
m4_1117 [label="json = JsonConvert.SerializeObject(personRaw)", span="2301-2301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonTextWriterTest.cs"];
m4_1118 [label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="2302-2302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonTextWriterTest.cs"];
m4_1115 [label="PersonRaw personRaw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="2292-2297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonTextWriterTest.cs"];
m4_1116 [label="string json", span="2299-2299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonTextWriterTest.cs"];
m4_1119 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2290-2290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonTextWriterTest.cs"];
m4_812 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonTextWriterTest.cs"];
m4_618 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1351-1351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_624 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1366-1366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_625 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="1368-1374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_619 [label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1353-1359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_623 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1364-1364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_620 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1361-1361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_621 [label="baseWith.Virtual = ''Virtual2!''", span="1362-1362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_622 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1363-1363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_626 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1351-1351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_1850 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4117-4117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonTextWriterTest.cs"];
m4_1851 [label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="4119-4119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonTextWriterTest.cs"];
m4_1852 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4117-4117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonTextWriterTest.cs"];
m4_3823 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1695-1695", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JsonTextWriterTest.cs"];
m4_1331 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonTextWriterTest.cs"];
m4_3215 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7242-7242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonTextWriterTest.cs"];
m4_3217 [label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="7258-7258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonTextWriterTest.cs"];
m4_3220 [label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="7272-7272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonTextWriterTest.cs"];
m4_3218 [label="StringAssert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7259-7262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonTextWriterTest.cs"];
m4_3221 [label="StringAssert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7273-7276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonTextWriterTest.cs"];
m4_3216 [label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7244-7250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonTextWriterTest.cs"];
m4_3219 [label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7264-7270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonTextWriterTest.cs"];
m4_3222 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7242-7242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonTextWriterTest.cs"];
m4_3848 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8839-8839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3849 [label="var encodingName = serializer.Deserialize<string>(reader)", span="8841-8841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3850 [label="encodingName == null", span="8842-8842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3852 [label="return Encoding.GetEncoding(encodingName);", span="8845-8845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3851 [label="return null;", span="8843-8843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3853 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8839-8839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_608 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1321-1321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_614 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1336-1336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_615 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1338-1347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_609 [label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1323-1329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_613 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1334-1334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_610 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1331-1331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_611 [label="baseWith.Virtual = ''Virtual2!''", span="1332-1332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_612 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1333-1333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_616 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1321-1321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_2298 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5121-5121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonTextWriterTest.cs"];
m4_2299 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="5123-5123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonTextWriterTest.cs"];
m4_2300 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5124-5124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonTextWriterTest.cs"];
m4_2301 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5121-5121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonTextWriterTest.cs"];
m4_2504 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5595-5595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonTextWriterTest.cs"];
m4_2506 [label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="5608-5608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonTextWriterTest.cs"];
m4_2507 [label="Assert.AreEqual(true, commentTestClass.Indexed)", span="5610-5610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonTextWriterTest.cs"];
m4_2508 [label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="5611-5611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonTextWriterTest.cs"];
m4_2509 [label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="5612-5612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonTextWriterTest.cs"];
m4_2505 [label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="5597-5606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonTextWriterTest.cs"];
m4_2510 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5595-5595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonTextWriterTest.cs"];
m4_2711 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1649-1649", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonTextWriterTest.cs"];
m4_1479 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3172-3172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonTextWriterTest.cs"];
m4_1481 [label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="3176-3176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonTextWriterTest.cs"];
m4_1482 [label="Assert.AreEqual(null, c.DateTimeField)", span="3177-3177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonTextWriterTest.cs"];
m4_1480 [label="string json = @''{''''DateTimeField'''':''''''''}''", span="3174-3174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonTextWriterTest.cs"];
m4_1483 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3172-3172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonTextWriterTest.cs"];
m4_491 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="377-377", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonTextWriterTest.cs"];
m4_272 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonTextWriterTest.cs"];
m4_833 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="1785-1785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonTextWriterTest.cs"];
m4_835 [label="string result = JsonConvert.SerializeObject(testDates)", span="1795-1795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonTextWriterTest.cs"];
m4_836 [label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="1796-1796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonTextWriterTest.cs"];
m4_834 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="1787-1793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonTextWriterTest.cs"];
m4_837 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="1785-1785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonTextWriterTest.cs"];
m4_554 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonTextWriterTest.cs"];
m4_2945 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6654-6654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonTextWriterTest.cs"];
m4_2946 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringComparison>(''''); }, ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'')", span="6656-6656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonTextWriterTest.cs"];
m4_2947 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6654-6654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonTextWriterTest.cs"];
m4_3191 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7168-7168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonTextWriterTest.cs"];
m4_3198 [label="var jsonReader = new JsonTextReader(new StringReader(json))", span="7171-7171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonTextWriterTest.cs"];
m4_3199 [label="var serializer = new JsonSerializer()", span="7172-7172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonTextWriterTest.cs"];
m4_3201 [label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="7178-7178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonTextWriterTest.cs"];
m4_3200 [label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7173-7176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonTextWriterTest.cs"];
m4_3202 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7168-7168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonTextWriterTest.cs"];
m4_34 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonTextWriterTest.cs"];
m4_2897 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6566-6566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonTextWriterTest.cs"];
m4_2900 [label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6576-6576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonTextWriterTest.cs"];
m4_2904 [label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6588-6588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonTextWriterTest.cs"];
m4_2898 [label="string json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = null\r\n            })", span="6568-6572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonTextWriterTest.cs"];
m4_2902 [label="json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = MyEnum.Value2\r\n            })", span="6580-6584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonTextWriterTest.cs"];
m4_2899 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="6574-6574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonTextWriterTest.cs"];
m4_2901 [label="Assert.AreEqual(null, e.NullableEnum)", span="6578-6578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonTextWriterTest.cs"];
m4_2903 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="6586-6586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonTextWriterTest.cs"];
m4_2905 [label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="6590-6590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonTextWriterTest.cs"];
m4_2906 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6566-6566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonTextWriterTest.cs"];
m4_840 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="1800-1800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonTextWriterTest.cs"];
m4_843 [label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="1811-1811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonTextWriterTest.cs"];
m4_842 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="1810-1810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonTextWriterTest.cs"];
m4_841 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="1802-1808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonTextWriterTest.cs"];
m4_844 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="1800-1800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonTextWriterTest.cs"];
m4_3561 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="8197-8197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonTextWriterTest.cs"];
m4_3566 [label="ParticipantEntity deserializedProduct = JsonConvert.DeserializeObject<ParticipantEntity>(json)", span="8203-8203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonTextWriterTest.cs"];
m4_3564 [label="string json = JsonConvert.SerializeObject(product)", span="8201-8201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonTextWriterTest.cs"];
m4_3565 [label="Console.WriteLine(json)", span="8202-8202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonTextWriterTest.cs"];
m4_3562 [label="ParticipantEntity product = new ParticipantEntity()", span="8199-8199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonTextWriterTest.cs"];
m4_3563 [label="product.Properties = new Dictionary<string, string> { { ''s'', ''d'' } }", span="8200-8200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonTextWriterTest.cs"];
m4_3567 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="8197-8197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonTextWriterTest.cs"];
m4_2749 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonTextWriterTest.cs"];
m4_2054 [label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs"];
m4_520 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonTextWriterTest.cs"];
m4_955 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2023-2023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonTextWriterTest.cs"];
m4_958 [label="string indented = JsonConvert.SerializeObject(obj, settings)", span="2028-2028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonTextWriterTest.cs"];
m4_957 [label="JsonSerializerSettings settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="2027-2027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonTextWriterTest.cs"];
m4_959 [label="string none = JsonConvert.SerializeObject(obj, Formatting.None, settings)", span="2030-2030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonTextWriterTest.cs"];
m4_956 [label="var obj = new { Formatting = ''test'' }", span="2025-2025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonTextWriterTest.cs"];
m4_960 [label="Assert.AreNotEqual(indented, none)", span="2031-2031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonTextWriterTest.cs"];
m4_961 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2023-2023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonTextWriterTest.cs"];
m4_3490 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="7981-7981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonTextWriterTest.cs"];
m4_3492 [label="StringAssert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="7992-7999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonTextWriterTest.cs"];
m4_3491 [label="string json =\r\n                JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n                        IgnoreSerializableAttribute = false\r\n                    }\r\n                })", span="7983-7990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonTextWriterTest.cs"];
m4_3493 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="7981-7981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonTextWriterTest.cs"];
m4_3075 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonTextWriterTest.cs"];
m4_64 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonTextWriterTest.cs"];
m4_781 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonTextWriterTest.cs"];
m4_2865 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6495-6495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonTextWriterTest.cs"];
m4_2866 [label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            })", span="6497-6503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonTextWriterTest.cs"];
m4_2867 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6495-6495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonTextWriterTest.cs"];
m4_2488 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5545-5545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonTextWriterTest.cs"];
m4_2489 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject(''null'', typeof(DateTime)); }, ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'')", span="5547-5547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonTextWriterTest.cs"];
m4_2490 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5545-5545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonTextWriterTest.cs"];
m4_1880 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4162-4162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterTest.cs"];
m4_1885 [label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="4171-4171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterTest.cs"];
m4_1883 [label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="4167-4167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterTest.cs"];
m4_1884 [label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="4169-4169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterTest.cs"];
m4_1886 [label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="4172-4172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterTest.cs"];
m4_1887 [label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="4173-4173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterTest.cs"];
m4_1881 [label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="4164-4164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterTest.cs"];
m4_1882 [label="modelStateDictionary.Add(''key'', ''value'')", span="4165-4165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterTest.cs"];
m4_1888 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4162-4162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonTextWriterTest.cs"];
m4_3755 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="8611-8611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonTextWriterTest.cs"];
m4_3756 [label="DerivedProperty = derivedProperty", span="8614-8614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonTextWriterTest.cs"];
m4_3757 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="8611-8611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonTextWriterTest.cs"];
m4_2053 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="473-473", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonTextWriterTest.cs"];
m4_3077 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1849-1849", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonTextWriterTest.cs"];
m4_992 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="2065-2065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonTextWriterTest.cs"];
m4_2535 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5704-5704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonTextWriterTest.cs"];
m4_2541 [label="Console.WriteLine(xml)", span="5719-5719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonTextWriterTest.cs"];
m4_2538 [label="MemoryStream ms = new MemoryStream()", span="5714-5714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonTextWriterTest.cs"];
m4_2540 [label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="5717-5717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonTextWriterTest.cs"];
m4_2539 [label="serializer.WriteObject(ms, cc)", span="5715-5715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonTextWriterTest.cs"];
m4_2537 [label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="5712-5712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonTextWriterTest.cs"];
m4_2536 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5706-5710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonTextWriterTest.cs"];
m4_2542 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5704-5704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonTextWriterTest.cs"];
m4_2544 [label="Entry System.Convert.ToInt32(long)", span="0-0", cluster="System.Convert.ToInt32(long)", file="JsonTextWriterTest.cs"];
m4_2545 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5746-5746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonTextWriterTest.cs"];
m4_2547 [label="string result = JsonConvert.SerializeObject(cc)", span="5754-5754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonTextWriterTest.cs"];
m4_2548 [label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5755-5755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonTextWriterTest.cs"];
m4_2546 [label="ChildObject cc = new ChildObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5748-5752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonTextWriterTest.cs"];
m4_2549 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="5746-5746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonTextWriterTest.cs"];
m4_991 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonTextWriterTest.cs"];
m4_3669 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="8395-8395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3677 [label="Assert.AreEqual(dt, dt1)", span="8413-8413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3682 [label="Assert.AreEqual(dt, (DateTime)v.Value)", span="8424-8424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3675 [label="Assert.AreEqual(@''''''2000-pie-Ara-Cuma-22'''''', json)", span="8409-8409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3680 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8422-8422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3681 [label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="8423-8423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3685 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="8433-8433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3686 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="8434-8434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3687 [label="Assert.AreEqual(''2000-pie-Dec-Friday-22'', v.Value)", span="8435-8435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3671 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8399-8399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3676 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="8411-8411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3678 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8415-8419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3679 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8420-8420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3683 [label="reader = new JsonTextReader(new StringReader(@''''''2000-pie-Dec-Friday-22''''''))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8426-8430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3674 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="8407-8407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3684 [label="v = (JValue)JToken.ReadFrom(reader)", span="8431-8431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3670 [label="CultureInfo culture = new CultureInfo(''tr-TR'')", span="8397-8397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3672 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8400-8400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3673 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8401-8405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3688 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="8395-8395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonTextWriterTest.cs"];
m4_3798 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="8710-8710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonTextWriterTest.cs"];
m4_3800 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n                {\r\n                    JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter());\r\n                },\r\n                ''Cannot populate list type System.Net.Mime.HeaderCollection. Path 'Headers', line 26, position 15.'')", span="8752-8760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonTextWriterTest.cs"];
m4_3799 [label="string JsonMessage = @''{\r\n  ''''From'''': {\r\n    ''''Address'''': ''''askywalker@theEmpire.gov'''',\r\n    ''''DisplayName'''': ''''Darth Vader''''\r\n  },\r\n  ''''Sender'''': null,\r\n  ''''ReplyTo'''': null,\r\n  ''''ReplyToList'''': [],\r\n  ''''To'''': [\r\n    {\r\n      ''''Address'''': ''''lskywalker@theRebellion.org'''',\r\n      ''''DisplayName'''': ''''Luke Skywalker''''\r\n    }\r\n  ],\r\n  ''''Bcc'''': [],\r\n  ''''CC'''': [\r\n    {\r\n      ''''Address'''': ''''lorgana@alderaan.gov'''',\r\n      ''''DisplayName'''': ''''Princess Leia''''\r\n    }\r\n  ],\r\n  ''''Priority'''': 0,\r\n  ''''DeliveryNotificationOptions'''': 0,\r\n  ''''Subject'''': ''''Family tree'''',\r\n  ''''SubjectEncoding'''': null,\r\n  ''''Headers'''': [],\r\n  ''''HeadersEncoding'''': null,\r\n  ''''Body'''': ''''<strong>I am your father!</strong>'''',\r\n  ''''BodyEncoding'''': ''''US-ASCII'''',\r\n  ''''BodyTransferEncoding'''': -1,\r\n  ''''IsBodyHtml'''': true,\r\n  ''''Attachments'''': [\r\n    {\r\n      ''''FileName'''': ''''skywalker family tree.jpg'''',\r\n      ''''ContentBase64'''': ''''AQIDBAU=''''\r\n    }\r\n  ],\r\n  ''''AlternateViews'''': []\r\n}''", span="8712-8750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonTextWriterTest.cs"];
m4_3801 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="8710-8710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonTextWriterTest.cs"];
m4_469 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="297-297", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonTextWriterTest.cs"];
m4_1619 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3418-3418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterTest.cs"];
m4_1624 [label="string json = JsonConvert.SerializeObject(strings)", span="3426-3426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterTest.cs"];
m4_1625 [label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="3427-3427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterTest.cs"];
m4_1620 [label="List<String> strings = new List<String>()", span="3420-3420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterTest.cs"];
m4_1623 [label="strings.Add(''str_3'')", span="3424-3424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterTest.cs"];
m4_1621 [label="strings.Add(''str_1'')", span="3422-3422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterTest.cs"];
m4_1622 [label="strings.Add(''str_2'')", span="3423-3423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterTest.cs"];
m4_1626 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3418-3418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonTextWriterTest.cs"];
m4_1628 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3431-3431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterTest.cs"];
m4_1632 [label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="3440-3440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterTest.cs"];
m4_1633 [label="Assert.AreEqual(''String!'', c2.A)", span="3441-3441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterTest.cs"];
m4_1634 [label="Assert.AreEqual(int.MaxValue, c2.B)", span="3442-3442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterTest.cs"];
m4_1630 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="3434-3434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterTest.cs"];
m4_1631 [label="StringAssert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="3435-3438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterTest.cs"];
m4_1629 [label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="3433-3433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterTest.cs"];
m4_1635 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3431-3431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonTextWriterTest.cs"];
m4_2908 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6594-6594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonTextWriterTest.cs"];
m4_2911 [label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="6600-6600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonTextWriterTest.cs"];
m4_2909 [label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="6596-6596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonTextWriterTest.cs"];
m4_2910 [label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="6598-6598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonTextWriterTest.cs"];
m4_2912 [label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="6602-6602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonTextWriterTest.cs"];
m4_2913 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6594-6594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonTextWriterTest.cs"];
m4_3125 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6990-6990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonTextWriterTest.cs"];
m4_3127 [label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="7003-7003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonTextWriterTest.cs"];
m4_3129 [label="Assert.AreEqual(2, c2.Data.Count)", span="7006-7006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonTextWriterTest.cs"];
m4_3130 [label="Assert.AreEqual(''one'', c2.Data[0])", span="7007-7007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonTextWriterTest.cs"];
m4_3131 [label="Assert.AreEqual(''two'', c2.Data[1])", span="7008-7008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonTextWriterTest.cs"];
m4_3126 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data =\r\n                    new[]\r\n                    {\r\n                        ''one'',\r\n                        ''two'',\r\n                        ''three''\r\n                    }\r\n            }", span="6992-7001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonTextWriterTest.cs"];
m4_3128 [label="Assert.IsNotNull(c2)", span="7005-7005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonTextWriterTest.cs"];
m4_3132 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="6990-6990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonTextWriterTest.cs"];
m4_118 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonTextWriterTest.cs"];
m4_80 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", span="211-211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", file="JsonTextWriterTest.cs"];
m4_3078 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="JsonTextWriterTest.cs"];
m4_2978 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6706-6706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2980 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6716-6716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2981 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6717-6717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2982 [label="Assert.AreEqual(''Pre'', c.PreField)", span="6718-6718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2983 [label="Assert.AreEqual(''Post'', c.PostField)", span="6719-6719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2985 [label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="6729-6729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2986 [label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="6730-6730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2987 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="6731-6731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2988 [label="Assert.AreEqual(''Post'', c2.PostField)", span="6732-6732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2979 [label="DateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6708-6714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2984 [label="DateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6721-6727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2989 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6706-6706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonTextWriterTest.cs"];
m4_2296 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonTextWriterTest.cs"];
m4_993 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2085-2085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonTextWriterTest.cs"];
m4_996 [label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="2091-2091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonTextWriterTest.cs"];
m4_994 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="2087-2087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonTextWriterTest.cs"];
m4_995 [label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="2089-2089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonTextWriterTest.cs"];
m4_997 [label="Assert.AreEqual(0, c.IgnoredField)", span="2093-2093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonTextWriterTest.cs"];
m4_998 [label="Assert.AreEqual(99, c.Field)", span="2094-2094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonTextWriterTest.cs"];
m4_999 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2085-2085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonTextWriterTest.cs"];
m4_2618 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5943-5943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonTextWriterTest.cs"];
m4_2619 [label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                DerivedClassValue = ''DerivedClassValue!'',\r\n                NonSerialized = ''NonSerialized!''\r\n            }, Formatting.Indented)", span="5945-5950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonTextWriterTest.cs"];
m4_2621 [label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n            }, Formatting.Indented)", span="5957-5961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonTextWriterTest.cs"];
m4_2620 [label="StringAssert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5952-5955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonTextWriterTest.cs"];
m4_2622 [label="StringAssert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="5963-5966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonTextWriterTest.cs"];
m4_2623 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="5943-5943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonTextWriterTest.cs"];
m4_1574 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3325-3325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonTextWriterTest.cs"];
m4_1576 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new Person()); }, @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 1.'')", span="3329-3329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonTextWriterTest.cs"];
m4_1575 [label="string json = @''[]''", span="3327-3327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonTextWriterTest.cs"];
m4_1577 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3325-3325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonTextWriterTest.cs"];
m4_37 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="162-162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonTextWriterTest.cs"];
m4_42 [label="CustomerWithMetadataType c2 = JsonConvert.DeserializeObject<CustomerWithMetadataType>(''{'UpdatedBy_Id':'F6E0666D-13C7-4745-B486-800812C8F6DE'}'')", span="171-171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonTextWriterTest.cs"];
m4_40 [label="string json = JsonConvert.SerializeObject(c)", span="167-167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonTextWriterTest.cs"];
m4_41 [label="Assert.AreEqual(''{}'', json)", span="169-169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonTextWriterTest.cs"];
m4_43 [label="Assert.AreEqual(Guid.Empty, c2.UpdatedBy_Id)", span="173-173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonTextWriterTest.cs"];
m4_38 [label="CustomerWithMetadataType c = new CustomerWithMetadataType()", span="164-164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonTextWriterTest.cs"];
m4_39 [label="c.UpdatedBy_Id = Guid.NewGuid()", span="165-165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonTextWriterTest.cs"];
m4_44 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="162-162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonTextWriterTest.cs"];
m4_1950 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="JsonTextWriterTest.cs"];
m4_3157 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7081-7081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonTextWriterTest.cs"];
m4_3161 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7096-7096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonTextWriterTest.cs"];
m4_3162 [label="Assert.AreEqual(2, dic2.Count)", span="7098-7098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonTextWriterTest.cs"];
m4_3163 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7099-7099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonTextWriterTest.cs"];
m4_3164 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7100-7100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonTextWriterTest.cs"];
m4_3159 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7089-7089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonTextWriterTest.cs"];
m4_3160 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="7091-7094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonTextWriterTest.cs"];
m4_3158 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7083-7087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonTextWriterTest.cs"];
m4_3165 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7081-7081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonTextWriterTest.cs"];
m4_1469 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3153-3153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterTest.cs"];
m4_1471 [label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3157-3157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterTest.cs"];
m4_1474 [label="Assert.AreEqual(2, values.Count)", span="3165-3165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterTest.cs"];
m4_1475 [label="Assert.AreEqual(''value1'', values[''key1''])", span="3166-3166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterTest.cs"];
m4_1476 [label="Assert.AreEqual(''value2'', values[''key2''])", span="3167-3167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterTest.cs"];
m4_1470 [label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="3155-3155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterTest.cs"];
m4_1472 [label="Console.WriteLine(values.Count)", span="3159-3159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterTest.cs"];
m4_1473 [label="Console.WriteLine(values[''key1''])", span="3162-3162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterTest.cs"];
m4_1477 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3153-3153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonTextWriterTest.cs"];
m4_1733 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="3734-3734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonTextWriterTest.cs"];
m4_1734 [label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="3736-3736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonTextWriterTest.cs"];
m4_1735 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="3734-3734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonTextWriterTest.cs"];
m4_2709 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonTextWriterTest.cs"];
m4_3650 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="8356-8356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3657 [label="Assert.AreEqual(dt, dt1)", span="8371-8371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3662 [label="Assert.AreEqual(dt, (DateTime)v.Value)", span="8381-8381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3655 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="8367-8367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3660 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8379-8379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3661 [label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="8380-8380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3665 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="8389-8389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3666 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="8390-8390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3667 [label="Assert.AreEqual(''abc'', v.Value)", span="8391-8391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3651 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8358-8358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3656 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="8369-8369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3658 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8373-8376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3659 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8377-8377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3663 [label="reader = new JsonTextReader(new StringReader(@''''''abc''''''))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8383-8386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3654 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="8365-8365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3664 [label="v = (JValue)JToken.ReadFrom(reader)", span="8387-8387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3652 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8359-8359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3653 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8360-8363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_3668 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="8356-8356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonTextWriterTest.cs"];
m4_2360 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5248-5248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonTextWriterTest.cs"];
m4_2362 [label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5251-5251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonTextWriterTest.cs"];
m4_2363 [label="Assert.AreEqual(123456789876543.21m, a[0])", span="5252-5252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonTextWriterTest.cs"];
m4_2361 [label="string json = ''[123456789876543.21]''", span="5250-5250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonTextWriterTest.cs"];
m4_2364 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5248-5248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonTextWriterTest.cs"];
m4_1500 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3202-3202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonTextWriterTest.cs"];
m4_1502 [label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="3206-3206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonTextWriterTest.cs"];
m4_1501 [label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="3204-3204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonTextWriterTest.cs"];
m4_1503 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3202-3202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonTextWriterTest.cs"];
m4_1710 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="JsonTextWriterTest.cs"];
m4_1018 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2125-2125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1021 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2130-2130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1023 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2134-2134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1020 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2129-2129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1022 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2132-2132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1019 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2127-2127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_1024 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2125-2125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonTextWriterTest.cs"];
m4_3341 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7572-7572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_3344 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7579-7579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_3346 [label="Assert.AreEqual(500, obj.Item1)", span="7585-7585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_3343 [label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="7575-7578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_3345 [label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="7581-7584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_3342 [label="var tuple = Tuple.Create(500)", span="7574-7574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_3347 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7572-7572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonTextWriterTest.cs"];
m4_1957 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="JsonTextWriterTest.cs"];
m4_1130 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2319-2319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterTest.cs"];
m4_1134 [label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="2336-2336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterTest.cs"];
m4_1132 [label="string json = JsonConvert.SerializeObject(userNullablle)", span="2332-2332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterTest.cs"];
m4_1133 [label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="2334-2334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterTest.cs"];
m4_1135 [label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="2338-2338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterTest.cs"];
m4_1136 [label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="2339-2339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterTest.cs"];
m4_1137 [label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="2340-2340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterTest.cs"];
m4_1138 [label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="2341-2341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterTest.cs"];
m4_1139 [label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="2342-2342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterTest.cs"];
m4_1140 [label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="2343-2343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterTest.cs"];
m4_1141 [label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="2344-2344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterTest.cs"];
m4_1131 [label="UserNullable userNullablle = new UserNullable\r\n            {\r\n                Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                FName = ''FirstValue'',\r\n                LName = ''LastValue'',\r\n                RoleId = 5,\r\n                NullableRoleId = 6,\r\n                NullRoleId = null,\r\n                Active = true\r\n            }", span="2321-2330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterTest.cs"];
m4_1142 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2319-2319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonTextWriterTest.cs"];
m4_1000 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonTextWriterTest.cs"];
m4_1613 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3401-3401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonTextWriterTest.cs"];
m4_1614 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'')", span="3403-3414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonTextWriterTest.cs"];
m4_1615 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3401-3401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonTextWriterTest.cs"];
m4_2637 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5999-5999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonTextWriterTest.cs"];
m4_2641 [label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="6010-6010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonTextWriterTest.cs"];
m4_2642 [label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="6011-6011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonTextWriterTest.cs"];
m4_2639 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6003-6003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonTextWriterTest.cs"];
m4_2640 [label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="6004-6008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonTextWriterTest.cs"];
m4_2638 [label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="6001-6001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonTextWriterTest.cs"];
m4_2643 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="5999-5999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonTextWriterTest.cs"];
m4_3399 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="7766-7766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m4_3404 [label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="7778-7778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m4_3401 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7769-7769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m4_3403 [label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="7776-7776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m4_3405 [label="string json = sw.ToString()", span="7780-7780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m4_3400 [label="StringWriter sw = new StringWriter()", span="7768-7768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m4_3402 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n                Formatting = Formatting.Indented\r\n            })", span="7771-7775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m4_3406 [label="StringAssert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="7782-7784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m4_3407 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="7766-7766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m4_2320 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="5162-5162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="JsonTextWriterTest.cs"];
m4_1953 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="JsonTextWriterTest.cs"];
m4_1560 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3299-3299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonTextWriterTest.cs"];
m4_1561 [label="string json = @''[new Constructor(123)]''", span="3301-3301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonTextWriterTest.cs"];
m4_1562 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Person>>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]', line 1, position 17.'')", span="3303-3303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonTextWriterTest.cs"];
m4_1563 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3299-3299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonTextWriterTest.cs"];
m4_1648 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonTextWriterTest.cs"];
m4_2990 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonTextWriterTest.cs"];
m4_471 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="981-981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonTextWriterTest.cs"];
m4_474 [label="Regex r2 = JsonConvert.DeserializeObject<Regex>(json)", span="987-987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonTextWriterTest.cs"];
m4_475 [label="Assert.AreEqual(''(hi)'', r2.ToString())", span="989-989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonTextWriterTest.cs"];
m4_476 [label="Assert.AreEqual(RegexOptions.CultureInvariant, r2.Options)", span="990-990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonTextWriterTest.cs"];
m4_473 [label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented)", span="985-985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonTextWriterTest.cs"];
m4_472 [label="Regex regex = new Regex(''(hi)'', RegexOptions.CultureInvariant)", span="983-983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonTextWriterTest.cs"];
m4_477 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="981-981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonTextWriterTest.cs"];
m4_1360 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="2874-2874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterTest.cs"];
m4_1367 [label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="2888-2892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterTest.cs"];
m4_1368 [label="Assert.AreEqual(26, newOptInClass.Age)", span="2893-2893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterTest.cs"];
m4_1369 [label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="2894-2894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterTest.cs"];
m4_1370 [label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="2895-2895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterTest.cs"];
m4_1366 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="2883-2886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterTest.cs"];
m4_1365 [label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="2881-2881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterTest.cs"];
m4_1361 [label="OptInClass optInClass = new OptInClass()", span="2876-2876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterTest.cs"];
m4_1364 [label="optInClass.NotIncluded = ''Poor me :(''", span="2879-2879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterTest.cs"];
m4_1362 [label="optInClass.Age = 26", span="2877-2877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterTest.cs"];
m4_1363 [label="optInClass.Name = ''James NK''", span="2878-2878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterTest.cs"];
m4_1371 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="2874-2874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonTextWriterTest.cs"];
m4_798 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonTextWriterTest.cs"];
m4_1245 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="2576-2576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterTest.cs"];
m4_1247 [label="string defaultJson = JsonConvert.SerializeObject(entry)", span="2584-2584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterTest.cs"];
m4_1246 [label="LogEntry entry = new LogEntry\r\n            {\r\n                LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                Details = ''Application started.''\r\n            }", span="2578-2582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterTest.cs"];
m4_1248 [label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="2587-2587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterTest.cs"];
m4_1250 [label="Console.WriteLine(defaultJson)", span="2593-2593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterTest.cs"];
m4_1249 [label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="2590-2590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterTest.cs"];
m4_1251 [label="Console.WriteLine(isoJson)", span="2594-2594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterTest.cs"];
m4_1252 [label="Console.WriteLine(javascriptJson)", span="2595-2595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterTest.cs"];
m4_1253 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="2576-2576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonTextWriterTest.cs"];
m4_706 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1506-1506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterTest.cs"];
m4_711 [label="string output = JsonConvert.SerializeObject(executorObject)", span="1513-1513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterTest.cs"];
m4_714 [label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="1518-1518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterTest.cs"];
m4_715 [label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="1519-1519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterTest.cs"];
m4_717 [label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="1521-1521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterTest.cs"];
m4_707 [label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="1508-1508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterTest.cs"];
m4_710 [label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="1511-1511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterTest.cs"];
m4_712 [label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="1515-1515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterTest.cs"];
m4_713 [label="Assert.AreNotSame(executorObject, executorObject2)", span="1517-1517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterTest.cs"];
m4_716 [label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="1520-1520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterTest.cs"];
m4_708 [label="executorObject.serverClassName = ''BanSubs''", span="1509-1509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterTest.cs"];
m4_709 [label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="1510-1510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterTest.cs"];
m4_718 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1506-1506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonTextWriterTest.cs"];
m4_944 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonTextWriterTest.cs"];
m4_2624 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="5883-5883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="JsonTextWriterTest.cs"];
m4_1920 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="JsonTextWriterTest.cs"];
m4_501 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1051-1051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_503 [label="var deserialized = JsonConvert.DeserializeObject<Foo1>(json)", span="1054-1054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_504 [label="Assert.AreEqual(''value'', deserialized.foo)", span="1055-1055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_502 [label="var json = @''{''''foo'''':''''value''''}''", span="1053-1053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_505 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1051-1051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_2686 [label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="JsonTextWriterTest.cs"];
m4_3030 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6837-6837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3033 [label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="6842-6842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3032 [label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="6840-6840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3031 [label="Color color = (Color)value", span="6839-6839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3034 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="6837-6837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_646 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="JsonTextWriterTest.cs"];
m4_3620 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="8297-8297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3621 [label="throw new InvalidCastException();", span="8299-8299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3622 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="8297-8297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_2277 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5075-5075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonTextWriterTest.cs"];
m4_2281 [label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="5088-5088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonTextWriterTest.cs"];
m4_2282 [label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="5090-5090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonTextWriterTest.cs"];
m4_2279 [label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="5082-5082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonTextWriterTest.cs"];
m4_2280 [label="StringAssert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="5084-5086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonTextWriterTest.cs"];
m4_2278 [label="StructWithAttribute testStruct = new StructWithAttribute\r\n            {\r\n                MyInt = int.MaxValue\r\n            }", span="5077-5080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonTextWriterTest.cs"];
m4_2283 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5075-5075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonTextWriterTest.cs"];
m4_46 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="JsonTextWriterTest.cs"];
m4_1927 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="JsonTextWriterTest.cs"];
m4_1282 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="2677-2677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_1285 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="2685-2685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_1286 [label="Assert.AreEqual(21, c.TestProperty2)", span="2686-2686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_1288 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="2692-2692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_1289 [label="Assert.AreEqual(21, c.TestProperty2)", span="2693-2693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_1284 [label="ConstructorAndDefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="2681-2684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_1287 [label="c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="2688-2691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_1283 [label="string json = ''{ 'testProperty1': 'value' }''", span="2679-2679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_1290 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="2677-2677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonTextWriterTest.cs"];
m4_666 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="728-728", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonTextWriterTest.cs"];
m4_1244 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonTextWriterTest.cs"];
m4_3527 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JsonTextWriterTest.cs"];
m4_2105 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="4666-4666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonTextWriterTest.cs"];
m4_2442 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="129-129", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonTextWriterTest.cs"];
m4_2494 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5551-5551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonTextWriterTest.cs"];
m4_2496 [label="Assert.IsNull(dateTime)", span="5555-5555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonTextWriterTest.cs"];
m4_2495 [label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="5553-5553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonTextWriterTest.cs"];
m4_2497 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5551-5551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonTextWriterTest.cs"];
m4_3210 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7233-7233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonTextWriterTest.cs"];
m4_3212 [label="Assert.AreEqual(@''{}'', json)", span="7236-7236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonTextWriterTest.cs"];
m4_3211 [label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="7235-7235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonTextWriterTest.cs"];
m4_3213 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7233-7233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonTextWriterTest.cs"];
m4_2798 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6363-6363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_2801 [label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="6369-6369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_2800 [label="string json = JsonConvert.SerializeObject(d1)", span="6367-6367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_2802 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6371-6371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_2803 [label="Assert.AreEqual(d1[0], d2[0])", span="6372-6372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_2799 [label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="6365-6365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_2804 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6363-6363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3410 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="7795-7795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonTextWriterTest.cs"];
m4_3411 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]''), ''Cannot deserialize readonly or fixed size list: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyCollection`1[System.Int32]. Path '', line 1, position 1.'')", span="7797-7797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonTextWriterTest.cs"];
m4_3412 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="7795-7795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonTextWriterTest.cs"];
m4_395 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="214-214", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonTextWriterTest.cs"];
m4_1923 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="JsonTextWriterTest.cs"];
m4_3316 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7499-7499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonTextWriterTest.cs"];
m4_3318 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="7505-7505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonTextWriterTest.cs"];
m4_3320 [label="Assert.AreEqual(900, i)", span="7510-7510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonTextWriterTest.cs"];
m4_3317 [label="string json = @''[\r\n        900\r\n      ]''", span="7501-7503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonTextWriterTest.cs"];
m4_3319 [label="int i = l[0]", span="7507-7507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonTextWriterTest.cs"];
m4_3321 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7499-7499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonTextWriterTest.cs"];
m4_494 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1042-1042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_496 [label="var json = JsonConvert.SerializeObject(original)", span="1045-1045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_498 [label="Assert.AreEqual(expectedJson, json)", span="1047-1047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_495 [label="var original = new Foo1 { foo = ''value'' }", span="1044-1044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_497 [label="var expectedJson = @''{''''foo'''':''''value''''}''", span="1046-1046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_499 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1042-1042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_2302 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5128-5128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonTextWriterTest.cs"];
m4_2304 [label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="5135-5135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonTextWriterTest.cs"];
m4_2309 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5144-5144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonTextWriterTest.cs"];
m4_2310 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5145-5145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonTextWriterTest.cs"];
m4_2303 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="5130-5133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonTextWriterTest.cs"];
m4_2305 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5137-5137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonTextWriterTest.cs"];
m4_2308 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5142-5142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonTextWriterTest.cs"];
m4_2306 [label="JsonSerializer serializer = new JsonSerializer()", span="5139-5139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonTextWriterTest.cs"];
m4_2307 [label="serializer.DateParseHandling = DateParseHandling.None", span="5140-5140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonTextWriterTest.cs"];
m4_2311 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5128-5128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonTextWriterTest.cs"];
m4_1122 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2306-2306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonTextWriterTest.cs"];
m4_1124 [label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="2310-2310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonTextWriterTest.cs"];
m4_1125 [label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="2312-2312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonTextWriterTest.cs"];
m4_1126 [label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="2313-2313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonTextWriterTest.cs"];
m4_1127 [label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="2314-2314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonTextWriterTest.cs"];
m4_1123 [label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="2308-2308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonTextWriterTest.cs"];
m4_1128 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2306-2306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonTextWriterTest.cs"];
m4_270 [label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", span="0-0", cluster="System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", file="JsonTextWriterTest.cs"];
m4_2343 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="JsonTextWriterTest.cs"];
m4_2020 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="4597-4597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterTest.cs"];
m4_2057 [label="AA_field1 = f", span="4599-4599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterTest.cs"];
m4_2058 [label="AA_field2 = f", span="4600-4600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterTest.cs"];
m4_2059 [label="AA_property1 = f", span="4601-4601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterTest.cs"];
m4_2060 [label="AA_property2 = f", span="4602-4602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterTest.cs"];
m4_2061 [label="AA_property3 = f", span="4603-4603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterTest.cs"];
m4_2062 [label="AA_property4 = f", span="4604-4604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterTest.cs"];
m4_2063 [label="AA_property5 = f", span="4605-4605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterTest.cs"];
m4_2064 [label="AA_property6 = f", span="4606-4606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterTest.cs"];
m4_2065 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="4597-4597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonTextWriterTest.cs"];
m4_427 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="888-888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_428 [label="_serializationInfo == null", span="890-890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_430 [label="_stringValue = _serializationInfo.GetString(''stringValue'')", span="893-893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_431 [label="_intValue = _serializationInfo.GetInt32(''intValue'')", span="894-894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_432 [label="_person1 = (PersonReference)_serializationInfo.GetValue(''person1'', typeof(PersonReference))", span="895-895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_433 [label="_person2 = (PersonReference)_serializationInfo.GetValue(''person2'', typeof(PersonReference))", span="896-896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_434 [label="_person3 = (PersonReference)_serializationInfo.GetValue(''person3'', typeof(PersonReference))", span="897-897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_435 [label="_parent = (PreserveReferencesCallbackTestObject)_serializationInfo.GetValue(''parent'', typeof(PreserveReferencesCallbackTestObject))", span="898-898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_436 [label="_serializationInfo = null", span="900-900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_429 [label="return;", span="891-891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_437 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="888-888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_2224 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4946-4946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonTextWriterTest.cs"];
m4_2225 [label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="4948-4948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonTextWriterTest.cs"];
m4_2226 [label="StringAssert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="4950-4954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonTextWriterTest.cs"];
m4_2227 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="4946-4946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonTextWriterTest.cs"];
m4_1849 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonTextWriterTest.cs"];
m4_3133 [label="Entry Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", file="JsonTextWriterTest.cs"];
m4_1001 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2098-2098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterTest.cs"];
m4_1004 [label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="2104-2104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterTest.cs"];
m4_1003 [label="string json = JsonConvert.SerializeObject(c)", span="2102-2102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterTest.cs"];
m4_1005 [label="Assert.AreEqual(''param1'', deserialized.param1)", span="2106-2106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterTest.cs"];
m4_1006 [label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="2107-2107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterTest.cs"];
m4_1007 [label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="2108-2108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterTest.cs"];
m4_1002 [label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="2100-2100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterTest.cs"];
m4_1008 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2098-2098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonTextWriterTest.cs"];
m4_1478 [label="Entry System.Console.WriteLine(int)", span="0-0", cluster="System.Console.WriteLine(int)", file="JsonTextWriterTest.cs"];
m4_2260 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5032-5032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterTest.cs"];
m4_2265 [label="StringDictionaryTestClass d = JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5051-5051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterTest.cs"];
m4_2266 [label="Assert.AreEqual(3, d.StringDictionaryProperty.Count)", span="5053-5053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterTest.cs"];
m4_2267 [label="Assert.AreEqual(''One'', d.StringDictionaryProperty[''1''])", span="5054-5054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterTest.cs"];
m4_2268 [label="Assert.AreEqual(''II'', d.StringDictionaryProperty[''2''])", span="5055-5055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterTest.cs"];
m4_2269 [label="Assert.AreEqual(''3'', d.StringDictionaryProperty[''3''])", span="5056-5056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterTest.cs"];
m4_2263 [label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="5046-5046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterTest.cs"];
m4_2264 [label="s1.StringDictionaryProperty is IDictionary<string, string>", span="5049-5049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterTest.cs"];
m4_2262 [label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n            {\r\n                StringDictionaryProperty = new StringDictionary()\r\n                {\r\n                    { ''1'', ''One'' },\r\n                    { ''2'', ''II'' },\r\n                    { ''3'', ''3'' }\r\n                }\r\n            }", span="5036-5044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterTest.cs"];
m4_2270 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringDictionaryTestClass>(json); }, ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 32.'')", span="5060-5060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterTest.cs"];
m4_2261 [label="string classRef = typeof(StringDictionary).FullName", span="5034-5034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterTest.cs"];
m4_2271 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5032-5032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonTextWriterTest.cs"];
m4_1785 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="3911-3911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonTextWriterTest.cs"];
m4_1792 [label="CircularConstructor1 newC1 = JsonConvert.DeserializeObject<CircularConstructor1>(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1,\r\n    ''''C1'''': {}\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'')", span="3939-3945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonTextWriterTest.cs"];
m4_1793 [label="Assert.AreEqual(''Value!'', newC1.StringProperty)", span="3947-3947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonTextWriterTest.cs"];
m4_1794 [label="Assert.AreEqual(1, newC1.C2.IntProperty)", span="3948-3948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonTextWriterTest.cs"];
m4_1795 [label="Assert.AreEqual(null, newC1.C2.C1.StringProperty)", span="3949-3949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonTextWriterTest.cs"];
m4_1796 [label="Assert.AreEqual(null, newC1.C2.C1.C2)", span="3950-3950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonTextWriterTest.cs"];
m4_1791 [label="StringAssert.AreEqual(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'', json)", span="3932-3937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonTextWriterTest.cs"];
m4_1790 [label="string json = JsonConvert.SerializeObject(c1, new JsonSerializerSettings\r\n            {\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            })", span="3926-3930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonTextWriterTest.cs"];
m4_1786 [label="CircularConstructor1 c1 = new CircularConstructor1(null)\r\n            {\r\n                StringProperty = ''Value!''\r\n            }", span="3913-3916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonTextWriterTest.cs"];
m4_1789 [label="c2.C1 = c1", span="3924-3924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonTextWriterTest.cs"];
m4_1787 [label="CircularConstructor2 c2 = new CircularConstructor2(null)\r\n            {\r\n                IntProperty = 1\r\n            }", span="3918-3921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonTextWriterTest.cs"];
m4_1788 [label="c1.C2 = c2", span="3923-3923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonTextWriterTest.cs"];
m4_1797 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="3911-3911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonTextWriterTest.cs"];
m4_969 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2044-2044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonTextWriterTest.cs"];
m4_973 [label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="2051-2051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonTextWriterTest.cs"];
m4_971 [label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="2048-2048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonTextWriterTest.cs"];
m4_974 [label="Assert.AreEqual(guid, c.GuidField)", span="2052-2052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonTextWriterTest.cs"];
m4_972 [label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="2049-2049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonTextWriterTest.cs"];
m4_970 [label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="2046-2046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonTextWriterTest.cs"];
m4_975 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2044-2044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonTextWriterTest.cs"];
m4_3807 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", span="8832-8832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", file="JsonTextWriterTest.cs"];
m4_2390 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5310-5310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonTextWriterTest.cs"];
m4_2391 [label="IDoWork = doWork", span="5313-5313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonTextWriterTest.cs"];
m4_2392 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5310-5310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonTextWriterTest.cs"];
m4_2849 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", file="JsonTextWriterTest.cs"];
m4_2557 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="5739-5739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="JsonTextWriterTest.cs"];
m4_2967 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6684-6684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonTextWriterTest.cs"];
m4_2968 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject(null); },\r\n                new [] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="6686-6691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonTextWriterTest.cs"];
m4_2969 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6684-6684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonTextWriterTest.cs"];
m4_880 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="1882-1882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonTextWriterTest.cs"];
m4_881 [label="string json = JsonConvert.SerializeObject(new object())", span="1884-1884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonTextWriterTest.cs"];
m4_882 [label="Assert.AreEqual(''{}'', json)", span="1885-1885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonTextWriterTest.cs"];
m4_883 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="1882-1882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonTextWriterTest.cs"];
m4_2092 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonTextWriterTest.cs"];
m4_1372 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="2854-2854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonTextWriterTest.cs"];
m4_1036 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonTextWriterTest.cs"];
m4_2211 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4918-4918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonTextWriterTest.cs"];
m4_2212 [label="return new DictionaryKey() { Value = value };", span="4920-4920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonTextWriterTest.cs"];
m4_2213 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="4918-4918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonTextWriterTest.cs"];
m4_2529 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5685-5685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonTextWriterTest.cs"];
m4_2531 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5693-5693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonTextWriterTest.cs"];
m4_2532 [label="Console.WriteLine(result)", span="5700-5700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonTextWriterTest.cs"];
m4_2530 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5687-5691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonTextWriterTest.cs"];
m4_2533 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5685-5685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonTextWriterTest.cs"];
m4_2528 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="5648-5648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="JsonTextWriterTest.cs"];
m4_2747 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="344-344", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonTextWriterTest.cs"];
m4_1453 [label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonTextWriterTest.cs"];
m4_1821 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonTextWriterTest.cs"];
m4_2052 [label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonTextWriterTest.cs"];
m4_3074 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="265-265", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="JsonTextWriterTest.cs"];
m4_934 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="1960-1960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterTest.cs"];
m4_939 [label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="2002-2002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterTest.cs"];
m4_940 [label="Assert.AreEqual(''string'', c.String)", span="2003-2003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterTest.cs"];
m4_941 [label="Assert.AreEqual(double.MaxValue, c.Double)", span="2004-2004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterTest.cs"];
m4_942 [label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="2006-2006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterTest.cs"];
m4_935 [label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="1962-1962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterTest.cs"];
m4_938 [label="StringAssert.AreEqual(expected, json)", span="2000-2000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterTest.cs"];
m4_936 [label="string expected = null", span="1964-1964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterTest.cs"];
m4_937 [label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="1966-1981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterTest.cs"];
m4_943 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="1960-1960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonTextWriterTest.cs"];
m4_2248 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5009-5009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterTest.cs"];
m4_2255 [label="Assert.AreEqual(2, z.Length)", span="5020-5020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterTest.cs"];
m4_2256 [label="Assert.AreEqual(0, z[0].Prop1.Length)", span="5021-5021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterTest.cs"];
m4_2257 [label="Assert.AreEqual(0, z[1].Prop1.Length)", span="5022-5022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterTest.cs"];
m4_2254 [label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="5019-5019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterTest.cs"];
m4_2249 [label="JsonSerializer serializer1 = new JsonSerializer()", span="5011-5011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterTest.cs"];
m4_2253 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5017-5017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterTest.cs"];
m4_2250 [label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="5012-5012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterTest.cs"];
m4_2251 [label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="5013-5013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterTest.cs"];
m4_2252 [label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="5015-5015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterTest.cs"];
m4_2258 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5009-5009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonTextWriterTest.cs"];
m4_1424 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3036-3036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterTest.cs"];
m4_1427 [label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="3052-3052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterTest.cs"];
m4_1429 [label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="3055-3055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterTest.cs"];
m4_1430 [label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="3056-3056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterTest.cs"];
m4_1431 [label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="3057-3057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterTest.cs"];
m4_1426 [label="JObject o = JObject.Parse(json)", span="3050-3050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterTest.cs"];
m4_1428 [label="Assert.IsNotNull(s)", span="3053-3053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterTest.cs"];
m4_1425 [label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="3038-3048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterTest.cs"];
m4_1432 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3036-3036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonTextWriterTest.cs"];
m4_68 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="249-249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonTextWriterTest.cs"];
m4_76 [label="FaqItemProxy c2 = JsonConvert.DeserializeObject<FaqItemProxy>(json)", span="270-270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonTextWriterTest.cs"];
m4_77 [label="Assert.AreEqual(1, c2.FaqId)", span="272-272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonTextWriterTest.cs"];
m4_78 [label="Assert.AreEqual(1, c2.Sections.Count)", span="273-273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonTextWriterTest.cs"];
m4_73 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="256-256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonTextWriterTest.cs"];
m4_75 [label="StringAssert.AreEqual(@''{\r\n  ''''IsProxy'''': true,\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="260-268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonTextWriterTest.cs"];
m4_69 [label="FaqItemProxy c = new FaqItemProxy()", span="251-251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonTextWriterTest.cs"];
m4_72 [label="c.IsProxy = true", span="254-254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonTextWriterTest.cs"];
m4_74 [label="Console.WriteLine(json)", span="258-258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonTextWriterTest.cs"];
m4_70 [label="c.FaqId = 1", span="252-252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonTextWriterTest.cs"];
m4_71 [label="c.Sections.Add(new FaqSection())", span="253-253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonTextWriterTest.cs"];
m4_79 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="249-249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonTextWriterTest.cs"];
m4_2780 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6323-6323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonTextWriterTest.cs"];
m4_2786 [label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="6336-6336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonTextWriterTest.cs"];
m4_2787 [label="Assert.AreEqual(1.5m, c.Quantity)", span="6338-6338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonTextWriterTest.cs"];
m4_2788 [label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="6339-6339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonTextWriterTest.cs"];
m4_2785 [label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="6334-6334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonTextWriterTest.cs"];
m4_2784 [label="Thread.CurrentThread.CurrentUICulture = testCulture", span="6332-6332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonTextWriterTest.cs"];
m4_2782 [label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="6329-6329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonTextWriterTest.cs"];
m4_2783 [label="Thread.CurrentThread.CurrentCulture = testCulture", span="6331-6331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonTextWriterTest.cs"];
m4_2781 [label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="6325-6325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonTextWriterTest.cs"];
m4_2789 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6323-6323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonTextWriterTest.cs"];
m4_1255 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="2598-2598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterTest.cs"];
m4_1262 [label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="2636-2636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterTest.cs"];
m4_1264 [label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="2639-2639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterTest.cs"];
m4_1265 [label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="2640-2640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterTest.cs"];
m4_1266 [label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="2641-2641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterTest.cs"];
m4_1261 [label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="2618-2634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterTest.cs"];
m4_1260 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="2616-2616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterTest.cs"];
m4_1263 [label="Assert.IsNotNull(deserializedObject)", span="2637-2637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterTest.cs"];
m4_1256 [label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="2600-2600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterTest.cs"];
m4_1259 [label="o.IEnumerableProperty = new List<int>\r\n            {\r\n                4, 5, 6\r\n            }", span="2611-2614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterTest.cs"];
m4_1257 [label="o.IDictionaryProperty = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 },\r\n                { ''three'', 3 }\r\n            }", span="2601-2606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterTest.cs"];
m4_1258 [label="o.IListProperty = new List<int>\r\n            {\r\n                1, 2, 3\r\n            }", span="2607-2610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterTest.cs"];
m4_1267 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="2598-2598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonTextWriterTest.cs"];
m4_2715 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6189-6189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonTextWriterTest.cs"];
m4_2719 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6194-6194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonTextWriterTest.cs"];
m4_2718 [label="string json = JsonConvert.SerializeObject(uri)", span="6193-6193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonTextWriterTest.cs"];
m4_2720 [label="Assert.AreEqual(uri, output)", span="6196-6196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonTextWriterTest.cs"];
m4_2717 [label="Uri uri = new Uri(input)", span="6192-6192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonTextWriterTest.cs"];
m4_2716 [label="string input = ''http://test.com/%22foo+bar%22''", span="6191-6191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonTextWriterTest.cs"];
m4_2721 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6189-6189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonTextWriterTest.cs"];
m4_3806 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", span="8797-8797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", file="JsonTextWriterTest.cs"];
m4_3608 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="8277-8277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3609 [label="return (long)Value;", span="8279-8279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3610 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="8277-8277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_2115 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="4750-4750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="JsonTextWriterTest.cs"];
m4_1349 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="2821-2821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterTest.cs"];
m4_1351 [label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="2841-2841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterTest.cs"];
m4_1353 [label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="2844-2844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterTest.cs"];
m4_1352 [label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="2842-2842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterTest.cs"];
m4_1354 [label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="2845-2845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterTest.cs"];
m4_1355 [label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="2846-2846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterTest.cs"];
m4_1356 [label="Assert.AreEqual(8, n.FidOrder.Count)", span="2847-2847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterTest.cs"];
m4_1357 [label="Assert.AreEqual(''id'', n.FidOrder[0])", span="2848-2848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterTest.cs"];
m4_1358 [label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="2849-2849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterTest.cs"];
m4_1350 [label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="2823-2839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterTest.cs"];
m4_1359 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="2821-2821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonTextWriterTest.cs"];
m4_3519 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8090-8090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonTextWriterTest.cs"];
m4_3522 [label="Dictionary<Size, Size> d = JsonConvert.DeserializeObject<Dictionary<Size, Size>>(json)", span="8098-8098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonTextWriterTest.cs"];
m4_3520 [label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<Size, Size> { { new Size(1, 2), new Size(3, 4) } }\r\n                )", span="8092-8094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonTextWriterTest.cs"];
m4_3521 [label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="8096-8096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonTextWriterTest.cs"];
m4_3523 [label="Assert.AreEqual(new Size(1, 2), d.Keys.First())", span="8100-8100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonTextWriterTest.cs"];
m4_3524 [label="Assert.AreEqual(new Size(3, 4), d.Values.First())", span="8101-8101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonTextWriterTest.cs"];
m4_3525 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8090-8090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonTextWriterTest.cs"];
m4_2412 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5398-5398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_2419 [label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="5409-5409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_2423 [label="s = JsonConvert.SerializeObject(barWithNull)", span="5415-5415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_2421 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5411-5411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_2422 [label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="5412-5412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_2425 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5417-5417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_2426 [label="Assert.AreEqual(deserialized.Foo2, null)", span="5418-5418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_2413 [label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="5400-5400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_2418 [label="barWithNull.Foo2 = null", span="5406-5406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_2420 [label="NullableStructPropertyClass deserialized = deserialize(s)", span="5410-5410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_2416 [label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="5404-5404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_2424 [label="deserialized = deserialize(s)", span="5416-5416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_2414 [label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5401-5401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_2415 [label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="5402-5402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_2417 [label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5405-5405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_2427 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5398-5398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonTextWriterTest.cs"];
m4_1163 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonTextWriterTest.cs"];
m4_1144 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2348-2348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonTextWriterTest.cs"];
m4_1146 [label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="2352-2352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonTextWriterTest.cs"];
m4_1147 [label="Assert.AreEqual(1, c.Height)", span="2353-2353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonTextWriterTest.cs"];
m4_1145 [label="string json = @''{''''Height'''':1}''", span="2350-2350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonTextWriterTest.cs"];
m4_1148 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2348-2348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonTextWriterTest.cs"];
m4_199 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonTextWriterTest.cs"];
m4_200 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonTextWriterTest.cs"];
m4_3785 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="8673-8673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonTextWriterTest.cs"];
m4_3787 [label="var d = JsonConvert.DeserializeObject<DerivedWithPrivate>(json)", span="8680-8680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonTextWriterTest.cs"];
m4_3788 [label="Assert.AreEqual(''base'', d.BaseProperty)", span="8682-8682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonTextWriterTest.cs"];
m4_3789 [label="Assert.AreEqual(''derived'', d.DerivedProperty)", span="8683-8683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonTextWriterTest.cs"];
m4_3786 [label="string json = @''{\r\n  ''''DerivedProperty'''': ''''derived'''',\r\n  ''''BaseProperty'''': ''''base''''\r\n}''", span="8675-8678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonTextWriterTest.cs"];
m4_3790 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="8673-8673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonTextWriterTest.cs"];
m4_2443 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="5458-5458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonTextWriterTest.cs"];
m4_2445 [label="var json = JsonConvert.SerializeObject(data)", span="5461-5461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonTextWriterTest.cs"];
m4_2447 [label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="5464-5464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonTextWriterTest.cs"];
m4_2444 [label="var data = new DecimalTest(decimal.MinValue)", span="5460-5460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonTextWriterTest.cs"];
m4_2446 [label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json, new JsonSerializerSettings { MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="5462-5462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonTextWriterTest.cs"];
m4_2448 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="5458-5458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonTextWriterTest.cs"];
m4_2108 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4726-4726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonTextWriterTest.cs"];
m4_2111 [label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="4735-4735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonTextWriterTest.cs"];
m4_2110 [label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="4734-4734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonTextWriterTest.cs"];
m4_2109 [label="ClientMap source = new ClientMap()\r\n            {\r\n                position = new Pos() { X = 100, Y = 200 },\r\n                center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n            }", span="4728-4732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonTextWriterTest.cs"];
m4_2112 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4726-4726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonTextWriterTest.cs"];
m4_1831 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonTextWriterTest.cs"];
m4_2699 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6170-6170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonTextWriterTest.cs"];
m4_2707 [label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="6184-6184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonTextWriterTest.cs"];
m4_2706 [label="string result = sw.ToString()", span="6183-6183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonTextWriterTest.cs"];
m4_2702 [label="var sw = new StringWriter()", span="6177-6177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonTextWriterTest.cs"];
m4_2705 [label="jw.Flush()", span="6181-6181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonTextWriterTest.cs"];
m4_2701 [label="var json = JObject.FromObject(o)", span="6175-6175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonTextWriterTest.cs"];
m4_2703 [label="var jw = new JsonTextWriter(sw)", span="6178-6178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonTextWriterTest.cs"];
m4_2704 [label="jw.WriteToken(json.CreateReader())", span="6180-6180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonTextWriterTest.cs"];
m4_2700 [label="object o = new { p = 1 }", span="6173-6173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonTextWriterTest.cs"];
m4_2708 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6170-6170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonTextWriterTest.cs"];
m4_3035 [label="Entry Unk.ToKnownColor", span="", cluster="Unk.ToKnownColor", file="JsonTextWriterTest.cs"];
m4_2113 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="4738-4738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="JsonTextWriterTest.cs"];
m4_1269 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonTextWriterTest.cs"];
m4_3805 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", span="8763-8763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", file="JsonTextWriterTest.cs"];
m4_3745 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", span="8572-8572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", file="JsonTextWriterTest.cs"];
m4_1916 [label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="JsonTextWriterTest.cs"];
m4_3827 [label="Entry System.Net.Mail.MailAddress.MailAddress(string)", span="0-0", cluster="System.Net.Mail.MailAddress.MailAddress(string)", file="JsonTextWriterTest.cs"];
m4_585 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="1160-1160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="JsonTextWriterTest.cs"];
m4_1867 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonTextWriterTest.cs"];
m4_1858 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4127-4127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterTest.cs"];
m4_1862 [label="this[entry.Key] = entry.Value", span="4136-4136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterTest.cs"];
m4_1861 [label=dictionary, span="4134-4134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterTest.cs"];
m4_1859 [label="dictionary == null", span="4129-4129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterTest.cs"];
m4_1860 [label="return;", span="4131-4131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterTest.cs"];
m4_1863 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4127-4127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonTextWriterTest.cs"];
m4_2316 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5171-5171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonTextWriterTest.cs"];
m4_2317 [label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="5173-5173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonTextWriterTest.cs"];
m4_2318 [label="StringAssert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="5175-5177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonTextWriterTest.cs"];
m4_2319 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5171-5171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonTextWriterTest.cs"];
m4_1581 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="924-924", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonTextWriterTest.cs"];
m4_3824 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="465-465", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JsonTextWriterTest.cs"];
m4_899 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="1910-1910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_901 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="1913-1913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_902 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="1914-1914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_903 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="1916-1916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_904 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="1917-1917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_905 [label="Assert.AreEqual(1, wibble.Bar[1])", span="1918-1918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_906 [label="Assert.AreEqual(2, wibble.Bar[2])", span="1919-1919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_907 [label="Assert.AreEqual(3, wibble.Bar[3])", span="1920-1920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_900 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="1912-1912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_908 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="1910-1910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonTextWriterTest.cs"];
m4_747 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="1571-1571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonTextWriterTest.cs"];
m4_750 [label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="1577-1577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonTextWriterTest.cs"];
m4_748 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="1573-1573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonTextWriterTest.cs"];
m4_749 [label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="1575-1575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonTextWriterTest.cs"];
m4_751 [label="Assert.AreEqual(0, c.IgnoredField)", span="1579-1579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonTextWriterTest.cs"];
m4_752 [label="Assert.AreEqual(99, c.Field)", span="1580-1580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonTextWriterTest.cs"];
m4_753 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="1571-1571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonTextWriterTest.cs"];
m4_1441 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="JsonTextWriterTest.cs"];
m4_2228 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4958-4958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonTextWriterTest.cs"];
m4_2230 [label="Assert.AreEqual(3, d.Length)", span="4966-4966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonTextWriterTest.cs"];
m4_2231 [label="Assert.AreEqual(2.4, d[0])", span="4967-4967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonTextWriterTest.cs"];
m4_2232 [label="Assert.AreEqual(4.3, d[1])", span="4968-4968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonTextWriterTest.cs"];
m4_2233 [label="Assert.AreEqual(null, d[2])", span="4969-4969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonTextWriterTest.cs"];
m4_2229 [label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="4960-4964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonTextWriterTest.cs"];
m4_2234 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="4958-4958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonTextWriterTest.cs"];
m4_528 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1086-1086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_530 [label="var deserialized = JsonConvert.DeserializeObject<Foo1<Bar1>>(json)", span="1089-1089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_532 [label="Assert.AreEqual(''value2'', deserialized.foo2.bar)", span="1091-1091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_534 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1093-1093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_529 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1088-1088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_531 [label="Assert.IsNotNull(deserialized.foo2)", span="1090-1090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_533 [label="Assert.IsNotNull(deserialized.foo)", span="1092-1092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_535 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1086-1086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonTextWriterTest.cs"];
m4_800 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="1730-1730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterTest.cs"];
m4_806 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="1742-1742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterTest.cs"];
m4_809 [label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="1747-1747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterTest.cs"];
m4_808 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="1745-1745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterTest.cs"];
m4_807 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="1744-1744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterTest.cs"];
m4_801 [label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="1732-1732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterTest.cs"];
m4_805 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="1740-1740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterTest.cs"];
m4_803 [label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="1736-1736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterTest.cs"];
m4_802 [label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="1735-1735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterTest.cs"];
m4_804 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="1739-1739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterTest.cs"];
m4_810 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="1730-1730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonTextWriterTest.cs"];
m4_2284 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="5066-5066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="JsonTextWriterTest.cs"];
m4_1413 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonTextWriterTest.cs"];
m4_2428 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="5377-5377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonTextWriterTest.cs"];
m4_2297 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="674-674", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonTextWriterTest.cs"];
m4_3614 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="8287-8287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3615 [label="throw new InvalidCastException();", span="8289-8289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3616 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="8287-8287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_1187 [label="Entry Unk.Fail", span="", cluster="Unk.Fail", file="JsonTextWriterTest.cs"];
m4_782 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="1709-1709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonTextWriterTest.cs"];
m4_783 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new BadJsonPropertyClass()); }, @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'')", span="1711-1711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonTextWriterTest.cs"];
m4_784 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="1709-1709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonTextWriterTest.cs"];
m4_1009 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonTextWriterTest.cs"];
m4_977 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonTextWriterTest.cs"];
m4_561 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="817-817", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonTextWriterTest.cs"];
m4_3038 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6845-6845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3039 [label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="6847-6847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3040 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="6845-6845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_96 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriterTest.cs"];
m4_597 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1293-1293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_603 [label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="1308-1308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_605 [label="StringAssert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="1312-1317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_604 [label="Console.WriteLine(json)", span="1310-1310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_598 [label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1295-1301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_602 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1306-1306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_599 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1303-1303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_600 [label="baseWith.Virtual = ''Virtual2!''", span="1304-1304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_601 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1305-1305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_606 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1293-1293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonTextWriterTest.cs"];
m4_3725 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="8542-8542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3732 [label="Assert.AreEqual(dt, dt1)", span="8557-8557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3737 [label="Assert.AreEqual(dt, (DateTimeOffset)v.Value)", span="8568-8568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3730 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="8553-8553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3735 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8566-8566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3736 [label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="8567-8567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3726 [label="DateTimeOffset dt = new DateTimeOffset(new DateTime(2000, 12, 22))", span="8544-8544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3731 [label="DateTimeOffset dt1 = JsonConvert.DeserializeObject<DateTimeOffset>(json, settings)", span="8555-8555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3733 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            }", span="8559-8563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3734 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8564-8564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3729 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="8551-8551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3727 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8545-8545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3728 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8546-8549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_3738 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="8542-8542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonTextWriterTest.cs"];
m4_2745 [label="Entry Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", file="JsonTextWriterTest.cs"];
m4_3433 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="7836-7836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonTextWriterTest.cs"];
m4_3434 [label="this.First = first", span="7839-7839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonTextWriterTest.cs"];
m4_3435 [label="this.Second = second", span="7840-7840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonTextWriterTest.cs"];
m4_3436 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="7836-7836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonTextWriterTest.cs"];
m4_3834 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8804-8804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3836 [label="var attachment = info != null\r\n                    ? new System.Net.Mail.Attachment(new MemoryStream(Convert.FromBase64String(info.ContentBase64)), ''application/octet-stream'')\r\n                    {\r\n                        ContentDisposition = { FileName = info.FileName }\r\n                    }\r\n                    : null", span="8808-8813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3835 [label="var info = serializer.Deserialize<AttachmentInfo>(reader)", span="8806-8806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3837 [label="return attachment;", span="8814-8814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_3838 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8804-8804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextWriterTest.cs"];
m4_2687 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6141-6141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonTextWriterTest.cs"];
m4_2691 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6161-6161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonTextWriterTest.cs"];
m4_2692 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6162-6162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonTextWriterTest.cs"];
m4_2693 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6163-6163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonTextWriterTest.cs"];
m4_2694 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6164-6164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonTextWriterTest.cs"];
m4_2695 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6165-6165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonTextWriterTest.cs"];
m4_2696 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6166-6166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonTextWriterTest.cs"];
m4_2689 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6151-6151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonTextWriterTest.cs"];
m4_2690 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', json)", span="6153-6159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonTextWriterTest.cs"];
m4_2688 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="6143-6150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonTextWriterTest.cs"];
m4_2697 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6141-6141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonTextWriterTest.cs"];
m4_28 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="138-138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonTextWriterTest.cs"];
m4_29 [label="var e1 = JsonConvert.DeserializeObject<EnumA>('''ValueA''')", span="140-140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonTextWriterTest.cs"];
m4_30 [label="Assert.AreEqual(EnumA.ValueA, e1)", span="141-141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonTextWriterTest.cs"];
m4_32 [label="Assert.AreEqual(EnumA.ValueA, e2)", span="144-144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonTextWriterTest.cs"];
m4_31 [label="var e2 = JsonConvert.DeserializeObject<EnumA>('''value_a''', new StringEnumConverter())", span="143-143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonTextWriterTest.cs"];
m4_33 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="138-138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonTextWriterTest.cs"];
m4_1917 [label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="JsonTextWriterTest.cs"];
m4_556 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_2674 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="JsonTextWriterTest.cs"];
m4_2568 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5819-5819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2574 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="5834-5834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2575 [label="Assert.AreEqual(c1.Title, c2.Title)", span="5835-5835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2576 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5836-5836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2577 [label="Assert.AreEqual(''one'', c2.Categories[0])", span="5837-5837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2578 [label="Assert.AreEqual(''two'', c2.Categories[1])", span="5838-5838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2572 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5825-5825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2573 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="5826-5832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2569 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="5821-5821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2571 [label="c1.Categories.Add(''two'')", span="5823-5823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2570 [label="c1.Categories.Add(''one'')", span="5822-5822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonTextWriterTest.cs"];
m4_2579 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="5819-5819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonTextWriterTest.cs"];
m4_119 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonTextWriterTest.cs"];
m4_1491 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3190-3190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_1493 [label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="3194-3194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_1495 [label="Assert.AreEqual(5, a.Count)", span="3196-3196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_1496 [label="Assert.AreEqual(1, (int)a[0])", span="3197-3197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_1497 [label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="3198-3198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_1492 [label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="3192-3192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_1494 [label="JArray a = (JArray)setOnly.GetValue()", span="3195-3195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_1498 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3190-3190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_1392 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="2956-2956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonTextWriterTest.cs"];
m4_1395 [label="Assert.AreEqual(''Name!'', c.Name)", span="2969-2969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonTextWriterTest.cs"];
m4_1396 [label="Assert.AreEqual(1, c.Dictionary.Count)", span="2970-2970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonTextWriterTest.cs"];
m4_1397 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="2971-2971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonTextWriterTest.cs"];
m4_1394 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n                json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="2965-2967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonTextWriterTest.cs"];
m4_1393 [label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="2958-2963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonTextWriterTest.cs"];
m4_1398 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="2956-2956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonTextWriterTest.cs"];
m4_3510 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8040-8040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3511 [label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="8042-8046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3512 [label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="8048-8052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3517 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]'', json)", span="8070-8085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3516 [label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8063-8068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3515 [label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="8057-8061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3513 [label="john.Spouse = jane", span="8054-8054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3514 [label="jane.Spouse = john", span="8055-8055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_3518 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8040-8040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonTextWriterTest.cs"];
m4_1804 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="3982-3982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonTextWriterTest.cs"];
m4_1806 [label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="3985-3985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonTextWriterTest.cs"];
m4_1807 [label="Assert.AreEqual(123L, item.Value)", span="3987-3987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonTextWriterTest.cs"];
m4_1805 [label="var json = ''{ Key: 'abc', Value: 123 }''", span="3984-3984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonTextWriterTest.cs"];
m4_1808 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="3982-3982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonTextWriterTest.cs"];
m4_3482 [label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="JsonTextWriterTest.cs"];
m4_1582 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3333-3333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonTextWriterTest.cs"];
m4_1584 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new List<Person>()); }, @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path '', line 1, position 2.'')", span="3337-3337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonTextWriterTest.cs"];
m4_1583 [label="string json = @''{}''", span="3335-3335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonTextWriterTest.cs"];
m4_1585 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3333-3333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonTextWriterTest.cs"];
m4_3791 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="8687-8687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonTextWriterTest.cs"];
m4_3794 [label="NullableLongTestClass result = JsonConvert.DeserializeObject<NullableLongTestClass>(output)", span="8694-8694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonTextWriterTest.cs"];
m4_3793 [label="string output = JsonConvert.SerializeObject(instance)", span="8693-8693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonTextWriterTest.cs"];
m4_3795 [label="Assert.AreEqual(ulong.MaxValue, result.Value)", span="8696-8696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonTextWriterTest.cs"];
m4_3792 [label="NullableLongTestClass instance = new NullableLongTestClass\r\n            {\r\n                Value = ulong.MaxValue\r\n            }", span="8689-8692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonTextWriterTest.cs"];
m4_3796 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="8687-8687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonTextWriterTest.cs"];
m4_2790 [label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0", cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="JsonTextWriterTest.cs"];
m4_578 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="JsonTextWriterTest.cs"];
m4_3361 [label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0", cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3584 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="8237-8237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3585 [label="throw new InvalidCastException();", span="8239-8239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3586 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="8237-8237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_1809 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4014-4014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterTest.cs"];
m4_1812 [label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="4018-4018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterTest.cs"];
m4_1814 [label="MemoryStream ms = new MemoryStream()", span="4021-4021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterTest.cs"];
m4_1810 [label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="4016-4016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterTest.cs"];
m4_1811 [label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="4017-4017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterTest.cs"];
m4_1813 [label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="4019-4019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterTest.cs"];
m4_1815 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n                typeof(DataContractJsonSerializerTestClass),\r\n                new Type[] { typeof(Human) })", span="4022-4024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterTest.cs"];
m4_1816 [label="serializer.WriteObject(ms, c)", span="4025-4025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterTest.cs"];
m4_1818 [label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="4028-4028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterTest.cs"];
m4_1817 [label="byte[] jsonBytes = ms.ToArray()", span="4027-4027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterTest.cs"];
m4_1819 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4014-4014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonTextWriterTest.cs"];
m4_3483 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="7969-7969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonTextWriterTest.cs"];
m4_3488 [label="Assert.AreEqual(1234567890.123456m, d)", span="7976-7976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonTextWriterTest.cs"];
m4_3487 [label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="7974-7974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonTextWriterTest.cs"];
m4_3484 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="7971-7971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonTextWriterTest.cs"];
m4_3486 [label="var serialiser = JsonSerializer.Create(settings)", span="7973-7973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonTextWriterTest.cs"];
m4_3485 [label="var settings = new JsonSerializerSettings()", span="7972-7972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonTextWriterTest.cs"];
m4_3489 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="7969-7969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonTextWriterTest.cs"];
m4_683 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonTextWriterTest.cs"];
m4_2657 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="6041-6041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="JsonTextWriterTest.cs"];
m4_722 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1526-1526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonTextWriterTest.cs"];
m4_725 [label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="1532-1532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonTextWriterTest.cs"];
m4_724 [label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="1530-1530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonTextWriterTest.cs"];
m4_723 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1528-1528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonTextWriterTest.cs"];
m4_726 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1526-1526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonTextWriterTest.cs"];
m4_1664 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3497-3497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1665 [label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="3499-3499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1666 [label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="3500-3500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1667 [label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="3501-3501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1668 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3503-3503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1669 [label="StringAssert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="3504-3507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_1670 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3497-3497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonTextWriterTest.cs"];
m4_2348 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5228-5228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonTextWriterTest.cs"];
m4_2349 [label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="5230-5230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonTextWriterTest.cs"];
m4_2350 [label="Assert.AreEqual(123456789876543.21m, d)", span="5231-5231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonTextWriterTest.cs"];
m4_2351 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5228-5228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonTextWriterTest.cs"];
m4_3689 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="8439-8439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonTextWriterTest.cs"];
m4_3696 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8460-8460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonTextWriterTest.cs"];
m4_3690 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8441-8441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonTextWriterTest.cs"];
m4_3695 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="8458-8458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonTextWriterTest.cs"];
m4_3693 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8449-8452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonTextWriterTest.cs"];
m4_3691 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8442-8442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonTextWriterTest.cs"];
m4_3692 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="8443-8447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonTextWriterTest.cs"];
m4_3694 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="8454-8456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonTextWriterTest.cs"];
m4_3697 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="8439-8439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonTextWriterTest.cs"];
m4_1949 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="JsonTextWriterTest.cs"];
m4_2235 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4974-4974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterTest.cs"];
m4_2238 [label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="4989-4989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterTest.cs"];
m4_2239 [label="Assert.AreEqual(3, d.Count)", span="4991-4991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterTest.cs"];
m4_2236 [label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n            {\r\n                ''One'',\r\n                ''2'',\r\n                ''III''\r\n            }, Formatting.Indented)", span="4976-4981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterTest.cs"];
m4_2237 [label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="4983-4987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterTest.cs"];
m4_2240 [label="Assert.IsTrue(d.Contains(''One''))", span="4992-4992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterTest.cs"];
m4_2241 [label="Assert.IsTrue(d.Contains(''2''))", span="4993-4993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterTest.cs"];
m4_2242 [label="Assert.IsTrue(d.Contains(''III''))", span="4994-4994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterTest.cs"];
m4_2243 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="4974-4974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonTextWriterTest.cs"];
m4_123 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonTextWriterTest.cs"];
m4_879 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="775-775", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriterTest.cs"];
m4_769 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="251-251", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonTextWriterTest.cs"];
m4_1433 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3061-3061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonTextWriterTest.cs"];
m4_1437 [label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="3068-3068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonTextWriterTest.cs"];
m4_1435 [label="string json = JsonConvert.SerializeObject(uri)", span="3064-3064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonTextWriterTest.cs"];
m4_1436 [label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="3066-3066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonTextWriterTest.cs"];
m4_1438 [label="Assert.AreEqual(uri, newUri)", span="3069-3069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonTextWriterTest.cs"];
m4_1434 [label="Uri uri = new Uri(''http://codeplex.com'')", span="3063-3063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonTextWriterTest.cs"];
m4_1439 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3061-3061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonTextWriterTest.cs"];
m4_2147 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4803-4803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_2155 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="4816-4816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_2154 [label="child.Add(''Father'', reference)", span="4814-4814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_2151 [label="var child = new Dictionary<string, object>()", span="4811-4811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_2156 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, object>>(json); }, ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 11.'')", span="4818-4818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_2148 [label="var reference = new Dictionary<string, object>()", span="4807-4807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_2153 [label="child.Add(''Name'', ''Isabell'')", span="4813-4813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_2150 [label="reference.Add(''$id'', 1)", span="4809-4809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_2152 [label="child.Add(''_id'', 2)", span="4812-4812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_2149 [label="reference.Add(''$ref'', ''Persons'')", span="4808-4808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_2157 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="4803-4803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonTextWriterTest.cs"];
m4_3825 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JsonTextWriterTest.cs"];
m4_3134 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7012-7012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonTextWriterTest.cs"];
m4_3136 [label="string json = JsonConvert.SerializeObject(c)", span="7024-7024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonTextWriterTest.cs"];
m4_3137 [label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="7026-7026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonTextWriterTest.cs"];
m4_3135 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data = new[]\r\n                {\r\n                    ''one'',\r\n                    ''two'',\r\n                    ''three''\r\n                }\r\n            }", span="7014-7022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonTextWriterTest.cs"];
m4_3138 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7012-7012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonTextWriterTest.cs"];
m4_2823 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6406-6406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonTextWriterTest.cs"];
m4_2824 [label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="6408-6413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonTextWriterTest.cs"];
m4_2825 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json); }, ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 7.'')", span="6415-6415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonTextWriterTest.cs"];
m4_2826 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6406-6406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonTextWriterTest.cs"];
m4_135 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", span="394-394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", file="JsonTextWriterTest.cs"];
m4_3590 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="8247-8247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3591 [label="throw new InvalidCastException();", span="8249-8249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3592 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="8247-8247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_1143 [label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonTextWriterTest.cs"];
m4_1235 [label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonTextWriterTest.cs"];
m4_470 [label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="103-103", cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JsonTextWriterTest.cs"];
m4_3474 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="7952-7952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonTextWriterTest.cs"];
m4_3477 [label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="7958-7958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonTextWriterTest.cs"];
m4_3476 [label="string json = JsonConvert.SerializeObject(s1)", span="7956-7956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonTextWriterTest.cs"];
m4_3478 [label="Assert.AreEqual(s1.Count, s2.Count)", span="7960-7960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonTextWriterTest.cs"];
m4_3480 [label="Assert.IsTrue(s2.Contains(s))", span="7963-7963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonTextWriterTest.cs"];
m4_3475 [label="ISet<string> s1 = new HashSet<string>(new[] { ''1'', ''two'', ''III'' })", span="7954-7954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonTextWriterTest.cs"];
m4_3479 [label=s1, span="7961-7961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonTextWriterTest.cs"];
m4_3481 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="7952-7952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonTextWriterTest.cs"];
m4_1778 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="3850-3850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="JsonTextWriterTest.cs"];
m4_839 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonTextWriterTest.cs"];
m4_755 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="1584-1584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonTextWriterTest.cs"];
m4_757 [label="object o = JsonConvert.DeserializeObject(json)", span="1664-1664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonTextWriterTest.cs"];
m4_756 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="1586-1663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonTextWriterTest.cs"];
m4_758 [label="string s = string.Empty", span="1665-1665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonTextWriterTest.cs"];
m4_759 [label="s += s", span="1666-1666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonTextWriterTest.cs"];
m4_760 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="1584-1584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonTextWriterTest.cs"];
m4_3611 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="8282-8282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3612 [label="throw new InvalidCastException();", span="8284-8284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_3613 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="8282-8282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m4_2295 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="5093-5093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonTextWriterTest.cs"];
m4_3036 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="JsonTextWriterTest.cs"];
m4_2779 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", span="6239-6239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", file="JsonTextWriterTest.cs"];
m4_1748 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="3788-3788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonTextWriterTest.cs"];
m4_1749 [label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="3790-3790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonTextWriterTest.cs"];
m4_1751 [label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="3793-3793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonTextWriterTest.cs"];
m4_1750 [label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="3791-3791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonTextWriterTest.cs"];
m4_1752 [label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="3794-3794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonTextWriterTest.cs"];
m4_1753 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="3788-3788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonTextWriterTest.cs"];
m4_3457 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="7893-7893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonTextWriterTest.cs"];
m4_3463 [label="Assert.AreEqual(expected, actual)", span="7916-7916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonTextWriterTest.cs"];
m4_3459 [label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="7905-7905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonTextWriterTest.cs"];
m4_3461 [label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n            })", span="7909-7912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonTextWriterTest.cs"];
m4_3462 [label="Console.WriteLine(expected)", span="7914-7914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonTextWriterTest.cs"];
m4_3458 [label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n            {\r\n                { ''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified) },\r\n                { ''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc) },\r\n                { ''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local) },\r\n                { ''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero) },\r\n                { ''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1)) },\r\n                { ''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5)) }\r\n            }", span="7895-7903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonTextWriterTest.cs"];
m4_3460 [label="Console.WriteLine(expected)", span="7907-7907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonTextWriterTest.cs"];
m4_3464 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="7893-7893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonTextWriterTest.cs"];
m4_3148 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7054-7054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonTextWriterTest.cs"];
m4_3152 [label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="7072-7072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonTextWriterTest.cs"];
m4_3153 [label="Assert.AreEqual(2, dic2.Count)", span="7074-7074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonTextWriterTest.cs"];
m4_3154 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7075-7075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonTextWriterTest.cs"];
m4_3155 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7076-7076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonTextWriterTest.cs"];
m4_3150 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7062-7065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonTextWriterTest.cs"];
m4_3151 [label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="7067-7070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonTextWriterTest.cs"];
m4_3149 [label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7056-7060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonTextWriterTest.cs"];
m4_3156 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7054-7054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonTextWriterTest.cs"];
m4_2563 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="5780-5780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="JsonTextWriterTest.cs"];
m4_3045 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="6863-6863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonTextWriterTest.cs"];
m4_3054 [label="Assert.AreEqual(2, values.Count)", span="6881-6881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonTextWriterTest.cs"];
m4_3055 [label="Assert.AreEqual(''bar'', values[0].Name)", span="6882-6882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonTextWriterTest.cs"];
m4_3056 [label="Assert.AreEqual(''baz'', values[1].Name)", span="6883-6883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonTextWriterTest.cs"];
m4_3046 [label="IList<MultipleItemsClass> values = new List<MultipleItemsClass>()", span="6865-6865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonTextWriterTest.cs"];
m4_3050 [label="!reader.Read()", span="6872-6872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonTextWriterTest.cs"];
m4_3049 [label=true, span="6870-6870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonTextWriterTest.cs"];
m4_3047 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{ ''''name'''': ''''bar'''' }{ ''''name'''': ''''baz'''' }''))", span="6867-6867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonTextWriterTest.cs"];
m4_3053 [label="values.Add(foo)", span="6878-6878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonTextWriterTest.cs"];
m4_3051 [label="JsonSerializer serializer = new JsonSerializer()", span="6875-6875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonTextWriterTest.cs"];
m4_3048 [label="reader.SupportMultipleContent = true", span="6868-6868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonTextWriterTest.cs"];
m4_3052 [label="MultipleItemsClass foo = serializer.Deserialize<MultipleItemsClass>(reader)", span="6876-6876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonTextWriterTest.cs"];
m4_3057 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="6863-6863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonTextWriterTest.cs"];
m4_2748 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="650-650", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonTextWriterTest.cs"];
m4_734 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1550-1550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_736 [label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="1554-1554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_735 [label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="1552-1552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_737 [label="Assert.AreEqual(c.Field, ''Field'')", span="1556-1556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_738 [label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="1557-1557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_739 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1550-1550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonTextWriterTest.cs"];
m4_2518 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5639-5639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_2520 [label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="5643-5643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_2521 [label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="5644-5644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_2522 [label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="5645-5645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_2519 [label="string json = @''{A:''''Test''''}''", span="5641-5641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_2523 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5639-5639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonTextWriterTest.cs"];
m4_868 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="1858-1858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonTextWriterTest.cs"];
m4_876 [label="Assert.AreEqual(d, anonymous.DateValue)", span="1878-1878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonTextWriterTest.cs"];
m4_874 [label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="1875-1875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonTextWriterTest.cs"];
m4_869 [label="DateTime d = new DateTime(2000, 1, 1)", span="1860-1860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonTextWriterTest.cs"];
m4_875 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="1877-1877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonTextWriterTest.cs"];
m4_873 [label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="1874-1874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonTextWriterTest.cs"];
m4_870 [label="var anonymous =\r\n                new\r\n                {\r\n                    DateValue = d\r\n                }", span="1862-1866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonTextWriterTest.cs"];
m4_871 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="1868-1868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonTextWriterTest.cs"];
m4_872 [label="settings.Converters.Add(new IsoDateTimeConverter\r\n            {\r\n                DateTimeFormat = ''yyyy''\r\n            })", span="1869-1872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonTextWriterTest.cs"];
m4_877 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="1858-1858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonTextWriterTest.cs"];
m4_627 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="1257-1257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="JsonTextWriterTest.cs"];
m4_52 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="223-223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonTextWriterTest.cs"];
m4_59 [label="FaqItem c2 = JsonConvert.DeserializeObject<FaqItem>(json)", span="242-242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonTextWriterTest.cs"];
m4_60 [label="Assert.AreEqual(1, c2.FaqId)", span="244-244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonTextWriterTest.cs"];
m4_61 [label="Assert.AreEqual(1, c2.Sections.Count)", span="245-245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonTextWriterTest.cs"];
m4_56 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="229-229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonTextWriterTest.cs"];
m4_58 [label="StringAssert.AreEqual(@''{\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="233-240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonTextWriterTest.cs"];
m4_53 [label="FaqItem c = new FaqItem()", span="225-225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonTextWriterTest.cs"];
m4_55 [label="c.Sections.Add(new FaqSection())", span="227-227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonTextWriterTest.cs"];
m4_57 [label="Console.WriteLine(json)", span="231-231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonTextWriterTest.cs"];
m4_54 [label="c.FaqId = 1", span="226-226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonTextWriterTest.cs"];
m4_62 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="223-223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonTextWriterTest.cs"];
m4_3239 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7299-7299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonTextWriterTest.cs"];
m4_3241 [label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="7327-7327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonTextWriterTest.cs"];
m4_3244 [label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="7331-7331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonTextWriterTest.cs"];
m4_3240 [label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="7301-7325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonTextWriterTest.cs"];
m4_3242 [label="Assert.IsNotNull(exception)", span="7328-7328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonTextWriterTest.cs"];
m4_3243 [label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="7329-7329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonTextWriterTest.cs"];
m4_3245 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7299-7299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonTextWriterTest.cs"];
m4_3295 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonTextWriterTest.cs"];
m4_159 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="477-477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonTextWriterTest.cs"];
m4_160 [label="var input = new ResponseWithNewGenericPropertyOverride<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="479-484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", color=green, community=0, file="JsonTextWriterTest.cs"];
m4_161 [label="var json = JsonConvert.SerializeObject(input)", span="486-486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonTextWriterTest.cs"];
m4_163 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="489-489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonTextWriterTest.cs"];
m4_164 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="490-490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonTextWriterTest.cs"];
m4_165 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="491-491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonTextWriterTest.cs"];
m4_162 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyOverride<int>>(json)", span="487-487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonTextWriterTest.cs"];
m4_166 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="477-477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonTextWriterTest.cs"];
m4_1120 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonTextWriterTest.cs"];
m4_1736 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="3751-3751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterTest.cs"];
m4_1743 [label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="3778-3778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterTest.cs"];
m4_1744 [label="Assert.AreEqual(''some value'', gen.MyProperty)", span="3779-3779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterTest.cs"];
m4_1741 [label="string json = g.ToJson()", span="3760-3760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterTest.cs"];
m4_1742 [label="StringAssert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="3762-3776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterTest.cs"];
m4_1737 [label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="3753-3753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterTest.cs"];
m4_1740 [label="g.MyProperty = ''some value''", span="3758-3758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterTest.cs"];
m4_1738 [label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="3755-3755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterTest.cs"];
m4_1739 [label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="3756-3756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterTest.cs"];
m4_1745 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="3751-3751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonTextWriterTest.cs"];
m4_47 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonTextWriterTest.cs"];
m4_3826 [label="Entry System.Net.Mail.MailAddress.MailAddress(string, string)", span="0-0", cluster="System.Net.Mail.MailAddress.MailAddress(string, string)", file="JsonTextWriterTest.cs"];
m4_416 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="877-877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_417 [label="info.AddValue(''stringValue'', _stringValue)", span="879-879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_418 [label="info.AddValue(''intValue'', _intValue)", span="880-880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_419 [label="info.AddValue(''person1'', _person1, typeof(PersonReference))", span="881-881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_420 [label="info.AddValue(''person2'', _person2, typeof(PersonReference))", span="882-882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_421 [label="info.AddValue(''person3'', _person3, typeof(PersonReference))", span="883-883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_422 [label="info.AddValue(''parent'', _parent, typeof(PreserveReferencesCallbackTestObject))", span="884-884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_423 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="877-877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextWriterTest.cs"];
m4_1102 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2271-2271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonTextWriterTest.cs"];
m4_1103 [label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="2273-2273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonTextWriterTest.cs"];
m4_1104 [label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="2274-2274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonTextWriterTest.cs"];
m4_1105 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2271-2271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonTextWriterTest.cs"];
m4_3495 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8005-8005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonTextWriterTest.cs"];
m4_3496 [label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="8007-8007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonTextWriterTest.cs"];
m4_3497 [label="string json = JsonConvert.SerializeObject(new[] { i }, Formatting.Indented)", span="8009-8009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonTextWriterTest.cs"];
m4_3498 [label="StringAssert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="8011-8013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonTextWriterTest.cs"];
m4_3499 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8005-8005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonTextWriterTest.cs"];
m4_130 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonTextWriterTest.cs"];
m4_132 [label="var childClass = JsonConvert.DeserializeObject<ChildClassVirtual>(@''{''''IsTransient'''':true}'')", span="404-404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonTextWriterTest.cs"];
m4_131 [label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClassVirtual { IsTransient = true }))", span="402-402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonTextWriterTest.cs"];
m4_133 [label="Assert.AreEqual(true, childClass.IsTransient)", span="405-405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonTextWriterTest.cs"];
m4_134 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonTextWriterTest.cs"];
m4_1594 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3350-3350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonTextWriterTest.cs"];
m4_1595 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3352-3363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonTextWriterTest.cs"];
m4_1596 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3350-3350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonTextWriterTest.cs"];
m4_1879 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonTextWriterTest.cs"];
m4_771 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="1692-1692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterTest.cs"];
m4_777 [label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="1702-1702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterTest.cs"];
m4_775 [label="string jsonText = JsonConvert.SerializeObject(test)", span="1698-1698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterTest.cs"];
m4_778 [label="Assert.AreEqual(test.Pie, test2.Pie)", span="1704-1704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterTest.cs"];
m4_779 [label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="1705-1705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterTest.cs"];
m4_776 [label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="1700-1700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterTest.cs"];
m4_772 [label="JsonPropertyClass test = new JsonPropertyClass()", span="1694-1694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterTest.cs"];
m4_774 [label="test.SweetCakesCount = int.MaxValue", span="1696-1696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterTest.cs"];
m4_773 [label="test.Pie = ''Delicious''", span="1695-1695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterTest.cs"];
m4_780 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="1692-1692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonTextWriterTest.cs"];
m4_2957 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6666-6666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonTextWriterTest.cs"];
m4_2958 [label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="6668-6668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonTextWriterTest.cs"];
m4_2959 [label="Assert.IsNull(b)", span="6669-6669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonTextWriterTest.cs"];
m4_2960 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6666-6666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonTextWriterTest.cs"];
m4_2551 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5759-5759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonTextWriterTest.cs"];
m4_2553 [label="string result = JsonConvert.SerializeObject(cc)", span="5767-5767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonTextWriterTest.cs"];
m4_2555 [label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="5769-5769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonTextWriterTest.cs"];
m4_2552 [label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5761-5765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonTextWriterTest.cs"];
m4_2554 [label="Console.WriteLine(result)", span="5768-5768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonTextWriterTest.cs"];
m4_2556 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="5759-5759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonTextWriterTest.cs"];
m4_2837 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6446-6446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonTextWriterTest.cs"];
m4_2838 [label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="6448-6452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonTextWriterTest.cs"];
m4_2839 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json), ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 15.'')", span="6454-6454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonTextWriterTest.cs"];
m4_2840 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6446-6446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonTextWriterTest.cs"];
m4_797 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonTextWriterTest.cs"];
m4_3560 [label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="44-44", cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="JsonTextWriterTest.cs"];
m4_2644 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6021-6021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonTextWriterTest.cs"];
m4_2645 [label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="6023-6023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonTextWriterTest.cs"];
m4_2646 [label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="6025-6025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonTextWriterTest.cs"];
m4_2647 [label="Assert.AreEqual(3, r.Departures.Count())", span="6026-6026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonTextWriterTest.cs"];
m4_2648 [label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="6027-6027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonTextWriterTest.cs"];
m4_2649 [label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="6028-6028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonTextWriterTest.cs"];
m4_2650 [label="Assert.IsNull(r.Departures.ElementAt(2))", span="6029-6029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonTextWriterTest.cs"];
m4_2651 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6021-6021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonTextWriterTest.cs"];
m4_3893 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3898 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3899 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3900 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3901 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3902 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3903 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3904 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3905 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3906 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3920 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3924 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3936 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3937 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3945 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3947 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3894 [label=strFromTest, span="", file="JsonTextWriterTest.cs"];
m4_3892 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span="", file="JsonTextWriterTest.cs"];
m4_3909 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span="", file="JsonTextWriterTest.cs"];
m4_3933 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span="", file="JsonTextWriterTest.cs"];
m4_3897 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span="", file="JsonTextWriterTest.cs"];
m4_3934 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span="", file="JsonTextWriterTest.cs"];
m4_3938 [label=errors, span="", file="JsonTextWriterTest.cs"];
m4_3939 [label=errors, span="", file="JsonTextWriterTest.cs"];
m4_3940 [label=errors, span="", file="JsonTextWriterTest.cs"];
m4_3910 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span="", file="JsonTextWriterTest.cs"];
m4_3911 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3915 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span="", file="JsonTextWriterTest.cs"];
m4_3888 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", span="", file="JsonTextWriterTest.cs"];
m4_3908 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3932 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span="", file="JsonTextWriterTest.cs"];
m4_3935 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span="", file="JsonTextWriterTest.cs"];
m4_3912 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span="", file="JsonTextWriterTest.cs"];
m4_3941 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3942 [label=s, span="", file="JsonTextWriterTest.cs"];
m4_3953 [label="Newtonsoft.Json.Tests.Serialization.DecimalTest", span="", file="JsonTextWriterTest.cs"];
m4_3943 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span="", file="JsonTextWriterTest.cs"];
m4_3952 [label=JsonMessage, span="", file="JsonTextWriterTest.cs"];
m4_3890 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", span="", file="JsonTextWriterTest.cs"];
m4_3916 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span="", file="JsonTextWriterTest.cs"];
m4_3946 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", span="", file="JsonTextWriterTest.cs"];
m4_3907 [label=json, span="", file="JsonTextWriterTest.cs"];
m4_3913 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1", span="", file="JsonTextWriterTest.cs"];
m4_3891 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", span="", file="JsonTextWriterTest.cs"];
m4_3949 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", span="", file="JsonTextWriterTest.cs"];
m4_3926 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span="", file="JsonTextWriterTest.cs"];
m4_3950 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType", span="", file="JsonTextWriterTest.cs"];
m4_3918 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span="", file="JsonTextWriterTest.cs"];
m4_3919 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span="", file="JsonTextWriterTest.cs"];
m4_3914 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2", span="", file="JsonTextWriterTest.cs"];
m4_3929 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonTextWriterTest.cs"];
m4_3928 [label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonTextWriterTest.cs"];
m4_3948 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor", span="", file="JsonTextWriterTest.cs"];
m5_29 [label="Entry Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", span="94-94", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_30 [label="string json = @''{\r\n               'CPU': 'Intel',\r\n               'PSU': '500W',\r\n               'Drives': [\r\n                 'DVD read/writer'\r\n                 /*(broken)*/,\r\n                 '500 gigabyte hard drive',\r\n                 '200 gigabyte hard drive'\r\n               ]\r\n            }''", span="97-106", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", color=green, community=0, file="ReadingAndWritingJsonTests.cs"];
m5_31 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="108-108", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_32 [label="reader.Read()", span="109-109", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_33 [label="reader.Value != null", span="111-111", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_34 [label="Console.WriteLine(''Token: {0}, Value: {1}'', reader.TokenType, reader.Value)", span="113-113", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_35 [label="Console.WriteLine(''Token: {0}'', reader.TokenType)", span="117-117", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_36 [label="Exit Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", span="94-94", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_28 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="429-429", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="ReadingAndWritingJsonTests.cs"];
m5_23 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="471-471", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="ReadingAndWritingJsonTests.cs"];
m5_21 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="ReadingAndWritingJsonTests.cs"];
m5_37 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="82-82", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="ReadingAndWritingJsonTests.cs"];
m5_38 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="ReadingAndWritingJsonTests.cs"];
m5_19 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="ReadingAndWritingJsonTests.cs"];
m5_0 [label="Entry Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", span="55-55", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_1 [label="StringBuilder sb = new StringBuilder()", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_2 [label="StringWriter sw = new StringWriter(sb)", span="59-59", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_41 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="ReadingAndWritingJsonTests.cs"];
m5_27 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="489-489", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="ReadingAndWritingJsonTests.cs"];
m5_40 [label="Entry System.Console.WriteLine(string, object, object)", span="0-0", cluster="System.Console.WriteLine(string, object, object)", file="ReadingAndWritingJsonTests.cs"];
m5_20 [label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="ReadingAndWritingJsonTests.cs"];
m5_39 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="400-400", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="ReadingAndWritingJsonTests.cs"];
m5_26 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1453-1453", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="ReadingAndWritingJsonTests.cs"];
m5_15 [label="writer.WriteValue(''200 gigabyte hard drive'')", span="75-75", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", color=green, community=0, file="ReadingAndWritingJsonTests.cs"];
m5_3 [label="Newtonsoft.Json.Serialization.JsonProperty", span="", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_14 [label="writer.WriteValue(''500 gigabyte hard drive'')", span="74-74", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_16 [label="writer.WriteEnd()", span="76-76", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_4 [label="writer.Formatting = Formatting.Indented", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_5 [label="writer.WriteStartObject()", span="65-65", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_6 [label="writer.WritePropertyName(''CPU'')", span="66-66", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_7 [label="writer.WriteValue(''Intel'')", span="67-67", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_8 [label="writer.WritePropertyName(''PSU'')", span="68-68", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_9 [label="writer.WriteValue(''500W'')", span="69-69", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_10 [label="writer.WritePropertyName(''Drives'')", span="70-70", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_11 [label="writer.WriteStartArray()", span="71-71", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_12 [label="writer.WriteValue(''DVD read/writer'')", span="72-72", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_13 [label="writer.WriteComment(''(broken)'')", span="73-73", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_17 [label="writer.WriteEndObject()", span="77-77", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_18 [label="Exit Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", span="55-55", cluster="Newtonsoft.Json.Tests.Documentation.ReadingAndWritingJsonTests.ReadingAndWritingJsonText()", file="ReadingAndWritingJsonTests.cs"];
m5_24 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="948-948", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="ReadingAndWritingJsonTests.cs"];
m5_22 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="421-421", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="ReadingAndWritingJsonTests.cs"];
m5_25 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="437-437", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="ReadingAndWritingJsonTests.cs"];
m6_8 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="82-82", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="ReadJsonWithJsonTextReader.cs"];
m6_9 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="ReadJsonWithJsonTextReader.cs"];
m6_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", file="ReadJsonWithJsonTextReader.cs"];
m6_1 [label="string json = @''{\r\n               'CPU': 'Intel',\r\n               'PSU': '500W',\r\n               'Drives': [\r\n                 'DVD read/writer'\r\n                 /*(broken)*/,\r\n                 '500 gigabyte hard drive',\r\n                 '200 gigabyte hard drive'\r\n               ]\r\n            }''", span="47-56", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", color=green, community=0, file="ReadJsonWithJsonTextReader.cs"];
m6_2 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", file="ReadJsonWithJsonTextReader.cs"];
m6_3 [label="reader.Read()", span="59-59", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", file="ReadJsonWithJsonTextReader.cs"];
m6_4 [label="reader.Value != null", span="61-61", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", file="ReadJsonWithJsonTextReader.cs"];
m6_5 [label="Console.WriteLine(''Token: {0}, Value: {1}'', reader.TokenType, reader.Value)", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", file="ReadJsonWithJsonTextReader.cs"];
m6_6 [label="Console.WriteLine(''Token: {0}'', reader.TokenType)", span="67-67", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", file="ReadJsonWithJsonTextReader.cs"];
m6_7 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.ReadJsonWithJsonTextReader.Example()", file="ReadJsonWithJsonTextReader.cs"];
m6_12 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="ReadJsonWithJsonTextReader.cs"];
m6_11 [label="Entry System.Console.WriteLine(string, object, object)", span="0-0", cluster="System.Console.WriteLine(string, object, object)", file="ReadJsonWithJsonTextReader.cs"];
m6_10 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="400-400", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="ReadJsonWithJsonTextReader.cs"];
m7_33 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="WriteJsonWithJsonTextWriter.cs"];
m7_30 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="429-429", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="WriteJsonWithJsonTextWriter.cs"];
m7_25 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="471-471", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="WriteJsonWithJsonTextWriter.cs"];
m7_23 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="WriteJsonWithJsonTextWriter.cs"];
m7_31 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="WriteJsonWithJsonTextWriter.cs"];
m7_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_1 [label="StringBuilder sb = new StringBuilder()", span="47-47", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_2 [label="StringWriter sw = new StringWriter(sb)", span="48-48", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_18 [label="Console.WriteLine(sb.ToString())", span="69-69", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_19 [label="Assert.AreEqual(@''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabyte hard drive''''\r\n  ]\r\n}'', sb.ToString())", span="82-91", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", color=green, community=0, file="WriteJsonWithJsonTextWriter.cs"];
m7_3 [label="JsonWriter writer = new JsonTextWriter(sw)", span="50-50", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_4 [label="writer.Formatting = Formatting.Indented", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_5 [label="writer.WriteStartObject()", span="54-54", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_6 [label="writer.WritePropertyName(''CPU'')", span="55-55", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_7 [label="writer.WriteValue(''Intel'')", span="56-56", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_8 [label="writer.WritePropertyName(''PSU'')", span="57-57", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_9 [label="writer.WriteValue(''500W'')", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_10 [label="writer.WritePropertyName(''Drives'')", span="59-59", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_11 [label="writer.WriteStartArray()", span="60-60", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_12 [label="writer.WriteValue(''DVD read/writer'')", span="61-61", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_13 [label="writer.WriteComment(''(broken)'')", span="62-62", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_14 [label="writer.WriteValue(''500 gigabyte hard drive'')", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_15 [label="writer.WriteValue(''200 gigabyte hard drive'')", span="64-64", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", color=green, community=0, file="WriteJsonWithJsonTextWriter.cs"];
m7_16 [label="writer.WriteEnd()", span="65-65", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_17 [label="writer.WriteEndObject()", span="66-66", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_20 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Json.WriteJsonWithJsonTextWriter.Example()", file="WriteJsonWithJsonTextWriter.cs"];
m7_21 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="WriteJsonWithJsonTextWriter.cs"];
m7_29 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="489-489", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="WriteJsonWithJsonTextWriter.cs"];
m7_22 [label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="WriteJsonWithJsonTextWriter.cs"];
m7_28 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1453-1453", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="WriteJsonWithJsonTextWriter.cs"];
m7_32 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="WriteJsonWithJsonTextWriter.cs"];
m7_26 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="948-948", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="WriteJsonWithJsonTextWriter.cs"];
m7_24 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="421-421", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="WriteJsonWithJsonTextWriter.cs"];
m7_27 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="437-437", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="WriteJsonWithJsonTextWriter.cs"];
n710 -> n1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n115  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n138  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n274  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n293  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n451  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n452  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n467  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n473  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n479  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n485  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n489  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n491  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n493  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n495  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n497  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n499  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n501  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n502  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n544  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n547  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n550  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n566  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n570  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n580  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n582  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n588  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n589  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n590  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n591  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n613  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n616  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n656  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n692  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n693  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n697  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n698  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n703  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n704  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n705  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n710 -> n708  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
n711 -> n112  [key=1, style=dashed, color=darkseagreen4, label=namingStrategy];
n712 -> n200  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
n712 -> n213  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
n713 -> n202  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
n713 -> n205  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
n714 -> n203  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n715 -> n204  [key=1, style=dashed, color=darkseagreen4, label=createExtensionDataDictionary];
n716 -> n206  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionaryValue];
n717 -> n216  [key=1, style=dashed, color=darkseagreen4, label=createEnumerableWrapper];
n718 -> n221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>"];
n718 -> n224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>"];
n718 -> n229  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>"];
n719 -> n447  [key=1, style=dashed, color=darkseagreen4, label=namingStrategy];
n720 -> n674  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeCall];
n721 -> n690  [key=1, style=dashed, color=darkseagreen4, label=specifiedPropertyGet];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n2 -> n4  [key=2, style=dotted];
n3 -> n0  [key=0, style=bold, color=blue];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n6 -> n7  [key=0, style=solid];
n6 -> n9  [key=2, style=dotted];
n6 -> n10  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n11  [key=2, style=dotted];
n8 -> n5  [key=0, style=bold, color=blue];
n12 -> n13  [key=0, style=solid];
n12 -> n15  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n12 -> n16  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n12 -> n19  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n12 -> n17  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.List<System.Reflection.MemberInfo> GetSerializableMembers"];
n12 -> n99  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
n13 -> n14  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n36  [key=2, style=dotted];
n15 -> n18  [key=1, style=dashed, color=darkseagreen4, label=memberSerialization];
n15 -> n28  [key=1, style=dashed, color=darkseagreen4, label=memberSerialization];
n16 -> n17  [key=0, style=solid];
n16 -> n37  [key=2, style=dotted];
n16 -> n38  [key=2, style=dotted];
n16 -> n46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n16 -> n20  [key=1, style=dashed, color=darkseagreen4, label=allMembers];
n16 -> n30  [key=1, style=dashed, color=darkseagreen4, label=allMembers];
n19 -> n20  [key=0, style=solid];
n19 -> n37  [key=2, style=dotted];
n19 -> n38  [key=2, style=dotted];
n19 -> n40  [key=2, style=dotted];
n19 -> n50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n19 -> n22  [key=1, style=dashed, color=darkseagreen4, label=defaultMembers];
n14 -> n15  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n30  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n20  [key=0, style=solid];
n28 -> n45  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n39  [key=2, style=dotted];
n17 -> n23  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
n17 -> n25  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
n17 -> n27  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
n17 -> n29  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
n17 -> n33  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
n17 -> n34  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
n46 -> n47  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n34  [key=0, style=solid];
n20 -> n22  [key=1, style=dashed, color=darkseagreen4, label=member];
n20 -> n23  [key=1, style=dashed, color=darkseagreen4, label=member];
n20 -> n24  [key=1, style=dashed, color=darkseagreen4, label=member];
n20 -> n25  [key=1, style=dashed, color=darkseagreen4, label=member];
n20 -> n26  [key=1, style=dashed, color=darkseagreen4, label=member];
n20 -> n27  [key=1, style=dashed, color=darkseagreen4, label=member];
n20 -> n28  [key=1, style=dashed, color=darkseagreen4, label=member];
n20 -> n29  [key=1, style=dashed, color=darkseagreen4, label=member];
n30 -> n31  [key=0, style=solid];
n30 -> n34  [key=0, style=solid];
n30 -> n33  [key=1, style=dashed, color=darkseagreen4, label=member];
n23 -> n20  [key=0, style=solid];
n23 -> n43  [key=2, style=dotted];
n25 -> n20  [key=0, style=solid];
n25 -> n43  [key=2, style=dotted];
n27 -> n20  [key=0, style=solid];
n27 -> n43  [key=2, style=dotted];
n29 -> n20  [key=0, style=solid];
n29 -> n43  [key=2, style=dotted];
n33 -> n30  [key=0, style=solid];
n33 -> n43  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=0, style=solid];
n22 -> n42  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n20  [key=0, style=solid];
n21 -> n41  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=0, style=solid];
n24 -> n44  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n28  [key=0, style=solid];
n26 -> n44  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n33  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n35 -> n12  [key=0, style=bold, color=blue];
n47 -> n48  [key=0, style=solid];
n47 -> n49  [key=2, style=dotted];
n48 -> n46  [key=0, style=bold, color=blue];
n51 -> n52  [key=0, style=solid];
n51 -> n49  [key=2, style=dotted];
n52 -> n50  [key=0, style=bold, color=blue];
n53 -> n54  [key=0, style=solid, color=red];
n53 -> n55  [key=1, style=dashed, color=red, label="System.Type"];
n53 -> n56  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n53 -> n483  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
n53 -> d90  [key=1, style=dashed, color=green, label="System.Type"];
n54 -> n55  [key=0, style=solid, color=red];
n54 -> n56  [key=0, style=solid, color=red];
n54 -> n94  [key=2, style=dotted, color=red];
n55 -> n93  [key=0, style=solid, color=red];
n55 -> n95  [key=2, style=dotted, color=red];
n55 -> n96  [key=2, style=dotted, color=red];
n56 -> n57  [key=0, style=solid];
n56 -> n97  [key=2, style=dotted];
n56 -> n60  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n61  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n63  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n65  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n66  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n72  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n73  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n74  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n76  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n77  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n78  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n79  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n80  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n82  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n83  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n84  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n85  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n87  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n88  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n89  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n91  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> n92  [key=1, style=dashed, color=darkseagreen4, label=contract];
n56 -> d91  [key=1, style=dashed, color=green, label=contract];
n56 -> d89  [key=1, style=dashed, color=darkseagreen4, label=contract];
n57 -> n58  [key=0, style=solid];
n57 -> n98  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n36  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n99  [key=2, style=dotted];
n61 -> n100  [key=2, style=dotted];
n63 -> n64  [key=0, style=solid];
n63 -> n101  [key=2, style=dotted];
n63 -> n65  [key=1, style=dashed, color=darkseagreen4, label=attribute];
n63 -> n66  [key=1, style=dashed, color=darkseagreen4, label=attribute];
n63 -> n67  [key=1, style=dashed, color=darkseagreen4, label=attribute];
n63 -> n68  [key=1, style=dashed, color=darkseagreen4, label=attribute];
n65 -> n66  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n73 -> n74  [key=0, style=solid];
n73 -> n89  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n74 -> n103  [key=2, style=dotted];
n74 -> n76  [key=1, style=dashed, color=darkseagreen4, label=overrideConstructor];
n74 -> n77  [key=1, style=dashed, color=darkseagreen4, label=overrideConstructor];
n76 -> n77  [key=0, style=solid];
n76 -> n104  [key=2, style=dotted];
n77 -> n89  [key=0, style=solid];
n77 -> n105  [key=2, style=dotted];
n77 -> n100  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n78 -> n89  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n79 -> n84  [key=0, style=solid];
n80 -> n81  [key=0, style=solid];
n80 -> n106  [key=2, style=dotted];
n80 -> n82  [key=1, style=dashed, color=darkseagreen4, label=constructor];
n80 -> n83  [key=1, style=dashed, color=darkseagreen4, label=constructor];
n82 -> n83  [key=0, style=solid];
n82 -> n104  [key=2, style=dotted];
n83 -> n89  [key=0, style=solid];
n83 -> n105  [key=2, style=dotted];
n83 -> n100  [key=2, style=dotted];
n84 -> n85  [key=0, style=solid];
n84 -> n89  [key=0, style=solid];
n84 -> n107  [key=2, style=dotted];
n85 -> n86  [key=0, style=solid];
n85 -> n108  [key=2, style=dotted];
n85 -> n87  [key=1, style=dashed, color=darkseagreen4, label=constructor];
n85 -> n88  [key=1, style=dashed, color=darkseagreen4, label=constructor];
n87 -> n88  [key=0, style=solid];
n87 -> n104  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n105  [key=2, style=dotted];
n88 -> n100  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n109  [key=2, style=dotted];
n89 -> n91  [key=1, style=dashed, color=darkseagreen4, label=extensionDataMember];
n89 -> d89  [key=1, style=dashed, color=darkseagreen4, label=extensionDataMember];
n89 -> d88  [key=0, style=solid];
n91 -> n92  [key=0, style=solid];
n91 -> n110  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n58 -> n59  [key=0, style=solid];
n98 -> n320  [key=0, style=solid];
n98 -> n322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n98 -> n323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n98 -> n324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n98 -> n325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n98 -> n326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n98 -> n327  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n98 -> n328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n98 -> n56  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
n98 -> n425  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
n98 -> n450  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
n98 -> n466  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
n98 -> n472  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
n98 -> n478  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
n59 -> n60  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n70  [key=1, style=dashed, color=darkseagreen4, label=extensionDataNameResolver];
n62 -> n72  [key=1, style=dashed, color=darkseagreen4, label=extensionDataNameResolver];
n62 -> n62  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Serialization.Func<string, string> extensionDataNameResolver"];
n62 -> n69  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Serialization.Func<string, string> extensionDataNameResolver"];
n62 -> n696  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Serialization.Func<string, string> extensionDataNameResolver"];
n99 -> n544  [key=0, style=solid];
n99 -> n548  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n99 -> n550  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
n99 -> n555  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<Newtonsoft.Json.Serialization.JsonProperty> CreateProperties"];
n70 -> n71  [key=0, style=solid];
n70 -> n72  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n64 -> n70  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n67 -> n70  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n68 -> n102  [key=2, style=dotted];
n68 -> n112  [key=1, style=dashed, color=darkseagreen4, label=namingStrategy];
n69 -> n70  [key=0, style=solid];
n69 -> n112  [key=1, style=dashed, color=darkseagreen4, label=string];
n69 -> n72  [key=1, style=dashed, color=darkseagreen4, label=extensionDataNameResolver];
n112 -> n113  [key=0, style=solid];
n112 -> n114  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n75 -> n78  [key=0, style=solid];
n103 -> n231  [key=0, style=solid];
n103 -> n237  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n103 -> n238  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n103 -> n233  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.ConstructorInfo GetAttributeConstructor"];
n103 -> n62  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.ConstructorInfo GetAttributeConstructor"];
n81 -> n82  [key=0, style=solid];
n81 -> n89  [key=0, style=solid];
n106 -> n264  [key=0, style=solid];
n106 -> n62  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.ConstructorInfo GetParameterizedConstructor"];
n86 -> n87  [key=0, style=solid];
n86 -> n89  [key=0, style=solid];
n108 -> n248  [key=0, style=solid];
n108 -> n256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
n108 -> n62  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.ConstructorInfo GetImmutableConstructor"];
n108 -> n251  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.ConstructorInfo GetImmutableConstructor"];
n105 -> n269  [key=0, style=solid];
n105 -> n270  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ConstructorInfo"];
n105 -> n272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
n105 -> n74  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.ConstructorInfo constructor"];
n105 -> n80  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.ConstructorInfo constructor"];
n105 -> n85  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.ConstructorInfo constructor"];
n90 -> n91  [key=0, style=solid];
n90 -> n92  [key=0, style=solid];
n109 -> n115  [key=0, style=solid];
n109 -> n116  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.MemberInfo GetExtensionDataMemberForType"];
n110 -> n157  [key=0, style=solid];
n110 -> n160  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n110 -> n168  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n110 -> n170  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n110 -> n176  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n110 -> n203  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n110 -> n177  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
n110 -> n183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
n110 -> n184  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
n110 -> n56  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract"];
n110 -> n89  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo member"];
n93 -> n53  [key=0, style=bold, color=blue];
n111 -> n112  [key=0, style=solid];
n113 -> n111  [key=0, style=bold, color=blue];
n115 -> n116  [key=0, style=solid];
n115 -> n119  [key=2, style=dotted];
n115 -> n120  [key=2, style=dotted];
n115 -> n122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n115 -> n115  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<System.Reflection.MemberInfo> "];
n116 -> n117  [key=0, style=solid];
n116 -> n121  [key=2, style=dotted];
n116 -> n131  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n116 -> n116  [key=3, color=darkorchid, style=bold, label="method methodReturn bool "];
n119 -> n414  [key=0, style=solid];
n119 -> n415  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n119 -> n109  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
n119 -> n347  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
n122 -> n123  [key=0, style=solid];
n122 -> n124  [key=1, style=dashed, color=darkseagreen4, label="?"];
n122 -> n125  [key=1, style=dashed, color=darkseagreen4, label="?"];
n117 -> n118  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n131 -> n135  [key=1, style=dashed, color=darkseagreen4, label="?"];
n131 -> n137  [key=1, style=dashed, color=darkseagreen4, label="?"];
n131 -> n138  [key=1, style=dashed, color=darkseagreen4, label="?"];
n131 -> n139  [key=1, style=dashed, color=darkseagreen4, label="?"];
n131 -> n145  [key=1, style=dashed, color=darkseagreen4, label="?"];
n118 -> n109  [key=0, style=bold, color=blue];
n123 -> n124  [key=0, style=solid];
n123 -> n39  [key=2, style=dotted];
n123 -> n125  [key=1, style=dashed, color=darkseagreen4, label=m];
n123 -> n126  [key=1, style=dashed, color=darkseagreen4, label=m];
n124 -> n125  [key=0, style=solid];
n124 -> n128  [key=2, style=dotted];
n124 -> n129  [key=2, style=dotted];
n125 -> n126  [key=0, style=solid];
n125 -> n130  [key=2, style=dotted];
n125 -> n129  [key=2, style=dotted];
n126 -> n127  [key=0, style=solid];
n127 -> n122  [key=0, style=bold, color=blue];
n132 -> n133  [key=0, style=solid];
n132 -> n147  [key=2, style=dotted];
n135 -> n136  [key=0, style=solid];
n135 -> n137  [key=0, style=solid];
n135 -> n148  [key=2, style=dotted];
n137 -> n138  [key=0, style=solid];
n137 -> n139  [key=0, style=solid];
n137 -> n149  [key=2, style=dotted];
n138 -> n146  [key=0, style=solid];
n138 -> n150  [key=2, style=dotted];
n138 -> n151  [key=2, style=dotted];
n138 -> n152  [key=2, style=dotted];
n139 -> n140  [key=0, style=solid];
n139 -> n153  [key=2, style=dotted];
n145 -> n146  [key=0, style=solid];
n145 -> n150  [key=2, style=dotted];
n145 -> n151  [key=2, style=dotted];
n145 -> n152  [key=2, style=dotted];
n133 -> n134  [key=0, style=solid];
n133 -> n135  [key=0, style=solid];
n134 -> n146  [key=0, style=solid];
n136 -> n146  [key=0, style=solid];
n140 -> n141  [key=0, style=solid];
n140 -> n145  [key=0, style=solid];
n140 -> n154  [key=2, style=dotted];
n141 -> n142  [key=0, style=solid];
n141 -> n155  [key=2, style=dotted];
n141 -> n143  [key=1, style=dashed, color=darkseagreen4, label=keyType];
n142 -> n143  [key=0, style=solid];
n142 -> n155  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
n143 -> n145  [key=0, style=solid];
n143 -> n156  [key=2, style=dotted];
n144 -> n146  [key=0, style=solid];
n146 -> n131  [key=0, style=bold, color=blue];
n157 -> n158  [key=0, style=solid];
n157 -> n186  [key=2, style=dotted];
n157 -> n169  [key=1, style=dashed, color=darkseagreen4, label=extensionDataAttribute];
n157 -> n178  [key=1, style=dashed, color=darkseagreen4, label=extensionDataAttribute];
n160 -> n161  [key=0, style=solid];
n160 -> n187  [key=2, style=dotted];
n160 -> n165  [key=1, style=dashed, color=darkseagreen4, label=t];
n160 -> n167  [key=1, style=dashed, color=darkseagreen4, label=t];
n160 -> n172  [key=1, style=dashed, color=darkseagreen4, label=t];
n168 -> n169  [key=0, style=solid];
n168 -> n190  [key=2, style=dotted];
n168 -> n176  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
n168 -> n200  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
n168 -> n182  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
n168 -> n213  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
n170 -> n171  [key=0, style=solid];
n170 -> n191  [key=2, style=dotted];
n170 -> n192  [key=2, style=dotted];
n170 -> n176  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
n170 -> n202  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
n170 -> n205  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
n176 -> n177  [key=0, style=solid];
n176 -> n200  [key=1, style=dashed, color=darkseagreen4, label=object];
n176 -> n205  [key=1, style=dashed, color=darkseagreen4, label=object];
n176 -> n206  [key=1, style=dashed, color=darkseagreen4, label=string];
n176 -> n176  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Serialization.ExtensionDataSetter extensionDataSetter"];
n203 -> n207  [key=0, style=solid];
n203 -> n95  [key=2, style=dotted];
n203 -> n96  [key=2, style=dotted];
n177 -> n178  [key=0, style=solid];
n183 -> n184  [key=0, style=solid];
n184 -> n185  [key=0, style=solid];
n158 -> n159  [key=0, style=solid];
n158 -> n160  [key=0, style=solid];
n169 -> n170  [key=0, style=solid];
n169 -> n178  [key=0, style=solid];
n178 -> n179  [key=0, style=solid];
n178 -> n184  [key=0, style=solid];
n159 -> n185  [key=0, style=solid];
n161 -> n162  [key=0, style=solid];
n161 -> n154  [key=2, style=dotted];
n165 -> n166  [key=0, style=solid];
n165 -> n167  [key=0, style=solid];
n165 -> n188  [key=2, style=dotted];
n167 -> n168  [key=0, style=solid];
n167 -> n171  [key=1, style=dashed, color=darkseagreen4, label=createdType];
n172 -> n173  [key=0, style=solid];
n172 -> n194  [key=2, style=dotted];
n172 -> n175  [key=1, style=dashed, color=darkseagreen4, label=addMethod];
n162 -> n163  [key=0, style=solid];
n162 -> n155  [key=2, style=dotted];
n162 -> n166  [key=1, style=dashed, color=darkseagreen4, label=keyType];
n162 -> n172  [key=1, style=dashed, color=darkseagreen4, label=keyType];
n162 -> n174  [key=1, style=dashed, color=darkseagreen4, label=keyType];
n162 -> n179  [key=1, style=dashed, color=darkseagreen4, label=keyType];
n163 -> n164  [key=0, style=solid];
n163 -> n155  [key=2, style=dotted];
n163 -> n166  [key=1, style=dashed, color=darkseagreen4, label=valueType];
n163 -> n172  [key=1, style=dashed, color=darkseagreen4, label=valueType];
n163 -> n174  [key=1, style=dashed, color=darkseagreen4, label=valueType];
n163 -> n179  [key=1, style=dashed, color=darkseagreen4, label=valueType];
n163 -> n184  [key=1, style=dashed, color=darkseagreen4, label=valueType];
n166 -> n168  [key=0, style=solid];
n166 -> n189  [key=2, style=dotted];
n166 -> n171  [key=1, style=dashed, color=darkseagreen4, label=createdType];
n174 -> n175  [key=0, style=solid];
n174 -> n195  [key=2, style=dotted];
n179 -> n180  [key=0, style=solid];
n179 -> n189  [key=2, style=dotted];
n164 -> n165  [key=0, style=solid];
n164 -> n160  [key=3, color=darkorchid, style=bold, label="Local variable System.Type createdType"];
n171 -> n172  [key=0, style=solid];
n171 -> n193  [key=2, style=dotted];
n171 -> n176  [key=1, style=dashed, color=darkseagreen4, label=createExtensionDataDictionary];
n171 -> n204  [key=1, style=dashed, color=darkseagreen4, label=createExtensionDataDictionary];
n200 -> n201  [key=0, style=solid];
n200 -> n208  [key=2, style=dotted];
n200 -> n206  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
n182 -> n183  [key=0, style=solid];
n182 -> n213  [key=1, style=dashed, color=darkseagreen4, label=object];
n182 -> n62  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<object, object>> "];
n182 -> n182  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Serialization.ExtensionDataGetter extensionDataGetter"];
n213 -> n214  [key=0, style=solid];
n213 -> n208  [key=2, style=dotted];
n213 -> n216  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
n202 -> n203  [key=0, style=solid];
n202 -> n204  [key=0, style=solid];
n205 -> n206  [key=0, style=solid];
n205 -> n210  [key=2, style=dotted];
n204 -> n205  [key=0, style=solid];
n204 -> n209  [key=2, style=dotted];
n204 -> n206  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
n173 -> n174  [key=0, style=solid];
n173 -> n175  [key=0, style=solid];
n175 -> n176  [key=0, style=solid];
n175 -> n196  [key=2, style=dotted];
n175 -> n206  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionaryValue];
n206 -> n207  [key=0, style=solid];
n206 -> n211  [key=2, style=dotted];
n180 -> n181  [key=0, style=solid];
n180 -> n197  [key=2, style=dotted];
n180 -> n198  [key=2, style=dotted];
n181 -> n182  [key=0, style=solid];
n181 -> n104  [key=2, style=dotted];
n181 -> n216  [key=1, style=dashed, color=darkseagreen4, label=createEnumerableWrapper];
n216 -> n217  [key=0, style=solid];
n216 -> n218  [key=2, style=dotted];
n185 -> n110  [key=0, style=bold, color=blue];
n199 -> n200  [key=0, style=solid];
n199 -> n205  [key=1, style=dashed, color=darkseagreen4, label=object];
n199 -> n206  [key=1, style=dashed, color=darkseagreen4, label=string];
n201 -> n202  [key=0, style=solid];
n201 -> n206  [key=0, style=solid];
n207 -> n199  [key=0, style=bold, color=blue];
n212 -> n213  [key=0, style=solid];
n214 -> n215  [key=0, style=solid];
n214 -> n216  [key=0, style=solid];
n215 -> n217  [key=0, style=solid];
n217 -> n212  [key=0, style=bold, color=blue];
n219 -> n220  [key=0, style=solid];
n219 -> n221  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>"];
n220 -> n221  [key=0, style=solid];
n220 -> n9  [key=2, style=dotted];
n220 -> n10  [key=2, style=dotted];
n221 -> n222  [key=0, style=solid];
n222 -> n219  [key=0, style=bold, color=blue];
n223 -> n224  [key=0, style=solid];
n223 -> n225  [key=0, style=bold, color=crimson];
n224 -> n225  [key=0, style=solid];
n224 -> n226  [key=0, style=solid];
n225 -> n224  [key=0, style=solid];
n225 -> n227  [key=2, style=dotted];
n225 -> n225  [key=1, style=dashed, color=darkseagreen4, label=item];
n226 -> n223  [key=0, style=bold, color=blue];
n228 -> n229  [key=0, style=solid];
n228 -> n223  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator"];
n229 -> n230  [key=0, style=solid];
n229 -> n223  [key=2, style=dotted];
n230 -> n228  [key=0, style=bold, color=blue];
n231 -> n232  [key=0, style=solid];
n231 -> n241  [key=2, style=dotted];
n231 -> n38  [key=2, style=dotted];
n231 -> n242  [key=2, style=dotted];
n231 -> n245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n231 -> n233  [key=1, style=dashed, color=darkseagreen4, label=en];
n231 -> n234  [key=1, style=dashed, color=darkseagreen4, label=en];
n237 -> n238  [key=0, style=solid];
n237 -> n239  [key=0, style=solid];
n238 -> n240  [key=0, style=solid];
n238 -> n244  [key=2, style=dotted];
n232 -> n233  [key=0, style=solid];
n232 -> n237  [key=0, style=solid];
n232 -> n243  [key=2, style=dotted];
n245 -> n246  [key=0, style=solid];
n233 -> n234  [key=0, style=solid];
n233 -> n236  [key=1, style=dashed, color=darkseagreen4, label=conInfo];
n234 -> n235  [key=0, style=solid];
n234 -> n236  [key=0, style=solid];
n234 -> n243  [key=2, style=dotted];
n236 -> n240  [key=0, style=solid];
n235 -> n240  [key=0, style=solid];
n235 -> n150  [key=2, style=dotted];
n239 -> n240  [key=0, style=solid];
n240 -> n103  [key=0, style=bold, color=blue];
n246 -> n247  [key=0, style=solid];
n246 -> n148  [key=2, style=dotted];
n247 -> n245  [key=0, style=bold, color=blue];
n248 -> n249  [key=0, style=solid];
n248 -> n197  [key=2, style=dotted];
n256 -> n257  [key=0, style=solid];
n256 -> n263  [key=2, style=dotted];
n249 -> n250  [key=0, style=solid];
n249 -> n242  [key=2, style=dotted];
n249 -> n251  [key=1, style=dashed, color=darkseagreen4, label=en];
n249 -> n252  [key=1, style=dashed, color=darkseagreen4, label=en];
n250 -> n251  [key=0, style=solid];
n250 -> n260  [key=0, style=solid];
n250 -> n243  [key=2, style=dotted];
n251 -> n252  [key=0, style=solid];
n251 -> n253  [key=1, style=dashed, color=darkseagreen4, label=constructor];
n251 -> n259  [key=1, style=dashed, color=darkseagreen4, label=constructor];
n252 -> n253  [key=0, style=solid];
n252 -> n260  [key=0, style=solid];
n252 -> n243  [key=2, style=dotted];
n260 -> n261  [key=0, style=solid];
n253 -> n254  [key=0, style=solid];
n253 -> n262  [key=2, style=dotted];
n253 -> n255  [key=1, style=dashed, color=darkseagreen4, label=parameters];
n259 -> n261  [key=0, style=solid];
n254 -> n255  [key=0, style=solid];
n254 -> n260  [key=0, style=solid];
n255 -> n256  [key=0, style=solid];
n255 -> n259  [key=0, style=solid];
n257 -> n258  [key=0, style=solid];
n257 -> n255  [key=0, style=solid];
n263 -> n282  [key=0, style=solid];
n263 -> n284  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
n263 -> n285  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n263 -> n108  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonPropertyCollection properties"];
n263 -> n105  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonPropertyCollection properties"];
n263 -> n62  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonProperty MatchProperty"];
n258 -> n261  [key=0, style=solid];
n261 -> n108  [key=0, style=bold, color=blue];
n264 -> n265  [key=0, style=solid];
n264 -> n241  [key=2, style=dotted];
n264 -> n266  [key=1, style=dashed, color=darkseagreen4, label=constructors];
n265 -> n266  [key=0, style=solid];
n265 -> n267  [key=0, style=solid];
n266 -> n268  [key=0, style=solid];
n267 -> n268  [key=0, style=solid];
n268 -> n106  [key=0, style=bold, color=blue];
n269 -> n270  [key=0, style=solid];
n269 -> n262  [key=2, style=dotted];
n269 -> n271  [key=1, style=dashed, color=darkseagreen4, label=constructorParameters];
n270 -> n271  [key=0, style=solid];
n270 -> n279  [key=2, style=dotted];
n270 -> n276  [key=1, style=dashed, color=darkseagreen4, label=parameterCollection];
n270 -> n277  [key=1, style=dashed, color=darkseagreen4, label=parameterCollection];
n272 -> n273  [key=0, style=solid];
n272 -> n263  [key=2, style=dotted];
n272 -> n274  [key=1, style=dashed, color=darkseagreen4, label=matchingMemberProperty];
n271 -> n272  [key=0, style=solid];
n271 -> n277  [key=0, style=solid];
n271 -> n273  [key=1, style=dashed, color=darkseagreen4, label=parameterInfo];
n271 -> n274  [key=1, style=dashed, color=darkseagreen4, label=parameterInfo];
n276 -> n271  [key=0, style=solid];
n276 -> n281  [key=2, style=dotted];
n277 -> n278  [key=0, style=solid];
n273 -> n274  [key=0, style=solid];
n273 -> n271  [key=0, style=solid];
n274 -> n275  [key=0, style=solid];
n274 -> n280  [key=2, style=dotted];
n274 -> n276  [key=1, style=dashed, color=darkseagreen4, label=property];
n275 -> n276  [key=0, style=solid];
n275 -> n271  [key=0, style=solid];
n280 -> n290  [key=0, style=solid];
n280 -> n291  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo"];
n280 -> n292  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo"];
n280 -> n293  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo"];
n280 -> n296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n280 -> n297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n280 -> n298  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n280 -> n299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n280 -> n300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n280 -> n301  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n280 -> n302  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n280 -> n303  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n280 -> n304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n280 -> n305  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n280 -> n306  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n280 -> n307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n280 -> n272  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty matchingMemberProperty"];
n280 -> n271  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.ParameterInfo parameterInfo"];
n278 -> n105  [key=0, style=bold, color=blue];
n282 -> n283  [key=0, style=solid];
n282 -> n284  [key=0, style=solid];
n284 -> n285  [key=0, style=solid];
n284 -> n289  [key=2, style=dotted];
n284 -> n287  [key=1, style=dashed, color=darkseagreen4, label=property];
n285 -> n286  [key=0, style=solid];
n285 -> n287  [key=0, style=solid];
n283 -> n288  [key=0, style=solid];
n287 -> n288  [key=0, style=solid];
n286 -> n288  [key=0, style=solid];
n288 -> n263  [key=0, style=bold, color=blue];
n290 -> n291  [key=0, style=solid];
n290 -> n310  [key=2, style=dotted];
n290 -> n292  [key=1, style=dashed, color=darkseagreen4, label=property];
n290 -> n293  [key=1, style=dashed, color=darkseagreen4, label=property];
n290 -> n294  [key=1, style=dashed, color=darkseagreen4, label=property];
n290 -> n295  [key=1, style=dashed, color=darkseagreen4, label=property];
n290 -> n297  [key=1, style=dashed, color=darkseagreen4, label=property];
n290 -> n298  [key=1, style=dashed, color=darkseagreen4, label=property];
n290 -> n299  [key=1, style=dashed, color=darkseagreen4, label=property];
n290 -> n300  [key=1, style=dashed, color=darkseagreen4, label=property];
n290 -> n301  [key=1, style=dashed, color=darkseagreen4, label=property];
n290 -> n302  [key=1, style=dashed, color=darkseagreen4, label=property];
n290 -> n303  [key=1, style=dashed, color=darkseagreen4, label=property];
n290 -> n304  [key=1, style=dashed, color=darkseagreen4, label=property];
n290 -> n305  [key=1, style=dashed, color=darkseagreen4, label=property];
n290 -> n306  [key=1, style=dashed, color=darkseagreen4, label=property];
n290 -> n307  [key=1, style=dashed, color=darkseagreen4, label=property];
n290 -> n308  [key=1, style=dashed, color=darkseagreen4, label=property];
n291 -> n292  [key=0, style=solid];
n292 -> n293  [key=0, style=solid];
n292 -> n311  [key=2, style=dotted];
n293 -> n294  [key=0, style=solid];
n293 -> n312  [key=2, style=dotted];
n296 -> n297  [key=0, style=solid];
n296 -> n308  [key=0, style=solid];
n297 -> n298  [key=0, style=solid];
n298 -> n299  [key=0, style=solid];
n299 -> n300  [key=0, style=solid];
n299 -> n301  [key=0, style=solid];
n300 -> n301  [key=0, style=solid];
n301 -> n302  [key=0, style=solid];
n302 -> n303  [key=0, style=solid];
n303 -> n304  [key=0, style=solid];
n304 -> n305  [key=0, style=solid];
n305 -> n306  [key=0, style=solid];
n306 -> n307  [key=0, style=solid];
n307 -> n308  [key=0, style=solid];
n294 -> n295  [key=0, style=solid];
n295 -> n296  [key=0, style=solid];
n308 -> n309  [key=0, style=solid];
n309 -> n280  [key=0, style=bold, color=blue];
n313 -> n314  [key=0, style=solid];
n314 -> n315  [key=0, style=solid];
n314 -> n316  [key=2, style=dotted];
n315 -> n313  [key=0, style=bold, color=blue];
n317 -> n318  [key=0, style=solid];
n318 -> n319  [key=0, style=solid];
n318 -> n193  [key=2, style=dotted];
n319 -> n317  [key=0, style=bold, color=blue];
n320 -> n321  [key=0, style=solid];
n320 -> n101  [key=2, style=dotted];
n320 -> n322  [key=1, style=dashed, color=darkseagreen4, label=containerAttribute];
n322 -> n323  [key=0, style=solid];
n323 -> n324  [key=0, style=solid];
n323 -> n313  [key=2, style=dotted];
n324 -> n325  [key=0, style=solid];
n324 -> n330  [key=2, style=dotted];
n325 -> n326  [key=0, style=solid];
n325 -> n328  [key=0, style=solid];
n325 -> n331  [key=2, style=dotted];
n325 -> n107  [key=2, style=dotted];
n326 -> n327  [key=0, style=solid];
n326 -> n317  [key=2, style=dotted];
n327 -> n328  [key=0, style=solid];
n327 -> n107  [key=2, style=dotted];
n327 -> n332  [key=2, style=dotted];
n328 -> n329  [key=0, style=solid];
n328 -> n333  [key=2, style=dotted];
n321 -> n322  [key=0, style=solid];
n321 -> n323  [key=0, style=solid];
n329 -> n98  [key=0, style=bold, color=blue];
n333 -> n334  [key=0, style=solid];
n333 -> n336  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n333 -> n338  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n333 -> n340  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n333 -> n342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n333 -> n344  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
n333 -> n98  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
n334 -> n335  [key=0, style=solid];
n334 -> n346  [key=2, style=dotted];
n336 -> n337  [key=0, style=solid];
n336 -> n129  [key=2, style=dotted];
n338 -> n339  [key=0, style=solid];
n338 -> n129  [key=2, style=dotted];
n340 -> n341  [key=0, style=solid];
n340 -> n129  [key=2, style=dotted];
n342 -> n343  [key=0, style=solid];
n342 -> n129  [key=2, style=dotted];
n344 -> n345  [key=0, style=solid];
n344 -> n129  [key=2, style=dotted];
n335 -> n336  [key=0, style=solid];
n335 -> n337  [key=0, style=solid];
n337 -> n338  [key=0, style=solid];
n337 -> n339  [key=0, style=solid];
n339 -> n340  [key=0, style=solid];
n339 -> n341  [key=0, style=solid];
n341 -> n342  [key=0, style=solid];
n341 -> n343  [key=0, style=solid];
n343 -> n344  [key=0, style=solid];
n343 -> n345  [key=0, style=solid];
n345 -> n333  [key=0, style=bold, color=blue];
n347 -> n348  [key=0, style=solid];
n347 -> n353  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n348 -> n349  [key=0, style=solid];
n348 -> n366  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n348 -> n385  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n353 -> n354  [key=0, style=solid];
n353 -> n385  [key=0, style=solid];
n353 -> n119  [key=2, style=dotted];
n353 -> n359  [key=1, style=dashed, color=darkseagreen4, label=baseType];
n353 -> n360  [key=1, style=dashed, color=darkseagreen4, label=baseType];
n353 -> n361  [key=1, style=dashed, color=darkseagreen4, label=baseType];
n349 -> n350  [key=0, style=solid];
n349 -> n370  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n349 -> n385  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n366 -> n367  [key=0, style=solid];
n366 -> n39  [key=2, style=dotted];
n366 -> n366  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n366 -> n385  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n385 -> n347  [key=0, style=bold, color=blue];
n350 -> n351  [key=0, style=solid];
n350 -> n374  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n350 -> n385  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n370 -> n371  [key=0, style=solid];
n370 -> n39  [key=2, style=dotted];
n370 -> n370  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n370 -> n385  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n351 -> n352  [key=0, style=solid];
n351 -> n378  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n351 -> n385  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n374 -> n375  [key=0, style=solid];
n374 -> n39  [key=2, style=dotted];
n374 -> n374  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n374 -> n385  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n352 -> n353  [key=0, style=solid];
n352 -> n382  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
n352 -> n385  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
n378 -> n379  [key=0, style=solid];
n378 -> n39  [key=2, style=dotted];
n378 -> n378  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n378 -> n385  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
n382 -> n383  [key=0, style=solid];
n382 -> n39  [key=2, style=dotted];
n382 -> n382  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
n382 -> n385  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
n354 -> n355  [key=0, style=solid];
n354 -> n365  [key=1, style=dashed, color=darkseagreen4, label=currentOnSerializing];
n354 -> n62  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnSerializing"];
n354 -> n361  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnSerializing"];
n359 -> n360  [key=0, style=solid];
n359 -> n386  [key=2, style=dotted];
n359 -> n365  [key=1, style=dashed, color=darkseagreen4, label=skipSerializing];
n360 -> n361  [key=0, style=solid];
n360 -> n387  [key=2, style=dotted];
n360 -> n377  [key=1, style=dashed, color=darkseagreen4, label=skipDeserialized];
n361 -> n362  [key=0, style=solid];
n361 -> n353  [key=0, style=solid];
n361 -> n388  [key=2, style=dotted];
n361 -> n364  [key=1, style=dashed, color=darkseagreen4, label=method];
n361 -> n365  [key=1, style=dashed, color=darkseagreen4, label=method];
n361 -> n367  [key=1, style=dashed, color=darkseagreen4, label=method];
n361 -> n368  [key=1, style=dashed, color=darkseagreen4, label=method];
n361 -> n369  [key=1, style=dashed, color=darkseagreen4, label=method];
n361 -> n371  [key=1, style=dashed, color=darkseagreen4, label=method];
n361 -> n372  [key=1, style=dashed, color=darkseagreen4, label=method];
n361 -> n373  [key=1, style=dashed, color=darkseagreen4, label=method];
n361 -> n375  [key=1, style=dashed, color=darkseagreen4, label=method];
n361 -> n376  [key=1, style=dashed, color=darkseagreen4, label=method];
n361 -> n377  [key=1, style=dashed, color=darkseagreen4, label=method];
n361 -> n379  [key=1, style=dashed, color=darkseagreen4, label=method];
n361 -> n380  [key=1, style=dashed, color=darkseagreen4, label=method];
n361 -> n381  [key=1, style=dashed, color=darkseagreen4, label=method];
n361 -> n383  [key=1, style=dashed, color=darkseagreen4, label=method];
n361 -> n384  [key=1, style=dashed, color=darkseagreen4, label=method];
n355 -> n356  [key=0, style=solid];
n355 -> n369  [key=1, style=dashed, color=darkseagreen4, label=currentOnSerialized];
n355 -> n62  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnSerialized"];
n355 -> n361  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnSerialized"];
n365 -> n366  [key=0, style=solid];
n365 -> n369  [key=0, style=solid];
n365 -> n389  [key=2, style=dotted];
n365 -> n365  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
n356 -> n357  [key=0, style=solid];
n356 -> n373  [key=1, style=dashed, color=darkseagreen4, label=currentOnDeserializing];
n356 -> n62  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnDeserializing"];
n356 -> n361  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnDeserializing"];
n369 -> n370  [key=0, style=solid];
n369 -> n373  [key=0, style=solid];
n369 -> n389  [key=2, style=dotted];
n369 -> n369  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
n357 -> n358  [key=0, style=solid];
n357 -> n377  [key=1, style=dashed, color=darkseagreen4, label=currentOnDeserialized];
n357 -> n62  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnDeserialized"];
n357 -> n361  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnDeserialized"];
n373 -> n374  [key=0, style=solid];
n373 -> n377  [key=0, style=solid];
n373 -> n389  [key=2, style=dotted];
n373 -> n373  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
n358 -> n359  [key=0, style=solid];
n358 -> n381  [key=1, style=dashed, color=darkseagreen4, label=currentOnError];
n358 -> n62  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnError"];
n358 -> n361  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnError"];
n377 -> n378  [key=0, style=solid];
n377 -> n381  [key=0, style=solid];
n377 -> n389  [key=2, style=dotted];
n377 -> n377  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
n381 -> n382  [key=0, style=solid];
n381 -> n361  [key=0, style=solid];
n381 -> n389  [key=2, style=dotted];
n381 -> n381  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
n386 -> n410  [key=0, style=solid];
n386 -> n353  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
n386 -> n116  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldSkipSerializing"];
n387 -> n406  [key=0, style=solid];
n387 -> n353  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
n387 -> n116  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldSkipDeserialized"];
n362 -> n363  [key=0, style=solid];
n362 -> n361  [key=0, style=solid];
n364 -> n365  [key=0, style=solid];
n364 -> n262  [key=2, style=dotted];
n364 -> n369  [key=1, style=dashed, color=darkseagreen4, label=parameters];
n364 -> n373  [key=1, style=dashed, color=darkseagreen4, label=parameters];
n364 -> n377  [key=1, style=dashed, color=darkseagreen4, label=parameters];
n364 -> n381  [key=1, style=dashed, color=darkseagreen4, label=parameters];
n367 -> n368  [key=0, style=solid];
n367 -> n390  [key=2, style=dotted];
n367 -> n43  [key=2, style=dotted];
n368 -> n369  [key=0, style=solid];
n371 -> n372  [key=0, style=solid];
n371 -> n390  [key=2, style=dotted];
n371 -> n43  [key=2, style=dotted];
n372 -> n373  [key=0, style=solid];
n375 -> n376  [key=0, style=solid];
n375 -> n390  [key=2, style=dotted];
n375 -> n43  [key=2, style=dotted];
n376 -> n377  [key=0, style=solid];
n379 -> n380  [key=0, style=solid];
n379 -> n390  [key=2, style=dotted];
n379 -> n43  [key=2, style=dotted];
n380 -> n381  [key=0, style=solid];
n383 -> n384  [key=0, style=solid];
n383 -> n391  [key=2, style=dotted];
n383 -> n43  [key=2, style=dotted];
n384 -> n361  [key=0, style=solid];
n363 -> n364  [key=0, style=solid];
n363 -> n365  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
n363 -> n62  [key=3, color=darkorchid, style=bold, label="Local variable System.Type prevAttributeType"];
n389 -> n517  [key=0, style=solid];
n389 -> n519  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
n389 -> n520  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
n389 -> n521  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
n389 -> n522  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
n389 -> n523  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
n389 -> n524  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
n389 -> n525  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
n389 -> n526  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
n389 -> n527  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n389 -> n528  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo[]"];
n389 -> n529  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
n389 -> n530  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo[]"];
n389 -> n531  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
n389 -> n532  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n389 -> n361  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo method"];
n389 -> n364  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.ParameterInfo[] parameters"];
n389 -> n354  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo currentCallback"];
n389 -> n355  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo currentCallback"];
n389 -> n356  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo currentCallback"];
n389 -> n357  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo currentCallback"];
n389 -> n358  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo currentCallback"];
n389 -> n363  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type prevAttributeType"];
n389 -> n389  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type prevAttributeType"];
n389 -> n116  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsValidCallback"];
n392 -> n393  [key=0, style=solid];
n392 -> n394  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n392 -> n116  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsConcurrentOrObservableCollection"];
n392 -> n387  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
n392 -> n386  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
n393 -> n394  [key=0, style=solid];
n393 -> n402  [key=0, style=solid];
n393 -> n404  [key=2, style=dotted];
n394 -> n395  [key=0, style=solid];
n394 -> n405  [key=2, style=dotted];
n402 -> n403  [key=0, style=solid];
n395 -> n396  [key=0, style=solid];
n396 -> n397  [key=0, style=solid];
n397 -> n398  [key=0, style=solid];
n398 -> n399  [key=0, style=solid];
n399 -> n400  [key=0, style=solid];
n400 -> n401  [key=0, style=solid];
n401 -> n403  [key=0, style=solid];
n403 -> n392  [key=0, style=bold, color=blue];
n406 -> n407  [key=0, style=solid];
n406 -> n408  [key=0, style=solid];
n406 -> n392  [key=2, style=dotted];
n407 -> n409  [key=0, style=solid];
n408 -> n409  [key=0, style=solid];
n409 -> n387  [key=0, style=bold, color=blue];
n410 -> n411  [key=0, style=solid];
n410 -> n412  [key=0, style=solid];
n410 -> n392  [key=2, style=dotted];
n411 -> n413  [key=0, style=solid];
n412 -> n413  [key=0, style=solid];
n413 -> n386  [key=0, style=bold, color=blue];
n414 -> n415  [key=0, style=solid];
n414 -> n39  [key=2, style=dotted];
n414 -> n417  [key=1, style=dashed, color=darkseagreen4, label=ret];
n414 -> n419  [key=1, style=dashed, color=darkseagreen4, label=ret];
n414 -> n420  [key=1, style=dashed, color=darkseagreen4, label=ret];
n415 -> n416  [key=0, style=solid];
n415 -> n417  [key=1, style=dashed, color=darkseagreen4, label=current];
n415 -> n418  [key=1, style=dashed, color=darkseagreen4, label=current];
n415 -> n119  [key=3, color=darkorchid, style=bold, label="Local variable System.Type current"];
n417 -> n418  [key=0, style=solid];
n417 -> n43  [key=2, style=dotted];
n419 -> n420  [key=0, style=solid];
n419 -> n423  [key=2, style=dotted];
n420 -> n421  [key=0, style=solid];
n416 -> n417  [key=0, style=solid];
n416 -> n419  [key=0, style=solid];
n418 -> n416  [key=0, style=solid];
n418 -> n422  [key=2, style=dotted];
n418 -> n418  [key=1, style=dashed, color=darkseagreen4, label=current];
n421 -> n119  [key=0, style=bold, color=blue];
n424 -> n425  [key=0, style=solid];
n424 -> n427  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n424 -> n483  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
n425 -> n426  [key=0, style=solid];
n425 -> n444  [key=2, style=dotted];
n425 -> n430  [key=1, style=dashed, color=darkseagreen4, label=contract];
n425 -> n431  [key=1, style=dashed, color=darkseagreen4, label=contract];
n425 -> n432  [key=1, style=dashed, color=darkseagreen4, label=contract];
n425 -> n435  [key=1, style=dashed, color=darkseagreen4, label=contract];
n425 -> n437  [key=1, style=dashed, color=darkseagreen4, label=contract];
n425 -> n439  [key=1, style=dashed, color=darkseagreen4, label=contract];
n425 -> n440  [key=1, style=dashed, color=darkseagreen4, label=contract];
n425 -> n441  [key=1, style=dashed, color=darkseagreen4, label=contract];
n425 -> n442  [key=1, style=dashed, color=darkseagreen4, label=contract];
n427 -> n428  [key=0, style=solid];
n427 -> n44  [key=2, style=dotted];
n427 -> n429  [key=1, style=dashed, color=darkseagreen4, label=containerAttribute];
n426 -> n427  [key=0, style=solid];
n426 -> n98  [key=2, style=dotted];
n430 -> n432  [key=0, style=solid];
n430 -> n447  [key=1, style=dashed, color=darkseagreen4, label=string];
n431 -> n432  [key=0, style=solid];
n432 -> n433  [key=0, style=solid];
n432 -> n103  [key=2, style=dotted];
n432 -> n434  [key=1, style=dashed, color=darkseagreen4, label=overrideConstructor];
n432 -> n441  [key=1, style=dashed, color=darkseagreen4, label=overrideConstructor];
n435 -> n436  [key=0, style=solid];
n435 -> n189  [key=2, style=dotted];
n435 -> n438  [key=1, style=dashed, color=darkseagreen4, label=expectedParameterType];
n435 -> n440  [key=1, style=dashed, color=darkseagreen4, label=expectedParameterType];
n437 -> n441  [key=0, style=solid];
n439 -> n441  [key=0, style=solid];
n440 -> n443  [key=0, style=solid];
n440 -> n150  [key=2, style=dotted];
n440 -> n445  [key=2, style=dotted];
n441 -> n442  [key=0, style=solid];
n441 -> n104  [key=2, style=dotted];
n442 -> n443  [key=0, style=solid];
n428 -> n429  [key=0, style=solid];
n428 -> n431  [key=0, style=solid];
n429 -> n430  [key=0, style=solid];
n429 -> n102  [key=2, style=dotted];
n429 -> n447  [key=1, style=dashed, color=darkseagreen4, label=namingStrategy];
n447 -> n448  [key=0, style=solid];
n447 -> n114  [key=2, style=dotted];
n433 -> n434  [key=0, style=solid];
n433 -> n442  [key=0, style=solid];
n434 -> n435  [key=0, style=solid];
n434 -> n262  [key=2, style=dotted];
n434 -> n436  [key=1, style=dashed, color=darkseagreen4, label=parameters];
n434 -> n438  [key=1, style=dashed, color=darkseagreen4, label=parameters];
n436 -> n437  [key=0, style=solid];
n436 -> n438  [key=0, style=solid];
n438 -> n439  [key=0, style=solid];
n438 -> n440  [key=0, style=solid];
n438 -> n156  [key=2, style=dotted];
n443 -> n424  [key=0, style=bold, color=blue];
n446 -> n447  [key=0, style=solid];
n448 -> n446  [key=0, style=bold, color=blue];
n449 -> n450  [key=0, style=solid];
n449 -> n483  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
n449 -> n486  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
n450 -> n451  [key=0, style=solid];
n450 -> n464  [key=2, style=dotted];
n450 -> n452  [key=1, style=dashed, color=darkseagreen4, label=contract];
n450 -> n455  [key=1, style=dashed, color=darkseagreen4, label=contract];
n450 -> n457  [key=1, style=dashed, color=darkseagreen4, label=contract];
n450 -> n459  [key=1, style=dashed, color=darkseagreen4, label=contract];
n450 -> n460  [key=1, style=dashed, color=darkseagreen4, label=contract];
n450 -> n461  [key=1, style=dashed, color=darkseagreen4, label=contract];
n450 -> n462  [key=1, style=dashed, color=darkseagreen4, label=contract];
n451 -> n452  [key=0, style=solid];
n451 -> n98  [key=2, style=dotted];
n452 -> n453  [key=0, style=solid];
n452 -> n103  [key=2, style=dotted];
n452 -> n454  [key=1, style=dashed, color=darkseagreen4, label=overrideConstructor];
n452 -> n461  [key=1, style=dashed, color=darkseagreen4, label=overrideConstructor];
n455 -> n456  [key=0, style=solid];
n455 -> n189  [key=2, style=dotted];
n455 -> n458  [key=1, style=dashed, color=darkseagreen4, label=expectedParameterType];
n455 -> n460  [key=1, style=dashed, color=darkseagreen4, label=expectedParameterType];
n457 -> n461  [key=0, style=solid];
n459 -> n461  [key=0, style=solid];
n460 -> n463  [key=0, style=solid];
n460 -> n150  [key=2, style=dotted];
n460 -> n445  [key=2, style=dotted];
n461 -> n462  [key=0, style=solid];
n461 -> n104  [key=2, style=dotted];
n462 -> n463  [key=0, style=solid];
n453 -> n454  [key=0, style=solid];
n453 -> n462  [key=0, style=solid];
n454 -> n455  [key=0, style=solid];
n454 -> n262  [key=2, style=dotted];
n454 -> n456  [key=1, style=dashed, color=darkseagreen4, label=parameters];
n454 -> n458  [key=1, style=dashed, color=darkseagreen4, label=parameters];
n456 -> n457  [key=0, style=solid];
n456 -> n458  [key=0, style=solid];
n458 -> n459  [key=0, style=solid];
n458 -> n460  [key=0, style=solid];
n458 -> n156  [key=2, style=dotted];
n463 -> n449  [key=0, style=bold, color=blue];
n465 -> n466  [key=0, style=solid];
n465 -> n483  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
n466 -> n467  [key=0, style=solid];
n466 -> n470  [key=2, style=dotted];
n466 -> n468  [key=1, style=dashed, color=darkseagreen4, label=contract];
n467 -> n468  [key=0, style=solid];
n467 -> n98  [key=2, style=dotted];
n468 -> n469  [key=0, style=solid];
n469 -> n465  [key=0, style=bold, color=blue];
n471 -> n472  [key=0, style=solid];
n471 -> n483  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
n472 -> n473  [key=0, style=solid];
n472 -> n476  [key=2, style=dotted];
n472 -> n474  [key=1, style=dashed, color=darkseagreen4, label=contract];
n473 -> n474  [key=0, style=solid];
n473 -> n98  [key=2, style=dotted];
n474 -> n475  [key=0, style=solid];
n475 -> n471  [key=0, style=bold, color=blue];
n477 -> n478  [key=0, style=solid];
n477 -> n483  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
n478 -> n479  [key=0, style=solid];
n478 -> n482  [key=2, style=dotted];
n478 -> n480  [key=1, style=dashed, color=darkseagreen4, label=contract];
n479 -> n480  [key=0, style=solid];
n479 -> n98  [key=2, style=dotted];
n480 -> n481  [key=0, style=solid];
n481 -> n477  [key=0, style=bold, color=blue];
n483 -> n484  [key=0, style=solid];
n483 -> n485  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n483 -> n486  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n483 -> n489  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n483 -> n491  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n483 -> n493  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n483 -> n495  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n483 -> n497  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n483 -> n501  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n483 -> n502  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n483 -> n465  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
n483 -> n53  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
n483 -> n449  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
n483 -> n424  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
n483 -> n471  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
n483 -> n477  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
n484 -> n485  [key=0, style=solid];
n484 -> n486  [key=0, style=solid];
n484 -> n504  [key=2, style=dotted];
n485 -> n503  [key=0, style=solid];
n485 -> n465  [key=2, style=dotted];
n486 -> n487  [key=0, style=solid];
n486 -> n505  [key=2, style=dotted];
n486 -> n494  [key=1, style=dashed, color=darkseagreen4, label=t];
n486 -> n496  [key=1, style=dashed, color=darkseagreen4, label=t];
n486 -> n498  [key=1, style=dashed, color=darkseagreen4, label=t];
n486 -> n499  [key=1, style=dashed, color=darkseagreen4, label=t];
n486 -> n500  [key=1, style=dashed, color=darkseagreen4, label=t];
n489 -> n503  [key=0, style=solid];
n489 -> n53  [key=2, style=dotted];
n491 -> n503  [key=0, style=solid];
n491 -> n449  [key=2, style=dotted];
n493 -> n503  [key=0, style=solid];
n493 -> n424  [key=2, style=dotted];
n495 -> n503  [key=0, style=solid];
n495 -> n471  [key=2, style=dotted];
n497 -> n503  [key=0, style=solid];
n497 -> n424  [key=2, style=dotted];
n501 -> n503  [key=0, style=solid];
n501 -> n477  [key=2, style=dotted];
n502 -> n503  [key=0, style=solid];
n502 -> n53  [key=2, style=dotted];
n504 -> n509  [key=0, style=solid];
n504 -> n483  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
n487 -> n488  [key=0, style=solid];
n487 -> n101  [key=2, style=dotted];
n487 -> n490  [key=1, style=dashed, color=darkseagreen4, label=containerAttribute];
n487 -> n492  [key=1, style=dashed, color=darkseagreen4, label=containerAttribute];
n494 -> n495  [key=0, style=solid];
n494 -> n496  [key=0, style=solid];
n494 -> n506  [key=2, style=dotted];
n496 -> n497  [key=0, style=solid];
n496 -> n498  [key=0, style=solid];
n496 -> n507  [key=2, style=dotted];
n498 -> n499  [key=0, style=solid];
n498 -> n500  [key=0, style=solid];
n498 -> n156  [key=2, style=dotted];
n499 -> n503  [key=0, style=solid];
n499 -> n449  [key=2, style=dotted];
n500 -> n501  [key=0, style=solid];
n500 -> n502  [key=0, style=solid];
n500 -> n508  [key=2, style=dotted];
n488 -> n489  [key=0, style=solid];
n488 -> n490  [key=0, style=solid];
n490 -> n491  [key=0, style=solid];
n490 -> n492  [key=0, style=solid];
n492 -> n493  [key=0, style=solid];
n492 -> n494  [key=0, style=solid];
n508 -> n513  [key=0, style=solid];
n508 -> n486  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
n508 -> n116  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanConvertToString"];
n503 -> n483  [key=0, style=bold, color=blue];
n509 -> n510  [key=0, style=solid];
n509 -> n512  [key=2, style=dotted];
n510 -> n511  [key=0, style=solid];
n511 -> n504  [key=0, style=bold, color=blue];
n513 -> n514  [key=0, style=solid];
n513 -> n515  [key=0, style=solid];
n513 -> n506  [key=2, style=dotted];
n514 -> n516  [key=0, style=solid];
n515 -> n516  [key=0, style=solid];
n516 -> n508  [key=0, style=bold, color=blue];
n517 -> n518  [key=0, style=solid];
n517 -> n519  [key=0, style=solid];
n517 -> n41  [key=2, style=dotted];
n519 -> n520  [key=0, style=solid];
n519 -> n521  [key=0, style=solid];
n520 -> n534  [key=0, style=solid];
n520 -> n150  [key=2, style=dotted];
n520 -> n535  [key=2, style=dotted];
n520 -> n536  [key=2, style=dotted];
n521 -> n522  [key=0, style=solid];
n521 -> n523  [key=0, style=solid];
n522 -> n534  [key=0, style=solid];
n522 -> n150  [key=2, style=dotted];
n522 -> n535  [key=2, style=dotted];
n522 -> n536  [key=2, style=dotted];
n523 -> n524  [key=0, style=solid];
n523 -> n525  [key=0, style=solid];
n524 -> n534  [key=0, style=solid];
n524 -> n150  [key=2, style=dotted];
n524 -> n535  [key=2, style=dotted];
n524 -> n537  [key=2, style=dotted];
n525 -> n526  [key=0, style=solid];
n525 -> n527  [key=0, style=solid];
n526 -> n534  [key=0, style=solid];
n526 -> n150  [key=2, style=dotted];
n526 -> n535  [key=2, style=dotted];
n526 -> n445  [key=2, style=dotted];
n527 -> n528  [key=0, style=solid];
n527 -> n530  [key=0, style=solid];
n528 -> n529  [key=0, style=solid];
n528 -> n532  [key=0, style=solid];
n529 -> n534  [key=0, style=solid];
n529 -> n150  [key=2, style=dotted];
n529 -> n535  [key=2, style=dotted];
n529 -> n536  [key=2, style=dotted];
n530 -> n531  [key=0, style=solid];
n530 -> n532  [key=0, style=solid];
n531 -> n534  [key=0, style=solid];
n531 -> n150  [key=2, style=dotted];
n531 -> n535  [key=2, style=dotted];
n531 -> n537  [key=2, style=dotted];
n532 -> n533  [key=0, style=solid];
n532 -> n534  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
n518 -> n534  [key=0, style=solid];
n533 -> n534  [key=0, style=solid];
n534 -> n389  [key=0, style=bold, color=blue];
n535 -> n538  [key=0, style=solid];
n535 -> n539  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n535 -> n540  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n538 -> n539  [key=0, style=solid];
n538 -> n540  [key=0, style=solid];
n538 -> n542  [key=2, style=dotted];
n538 -> n543  [key=2, style=dotted];
n539 -> n541  [key=0, style=solid];
n540 -> n541  [key=0, style=solid];
n540 -> n445  [key=2, style=dotted];
n541 -> n535  [key=0, style=bold, color=blue];
n544 -> n545  [key=0, style=solid];
n544 -> n12  [key=2, style=dotted];
n544 -> n549  [key=1, style=dashed, color=darkseagreen4, label=members];
n548 -> n549  [key=0, style=solid];
n548 -> n279  [key=2, style=dotted];
n548 -> n554  [key=1, style=dashed, color=darkseagreen4, label=properties];
n548 -> n555  [key=1, style=dashed, color=darkseagreen4, label=properties];
n550 -> n551  [key=0, style=solid];
n550 -> n559  [key=2, style=dotted];
n550 -> n553  [key=1, style=dashed, color=darkseagreen4, label=property];
n550 -> n554  [key=1, style=dashed, color=darkseagreen4, label=property];
n545 -> n546  [key=0, style=solid];
n545 -> n547  [key=0, style=solid];
n549 -> n550  [key=0, style=solid];
n549 -> n555  [key=0, style=solid];
n546 -> n557  [key=0, style=solid];
n546 -> n95  [key=2, style=dotted];
n547 -> n548  [key=0, style=solid];
n547 -> n558  [key=2, style=dotted];
n547 -> n552  [key=1, style=dashed, color=darkseagreen4, label=nameTable];
n547 -> n553  [key=1, style=dashed, color=darkseagreen4, label=nameTable];
n558 -> n566  [key=0, style=solid];
n552 -> n553  [key=0, style=solid];
n553 -> n554  [key=0, style=solid];
n553 -> n560  [key=2, style=dotted];
n554 -> n549  [key=0, style=solid];
n554 -> n281  [key=2, style=dotted];
n555 -> n556  [key=0, style=solid];
n555 -> n561  [key=2, style=dotted];
n555 -> n562  [key=2, style=dotted];
n555 -> n563  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n551 -> n552  [key=0, style=solid];
n551 -> n549  [key=0, style=solid];
n559 -> n577  [key=0, style=solid];
n559 -> n578  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n559 -> n579  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n559 -> n580  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n559 -> n581  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n559 -> n582  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n559 -> n583  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
n559 -> n584  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n559 -> n585  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n559 -> n589  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n559 -> n591  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n559 -> n549  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo member"];
n559 -> n99  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.MemberSerialization memberSerialization"];
n556 -> n557  [key=0, style=solid];
n563 -> n564  [key=0, style=solid];
n557 -> n99  [key=0, style=bold, color=blue];
n564 -> n565  [key=0, style=solid];
n565 -> n563  [key=0, style=bold, color=blue];
n566 -> n567  [key=0, style=solid];
n567 -> n558  [key=0, style=bold, color=blue];
n568 -> n569  [key=0, style=solid];
n568 -> n571  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n568 -> n572  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n568 -> n559  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo member"];
n569 -> n570  [key=0, style=solid];
n571 -> n573  [key=0, style=solid];
n571 -> n575  [key=2, style=dotted];
n572 -> n573  [key=0, style=solid];
n572 -> n576  [key=2, style=dotted];
n570 -> n571  [key=0, style=solid];
n570 -> n572  [key=0, style=solid];
n573 -> n574  [key=0, style=solid];
n574 -> n568  [key=0, style=bold, color=blue];
n577 -> n578  [key=0, style=solid];
n577 -> n310  [key=2, style=dotted];
n577 -> n579  [key=1, style=dashed, color=darkseagreen4, label=property];
n577 -> n580  [key=1, style=dashed, color=darkseagreen4, label=property];
n577 -> n581  [key=1, style=dashed, color=darkseagreen4, label=property];
n577 -> n582  [key=1, style=dashed, color=darkseagreen4, label=property];
n577 -> n584  [key=1, style=dashed, color=darkseagreen4, label=property];
n577 -> n585  [key=1, style=dashed, color=darkseagreen4, label=property];
n577 -> n586  [key=1, style=dashed, color=darkseagreen4, label=property];
n577 -> n587  [key=1, style=dashed, color=darkseagreen4, label=property];
n577 -> n589  [key=1, style=dashed, color=darkseagreen4, label=property];
n577 -> n591  [key=1, style=dashed, color=darkseagreen4, label=property];
n577 -> n592  [key=1, style=dashed, color=darkseagreen4, label=property];
n578 -> n579  [key=0, style=solid];
n578 -> n187  [key=2, style=dotted];
n579 -> n580  [key=0, style=solid];
n580 -> n581  [key=0, style=solid];
n580 -> n568  [key=2, style=dotted];
n581 -> n582  [key=0, style=solid];
n581 -> n311  [key=2, style=dotted];
n582 -> n583  [key=0, style=solid];
n582 -> n312  [key=2, style=dotted];
n583 -> n584  [key=0, style=solid];
n583 -> n586  [key=0, style=solid];
n584 -> n585  [key=0, style=solid];
n584 -> n149  [key=2, style=dotted];
n585 -> n588  [key=0, style=solid];
n585 -> n594  [key=2, style=dotted];
n589 -> n590  [key=0, style=solid];
n589 -> n595  [key=2, style=dotted];
n591 -> n592  [key=0, style=solid];
n591 -> n596  [key=2, style=dotted];
n586 -> n587  [key=0, style=solid];
n587 -> n588  [key=0, style=solid];
n592 -> n593  [key=0, style=solid];
n588 -> n589  [key=0, style=solid];
n588 -> n590  [key=0, style=solid];
n590 -> n591  [key=0, style=solid];
n590 -> n592  [key=0, style=solid];
n595 -> n667  [key=0, style=solid];
n595 -> n559  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo member"];
n595 -> n62  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Predicate<object> CreateShouldSerializeTest"];
n595 -> n671  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Predicate<object> CreateShouldSerializeTest"];
n593 -> n559  [key=0, style=bold, color=blue];
n597 -> n598  [key=0, style=solid];
n597 -> n599  [key=1, style=dashed, color=darkseagreen4, label=object];
n597 -> n605  [key=1, style=dashed, color=darkseagreen4, label=string];
n597 -> n607  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n597 -> n615  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n616  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n617  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n620  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n621  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n622  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n624  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n625  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n626  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n627  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n628  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n629  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n630  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n631  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n632  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n633  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n634  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n635  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n636  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n637  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n638  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n639  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n640  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n641  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n643  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n645  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n646  [key=1, style=dashed, color=darkseagreen4, label=object];
n597 -> n647  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
n597 -> n649  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n650  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n651  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n652  [key=1, style=dashed, color=darkseagreen4, label=object];
n597 -> n654  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n597 -> n660  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
n598 -> n599  [key=0, style=solid];
n598 -> n44  [key=2, style=dotted];
n598 -> n602  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n603  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n609  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n610  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n619  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n620  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n621  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n622  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n624  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n625  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n626  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n627  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n628  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n629  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n630  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n631  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n598 -> n632  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
n599 -> n600  [key=0, style=solid];
n599 -> n44  [key=2, style=dotted];
n599 -> n642  [key=1, style=dashed, color=darkseagreen4, label=requiredAttribute];
n605 -> n606  [key=0, style=solid];
n605 -> n615  [key=1, style=dashed, color=darkseagreen4, label=mappedName];
n605 -> n616  [key=1, style=dashed, color=darkseagreen4, label=mappedName];
n607 -> n608  [key=0, style=solid];
n607 -> n44  [key=2, style=dotted];
n607 -> n611  [key=1, style=dashed, color=darkseagreen4, label=containerAttribute];
n607 -> n612  [key=1, style=dashed, color=darkseagreen4, label=containerAttribute];
n615 -> n617  [key=0, style=solid];
n615 -> n664  [key=2, style=dotted];
n616 -> n617  [key=0, style=solid];
n616 -> n665  [key=2, style=dotted];
n617 -> n618  [key=0, style=solid];
n620 -> n621  [key=0, style=solid];
n621 -> n622  [key=0, style=solid];
n622 -> n623  [key=0, style=solid];
n624 -> n625  [key=0, style=solid];
n625 -> n626  [key=0, style=solid];
n626 -> n627  [key=0, style=solid];
n627 -> n628  [key=0, style=solid];
n628 -> n629  [key=0, style=solid];
n629 -> n630  [key=0, style=solid];
n630 -> n631  [key=0, style=solid];
n630 -> n666  [key=2, style=dotted];
n631 -> n632  [key=0, style=solid];
n632 -> n642  [key=0, style=solid];
n633 -> n634  [key=0, style=solid];
n634 -> n635  [key=0, style=solid];
n635 -> n636  [key=0, style=solid];
n636 -> n637  [key=0, style=solid];
n637 -> n638  [key=0, style=solid];
n638 -> n639  [key=0, style=solid];
n639 -> n640  [key=0, style=solid];
n640 -> n641  [key=0, style=solid];
n641 -> n642  [key=0, style=solid];
n643 -> n644  [key=0, style=solid];
n645 -> n646  [key=0, style=solid];
n646 -> n647  [key=0, style=solid];
n646 -> n44  [key=2, style=dotted];
n646 -> n649  [key=1, style=dashed, color=darkseagreen4, label=hasJsonIgnoreAttribute];
n646 -> n650  [key=1, style=dashed, color=darkseagreen4, label=hasJsonIgnoreAttribute];
n647 -> n648  [key=0, style=solid];
n647 -> n650  [key=0, style=solid];
n649 -> n651  [key=0, style=solid];
n650 -> n651  [key=0, style=solid];
n651 -> n652  [key=0, style=solid];
n651 -> n316  [key=2, style=dotted];
n652 -> n653  [key=0, style=solid];
n652 -> n44  [key=2, style=dotted];
n652 -> n654  [key=1, style=dashed, color=darkseagreen4, label=defaultValueAttribute];
n654 -> n655  [key=0, style=solid];
n660 -> n661  [key=0, style=solid];
n660 -> n662  [key=0, style=solid];
n602 -> n603  [key=0, style=solid];
n602 -> n605  [key=0, style=solid];
n603 -> n604  [key=0, style=solid];
n603 -> n615  [key=1, style=dashed, color=darkseagreen4, label=mappedName];
n603 -> n616  [key=1, style=dashed, color=darkseagreen4, label=mappedName];
n609 -> n610  [key=0, style=solid];
n609 -> n611  [key=0, style=solid];
n610 -> n614  [key=0, style=solid];
n610 -> n663  [key=2, style=dotted];
n610 -> n615  [key=1, style=dashed, color=darkseagreen4, label=namingStrategy];
n619 -> n620  [key=0, style=solid];
n619 -> n633  [key=0, style=solid];
n600 -> n601  [key=0, style=solid];
n600 -> n597  [key=3, color=darkorchid, style=bold, label="Local variable string mappedName"];
n642 -> n643  [key=0, style=solid];
n642 -> n645  [key=0, style=solid];
n601 -> n602  [key=0, style=solid];
n604 -> n607  [key=0, style=solid];
n604 -> n615  [key=1, style=dashed, color=darkseagreen4, label=hasSpecifiedName];
n606 -> n607  [key=0, style=solid];
n606 -> n615  [key=1, style=dashed, color=darkseagreen4, label=hasSpecifiedName];
n608 -> n609  [key=0, style=solid];
n611 -> n612  [key=0, style=solid];
n611 -> n613  [key=0, style=solid];
n612 -> n614  [key=0, style=solid];
n612 -> n102  [key=2, style=dotted];
n612 -> n615  [key=1, style=dashed, color=darkseagreen4, label=namingStrategy];
n613 -> n614  [key=0, style=solid];
n613 -> n615  [key=1, style=dashed, color=darkseagreen4, label=namingStrategy];
n614 -> n615  [key=0, style=solid];
n614 -> n616  [key=0, style=solid];
n665 -> n692  [key=0, style=solid];
n665 -> n693  [key=1, style=dashed, color=darkseagreen4, label=string];
n665 -> n694  [key=1, style=dashed, color=darkseagreen4, label=string];
n665 -> n600  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
n665 -> n702  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
n665 -> n707  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
n665 -> n665  [key=3, color=darkorchid, style=bold, label="method methodReturn string ResolvePropertyName"];
n618 -> n619  [key=0, style=solid];
n618 -> n645  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
n618 -> n650  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
n618 -> n658  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
n618 -> n116  [key=3, color=darkorchid, style=bold, label="Local variable bool hasMemberAttribute"];
n658 -> n659  [key=0, style=solid];
n658 -> n660  [key=0, style=solid];
n623 -> n624  [key=0, style=solid];
n623 -> n645  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
n623 -> n650  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
n623 -> n658  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
n644 -> n645  [key=0, style=solid];
n644 -> n650  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
n644 -> n658  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
n648 -> n649  [key=0, style=solid];
n648 -> n116  [key=3, color=darkorchid, style=bold, label="Local variable bool hasIgnoreDataMemberAttribute"];
n653 -> n654  [key=0, style=solid];
n653 -> n655  [key=0, style=solid];
n655 -> n656  [key=0, style=solid];
n655 -> n662  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n656 -> n657  [key=0, style=solid];
n656 -> n658  [key=0, style=solid];
n662 -> n597  [key=0, style=bold, color=blue];
n657 -> n658  [key=0, style=solid];
n657 -> n662  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n659 -> n660  [key=0, style=solid];
n659 -> n662  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
n661 -> n662  [key=0, style=solid];
n667 -> n668  [key=0, style=solid];
n667 -> n194  [key=2, style=dotted];
n667 -> n670  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeMethod];
n668 -> n669  [key=0, style=solid];
n668 -> n670  [key=0, style=solid];
n670 -> n671  [key=0, style=solid];
n670 -> n196  [key=2, style=dotted];
n670 -> n674  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeCall];
n669 -> n672  [key=0, style=solid];
n671 -> n672  [key=0, style=solid];
n671 -> n674  [key=1, style=dashed, color=darkseagreen4, label=object];
n674 -> n675  [key=0, style=solid];
n674 -> n211  [key=2, style=dotted];
n672 -> n595  [key=0, style=bold, color=blue];
n673 -> n674  [key=0, style=solid];
n675 -> n673  [key=0, style=bold, color=blue];
n676 -> n677  [key=0, style=solid];
n676 -> n679  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
n676 -> n683  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n676 -> n684  [key=1, style=dashed, color=darkseagreen4, label=bool];
n676 -> n685  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
n677 -> n678  [key=0, style=solid];
n677 -> n687  [key=2, style=dotted];
n677 -> n680  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
n677 -> n682  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
n677 -> n684  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
n677 -> n685  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
n679 -> n680  [key=0, style=solid];
n679 -> n688  [key=2, style=dotted];
n679 -> n682  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
n679 -> n684  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
n679 -> n685  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
n683 -> n684  [key=0, style=solid];
n683 -> n690  [key=1, style=dashed, color=darkseagreen4, label=object];
n684 -> n685  [key=0, style=solid];
n684 -> n686  [key=0, style=solid];
n684 -> n191  [key=2, style=dotted];
n685 -> n686  [key=0, style=solid];
n685 -> n192  [key=2, style=dotted];
n678 -> n679  [key=0, style=solid];
n678 -> n680  [key=0, style=solid];
n680 -> n681  [key=0, style=solid];
n680 -> n682  [key=0, style=solid];
n680 -> n187  [key=2, style=dotted];
n682 -> n683  [key=0, style=solid];
n682 -> n190  [key=2, style=dotted];
n682 -> n690  [key=1, style=dashed, color=darkseagreen4, label=specifiedPropertyGet];
n681 -> n686  [key=0, style=solid];
n690 -> n691  [key=0, style=solid];
n690 -> n208  [key=2, style=dotted];
n686 -> n676  [key=0, style=bold, color=blue];
n689 -> n690  [key=0, style=solid];
n691 -> n689  [key=0, style=bold, color=blue];
n692 -> n693  [key=0, style=solid];
n692 -> n694  [key=0, style=solid];
n693 -> n695  [key=0, style=solid];
n693 -> n664  [key=2, style=dotted];
n694 -> n695  [key=0, style=solid];
n695 -> n665  [key=0, style=bold, color=blue];
n696 -> n697  [key=0, style=solid];
n696 -> n698  [key=1, style=dashed, color=darkseagreen4, label=string];
n696 -> n699  [key=1, style=dashed, color=darkseagreen4, label=string];
n696 -> n696  [key=3, color=darkorchid, style=bold, label="method methodReturn string ResolveExtensionDataName"];
n697 -> n698  [key=0, style=solid];
n697 -> n699  [key=0, style=solid];
n698 -> n700  [key=0, style=solid];
n698 -> n701  [key=2, style=dotted];
n699 -> n700  [key=0, style=solid];
n700 -> n696  [key=0, style=bold, color=blue];
n702 -> n703  [key=0, style=solid];
n702 -> n704  [key=1, style=dashed, color=darkseagreen4, label=string];
n702 -> n705  [key=1, style=dashed, color=darkseagreen4, label=string];
n702 -> n665  [key=3, color=darkorchid, style=bold, label="method methodReturn string ResolveDictionaryKey"];
n703 -> n704  [key=0, style=solid];
n703 -> n705  [key=0, style=solid];
n704 -> n706  [key=0, style=solid];
n704 -> n114  [key=2, style=dotted];
n705 -> n706  [key=0, style=solid];
n705 -> n665  [key=2, style=dotted];
n706 -> n702  [key=0, style=bold, color=blue];
n707 -> n708  [key=0, style=solid];
n707 -> n665  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetResolvedPropertyName"];
n708 -> n709  [key=0, style=solid];
n708 -> n665  [key=2, style=dotted];
n709 -> n707  [key=0, style=bold, color=blue];
d90 -> d91  [key=0, style=solid, color=green];
d90 -> n92  [key=0, style=solid, color=green];
d90 -> n94  [key=2, style=dotted, color=green];
d89 -> d90  [key=0, style=solid, color=green];
d89 -> n110  [key=2, style=dotted];
d88 -> d90  [key=0, style=solid, color=green];
d88 -> d89  [key=0, style=solid];
d91 -> n92  [key=0, style=solid, color=green];
d91 -> d109  [key=2, style=dotted, color=green];
d115 -> d116  [key=0, style=solid, color=green];
d115 -> n95  [key=2, style=dotted, color=green];
d115 -> d118  [key=2, style=dotted, color=green];
d115 -> n96  [key=2, style=dotted, color=green];
d114 -> d115  [key=0, style=solid, color=green];
d116 -> d114  [key=0, style=bold, color=blue];
m0_50 -> m0_211  [key=0, style=solid];
m0_50 -> m0_32  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_50 -> m0_170  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_50 -> m0_96  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_50 -> m0_164  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_50 -> m0_176  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_50 -> m0_158  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_50 -> m0_205  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_50 -> m0_182  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_50 -> m0_152  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_50 -> m0_11  [key=2, style=dotted];
m0_50 -> m0_12  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_232  [key=2, style=dotted];
m0_211 -> m0_213  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_214  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_215  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_216  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_217  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_218  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_219  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_220  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_221  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_222  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_223  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_224  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_225  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_228  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_229  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_211 -> m0_230  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_214  [key=0, style=solid];
m0_212 -> m0_233  [key=2, style=dotted];
m0_213 -> m0_231  [key=0, style=solid];
m0_213 -> m0_170  [key=2, style=dotted];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_216  [key=0, style=solid];
m0_214 -> m0_234  [key=2, style=dotted];
m0_215 -> m0_231  [key=0, style=solid];
m0_215 -> m0_96  [key=2, style=dotted];
m0_216 -> m0_217  [key=0, style=solid];
m0_216 -> m0_218  [key=0, style=solid];
m0_216 -> m0_235  [key=2, style=dotted];
m0_217 -> m0_231  [key=0, style=solid];
m0_217 -> m0_164  [key=2, style=dotted];
m0_218 -> m0_219  [key=0, style=solid];
m0_218 -> m0_220  [key=0, style=solid];
m0_218 -> m0_236  [key=2, style=dotted];
m0_219 -> m0_231  [key=0, style=solid];
m0_219 -> m0_176  [key=2, style=dotted];
m0_220 -> m0_221  [key=0, style=solid];
m0_220 -> m0_222  [key=0, style=solid];
m0_220 -> m0_237  [key=2, style=dotted];
m0_221 -> m0_231  [key=0, style=solid];
m0_221 -> m0_158  [key=2, style=dotted];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_224  [key=0, style=solid];
m0_222 -> m0_238  [key=2, style=dotted];
m0_223 -> m0_231  [key=0, style=solid];
m0_223 -> m0_164  [key=2, style=dotted];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_226  [key=0, style=solid];
m0_224 -> m0_239  [key=2, style=dotted];
m0_225 -> m0_231  [key=0, style=solid];
m0_225 -> m0_205  [key=2, style=dotted];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_228  [key=0, style=solid];
m0_226 -> m0_238  [key=2, style=dotted];
m0_227 -> m0_231  [key=0, style=solid];
m0_227 -> m0_182  [key=2, style=dotted];
m0_228 -> m0_229  [key=0, style=solid];
m0_228 -> m0_230  [key=0, style=solid];
m0_228 -> m0_238  [key=2, style=dotted];
m0_229 -> m0_231  [key=0, style=solid];
m0_229 -> m0_198  [key=2, style=dotted];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_96  [key=2, style=dotted];
m0_231 -> m0_50  [key=0, style=bold, color=blue];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_204  [key=2, style=dotted];
m0_199 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_199 -> m0_202  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_108  [key=2, style=dotted];
m0_201 -> m0_109  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_106  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_203 -> m0_198  [key=0, style=bold, color=blue];
m0_74 -> m0_69  [key=0, style=bold, color=blue];
m0_152 -> m0_199  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonDynamicContract CreateDynamicContract"];
m0_152 -> m0_211  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_124  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid, color=green];
m0_156 -> m0_157  [key=0, style=solid, color=green];
m0_156 -> m0_158  [key=2, style=dotted, color=green];
m0_157 -> m0_155  [key=0, style=bold, color=blue];
m0_157 -> m0_250  [key=0, style=solid];
m0_157 -> m0_252  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_157 -> m0_253  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_157 -> m0_254  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m0_157 -> m0_255  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_157 -> m0_256  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_157 -> m0_257  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_157 -> m0_258  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_157 -> m0_259  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_157 -> m0_260  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_157 -> m0_261  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo[]"];
m0_157 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_157 -> m0_263  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo[]"];
m0_157 -> m0_264  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_157 -> m0_265  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_157 -> m0_136  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo method"];
m0_157 -> m0_139  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.ParameterInfo[] parameters"];
m0_157 -> m0_138  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type prevAttributeType"];
m0_157 -> m0_157  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type prevAttributeType"];
m0_157 -> m0_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsValidCallback"];
m0_157 -> m0_93  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsValidCallback"];
m0_76 -> m0_77  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_19 -> m0_20  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_18  [key=0, style=bold, color=blue];
m0_116 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=o1];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_122  [key=2, style=dotted];
m0_116 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=o1];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_96  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_110 -> m0_114  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.ConstructorInfo GetParametrizedConstructor"];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_116  [key=2, style=dotted];
m0_111 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label=constructors];
m0_111 -> m0_45  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_114  [key=0, style=solid];
m0_112 -> m0_43  [key=2, style=dotted];
m0_113 -> m0_115  [key=0, style=solid];
m0_113 -> m0_106  [key=0, style=bold, color=blue];
m0_114 -> m0_115  [key=0, style=solid];
m0_115 -> m0_110  [key=0, style=bold, color=blue];
m0_115 -> m0_116  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_17 -> m0_16  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=r2];
m0_4 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=r2];
m0_4 -> m0_11  [key=2, style=dotted];
m0_4 -> m0_13  [key=2, style=dotted];
m0_4 -> m0_14  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_5 -> m0_15  [key=2, style=dotted];
m0_6 -> m0_4  [key=0, style=bold, color=blue];
m0_6 -> m0_15  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_149 -> m0_136  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_85  [key=0, style=bold, color=blue];
m0_93 -> m0_11  [key=2, style=dotted];
m0_93 -> m0_12  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_89 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label=mike];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_86  [key=2, style=dotted];
m0_89 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_94  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_63  [key=2, style=dotted];
m0_94 -> m0_88  [key=0, style=bold, color=blue];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=arnie];
m0_88 -> m0_85  [key=2, style=dotted];
m0_88 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=arnie];
m0_88 -> m0_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldSerializeEntityMember"];
m0_88 -> m0_93  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldSerializeEntityMember"];
m0_90 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=susan];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_86  [key=2, style=dotted];
m0_90 -> m0_93  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_93  [key=0, style=solid];
m0_91 -> m0_95  [key=2, style=dotted];
m0_95 -> m0_87  [key=0, style=bold, color=blue];
m0_150 -> m0_106  [key=0, style=bold, color=blue];
m0_106 -> m0_125  [key=0, style=solid];
m0_106 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_106 -> m0_97  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_106 -> m0_159  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_106 -> m0_165  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_106 -> m0_171  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_106 -> m0_177  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_106 -> m0_183  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_106 -> m0_199  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_106 -> m0_206  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_106 -> m0_107  [key=0, style=solid];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_151  [key=2, style=dotted];
m0_125 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=containerAttribute];
m0_127 -> m0_131  [key=0, style=solid];
m0_127 -> m0_128  [key=0, style=solid];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_71  [key=2, style=dotted];
m0_128 -> m0_134  [key=2, style=dotted];
m0_128 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m0_130 -> m0_131  [key=0, style=solid];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_117  [key=2, style=dotted];
m0_131 -> m0_137  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_152  [key=2, style=dotted];
m0_132 -> m0_15  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_136  [key=0, style=solid];
m0_133 -> m0_153  [key=2, style=dotted];
m0_133 -> m0_126  [key=0, style=bold, color=blue];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_121  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_154  [key=2, style=dotted];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_150  [key=0, style=solid];
m0_136 -> m0_155  [key=2, style=dotted];
m0_136 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_136 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_136 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_136 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_136 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_136 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_136 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_136 -> m0_146  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_136 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_136 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_136 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_140 -> m0_141  [key=0, style=solid, color=green];
m0_140 -> m0_142  [key=0, style=solid];
m0_140 -> m0_157  [key=2, style=dotted];
m0_140 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_140 -> m0_147  [key=2, style=dotted, color=green];
m0_140 -> m0_148  [key=2, style=dotted, color=green];
m0_140 -> m0_149  [key=2, style=dotted, color=green];
m0_141 -> m0_142  [key=0, style=solid, color=green];
m0_141 -> m0_135  [key=2, style=dotted, color=green];
m0_141 -> m0_150  [key=2, style=dotted, color=green];
m0_141 -> m0_145  [key=1, style=dashed, color=green, label=largeJson];
m0_142 -> m0_143  [key=0, style=solid, color=green];
m0_142 -> m0_144  [key=0, style=solid];
m0_142 -> m0_157  [key=2, style=dotted];
m0_142 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_142 -> m0_151  [key=2, style=dotted, color=green];
m0_143 -> m0_144  [key=0, style=solid, color=green];
m0_144 -> m0_145  [key=0, style=solid, color=green];
m0_144 -> m0_146  [key=0, style=solid];
m0_144 -> m0_157  [key=2, style=dotted];
m0_144 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_144 -> m0_152  [key=2, style=dotted, color=green];
m0_144 -> m0_148  [key=2, style=dotted, color=green];
m0_144 -> m0_149  [key=2, style=dotted, color=green];
m0_145 -> m0_146  [key=0, style=solid, color=green];
m0_145 -> m0_153  [key=2, style=dotted, color=green];
m0_145 -> m0_154  [key=2, style=dotted, color=green];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_148  [key=0, style=solid];
m0_146 -> m0_157  [key=2, style=dotted];
m0_146 -> m0_146  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_146 -> m0_138  [key=0, style=bold, color=blue];
m0_147 -> m0_148  [key=0, style=solid];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_136  [key=0, style=solid];
m0_148 -> m0_157  [key=2, style=dotted];
m0_148 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_128  [key=0, style=solid];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_131  [key=0, style=solid];
m0_129 -> m0_135  [key=2, style=dotted];
m0_129 -> m0_136  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_136  [key=0, style=solid];
m0_139 -> m0_140  [key=0, style=solid, color=green];
m0_139 -> m0_156  [key=2, style=dotted];
m0_139 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m0_139 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m0_139 -> m0_146  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m0_139 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m0_138 -> m0_139  [key=0, style=solid, color=green];
m0_138 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_138 -> m0_114  [key=3, color=darkorchid, style=bold, label="Local variable System.Type prevAttributeType"];
m0_47 -> m0_48  [key=0, style=solid];
m0_48 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label=roles];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_42  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_53  [key=2, style=dotted];
m0_49 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_54  [key=2, style=dotted];
m0_52 -> m0_47  [key=0, style=bold, color=blue];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_75  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_8 -> m0_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m0_8 -> m0_13  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m0_8 -> m0_15  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_9 -> m0_0  [key=0, style=bold, color=blue];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_382  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_10 -> m0_12  [key=0, style=solid];
m0_12 -> m0_8  [key=0, style=bold, color=blue];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_72  [key=3, color=darkorchid, style=bold, label="Local variable string j"];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_96 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_96 -> m0_211  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_105  [key=2, style=dotted];
m0_97 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_97 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_97 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_97 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_97 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_97 -> m0_97  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_107  [key=2, style=dotted];
m0_99 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=mike];
m0_99 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=mike];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_110  [key=2, style=dotted];
m0_102 -> m0_104  [key=2, style=dotted];
m0_102 -> m0_105  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_106  [key=2, style=dotted];
m0_98 -> m0_11  [key=2, style=dotted];
m0_98 -> m0_14  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_108  [key=2, style=dotted];
m0_100 -> m0_109  [key=2, style=dotted];
m0_100 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=susan];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_103  [key=0, style=solid];
m0_101 -> m0_104  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_96  [key=0, style=bold, color=blue];
m0_104 -> m0_96  [key=0, style=bold, color=blue];
m0_270 -> m0_0  [key=3, color=darkorchid, style=bold, label="Field variable System.Type _contractType"];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_211  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_181  [key=2, style=dotted];
m0_177 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_106  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_180 -> m0_176  [key=0, style=bold, color=blue];
m0_83 -> m0_63  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_81  [key=0, style=bold, color=blue];
m0_78 -> m0_86  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label=mike];
m0_78 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label=mike];
m0_79 -> m0_86  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=susan];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_43  [key=2, style=dotted];
m0_82 -> m0_84  [key=2, style=dotted];
m0_77 -> m0_85  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label=arnie];
m0_77 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=arnie];
m0_80 -> m0_81  [key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_84 -> m0_76  [key=0, style=bold, color=blue];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_185  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_182 -> m0_211  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_191  [key=2, style=dotted];
m0_183 -> m0_188  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_183 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_192  [key=2, style=dotted];
m0_185 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label=constructorInfo];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_106  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label="object[]"];
m0_189 -> m0_190  [key=0, style=solid];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_189  [key=0, style=solid];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_193  [key=2, style=dotted];
m0_187 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=methodCall];
m0_190 -> m0_182  [key=0, style=bold, color=blue];
m0_162 -> m0_158  [key=0, style=bold, color=blue];
m0_120 -> m0_63  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_125  [key=2, style=dotted];
m0_119 -> m0_117  [key=0, style=bold, color=blue];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_123  [key=2, style=dotted];
m0_118 -> m0_124  [key=2, style=dotted];
m0_118 -> m0_120  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_122  [key=2, style=dotted];
m0_121 -> m0_115  [key=0, style=bold, color=blue];
m0_121 -> m0_122  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_53 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_53 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_53 -> m0_57  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.List<System.Reflection.MemberInfo> GetSerializableMembers"];
m0_53 -> m0_108  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_71  [key=2, style=dotted];
m0_54 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label=dataContractAttribute];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_72  [key=2, style=dotted];
m0_55 -> m0_73  [key=2, style=dotted];
m0_55 -> m0_74  [key=2, style=dotted];
m0_55 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_55 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=defaultMembers];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_72  [key=2, style=dotted];
m0_56 -> m0_73  [key=2, style=dotted];
m0_56 -> m0_74  [key=2, style=dotted];
m0_56 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_56 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=allMembers];
m0_56 -> m0_60  [key=2, style=dotted];
m0_56 -> m0_61  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_69  [key=0, style=solid];
m0_67 -> m0_80  [key=2, style=dotted];
m0_67 -> m0_15  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_58  [key=0, style=solid];
m0_64 -> m0_79  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_62  [key=0, style=solid];
m0_60 -> m0_77  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_75  [key=2, style=dotted];
m0_57 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_57 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_57 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_57 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_57 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_57 -> m0_11  [key=2, style=dotted];
m0_57 -> m0_12  [key=2, style=dotted];
m0_57 -> m0_62  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_66  [key=0, style=solid];
m0_58 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_58 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_58 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_58 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_58 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_58 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_61 -> m0_58  [key=0, style=solid];
m0_61 -> m0_78  [key=2, style=dotted];
m0_63 -> m0_58  [key=0, style=solid];
m0_63 -> m0_78  [key=2, style=dotted];
m0_65 -> m0_58  [key=0, style=solid];
m0_65 -> m0_78  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_65  [key=3, color=darkorchid, style=bold, label="Local variable string j"];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_73  [key=2, style=dotted];
m0_68 -> m0_74  [key=2, style=dotted];
m0_68 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_68 -> m0_64  [key=0, style=bold, color=blue];
m0_69 -> m0_70  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_58  [key=0, style=solid];
m0_59 -> m0_76  [key=2, style=dotted];
m0_59 -> m0_55  [key=0, style=bold, color=blue];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_11  [key=2, style=dotted];
m0_66 -> m0_62  [key=2, style=dotted];
m0_66 -> m0_14  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_64  [key=0, style=solid];
m0_62 -> m0_79  [key=2, style=dotted];
m0_70 -> m0_53  [key=0, style=bold, color=blue];
m0_70 -> m0_60  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=s];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [key=0, style=solid];
m0_46 -> m0_32  [key=0, style=bold, color=blue];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_32 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_32 -> m0_35  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract ResolveContract"];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_35  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_0  [key=2, style=dotted];
m0_36 -> m0_48  [key=2, style=dotted];
m0_36 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_36 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_50  [key=2, style=dotted];
m0_39 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_39 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_39 -> m0_46  [key=2, style=dotted];
m0_34 -> m0_46  [key=0, style=solid];
m0_34 -> m0_47  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_50  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_35 -> m0_42  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_22  [key=2, style=dotted];
m0_37 -> m0_44  [key=2, style=dotted];
m0_37 -> m0_45  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_45  [key=0, style=solid];
m0_38 -> m0_49  [key=2, style=dotted];
m0_38 -> m0_43  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_45 -> m0_46  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_43  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_22  [key=2, style=dotted];
m0_41 -> m0_34  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_51  [key=2, style=dotted];
m0_42 -> m0_52  [key=2, style=dotted];
m0_42 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=updatedCache];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_27  [key=2, style=dotted];
m0_29 -> m0_31  [key=0, style=solid];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_211  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_159 -> m0_160  [key=0, style=solid, color=green];
m0_159 -> n444  [key=2, style=dotted];
m0_159 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_160 -> m0_161  [key=0, style=solid, color=green];
m0_160 -> m0_106  [key=2, style=dotted];
m0_160 -> m0_162  [key=2, style=dotted, color=green];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_159  [key=0, style=bold, color=blue];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_211  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_210  [key=2, style=dotted];
m0_206 -> m0_208  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_106  [key=2, style=dotted];
m0_208 -> m0_209  [key=0, style=solid];
m0_209 -> m0_205  [key=0, style=bold, color=blue];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_45  [key=2, style=dotted];
m0_288 -> m0_297  [key=0, style=solid];
m0_288 -> m0_298  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_288 -> m0_299  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_288 -> m0_300  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_288 -> m0_301  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_288 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_288 -> m0_306  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_288 -> m0_307  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_288 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_288 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m0_288 -> m0_328  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_288 -> m0_329  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_288 -> m0_330  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_288 -> m0_331  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_288 -> m0_339  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_288 -> m0_340  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_288 -> m0_280  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo member"];
m0_288 -> m0_108  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.MemberSerialization memberSerialization"];
m0_297 -> m0_298  [key=0, style=solid];
m0_297 -> m0_343  [key=2, style=dotted];
m0_297 -> m0_299  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_300  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_314  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_316  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_318  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_328  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_329  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_330  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_332  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_333  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_335  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_336  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_337  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_338  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_339  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_340  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_297 -> m0_341  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_298 -> m0_299  [key=0, style=solid];
m0_298 -> m0_344  [key=2, style=dotted];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_290  [key=2, style=dotted];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_120  [key=2, style=dotted];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_71  [key=2, style=dotted];
m0_301 -> m0_303  [key=1, style=dashed, color=darkseagreen4, label=dataContractAttribute];
m0_304 -> m0_306  [key=0, style=solid];
m0_304 -> m0_79  [key=2, style=dotted];
m0_304 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_304 -> m0_312  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_304 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_304 -> m0_318  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_304 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_304 -> m0_326  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_79  [key=2, style=dotted];
m0_306 -> m0_309  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_306 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_306 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_306 -> m0_316  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_306 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_306 -> m0_324  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_306 -> m0_333  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_306 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_306 -> m0_335  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_306 -> m0_336  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_306 -> m0_337  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_306 -> m0_338  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_79  [key=2, style=dotted];
m0_307 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label=hasIgnoreAttribute];
m0_313 -> m0_314  [key=0, style=solid];
m0_320 -> m0_321  [key=0, style=solid];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_346  [key=2, style=dotted];
m0_329 -> m0_330  [key=0, style=solid];
m0_329 -> m0_347  [key=2, style=dotted];
m0_330 -> m0_331  [key=0, style=solid];
m0_330 -> m0_344  [key=2, style=dotted];
m0_330 -> m0_120  [key=2, style=dotted];
m0_331 -> m0_332  [key=0, style=solid];
m0_331 -> m0_79  [key=2, style=dotted];
m0_339 -> m0_340  [key=0, style=solid];
m0_339 -> m0_348  [key=2, style=dotted];
m0_340 -> m0_341  [key=0, style=solid];
m0_340 -> m0_349  [key=2, style=dotted];
m0_314 -> m0_315  [key=0, style=solid];
m0_314 -> m0_345  [key=2, style=dotted];
m0_316 -> m0_320  [key=0, style=solid];
m0_318 -> m0_320  [key=0, style=solid];
m0_319 -> m0_320  [key=0, style=solid];
m0_332 -> m0_333  [key=0, style=solid];
m0_333 -> m0_334  [key=0, style=solid];
m0_334 -> m0_335  [key=0, style=solid];
m0_335 -> m0_336  [key=0, style=solid];
m0_336 -> m0_337  [key=0, style=solid];
m0_337 -> m0_338  [key=0, style=solid];
m0_338 -> m0_339  [key=0, style=solid];
m0_341 -> m0_342  [key=0, style=solid];
m0_302 -> m0_303  [key=0, style=solid];
m0_303 -> m0_304  [key=0, style=solid];
m0_303 -> m0_305  [key=0, style=solid];
m0_305 -> m0_306  [key=0, style=solid];
m0_305 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_305 -> m0_312  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_305 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_305 -> m0_318  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_305 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_305 -> m0_326  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_311 -> m0_312  [key=0, style=solid];
m0_311 -> m0_313  [key=0, style=solid];
m0_312 -> m0_314  [key=0, style=solid];
m0_317 -> m0_318  [key=0, style=solid];
m0_317 -> m0_319  [key=0, style=solid];
m0_326 -> m0_327  [key=0, style=solid];
m0_326 -> m0_328  [key=0, style=solid];
m0_309 -> m0_310  [key=0, style=solid];
m0_309 -> m0_311  [key=0, style=solid];
m0_310 -> m0_314  [key=0, style=solid];
m0_315 -> m0_316  [key=0, style=solid];
m0_315 -> m0_317  [key=0, style=solid];
m0_324 -> m0_325  [key=0, style=solid];
m0_324 -> m0_326  [key=0, style=solid];
m0_308 -> m0_309  [key=0, style=solid];
m0_321 -> m0_322  [key=0, style=solid];
m0_321 -> m0_328  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m0_321 -> m0_329  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m0_321 -> m0_10  [key=3, color=darkorchid, style=bold, label="Local variable bool allowNonPublicAccess"];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_324  [key=0, style=solid];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_328  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m0_323 -> m0_329  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m0_325 -> m0_326  [key=0, style=solid];
m0_325 -> m0_328  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m0_325 -> m0_329  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m0_327 -> m0_328  [key=0, style=solid];
m0_327 -> m0_329  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m0_342 -> m0_288  [key=0, style=bold, color=blue];
m0_14 -> m0_15  [key=0, style=solid];
m0_123 -> m0_121  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_7 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_3 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_11  [key=2, style=dotted];
m0_3 -> m0_13  [key=2, style=dotted];
m0_3 -> m0_12  [key=2, style=dotted];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_1 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=red];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_10  [key=2, style=dotted];
m0_1 -> m0_380  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_11  [key=2, style=dotted];
m0_2 -> m0_12  [key=2, style=dotted];
m0_2 -> m0_380  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_269 -> m0_271  [key=0, style=solid];
m0_269 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_269 -> m0_273  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_271 -> m0_272  [key=0, style=solid];
m0_271 -> m0_273  [key=0, style=solid];
m0_272 -> m0_274  [key=0, style=solid];
m0_273 -> m0_274  [key=0, style=solid];
m0_273 -> m0_275  [key=2, style=dotted];
m0_274 -> m0_269  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_8  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.ResolverContractKey other"];
m0_15 -> m0_13  [key=0, style=bold, color=blue];
m0_107 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label=house];
m0_107 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label=house];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_114  [key=2, style=dotted];
m0_107 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=house];
m0_107 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label=house];
m0_85 -> m0_86  [key=0, style=solid];
m0_348 -> m0_350  [key=0, style=solid];
m0_348 -> m0_288  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo member"];
m0_348 -> m0_114  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Predicate<object> CreateShouldSerializeTest"];
m0_348 -> m0_354  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Predicate<object> CreateShouldSerializeTest"];
m0_350 -> m0_351  [key=0, style=solid];
m0_350 -> m0_356  [key=2, style=dotted];
m0_350 -> m0_353  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeMethod];
m0_351 -> m0_352  [key=0, style=solid];
m0_351 -> m0_353  [key=0, style=solid];
m0_353 -> m0_354  [key=0, style=solid];
m0_353 -> m0_193  [key=2, style=dotted];
m0_353 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeCall];
m0_352 -> m0_355  [key=0, style=solid];
m0_354 -> m0_355  [key=0, style=solid];
m0_354 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_355 -> m0_348  [key=0, style=bold, color=blue];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>"];
m0_27 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>"];
m0_27 -> m0_42  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract> cache"];
m0_27 -> m0_23  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid];
m0_31 -> m0_27  [key=0, style=bold, color=blue];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_211  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_169  [key=2, style=dotted];
m0_165 -> m0_167  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_106  [key=2, style=dotted];
m0_167 -> m0_168  [key=0, style=solid];
m0_168 -> m0_164  [key=0, style=bold, color=blue];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_84  [key=2, style=dotted];
m0_345 -> m0_378  [key=0, style=solid];
m0_345 -> m0_308  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
m0_345 -> m0_345  [key=3, color=darkorchid, style=bold, label="method methodReturn string ResolvePropertyName"];
m0_378 -> m0_379  [key=0, style=solid];
m0_379 -> m0_345  [key=0, style=bold, color=blue];
m0_374 -> m0_375  [key=0, style=solid];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_197  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_196 -> m0_194  [key=0, style=bold, color=blue];
m0_358 -> m0_359  [key=0, style=solid];
m0_358 -> m0_197  [key=2, style=dotted];
m0_357 -> m0_358  [key=0, style=solid];
m0_359 -> m0_357  [key=0, style=bold, color=blue];
m0_375 -> m0_376  [key=0, style=solid];
m0_375 -> m0_377  [key=2, style=dotted];
m0_376 -> m0_374  [key=0, style=bold, color=blue];
m0_349 -> m0_360  [key=0, style=solid];
m0_349 -> m0_362  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_349 -> m0_366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_349 -> m0_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_349 -> m0_297  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property"];
m0_349 -> m0_288  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo member"];
m0_360 -> m0_361  [key=0, style=solid];
m0_360 -> m0_369  [key=2, style=dotted];
m0_360 -> m0_363  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_360 -> m0_365  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_360 -> m0_367  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_362 -> m0_363  [key=0, style=solid];
m0_362 -> m0_370  [key=2, style=dotted];
m0_362 -> m0_365  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_362 -> m0_367  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_366 -> m0_367  [key=0, style=solid];
m0_366 -> m0_375  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_367 -> m0_368  [key=0, style=solid];
m0_367 -> m0_373  [key=2, style=dotted];
m0_361 -> m0_362  [key=0, style=solid];
m0_361 -> m0_363  [key=0, style=solid];
m0_363 -> m0_364  [key=0, style=solid];
m0_363 -> m0_365  [key=0, style=solid];
m0_363 -> m0_344  [key=2, style=dotted];
m0_363 -> m0_371  [key=2, style=dotted];
m0_365 -> m0_366  [key=0, style=solid];
m0_365 -> m0_372  [key=2, style=dotted];
m0_365 -> m0_375  [key=1, style=dashed, color=darkseagreen4, label=specifiedPropertyGet];
m0_364 -> m0_368  [key=0, style=solid];
m0_368 -> m0_349  [key=0, style=bold, color=blue];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_211  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_175  [key=2, style=dotted];
m0_171 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_106  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_174 -> m0_170  [key=0, style=bold, color=blue];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_244  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_239 -> m0_211  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m0_239 -> m0_93  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanConvertToString"];
m0_239 -> m0_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanConvertToString"];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_248  [key=2, style=dotted];
m0_240 -> m0_242  [key=1, style=dashed, color=darkseagreen4, label=converter];
m0_244 -> m0_245  [key=0, style=solid];
m0_244 -> m0_246  [key=0, style=solid];
m0_244 -> m0_236  [key=2, style=dotted];
m0_241 -> m0_242  [key=0, style=solid];
m0_241 -> m0_244  [key=0, style=solid];
m0_241 -> m0_48  [key=2, style=dotted];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_244  [key=0, style=solid];
m0_242 -> m0_249  [key=2, style=dotted];
m0_243 -> m0_247  [key=0, style=solid];
m0_245 -> m0_247  [key=0, style=solid];
m0_246 -> m0_247  [key=0, style=solid];
m0_247 -> m0_239  [key=0, style=bold, color=blue];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [key=0, style=solid];
m0_26 -> m0_10  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_29  [key=2, style=dotted];
m0_26 -> m0_30  [key=2, style=dotted];
m0_26 -> m0_22  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=hexString];
m0_25 -> m0_28  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=0, style=solid];
m0_250 -> m0_251  [key=0, style=solid];
m0_250 -> m0_252  [key=0, style=solid];
m0_250 -> m0_76  [key=2, style=dotted];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_254  [key=0, style=solid];
m0_253 -> m0_267  [key=0, style=solid];
m0_253 -> m0_268  [key=2, style=dotted];
m0_253 -> m0_269  [key=2, style=dotted];
m0_253 -> m0_270  [key=2, style=dotted];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_256  [key=0, style=solid];
m0_255 -> m0_267  [key=0, style=solid];
m0_255 -> m0_268  [key=2, style=dotted];
m0_255 -> m0_269  [key=2, style=dotted];
m0_255 -> m0_270  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_258  [key=0, style=solid];
m0_257 -> m0_267  [key=0, style=solid];
m0_257 -> m0_268  [key=2, style=dotted];
m0_257 -> m0_269  [key=2, style=dotted];
m0_257 -> m0_270  [key=2, style=dotted];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_260  [key=0, style=solid];
m0_259 -> m0_267  [key=0, style=solid];
m0_259 -> m0_268  [key=2, style=dotted];
m0_259 -> m0_269  [key=2, style=dotted];
m0_259 -> m0_270  [key=2, style=dotted];
m0_260 -> m0_261  [key=0, style=solid];
m0_260 -> m0_263  [key=0, style=solid];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_265  [key=0, style=solid];
m0_262 -> m0_267  [key=0, style=solid];
m0_262 -> m0_268  [key=2, style=dotted];
m0_262 -> m0_269  [key=2, style=dotted];
m0_262 -> m0_270  [key=2, style=dotted];
m0_263 -> m0_264  [key=0, style=solid];
m0_263 -> m0_265  [key=0, style=solid];
m0_264 -> m0_267  [key=0, style=solid];
m0_264 -> m0_268  [key=2, style=dotted];
m0_264 -> m0_269  [key=2, style=dotted];
m0_264 -> m0_270  [key=2, style=dotted];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_267  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m0_251 -> m0_267  [key=0, style=solid];
m0_266 -> m0_267  [key=0, style=solid];
m0_267 -> m0_157  [key=0, style=bold, color=blue];
m0_290 -> m0_291  [key=0, style=solid];
m0_290 -> m0_292  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_290 -> m0_293  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_290 -> m0_288  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo member"];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_293  [key=0, style=solid];
m0_292 -> m0_294  [key=0, style=solid];
m0_292 -> m0_295  [key=2, style=dotted];
m0_293 -> m0_294  [key=0, style=solid];
m0_293 -> m0_296  [key=2, style=dotted];
m0_294 -> m0_290  [key=0, style=bold, color=blue];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_276  [key=0, style=solid];
m0_108 -> m0_279  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_108 -> m0_281  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m0_108 -> m0_152  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m0_108 -> m0_201  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.MemberSerialization memberSerialization"];
m0_22 -> m0_23  [key=0, style=solid];
m0_276 -> m0_277  [key=0, style=solid];
m0_276 -> m0_53  [key=2, style=dotted];
m0_276 -> m0_280  [key=1, style=dashed, color=darkseagreen4, label=members];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_287  [key=2, style=dotted];
m0_279 -> m0_283  [key=1, style=dashed, color=darkseagreen4, label=properties];
m0_279 -> m0_284  [key=1, style=dashed, color=darkseagreen4, label=properties];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_288  [key=2, style=dotted];
m0_281 -> m0_283  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_279  [key=0, style=solid];
m0_280 -> m0_281  [key=0, style=solid];
m0_280 -> m0_284  [key=0, style=solid];
m0_278 -> m0_285  [key=0, style=solid];
m0_278 -> m0_286  [key=2, style=dotted];
m0_283 -> m0_280  [key=0, style=solid];
m0_283 -> m0_289  [key=2, style=dotted];
m0_284 -> m0_285  [key=0, style=solid];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_280  [key=0, style=solid];
m0_285 -> m0_108  [key=0, style=bold, color=blue];
m0_381 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_381 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_381 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_382 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="ref Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_383 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_166  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_178  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_184  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_229  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_276  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_281  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_291  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_383 -> m0_340  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_384 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=methodCall];
m0_385 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeCall];
m0_386 -> m0_375  [key=1, style=dashed, color=darkseagreen4, label=specifiedPropertyGet];
m1_0 -> m1_1  [key=0, style=solid, color=green];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_1 -> m1_8  [key=2, style=dotted, color=green];
m1_1 -> m1_3  [key=1, style=dashed, color=green, label=d1];
m1_2 -> m1_3  [key=0, style=solid, color=green];
m1_2 -> m1_9  [key=2, style=dotted, color=green];
m1_3 -> m1_4  [key=0, style=solid, color=green];
m1_3 -> m1_10  [key=2, style=dotted, color=green];
m1_4 -> m1_5  [key=0, style=solid, color=green];
m1_4 -> m1_11  [key=2, style=dotted, color=green];
m1_4 -> m1_6  [key=1, style=dashed, color=green, label=d2];
m1_5 -> m1_6  [key=0, style=solid, color=green];
m1_5 -> m1_12  [key=2, style=dotted, color=green];
m1_6 -> m1_7  [key=0, style=solid, color=green];
m1_6 -> m1_12  [key=2, style=dotted, color=green];
m1_7 -> m1_0  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_1 -> n211  [key=2, style=dotted, color=green];
m2_2 -> m2_3  [key=0, style=solid, color=green];
m2_2 -> m2_7  [key=2, style=dotted, color=green];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_3 -> m2_8  [key=2, style=dotted, color=green];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_112 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_125 -> n211  [key=2, style=dotted];
m2_125 -> m2_126  [key=0, style=solid];
m2_123 -> m2_125  [key=0, style=solid];
m2_123 -> m2_124  [key=0, style=solid];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_115  [key=0, style=solid];
m2_113 -> m2_127  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_128  [key=2, style=dotted];
m2_116 -> m2_118  [key=1, style=dashed, color=darkseagreen4, label=attributes];
m2_117 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label=isFSharpType];
m2_117 -> m2_118  [key=0, style=solid];
m2_118 -> m2_123  [key=0, style=solid];
m2_118 -> m2_119  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_124 -> m2_126  [key=0, style=solid];
m2_114 -> m2_126  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_120 -> m2_118  [key=0, style=solid];
m2_120 -> m2_121  [key=0, style=solid];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_46  [key=2, style=dotted];
m2_119 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label=attributeType];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_129  [key=2, style=dotted];
m2_121 -> m2_130  [key=2, style=dotted];
m2_126 -> m2_112  [key=0, style=bold, color=blue];
m2_28 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_28 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_28 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_28 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_28 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_28 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_28 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_28 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_28 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_28 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_30 -> m2_46  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_47  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_29 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_47  [key=2, style=dotted];
m2_31 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label=union];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_48  [key=2, style=dotted];
m2_32 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label=tag];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_50  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_51  [key=2, style=dotted];
m2_35 -> m2_52  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_53  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_48  [key=2, style=dotted];
m2_38 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label=fields];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_51  [key=2, style=dotted];
m2_39 -> m2_52  [key=2, style=dotted];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_54  [key=2, style=dotted];
m2_42 -> m2_41  [key=0, style=solid];
m2_42 -> m2_55  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_56  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_57  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m2_33 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m2_33 -> m2_49  [key=2, style=dotted];
m2_33 -> m2_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_33 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_44  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_43  [key=0, style=solid];
m2_45 -> m2_28  [key=0, style=bold, color=blue];
m2_101 -> m2_131  [key=0, style=solid];
m2_101 -> m2_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_131 -> m2_133  [key=0, style=solid];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_134  [key=2, style=dotted];
m2_132 -> m2_106  [key=2, style=dotted];
m2_132 -> m2_133  [key=0, style=solid];
m2_133 -> m2_101  [key=0, style=bold, color=blue];
m2_9 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_9 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_9 -> m2_10  [key=0, style=solid];
m2_11 -> n211  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_13 -> n211  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_18 -> n211  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> n211  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_20 -> n211  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_16 -> m2_8  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_17 -> m2_8  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_24  [key=2, style=dotted];
m2_10 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label=u];
m2_10 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=u];
m2_10 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=u];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_25  [key=2, style=dotted];
m2_14 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m2_14 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m2_14 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m2_14 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m2_14 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_22  [key=0, style=solid];
m2_15 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m2_15 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m2_15 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m2_15 -> m2_26  [key=2, style=dotted];
m2_15 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m2_21 -> m2_14  [key=0, style=solid];
m2_21 -> m2_27  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_9  [key=0, style=bold, color=blue];
m2_61 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_61 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_61 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_61 -> m2_71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_61 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_61 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_61 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_61 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_61 -> m2_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_61 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_61 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_61 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_61 -> m2_85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_61 -> m2_88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_61 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_61 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m2_72 -> m2_47  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label=union];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_101  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_102  [key=2, style=dotted];
m2_73 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m2_73 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m2_73 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_104  [key=2, style=dotted];
m2_74 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_74 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m2_74 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m2_74 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m2_74 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m2_74 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m2_74 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m2_99 -> m2_48  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_64  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_101  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_84  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_102  [key=2, style=dotted];
m2_69 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m2_69 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m2_76 -> m2_100  [key=0, style=solid];
m2_76 -> m2_105  [key=2, style=dotted];
m2_76 -> m2_106  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_101  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_81  [key=0, style=solid];
m2_80 -> m2_100  [key=0, style=solid];
m2_80 -> m2_106  [key=2, style=dotted];
m2_81 -> m2_83  [key=0, style=solid];
m2_81 -> m2_107  [key=2, style=dotted];
m2_81 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=fields];
m2_81 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label=fields];
m2_81 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label=fields];
m2_81 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=fields];
m2_81 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label=fields];
m2_82 -> m2_100  [key=0, style=solid];
m2_82 -> m2_105  [key=2, style=dotted];
m2_82 -> m2_106  [key=2, style=dotted];
m2_83 -> m2_68  [key=0, style=solid];
m2_83 -> m2_101  [key=2, style=dotted];
m2_85 -> m2_100  [key=0, style=solid];
m2_85 -> m2_105  [key=2, style=dotted];
m2_85 -> m2_106  [key=2, style=dotted];
m2_88 -> m2_100  [key=0, style=solid];
m2_88 -> m2_105  [key=2, style=dotted];
m2_88 -> m2_106  [key=2, style=dotted];
m2_91 -> m2_100  [key=0, style=solid];
m2_91 -> m2_105  [key=2, style=dotted];
m2_91 -> m2_106  [key=2, style=dotted];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_108  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_77  [key=0, style=solid];
m2_70 -> m2_103  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_83  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_86  [key=0, style=solid];
m2_86 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=typedFieldValues];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label=typedFieldValues];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_89  [key=0, style=solid];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_92  [key=0, style=solid];
m2_95 -> m2_96  [key=0, style=solid];
m2_64 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m2_64 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m2_64 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m2_64 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m2_64 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m2_64 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m2_64 -> m2_65  [key=0, style=solid];
m2_98 -> m2_99  [key=0, style=solid];
m2_63 -> m2_100  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label=fields];
m2_66 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label=fields];
m2_66 -> m2_89  [key=1, style=dashed, color=darkseagreen4, label=fields];
m2_66 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label=fields];
m2_66 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label=fields];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_82  [key=0, style=solid];
m2_77 -> m2_103  [key=2, style=dotted];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_98  [key=0, style=solid];
m2_93 -> m2_98  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_94 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=t];
m2_94 -> m2_95  [key=0, style=solid];
m2_65 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m2_65 -> m2_66  [key=0, style=solid];
m2_92 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_92 -> m2_95  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_92 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_97 -> m2_93  [key=0, style=solid];
m2_97 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_100 -> m2_61  [key=0, style=bold, color=blue];
m2_109 -> m2_110  [key=0, style=solid];
m2_59 -> m2_60  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_60 -> m2_58  [key=0, style=bold, color=blue];
m2_110 -> m2_111  [key=0, style=solid];
m2_111 -> m2_109  [key=0, style=bold, color=blue];
m2_135 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label=tag];
m2_136 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m3_1121 -> m3_1122  [key=0, style=solid];
m3_1122 -> m3_1123  [key=0, style=solid];
m3_1122 -> m3_1124  [key=2, style=dotted];
m3_1123 -> m3_1121  [key=0, style=bold, color=blue];
m3_1546 -> m3_1547  [key=0, style=solid];
m3_1554 -> m3_12  [key=2, style=dotted];
m3_1554 -> m3_1555  [key=0, style=solid];
m3_1553 -> m3_1554  [key=0, style=solid];
m3_1553 -> m3_95  [key=2, style=dotted];
m3_1547 -> m3_1553  [key=1, style=dashed, color=darkseagreen4, label=joe];
m3_1547 -> m3_1548  [key=0, style=solid];
m3_1547 -> m3_1556  [key=2, style=dotted];
m3_1547 -> m3_1551  [key=1, style=dashed, color=darkseagreen4, label=joe];
m3_1549 -> m3_1553  [key=1, style=dashed, color=darkseagreen4, label=mike];
m3_1549 -> m3_1550  [key=0, style=solid];
m3_1549 -> m3_1556  [key=2, style=dotted];
m3_1549 -> m3_1551  [key=1, style=dashed, color=darkseagreen4, label=mike];
m3_1549 -> m3_1552  [key=1, style=dashed, color=darkseagreen4, label=mike];
m3_1552 -> m3_1553  [key=0, style=solid];
m3_1548 -> m3_1549  [key=0, style=solid];
m3_1551 -> m3_1552  [key=0, style=solid];
m3_1550 -> m3_1551  [key=0, style=solid];
m3_1555 -> m3_1546  [key=0, style=bold, color=blue];
m3_697 -> m3_698  [key=0, style=solid];
m3_697 -> m3_699  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_697 -> m3_700  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_697 -> m3_701  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_698 -> m3_699  [key=0, style=solid];
m3_699 -> m3_700  [key=0, style=solid];
m3_700 -> m3_701  [key=0, style=solid];
m3_701 -> m3_702  [key=0, style=solid];
m3_702 -> m3_697  [key=0, style=bold, color=blue];
m3_787 -> m3_788  [key=0, style=solid];
m3_790 -> m3_11  [key=2, style=dotted];
m3_790 -> m3_791  [key=0, style=solid];
m3_791 -> m3_11  [key=2, style=dotted];
m3_791 -> m3_792  [key=0, style=solid];
m3_792 -> m3_11  [key=2, style=dotted];
m3_792 -> m3_793  [key=0, style=solid];
m3_789 -> m3_790  [key=0, style=solid];
m3_789 -> m3_791  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_789 -> m3_792  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_789 -> m3_98  [key=2, style=dotted];
m3_788 -> m3_789  [key=0, style=solid];
m3_793 -> m3_787  [key=0, style=bold, color=blue];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_66  [key=2, style=dotted];
m3_61 -> m3_67  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_33  [key=2, style=dotted];
m3_28 -> m3_5  [key=2, style=dotted];
m3_28 -> m3_14  [key=2, style=dotted];
m3_1502 -> m3_1503  [key=0, style=solid];
m3_1511 -> m3_98  [key=2, style=dotted];
m3_1511 -> m3_1512  [key=0, style=solid];
m3_1510 -> m3_1511  [key=0, style=solid];
m3_1510 -> m3_84  [key=2, style=dotted];
m3_1503 -> m3_56  [key=2, style=dotted];
m3_1503 -> m3_1504  [key=0, style=solid];
m3_1503 -> m3_1505  [key=1, style=dashed, color=darkseagreen4, label=reference];
m3_1503 -> m3_1509  [key=1, style=dashed, color=darkseagreen4, label=reference];
m3_1506 -> m3_56  [key=2, style=dotted];
m3_1506 -> m3_1510  [key=1, style=dashed, color=darkseagreen4, label=child];
m3_1506 -> m3_1507  [key=0, style=solid];
m3_1506 -> m3_1508  [key=1, style=dashed, color=darkseagreen4, label=child];
m3_1506 -> m3_1509  [key=1, style=dashed, color=darkseagreen4, label=child];
m3_1504 -> m3_229  [key=2, style=dotted];
m3_1504 -> m3_1505  [key=0, style=solid];
m3_1505 -> m3_229  [key=2, style=dotted];
m3_1505 -> m3_1506  [key=0, style=solid];
m3_1509 -> m3_229  [key=2, style=dotted];
m3_1509 -> m3_1510  [key=0, style=solid];
m3_1507 -> m3_229  [key=2, style=dotted];
m3_1507 -> m3_1508  [key=0, style=solid];
m3_1508 -> m3_229  [key=2, style=dotted];
m3_1508 -> m3_1509  [key=0, style=solid];
m3_1512 -> m3_1502  [key=0, style=bold, color=blue];
m3_1045 -> m3_1046  [key=0, style=solid];
m3_1047 -> m3_229  [key=2, style=dotted];
m3_1047 -> m3_1047  [key=1, style=dashed, color=darkseagreen4, label=pair];
m3_1047 -> m3_1046  [key=0, style=solid];
m3_1046 -> m3_1047  [key=0, style=solid];
m3_1046 -> m3_1048  [key=0, style=solid];
m3_1048 -> m3_1045  [key=0, style=bold, color=blue];
m3_1405 -> m3_1406  [key=0, style=solid];
m3_1411 -> m3_11  [key=2, style=dotted];
m3_1411 -> m3_1412  [key=0, style=solid];
m3_1412 -> m3_11  [key=2, style=dotted];
m3_1412 -> m3_1413  [key=0, style=solid];
m3_1412 -> m3_1013  [key=2, style=dotted];
m3_1410 -> m3_1411  [key=0, style=solid];
m3_1410 -> m3_1412  [key=1, style=dashed, color=darkseagreen4, label=newValue];
m3_1410 -> m3_98  [key=2, style=dotted];
m3_1409 -> m3_1410  [key=0, style=solid];
m3_1409 -> m3_95  [key=2, style=dotted];
m3_1406 -> m3_1409  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1406 -> m3_1407  [key=0, style=solid];
m3_1406 -> m3_1402  [key=2, style=dotted];
m3_1406 -> m3_1408  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1408 -> m3_1409  [key=0, style=solid];
m3_1408 -> m3_159  [key=2, style=dotted];
m3_1407 -> m3_159  [key=2, style=dotted];
m3_1407 -> m3_1408  [key=0, style=solid];
m3_1413 -> m3_1405  [key=0, style=bold, color=blue];
m3_867 -> m3_868  [key=0, style=solid];
m3_869 -> m3_11  [key=2, style=dotted];
m3_869 -> m3_870  [key=0, style=solid];
m3_870 -> m3_11  [key=2, style=dotted];
m3_870 -> m3_871  [key=0, style=solid];
m3_871 -> m3_11  [key=2, style=dotted];
m3_871 -> m3_872  [key=0, style=solid];
m3_872 -> m3_11  [key=2, style=dotted];
m3_872 -> m3_873  [key=0, style=solid];
m3_868 -> m3_869  [key=0, style=solid];
m3_868 -> m3_870  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_868 -> m3_871  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_868 -> m3_872  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_868 -> m3_98  [key=2, style=dotted];
m3_873 -> m3_867  [key=0, style=bold, color=blue];
m3_766 -> m3_767  [key=0, style=solid];
m3_769 -> m3_11  [key=2, style=dotted];
m3_769 -> m3_770  [key=0, style=solid];
m3_768 -> m3_769  [key=0, style=solid];
m3_768 -> m3_84  [key=2, style=dotted];
m3_767 -> m3_768  [key=0, style=solid];
m3_767 -> m3_771  [key=2, style=dotted];
m3_767 -> m3_772  [key=2, style=dotted];
m3_770 -> m3_766  [key=0, style=bold, color=blue];
m3_566 -> m3_567  [key=0, style=solid];
m3_576 -> m3_11  [key=2, style=dotted];
m3_576 -> m3_577  [key=0, style=solid];
m3_569 -> m3_11  [key=2, style=dotted];
m3_569 -> m3_570  [key=0, style=solid];
m3_570 -> m3_11  [key=2, style=dotted];
m3_570 -> m3_571  [key=0, style=solid];
m3_571 -> m3_11  [key=2, style=dotted];
m3_571 -> m3_572  [key=0, style=solid];
m3_572 -> m3_11  [key=2, style=dotted];
m3_572 -> m3_573  [key=0, style=solid];
m3_573 -> m3_11  [key=2, style=dotted];
m3_573 -> m3_574  [key=0, style=solid];
m3_574 -> m3_11  [key=2, style=dotted];
m3_574 -> m3_575  [key=0, style=solid];
m3_567 -> m3_576  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_567 -> m3_568  [key=0, style=solid];
m3_575 -> m3_576  [key=0, style=solid];
m3_575 -> m3_84  [key=2, style=dotted];
m3_568 -> m3_569  [key=0, style=solid];
m3_568 -> m3_570  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_568 -> m3_571  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_568 -> m3_572  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_568 -> m3_573  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_568 -> m3_574  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_568 -> m3_98  [key=2, style=dotted];
m3_568 -> m3_575  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_577 -> m3_566  [key=0, style=bold, color=blue];
m3_850 -> m3_851  [key=0, style=solid];
m3_852 -> m3_98  [key=2, style=dotted];
m3_852 -> m3_853  [key=0, style=solid];
m3_851 -> m3_852  [key=0, style=solid];
m3_853 -> m3_850  [key=0, style=bold, color=blue];
m3_1484 -> m3_1485  [key=0, style=solid];
m3_1488 -> m3_11  [key=2, style=dotted];
m3_1488 -> m3_1489  [key=0, style=solid];
m3_1485 -> m3_1488  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_1485 -> m3_1486  [key=0, style=solid];
m3_1485 -> m3_1470  [key=2, style=dotted];
m3_1485 -> m3_1487  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_1487 -> m3_1488  [key=0, style=solid];
m3_1487 -> m3_664  [key=2, style=dotted];
m3_1487 -> n39  [key=2, style=dotted];
m3_1487 -> m3_1490  [key=2, style=dotted];
m3_1487 -> m3_1472  [key=2, style=dotted];
m3_1486 -> m3_1487  [key=0, style=solid];
m3_1489 -> m3_1484  [key=0, style=bold, color=blue];
m3_130 -> m3_131  [key=0, style=solid];
m3_268 -> m3_269  [key=0, style=solid];
m3_270 -> m3_11  [key=2, style=dotted];
m3_270 -> m3_271  [key=0, style=solid];
m3_269 -> m3_270  [key=0, style=solid];
m3_269 -> m3_84  [key=2, style=dotted];
m3_271 -> m3_268  [key=0, style=bold, color=blue];
m3_557 -> m3_558  [key=0, style=solid];
m3_563 -> m3_11  [key=2, style=dotted];
m3_563 -> m3_564  [key=0, style=solid];
m3_562 -> m3_563  [key=0, style=solid];
m3_562 -> m3_84  [key=2, style=dotted];
m3_558 -> m3_562  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_558 -> m3_559  [key=0, style=solid];
m3_558 -> m3_565  [key=2, style=dotted];
m3_558 -> m3_560  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_558 -> m3_561  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_561 -> m3_562  [key=0, style=solid];
m3_559 -> m3_560  [key=0, style=solid];
m3_560 -> m3_561  [key=0, style=solid];
m3_564 -> m3_557  [key=0, style=bold, color=blue];
m3_1609 -> m3_1610  [key=0, style=solid];
m3_1614 -> m3_11  [key=2, style=dotted];
m3_1614 -> m3_1615  [key=0, style=solid];
m3_1616 -> m3_11  [key=2, style=dotted];
m3_1616 -> m3_1617  [key=0, style=solid];
m3_1613 -> m3_1614  [key=0, style=solid];
m3_1613 -> m3_95  [key=2, style=dotted];
m3_1613 -> m3_1615  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1615 -> m3_1616  [key=0, style=solid];
m3_1615 -> m3_98  [key=2, style=dotted];
m3_1610 -> m3_1613  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m3_1610 -> m3_56  [key=2, style=dotted];
m3_1610 -> m3_1611  [key=0, style=solid];
m3_1610 -> m3_1612  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m3_1612 -> m3_1613  [key=0, style=solid];
m3_1612 -> m3_229  [key=2, style=dotted];
m3_1612 -> m3_1608  [key=2, style=dotted];
m3_1611 -> m3_229  [key=2, style=dotted];
m3_1611 -> m3_1612  [key=0, style=solid];
m3_1611 -> m3_1608  [key=2, style=dotted];
m3_1617 -> m3_1609  [key=0, style=bold, color=blue];
m3_1041 -> m3_1042  [key=0, style=solid];
m3_1043 -> m3_98  [key=2, style=dotted];
m3_1043 -> m3_1044  [key=0, style=solid];
m3_1042 -> m3_1043  [key=0, style=solid];
m3_1044 -> m3_1041  [key=0, style=bold, color=blue];
m3_1129 -> m3_1130  [key=0, style=solid];
m3_1130 -> m3_1131  [key=0, style=solid];
m3_1130 -> m3_1132  [key=2, style=dotted];
m3_1131 -> m3_1129  [key=0, style=bold, color=blue];
m3_60 -> m3_61  [key=0, style=solid];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_66  [key=2, style=dotted];
m3_62 -> m3_67  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_66  [key=2, style=dotted];
m3_63 -> m3_68  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_66  [key=2, style=dotted];
m3_64 -> m3_68  [key=2, style=dotted];
m3_64 -> m3_70  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m3_64 -> m3_76  [key=2, style=dotted];
m3_64 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m3_65 -> m3_60  [key=0, style=bold, color=blue];
m3_65 -> m3_66  [key=0, style=solid];
m3_1014 -> m3_1015  [key=0, style=solid];
m3_1015 -> m3_229  [key=2, style=dotted];
m3_1015 -> m3_1016  [key=0, style=solid];
m3_1016 -> m3_1014  [key=0, style=bold, color=blue];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_84  [key=2, style=dotted];
m3_1717 -> m3_1718  [key=0, style=solid];
m3_1720 -> m3_11  [key=2, style=dotted];
m3_1720 -> m3_1721  [key=0, style=solid];
m3_1719 -> m3_1720  [key=0, style=solid];
m3_1719 -> m3_98  [key=2, style=dotted];
m3_1718 -> m3_1719  [key=0, style=solid];
m3_1721 -> m3_1717  [key=0, style=bold, color=blue];
m3_1082 -> m3_1085  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_1082 -> m3_1083  [key=0, style=solid];
m3_1086 -> m3_229  [key=2, style=dotted];
m3_1086 -> m3_1086  [key=1, style=dashed, color=darkseagreen4, label=entry];
m3_1086 -> m3_1085  [key=0, style=solid];
m3_1085 -> m3_1086  [key=0, style=solid];
m3_1085 -> m3_1087  [key=0, style=solid];
m3_1083 -> m3_1085  [key=0, style=solid];
m3_1083 -> m3_1084  [key=0, style=solid];
m3_1084 -> m3_1087  [key=0, style=solid];
m3_1084 -> m3_1088  [key=2, style=dotted];
m3_1087 -> m3_1082  [key=0, style=bold, color=blue];
m3_537 -> m3_538  [key=0, style=solid];
m3_540 -> m3_11  [key=2, style=dotted];
m3_540 -> m3_541  [key=0, style=solid];
m3_541 -> m3_11  [key=2, style=dotted];
m3_541 -> m3_542  [key=0, style=solid];
m3_542 -> m3_11  [key=2, style=dotted];
m3_542 -> m3_543  [key=0, style=solid];
m3_539 -> m3_540  [key=0, style=solid];
m3_539 -> m3_541  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_539 -> m3_542  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_539 -> m3_98  [key=2, style=dotted];
m3_538 -> m3_539  [key=0, style=solid];
m3_543 -> m3_537  [key=0, style=bold, color=blue];
m3_1402 -> m3_1403  [key=0, style=solid];
m3_1403 -> n39  [key=2, style=dotted];
m3_1403 -> m3_1404  [key=0, style=solid];
m3_1404 -> m3_1402  [key=0, style=bold, color=blue];
m3_13 -> m3_14  [key=0, style=solid];
m3_1146 -> m3_1147  [key=0, style=solid];
m3_1146 -> m3_1148  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1146 -> m3_1149  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m3_1146 -> m3_1150  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.Person"];
m3_1151 -> m3_430  [key=2, style=dotted];
m3_1151 -> m3_1152  [key=0, style=solid];
m3_1150 -> m3_1151  [key=0, style=solid];
m3_1147 -> m3_1148  [key=0, style=solid];
m3_1148 -> m3_1149  [key=0, style=solid];
m3_1149 -> m3_1150  [key=0, style=solid];
m3_1152 -> m3_1146  [key=0, style=bold, color=blue];
m3_1089 -> m3_1090  [key=0, style=solid];
m3_1090 -> m3_318  [key=2, style=dotted];
m3_1090 -> m3_1091  [key=0, style=solid];
m3_1091 -> m3_1089  [key=0, style=bold, color=blue];
m3_1709 -> m3_1710  [key=0, style=solid];
m3_1711 -> m3_11  [key=2, style=dotted];
m3_1711 -> m3_1712  [key=0, style=solid];
m3_1710 -> m3_1711  [key=0, style=solid];
m3_1710 -> m3_98  [key=2, style=dotted];
m3_1712 -> m3_1709  [key=0, style=bold, color=blue];
m3_1529 -> m3_1530  [key=0, style=solid];
m3_1534 -> m3_11  [key=2, style=dotted];
m3_1534 -> m3_1535  [key=0, style=solid];
m3_1537 -> m3_11  [key=2, style=dotted];
m3_1537 -> m3_1538  [key=0, style=solid];
m3_1539 -> m3_11  [key=2, style=dotted];
m3_1539 -> m3_1540  [key=0, style=solid];
m3_1540 -> m3_11  [key=2, style=dotted];
m3_1540 -> m3_1541  [key=0, style=solid];
m3_1533 -> m3_1534  [key=0, style=solid];
m3_1533 -> m3_95  [key=2, style=dotted];
m3_1535 -> m3_1536  [key=0, style=solid];
m3_1536 -> m3_1537  [key=0, style=solid];
m3_1536 -> m3_95  [key=2, style=dotted];
m3_1536 -> m3_1538  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1538 -> m3_1539  [key=0, style=solid];
m3_1538 -> m3_1540  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_1538 -> m3_98  [key=2, style=dotted];
m3_1530 -> m3_1533  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1530 -> m3_1535  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1530 -> m3_1536  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1530 -> m3_1531  [key=0, style=solid];
m3_1530 -> m3_1542  [key=2, style=dotted];
m3_1530 -> m3_1532  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1532 -> m3_1533  [key=0, style=solid];
m3_1531 -> m3_1532  [key=0, style=solid];
m3_1541 -> m3_1529  [key=0, style=bold, color=blue];
m3_14 -> m3_28  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_16  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_14 -> m3_17  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_14 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_14 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_1321 -> m3_1322  [key=0, style=solid];
m3_1329 -> m3_11  [key=2, style=dotted];
m3_1329 -> m3_1330  [key=0, style=solid];
m3_1329 -> m3_1335  [key=2, style=dotted];
m3_1330 -> m3_11  [key=2, style=dotted];
m3_1330 -> m3_1331  [key=0, style=solid];
m3_1330 -> m3_1335  [key=2, style=dotted];
m3_1327 -> m3_11  [key=2, style=dotted];
m3_1327 -> m3_1328  [key=0, style=solid];
m3_1322 -> m3_1329  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m3_1322 -> m3_1330  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m3_1322 -> m3_1323  [key=0, style=solid];
m3_1322 -> m3_1333  [key=2, style=dotted];
m3_1322 -> m3_1324  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m3_1322 -> m3_1325  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m3_1328 -> m3_1329  [key=0, style=solid];
m3_1328 -> m3_1330  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m3_1328 -> m3_98  [key=2, style=dotted];
m3_1328 -> m3_1331  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m3_1331 -> m3_1332  [key=0, style=solid];
m3_1331 -> m3_1336  [key=2, style=dotted];
m3_1325 -> m3_1327  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1325 -> m3_1328  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1325 -> m3_1326  [key=0, style=solid];
m3_1325 -> m3_95  [key=2, style=dotted];
m3_1326 -> m3_1327  [key=0, style=solid];
m3_1323 -> m3_1324  [key=0, style=solid];
m3_1323 -> m3_1334  [key=2, style=dotted];
m3_1324 -> m3_1325  [key=0, style=solid];
m3_1324 -> m3_1334  [key=2, style=dotted];
m3_1332 -> m3_1321  [key=0, style=bold, color=blue];
m3_85 -> m3_86  [key=0, style=solid];
m3_88 -> m3_11  [key=2, style=dotted];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_84  [key=2, style=dotted];
m3_88 -> m3_15  [key=2, style=dotted];
m3_89 -> m3_11  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_84  [key=2, style=dotted];
m3_89 -> m3_5  [key=2, style=dotted];
m3_89 -> m3_14  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_87 -> m3_10  [key=2, style=dotted];
m3_87 -> m3_95  [key=2, style=dotted];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_94  [key=2, style=dotted];
m3_86 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_86 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_90 -> m3_85  [key=0, style=bold, color=blue];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_15  [key=2, style=dotted];
m3_1095 -> m3_1096  [key=0, style=solid];
m3_1096 -> m3_1097  [key=0, style=solid];
m3_1096 -> m3_1098  [key=2, style=dotted];
m3_1097 -> m3_1095  [key=0, style=bold, color=blue];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_7  [key=2, style=dotted];
m3_450 -> m3_451  [key=0, style=solid];
m3_455 -> m3_11  [key=2, style=dotted];
m3_455 -> m3_456  [key=0, style=solid];
m3_457 -> m3_11  [key=2, style=dotted];
m3_457 -> m3_458  [key=0, style=solid];
m3_458 -> m3_11  [key=2, style=dotted];
m3_458 -> m3_459  [key=0, style=solid];
m3_454 -> m3_455  [key=0, style=solid];
m3_454 -> m3_418  [key=2, style=dotted];
m3_454 -> m3_419  [key=2, style=dotted];
m3_454 -> m3_456  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_456 -> m3_457  [key=0, style=solid];
m3_456 -> m3_458  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_456 -> m3_418  [key=2, style=dotted];
m3_456 -> m3_420  [key=2, style=dotted];
m3_451 -> m3_454  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_451 -> m3_452  [key=0, style=solid];
m3_451 -> m3_460  [key=2, style=dotted];
m3_451 -> m3_453  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_453 -> m3_454  [key=0, style=solid];
m3_453 -> m3_410  [key=2, style=dotted];
m3_452 -> m3_453  [key=0, style=solid];
m3_452 -> m3_410  [key=2, style=dotted];
m3_459 -> m3_450  [key=0, style=bold, color=blue];
m3_899 -> m3_900  [key=0, style=solid];
m3_900 -> m3_98  [key=2, style=dotted];
m3_900 -> m3_901  [key=0, style=solid];
m3_901 -> m3_899  [key=0, style=bold, color=blue];
m3_1263 -> m3_1310  [key=0, style=solid];
m3_1263 -> m3_1311  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1263 -> m3_1312  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1263 -> m3_1313  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1263 -> m3_1314  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1263 -> m3_1315  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1263 -> m3_1316  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1263 -> m3_1317  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1263 -> m3_1318  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1263 -> m3_1319  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1310 -> m3_1311  [key=0, style=solid];
m3_1311 -> m3_1312  [key=0, style=solid];
m3_1312 -> m3_1313  [key=0, style=solid];
m3_1313 -> m3_1314  [key=0, style=solid];
m3_1314 -> m3_1315  [key=0, style=solid];
m3_1315 -> m3_1316  [key=0, style=solid];
m3_1316 -> m3_1317  [key=0, style=solid];
m3_1317 -> m3_1318  [key=0, style=solid];
m3_1318 -> m3_1319  [key=0, style=solid];
m3_1319 -> m3_1320  [key=0, style=solid];
m3_1320 -> m3_1263  [key=0, style=bold, color=blue];
m3_471 -> m3_472  [key=0, style=solid];
m3_474 -> m3_11  [key=2, style=dotted];
m3_474 -> m3_475  [key=0, style=solid];
m3_476 -> m3_11  [key=2, style=dotted];
m3_476 -> m3_477  [key=0, style=solid];
m3_473 -> m3_474  [key=0, style=solid];
m3_473 -> m3_84  [key=2, style=dotted];
m3_475 -> m3_476  [key=0, style=solid];
m3_475 -> m3_84  [key=2, style=dotted];
m3_472 -> m3_473  [key=0, style=solid];
m3_477 -> m3_471  [key=0, style=bold, color=blue];
m3_773 -> m3_774  [key=0, style=solid];
m3_776 -> m3_11  [key=2, style=dotted];
m3_776 -> m3_777  [key=0, style=solid];
m3_775 -> m3_776  [key=0, style=solid];
m3_775 -> m3_95  [key=2, style=dotted];
m3_774 -> m3_775  [key=0, style=solid];
m3_774 -> m3_778  [key=2, style=dotted];
m3_774 -> n39  [key=2, style=dotted];
m3_777 -> m3_773  [key=0, style=bold, color=blue];
m3_1582 -> m3_1583  [key=0, style=solid];
m3_1594 -> m3_98  [key=2, style=dotted];
m3_1594 -> m3_1595  [key=0, style=solid];
m3_1597 -> m3_98  [key=2, style=dotted];
m3_1597 -> m3_1598  [key=0, style=solid];
m3_1593 -> m3_1594  [key=0, style=solid];
m3_1595 -> m3_1596  [key=0, style=solid];
m3_1595 -> m3_1601  [key=2, style=dotted];
m3_1596 -> m3_1597  [key=0, style=solid];
m3_1598 -> m3_1599  [key=0, style=solid];
m3_1598 -> m3_1601  [key=2, style=dotted];
m3_1592 -> m3_12  [key=2, style=dotted];
m3_1592 -> m3_1593  [key=0, style=solid];
m3_1591 -> m3_1592  [key=0, style=solid];
m3_1591 -> m3_95  [key=2, style=dotted];
m3_1583 -> m3_1591  [key=1, style=dashed, color=darkseagreen4, label=joe];
m3_1583 -> m3_1584  [key=0, style=solid];
m3_1583 -> m3_1600  [key=2, style=dotted];
m3_1583 -> m3_1585  [key=1, style=dashed, color=darkseagreen4, label=joe];
m3_1583 -> m3_1586  [key=1, style=dashed, color=darkseagreen4, label=joe];
m3_1587 -> m3_1591  [key=1, style=dashed, color=darkseagreen4, label=martha];
m3_1587 -> m3_1588  [key=0, style=solid];
m3_1587 -> m3_1600  [key=2, style=dotted];
m3_1587 -> m3_1589  [key=1, style=dashed, color=darkseagreen4, label=martha];
m3_1587 -> m3_1590  [key=1, style=dashed, color=darkseagreen4, label=martha];
m3_1590 -> m3_1591  [key=0, style=solid];
m3_1584 -> m3_1585  [key=0, style=solid];
m3_1585 -> m3_1586  [key=0, style=solid];
m3_1586 -> m3_1587  [key=0, style=solid];
m3_1588 -> m3_1589  [key=0, style=solid];
m3_1589 -> m3_1590  [key=0, style=solid];
m3_1599 -> m3_1582  [key=0, style=bold, color=blue];
m3_378 -> m3_379  [key=0, style=solid];
m3_385 -> m3_11  [key=2, style=dotted];
m3_385 -> m3_386  [key=0, style=solid];
m3_387 -> m3_11  [key=2, style=dotted];
m3_387 -> m3_388  [key=0, style=solid];
m3_388 -> m3_11  [key=2, style=dotted];
m3_388 -> m3_389  [key=0, style=solid];
m3_389 -> m3_11  [key=2, style=dotted];
m3_389 -> m3_390  [key=0, style=solid];
m3_390 -> m3_11  [key=2, style=dotted];
m3_390 -> m3_391  [key=0, style=solid];
m3_384 -> m3_385  [key=0, style=solid];
m3_384 -> m3_95  [key=2, style=dotted];
m3_384 -> m3_386  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_386 -> m3_387  [key=0, style=solid];
m3_386 -> m3_388  [key=1, style=dashed, color=darkseagreen4, label=newName];
m3_386 -> m3_389  [key=1, style=dashed, color=darkseagreen4, label=newName];
m3_386 -> m3_390  [key=1, style=dashed, color=darkseagreen4, label=newName];
m3_386 -> m3_98  [key=2, style=dotted];
m3_379 -> m3_384  [key=1, style=dashed, color=darkseagreen4, label=name];
m3_379 -> m3_380  [key=0, style=solid];
m3_379 -> m3_392  [key=2, style=dotted];
m3_379 -> m3_382  [key=1, style=dashed, color=darkseagreen4, label=name];
m3_379 -> m3_383  [key=1, style=dashed, color=darkseagreen4, label=name];
m3_383 -> m3_384  [key=0, style=solid];
m3_383 -> m3_159  [key=2, style=dotted];
m3_380 -> m3_381  [key=0, style=solid];
m3_380 -> m3_393  [key=2, style=dotted];
m3_380 -> m3_382  [key=1, style=dashed, color=darkseagreen4, label=p1];
m3_382 -> m3_383  [key=0, style=solid];
m3_382 -> m3_159  [key=2, style=dotted];
m3_381 -> m3_383  [key=1, style=dashed, color=darkseagreen4, label=p2];
m3_381 -> m3_382  [key=0, style=solid];
m3_381 -> m3_393  [key=2, style=dotted];
m3_391 -> m3_378  [key=0, style=bold, color=blue];
m3_528 -> m3_529  [key=0, style=solid];
m3_531 -> m3_11  [key=2, style=dotted];
m3_531 -> m3_532  [key=0, style=solid];
m3_533 -> m3_11  [key=2, style=dotted];
m3_533 -> m3_534  [key=0, style=solid];
m3_534 -> m3_11  [key=2, style=dotted];
m3_534 -> m3_535  [key=0, style=solid];
m3_534 -> m3_208  [key=2, style=dotted];
m3_530 -> m3_531  [key=0, style=solid];
m3_530 -> m3_95  [key=2, style=dotted];
m3_530 -> m3_532  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_532 -> m3_533  [key=0, style=solid];
m3_532 -> m3_534  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_532 -> m3_98  [key=2, style=dotted];
m3_529 -> m3_530  [key=0, style=solid];
m3_529 -> m3_208  [key=2, style=dotted];
m3_529 -> m3_536  [key=2, style=dotted];
m3_535 -> m3_528  [key=0, style=bold, color=blue];
m3_59 -> m3_55  [key=0, style=bold, color=blue];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_10  [key=2, style=dotted];
m3_1049 -> m3_1050  [key=0, style=solid];
m3_1052 -> m3_11  [key=2, style=dotted];
m3_1052 -> m3_1053  [key=0, style=solid];
m3_1051 -> m3_1052  [key=0, style=solid];
m3_1051 -> m3_95  [key=2, style=dotted];
m3_1050 -> m3_1051  [key=0, style=solid];
m3_1050 -> m3_1054  [key=2, style=dotted];
m3_1053 -> m3_1049  [key=0, style=bold, color=blue];
m3_666 -> m3_667  [key=0, style=solid];
m3_669 -> m3_664  [key=2, style=dotted];
m3_669 -> m3_665  [key=2, style=dotted];
m3_669 -> m3_670  [key=0, style=solid];
m3_667 -> m3_663  [key=2, style=dotted];
m3_667 -> m3_669  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_667 -> m3_668  [key=0, style=solid];
m3_668 -> m3_669  [key=0, style=solid];
m3_670 -> m3_666  [key=0, style=bold, color=blue];
m3_544 -> m3_545  [key=0, style=solid];
m3_546 -> m3_98  [key=2, style=dotted];
m3_546 -> m3_547  [key=0, style=solid];
m3_545 -> m3_546  [key=0, style=solid];
m3_547 -> m3_544  [key=0, style=bold, color=blue];
m3_104 -> m3_105  [key=0, style=solid];
m3_105 -> m3_106  [key=0, style=solid];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_5  [key=2, style=dotted];
m3_106 -> m3_6  [key=2, style=dotted];
m3_106 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_106 -> m3_109  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_106 -> m3_112  [key=2, style=dotted];
m3_106 -> m3_84  [key=2, style=dotted];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_7  [key=2, style=dotted];
m3_107 -> m3_11  [key=2, style=dotted];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_7  [key=2, style=dotted];
m3_108 -> m3_110  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_108 -> m3_98  [key=2, style=dotted];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> m3_7  [key=2, style=dotted];
m3_109 -> m3_11  [key=2, style=dotted];
m3_110 -> m3_104  [key=0, style=bold, color=blue];
m3_110 -> m3_11  [key=2, style=dotted];
m3_110 -> m3_111  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_1092 -> m3_1093  [key=0, style=solid];
m3_1093 -> m3_229  [key=2, style=dotted];
m3_1093 -> m3_1094  [key=0, style=solid];
m3_1094 -> m3_1092  [key=0, style=bold, color=blue];
m3_937 -> m3_938  [key=0, style=solid];
m3_943 -> m3_11  [key=2, style=dotted];
m3_943 -> m3_944  [key=0, style=solid];
m3_945 -> m3_11  [key=2, style=dotted];
m3_945 -> m3_946  [key=0, style=solid];
m3_946 -> m3_11  [key=2, style=dotted];
m3_946 -> m3_947  [key=0, style=solid];
m3_947 -> m3_11  [key=2, style=dotted];
m3_947 -> m3_948  [key=0, style=solid];
m3_948 -> m3_11  [key=2, style=dotted];
m3_948 -> m3_949  [key=0, style=solid];
m3_942 -> m3_943  [key=0, style=solid];
m3_942 -> m3_95  [key=2, style=dotted];
m3_942 -> m3_944  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_944 -> m3_945  [key=0, style=solid];
m3_944 -> m3_946  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m3_944 -> m3_947  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m3_944 -> m3_948  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m3_944 -> m3_98  [key=2, style=dotted];
m3_938 -> m3_942  [key=1, style=dashed, color=darkseagreen4, label=f];
m3_938 -> m3_939  [key=0, style=solid];
m3_938 -> m3_950  [key=2, style=dotted];
m3_938 -> m3_940  [key=1, style=dashed, color=darkseagreen4, label=f];
m3_938 -> m3_941  [key=1, style=dashed, color=darkseagreen4, label=f];
m3_941 -> m3_942  [key=0, style=solid];
m3_941 -> m3_951  [key=2, style=dotted];
m3_941 -> m3_159  [key=2, style=dotted];
m3_939 -> m3_159  [key=2, style=dotted];
m3_939 -> m3_940  [key=0, style=solid];
m3_939 -> m3_951  [key=2, style=dotted];
m3_940 -> m3_941  [key=0, style=solid];
m3_940 -> m3_159  [key=2, style=dotted];
m3_940 -> m3_951  [key=2, style=dotted];
m3_949 -> m3_937  [key=0, style=bold, color=blue];
m3_1188 -> m3_1189  [key=0, style=solid];
m3_1188 -> m3_1190  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1191  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1192  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1193  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1195  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1196  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1197  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1198  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1199  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1200  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1201  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1202  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1203  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1204  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1205  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1206  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1188 -> m3_1194  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1189 -> m3_1190  [key=0, style=solid];
m3_1189 -> m3_1208  [key=2, style=dotted];
m3_1190 -> m3_1191  [key=0, style=solid];
m3_1190 -> m3_1209  [key=2, style=dotted];
m3_1191 -> m3_1192  [key=0, style=solid];
m3_1191 -> m3_1208  [key=2, style=dotted];
m3_1192 -> m3_1193  [key=0, style=solid];
m3_1192 -> m3_1208  [key=2, style=dotted];
m3_1193 -> m3_1194  [key=0, style=solid];
m3_1193 -> m3_1208  [key=2, style=dotted];
m3_1195 -> m3_1196  [key=0, style=solid];
m3_1195 -> m3_1210  [key=2, style=dotted];
m3_1196 -> m3_1197  [key=0, style=solid];
m3_1196 -> m3_1211  [key=2, style=dotted];
m3_1197 -> m3_1198  [key=0, style=solid];
m3_1197 -> m3_1212  [key=2, style=dotted];
m3_1198 -> m3_1199  [key=0, style=solid];
m3_1198 -> m3_1213  [key=2, style=dotted];
m3_1199 -> m3_1200  [key=0, style=solid];
m3_1199 -> m3_1214  [key=2, style=dotted];
m3_1200 -> m3_1201  [key=0, style=solid];
m3_1200 -> m3_1215  [key=2, style=dotted];
m3_1201 -> m3_1202  [key=0, style=solid];
m3_1201 -> m3_1216  [key=2, style=dotted];
m3_1202 -> m3_1203  [key=0, style=solid];
m3_1202 -> m3_1217  [key=2, style=dotted];
m3_1203 -> m3_1204  [key=0, style=solid];
m3_1203 -> m3_1218  [key=2, style=dotted];
m3_1204 -> m3_1205  [key=0, style=solid];
m3_1204 -> m3_1219  [key=2, style=dotted];
m3_1205 -> m3_1206  [key=0, style=solid];
m3_1205 -> m3_1220  [key=2, style=dotted];
m3_1206 -> m3_1207  [key=0, style=solid];
m3_1206 -> m3_1221  [key=2, style=dotted];
m3_1194 -> m3_1195  [key=0, style=solid];
m3_1194 -> m3_1208  [key=2, style=dotted];
m3_1207 -> m3_1188  [key=0, style=bold, color=blue];
m3_146 -> m3_147  [key=0, style=solid];
m3_154 -> m3_11  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_155 -> m3_11  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_149 -> m3_154  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m3_149 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_158  [key=2, style=dotted];
m3_149 -> m3_151  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m3_149 -> m3_152  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label=articles2];
m3_153 -> m3_98  [key=2, style=dotted];
m3_148 -> m3_149  [key=0, style=solid];
m3_148 -> m3_157  [key=2, style=dotted];
m3_148 -> m3_151  [key=1, style=dashed, color=darkseagreen4, label=a2];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_159  [key=2, style=dotted];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_159  [key=2, style=dotted];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_84  [key=2, style=dotted];
m3_147 -> m3_148  [key=0, style=solid];
m3_147 -> m3_150  [key=1, style=dashed, color=darkseagreen4, label=a1];
m3_147 -> m3_157  [key=2, style=dotted];
m3_156 -> m3_146  [key=0, style=bold, color=blue];
m3_513 -> m3_514  [key=0, style=solid];
m3_517 -> m3_11  [key=2, style=dotted];
m3_517 -> m3_518  [key=0, style=solid];
m3_519 -> m3_11  [key=2, style=dotted];
m3_519 -> m3_520  [key=0, style=solid];
m3_523 -> m3_11  [key=2, style=dotted];
m3_523 -> m3_524  [key=0, style=solid];
m3_525 -> m3_11  [key=2, style=dotted];
m3_525 -> m3_526  [key=0, style=solid];
m3_514 -> m3_517  [key=1, style=dashed, color=darkseagreen4, label=boolRef];
m3_514 -> m3_515  [key=0, style=solid];
m3_516 -> m3_517  [key=0, style=solid];
m3_516 -> m3_84  [key=2, style=dotted];
m3_516 -> m3_518  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_518 -> m3_519  [key=0, style=solid];
m3_518 -> m3_98  [key=2, style=dotted];
m3_520 -> m3_523  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerTestRef];
m3_520 -> m3_521  [key=0, style=solid];
m3_522 -> m3_523  [key=0, style=solid];
m3_522 -> m3_84  [key=2, style=dotted];
m3_522 -> m3_524  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_524 -> m3_525  [key=0, style=solid];
m3_524 -> m3_98  [key=2, style=dotted];
m3_515 -> m3_516  [key=0, style=solid];
m3_515 -> m3_527  [key=2, style=dotted];
m3_521 -> m3_522  [key=0, style=solid];
m3_521 -> m3_527  [key=2, style=dotted];
m3_526 -> m3_513  [key=0, style=bold, color=blue];
m3_116 -> m3_117  [key=0, style=solid];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_120  [key=2, style=dotted];
m3_117 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_7  [key=2, style=dotted];
m3_118 -> m3_113  [key=0, style=bold, color=blue];
m3_119 -> m3_116  [key=0, style=bold, color=blue];
m3_1264 -> m3_1265  [key=0, style=solid];
m3_1266 -> m3_11  [key=2, style=dotted];
m3_1266 -> m3_1267  [key=0, style=solid];
m3_1266 -> m3_1294  [key=2, style=dotted];
m3_1266 -> m3_1295  [key=2, style=dotted];
m3_1267 -> m3_11  [key=2, style=dotted];
m3_1267 -> m3_1268  [key=0, style=solid];
m3_1267 -> m3_1294  [key=2, style=dotted];
m3_1267 -> m3_1295  [key=2, style=dotted];
m3_1268 -> m3_11  [key=2, style=dotted];
m3_1268 -> m3_1269  [key=0, style=solid];
m3_1268 -> m3_1296  [key=2, style=dotted];
m3_1268 -> m3_1295  [key=2, style=dotted];
m3_1269 -> m3_11  [key=2, style=dotted];
m3_1269 -> m3_1270  [key=0, style=solid];
m3_1269 -> m3_1296  [key=2, style=dotted];
m3_1269 -> m3_1295  [key=2, style=dotted];
m3_1270 -> m3_11  [key=2, style=dotted];
m3_1270 -> m3_1271  [key=0, style=solid];
m3_1270 -> m3_1296  [key=2, style=dotted];
m3_1270 -> m3_1295  [key=2, style=dotted];
m3_1271 -> m3_11  [key=2, style=dotted];
m3_1271 -> m3_1272  [key=0, style=solid];
m3_1271 -> m3_1296  [key=2, style=dotted];
m3_1271 -> m3_1295  [key=2, style=dotted];
m3_1272 -> m3_11  [key=2, style=dotted];
m3_1272 -> m3_1273  [key=0, style=solid];
m3_1272 -> m3_1296  [key=2, style=dotted];
m3_1272 -> m3_1295  [key=2, style=dotted];
m3_1273 -> m3_11  [key=2, style=dotted];
m3_1273 -> m3_1274  [key=0, style=solid];
m3_1273 -> m3_1296  [key=2, style=dotted];
m3_1273 -> m3_1295  [key=2, style=dotted];
m3_1275 -> m3_11  [key=2, style=dotted];
m3_1275 -> m3_1276  [key=0, style=solid];
m3_1275 -> m3_1294  [key=2, style=dotted];
m3_1275 -> m3_1295  [key=2, style=dotted];
m3_1276 -> m3_11  [key=2, style=dotted];
m3_1276 -> m3_1277  [key=0, style=solid];
m3_1276 -> m3_1294  [key=2, style=dotted];
m3_1276 -> m3_1295  [key=2, style=dotted];
m3_1277 -> m3_11  [key=2, style=dotted];
m3_1277 -> m3_1278  [key=0, style=solid];
m3_1277 -> m3_1296  [key=2, style=dotted];
m3_1277 -> m3_1295  [key=2, style=dotted];
m3_1278 -> m3_11  [key=2, style=dotted];
m3_1278 -> m3_1279  [key=0, style=solid];
m3_1278 -> m3_1296  [key=2, style=dotted];
m3_1278 -> m3_1295  [key=2, style=dotted];
m3_1279 -> m3_11  [key=2, style=dotted];
m3_1279 -> m3_1280  [key=0, style=solid];
m3_1279 -> m3_1296  [key=2, style=dotted];
m3_1279 -> m3_1295  [key=2, style=dotted];
m3_1280 -> m3_11  [key=2, style=dotted];
m3_1280 -> m3_1281  [key=0, style=solid];
m3_1280 -> m3_1296  [key=2, style=dotted];
m3_1280 -> m3_1295  [key=2, style=dotted];
m3_1281 -> m3_11  [key=2, style=dotted];
m3_1281 -> m3_1282  [key=0, style=solid];
m3_1281 -> m3_1296  [key=2, style=dotted];
m3_1281 -> m3_1295  [key=2, style=dotted];
m3_1282 -> m3_11  [key=2, style=dotted];
m3_1282 -> m3_1283  [key=0, style=solid];
m3_1282 -> m3_1296  [key=2, style=dotted];
m3_1282 -> m3_1295  [key=2, style=dotted];
m3_1283 -> m3_11  [key=2, style=dotted];
m3_1283 -> m3_1284  [key=0, style=solid];
m3_1284 -> m3_11  [key=2, style=dotted];
m3_1284 -> m3_1285  [key=0, style=solid];
m3_1285 -> m3_11  [key=2, style=dotted];
m3_1285 -> m3_1286  [key=0, style=solid];
m3_1286 -> m3_11  [key=2, style=dotted];
m3_1286 -> m3_1287  [key=0, style=solid];
m3_1287 -> m3_11  [key=2, style=dotted];
m3_1287 -> m3_1288  [key=0, style=solid];
m3_1287 -> m3_1296  [key=2, style=dotted];
m3_1287 -> m3_1295  [key=2, style=dotted];
m3_1288 -> m3_11  [key=2, style=dotted];
m3_1288 -> m3_1289  [key=0, style=solid];
m3_1288 -> m3_1296  [key=2, style=dotted];
m3_1288 -> m3_1295  [key=2, style=dotted];
m3_1289 -> m3_11  [key=2, style=dotted];
m3_1289 -> m3_1290  [key=0, style=solid];
m3_1290 -> m3_11  [key=2, style=dotted];
m3_1290 -> m3_1291  [key=0, style=solid];
m3_1290 -> m3_1296  [key=2, style=dotted];
m3_1290 -> m3_1295  [key=2, style=dotted];
m3_1291 -> m3_11  [key=2, style=dotted];
m3_1291 -> m3_1292  [key=0, style=solid];
m3_1291 -> m3_1296  [key=2, style=dotted];
m3_1291 -> m3_1295  [key=2, style=dotted];
m3_1292 -> m3_11  [key=2, style=dotted];
m3_1292 -> m3_1293  [key=0, style=solid];
m3_1292 -> m3_1296  [key=2, style=dotted];
m3_1292 -> m3_1295  [key=2, style=dotted];
m3_1265 -> m3_1266  [key=0, style=solid];
m3_1265 -> m3_1267  [key=1, style=dashed, color=darkseagreen4, label=myA];
m3_1265 -> m3_1268  [key=1, style=dashed, color=darkseagreen4, label=myA];
m3_1265 -> m3_1269  [key=1, style=dashed, color=darkseagreen4, label=myA];
m3_1265 -> m3_1270  [key=1, style=dashed, color=darkseagreen4, label=myA];
m3_1265 -> m3_1271  [key=1, style=dashed, color=darkseagreen4, label=myA];
m3_1265 -> m3_1272  [key=1, style=dashed, color=darkseagreen4, label=myA];
m3_1265 -> m3_1273  [key=1, style=dashed, color=darkseagreen4, label=myA];
m3_1265 -> m3_98  [key=2, style=dotted];
m3_1274 -> m3_1275  [key=0, style=solid];
m3_1274 -> m3_1276  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1277  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1278  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1279  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1280  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1281  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1282  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1283  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1284  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1285  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1286  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1287  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1288  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1289  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1290  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1291  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_1292  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_1274 -> m3_98  [key=2, style=dotted];
m3_1293 -> m3_1264  [key=0, style=bold, color=blue];
m3_95 -> m3_11  [key=2, style=dotted];
m3_95 -> m3_96  [key=0, style=solid];
m3_635 -> m3_636  [key=0, style=solid];
m3_639 -> m3_11  [key=2, style=dotted];
m3_639 -> m3_640  [key=0, style=solid];
m3_640 -> m3_11  [key=2, style=dotted];
m3_640 -> m3_641  [key=0, style=solid];
m3_641 -> m3_11  [key=2, style=dotted];
m3_641 -> m3_642  [key=0, style=solid];
m3_642 -> m3_11  [key=2, style=dotted];
m3_642 -> m3_643  [key=0, style=solid];
m3_637 -> m3_639  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_637 -> m3_640  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_637 -> m3_641  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_637 -> m3_642  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_637 -> m3_98  [key=2, style=dotted];
m3_637 -> m3_638  [key=0, style=solid];
m3_638 -> m3_639  [key=0, style=solid];
m3_638 -> m3_633  [key=2, style=dotted];
m3_636 -> m3_637  [key=0, style=solid];
m3_643 -> m3_635  [key=0, style=bold, color=blue];
m3_292 -> m3_293  [key=0, style=solid];
m3_297 -> m3_11  [key=2, style=dotted];
m3_297 -> m3_298  [key=0, style=solid];
m3_298 -> m3_11  [key=2, style=dotted];
m3_298 -> m3_299  [key=0, style=solid];
m3_296 -> m3_297  [key=0, style=solid];
m3_296 -> m3_298  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_296 -> m3_261  [key=2, style=dotted];
m3_296 -> m3_300  [key=2, style=dotted];
m3_293 -> m3_296  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_293 -> m3_294  [key=0, style=solid];
m3_294 -> m3_296  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_294 -> m3_295  [key=0, style=solid];
m3_294 -> m3_255  [key=2, style=dotted];
m3_295 -> m3_296  [key=0, style=solid];
m3_299 -> m3_292  [key=0, style=bold, color=blue];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m3_69 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m3_69 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m3_69 -> m3_10  [key=2, style=dotted];
m3_69 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_78  [key=2, style=dotted];
m3_70 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_70 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_70 -> m3_77  [key=2, style=dotted];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_79  [key=2, style=dotted];
m3_71 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m3_71 -> m3_11  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_81  [key=2, style=dotted];
m3_73 -> m3_78  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_84  [key=2, style=dotted];
m3_75 -> m3_63  [key=0, style=bold, color=blue];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_80  [key=2, style=dotted];
m3_72 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_72 -> m3_11  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_82  [key=2, style=dotted];
m3_74 -> m3_83  [key=2, style=dotted];
m3_74 -> m3_7  [key=2, style=dotted];
m3_74 -> m3_11  [key=2, style=dotted];
m3_77 -> m3_69  [key=0, style=bold, color=blue];
m3_230 -> m3_231  [key=0, style=solid];
m3_241 -> m3_242  [key=0, style=solid, color=green];
m3_241 -> m3_11  [key=2, style=dotted, color=green];
m3_234 -> m3_241  [key=1, style=dashed, color=green, label=anonymous];
m3_234 -> m3_234  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_234 -> m3_235  [key=0, style=solid];
m3_234 -> m3_243  [key=2, style=dotted];
m3_234 -> m3_236  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_234 -> m3_237  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_234 -> m3_238  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_234 -> m3_239  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_234 -> m3_240  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_240 -> m3_241  [key=0, style=solid, color=green];
m3_240 -> m3_11  [key=2, style=dotted];
m3_231 -> m3_234  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_231 -> m3_232  [key=0, style=solid];
m3_231 -> m3_28  [key=2, style=dotted];
m3_232 -> m3_234  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_232 -> m3_233  [key=0, style=solid];
m3_232 -> m3_84  [key=2, style=dotted];
m3_233 -> m3_234  [key=0, style=solid];
m3_233 -> m3_11  [key=2, style=dotted];
m3_235 -> m3_11  [key=2, style=dotted];
m3_235 -> m3_236  [key=0, style=solid];
m3_236 -> m3_11  [key=2, style=dotted];
m3_236 -> m3_237  [key=0, style=solid];
m3_237 -> m3_11  [key=2, style=dotted];
m3_237 -> m3_238  [key=0, style=solid];
m3_238 -> m3_11  [key=2, style=dotted];
m3_238 -> m3_239  [key=0, style=solid];
m3_239 -> m3_240  [key=0, style=solid];
m3_239 -> m3_11  [key=2, style=dotted];
m3_242 -> m3_230  [key=0, style=bold, color=blue];
m3_1517 -> m3_1518  [key=0, style=solid];
m3_1520 -> m3_11  [key=2, style=dotted];
m3_1520 -> m3_1521  [key=0, style=solid];
m3_1521 -> m3_11  [key=2, style=dotted];
m3_1521 -> m3_1522  [key=0, style=solid];
m3_1522 -> m3_11  [key=2, style=dotted];
m3_1522 -> m3_1523  [key=0, style=solid];
m3_1519 -> m3_1520  [key=0, style=solid];
m3_1519 -> m3_1521  [key=1, style=dashed, color=darkseagreen4, label=cc];
m3_1519 -> m3_1522  [key=1, style=dashed, color=darkseagreen4, label=cc];
m3_1519 -> m3_98  [key=2, style=dotted];
m3_1518 -> m3_1519  [key=0, style=solid];
m3_1523 -> m3_1517  [key=0, style=bold, color=blue];
m3_1337 -> m3_1338  [key=0, style=solid];
m3_1346 -> m3_11  [key=2, style=dotted];
m3_1346 -> m3_1347  [key=0, style=solid];
m3_1344 -> m3_11  [key=2, style=dotted];
m3_1344 -> m3_1345  [key=0, style=solid];
m3_1338 -> m3_1346  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m3_1338 -> m3_1339  [key=0, style=solid];
m3_1338 -> m3_1348  [key=2, style=dotted];
m3_1338 -> m3_1341  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m3_1338 -> m3_1342  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m3_1345 -> m3_1346  [key=0, style=solid];
m3_1345 -> m3_98  [key=2, style=dotted];
m3_1342 -> m3_1344  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1342 -> m3_1345  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1342 -> m3_1343  [key=0, style=solid];
m3_1342 -> m3_95  [key=2, style=dotted];
m3_1343 -> m3_1344  [key=0, style=solid];
m3_1339 -> m3_1340  [key=0, style=solid];
m3_1339 -> m3_1349  [key=2, style=dotted];
m3_1339 -> m3_1341  [key=1, style=dashed, color=darkseagreen4, label=document];
m3_1341 -> m3_1342  [key=0, style=solid];
m3_1340 -> m3_1341  [key=0, style=solid];
m3_1340 -> m3_1350  [key=2, style=dotted];
m3_1347 -> m3_1337  [key=0, style=bold, color=blue];
m3_1111 -> m3_1112  [key=0, style=solid];
m3_1112 -> m3_1113  [key=0, style=solid];
m3_1112 -> m3_1114  [key=2, style=dotted];
m3_1113 -> m3_1111  [key=0, style=bold, color=blue];
m3_1736 -> m3_1737  [key=0, style=solid];
m3_1741 -> m3_11  [key=2, style=dotted];
m3_1741 -> m3_1742  [key=0, style=solid];
m3_1742 -> m3_11  [key=2, style=dotted];
m3_1742 -> m3_1743  [key=0, style=solid];
m3_1743 -> m3_11  [key=2, style=dotted];
m3_1743 -> m3_1744  [key=0, style=solid];
m3_1740 -> m3_1741  [key=0, style=solid];
m3_1740 -> m3_1742  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_1740 -> m3_1743  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_1740 -> m3_98  [key=2, style=dotted];
m3_1739 -> m3_1740  [key=0, style=solid];
m3_1739 -> m3_84  [key=2, style=dotted];
m3_1737 -> m3_1739  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_1737 -> m3_1738  [key=0, style=solid];
m3_1737 -> m3_1745  [key=2, style=dotted];
m3_1738 -> m3_1739  [key=0, style=solid];
m3_1738 -> m3_1746  [key=2, style=dotted];
m3_1744 -> m3_1736  [key=0, style=bold, color=blue];
m3_706 -> m3_707  [key=0, style=solid];
m3_710 -> m3_11  [key=2, style=dotted];
m3_710 -> m3_711  [key=0, style=solid];
m3_712 -> m3_11  [key=2, style=dotted];
m3_712 -> m3_713  [key=0, style=solid];
m3_712 -> m3_703  [key=2, style=dotted];
m3_709 -> m3_710  [key=0, style=solid];
m3_709 -> m3_95  [key=2, style=dotted];
m3_709 -> m3_711  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_711 -> m3_712  [key=0, style=solid];
m3_711 -> m3_98  [key=2, style=dotted];
m3_707 -> m3_709  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_707 -> m3_708  [key=0, style=solid];
m3_707 -> m3_697  [key=2, style=dotted];
m3_708 -> m3_709  [key=0, style=solid];
m3_713 -> m3_706  [key=0, style=bold, color=blue];
m3_403 -> m3_404  [key=0, style=solid];
m3_406 -> m3_11  [key=2, style=dotted];
m3_406 -> m3_407  [key=0, style=solid];
m3_408 -> m3_11  [key=2, style=dotted];
m3_408 -> m3_409  [key=0, style=solid];
m3_405 -> m3_406  [key=0, style=solid];
m3_405 -> m3_84  [key=2, style=dotted];
m3_405 -> m3_407  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_407 -> m3_408  [key=0, style=solid];
m3_407 -> m3_98  [key=2, style=dotted];
m3_404 -> m3_405  [key=0, style=solid];
m3_404 -> m3_410  [key=2, style=dotted];
m3_409 -> m3_403  [key=0, style=bold, color=blue];
m3_67 -> m3_68  [key=0, style=solid];
m3_8 -> m3_9  [key=0, style=solid];
m3_1254 -> m3_1255  [key=0, style=solid];
m3_1257 -> m3_11  [key=2, style=dotted];
m3_1257 -> m3_1258  [key=0, style=solid];
m3_1260 -> m3_11  [key=2, style=dotted];
m3_1260 -> m3_1261  [key=0, style=solid];
m3_1256 -> m3_1257  [key=0, style=solid];
m3_1256 -> m3_95  [key=2, style=dotted];
m3_1258 -> m3_1259  [key=0, style=solid];
m3_1258 -> m3_1263  [key=2, style=dotted];
m3_1259 -> m3_1260  [key=0, style=solid];
m3_1259 -> m3_95  [key=2, style=dotted];
m3_1255 -> m3_1256  [key=0, style=solid];
m3_1255 -> m3_1262  [key=2, style=dotted];
m3_1261 -> m3_1254  [key=0, style=bold, color=blue];
m3_1557 -> m3_1558  [key=0, style=solid];
m3_1563 -> m3_11  [key=2, style=dotted];
m3_1563 -> m3_1564  [key=0, style=solid];
m3_1568 -> m3_11  [key=2, style=dotted];
m3_1568 -> m3_1569  [key=0, style=solid];
m3_1572 -> m3_11  [key=2, style=dotted];
m3_1572 -> m3_1573  [key=0, style=solid];
m3_1574 -> m3_11  [key=2, style=dotted];
m3_1574 -> m3_1575  [key=0, style=solid];
m3_1577 -> m3_11  [key=2, style=dotted];
m3_1577 -> m3_1578  [key=0, style=solid];
m3_1562 -> m3_1563  [key=0, style=solid];
m3_1562 -> m3_95  [key=2, style=dotted];
m3_1562 -> m3_1564  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1564 -> m3_1568  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_1564 -> m3_98  [key=2, style=dotted];
m3_1564 -> m3_1565  [key=0, style=solid];
m3_1564 -> m3_1566  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_1564 -> m3_1567  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_1567 -> m3_1568  [key=0, style=solid];
m3_1567 -> m3_1580  [key=2, style=dotted];
m3_1569 -> m3_1570  [key=0, style=solid];
m3_1571 -> m3_1572  [key=0, style=solid];
m3_1571 -> m3_95  [key=2, style=dotted];
m3_1571 -> m3_1573  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1573 -> m3_1574  [key=0, style=solid];
m3_1573 -> m3_1577  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_1573 -> m3_98  [key=2, style=dotted];
m3_1573 -> m3_1575  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_1573 -> m3_1576  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_1575 -> m3_1576  [key=0, style=solid];
m3_1575 -> m3_1581  [key=2, style=dotted];
m3_1576 -> m3_1577  [key=0, style=solid];
m3_1576 -> m3_1581  [key=2, style=dotted];
m3_1558 -> m3_1562  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1558 -> m3_1569  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1558 -> m3_1571  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1558 -> m3_1559  [key=0, style=solid];
m3_1558 -> m3_1579  [key=2, style=dotted];
m3_1558 -> m3_1560  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1558 -> m3_1561  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1558 -> m3_1570  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1561 -> m3_1562  [key=0, style=solid];
m3_1565 -> m3_1336  [key=2, style=dotted];
m3_1565 -> m3_1566  [key=0, style=solid];
m3_1566 -> m3_1567  [key=0, style=solid];
m3_1566 -> m3_1580  [key=2, style=dotted];
m3_1570 -> m3_1571  [key=0, style=solid];
m3_1559 -> m3_1560  [key=0, style=solid];
m3_1560 -> m3_1561  [key=0, style=solid];
m3_1578 -> m3_1557  [key=0, style=bold, color=blue];
m3_1789 -> m3_1790  [key=0, style=solid];
m3_1790 -> m3_664  [key=2, style=dotted];
m3_1790 -> m3_721  [key=2, style=dotted];
m3_1790 -> m3_1791  [key=0, style=solid];
m3_1791 -> m3_1789  [key=0, style=bold, color=blue];
m3_578 -> m3_579  [key=0, style=solid];
m3_580 -> m3_98  [key=2, style=dotted];
m3_580 -> m3_581  [key=0, style=solid];
m3_579 -> m3_580  [key=0, style=solid];
m3_581 -> m3_578  [key=0, style=bold, color=blue];
m3_1001 -> m3_1002  [key=0, style=solid];
m3_1005 -> m3_11  [key=2, style=dotted];
m3_1005 -> m3_1006  [key=0, style=solid];
m3_1005 -> m3_1013  [key=2, style=dotted];
m3_1006 -> m3_11  [key=2, style=dotted];
m3_1006 -> m3_1007  [key=0, style=solid];
m3_1006 -> m3_1013  [key=2, style=dotted];
m3_1007 -> m3_11  [key=2, style=dotted];
m3_1007 -> m3_1008  [key=0, style=solid];
m3_1008 -> m3_11  [key=2, style=dotted];
m3_1008 -> m3_1009  [key=0, style=solid];
m3_1009 -> m3_11  [key=2, style=dotted];
m3_1009 -> m3_1010  [key=0, style=solid];
m3_1010 -> m3_11  [key=2, style=dotted];
m3_1010 -> m3_1011  [key=0, style=solid];
m3_1011 -> m3_11  [key=2, style=dotted];
m3_1011 -> m3_1012  [key=0, style=solid];
m3_1002 -> m3_1005  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1002 -> m3_1006  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1002 -> m3_1007  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1002 -> m3_1008  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1002 -> m3_1009  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1002 -> m3_1010  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1002 -> m3_1011  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1002 -> m3_98  [key=2, style=dotted];
m3_1002 -> m3_1003  [key=0, style=solid];
m3_1002 -> m3_1004  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1004 -> m3_1005  [key=0, style=solid];
m3_1004 -> m3_633  [key=2, style=dotted];
m3_1003 -> m3_1004  [key=0, style=solid];
m3_1003 -> m3_633  [key=2, style=dotted];
m3_1012 -> m3_1001  [key=0, style=bold, color=blue];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_7  [key=2, style=dotted];
m3_21 -> m3_11  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_15  [key=2, style=dotted];
m3_22 -> m3_11  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_29  [key=2, style=dotted];
m3_22 -> m3_16  [key=0, style=bold, color=blue];
m3_23 -> m3_11  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_24 -> m3_11  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_33  [key=2, style=dotted];
m3_24 -> m3_5  [key=2, style=dotted];
m3_24 -> m3_14  [key=2, style=dotted];
m3_25 -> m3_11  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_7  [key=2, style=dotted];
m3_26 -> m3_11  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_33  [key=2, style=dotted];
m3_26 -> m3_5  [key=2, style=dotted];
m3_26 -> m3_14  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_20 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_20 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_20 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_20 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_20 -> m3_10  [key=2, style=dotted];
m3_20 -> m3_5  [key=2, style=dotted];
m3_20 -> m3_14  [key=2, style=dotted];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_84  [key=2, style=dotted];
m3_19 -> m3_15  [key=2, style=dotted];
m3_16 -> m3_29  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_13  [key=2, style=dotted];
m3_17 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label=invoice];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_5  [key=2, style=dotted];
m3_18 -> m3_14  [key=2, style=dotted];
m3_27 -> m3_13  [key=0, style=bold, color=blue];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_7  [key=2, style=dotted];
m3_1686 -> m3_1687  [key=0, style=solid];
m3_1697 -> m3_11  [key=2, style=dotted];
m3_1697 -> m3_1698  [key=0, style=solid];
m3_1699 -> m3_11  [key=2, style=dotted];
m3_1699 -> m3_1700  [key=0, style=solid];
m3_1703 -> m3_11  [key=2, style=dotted];
m3_1703 -> m3_1704  [key=0, style=solid];
m3_1705 -> m3_11  [key=2, style=dotted];
m3_1705 -> m3_1706  [key=0, style=solid];
m3_1694 -> m3_11  [key=2, style=dotted];
m3_1694 -> m3_1695  [key=0, style=solid];
m3_1687 -> m3_1697  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_1687 -> m3_1699  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_1687 -> m3_1703  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_1687 -> m3_1705  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_1687 -> m3_1688  [key=0, style=solid];
m3_1687 -> m3_1707  [key=2, style=dotted];
m3_1687 -> m3_1689  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_1687 -> m3_1690  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_1687 -> m3_1691  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_1687 -> m3_1692  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_1687 -> m3_1693  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_1695 -> m3_1697  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m3_1695 -> m3_1699  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m3_1695 -> m3_98  [key=2, style=dotted];
m3_1695 -> m3_1696  [key=0, style=solid];
m3_1695 -> m3_1698  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m3_1695 -> m3_1700  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m3_1695 -> m3_1701  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m3_1696 -> m3_1697  [key=0, style=solid];
m3_1696 -> m3_816  [key=2, style=dotted];
m3_1698 -> m3_1699  [key=0, style=solid];
m3_1698 -> m3_816  [key=2, style=dotted];
m3_1700 -> m3_1701  [key=0, style=solid];
m3_1700 -> m3_816  [key=2, style=dotted];
m3_1701 -> m3_1703  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1701 -> m3_1705  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1701 -> m3_1702  [key=0, style=solid];
m3_1701 -> m3_1704  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1702 -> m3_1703  [key=0, style=solid];
m3_1702 -> m3_816  [key=2, style=dotted];
m3_1704 -> m3_1705  [key=0, style=solid];
m3_1704 -> m3_816  [key=2, style=dotted];
m3_1693 -> m3_1694  [key=0, style=solid];
m3_1693 -> m3_1695  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1693 -> m3_1708  [key=2, style=dotted];
m3_1692 -> m3_208  [key=2, style=dotted];
m3_1692 -> m3_1693  [key=0, style=solid];
m3_1688 -> m3_1689  [key=0, style=solid];
m3_1689 -> m3_1690  [key=0, style=solid];
m3_1690 -> m3_1707  [key=2, style=dotted];
m3_1690 -> m3_1691  [key=0, style=solid];
m3_1691 -> m3_1692  [key=0, style=solid];
m3_1706 -> m3_1686  [key=0, style=bold, color=blue];
m3_1447 -> m3_1452  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m3_1447 -> m3_1454  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m3_1447 -> m3_1448  [key=0, style=solid];
m3_1447 -> m3_1450  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m3_1447 -> m3_1451  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m3_1453 -> m3_159  [key=2, style=dotted];
m3_1453 -> m3_1454  [key=0, style=solid];
m3_1452 -> m3_1453  [key=0, style=solid];
m3_1449 -> m3_1453  [key=1, style=dashed, color=darkseagreen4, label=newStrings];
m3_1449 -> m3_1450  [key=0, style=solid];
m3_1449 -> m3_1457  [key=2, style=dotted];
m3_1449 -> m3_1455  [key=1, style=dashed, color=darkseagreen4, label=newStrings];
m3_1454 -> m3_1451  [key=0, style=solid];
m3_1454 -> m3_1458  [key=2, style=dotted];
m3_1451 -> m3_1452  [key=0, style=solid];
m3_1451 -> m3_1455  [key=0, style=solid];
m3_1448 -> m3_1449  [key=0, style=solid];
m3_1450 -> m3_1451  [key=0, style=solid];
m3_1450 -> m3_1458  [key=2, style=dotted];
m3_1455 -> m3_1456  [key=0, style=solid];
m3_1456 -> m3_1447  [key=0, style=bold, color=blue];
m3_891 -> m3_892  [key=0, style=solid];
m3_894 -> m3_11  [key=2, style=dotted];
m3_894 -> m3_895  [key=0, style=solid];
m3_893 -> m3_894  [key=0, style=solid];
m3_893 -> m3_98  [key=2, style=dotted];
m3_892 -> m3_893  [key=0, style=solid];
m3_895 -> m3_891  [key=0, style=bold, color=blue];
m3_925 -> m3_926  [key=0, style=solid];
m3_931 -> m3_11  [key=2, style=dotted];
m3_931 -> m3_931  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m3_931 -> m3_932  [key=0, style=solid];
m3_931 -> m3_933  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m3_929 -> m3_11  [key=2, style=dotted];
m3_929 -> m3_930  [key=0, style=solid];
m3_932 -> m3_11  [key=2, style=dotted];
m3_932 -> m3_933  [key=0, style=solid];
m3_933 -> m3_11  [key=2, style=dotted];
m3_933 -> m3_933  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m3_933 -> m3_934  [key=0, style=solid];
m3_934 -> m3_11  [key=2, style=dotted];
m3_934 -> m3_935  [key=0, style=solid];
m3_926 -> m3_931  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m3_926 -> m3_927  [key=0, style=solid];
m3_926 -> m3_936  [key=2, style=dotted];
m3_930 -> m3_931  [key=0, style=solid];
m3_930 -> m3_98  [key=2, style=dotted];
m3_927 -> m3_929  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_927 -> m3_930  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_927 -> m3_928  [key=0, style=solid];
m3_927 -> m3_95  [key=2, style=dotted];
m3_928 -> m3_929  [key=0, style=solid];
m3_928 -> m3_12  [key=2, style=dotted];
m3_935 -> m3_925  [key=0, style=bold, color=blue];
m3_244 -> m3_245  [key=0, style=solid];
m3_252 -> m3_11  [key=2, style=dotted];
m3_252 -> m3_253  [key=0, style=solid];
m3_250 -> m3_11  [key=2, style=dotted];
m3_250 -> m3_251  [key=0, style=solid];
m3_250 -> m3_258  [key=2, style=dotted];
m3_250 -> m3_259  [key=2, style=dotted];
m3_245 -> m3_252  [key=1, style=dashed, color=darkseagreen4, label=collection];
m3_245 -> m3_28  [key=2, style=dotted];
m3_245 -> m3_246  [key=0, style=solid];
m3_245 -> m3_254  [key=2, style=dotted];
m3_245 -> m3_249  [key=1, style=dashed, color=darkseagreen4, label=collection];
m3_251 -> m3_252  [key=0, style=solid];
m3_251 -> m3_260  [key=2, style=dotted];
m3_251 -> m3_261  [key=2, style=dotted];
m3_251 -> m3_258  [key=2, style=dotted];
m3_251 -> m3_259  [key=2, style=dotted];
m3_251 -> m3_262  [key=2, style=dotted];
m3_249 -> m3_250  [key=0, style=solid];
m3_249 -> m3_257  [key=2, style=dotted];
m3_248 -> m3_250  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_248 -> m3_251  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_248 -> m3_249  [key=0, style=solid];
m3_248 -> m3_256  [key=2, style=dotted];
m3_246 -> m3_251  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m3_246 -> m3_249  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m3_246 -> m3_247  [key=0, style=solid];
m3_246 -> m3_255  [key=2, style=dotted];
m3_247 -> m3_248  [key=0, style=solid];
m3_253 -> m3_244  [key=0, style=bold, color=blue];
m3_191 -> m3_192  [key=0, style=solid];
m3_193 -> m3_98  [key=2, style=dotted];
m3_193 -> m3_194  [key=0, style=solid];
m3_192 -> m3_193  [key=0, style=solid];
m3_194 -> m3_191  [key=0, style=bold, color=blue];
m3_644 -> m3_645  [key=0, style=solid];
m3_648 -> m3_11  [key=2, style=dotted];
m3_648 -> m3_649  [key=0, style=solid];
m3_651 -> m3_11  [key=2, style=dotted];
m3_651 -> m3_652  [key=0, style=solid];
m3_647 -> m3_648  [key=0, style=solid];
m3_647 -> m3_84  [key=2, style=dotted];
m3_647 -> m3_649  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_649 -> m3_98  [key=2, style=dotted];
m3_649 -> m3_650  [key=0, style=solid];
m3_650 -> m3_651  [key=0, style=solid];
m3_650 -> m3_84  [key=2, style=dotted];
m3_645 -> m3_647  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_645 -> m3_646  [key=0, style=solid];
m3_645 -> m3_653  [key=2, style=dotted];
m3_646 -> m3_647  [key=0, style=solid];
m3_652 -> m3_644  [key=0, style=bold, color=blue];
m3_97 -> m3_98  [key=0, style=solid];
m3_878 -> m3_879  [key=0, style=solid];
m3_880 -> m3_98  [key=2, style=dotted];
m3_880 -> m3_881  [key=0, style=solid];
m3_879 -> m3_880  [key=0, style=solid];
m3_881 -> m3_878  [key=0, style=bold, color=blue];
m3_1757 -> m3_1758  [key=0, style=solid];
m3_1762 -> m3_11  [key=2, style=dotted];
m3_1762 -> m3_1763  [key=0, style=solid];
m3_1763 -> m3_11  [key=2, style=dotted];
m3_1763 -> m3_1764  [key=0, style=solid];
m3_1761 -> m3_1762  [key=0, style=solid];
m3_1761 -> m3_1763  [key=1, style=dashed, color=darkseagreen4, label=meh];
m3_1761 -> m3_721  [key=2, style=dotted];
m3_1759 -> m3_1761  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_1759 -> m3_664  [key=2, style=dotted];
m3_1759 -> m3_1760  [key=0, style=solid];
m3_1760 -> m3_1761  [key=0, style=solid];
m3_1760 -> m3_665  [key=2, style=dotted];
m3_1758 -> m3_1759  [key=0, style=solid];
m3_1758 -> m3_1760  [key=1, style=dashed, color=darkseagreen4, label=derived];
m3_1758 -> m3_1749  [key=2, style=dotted];
m3_1764 -> m3_1757  [key=0, style=bold, color=blue];
m3_80 -> m3_81  [key=0, style=solid];
m3_1727 -> m3_1728  [key=0, style=solid];
m3_1730 -> m3_11  [key=2, style=dotted];
m3_1730 -> m3_1731  [key=0, style=solid];
m3_1729 -> m3_1730  [key=0, style=solid];
m3_1729 -> m3_98  [key=2, style=dotted];
m3_1728 -> m3_1729  [key=0, style=solid];
m3_1731 -> m3_1727  [key=0, style=bold, color=blue];
m3_353 -> m3_354  [key=0, style=solid];
m3_358 -> m3_11  [key=2, style=dotted];
m3_358 -> m3_359  [key=0, style=solid];
m3_356 -> m3_11  [key=2, style=dotted];
m3_356 -> m3_357  [key=0, style=solid];
m3_354 -> m3_358  [key=1, style=dashed, color=darkseagreen4, label=ts];
m3_354 -> m3_355  [key=0, style=solid];
m3_354 -> m3_360  [key=2, style=dotted];
m3_357 -> m3_358  [key=0, style=solid];
m3_357 -> m3_98  [key=2, style=dotted];
m3_355 -> m3_356  [key=0, style=solid];
m3_355 -> m3_357  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_355 -> m3_361  [key=2, style=dotted];
m3_355 -> m3_95  [key=2, style=dotted];
m3_359 -> m3_353  [key=0, style=bold, color=blue];
m3_1153 -> m3_1154  [key=0, style=solid];
m3_1153 -> m3_1155  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1156  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1157  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1158  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1159  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1160  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1161  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1162  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1163  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1164  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1165  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1166  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1167  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1168  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1169  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1170  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1153 -> m3_1171  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_1154 -> m3_1155  [key=0, style=solid];
m3_1154 -> m3_1173  [key=2, style=dotted];
m3_1155 -> m3_1156  [key=0, style=solid];
m3_1155 -> m3_1174  [key=2, style=dotted];
m3_1156 -> m3_1157  [key=0, style=solid];
m3_1156 -> m3_1175  [key=2, style=dotted];
m3_1157 -> m3_1158  [key=0, style=solid];
m3_1157 -> m3_1175  [key=2, style=dotted];
m3_1158 -> m3_1159  [key=0, style=solid];
m3_1158 -> m3_1175  [key=2, style=dotted];
m3_1159 -> m3_1160  [key=0, style=solid];
m3_1159 -> m3_1175  [key=2, style=dotted];
m3_1160 -> m3_1161  [key=0, style=solid];
m3_1160 -> m3_1176  [key=2, style=dotted];
m3_1161 -> m3_1162  [key=0, style=solid];
m3_1161 -> m3_1177  [key=2, style=dotted];
m3_1162 -> m3_1163  [key=0, style=solid];
m3_1162 -> m3_1178  [key=2, style=dotted];
m3_1163 -> m3_1164  [key=0, style=solid];
m3_1163 -> m3_1179  [key=2, style=dotted];
m3_1164 -> m3_1165  [key=0, style=solid];
m3_1164 -> m3_1180  [key=2, style=dotted];
m3_1165 -> m3_1166  [key=0, style=solid];
m3_1165 -> m3_1181  [key=2, style=dotted];
m3_1166 -> m3_1167  [key=0, style=solid];
m3_1166 -> m3_1182  [key=2, style=dotted];
m3_1167 -> m3_1168  [key=0, style=solid];
m3_1167 -> m3_1183  [key=2, style=dotted];
m3_1168 -> m3_1169  [key=0, style=solid];
m3_1168 -> m3_1184  [key=2, style=dotted];
m3_1169 -> m3_1170  [key=0, style=solid];
m3_1169 -> m3_1185  [key=2, style=dotted];
m3_1170 -> m3_1171  [key=0, style=solid];
m3_1170 -> m3_1186  [key=2, style=dotted];
m3_1171 -> m3_1172  [key=0, style=solid];
m3_1171 -> m3_1187  [key=2, style=dotted];
m3_1172 -> m3_1153  [key=0, style=bold, color=blue];
m3_212 -> m3_213  [key=0, style=solid];
m3_215 -> m3_11  [key=2, style=dotted];
m3_215 -> m3_216  [key=0, style=solid];
m3_214 -> m3_215  [key=0, style=solid];
m3_214 -> m3_84  [key=2, style=dotted];
m3_213 -> m3_214  [key=0, style=solid];
m3_213 -> m3_208  [key=2, style=dotted];
m3_213 -> m3_219  [key=2, style=dotted];
m3_213 -> n39  [key=2, style=dotted];
m3_213 -> m3_217  [key=2, style=dotted];
m3_213 -> m3_218  [key=2, style=dotted];
m3_216 -> m3_212  [key=0, style=bold, color=blue];
m3_1668 -> m3_1669  [key=0, style=solid];
m3_1670 -> m3_11  [key=2, style=dotted];
m3_1670 -> m3_1671  [key=0, style=solid];
m3_1672 -> m3_11  [key=2, style=dotted];
m3_1672 -> m3_1673  [key=0, style=solid];
m3_1672 -> m3_219  [key=2, style=dotted];
m3_1673 -> m3_11  [key=2, style=dotted];
m3_1673 -> m3_1674  [key=0, style=solid];
m3_1673 -> m3_29  [key=2, style=dotted];
m3_1669 -> m3_1670  [key=0, style=solid];
m3_1669 -> m3_29  [key=2, style=dotted];
m3_1669 -> m3_1675  [key=2, style=dotted];
m3_1669 -> m3_1676  [key=2, style=dotted];
m3_1669 -> m3_219  [key=2, style=dotted];
m3_1669 -> m3_84  [key=2, style=dotted];
m3_1669 -> m3_1671  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m3_1671 -> m3_1672  [key=0, style=solid];
m3_1671 -> m3_1673  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m3_1671 -> m3_98  [key=2, style=dotted];
m3_1674 -> m3_1668  [key=0, style=bold, color=blue];
m3_1080 -> m3_1081  [key=0, style=solid];
m3_1081 -> m3_1080  [key=0, style=bold, color=blue];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_33  [key=2, style=dotted];
m3_30 -> m3_5  [key=2, style=dotted];
m3_30 -> m3_14  [key=2, style=dotted];
m3_33 -> m3_11  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_34 -> m3_11  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_37  [key=2, style=dotted];
m3_35 -> m3_11  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_32 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_32 -> m3_10  [key=2, style=dotted];
m3_32 -> m3_23  [key=0, style=bold, color=blue];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_7  [key=2, style=dotted];
m3_36 -> m3_30  [key=0, style=bold, color=blue];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_5  [key=2, style=dotted];
m3_36 -> m3_6  [key=2, style=dotted];
m3_590 -> m3_591  [key=0, style=solid];
m3_591 -> m3_208  [key=2, style=dotted];
m3_591 -> m3_592  [key=0, style=solid];
m3_591 -> m3_594  [key=2, style=dotted];
m3_592 -> m3_593  [key=0, style=solid];
m3_593 -> m3_590  [key=0, style=bold, color=blue];
m3_553 -> m3_554  [key=0, style=solid];
m3_555 -> m3_98  [key=2, style=dotted];
m3_555 -> m3_556  [key=0, style=solid];
m3_554 -> m3_555  [key=0, style=solid];
m3_556 -> m3_553  [key=0, style=bold, color=blue];
m3_548 -> m3_549  [key=0, style=solid];
m3_549 -> m3_208  [key=2, style=dotted];
m3_549 -> m3_550  [key=0, style=solid];
m3_549 -> m3_536  [key=2, style=dotted];
m3_551 -> m3_12  [key=2, style=dotted];
m3_551 -> m3_552  [key=0, style=solid];
m3_550 -> m3_551  [key=0, style=solid];
m3_550 -> m3_84  [key=2, style=dotted];
m3_552 -> m3_548  [key=0, style=bold, color=blue];
m3_1768 -> m3_1769  [key=0, style=solid];
m3_1769 -> m3_1208  [key=2, style=dotted];
m3_1769 -> m3_1770  [key=0, style=solid];
m3_1770 -> m3_1768  [key=0, style=bold, color=blue];
m3_12 -> m3_8  [key=0, style=bold, color=blue];
m3_737 -> m3_738  [key=0, style=solid];
m3_740 -> m3_11  [key=2, style=dotted];
m3_740 -> m3_741  [key=0, style=solid];
m3_741 -> m3_11  [key=2, style=dotted];
m3_741 -> m3_742  [key=0, style=solid];
m3_741 -> m3_208  [key=2, style=dotted];
m3_742 -> m3_11  [key=2, style=dotted];
m3_742 -> m3_743  [key=0, style=solid];
m3_743 -> m3_11  [key=2, style=dotted];
m3_743 -> m3_744  [key=0, style=solid];
m3_744 -> m3_11  [key=2, style=dotted];
m3_744 -> m3_745  [key=0, style=solid];
m3_745 -> m3_11  [key=2, style=dotted];
m3_745 -> m3_746  [key=0, style=solid];
m3_739 -> m3_740  [key=0, style=solid];
m3_739 -> m3_741  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_739 -> m3_742  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_739 -> m3_743  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_739 -> m3_744  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_739 -> m3_745  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_739 -> m3_10  [key=2, style=dotted];
m3_738 -> m3_739  [key=0, style=solid];
m3_746 -> m3_737  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_4 -> m3_11  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_5 -> m3_11  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_1 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=store];
m3_1 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label=store];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_8  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label=deserializedStore];
m3_3 -> m3_10  [key=2, style=dotted];
m3_3 -> m3_7  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_12  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_2 -> m3_84  [key=2, style=dotted];
m3_2 -> m3_5  [key=2, style=dotted];
m3_7 -> m3_0  [key=0, style=bold, color=blue];
m3_301 -> m3_302  [key=0, style=solid];
m3_306 -> m3_307  [key=0, style=solid, color=green];
m3_306 -> m3_318  [key=2, style=dotted, color=green];
m3_302 -> m3_306  [key=1, style=dashed, color=green, label=wibble];
m3_302 -> m3_303  [key=0, style=solid];
m3_302 -> m3_317  [key=2, style=dotted];
m3_302 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_302 -> m3_305  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_302 -> m3_307  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_305 -> m3_306  [key=0, style=solid, color=green];
m3_305 -> m3_318  [key=2, style=dotted];
m3_307 -> m3_308  [key=0, style=solid];
m3_307 -> m3_84  [key=2, style=dotted];
m3_315 -> m3_316  [key=0, style=solid, color=green];
m3_315 -> m3_11  [key=2, style=dotted, color=green];
m3_308 -> m3_315  [key=1, style=dashed, color=green, label=wibbleOut];
m3_308 -> m3_309  [key=0, style=solid];
m3_308 -> m3_98  [key=2, style=dotted];
m3_308 -> m3_310  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m3_308 -> m3_311  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m3_308 -> m3_312  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m3_308 -> m3_313  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m3_308 -> m3_314  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m3_314 -> m3_315  [key=0, style=solid, color=green];
m3_314 -> m3_11  [key=2, style=dotted];
m3_309 -> m3_11  [key=2, style=dotted];
m3_309 -> m3_310  [key=0, style=solid];
m3_310 -> m3_11  [key=2, style=dotted];
m3_310 -> m3_311  [key=0, style=solid];
m3_311 -> m3_11  [key=2, style=dotted];
m3_311 -> m3_312  [key=0, style=solid];
m3_312 -> m3_11  [key=2, style=dotted];
m3_312 -> m3_313  [key=0, style=solid];
m3_313 -> m3_11  [key=2, style=dotted];
m3_313 -> m3_314  [key=0, style=solid];
m3_303 -> m3_304  [key=0, style=solid];
m3_304 -> m3_305  [key=0, style=solid];
m3_304 -> m3_318  [key=2, style=dotted];
m3_316 -> m3_301  [key=0, style=bold, color=blue];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_105  [key=0, style=bold, color=blue];
m3_112 -> m3_113  [key=0, style=solid];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_5  [key=2, style=dotted];
m3_113 -> m3_6  [key=2, style=dotted];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_7  [key=2, style=dotted];
m3_115 -> m3_111  [key=0, style=bold, color=blue];
m3_115 -> m3_119  [key=2, style=dotted];
m3_115 -> m3_116  [key=0, style=solid];
m3_432 -> m3_433  [key=0, style=solid];
m3_438 -> m3_11  [key=2, style=dotted];
m3_438 -> m3_439  [key=0, style=solid];
m3_439 -> m3_11  [key=2, style=dotted];
m3_439 -> m3_440  [key=0, style=solid];
m3_436 -> m3_11  [key=2, style=dotted];
m3_436 -> m3_437  [key=0, style=solid];
m3_433 -> m3_438  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m3_433 -> m3_439  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m3_433 -> m3_434  [key=0, style=solid];
m3_433 -> m3_430  [key=2, style=dotted];
m3_437 -> m3_438  [key=0, style=solid];
m3_437 -> m3_439  [key=1, style=dashed, color=darkseagreen4, label=m2];
m3_437 -> m3_441  [key=2, style=dotted];
m3_437 -> m3_420  [key=2, style=dotted];
m3_435 -> m3_436  [key=0, style=solid];
m3_435 -> m3_437  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_435 -> m3_441  [key=2, style=dotted];
m3_435 -> m3_419  [key=2, style=dotted];
m3_434 -> m3_435  [key=0, style=solid];
m3_434 -> m3_431  [key=2, style=dotted];
m3_440 -> m3_432  [key=0, style=bold, color=blue];
m3_779 -> m3_780  [key=0, style=solid];
m3_782 -> m3_11  [key=2, style=dotted];
m3_782 -> m3_783  [key=0, style=solid];
m3_783 -> m3_11  [key=2, style=dotted];
m3_783 -> m3_784  [key=0, style=solid];
m3_784 -> m3_11  [key=2, style=dotted];
m3_784 -> m3_785  [key=0, style=solid];
m3_785 -> m3_11  [key=2, style=dotted];
m3_785 -> m3_786  [key=0, style=solid];
m3_781 -> m3_782  [key=0, style=solid];
m3_781 -> m3_783  [key=1, style=dashed, color=darkseagreen4, label=content];
m3_781 -> m3_784  [key=1, style=dashed, color=darkseagreen4, label=content];
m3_781 -> m3_785  [key=1, style=dashed, color=darkseagreen4, label=content];
m3_781 -> m3_98  [key=2, style=dotted];
m3_780 -> m3_781  [key=0, style=solid];
m3_786 -> m3_779  [key=0, style=bold, color=blue];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_7  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_1391 -> m3_1392  [key=0, style=solid];
m3_1394 -> m3_11  [key=2, style=dotted];
m3_1394 -> m3_1395  [key=0, style=solid];
m3_1397 -> m3_11  [key=2, style=dotted];
m3_1397 -> m3_1398  [key=0, style=solid];
m3_1397 -> m3_84  [key=2, style=dotted];
m3_1400 -> m3_11  [key=2, style=dotted];
m3_1400 -> m3_1401  [key=0, style=solid];
m3_1400 -> m3_84  [key=2, style=dotted];
m3_1393 -> m3_1394  [key=0, style=solid];
m3_1393 -> m3_84  [key=2, style=dotted];
m3_1395 -> m3_1397  [key=1, style=dashed, color=darkseagreen4, label=d1];
m3_1395 -> m3_1396  [key=0, style=solid];
m3_1395 -> m3_56  [key=2, style=dotted];
m3_1396 -> m3_1397  [key=0, style=solid];
m3_1396 -> m3_229  [key=2, style=dotted];
m3_1398 -> m3_1400  [key=1, style=dashed, color=darkseagreen4, label=d2];
m3_1398 -> m3_1399  [key=0, style=solid];
m3_1398 -> m3_56  [key=2, style=dotted];
m3_1399 -> m3_1400  [key=0, style=solid];
m3_1399 -> m3_229  [key=2, style=dotted];
m3_1392 -> m3_1393  [key=0, style=solid];
m3_1392 -> m3_1396  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_1392 -> m3_1399  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_1401 -> m3_1391  [key=0, style=bold, color=blue];
m3_1017 -> m3_1018  [key=0, style=solid];
m3_1018 -> m3_1019  [key=0, style=solid];
m3_1019 -> m3_1017  [key=0, style=bold, color=blue];
m3_442 -> m3_443  [key=0, style=solid];
m3_446 -> m3_12  [key=2, style=dotted];
m3_446 -> m3_447  [key=0, style=solid];
m3_445 -> m3_446  [key=0, style=solid];
m3_445 -> m3_95  [key=2, style=dotted];
m3_444 -> m3_431  [key=2, style=dotted];
m3_444 -> m3_445  [key=0, style=solid];
m3_443 -> m3_444  [key=0, style=solid];
m3_443 -> m3_448  [key=2, style=dotted];
m3_443 -> m3_449  [key=2, style=dotted];
m3_447 -> m3_442  [key=0, style=bold, color=blue];
m3_902 -> m3_903  [key=0, style=solid];
m3_903 -> m3_98  [key=2, style=dotted];
m3_903 -> m3_904  [key=0, style=solid];
m3_904 -> m3_902  [key=0, style=bold, color=blue];
m3_1246 -> m3_1247  [key=0, style=solid];
m3_1248 -> m3_11  [key=2, style=dotted];
m3_1248 -> m3_1249  [key=0, style=solid];
m3_1249 -> m3_11  [key=2, style=dotted];
m3_1249 -> m3_1250  [key=0, style=solid];
m3_1250 -> m3_11  [key=2, style=dotted];
m3_1250 -> m3_1251  [key=0, style=solid];
m3_1251 -> m3_11  [key=2, style=dotted];
m3_1251 -> m3_1252  [key=0, style=solid];
m3_1252 -> m3_11  [key=2, style=dotted];
m3_1252 -> m3_1253  [key=0, style=solid];
m3_1247 -> m3_1248  [key=0, style=solid];
m3_1247 -> m3_1249  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m3_1247 -> m3_1250  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m3_1247 -> m3_1251  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m3_1247 -> m3_1252  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m3_1247 -> m3_98  [key=2, style=dotted];
m3_1253 -> m3_1246  [key=0, style=bold, color=blue];
m3_970 -> m3_971  [key=0, style=solid];
m3_978 -> m3_11  [key=2, style=dotted];
m3_978 -> m3_979  [key=0, style=solid];
m3_979 -> m3_11  [key=2, style=dotted];
m3_979 -> m3_980  [key=0, style=solid];
m3_980 -> m3_11  [key=2, style=dotted];
m3_980 -> m3_981  [key=0, style=solid];
m3_977 -> m3_318  [key=2, style=dotted];
m3_977 -> m3_975  [key=0, style=solid];
m3_974 -> m3_978  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m3_974 -> m3_979  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m3_974 -> m3_980  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m3_974 -> m3_977  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m3_974 -> m3_975  [key=0, style=solid];
m3_974 -> n39  [key=2, style=dotted];
m3_975 -> m3_978  [key=0, style=solid];
m3_975 -> m3_976  [key=0, style=solid];
m3_976 -> m3_98  [key=2, style=dotted];
m3_976 -> m3_977  [key=0, style=solid];
m3_976 -> m3_493  [key=2, style=dotted];
m3_973 -> m3_130  [key=2, style=dotted];
m3_973 -> m3_974  [key=0, style=solid];
m3_973 -> m3_975  [key=1, style=dashed, color=darkseagreen4, label=results];
m3_973 -> m3_982  [key=2, style=dotted];
m3_972 -> m3_973  [key=0, style=solid];
m3_972 -> m3_756  [key=2, style=dotted];
m3_971 -> m3_972  [key=0, style=solid];
m3_981 -> m3_970  [key=0, style=bold, color=blue];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_13  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_5  [key=2, style=dotted];
m3_10 -> m3_14  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_15  [key=2, style=dotted];
m3_582 -> m3_583  [key=0, style=solid];
m3_586 -> m3_10  [key=2, style=dotted];
m3_586 -> m3_587  [key=0, style=solid];
m3_585 -> m3_586  [key=0, style=solid];
m3_585 -> m3_84  [key=2, style=dotted];
m3_583 -> m3_585  [key=1, style=dashed, color=darkseagreen4, label=testClass];
m3_583 -> m3_584  [key=0, style=solid];
m3_583 -> m3_588  [key=2, style=dotted];
m3_584 -> m3_585  [key=0, style=solid];
m3_584 -> m3_589  [key=2, style=dotted];
m3_587 -> m3_582  [key=0, style=bold, color=blue];
m3_959 -> m3_960  [key=0, style=solid];
m3_964 -> m3_11  [key=2, style=dotted];
m3_964 -> m3_965  [key=0, style=solid];
m3_963 -> m3_964  [key=0, style=solid];
m3_963 -> m3_95  [key=2, style=dotted];
m3_960 -> m3_963  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m3_960 -> m3_56  [key=2, style=dotted];
m3_960 -> m3_961  [key=0, style=solid];
m3_960 -> m3_962  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m3_962 -> m3_963  [key=0, style=solid];
m3_962 -> m3_594  [key=2, style=dotted];
m3_962 -> m3_229  [key=2, style=dotted];
m3_961 -> m3_962  [key=0, style=solid];
m3_961 -> m3_229  [key=2, style=dotted];
m3_961 -> m3_594  [key=2, style=dotted];
m3_965 -> m3_959  [key=0, style=bold, color=blue];
m3_347 -> m3_348  [key=0, style=solid];
m3_349 -> m3_11  [key=2, style=dotted];
m3_349 -> m3_350  [key=0, style=solid];
m3_351 -> m3_11  [key=2, style=dotted];
m3_351 -> m3_352  [key=0, style=solid];
m3_348 -> m3_349  [key=0, style=solid];
m3_348 -> m3_84  [key=2, style=dotted];
m3_348 -> m3_350  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_350 -> m3_351  [key=0, style=solid];
m3_350 -> m3_98  [key=2, style=dotted];
m3_352 -> m3_347  [key=0, style=bold, color=blue];
m3_595 -> m3_596  [key=0, style=solid];
m3_601 -> m3_255  [key=2, style=dotted];
m3_601 -> m3_602  [key=0, style=solid];
m3_596 -> m3_590  [key=2, style=dotted];
m3_596 -> m3_597  [key=0, style=solid];
m3_596 -> m3_602  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_600 -> m3_601  [key=0, style=solid];
m3_602 -> m3_603  [key=0, style=solid];
m3_602 -> m3_607  [key=2, style=dotted];
m3_597 -> m3_598  [key=0, style=solid];
m3_597 -> m3_604  [key=2, style=dotted];
m3_599 -> m3_600  [key=0, style=solid];
m3_599 -> m3_602  [key=1, style=dashed, color=darkseagreen4, label=jw];
m3_599 -> m3_606  [key=2, style=dotted];
m3_598 -> m3_599  [key=0, style=solid];
m3_598 -> m3_605  [key=2, style=dotted];
m3_603 -> m3_595  [key=0, style=bold, color=blue];
m3_328 -> m3_329  [key=0, style=solid];
m3_334 -> m3_11  [key=2, style=dotted];
m3_334 -> m3_335  [key=0, style=solid];
m3_333 -> m3_334  [key=0, style=solid];
m3_333 -> m3_84  [key=2, style=dotted];
m3_329 -> m3_333  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_329 -> m3_330  [key=0, style=solid];
m3_329 -> m3_336  [key=2, style=dotted];
m3_329 -> m3_331  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_329 -> m3_332  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_332 -> m3_333  [key=0, style=solid];
m3_332 -> m3_337  [key=2, style=dotted];
m3_330 -> m3_331  [key=0, style=solid];
m3_330 -> m3_337  [key=2, style=dotted];
m3_331 -> m3_332  [key=0, style=solid];
m3_331 -> m3_337  [key=2, style=dotted];
m3_335 -> m3_328  [key=0, style=bold, color=blue];
m3_195 -> m3_196  [key=0, style=solid];
m3_205 -> m3_11  [key=2, style=dotted];
m3_205 -> m3_206  [key=0, style=solid];
m3_204 -> m3_205  [key=0, style=solid];
m3_204 -> m3_84  [key=2, style=dotted];
m3_203 -> m3_205  [key=1, style=dashed, color=darkseagreen4, label=expected];
m3_203 -> m3_204  [key=0, style=solid];
m3_203 -> m3_211  [key=2, style=dotted];
m3_196 -> m3_204  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m3_196 -> m3_208  [key=2, style=dotted];
m3_196 -> m3_197  [key=0, style=solid];
m3_196 -> n39  [key=2, style=dotted];
m3_196 -> m3_200  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m3_202 -> m3_203  [key=0, style=solid];
m3_202 -> m3_210  [key=2, style=dotted];
m3_197 -> m3_198  [key=0, style=solid];
m3_200 -> m3_201  [key=0, style=solid];
m3_200 -> m3_59  [key=2, style=dotted];
m3_198 -> m3_202  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_198 -> m3_200  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_198 -> m3_199  [key=0, style=solid];
m3_198 -> m3_80  [key=2, style=dotted];
m3_198 -> m3_201  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_201 -> m3_202  [key=0, style=solid];
m3_201 -> m3_209  [key=2, style=dotted];
m3_199 -> m3_58  [key=2, style=dotted];
m3_199 -> m3_200  [key=0, style=solid];
m3_206 -> m3_195  [key=0, style=bold, color=blue];
m3_127 -> m3_120  [key=0, style=bold, color=blue];
m3_94 -> m3_11  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_703 -> m3_704  [key=0, style=solid];
m3_704 -> m3_705  [key=0, style=solid];
m3_705 -> m3_703  [key=0, style=bold, color=blue];
m3_1099 -> m3_1100  [key=0, style=solid];
m3_1100 -> m3_1101  [key=0, style=solid];
m3_1100 -> m3_1102  [key=2, style=dotted];
m3_1101 -> m3_1099  [key=0, style=bold, color=blue];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_7  [key=2, style=dotted];
m3_102 -> m3_11  [key=2, style=dotted];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_7  [key=2, style=dotted];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_98  [key=2, style=dotted];
m3_101 -> m3_7  [key=2, style=dotted];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_104  [key=2, style=dotted];
m3_100 -> m3_84  [key=2, style=dotted];
m3_100 -> m3_7  [key=2, style=dotted];
m3_103 -> m3_99  [key=0, style=bold, color=blue];
m3_103 -> m3_96  [key=0, style=bold, color=blue];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_5  [key=2, style=dotted];
m3_98 -> m3_6  [key=2, style=dotted];
m3_98 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_98 -> m3_101  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_98 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_120 -> m3_121  [key=0, style=solid];
m3_421 -> m3_422  [key=0, style=solid];
m3_427 -> m3_11  [key=2, style=dotted];
m3_427 -> m3_428  [key=0, style=solid];
m3_428 -> m3_11  [key=2, style=dotted];
m3_428 -> m3_429  [key=0, style=solid];
m3_425 -> m3_11  [key=2, style=dotted];
m3_425 -> m3_426  [key=0, style=solid];
m3_422 -> m3_427  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m3_422 -> m3_428  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m3_422 -> m3_423  [key=0, style=solid];
m3_422 -> m3_430  [key=2, style=dotted];
m3_426 -> m3_427  [key=0, style=solid];
m3_426 -> m3_428  [key=1, style=dashed, color=darkseagreen4, label=m2];
m3_426 -> m3_98  [key=2, style=dotted];
m3_424 -> m3_425  [key=0, style=solid];
m3_424 -> m3_426  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_424 -> m3_84  [key=2, style=dotted];
m3_423 -> m3_424  [key=0, style=solid];
m3_423 -> m3_431  [key=2, style=dotted];
m3_429 -> m3_421  [key=0, style=bold, color=blue];
m3_41 -> m3_42  [key=0, style=solid];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_5  [key=2, style=dotted];
m3_42 -> m3_6  [key=2, style=dotted];
m3_42 -> m3_44  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_42 -> m3_48  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_42 -> m3_52  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_42 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_42 -> m3_84  [key=2, style=dotted];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_7  [key=2, style=dotted];
m3_43 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_43 -> m3_80  [key=2, style=dotted];
m3_43 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_7  [key=2, style=dotted];
m3_44 -> m3_58  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_5  [key=2, style=dotted];
m3_45 -> m3_6  [key=2, style=dotted];
m3_45 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_45 -> m3_59  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_7  [key=2, style=dotted];
m3_46 -> m3_60  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_7  [key=2, style=dotted];
m3_47 -> m3_61  [key=2, style=dotted];
m3_48 -> m3_41  [key=0, style=bold, color=blue];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_10  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_91  [key=0, style=bold, color=blue];
m3_1125 -> m3_1126  [key=0, style=solid];
m3_1126 -> m3_1127  [key=0, style=solid];
m3_1126 -> m3_1128  [key=2, style=dotted];
m3_1127 -> m3_1125  [key=0, style=bold, color=blue];
m3_836 -> m3_837  [key=0, style=solid];
m3_842 -> m3_11  [key=2, style=dotted];
m3_842 -> m3_843  [key=0, style=solid];
m3_843 -> m3_11  [key=2, style=dotted];
m3_843 -> m3_844  [key=0, style=solid];
m3_838 -> m3_842  [key=1, style=dashed, color=darkseagreen4, label=products];
m3_838 -> m3_843  [key=1, style=dashed, color=darkseagreen4, label=products];
m3_838 -> m3_98  [key=2, style=dotted];
m3_838 -> m3_839  [key=0, style=solid];
m3_838 -> m3_840  [key=1, style=dashed, color=darkseagreen4, label=products];
m3_841 -> m3_842  [key=0, style=solid];
m3_841 -> m3_12  [key=2, style=dotted];
m3_837 -> m3_838  [key=0, style=solid];
m3_839 -> m3_840  [key=0, style=solid];
m3_839 -> m3_826  [key=2, style=dotted];
m3_840 -> m3_841  [key=0, style=solid];
m3_844 -> m3_836  [key=0, style=bold, color=blue];
m3_1103 -> m3_1104  [key=0, style=solid];
m3_1104 -> m3_1105  [key=0, style=solid];
m3_1104 -> m3_1106  [key=2, style=dotted];
m3_1105 -> m3_1103  [key=0, style=bold, color=blue];
m3_874 -> m3_875  [key=0, style=solid];
m3_876 -> m3_98  [key=2, style=dotted];
m3_876 -> m3_877  [key=0, style=solid];
m3_875 -> m3_876  [key=0, style=solid];
m3_877 -> m3_874  [key=0, style=bold, color=blue];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_5  [key=2, style=dotted];
m3_38 -> m3_6  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_7  [key=2, style=dotted];
m3_39 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m3_39 -> m3_29  [key=2, style=dotted];
m3_39 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m3_40 -> m3_34  [key=0, style=bold, color=blue];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_56  [key=2, style=dotted];
m3_40 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m3_40 -> m3_45  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m3_997 -> m3_998  [key=0, style=solid];
m3_998 -> m3_56  [key=2, style=dotted];
m3_998 -> m3_999  [key=0, style=solid];
m3_999 -> n39  [key=2, style=dotted];
m3_999 -> m3_1000  [key=0, style=solid];
m3_1000 -> m3_997  [key=0, style=bold, color=blue];
m3_272 -> m3_273  [key=0, style=solid];
m3_278 -> m3_279  [key=0, style=solid, color=green];
m3_278 -> m3_11  [key=2, style=dotted, color=green];
m3_274 -> m3_278  [key=1, style=dashed, color=green, label=wibble];
m3_274 -> m3_275  [key=0, style=solid];
m3_274 -> m3_98  [key=2, style=dotted];
m3_274 -> m3_276  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_274 -> m3_277  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_274 -> m3_279  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_274 -> m3_280  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_277 -> m3_278  [key=0, style=solid, color=green];
m3_277 -> m3_11  [key=2, style=dotted];
m3_279 -> m3_11  [key=2, style=dotted];
m3_279 -> m3_280  [key=0, style=solid];
m3_275 -> m3_11  [key=2, style=dotted];
m3_275 -> m3_276  [key=0, style=solid];
m3_276 -> m3_11  [key=2, style=dotted];
m3_276 -> m3_277  [key=0, style=solid];
m3_280 -> m3_11  [key=2, style=dotted];
m3_280 -> m3_281  [key=0, style=solid];
m3_273 -> m3_274  [key=0, style=solid];
m3_281 -> m3_272  [key=0, style=bold, color=blue];
m3_220 -> m3_221  [key=0, style=solid];
m3_227 -> m3_11  [key=2, style=dotted];
m3_227 -> m3_228  [key=0, style=solid];
m3_225 -> m3_11  [key=2, style=dotted];
m3_225 -> m3_226  [key=0, style=solid];
m3_221 -> m3_227  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_221 -> m3_222  [key=0, style=solid];
m3_221 -> m3_56  [key=2, style=dotted];
m3_221 -> m3_223  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_221 -> m3_224  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_226 -> m3_227  [key=0, style=solid];
m3_226 -> m3_98  [key=2, style=dotted];
m3_224 -> m3_225  [key=0, style=solid];
m3_224 -> m3_226  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_224 -> m3_84  [key=2, style=dotted];
m3_222 -> m3_223  [key=0, style=solid];
m3_222 -> m3_229  [key=2, style=dotted];
m3_223 -> m3_224  [key=0, style=solid];
m3_223 -> m3_229  [key=2, style=dotted];
m3_228 -> m3_220  [key=0, style=bold, color=blue];
m3_983 -> m3_984  [key=0, style=solid];
m3_994 -> m3_11  [key=2, style=dotted];
m3_994 -> m3_995  [key=0, style=solid];
m3_992 -> m3_11  [key=2, style=dotted];
m3_992 -> m3_993  [key=0, style=solid];
m3_985 -> m3_994  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m3_985 -> m3_986  [key=0, style=solid];
m3_985 -> m3_987  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m3_985 -> m3_988  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m3_985 -> m3_989  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m3_985 -> m3_990  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m3_993 -> m3_994  [key=0, style=solid];
m3_993 -> m3_98  [key=2, style=dotted];
m3_991 -> m3_992  [key=0, style=solid];
m3_991 -> m3_993  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_991 -> m3_95  [key=2, style=dotted];
m3_986 -> m3_208  [key=2, style=dotted];
m3_986 -> m3_987  [key=0, style=solid];
m3_989 -> m3_208  [key=2, style=dotted];
m3_989 -> m3_990  [key=0, style=solid];
m3_984 -> m3_985  [key=0, style=solid];
m3_984 -> m3_991  [key=1, style=dashed, color=darkseagreen4, label=personPropertyClass];
m3_984 -> m3_996  [key=2, style=dotted];
m3_987 -> m3_988  [key=0, style=solid];
m3_988 -> m3_989  [key=0, style=solid];
m3_990 -> m3_991  [key=0, style=solid];
m3_995 -> m3_983  [key=0, style=bold, color=blue];
m3_123 -> m3_11  [key=2, style=dotted];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_128  [key=2, style=dotted];
m3_123 -> m3_129  [key=2, style=dotted];
m3_126 -> m3_11  [key=2, style=dotted];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_130  [key=2, style=dotted];
m3_126 -> m3_129  [key=2, style=dotted];
m3_126 -> m3_121  [key=0, style=bold, color=blue];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_119  [key=2, style=dotted];
m3_122 -> m3_124  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_122 -> m3_127  [key=2, style=dotted];
m3_124 -> m3_125  [key=0, style=solid];
m3_125 -> m3_126  [key=0, style=solid];
m3_121 -> m3_122  [key=0, style=solid];
m3_794 -> m3_795  [key=0, style=solid];
m3_797 -> m3_11  [key=2, style=dotted];
m3_797 -> m3_798  [key=0, style=solid];
m3_798 -> m3_11  [key=2, style=dotted];
m3_798 -> m3_799  [key=0, style=solid];
m3_799 -> m3_11  [key=2, style=dotted];
m3_799 -> m3_800  [key=0, style=solid];
m3_800 -> m3_11  [key=2, style=dotted];
m3_800 -> m3_801  [key=0, style=solid];
m3_801 -> m3_11  [key=2, style=dotted];
m3_801 -> m3_802  [key=0, style=solid];
m3_796 -> m3_797  [key=0, style=solid];
m3_796 -> m3_798  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_796 -> m3_799  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_796 -> m3_800  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_796 -> m3_801  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_796 -> m3_98  [key=2, style=dotted];
m3_795 -> m3_796  [key=0, style=solid];
m3_802 -> m3_794  [key=0, style=bold, color=blue];
m3_371 -> m3_372  [key=0, style=solid];
m3_374 -> m3_11  [key=2, style=dotted];
m3_374 -> m3_375  [key=0, style=solid];
m3_375 -> m3_11  [key=2, style=dotted];
m3_375 -> m3_376  [key=0, style=solid];
m3_376 -> m3_11  [key=2, style=dotted];
m3_376 -> m3_377  [key=0, style=solid];
m3_373 -> m3_374  [key=0, style=solid];
m3_373 -> m3_375  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_373 -> m3_376  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_373 -> m3_98  [key=2, style=dotted];
m3_372 -> m3_373  [key=0, style=solid];
m3_377 -> m3_371  [key=0, style=bold, color=blue];
m3_1765 -> m3_1766  [key=0, style=solid];
m3_1766 -> m3_1173  [key=2, style=dotted];
m3_1766 -> m3_1767  [key=0, style=solid];
m3_1766 -> m3_1811  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m3_1767 -> m3_1765  [key=0, style=bold, color=blue];
m3_966 -> m3_967  [key=0, style=solid];
m3_968 -> m3_98  [key=2, style=dotted];
m3_968 -> m3_969  [key=0, style=solid];
m3_967 -> m3_968  [key=0, style=solid];
m3_969 -> m3_966  [key=0, style=bold, color=blue];
m3_167 -> m3_168  [key=0, style=solid];
m3_173 -> m3_11  [key=2, style=dotted];
m3_173 -> m3_174  [key=0, style=solid];
m3_172 -> m3_11  [key=2, style=dotted];
m3_172 -> m3_173  [key=0, style=solid];
m3_170 -> m3_173  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_175  [key=2, style=dotted];
m3_170 -> m3_176  [key=2, style=dotted];
m3_170 -> m3_177  [key=2, style=dotted];
m3_171 -> m3_173  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_98  [key=2, style=dotted];
m3_168 -> m3_170  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_168 -> m3_171  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_168 -> m3_169  [key=0, style=solid];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_58  [key=2, style=dotted];
m3_174 -> m3_167  [key=0, style=bold, color=blue];
m3_50 -> m3_11  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_49 -> m3_50  [key=0, style=solid];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_12  [key=2, style=dotted];
m3_52 -> m3_12  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_54 -> m3_12  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_49  [key=0, style=bold, color=blue];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_62  [key=2, style=dotted];
m3_55 -> m3_38  [key=0, style=bold, color=blue];
m3_55 -> m3_56  [key=0, style=solid];
m3_1133 -> m3_1134  [key=0, style=solid];
m3_1134 -> m3_1135  [key=0, style=solid];
m3_1134 -> m3_1136  [key=2, style=dotted];
m3_1135 -> m3_1133  [key=0, style=bold, color=blue];
m3_722 -> m3_723  [key=0, style=solid];
m3_725 -> m3_11  [key=2, style=dotted];
m3_725 -> m3_726  [key=0, style=solid];
m3_726 -> m3_11  [key=2, style=dotted];
m3_726 -> m3_727  [key=0, style=solid];
m3_727 -> m3_11  [key=2, style=dotted];
m3_727 -> m3_728  [key=0, style=solid];
m3_728 -> m3_11  [key=2, style=dotted];
m3_728 -> m3_729  [key=0, style=solid];
m3_729 -> m3_11  [key=2, style=dotted];
m3_729 -> m3_730  [key=0, style=solid];
m3_730 -> m3_11  [key=2, style=dotted];
m3_730 -> m3_731  [key=0, style=solid];
m3_730 -> m3_736  [key=2, style=dotted];
m3_731 -> m3_11  [key=2, style=dotted];
m3_731 -> m3_732  [key=0, style=solid];
m3_731 -> m3_736  [key=2, style=dotted];
m3_732 -> m3_11  [key=2, style=dotted];
m3_732 -> m3_733  [key=0, style=solid];
m3_733 -> m3_11  [key=2, style=dotted];
m3_733 -> m3_734  [key=0, style=solid];
m3_724 -> m3_725  [key=0, style=solid];
m3_724 -> m3_726  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_724 -> m3_727  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_724 -> m3_728  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_724 -> m3_729  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_724 -> m3_730  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_724 -> m3_731  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_724 -> m3_732  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_724 -> m3_733  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_724 -> m3_664  [key=2, style=dotted];
m3_724 -> m3_721  [key=2, style=dotted];
m3_724 -> m3_734  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_734 -> m3_735  [key=0, style=solid];
m3_734 -> m3_633  [key=2, style=dotted];
m3_723 -> m3_724  [key=0, style=solid];
m3_735 -> m3_722  [key=0, style=bold, color=blue];
m3_478 -> m3_479  [key=0, style=solid];
m3_482 -> m3_11  [key=2, style=dotted];
m3_482 -> m3_483  [key=0, style=solid];
m3_481 -> m3_482  [key=0, style=solid];
m3_481 -> m3_84  [key=2, style=dotted];
m3_479 -> m3_481  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m3_479 -> m3_480  [key=0, style=solid];
m3_479 -> m3_484  [key=2, style=dotted];
m3_479 -> m3_485  [key=2, style=dotted];
m3_480 -> m3_481  [key=0, style=solid];
m3_483 -> m3_478  [key=0, style=bold, color=blue];
m3_1107 -> m3_1108  [key=0, style=solid];
m3_1108 -> m3_1109  [key=0, style=solid];
m3_1108 -> m3_1110  [key=2, style=dotted];
m3_1109 -> m3_1107  [key=0, style=bold, color=blue];
m3_845 -> m3_846  [key=0, style=solid];
m3_848 -> m3_11  [key=2, style=dotted];
m3_848 -> m3_849  [key=0, style=solid];
m3_847 -> m3_848  [key=0, style=solid];
m3_847 -> m3_98  [key=2, style=dotted];
m3_846 -> m3_847  [key=0, style=solid];
m3_849 -> m3_845  [key=0, style=bold, color=blue];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_49  [key=2, style=dotted];
m3_1137 -> m3_1138  [key=0, style=solid];
m3_1141 -> m3_11  [key=2, style=dotted];
m3_1141 -> m3_1142  [key=0, style=solid];
m3_1143 -> m3_11  [key=2, style=dotted];
m3_1143 -> m3_1144  [key=0, style=solid];
m3_1144 -> m3_11  [key=2, style=dotted];
m3_1144 -> m3_1145  [key=0, style=solid];
m3_1140 -> m3_1141  [key=0, style=solid];
m3_1140 -> m3_84  [key=2, style=dotted];
m3_1140 -> m3_1142  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1142 -> m3_1143  [key=0, style=solid];
m3_1142 -> m3_1144  [key=1, style=dashed, color=darkseagreen4, label=newModelStateDictionary];
m3_1142 -> m3_98  [key=2, style=dotted];
m3_1138 -> m3_1140  [key=1, style=dashed, color=darkseagreen4, label=modelStateDictionary];
m3_1138 -> m3_1139  [key=0, style=solid];
m3_1138 -> m3_1080  [key=2, style=dotted];
m3_1139 -> m3_1140  [key=0, style=solid];
m3_1139 -> m3_1092  [key=2, style=dotted];
m3_1145 -> m3_1137  [key=0, style=bold, color=blue];
m3_1428 -> m3_1429  [key=0, style=solid];
m3_1434 -> m3_11  [key=2, style=dotted];
m3_1434 -> m3_1435  [key=0, style=solid];
m3_1436 -> m3_11  [key=2, style=dotted];
m3_1436 -> m3_1437  [key=0, style=solid];
m3_1437 -> m3_11  [key=2, style=dotted];
m3_1437 -> m3_1438  [key=0, style=solid];
m3_1438 -> m3_11  [key=2, style=dotted];
m3_1438 -> m3_1439  [key=0, style=solid];
m3_1439 -> m3_11  [key=2, style=dotted];
m3_1439 -> m3_1440  [key=0, style=solid];
m3_1440 -> m3_11  [key=2, style=dotted];
m3_1440 -> m3_1441  [key=0, style=solid];
m3_1433 -> m3_1434  [key=0, style=solid];
m3_1433 -> m3_95  [key=2, style=dotted];
m3_1433 -> m3_1435  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1435 -> m3_1436  [key=0, style=solid];
m3_1435 -> m3_1437  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_1435 -> m3_1438  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_1435 -> m3_1439  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_1435 -> m3_1440  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_1435 -> m3_98  [key=2, style=dotted];
m3_1429 -> m3_208  [key=2, style=dotted];
m3_1429 -> m3_1430  [key=0, style=solid];
m3_1429 -> m3_1431  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m3_1429 -> m3_1432  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m3_1430 -> m3_1433  [key=1, style=dashed, color=darkseagreen4, label=list];
m3_1430 -> n39  [key=2, style=dotted];
m3_1430 -> m3_1431  [key=0, style=solid];
m3_1430 -> m3_1432  [key=1, style=dashed, color=darkseagreen4, label=list];
m3_1432 -> m3_1433  [key=0, style=solid];
m3_1432 -> m3_1427  [key=2, style=dotted];
m3_1432 -> m3_1442  [key=2, style=dotted];
m3_1432 -> m3_159  [key=2, style=dotted];
m3_1431 -> m3_1432  [key=0, style=solid];
m3_1431 -> m3_159  [key=2, style=dotted];
m3_1431 -> m3_1427  [key=2, style=dotted];
m3_1431 -> m3_1442  [key=2, style=dotted];
m3_1441 -> m3_1428  [key=0, style=bold, color=blue];
m3_908 -> m3_909  [key=0, style=solid];
m3_914 -> m3_11  [key=2, style=dotted];
m3_914 -> m3_915  [key=0, style=solid];
m3_913 -> m3_914  [key=0, style=solid];
m3_913 -> m3_84  [key=2, style=dotted];
m3_909 -> m3_913  [key=1, style=dashed, color=darkseagreen4, label=strings];
m3_909 -> m3_910  [key=0, style=solid];
m3_909 -> n39  [key=2, style=dotted];
m3_909 -> m3_911  [key=1, style=dashed, color=darkseagreen4, label=strings];
m3_909 -> m3_912  [key=1, style=dashed, color=darkseagreen4, label=strings];
m3_912 -> m3_913  [key=0, style=solid];
m3_912 -> m3_159  [key=2, style=dotted];
m3_910 -> m3_159  [key=2, style=dotted];
m3_910 -> m3_911  [key=0, style=solid];
m3_911 -> m3_912  [key=0, style=solid];
m3_911 -> m3_159  [key=2, style=dotted];
m3_915 -> m3_908  [key=0, style=bold, color=blue];
m3_916 -> m3_917  [key=0, style=solid];
m3_919 -> m3_11  [key=2, style=dotted];
m3_919 -> m3_920  [key=0, style=solid];
m3_921 -> m3_11  [key=2, style=dotted];
m3_921 -> m3_922  [key=0, style=solid];
m3_922 -> m3_11  [key=2, style=dotted];
m3_922 -> m3_923  [key=0, style=solid];
m3_918 -> m3_919  [key=0, style=solid];
m3_918 -> m3_95  [key=2, style=dotted];
m3_918 -> m3_920  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_920 -> m3_921  [key=0, style=solid];
m3_920 -> m3_922  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_920 -> m3_98  [key=2, style=dotted];
m3_917 -> m3_918  [key=0, style=solid];
m3_917 -> m3_924  [key=2, style=dotted];
m3_923 -> m3_916  [key=0, style=bold, color=blue];
m3_363 -> m3_364  [key=0, style=solid];
m3_365 -> m3_11  [key=2, style=dotted];
m3_365 -> m3_366  [key=0, style=solid];
m3_367 -> m3_11  [key=2, style=dotted];
m3_367 -> m3_368  [key=0, style=solid];
m3_368 -> m3_11  [key=2, style=dotted];
m3_368 -> m3_369  [key=0, style=solid];
m3_364 -> m3_365  [key=0, style=solid];
m3_364 -> m3_370  [key=2, style=dotted];
m3_364 -> m3_84  [key=2, style=dotted];
m3_366 -> m3_367  [key=0, style=solid];
m3_366 -> m3_368  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_366 -> m3_98  [key=2, style=dotted];
m3_369 -> m3_363  [key=0, style=bold, color=blue];
m3_882 -> m3_883  [key=0, style=solid];
m3_884 -> m3_594  [key=2, style=dotted];
m3_884 -> m3_885  [key=0, style=solid];
m3_884 -> m3_886  [key=2, style=dotted];
m3_883 -> m3_884  [key=0, style=solid];
m3_885 -> m3_882  [key=0, style=bold, color=blue];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_7  [key=2, style=dotted];
m3_817 -> m3_818  [key=0, style=solid];
m3_822 -> m3_11  [key=2, style=dotted];
m3_822 -> m3_823  [key=0, style=solid];
m3_823 -> m3_11  [key=2, style=dotted];
m3_823 -> m3_824  [key=0, style=solid];
m3_824 -> m3_11  [key=2, style=dotted];
m3_824 -> m3_825  [key=0, style=solid];
m3_819 -> m3_822  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_819 -> m3_823  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_819 -> m3_824  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_819 -> m3_98  [key=2, style=dotted];
m3_819 -> m3_820  [key=0, style=solid];
m3_819 -> m3_821  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_821 -> m3_822  [key=0, style=solid];
m3_821 -> m3_12  [key=2, style=dotted];
m3_818 -> m3_819  [key=0, style=solid];
m3_820 -> m3_821  [key=0, style=solid];
m3_820 -> m3_826  [key=2, style=dotted];
m3_825 -> m3_817  [key=0, style=bold, color=blue];
m3_1020 -> m3_1021  [key=0, style=solid];
m3_1021 -> m3_1022  [key=0, style=solid];
m3_1021 -> m3_95  [key=2, style=dotted];
m3_1022 -> m3_1020  [key=0, style=bold, color=blue];
m3_1722 -> m3_1723  [key=0, style=solid];
m3_1725 -> m3_11  [key=2, style=dotted];
m3_1725 -> m3_1726  [key=0, style=solid];
m3_1724 -> m3_1725  [key=0, style=solid];
m3_1724 -> m3_98  [key=2, style=dotted];
m3_1723 -> m3_1724  [key=0, style=solid];
m3_1726 -> m3_1722  [key=0, style=bold, color=blue];
m3_863 -> m3_864  [key=0, style=solid];
m3_865 -> m3_98  [key=2, style=dotted];
m3_865 -> m3_866  [key=0, style=solid];
m3_864 -> m3_865  [key=0, style=solid];
m3_866 -> m3_863  [key=0, style=bold, color=blue];
m3_411 -> m3_412  [key=0, style=solid];
m3_414 -> m3_11  [key=2, style=dotted];
m3_414 -> m3_415  [key=0, style=solid];
m3_416 -> m3_11  [key=2, style=dotted];
m3_416 -> m3_417  [key=0, style=solid];
m3_413 -> m3_414  [key=0, style=solid];
m3_413 -> m3_418  [key=2, style=dotted];
m3_413 -> m3_419  [key=2, style=dotted];
m3_413 -> m3_415  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_415 -> m3_416  [key=0, style=solid];
m3_415 -> m3_418  [key=2, style=dotted];
m3_415 -> m3_420  [key=2, style=dotted];
m3_412 -> m3_413  [key=0, style=solid];
m3_412 -> m3_410  [key=2, style=dotted];
m3_417 -> m3_411  [key=0, style=bold, color=blue];
m3_494 -> m3_495  [key=0, style=solid];
m3_497 -> m3_11  [key=2, style=dotted];
m3_497 -> m3_498  [key=0, style=solid];
m3_499 -> m3_11  [key=2, style=dotted];
m3_499 -> m3_500  [key=0, style=solid];
m3_499 -> m3_345  [key=2, style=dotted];
m3_500 -> m3_11  [key=2, style=dotted];
m3_500 -> m3_501  [key=0, style=solid];
m3_501 -> m3_11  [key=2, style=dotted];
m3_501 -> m3_502  [key=0, style=solid];
m3_502 -> m3_11  [key=2, style=dotted];
m3_502 -> m3_503  [key=0, style=solid];
m3_503 -> m3_11  [key=2, style=dotted];
m3_503 -> m3_504  [key=0, style=solid];
m3_504 -> m3_11  [key=2, style=dotted];
m3_504 -> m3_505  [key=0, style=solid];
m3_505 -> m3_11  [key=2, style=dotted];
m3_505 -> m3_506  [key=0, style=solid];
m3_496 -> m3_497  [key=0, style=solid];
m3_496 -> m3_84  [key=2, style=dotted];
m3_496 -> m3_498  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_498 -> m3_499  [key=0, style=solid];
m3_498 -> m3_500  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m3_498 -> m3_501  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m3_498 -> m3_502  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m3_498 -> m3_503  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m3_498 -> m3_504  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m3_498 -> m3_505  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m3_498 -> m3_98  [key=2, style=dotted];
m3_495 -> m3_496  [key=0, style=solid];
m3_495 -> m3_345  [key=2, style=dotted];
m3_495 -> m3_507  [key=2, style=dotted];
m3_506 -> m3_494  [key=0, style=bold, color=blue];
m3_905 -> m3_906  [key=0, style=solid];
m3_906 -> m3_98  [key=2, style=dotted];
m3_906 -> m3_907  [key=0, style=solid];
m3_907 -> m3_905  [key=0, style=bold, color=blue];
m3_682 -> m3_683  [key=0, style=solid];
m3_688 -> m3_11  [key=2, style=dotted];
m3_688 -> m3_689  [key=0, style=solid];
m3_690 -> m3_11  [key=2, style=dotted];
m3_690 -> m3_691  [key=0, style=solid];
m3_691 -> m3_11  [key=2, style=dotted];
m3_691 -> m3_692  [key=0, style=solid];
m3_692 -> m3_11  [key=2, style=dotted];
m3_692 -> m3_693  [key=0, style=solid];
m3_687 -> m3_688  [key=0, style=solid];
m3_687 -> m3_95  [key=2, style=dotted];
m3_689 -> m3_690  [key=0, style=solid];
m3_689 -> m3_691  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m3_689 -> m3_692  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m3_689 -> m3_98  [key=2, style=dotted];
m3_683 -> m3_687  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m3_683 -> m3_684  [key=0, style=solid];
m3_683 -> m3_694  [key=2, style=dotted];
m3_683 -> m3_685  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m3_683 -> m3_686  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m3_686 -> m3_687  [key=0, style=solid];
m3_684 -> m3_685  [key=0, style=solid];
m3_685 -> m3_686  [key=0, style=solid];
m3_693 -> m3_682  [key=0, style=bold, color=blue];
m3_608 -> m3_609  [key=0, style=solid];
m3_609 -> m3_208  [key=2, style=dotted];
m3_609 -> m3_610  [key=0, style=solid];
m3_609 -> m3_617  [key=2, style=dotted];
m3_609 -> m3_611  [key=1, style=dashed, color=darkseagreen4, label=entry];
m3_609 -> m3_612  [key=1, style=dashed, color=darkseagreen4, label=entry];
m3_613 -> m3_12  [key=2, style=dotted];
m3_613 -> m3_614  [key=0, style=solid];
m3_614 -> m3_12  [key=2, style=dotted];
m3_614 -> m3_615  [key=0, style=solid];
m3_615 -> m3_12  [key=2, style=dotted];
m3_615 -> m3_616  [key=0, style=solid];
m3_611 -> m3_419  [key=2, style=dotted];
m3_611 -> m3_614  [key=1, style=dashed, color=darkseagreen4, label=isoJson];
m3_611 -> m3_612  [key=0, style=solid];
m3_611 -> m3_618  [key=2, style=dotted];
m3_612 -> m3_419  [key=2, style=dotted];
m3_612 -> m3_441  [key=2, style=dotted];
m3_612 -> m3_613  [key=0, style=solid];
m3_612 -> m3_615  [key=1, style=dashed, color=darkseagreen4, label=javascriptJson];
m3_610 -> m3_613  [key=1, style=dashed, color=darkseagreen4, label=defaultJson];
m3_610 -> m3_611  [key=0, style=solid];
m3_610 -> m3_84  [key=2, style=dotted];
m3_616 -> m3_608  [key=0, style=bold, color=blue];
m3_66 -> m3_67  [key=0, style=solid];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_5  [key=2, style=dotted];
m3_91 -> m3_14  [key=2, style=dotted];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_15  [key=2, style=dotted];
m3_92 -> m3_97  [key=2, style=dotted];
m3_92 -> m3_84  [key=2, style=dotted];
m3_93 -> m3_85  [key=0, style=bold, color=blue];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_95  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_93 -> m3_98  [key=2, style=dotted];
m3_82 -> m3_11  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_84  [key=2, style=dotted];
m3_1660 -> m3_1661  [key=0, style=solid];
m3_1663 -> m3_11  [key=2, style=dotted];
m3_1663 -> m3_1664  [key=0, style=solid];
m3_1665 -> m3_11  [key=2, style=dotted];
m3_1665 -> m3_1665  [key=1, style=dashed, color=darkseagreen4, label=newStruct];
m3_1665 -> m3_1666  [key=0, style=solid];
m3_1662 -> m3_1663  [key=0, style=solid];
m3_1662 -> m3_95  [key=2, style=dotted];
m3_1662 -> m3_1664  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1664 -> m3_1665  [key=0, style=solid];
m3_1664 -> m3_98  [key=2, style=dotted];
m3_1661 -> m3_1662  [key=0, style=solid];
m3_1661 -> m3_1667  [key=2, style=dotted];
m3_1666 -> m3_1660  [key=0, style=bold, color=blue];
m3_486 -> m3_487  [key=0, style=solid];
m3_489 -> m3_11  [key=2, style=dotted];
m3_489 -> m3_490  [key=0, style=solid];
m3_490 -> m3_11  [key=2, style=dotted];
m3_490 -> m3_491  [key=0, style=solid];
m3_490 -> m3_493  [key=2, style=dotted];
m3_491 -> m3_11  [key=2, style=dotted];
m3_491 -> m3_492  [key=0, style=solid];
m3_488 -> m3_489  [key=0, style=solid];
m3_488 -> m3_490  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m3_488 -> m3_491  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m3_488 -> m3_98  [key=2, style=dotted];
m3_487 -> m3_488  [key=0, style=solid];
m3_492 -> m3_486  [key=0, style=bold, color=blue];
m3_83 -> m3_79  [key=0, style=bold, color=blue];
m3_1262 -> m3_1299  [key=0, style=solid];
m3_1262 -> m3_1300  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1262 -> m3_1301  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1262 -> m3_1302  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1262 -> m3_1303  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1262 -> m3_1304  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1262 -> m3_1305  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1262 -> m3_1306  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1299 -> m3_1300  [key=0, style=solid];
m3_1300 -> m3_1301  [key=0, style=solid];
m3_1301 -> m3_1302  [key=0, style=solid];
m3_1302 -> m3_1303  [key=0, style=solid];
m3_1303 -> m3_1304  [key=0, style=solid];
m3_1304 -> m3_1305  [key=0, style=solid];
m3_1305 -> m3_1306  [key=0, style=solid];
m3_1306 -> m3_1307  [key=0, style=solid];
m3_1307 -> m3_1262  [key=0, style=bold, color=blue];
m3_1618 -> m3_1619  [key=0, style=solid];
m3_1620 -> m3_11  [key=2, style=dotted];
m3_1620 -> m3_1621  [key=0, style=solid];
m3_1622 -> m3_11  [key=2, style=dotted];
m3_1622 -> m3_1623  [key=0, style=solid];
m3_1623 -> m3_11  [key=2, style=dotted];
m3_1623 -> m3_1624  [key=0, style=solid];
m3_1624 -> m3_11  [key=2, style=dotted];
m3_1624 -> m3_1625  [key=0, style=solid];
m3_1625 -> m3_11  [key=2, style=dotted];
m3_1625 -> m3_1626  [key=0, style=solid];
m3_1619 -> m3_1620  [key=0, style=solid];
m3_1619 -> m3_95  [key=2, style=dotted];
m3_1619 -> m3_1621  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_1621 -> m3_1622  [key=0, style=solid];
m3_1621 -> m3_1623  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1621 -> m3_1624  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1621 -> m3_1625  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1621 -> m3_10  [key=2, style=dotted];
m3_1626 -> m3_1618  [key=0, style=bold, color=blue];
m3_394 -> m3_395  [key=0, style=solid];
m3_398 -> m3_11  [key=2, style=dotted];
m3_398 -> m3_399  [key=0, style=solid];
m3_399 -> m3_11  [key=2, style=dotted];
m3_399 -> m3_400  [key=0, style=solid];
m3_400 -> m3_11  [key=2, style=dotted];
m3_400 -> m3_401  [key=0, style=solid];
m3_397 -> m3_398  [key=0, style=solid];
m3_397 -> m3_399  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_397 -> m3_400  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_397 -> m3_98  [key=2, style=dotted];
m3_396 -> m3_397  [key=0, style=solid];
m3_396 -> m3_84  [key=2, style=dotted];
m3_395 -> m3_396  [key=0, style=solid];
m3_395 -> m3_402  [key=2, style=dotted];
m3_401 -> m3_394  [key=0, style=bold, color=blue];
m3_1653 -> m3_1654  [key=0, style=solid];
m3_1656 -> m3_98  [key=2, style=dotted];
m3_1656 -> m3_1657  [key=0, style=solid];
m3_1655 -> m3_1656  [key=0, style=solid];
m3_1655 -> m3_95  [key=2, style=dotted];
m3_1654 -> m3_1655  [key=0, style=solid];
m3_1654 -> m3_1658  [key=2, style=dotted];
m3_1654 -> m3_1659  [key=2, style=dotted];
m3_1657 -> m3_1653  [key=0, style=bold, color=blue];
m3_338 -> m3_339  [key=0, style=solid];
m3_343 -> m3_11  [key=2, style=dotted];
m3_343 -> m3_344  [key=0, style=solid];
m3_341 -> m3_11  [key=2, style=dotted];
m3_341 -> m3_342  [key=0, style=solid];
m3_339 -> m3_343  [key=1, style=dashed, color=darkseagreen4, label=guid];
m3_339 -> m3_340  [key=0, style=solid];
m3_339 -> m3_345  [key=2, style=dotted];
m3_342 -> m3_343  [key=0, style=solid];
m3_342 -> m3_98  [key=2, style=dotted];
m3_340 -> m3_341  [key=0, style=solid];
m3_340 -> m3_342  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_340 -> m3_346  [key=2, style=dotted];
m3_340 -> m3_84  [key=2, style=dotted];
m3_344 -> m3_338  [key=0, style=bold, color=blue];
m3_1749 -> m3_1750  [key=0, style=solid];
m3_1750 -> m3_1751  [key=0, style=solid];
m3_1751 -> m3_1749  [key=0, style=bold, color=blue];
m3_263 -> m3_264  [key=0, style=solid];
m3_265 -> m3_11  [key=2, style=dotted];
m3_265 -> m3_266  [key=0, style=solid];
m3_264 -> m3_265  [key=0, style=solid];
m3_264 -> m3_267  [key=2, style=dotted];
m3_264 -> m3_84  [key=2, style=dotted];
m3_266 -> m3_263  [key=0, style=bold, color=blue];
m3_1605 -> m3_1606  [key=0, style=solid];
m3_1606 -> m3_1608  [key=2, style=dotted];
m3_1606 -> m3_1607  [key=0, style=solid];
m3_1607 -> m3_1605  [key=0, style=bold, color=blue];
m3_1677 -> m3_1678  [key=0, style=solid];
m3_1679 -> m3_11  [key=2, style=dotted];
m3_1679 -> m3_1680  [key=0, style=solid];
m3_1679 -> m3_1676  [key=2, style=dotted];
m3_1679 -> m3_29  [key=2, style=dotted];
m3_1679 -> m3_219  [key=2, style=dotted];
m3_1678 -> m3_1679  [key=0, style=solid];
m3_1678 -> m3_98  [key=2, style=dotted];
m3_1680 -> m3_1677  [key=0, style=bold, color=blue];
m3_319 -> m3_320  [key=0, style=solid];
m3_321 -> m3_11  [key=2, style=dotted];
m3_321 -> m3_322  [key=0, style=solid];
m3_323 -> m3_11  [key=2, style=dotted];
m3_323 -> m3_324  [key=0, style=solid];
m3_324 -> m3_11  [key=2, style=dotted];
m3_324 -> m3_325  [key=0, style=solid];
m3_325 -> m3_11  [key=2, style=dotted];
m3_325 -> m3_326  [key=0, style=solid];
m3_320 -> m3_321  [key=0, style=solid];
m3_320 -> m3_327  [key=2, style=dotted];
m3_320 -> m3_84  [key=2, style=dotted];
m3_320 -> m3_322  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_322 -> m3_323  [key=0, style=solid];
m3_322 -> m3_324  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_322 -> m3_325  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_322 -> m3_98  [key=2, style=dotted];
m3_326 -> m3_319  [key=0, style=bold, color=blue];
m3_1641 -> m3_1642  [key=0, style=solid];
m3_1648 -> m3_11  [key=2, style=dotted];
m3_1648 -> m3_1649  [key=0, style=solid];
m3_1649 -> m3_11  [key=2, style=dotted];
m3_1649 -> m3_1650  [key=0, style=solid];
m3_1650 -> m3_11  [key=2, style=dotted];
m3_1650 -> m3_1651  [key=0, style=solid];
m3_1647 -> m3_1648  [key=0, style=solid];
m3_1647 -> m3_1649  [key=1, style=dashed, color=darkseagreen4, label=z];
m3_1647 -> m3_1650  [key=1, style=dashed, color=darkseagreen4, label=z];
m3_1647 -> m3_262  [key=2, style=dotted];
m3_1642 -> m3_1647  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m3_1642 -> m3_1643  [key=0, style=solid];
m3_1642 -> m3_255  [key=2, style=dotted];
m3_1642 -> m3_1644  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m3_1646 -> m3_1647  [key=0, style=solid];
m3_1646 -> m3_260  [key=2, style=dotted];
m3_1646 -> m3_261  [key=2, style=dotted];
m3_1643 -> m3_1644  [key=0, style=solid];
m3_1643 -> m3_618  [key=2, style=dotted];
m3_1643 -> m3_1652  [key=2, style=dotted];
m3_1644 -> m3_1645  [key=0, style=solid];
m3_1645 -> m3_1646  [key=0, style=solid];
m3_1651 -> m3_1641  [key=0, style=bold, color=blue];
m3_747 -> m3_748  [key=0, style=solid];
m3_752 -> m3_11  [key=2, style=dotted];
m3_752 -> m3_753  [key=0, style=solid];
m3_753 -> m3_11  [key=2, style=dotted];
m3_753 -> m3_754  [key=0, style=solid];
m3_754 -> m3_11  [key=2, style=dotted];
m3_754 -> m3_755  [key=0, style=solid];
m3_750 -> m3_752  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_750 -> m3_753  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_750 -> m3_754  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_750 -> m3_98  [key=2, style=dotted];
m3_750 -> m3_493  [key=2, style=dotted];
m3_750 -> m3_751  [key=0, style=solid];
m3_751 -> m3_752  [key=0, style=solid];
m3_751 -> m3_633  [key=2, style=dotted];
m3_749 -> m3_750  [key=0, style=solid];
m3_749 -> m3_756  [key=2, style=dotted];
m3_748 -> m3_749  [key=0, style=solid];
m3_755 -> m3_747  [key=0, style=bold, color=blue];
m3_619 -> m3_620  [key=0, style=solid];
m3_628 -> m3_11  [key=2, style=dotted];
m3_628 -> m3_629  [key=0, style=solid];
m3_628 -> m3_634  [key=2, style=dotted];
m3_629 -> m3_11  [key=2, style=dotted];
m3_629 -> m3_630  [key=0, style=solid];
m3_629 -> m3_634  [key=2, style=dotted];
m3_630 -> m3_11  [key=2, style=dotted];
m3_630 -> m3_631  [key=0, style=solid];
m3_630 -> m3_634  [key=2, style=dotted];
m3_625 -> m3_11  [key=2, style=dotted];
m3_625 -> m3_626  [key=0, style=solid];
m3_620 -> m3_628  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_620 -> m3_629  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_620 -> m3_630  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_620 -> m3_621  [key=0, style=solid];
m3_620 -> m3_632  [key=2, style=dotted];
m3_620 -> m3_622  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_620 -> m3_623  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_620 -> m3_624  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_626 -> m3_628  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m3_626 -> m3_629  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m3_626 -> m3_630  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m3_626 -> m3_98  [key=2, style=dotted];
m3_626 -> m3_627  [key=0, style=solid];
m3_627 -> m3_628  [key=0, style=solid];
m3_627 -> m3_633  [key=2, style=dotted];
m3_624 -> m3_625  [key=0, style=solid];
m3_624 -> m3_626  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_624 -> m3_95  [key=2, style=dotted];
m3_621 -> m3_56  [key=2, style=dotted];
m3_621 -> m3_622  [key=0, style=solid];
m3_622 -> m3_623  [key=0, style=solid];
m3_622 -> n39  [key=2, style=dotted];
m3_623 -> m3_624  [key=0, style=solid];
m3_623 -> n39  [key=2, style=dotted];
m3_631 -> m3_619  [key=0, style=bold, color=blue];
m3_671 -> m3_672  [key=0, style=solid];
m3_674 -> m3_11  [key=2, style=dotted];
m3_674 -> m3_675  [key=0, style=solid];
m3_676 -> m3_11  [key=2, style=dotted];
m3_676 -> m3_677  [key=0, style=solid];
m3_676 -> m3_345  [key=2, style=dotted];
m3_677 -> m3_11  [key=2, style=dotted];
m3_677 -> m3_678  [key=0, style=solid];
m3_677 -> m3_345  [key=2, style=dotted];
m3_678 -> m3_11  [key=2, style=dotted];
m3_678 -> m3_679  [key=0, style=solid];
m3_679 -> m3_11  [key=2, style=dotted];
m3_679 -> m3_680  [key=0, style=solid];
m3_680 -> m3_11  [key=2, style=dotted];
m3_680 -> m3_681  [key=0, style=solid];
m3_673 -> m3_674  [key=0, style=solid];
m3_673 -> m3_98  [key=2, style=dotted];
m3_675 -> m3_676  [key=0, style=solid];
m3_675 -> m3_677  [key=1, style=dashed, color=darkseagreen4, label=n];
m3_675 -> m3_678  [key=1, style=dashed, color=darkseagreen4, label=n];
m3_675 -> m3_679  [key=1, style=dashed, color=darkseagreen4, label=n];
m3_675 -> m3_680  [key=1, style=dashed, color=darkseagreen4, label=n];
m3_675 -> m3_98  [key=2, style=dotted];
m3_672 -> m3_673  [key=0, style=solid];
m3_672 -> m3_675  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_681 -> m3_671  [key=0, style=bold, color=blue];
m3_1771 -> m3_1772  [key=0, style=solid];
m3_1780 -> m3_11  [key=2, style=dotted];
m3_1780 -> m3_1781  [key=0, style=solid];
m3_1781 -> m3_11  [key=2, style=dotted];
m3_1781 -> m3_1782  [key=0, style=solid];
m3_1784 -> m3_11  [key=2, style=dotted];
m3_1784 -> m3_1785  [key=0, style=solid];
m3_1785 -> m3_11  [key=2, style=dotted];
m3_1785 -> m3_1786  [key=0, style=solid];
m3_1779 -> m3_1780  [key=0, style=solid];
m3_1779 -> m3_1781  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_1779 -> m3_1789  [key=2, style=dotted];
m3_1782 -> m3_1783  [key=0, style=solid];
m3_1782 -> m3_84  [key=2, style=dotted];
m3_1783 -> m3_1784  [key=0, style=solid];
m3_1783 -> m3_1785  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_1783 -> m3_1789  [key=2, style=dotted];
m3_1778 -> m3_1779  [key=0, style=solid];
m3_1778 -> m3_84  [key=2, style=dotted];
m3_1775 -> m3_1782  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m3_1775 -> m3_1776  [key=0, style=solid];
m3_1775 -> m3_1787  [key=2, style=dotted];
m3_1775 -> m3_1777  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m3_1772 -> m3_1778  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m3_1772 -> m3_1773  [key=0, style=solid];
m3_1772 -> m3_1787  [key=2, style=dotted];
m3_1772 -> m3_1774  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m3_1777 -> m3_1778  [key=0, style=solid];
m3_1774 -> m3_1775  [key=0, style=solid];
m3_1774 -> m3_1788  [key=2, style=dotted];
m3_1776 -> m3_1777  [key=0, style=solid];
m3_1776 -> m3_1788  [key=2, style=dotted];
m3_1773 -> m3_1774  [key=0, style=solid];
m3_1773 -> m3_1788  [key=2, style=dotted];
m3_1786 -> m3_1771  [key=0, style=bold, color=blue];
m3_508 -> m3_509  [key=0, style=solid];
m3_511 -> m3_11  [key=2, style=dotted];
m3_511 -> m3_512  [key=0, style=solid];
m3_510 -> m3_511  [key=0, style=solid];
m3_510 -> m3_98  [key=2, style=dotted];
m3_509 -> m3_510  [key=0, style=solid];
m3_512 -> m3_508  [key=0, style=bold, color=blue];
m3_1414 -> m3_1415  [key=0, style=solid];
m3_1419 -> m3_11  [key=2, style=dotted];
m3_1419 -> m3_1420  [key=0, style=solid];
m3_1421 -> m3_11  [key=2, style=dotted];
m3_1421 -> m3_1422  [key=0, style=solid];
m3_1422 -> m3_11  [key=2, style=dotted];
m3_1422 -> m3_1423  [key=0, style=solid];
m3_1423 -> m3_11  [key=2, style=dotted];
m3_1423 -> m3_1424  [key=0, style=solid];
m3_1424 -> m3_11  [key=2, style=dotted];
m3_1424 -> m3_1425  [key=0, style=solid];
m3_1425 -> m3_11  [key=2, style=dotted];
m3_1425 -> m3_1426  [key=0, style=solid];
m3_1418 -> m3_1419  [key=0, style=solid];
m3_1418 -> m3_84  [key=2, style=dotted];
m3_1418 -> m3_1420  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1420 -> m3_1421  [key=0, style=solid];
m3_1420 -> m3_1422  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_1420 -> m3_1423  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_1420 -> m3_1424  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_1420 -> m3_1425  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_1420 -> m3_98  [key=2, style=dotted];
m3_1415 -> m3_1418  [key=1, style=dashed, color=darkseagreen4, label=list];
m3_1415 -> n39  [key=2, style=dotted];
m3_1415 -> m3_1416  [key=0, style=solid];
m3_1415 -> m3_1417  [key=1, style=dashed, color=darkseagreen4, label=list];
m3_1417 -> m3_1418  [key=0, style=solid];
m3_1417 -> m3_1427  [key=2, style=dotted];
m3_1417 -> m3_159  [key=2, style=dotted];
m3_1416 -> m3_1417  [key=0, style=solid];
m3_1416 -> m3_159  [key=2, style=dotted];
m3_1416 -> m3_1427  [key=2, style=dotted];
m3_1426 -> m3_1414  [key=0, style=bold, color=blue];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_127  [key=2, style=dotted];
m3_1351 -> m3_1352  [key=0, style=solid];
m3_1354 -> m3_11  [key=2, style=dotted];
m3_1354 -> m3_1355  [key=0, style=solid];
m3_1353 -> m3_1354  [key=0, style=solid];
m3_1353 -> m3_1359  [key=2, style=dotted];
m3_1353 -> m3_1360  [key=2, style=dotted];
m3_1353 -> m3_419  [key=2, style=dotted];
m3_1352 -> m3_1353  [key=0, style=solid];
m3_1352 -> m3_1356  [key=2, style=dotted];
m3_1352 -> m3_1357  [key=2, style=dotted];
m3_1352 -> m3_1358  [key=2, style=dotted];
m3_1355 -> m3_1351  [key=0, style=bold, color=blue];
m3_160 -> m3_161  [key=0, style=solid];
m3_164 -> m3_11  [key=2, style=dotted];
m3_164 -> m3_165  [key=0, style=solid];
m3_161 -> m3_164  [key=1, style=dashed, color=darkseagreen4, label=r1];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_166  [key=2, style=dotted];
m3_163 -> m3_164  [key=0, style=solid];
m3_163 -> m3_98  [key=2, style=dotted];
m3_162 -> m3_163  [key=0, style=solid];
m3_162 -> m3_84  [key=2, style=dotted];
m3_165 -> m3_160  [key=0, style=bold, color=blue];
m3_1115 -> m3_1118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_1115 -> m3_1116  [key=0, style=solid];
m3_1119 -> m3_1119  [key=1, style=dashed, color=darkseagreen4, label=entry];
m3_1119 -> m3_1118  [key=0, style=solid];
m3_1118 -> m3_1119  [key=0, style=solid];
m3_1118 -> m3_1120  [key=0, style=solid];
m3_1116 -> m3_1118  [key=0, style=solid];
m3_1116 -> m3_1117  [key=0, style=solid];
m3_1117 -> m3_1120  [key=0, style=solid];
m3_1120 -> m3_1115  [key=0, style=bold, color=blue];
m3_1681 -> m3_1682  [key=0, style=solid];
m3_1683 -> m3_11  [key=2, style=dotted];
m3_1683 -> m3_1684  [key=0, style=solid];
m3_1682 -> m3_1683  [key=0, style=solid];
m3_1682 -> m3_1685  [key=2, style=dotted];
m3_1682 -> m3_95  [key=2, style=dotted];
m3_1684 -> m3_1681  [key=0, style=bold, color=blue];
m3_282 -> m3_283  [key=0, style=solid];
m3_285 -> m3_11  [key=2, style=dotted];
m3_285 -> m3_286  [key=0, style=solid];
m3_286 -> m3_11  [key=2, style=dotted];
m3_286 -> m3_287  [key=0, style=solid];
m3_287 -> m3_11  [key=2, style=dotted];
m3_287 -> m3_288  [key=0, style=solid];
m3_288 -> m3_11  [key=2, style=dotted];
m3_288 -> m3_289  [key=0, style=solid];
m3_289 -> m3_11  [key=2, style=dotted];
m3_289 -> m3_290  [key=0, style=solid];
m3_290 -> m3_11  [key=2, style=dotted];
m3_290 -> m3_291  [key=0, style=solid];
m3_284 -> m3_285  [key=0, style=solid];
m3_284 -> m3_286  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_284 -> m3_287  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_284 -> m3_288  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_284 -> m3_289  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_284 -> m3_290  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_284 -> m3_98  [key=2, style=dotted];
m3_283 -> m3_284  [key=0, style=solid];
m3_291 -> m3_282  [key=0, style=bold, color=blue];
m3_178 -> m3_179  [key=0, style=solid];
m3_187 -> m3_11  [key=2, style=dotted];
m3_187 -> m3_188  [key=0, style=solid];
m3_186 -> m3_11  [key=2, style=dotted];
m3_186 -> m3_187  [key=0, style=solid];
m3_185 -> m3_11  [key=2, style=dotted];
m3_185 -> m3_186  [key=0, style=solid];
m3_181 -> m3_187  [key=1, style=dashed, color=darkseagreen4, label=javaScriptSerializerResult];
m3_181 -> m3_182  [key=0, style=solid];
m3_181 -> m3_190  [key=2, style=dotted];
m3_184 -> m3_187  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m3_184 -> m3_186  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_98  [key=2, style=dotted];
m3_183 -> m3_186  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m3_183 -> m3_184  [key=0, style=solid];
m3_183 -> m3_175  [key=2, style=dotted];
m3_183 -> m3_176  [key=2, style=dotted];
m3_183 -> m3_177  [key=2, style=dotted];
m3_179 -> m3_181  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_179 -> m3_184  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_179 -> m3_183  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_179 -> m3_180  [key=0, style=solid];
m3_180 -> m3_181  [key=0, style=solid];
m3_180 -> m3_189  [key=2, style=dotted];
m3_182 -> m3_183  [key=0, style=solid];
m3_182 -> m3_58  [key=2, style=dotted];
m3_188 -> m3_178  [key=0, style=bold, color=blue];
m3_714 -> m3_715  [key=0, style=solid];
m3_717 -> m3_11  [key=2, style=dotted];
m3_717 -> m3_718  [key=0, style=solid];
m3_718 -> m3_11  [key=2, style=dotted];
m3_718 -> m3_719  [key=0, style=solid];
m3_719 -> m3_11  [key=2, style=dotted];
m3_719 -> m3_720  [key=0, style=solid];
m3_716 -> m3_717  [key=0, style=solid];
m3_716 -> m3_718  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_716 -> m3_719  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_716 -> m3_664  [key=2, style=dotted];
m3_716 -> m3_721  [key=2, style=dotted];
m3_715 -> m3_716  [key=0, style=solid];
m3_720 -> m3_714  [key=0, style=bold, color=blue];
m3_854 -> m3_855  [key=0, style=solid];
m3_858 -> m3_11  [key=2, style=dotted];
m3_858 -> m3_859  [key=0, style=solid];
m3_859 -> m3_11  [key=2, style=dotted];
m3_859 -> m3_860  [key=0, style=solid];
m3_860 -> m3_11  [key=2, style=dotted];
m3_860 -> m3_861  [key=0, style=solid];
m3_857 -> m3_858  [key=0, style=solid];
m3_857 -> m3_859  [key=1, style=dashed, color=darkseagreen4, label=a];
m3_857 -> m3_860  [key=1, style=dashed, color=darkseagreen4, label=a];
m3_857 -> m3_862  [key=2, style=dotted];
m3_856 -> m3_98  [key=2, style=dotted];
m3_856 -> m3_857  [key=0, style=solid];
m3_855 -> m3_856  [key=0, style=solid];
m3_861 -> m3_854  [key=0, style=bold, color=blue];
m3_1055 -> m3_1056  [key=0, style=solid];
m3_1058 -> m3_11  [key=2, style=dotted];
m3_1058 -> m3_1059  [key=0, style=solid];
m3_1057 -> m3_1058  [key=0, style=solid];
m3_1057 -> m3_98  [key=2, style=dotted];
m3_1056 -> m3_1057  [key=0, style=solid];
m3_1059 -> m3_1055  [key=0, style=bold, color=blue];
m3_887 -> m3_888  [key=0, style=solid];
m3_889 -> n39  [key=2, style=dotted];
m3_889 -> m3_890  [key=0, style=solid];
m3_889 -> m3_886  [key=2, style=dotted];
m3_888 -> m3_889  [key=0, style=solid];
m3_890 -> m3_887  [key=0, style=bold, color=blue];
m3_1060 -> m3_1061  [key=0, style=solid];
m3_1072 -> m3_493  [key=2, style=dotted];
m3_1072 -> m3_12  [key=2, style=dotted];
m3_1072 -> m3_1073  [key=0, style=solid];
m3_1072 -> m3_756  [key=2, style=dotted];
m3_1064 -> m3_345  [key=2, style=dotted];
m3_1064 -> m3_1065  [key=0, style=solid];
m3_1074 -> m3_12  [key=2, style=dotted];
m3_1074 -> m3_664  [key=2, style=dotted];
m3_1074 -> m3_665  [key=2, style=dotted];
m3_1074 -> m3_1075  [key=0, style=solid];
m3_1071 -> m3_1072  [key=0, style=solid];
m3_1071 -> m3_61  [key=2, style=dotted];
m3_1073 -> m3_1074  [key=0, style=solid];
m3_1073 -> m3_62  [key=2, style=dotted];
m3_1062 -> m3_1064  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1062 -> m3_1074  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1062 -> m3_1063  [key=0, style=solid];
m3_1062 -> m3_1077  [key=2, style=dotted];
m3_1062 -> m3_1065  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1062 -> m3_1066  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1062 -> m3_1069  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1063 -> m3_1064  [key=0, style=solid];
m3_1063 -> m3_1078  [key=2, style=dotted];
m3_1065 -> m3_1066  [key=0, style=solid];
m3_1065 -> m3_1079  [key=2, style=dotted];
m3_1068 -> m3_58  [key=2, style=dotted];
m3_1068 -> m3_1069  [key=0, style=solid];
m3_1070 -> m3_1071  [key=0, style=solid];
m3_1070 -> m3_60  [key=2, style=dotted];
m3_1061 -> m3_1062  [key=0, style=solid];
m3_1061 -> m3_1076  [key=2, style=dotted];
m3_1061 -> m3_1066  [key=1, style=dashed, color=darkseagreen4, label=ex];
m3_1066 -> m3_1067  [key=0, style=solid];
m3_1069 -> m3_59  [key=2, style=dotted];
m3_1069 -> m3_1070  [key=0, style=solid];
m3_1067 -> m3_1068  [key=0, style=solid];
m3_1067 -> m3_1070  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_1067 -> m3_1069  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_1067 -> m3_80  [key=2, style=dotted];
m3_1075 -> m3_1060  [key=0, style=bold, color=blue];
m3_128 -> m3_129  [key=0, style=solid];
m3_131 -> m3_132  [key=0, style=solid];
m3_132 -> m3_128  [key=0, style=bold, color=blue];
m3_132 -> m3_138  [key=1, style=dashed, color=darkseagreen4, label=test];
m3_132 -> m3_139  [key=1, style=dashed, color=darkseagreen4, label=test];
m3_132 -> m3_133  [key=0, style=solid];
m3_132 -> m3_141  [key=2, style=dotted];
m3_132 -> m3_134  [key=1, style=dashed, color=darkseagreen4, label=test];
m3_132 -> m3_135  [key=1, style=dashed, color=darkseagreen4, label=test];
m3_952 -> m3_953  [key=0, style=solid];
m3_957 -> m3_11  [key=2, style=dotted];
m3_957 -> m3_958  [key=0, style=solid];
m3_956 -> m3_957  [key=0, style=solid];
m3_956 -> m3_95  [key=2, style=dotted];
m3_954 -> m3_345  [key=2, style=dotted];
m3_954 -> m3_955  [key=0, style=solid];
m3_954 -> m3_229  [key=2, style=dotted];
m3_955 -> m3_345  [key=2, style=dotted];
m3_955 -> m3_956  [key=0, style=solid];
m3_955 -> m3_229  [key=2, style=dotted];
m3_953 -> m3_956  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m3_953 -> m3_56  [key=2, style=dotted];
m3_953 -> m3_954  [key=0, style=solid];
m3_953 -> m3_955  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m3_958 -> m3_952  [key=0, style=bold, color=blue];
m3_1222 -> m3_1223  [key=0, style=solid];
m3_1237 -> m3_11  [key=2, style=dotted];
m3_1237 -> m3_1238  [key=0, style=solid];
m3_1233 -> m3_11  [key=2, style=dotted];
m3_1233 -> m3_1234  [key=0, style=solid];
m3_1235 -> m3_11  [key=2, style=dotted];
m3_1235 -> m3_1236  [key=0, style=solid];
m3_1236 -> m3_11  [key=2, style=dotted];
m3_1236 -> m3_1237  [key=0, style=solid];
m3_1238 -> m3_11  [key=2, style=dotted];
m3_1238 -> m3_1239  [key=0, style=solid];
m3_1239 -> m3_11  [key=2, style=dotted];
m3_1239 -> m3_1240  [key=0, style=solid];
m3_1240 -> m3_11  [key=2, style=dotted];
m3_1240 -> m3_1241  [key=0, style=solid];
m3_1228 -> m3_1237  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m3_1228 -> m3_1229  [key=0, style=solid];
m3_1228 -> m3_218  [key=2, style=dotted];
m3_1228 -> m3_219  [key=2, style=dotted];
m3_1228 -> m3_1231  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m3_1234 -> m3_1237  [key=1, style=dashed, color=darkseagreen4, label=o2];
m3_1234 -> m3_1235  [key=0, style=solid];
m3_1234 -> m3_1236  [key=1, style=dashed, color=darkseagreen4, label=o2];
m3_1234 -> m3_1238  [key=1, style=dashed, color=darkseagreen4, label=o2];
m3_1234 -> m3_1239  [key=1, style=dashed, color=darkseagreen4, label=o2];
m3_1234 -> m3_1240  [key=1, style=dashed, color=darkseagreen4, label=o2];
m3_1234 -> m3_98  [key=2, style=dotted];
m3_1230 -> m3_1233  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m3_1230 -> m3_1231  [key=0, style=solid];
m3_1232 -> m3_1233  [key=0, style=solid];
m3_1232 -> m3_1234  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1232 -> m3_95  [key=2, style=dotted];
m3_1224 -> m3_208  [key=2, style=dotted];
m3_1224 -> m3_1225  [key=0, style=solid];
m3_1227 -> m3_1228  [key=0, style=solid];
m3_1229 -> m3_1230  [key=0, style=solid];
m3_1231 -> m3_1232  [key=0, style=solid];
m3_1231 -> m3_1146  [key=2, style=dotted];
m3_1223 -> m3_1224  [key=0, style=solid];
m3_1223 -> m3_1227  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_1223 -> m3_1231  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_1223 -> m3_594  [key=2, style=dotted];
m3_1223 -> m3_1225  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_1223 -> m3_1226  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_1225 -> m3_1226  [key=0, style=solid];
m3_1226 -> m3_1227  [key=0, style=solid];
m3_1241 -> m3_1222  [key=0, style=bold, color=blue];
m3_1713 -> m3_1714  [key=0, style=solid];
m3_1715 -> m3_11  [key=2, style=dotted];
m3_1715 -> m3_1716  [key=0, style=solid];
m3_1714 -> m3_1715  [key=0, style=solid];
m3_1714 -> m3_98  [key=2, style=dotted];
m3_1716 -> m3_1713  [key=0, style=bold, color=blue];
m3_1627 -> m3_1628  [key=0, style=solid];
m3_1629 -> m3_11  [key=2, style=dotted];
m3_1629 -> m3_1630  [key=0, style=solid];
m3_1631 -> m3_11  [key=2, style=dotted];
m3_1631 -> m3_1632  [key=0, style=solid];
m3_1628 -> m3_1629  [key=0, style=solid];
m3_1628 -> m3_1636  [key=2, style=dotted];
m3_1628 -> m3_95  [key=2, style=dotted];
m3_1628 -> m3_1630  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_1630 -> m3_1631  [key=0, style=solid];
m3_1630 -> m3_98  [key=2, style=dotted];
m3_1630 -> m3_1632  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1630 -> m3_1633  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1630 -> m3_1634  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1632 -> m3_1633  [key=0, style=solid];
m3_1632 -> m3_1637  [key=2, style=dotted];
m3_1632 -> m3_1581  [key=2, style=dotted];
m3_1633 -> m3_1581  [key=2, style=dotted];
m3_1633 -> m3_1634  [key=0, style=solid];
m3_1633 -> m3_1637  [key=2, style=dotted];
m3_1634 -> m3_1581  [key=2, style=dotted];
m3_1634 -> m3_1635  [key=0, style=solid];
m3_1634 -> m3_1637  [key=2, style=dotted];
m3_1635 -> m3_1627  [key=0, style=bold, color=blue];
m3_757 -> m3_758  [key=0, style=solid];
m3_760 -> m3_11  [key=2, style=dotted];
m3_760 -> m3_761  [key=0, style=solid];
m3_760 -> m3_765  [key=2, style=dotted];
m3_762 -> m3_11  [key=2, style=dotted];
m3_762 -> m3_763  [key=0, style=solid];
m3_758 -> m3_760  [key=1, style=dashed, color=darkseagreen4, label=uri];
m3_758 -> m3_762  [key=1, style=dashed, color=darkseagreen4, label=uri];
m3_758 -> m3_759  [key=0, style=solid];
m3_758 -> m3_764  [key=2, style=dotted];
m3_759 -> m3_760  [key=0, style=solid];
m3_759 -> m3_84  [key=2, style=dotted];
m3_759 -> m3_761  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_761 -> m3_762  [key=0, style=solid];
m3_761 -> m3_98  [key=2, style=dotted];
m3_763 -> m3_757  [key=0, style=bold, color=blue];
m3_1491 -> m3_1492  [key=0, style=solid];
m3_1500 -> m3_98  [key=2, style=dotted];
m3_1500 -> m3_1501  [key=0, style=solid];
m3_1499 -> m3_1500  [key=0, style=solid];
m3_1499 -> m3_84  [key=2, style=dotted];
m3_1492 -> m3_56  [key=2, style=dotted];
m3_1492 -> m3_1493  [key=0, style=solid];
m3_1492 -> m3_1494  [key=1, style=dashed, color=darkseagreen4, label=reference];
m3_1492 -> m3_1498  [key=1, style=dashed, color=darkseagreen4, label=reference];
m3_1495 -> m3_56  [key=2, style=dotted];
m3_1495 -> m3_1499  [key=1, style=dashed, color=darkseagreen4, label=child];
m3_1495 -> m3_1496  [key=0, style=solid];
m3_1495 -> m3_1497  [key=1, style=dashed, color=darkseagreen4, label=child];
m3_1495 -> m3_1498  [key=1, style=dashed, color=darkseagreen4, label=child];
m3_1493 -> m3_229  [key=2, style=dotted];
m3_1493 -> m3_1494  [key=0, style=solid];
m3_1494 -> m3_229  [key=2, style=dotted];
m3_1494 -> m3_1495  [key=0, style=solid];
m3_1498 -> m3_229  [key=2, style=dotted];
m3_1498 -> m3_1499  [key=0, style=solid];
m3_1496 -> m3_229  [key=2, style=dotted];
m3_1496 -> m3_1497  [key=0, style=solid];
m3_1497 -> m3_229  [key=2, style=dotted];
m3_1497 -> m3_1498  [key=0, style=solid];
m3_1501 -> m3_1491  [key=0, style=bold, color=blue];
m3_827 -> m3_828  [key=0, style=solid];
m3_834 -> m3_11  [key=2, style=dotted];
m3_834 -> m3_835  [key=0, style=solid];
m3_833 -> m3_834  [key=0, style=solid];
m3_833 -> m3_95  [key=2, style=dotted];
m3_828 -> m3_28  [key=2, style=dotted];
m3_828 -> m3_208  [key=2, style=dotted];
m3_828 -> m3_829  [key=0, style=solid];
m3_828 -> m3_831  [key=1, style=dashed, color=darkseagreen4, label=p1];
m3_829 -> m3_28  [key=2, style=dotted];
m3_829 -> m3_208  [key=2, style=dotted];
m3_829 -> m3_830  [key=0, style=solid];
m3_829 -> m3_832  [key=1, style=dashed, color=darkseagreen4, label=p2];
m3_830 -> m3_833  [key=1, style=dashed, color=darkseagreen4, label=products];
m3_830 -> m3_831  [key=0, style=solid];
m3_830 -> n39  [key=2, style=dotted];
m3_830 -> m3_832  [key=1, style=dashed, color=darkseagreen4, label=products];
m3_832 -> m3_833  [key=0, style=solid];
m3_832 -> m3_159  [key=2, style=dotted];
m3_831 -> m3_832  [key=0, style=solid];
m3_831 -> m3_159  [key=2, style=dotted];
m3_835 -> m3_827  [key=0, style=bold, color=blue];
m3_1035 -> m3_1036  [key=0, style=solid];
m3_1037 -> m3_11  [key=2, style=dotted];
m3_1037 -> m3_1038  [key=0, style=solid];
m3_1037 -> m3_493  [key=2, style=dotted];
m3_1039 -> m3_11  [key=2, style=dotted];
m3_1039 -> m3_1040  [key=0, style=solid];
m3_1039 -> m3_493  [key=2, style=dotted];
m3_1036 -> m3_1037  [key=0, style=solid];
m3_1036 -> m3_98  [key=2, style=dotted];
m3_1038 -> m3_1039  [key=0, style=solid];
m3_1038 -> m3_98  [key=2, style=dotted];
m3_1040 -> m3_1035  [key=0, style=bold, color=blue];
m3_654 -> m3_655  [key=0, style=solid];
m3_659 -> m3_11  [key=2, style=dotted];
m3_659 -> m3_660  [key=0, style=solid];
m3_661 -> m3_11  [key=2, style=dotted];
m3_661 -> m3_662  [key=0, style=solid];
m3_658 -> m3_659  [key=0, style=solid];
m3_658 -> m3_95  [key=2, style=dotted];
m3_660 -> m3_661  [key=0, style=solid];
m3_660 -> m3_664  [key=2, style=dotted];
m3_660 -> m3_665  [key=2, style=dotted];
m3_655 -> m3_658  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_655 -> m3_660  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_655 -> m3_656  [key=0, style=solid];
m3_655 -> m3_663  [key=2, style=dotted];
m3_655 -> m3_657  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_657 -> m3_658  [key=0, style=solid];
m3_656 -> m3_657  [key=0, style=solid];
m3_662 -> m3_654  [key=0, style=bold, color=blue];
m3_1462 -> m3_1463  [key=0, style=solid];
m3_1466 -> m3_11  [key=2, style=dotted];
m3_1466 -> m3_1467  [key=0, style=solid];
m3_1467 -> m3_11  [key=2, style=dotted];
m3_1467 -> m3_1468  [key=0, style=solid];
m3_1468 -> m3_11  [key=2, style=dotted];
m3_1468 -> m3_1469  [key=0, style=solid];
m3_1463 -> m3_1466  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_1463 -> m3_1467  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_1463 -> m3_1468  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_1463 -> m3_1464  [key=0, style=solid];
m3_1463 -> m3_1470  [key=2, style=dotted];
m3_1463 -> m3_1465  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_1465 -> m3_1466  [key=0, style=solid];
m3_1465 -> m3_664  [key=2, style=dotted];
m3_1465 -> n39  [key=2, style=dotted];
m3_1465 -> m3_1471  [key=2, style=dotted];
m3_1465 -> m3_1472  [key=2, style=dotted];
m3_1464 -> m3_1465  [key=0, style=solid];
m3_1464 -> n39  [key=2, style=dotted];
m3_1469 -> m3_1462  [key=0, style=bold, color=blue];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_5  [key=2, style=dotted];
m3_57 -> m3_14  [key=2, style=dotted];
m3_1023 -> m3_1024  [key=0, style=solid];
m3_1029 -> m3_11  [key=2, style=dotted];
m3_1029 -> m3_1030  [key=0, style=solid];
m3_1031 -> m3_11  [key=2, style=dotted];
m3_1031 -> m3_1032  [key=0, style=solid];
m3_1028 -> m3_1029  [key=0, style=solid];
m3_1028 -> m3_1020  [key=2, style=dotted];
m3_1028 -> m3_1030  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1030 -> m3_1031  [key=0, style=solid];
m3_1030 -> m3_98  [key=2, style=dotted];
m3_1024 -> m3_1028  [key=1, style=dashed, color=darkseagreen4, label=g];
m3_1024 -> m3_1025  [key=0, style=solid];
m3_1024 -> m3_1033  [key=2, style=dotted];
m3_1024 -> m3_1026  [key=1, style=dashed, color=darkseagreen4, label=g];
m3_1024 -> m3_1027  [key=1, style=dashed, color=darkseagreen4, label=g];
m3_1027 -> m3_1028  [key=0, style=solid];
m3_1025 -> m3_1026  [key=0, style=solid];
m3_1025 -> m3_1034  [key=2, style=dotted];
m3_1025 -> m3_1014  [key=2, style=dotted];
m3_1026 -> m3_1027  [key=0, style=solid];
m3_1026 -> m3_1034  [key=2, style=dotted];
m3_1026 -> m3_1014  [key=2, style=dotted];
m3_1032 -> m3_1023  [key=0, style=bold, color=blue];
m3_466 -> m3_467  [key=0, style=solid];
m3_468 -> m3_11  [key=2, style=dotted];
m3_468 -> m3_469  [key=0, style=solid];
m3_467 -> m3_468  [key=0, style=solid];
m3_467 -> m3_470  [key=2, style=dotted];
m3_467 -> m3_84  [key=2, style=dotted];
m3_469 -> m3_466  [key=0, style=bold, color=blue];
m3_138 -> m3_11  [key=2, style=dotted];
m3_138 -> m3_139  [key=0, style=solid];
m3_139 -> m3_11  [key=2, style=dotted];
m3_139 -> m3_140  [key=0, style=solid];
m3_136 -> m3_11  [key=2, style=dotted];
m3_136 -> m3_137  [key=0, style=solid];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_139  [key=1, style=dashed, color=darkseagreen4, label=test2];
m3_137 -> m3_98  [key=2, style=dotted];
m3_135 -> m3_136  [key=0, style=solid];
m3_135 -> m3_137  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_135 -> m3_84  [key=2, style=dotted];
m3_135 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate"];
m3_135 -> m3_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate"];
m3_135 -> m3_131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate"];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser"];
m3_133 -> m3_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser"];
m3_133 -> m3_52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser"];
m3_133 -> m3_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser"];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder"];
m3_134 -> m3_123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder"];
m3_134 -> m3_124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder"];
m3_134 -> m3_125  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder"];
m3_140 -> m3_131  [key=0, style=bold, color=blue];
m3_803 -> m3_804  [key=0, style=solid];
m3_806 -> m3_11  [key=2, style=dotted];
m3_806 -> m3_807  [key=0, style=solid];
m3_807 -> m3_11  [key=2, style=dotted];
m3_807 -> m3_808  [key=0, style=solid];
m3_808 -> m3_11  [key=2, style=dotted];
m3_808 -> m3_809  [key=0, style=solid];
m3_809 -> m3_11  [key=2, style=dotted];
m3_809 -> m3_810  [key=0, style=solid];
m3_811 -> m3_11  [key=2, style=dotted];
m3_811 -> m3_812  [key=0, style=solid];
m3_813 -> m3_11  [key=2, style=dotted];
m3_813 -> m3_814  [key=0, style=solid];
m3_814 -> m3_11  [key=2, style=dotted];
m3_814 -> m3_815  [key=0, style=solid];
m3_805 -> m3_806  [key=0, style=solid];
m3_805 -> m3_807  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_805 -> m3_808  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_805 -> m3_809  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_805 -> m3_811  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_805 -> m3_813  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_805 -> m3_814  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_805 -> m3_98  [key=2, style=dotted];
m3_805 -> m3_810  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_805 -> m3_812  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_810 -> m3_811  [key=0, style=solid];
m3_810 -> m3_816  [key=2, style=dotted];
m3_812 -> m3_813  [key=0, style=solid];
m3_812 -> m3_816  [key=2, style=dotted];
m3_804 -> m3_805  [key=0, style=solid];
m3_815 -> m3_803  [key=0, style=bold, color=blue];
m3_1797 -> m3_1090  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_1797 -> m3_1086  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_1797 -> m3_1093  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_1797 -> m3_1096  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_1797 -> m3_1100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_1797 -> m3_1104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_1797 -> m3_1108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_1797 -> m3_1112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_1797 -> m3_1119  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_1797 -> m3_1122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_1797 -> m3_1126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_1797 -> m3_1130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_1797 -> m3_1134  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_1793 -> m3_704  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m3_1793 -> m3_698  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m3_1793 -> m3_699  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m3_1793 -> m3_700  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m3_1793 -> m3_701  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m3_1794 -> m3_998  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m3_1794 -> m3_999  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m3_1798 -> m3_1151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1150  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1154  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1165  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1166  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1196  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1198  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1199  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1798 -> m3_1206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_1802 -> m3_1403  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListTestClass"];
m3_1795 -> m3_1021  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m3_1795 -> m3_1015  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m3_1795 -> m3_1018  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m3_1801 -> m3_1310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_1801 -> m3_1311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_1801 -> m3_1312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_1801 -> m3_1313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_1801 -> m3_1314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_1801 -> m3_1315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_1801 -> m3_1316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_1801 -> m3_1317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_1801 -> m3_1318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_1801 -> m3_1319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_1796 -> m3_1047  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor"];
m3_1792 -> m3_596  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m3_1800 -> m3_1299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_1800 -> m3_1300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_1800 -> m3_1301  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_1800 -> m3_1302  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_1800 -> m3_1303  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_1800 -> m3_1304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_1800 -> m3_1305  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_1800 -> m3_1306  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_1809 -> m3_1750  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived"];
m3_1812 -> m3_1769  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m4_1864 -> m4_1865  [key=0, style=solid];
m4_1865 -> m4_1866  [key=0, style=solid];
m4_1865 -> m4_1867  [key=2, style=dotted];
m4_1866 -> m4_1864  [key=0, style=bold, color=blue];
m4_406 -> m4_407  [key=0, style=solid];
m4_406 -> m4_408  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_406 -> m4_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m4_406 -> m4_410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m4_406 -> m4_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m4_407 -> m4_408  [key=0, style=solid];
m4_408 -> m4_409  [key=0, style=solid];
m4_409 -> m4_410  [key=0, style=solid];
m4_410 -> m4_411  [key=0, style=solid];
m4_411 -> m4_412  [key=0, style=solid];
m4_412 -> m4_406  [key=0, style=bold, color=blue];
m4_480 -> m4_481  [key=0, style=solid];
m4_486 -> m4_34  [key=2, style=dotted];
m4_486 -> m4_487  [key=0, style=solid];
m4_487 -> m4_34  [key=2, style=dotted];
m4_487 -> m4_488  [key=0, style=solid];
m4_482 -> m4_486  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_482 -> m4_487  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_482 -> m4_483  [key=0, style=solid];
m4_482 -> m4_490  [key=2, style=dotted];
m4_482 -> m4_484  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_485 -> m4_486  [key=0, style=solid];
m4_485 -> m4_493  [key=2, style=dotted];
m4_485 -> m4_488  [key=1, style=dashed, color=darkseagreen4, label=output];
m4_488 -> m4_489  [key=0, style=solid];
m4_488 -> m4_67  [key=2, style=dotted];
m4_481 -> m4_482  [key=0, style=solid];
m4_483 -> m4_485  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_483 -> m4_484  [key=0, style=solid];
m4_483 -> m4_491  [key=2, style=dotted];
m4_484 -> m4_485  [key=0, style=solid];
m4_484 -> m4_492  [key=2, style=dotted];
m4_489 -> m4_480  [key=0, style=bold, color=blue];
m4_1375 -> m4_1376  [key=0, style=solid];
m4_1375 -> m4_1377  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1375 -> m4_1378  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1375 -> m4_1379  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_1376 -> m4_1377  [key=0, style=solid];
m4_1377 -> m4_1378  [key=0, style=solid];
m4_1378 -> m4_1379  [key=0, style=solid];
m4_1379 -> m4_1380  [key=0, style=solid];
m4_1380 -> m4_1375  [key=0, style=bold, color=blue];
m4_521 -> m4_522  [key=0, style=solid];
m4_523 -> m4_47  [key=2, style=dotted];
m4_523 -> m4_524  [key=0, style=solid];
m4_523 -> m4_525  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_525 -> m4_34  [key=2, style=dotted];
m4_525 -> m4_526  [key=0, style=solid];
m4_522 -> m4_523  [key=0, style=solid];
m4_522 -> m4_527  [key=2, style=dotted];
m4_522 -> m4_513  [key=2, style=dotted];
m4_524 -> m4_525  [key=0, style=solid];
m4_526 -> m4_521  [key=0, style=bold, color=blue];
m4_1462 -> m4_1463  [key=0, style=solid];
m4_1464 -> m4_12  [key=2, style=dotted];
m4_1464 -> m4_1465  [key=0, style=solid];
m4_1464 -> m4_1466  [key=1, style=dashed, color=darkseagreen4, label=r];
m4_1464 -> m4_1467  [key=1, style=dashed, color=darkseagreen4, label=r];
m4_1465 -> m4_34  [key=2, style=dotted];
m4_1465 -> m4_1466  [key=0, style=solid];
m4_1466 -> m4_34  [key=2, style=dotted];
m4_1466 -> m4_1467  [key=0, style=solid];
m4_1467 -> m4_34  [key=2, style=dotted];
m4_1467 -> m4_1468  [key=0, style=solid];
m4_1463 -> m4_1464  [key=0, style=solid];
m4_1468 -> m4_1462  [key=0, style=bold, color=blue];
m4_964 -> m4_965  [key=0, style=solid];
m4_966 -> m4_47  [key=2, style=dotted];
m4_966 -> m4_967  [key=0, style=solid];
m4_967 -> m4_34  [key=2, style=dotted];
m4_967 -> m4_968  [key=0, style=solid];
m4_965 -> m4_966  [key=0, style=solid];
m4_965 -> m4_831  [key=2, style=dotted];
m4_968 -> m4_964  [key=0, style=bold, color=blue];
m4_2161 -> m4_2162  [key=0, style=solid];
m4_2162 -> m4_2164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2162 -> m4_8  [key=2, style=dotted];
m4_2162 -> m4_2163  [key=0, style=solid];
m4_2163 -> m4_2161  [key=0, style=bold, color=blue];
m4_1769 -> m4_1770  [key=0, style=solid];
m4_1771 -> m4_557  [key=2, style=dotted];
m4_1771 -> m4_1771  [key=1, style=dashed, color=darkseagreen4, label=pair];
m4_1771 -> m4_1770  [key=0, style=solid];
m4_1770 -> m4_1771  [key=0, style=solid];
m4_1770 -> m4_1772  [key=0, style=solid];
m4_1772 -> m4_1769  [key=0, style=bold, color=blue];
m4_441 -> m4_442  [key=0, style=solid];
m4_451 -> m4_12  [key=2, style=dotted];
m4_451 -> m4_452  [key=0, style=solid];
m4_451 -> m4_453  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m4_451 -> m4_454  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m4_451 -> m4_455  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m4_451 -> m4_456  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m4_451 -> m4_457  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m4_451 -> m4_458  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m4_451 -> m4_459  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m4_451 -> m4_460  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m4_452 -> m4_34  [key=2, style=dotted];
m4_452 -> m4_453  [key=0, style=solid];
m4_453 -> m4_34  [key=2, style=dotted];
m4_453 -> m4_454  [key=0, style=solid];
m4_454 -> m4_34  [key=2, style=dotted];
m4_454 -> m4_455  [key=0, style=solid];
m4_455 -> m4_34  [key=2, style=dotted];
m4_455 -> m4_456  [key=0, style=solid];
m4_456 -> m4_34  [key=2, style=dotted];
m4_456 -> m4_457  [key=0, style=solid];
m4_457 -> m4_34  [key=2, style=dotted];
m4_457 -> m4_458  [key=0, style=solid];
m4_458 -> m4_34  [key=2, style=dotted];
m4_458 -> m4_459  [key=0, style=solid];
m4_459 -> m4_34  [key=2, style=dotted];
m4_459 -> m4_460  [key=0, style=solid];
m4_460 -> m4_34  [key=2, style=dotted];
m4_460 -> m4_461  [key=0, style=solid];
m4_449 -> m4_451  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_449 -> m4_450  [key=0, style=solid];
m4_449 -> m4_463  [key=2, style=dotted];
m4_450 -> m4_451  [key=0, style=solid];
m4_450 -> m4_67  [key=2, style=dotted];
m4_446 -> m4_452  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_446 -> m4_453  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_446 -> m4_454  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_446 -> m4_455  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_446 -> m4_456  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_446 -> m4_449  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_446 -> m4_447  [key=0, style=solid];
m4_446 -> m4_406  [key=2, style=dotted];
m4_448 -> m4_449  [key=0, style=solid];
m4_448 -> m4_95  [key=2, style=dotted];
m4_442 -> m4_446  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_442 -> m4_443  [key=0, style=solid];
m4_442 -> m4_462  [key=2, style=dotted];
m4_442 -> m4_444  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_442 -> m4_445  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_443 -> m4_446  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_443 -> m4_444  [key=0, style=solid];
m4_443 -> m4_462  [key=2, style=dotted];
m4_443 -> m4_445  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_445 -> m4_446  [key=0, style=solid];
m4_447 -> m4_448  [key=0, style=solid];
m4_444 -> m4_445  [key=0, style=solid];
m4_461 -> m4_441  [key=0, style=bold, color=blue];
m4_1056 -> m4_1057  [key=0, style=solid];
m4_1061 -> m4_12  [key=2, style=dotted];
m4_1061 -> m4_1062  [key=0, style=solid];
m4_1061 -> m4_1063  [key=1, style=dashed, color=darkseagreen4, label=m2];
m4_1062 -> m4_34  [key=2, style=dotted];
m4_1062 -> m4_1063  [key=0, style=solid];
m4_1063 -> m4_34  [key=2, style=dotted];
m4_1063 -> m4_1064  [key=0, style=solid];
m4_1060 -> m4_34  [key=2, style=dotted];
m4_1060 -> m4_1061  [key=0, style=solid];
m4_1059 -> m4_1061  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1059 -> m4_1060  [key=0, style=solid];
m4_1059 -> m4_95  [key=2, style=dotted];
m4_1059 -> m4_463  [key=2, style=dotted];
m4_1057 -> m4_1062  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m4_1057 -> m4_1063  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m4_1057 -> m4_1058  [key=0, style=solid];
m4_1057 -> m4_1036  [key=2, style=dotted];
m4_1058 -> m4_1059  [key=0, style=solid];
m4_1058 -> m4_1037  [key=2, style=dotted];
m4_1064 -> m4_1056  [key=0, style=bold, color=blue];
m4_1504 -> m4_1505  [key=0, style=solid];
m4_1505 -> m4_12  [key=2, style=dotted];
m4_1505 -> m4_1506  [key=0, style=solid];
m4_1505 -> m4_1507  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_1505 -> m4_1508  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_1505 -> m4_1509  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_1506 -> m4_34  [key=2, style=dotted];
m4_1506 -> m4_1507  [key=0, style=solid];
m4_1507 -> m4_34  [key=2, style=dotted];
m4_1507 -> m4_1508  [key=0, style=solid];
m4_1508 -> m4_34  [key=2, style=dotted];
m4_1508 -> m4_1509  [key=0, style=solid];
m4_1509 -> m4_34  [key=2, style=dotted];
m4_1509 -> m4_1510  [key=0, style=solid];
m4_1510 -> m4_1504  [key=0, style=bold, color=blue];
m4_2791 -> m4_2792  [key=0, style=solid];
m4_2794 -> m4_12  [key=2, style=dotted];
m4_2794 -> m4_2795  [key=0, style=solid];
m4_2794 -> m4_2796  [key=1, style=dashed, color=darkseagreen4, label=d2];
m4_2793 -> m4_47  [key=2, style=dotted];
m4_2793 -> m4_2794  [key=0, style=solid];
m4_2795 -> m4_34  [key=2, style=dotted];
m4_2795 -> m4_2796  [key=0, style=solid];
m4_2796 -> m4_34  [key=2, style=dotted];
m4_2796 -> m4_2797  [key=0, style=solid];
m4_2792 -> m4_2793  [key=0, style=solid];
m4_2792 -> m4_2795  [key=1, style=dashed, color=darkseagreen4, label=d1];
m4_2792 -> m4_2796  [key=1, style=dashed, color=darkseagreen4, label=d1];
m4_2792 -> m4_120  [key=2, style=dotted];
m4_2797 -> m4_2791  [key=0, style=bold, color=blue];
m4_1442 -> m4_1443  [key=0, style=solid];
m4_1444 -> m4_47  [key=2, style=dotted];
m4_1444 -> m4_1445  [key=0, style=solid];
m4_1445 -> m4_34  [key=2, style=dotted];
m4_1445 -> m4_1446  [key=0, style=solid];
m4_1443 -> m4_1444  [key=0, style=solid];
m4_1443 -> m4_648  [key=2, style=dotted];
m4_1443 -> m4_1447  [key=2, style=dotted];
m4_1446 -> m4_1442  [key=0, style=bold, color=blue];
m4_2312 -> m4_2313  [key=0, style=solid];
m4_2313 -> m4_12  [key=2, style=dotted];
m4_2313 -> m4_2314  [key=0, style=solid];
m4_2314 -> m4_34  [key=2, style=dotted];
m4_2314 -> m4_2315  [key=0, style=solid];
m4_2314 -> m4_2296  [key=2, style=dotted];
m4_2314 -> m4_683  [key=2, style=dotted];
m4_2314 -> m4_839  [key=2, style=dotted];
m4_2315 -> m4_2312  [key=0, style=bold, color=blue];
m4_1213 -> m4_1214  [key=0, style=solid];
m4_1215 -> m4_12  [key=2, style=dotted];
m4_1215 -> m4_1216  [key=0, style=solid];
m4_1215 -> m4_1217  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_1215 -> m4_1218  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_1215 -> m4_1219  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_1215 -> m4_1220  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_1215 -> m4_1221  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_1215 -> m4_1222  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_1222 -> m4_47  [key=2, style=dotted];
m4_1222 -> m4_1223  [key=0, style=solid];
m4_1223 -> m4_34  [key=2, style=dotted];
m4_1223 -> m4_1224  [key=0, style=solid];
m4_1216 -> m4_34  [key=2, style=dotted];
m4_1216 -> m4_1217  [key=0, style=solid];
m4_1217 -> m4_34  [key=2, style=dotted];
m4_1217 -> m4_1218  [key=0, style=solid];
m4_1218 -> m4_34  [key=2, style=dotted];
m4_1218 -> m4_1219  [key=0, style=solid];
m4_1219 -> m4_34  [key=2, style=dotted];
m4_1219 -> m4_1220  [key=0, style=solid];
m4_1220 -> m4_34  [key=2, style=dotted];
m4_1220 -> m4_1221  [key=0, style=solid];
m4_1221 -> m4_34  [key=2, style=dotted];
m4_1221 -> m4_1222  [key=0, style=solid];
m4_1214 -> m4_1215  [key=0, style=solid];
m4_1214 -> m4_1223  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1224 -> m4_1213  [key=0, style=bold, color=blue];
m4_1484 -> m4_1485  [key=0, style=solid];
m4_1485 -> m4_1489  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1485 -> m4_1486  [key=0, style=solid];
m4_1486 -> m4_1488  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1486 -> m4_1487  [key=0, style=solid];
m4_1486 -> m4_8  [key=2, style=dotted];
m4_1487 -> m4_1484  [key=0, style=bold, color=blue];
m4_2481 -> m4_2482  [key=0, style=solid];
m4_2483 -> m4_12  [key=2, style=dotted];
m4_2483 -> m4_2484  [key=0, style=solid];
m4_2483 -> m4_2485  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_2483 -> m4_2486  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_2484 -> m4_34  [key=2, style=dotted];
m4_2484 -> m4_2485  [key=0, style=solid];
m4_2485 -> m4_34  [key=2, style=dotted];
m4_2485 -> m4_2486  [key=0, style=solid];
m4_2486 -> m4_34  [key=2, style=dotted];
m4_2486 -> m4_2487  [key=0, style=solid];
m4_2482 -> m4_2483  [key=0, style=solid];
m4_2487 -> m4_2481  [key=0, style=bold, color=blue];
m4_2175 -> m4_2176  [key=0, style=solid];
m4_2186 -> m4_12  [key=2, style=dotted];
m4_2186 -> m4_2187  [key=0, style=solid];
m4_2186 -> m4_2188  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_2186 -> m4_2189  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_2184 -> m4_47  [key=2, style=dotted];
m4_2184 -> m4_2186  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2184 -> m4_2185  [key=0, style=solid];
m4_2187 -> m4_34  [key=2, style=dotted];
m4_2187 -> m4_2188  [key=0, style=solid];
m4_2188 -> m4_34  [key=2, style=dotted];
m4_2188 -> m4_2189  [key=0, style=solid];
m4_2189 -> m4_34  [key=2, style=dotted];
m4_2189 -> m4_2190  [key=0, style=solid];
m4_2185 -> m4_2186  [key=0, style=solid];
m4_2185 -> m4_66  [key=2, style=dotted];
m4_2183 -> m4_2184  [key=0, style=solid];
m4_2183 -> m4_557  [key=2, style=dotted];
m4_2180 -> m4_2184  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_2180 -> m4_2183  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_2180 -> m4_2181  [key=0, style=solid];
m4_2180 -> m4_554  [key=2, style=dotted];
m4_2180 -> m4_2182  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_2176 -> m4_2183  [key=1, style=dashed, color=darkseagreen4, label=reference];
m4_2176 -> m4_554  [key=2, style=dotted];
m4_2176 -> m4_2177  [key=0, style=solid];
m4_2176 -> m4_2178  [key=1, style=dashed, color=darkseagreen4, label=reference];
m4_2176 -> m4_2179  [key=1, style=dashed, color=darkseagreen4, label=reference];
m4_2182 -> m4_2183  [key=0, style=solid];
m4_2182 -> m4_557  [key=2, style=dotted];
m4_2179 -> m4_2180  [key=0, style=solid];
m4_2179 -> m4_557  [key=2, style=dotted];
m4_2181 -> m4_557  [key=2, style=dotted];
m4_2181 -> m4_2182  [key=0, style=solid];
m4_2177 -> m4_557  [key=2, style=dotted];
m4_2177 -> m4_2178  [key=0, style=solid];
m4_2178 -> m4_557  [key=2, style=dotted];
m4_2178 -> m4_2179  [key=0, style=solid];
m4_2190 -> m4_2175  [key=0, style=bold, color=blue];
m4_885 -> m4_886  [key=0, style=solid];
m4_886 -> m4_47  [key=2, style=dotted];
m4_886 -> m4_887  [key=0, style=solid];
m4_887 -> m4_34  [key=2, style=dotted];
m4_887 -> m4_888  [key=0, style=solid];
m4_888 -> m4_885  [key=0, style=bold, color=blue];
m4_3629 -> m4_3630  [key=0, style=solid];
m4_3631 -> m4_65  [key=2, style=dotted];
m4_3631 -> m4_3632  [key=0, style=solid];
m4_3632 -> m4_67  [key=2, style=dotted];
m4_3632 -> m4_3633  [key=0, style=solid];
m4_3630 -> m4_3631  [key=0, style=solid];
m4_3630 -> m4_3634  [key=2, style=dotted];
m4_3630 -> m4_3635  [key=2, style=dotted];
m4_3633 -> m4_3629  [key=0, style=bold, color=blue];
m4_3014 -> m4_3015  [key=0, style=solid];
m4_3020 -> m4_47  [key=2, style=dotted];
m4_3020 -> m4_3021  [key=0, style=solid];
m4_3015 -> m4_3020  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_3015 -> m4_3016  [key=0, style=solid];
m4_3015 -> m4_682  [key=2, style=dotted];
m4_3015 -> m4_3017  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_3015 -> m4_3018  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_3015 -> m4_3019  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_3015 -> m4_3021  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_3019 -> m4_3020  [key=0, style=solid];
m4_3021 -> m4_3022  [key=0, style=solid];
m4_3021 -> m4_95  [key=2, style=dotted];
m4_3021 -> m4_3027  [key=2, style=dotted];
m4_3021 -> m4_3028  [key=2, style=dotted];
m4_3021 -> m4_463  [key=2, style=dotted];
m4_3017 -> m4_683  [key=2, style=dotted];
m4_3017 -> m4_3018  [key=0, style=solid];
m4_3016 -> m4_3017  [key=0, style=solid];
m4_3018 -> m4_3019  [key=0, style=solid];
m4_3022 -> m4_67  [key=2, style=dotted];
m4_3022 -> m4_3023  [key=0, style=solid];
m4_3025 -> m4_67  [key=2, style=dotted];
m4_3025 -> m4_3026  [key=0, style=solid];
m4_3024 -> m4_463  [key=2, style=dotted];
m4_3024 -> m4_95  [key=2, style=dotted];
m4_3024 -> m4_3027  [key=2, style=dotted];
m4_3024 -> m4_3028  [key=2, style=dotted];
m4_3024 -> m4_3025  [key=0, style=solid];
m4_3024 -> m4_3029  [key=2, style=dotted];
m4_3023 -> m4_3024  [key=0, style=solid];
m4_3026 -> m4_3014  [key=0, style=bold, color=blue];
m4_1204 -> m4_1205  [key=0, style=solid];
m4_1209 -> m4_47  [key=2, style=dotted];
m4_1209 -> m4_1210  [key=0, style=solid];
m4_1210 -> m4_34  [key=2, style=dotted];
m4_1210 -> m4_1211  [key=0, style=solid];
m4_1205 -> m4_1209  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_1205 -> m4_1206  [key=0, style=solid];
m4_1205 -> m4_1212  [key=2, style=dotted];
m4_1205 -> m4_1207  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_1205 -> m4_1208  [key=1, style=dashed, color=darkseagreen4, label=aa];
m4_1208 -> m4_1209  [key=0, style=solid];
m4_1206 -> m4_1207  [key=0, style=solid];
m4_1207 -> m4_1208  [key=0, style=solid];
m4_1211 -> m4_1204  [key=0, style=bold, color=blue];
m4_3636 -> m4_3637  [key=0, style=solid];
m4_3637 -> m4_3639  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3637 -> m4_8  [key=2, style=dotted];
m4_3637 -> m4_3638  [key=0, style=solid];
m4_3638 -> m4_3636  [key=0, style=bold, color=blue];
m4_9 -> m4_10  [key=0, style=solid];
m4_2215 -> m4_2216  [key=0, style=solid];
m4_2221 -> m4_12  [key=2, style=dotted];
m4_2221 -> m4_2222  [key=0, style=solid];
m4_2222 -> m4_34  [key=2, style=dotted];
m4_2222 -> m4_2223  [key=0, style=solid];
m4_2219 -> m4_2221  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2219 -> m4_2220  [key=0, style=solid];
m4_2219 -> m4_65  [key=2, style=dotted];
m4_2220 -> m4_2221  [key=0, style=solid];
m4_2220 -> m4_67  [key=2, style=dotted];
m4_2216 -> m4_2219  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m4_2216 -> m4_554  [key=2, style=dotted];
m4_2216 -> m4_2217  [key=0, style=solid];
m4_2216 -> m4_2218  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m4_2218 -> m4_2219  [key=0, style=solid];
m4_2218 -> m4_2214  [key=2, style=dotted];
m4_2218 -> m4_557  [key=2, style=dotted];
m4_2217 -> m4_2218  [key=0, style=solid];
m4_2217 -> m4_557  [key=2, style=dotted];
m4_2217 -> m4_2214  [key=2, style=dotted];
m4_2223 -> m4_2215  [key=0, style=bold, color=blue];
m4_1754 -> m4_1755  [key=0, style=solid];
m4_1756 -> m4_12  [key=2, style=dotted];
m4_1756 -> m4_1757  [key=0, style=solid];
m4_1756 -> m4_1758  [key=1, style=dashed, color=darkseagreen4, label=dic];
m4_1756 -> m4_1759  [key=1, style=dashed, color=darkseagreen4, label=dic];
m4_1756 -> m4_1760  [key=1, style=dashed, color=darkseagreen4, label=dic];
m4_1757 -> m4_34  [key=2, style=dotted];
m4_1757 -> m4_1758  [key=0, style=solid];
m4_1758 -> m4_34  [key=2, style=dotted];
m4_1758 -> m4_1759  [key=0, style=solid];
m4_1759 -> m4_34  [key=2, style=dotted];
m4_1759 -> m4_1760  [key=0, style=solid];
m4_1760 -> m4_34  [key=2, style=dotted];
m4_1760 -> m4_1761  [key=0, style=solid];
m4_1755 -> m4_1756  [key=0, style=solid];
m4_1761 -> m4_1754  [key=0, style=bold, color=blue];
m4_2722 -> m4_2723  [key=0, style=solid];
m4_2726 -> m4_12  [key=2, style=dotted];
m4_2726 -> m4_2727  [key=0, style=solid];
m4_2725 -> m4_47  [key=2, style=dotted];
m4_2725 -> m4_2726  [key=0, style=solid];
m4_2727 -> m4_34  [key=2, style=dotted];
m4_2727 -> m4_2728  [key=0, style=solid];
m4_2724 -> m4_2725  [key=0, style=solid];
m4_2724 -> m4_2727  [key=1, style=dashed, color=darkseagreen4, label=uri];
m4_2724 -> m4_1440  [key=2, style=dotted];
m4_2723 -> m4_2724  [key=0, style=solid];
m4_2728 -> m4_2722  [key=0, style=bold, color=blue];
m4_2634 -> m4_2635  [key=0, style=solid];
m4_2635 -> m4_2636  [key=0, style=solid];
m4_2636 -> m4_2634  [key=0, style=bold, color=blue];
m4_1872 -> m4_1873  [key=0, style=solid];
m4_1873 -> m4_1874  [key=0, style=solid];
m4_1873 -> m4_1875  [key=2, style=dotted];
m4_1874 -> m4_1872  [key=0, style=bold, color=blue];
m4_2805 -> m4_2806  [key=0, style=solid];
m4_2808 -> m4_12  [key=2, style=dotted];
m4_2808 -> m4_2809  [key=0, style=solid];
m4_2808 -> m4_2810  [key=1, style=dashed, color=darkseagreen4, label=d2];
m4_2807 -> m4_47  [key=2, style=dotted];
m4_2807 -> m4_2808  [key=0, style=solid];
m4_2809 -> m4_34  [key=2, style=dotted];
m4_2809 -> m4_2810  [key=0, style=solid];
m4_2810 -> m4_34  [key=2, style=dotted];
m4_2810 -> m4_2811  [key=0, style=solid];
m4_2806 -> m4_2807  [key=0, style=solid];
m4_2806 -> m4_2809  [key=1, style=dashed, color=darkseagreen4, label=d1];
m4_2806 -> m4_2810  [key=1, style=dashed, color=darkseagreen4, label=d1];
m4_2806 -> m4_120  [key=2, style=dotted];
m4_2811 -> m4_2805  [key=0, style=bold, color=blue];
m4_3739 -> m4_3740  [key=0, style=solid];
m4_3743 -> m4_12  [key=2, style=dotted];
m4_3743 -> m4_3744  [key=0, style=solid];
m4_3741 -> m4_3743  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3741 -> m4_3742  [key=0, style=solid];
m4_3741 -> m4_65  [key=2, style=dotted];
m4_3742 -> m4_3743  [key=0, style=solid];
m4_3742 -> m4_67  [key=2, style=dotted];
m4_3740 -> m4_3741  [key=0, style=solid];
m4_3740 -> m4_3745  [key=2, style=dotted];
m4_3744 -> m4_3739  [key=0, style=bold, color=blue];
m4_3390 -> m4_3391  [key=0, style=solid];
m4_3394 -> m4_12  [key=2, style=dotted];
m4_3394 -> m4_3395  [key=0, style=solid];
m4_3394 -> m4_3396  [key=1, style=dashed, color=darkseagreen4, label=tuple2];
m4_3392 -> m4_47  [key=2, style=dotted];
m4_3392 -> m4_3394  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3392 -> m4_3393  [key=0, style=solid];
m4_3393 -> m4_34  [key=2, style=dotted];
m4_3393 -> m4_3394  [key=0, style=solid];
m4_3395 -> m4_34  [key=2, style=dotted];
m4_3395 -> m4_3396  [key=0, style=solid];
m4_3396 -> m4_34  [key=2, style=dotted];
m4_3396 -> m4_3397  [key=0, style=solid];
m4_3391 -> m4_3392  [key=0, style=solid];
m4_3391 -> m4_3398  [key=2, style=dotted];
m4_3397 -> m4_3390  [key=0, style=bold, color=blue];
m4_1727 -> m4_1728  [key=0, style=solid];
m4_1728 -> m4_557  [key=2, style=dotted];
m4_1728 -> m4_1729  [key=0, style=solid];
m4_1729 -> m4_1727  [key=0, style=bold, color=blue];
m4_2450 -> m4_2451  [key=0, style=solid];
m4_2451 -> m4_12  [key=2, style=dotted];
m4_2451 -> m4_2452  [key=0, style=solid];
m4_2452 -> m4_34  [key=2, style=dotted];
m4_2452 -> m4_2453  [key=0, style=solid];
m4_2453 -> m4_2450  [key=0, style=bold, color=blue];
m4_3349 -> m4_3350  [key=0, style=solid];
m4_3350 -> m4_3351  [key=0, style=solid];
m4_3351 -> m4_3349  [key=0, style=bold, color=blue];
m4_1798 -> m4_1800  [key=0, style=solid];
m4_1800 -> m4_1801  [key=0, style=solid];
m4_1801 -> m4_1798  [key=0, style=bold, color=blue];
m4_81 -> m4_82  [key=0, style=solid];
m4_82 -> m4_12  [key=2, style=dotted];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label=otc];
m4_82 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label=otc];
m4_82 -> m4_86  [key=1, style=dashed, color=darkseagreen4, label=otc];
m4_82 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=otc];
m4_84 -> m4_34  [key=2, style=dotted];
m4_84 -> m4_85  [key=0, style=solid];
m4_85 -> m4_34  [key=2, style=dotted];
m4_85 -> m4_86  [key=0, style=solid];
m4_86 -> m4_34  [key=2, style=dotted];
m4_86 -> m4_87  [key=0, style=solid];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_89  [key=2, style=dotted];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_89  [key=2, style=dotted];
m4_88 -> m4_81  [key=0, style=bold, color=blue];
m4_2524 -> m4_2525  [key=0, style=solid];
m4_2526 -> m4_12  [key=2, style=dotted];
m4_2526 -> m4_2527  [key=0, style=solid];
m4_2525 -> m4_47  [key=2, style=dotted];
m4_2525 -> m4_2526  [key=0, style=solid];
m4_2525 -> m4_2528  [key=2, style=dotted];
m4_2527 -> m4_2524  [key=0, style=bold, color=blue];
m4_2285 -> m4_2286  [key=0, style=solid];
m4_2286 -> m4_47  [key=2, style=dotted];
m4_2286 -> m4_2287  [key=0, style=solid];
m4_2286 -> m4_2295  [key=2, style=dotted];
m4_2286 -> m4_2296  [key=2, style=dotted];
m4_2286 -> m4_683  [key=2, style=dotted];
m4_2286 -> m4_839  [key=2, style=dotted];
m4_2286 -> m4_2288  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m4_2287 -> m4_34  [key=2, style=dotted];
m4_2287 -> m4_2288  [key=0, style=solid];
m4_2292 -> m4_34  [key=2, style=dotted];
m4_2292 -> m4_2293  [key=0, style=solid];
m4_2292 -> m4_839  [key=2, style=dotted];
m4_2293 -> m4_34  [key=2, style=dotted];
m4_2293 -> m4_2294  [key=0, style=solid];
m4_2293 -> m4_683  [key=2, style=dotted];
m4_2288 -> m4_2289  [key=0, style=solid];
m4_2288 -> m4_117  [key=2, style=dotted];
m4_2288 -> m4_118  [key=2, style=dotted];
m4_2288 -> m4_2291  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_2291 -> m4_2292  [key=0, style=solid];
m4_2291 -> m4_2293  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m4_2291 -> m4_2297  [key=2, style=dotted];
m4_2289 -> m4_2290  [key=0, style=solid];
m4_2290 -> m4_2291  [key=0, style=solid];
m4_2290 -> m4_119  [key=2, style=dotted];
m4_2294 -> m4_2285  [key=0, style=bold, color=blue];
m4_2352 -> m4_2353  [key=0, style=solid];
m4_2358 -> m4_34  [key=2, style=dotted];
m4_2358 -> m4_2359  [key=0, style=solid];
m4_2357 -> m4_2358  [key=0, style=solid];
m4_2357 -> m4_2297  [key=2, style=dotted];
m4_2354 -> m4_2357  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_2354 -> m4_117  [key=2, style=dotted];
m4_2354 -> m4_118  [key=2, style=dotted];
m4_2354 -> m4_2355  [key=0, style=solid];
m4_2356 -> m4_2357  [key=0, style=solid];
m4_2356 -> m4_119  [key=2, style=dotted];
m4_2353 -> m4_2354  [key=0, style=solid];
m4_2355 -> m4_2356  [key=0, style=solid];
m4_2359 -> m4_2352  [key=0, style=bold, color=blue];
m4_586 -> m4_587  [key=0, style=solid];
m4_592 -> m4_596  [key=2, style=dotted];
m4_592 -> m4_593  [key=0, style=solid];
m4_593 -> m4_67  [key=2, style=dotted];
m4_593 -> m4_594  [key=0, style=solid];
m4_587 -> m4_592  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_587 -> m4_588  [key=0, style=solid];
m4_587 -> m4_595  [key=2, style=dotted];
m4_587 -> m4_589  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_587 -> m4_590  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_587 -> m4_591  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_591 -> m4_592  [key=0, style=solid];
m4_588 -> m4_589  [key=0, style=solid];
m4_589 -> m4_590  [key=0, style=solid];
m4_590 -> m4_591  [key=0, style=solid];
m4_594 -> m4_586  [key=0, style=bold, color=blue];
m4_3424 -> m4_3425  [key=0, style=solid];
m4_3426 -> m4_12  [key=2, style=dotted];
m4_3426 -> m4_3427  [key=0, style=solid];
m4_3427 -> m4_34  [key=2, style=dotted];
m4_3427 -> m4_3428  [key=0, style=solid];
m4_3427 -> m4_2092  [key=2, style=dotted];
m4_3425 -> m4_3426  [key=0, style=solid];
m4_3425 -> m4_3431  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3425 -> m4_3428  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3428 -> m4_3430  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3428 -> m4_3429  [key=0, style=solid];
m4_3428 -> m4_8  [key=2, style=dotted];
m4_3429 -> m4_3424  [key=0, style=bold, color=blue];
m4_336 -> m4_337  [key=0, style=solid];
m4_340 -> m4_34  [key=2, style=dotted];
m4_340 -> m4_341  [key=0, style=solid];
m4_342 -> m4_34  [key=2, style=dotted];
m4_342 -> m4_343  [key=0, style=solid];
m4_344 -> m4_34  [key=2, style=dotted];
m4_344 -> m4_345  [key=0, style=solid];
m4_346 -> m4_34  [key=2, style=dotted];
m4_346 -> m4_347  [key=0, style=solid];
m4_346 -> m4_270  [key=2, style=dotted];
m4_349 -> m4_34  [key=2, style=dotted];
m4_349 -> m4_350  [key=0, style=solid];
m4_351 -> m4_34  [key=2, style=dotted];
m4_351 -> m4_352  [key=0, style=solid];
m4_353 -> m4_34  [key=2, style=dotted];
m4_353 -> m4_354  [key=0, style=solid];
m4_353 -> m4_274  [key=2, style=dotted];
m4_355 -> m4_34  [key=2, style=dotted];
m4_355 -> m4_356  [key=0, style=solid];
m4_357 -> m4_34  [key=2, style=dotted];
m4_357 -> m4_358  [key=0, style=solid];
m4_359 -> m4_34  [key=2, style=dotted];
m4_359 -> m4_360  [key=0, style=solid];
m4_361 -> m4_34  [key=2, style=dotted];
m4_361 -> m4_362  [key=0, style=solid];
m4_363 -> m4_34  [key=2, style=dotted];
m4_363 -> m4_364  [key=0, style=solid];
m4_365 -> m4_34  [key=2, style=dotted];
m4_365 -> m4_366  [key=0, style=solid];
m4_367 -> m4_34  [key=2, style=dotted];
m4_367 -> m4_368  [key=0, style=solid];
m4_369 -> m4_34  [key=2, style=dotted];
m4_369 -> m4_370  [key=0, style=solid];
m4_371 -> m4_34  [key=2, style=dotted];
m4_371 -> m4_372  [key=0, style=solid];
m4_373 -> m4_34  [key=2, style=dotted];
m4_373 -> m4_374  [key=0, style=solid];
m4_375 -> m4_34  [key=2, style=dotted];
m4_375 -> m4_376  [key=0, style=solid];
m4_377 -> m4_34  [key=2, style=dotted];
m4_377 -> m4_378  [key=0, style=solid];
m4_379 -> m4_34  [key=2, style=dotted];
m4_379 -> m4_380  [key=0, style=solid];
m4_381 -> m4_34  [key=2, style=dotted];
m4_381 -> m4_382  [key=0, style=solid];
m4_384 -> m4_34  [key=2, style=dotted];
m4_384 -> m4_385  [key=0, style=solid];
m4_386 -> m4_34  [key=2, style=dotted];
m4_386 -> m4_387  [key=0, style=solid];
m4_389 -> m4_34  [key=2, style=dotted];
m4_389 -> m4_390  [key=0, style=solid];
m4_391 -> m4_34  [key=2, style=dotted];
m4_391 -> m4_392  [key=0, style=solid];
m4_393 -> m4_34  [key=2, style=dotted];
m4_393 -> m4_394  [key=0, style=solid];
m4_337 -> m4_340  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_342  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_344  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_346  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_349  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_351  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_353  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_355  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_357  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_359  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_361  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_363  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_365  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_367  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_369  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_371  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_373  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_375  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_377  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_379  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_381  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_384  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_386  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_389  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_391  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_393  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_338  [key=0, style=solid];
m4_337 -> m4_395  [key=2, style=dotted];
m4_337 -> m4_396  [key=2, style=dotted];
m4_337 -> m4_119  [key=2, style=dotted];
m4_337 -> m4_339  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_341  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_343  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_345  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_348  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_350  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_352  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_354  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_356  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_358  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_360  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_362  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_364  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_366  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_368  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_370  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_372  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_374  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_376  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_378  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_380  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_383  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_385  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_388  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_390  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_337 -> m4_392  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m4_338 -> m4_340  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m4_338 -> m4_339  [key=0, style=solid];
m4_338 -> m4_269  [key=2, style=dotted];
m4_339 -> m4_340  [key=0, style=solid];
m4_341 -> m4_342  [key=0, style=solid];
m4_343 -> m4_344  [key=0, style=solid];
m4_345 -> m4_346  [key=0, style=solid];
m4_345 -> m4_270  [key=2, style=dotted];
m4_347 -> m4_349  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m4_347 -> m4_348  [key=0, style=solid];
m4_347 -> m4_271  [key=2, style=dotted];
m4_348 -> m4_349  [key=0, style=solid];
m4_350 -> m4_351  [key=0, style=solid];
m4_350 -> m4_35  [key=2, style=dotted];
m4_350 -> m4_272  [key=2, style=dotted];
m4_352 -> m4_353  [key=0, style=solid];
m4_352 -> m4_273  [key=2, style=dotted];
m4_354 -> m4_355  [key=0, style=solid];
m4_356 -> m4_357  [key=0, style=solid];
m4_358 -> m4_359  [key=0, style=solid];
m4_360 -> m4_361  [key=0, style=solid];
m4_362 -> m4_363  [key=0, style=solid];
m4_364 -> m4_365  [key=0, style=solid];
m4_366 -> m4_367  [key=0, style=solid];
m4_368 -> m4_369  [key=0, style=solid];
m4_370 -> m4_371  [key=0, style=solid];
m4_372 -> m4_373  [key=0, style=solid];
m4_374 -> m4_375  [key=0, style=solid];
m4_376 -> m4_377  [key=0, style=solid];
m4_378 -> m4_379  [key=0, style=solid];
m4_380 -> m4_381  [key=0, style=solid];
m4_382 -> m4_384  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m4_382 -> m4_383  [key=0, style=solid];
m4_382 -> m4_275  [key=2, style=dotted];
m4_383 -> m4_384  [key=0, style=solid];
m4_385 -> m4_386  [key=0, style=solid];
m4_387 -> m4_389  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m4_387 -> m4_388  [key=0, style=solid];
m4_387 -> m4_276  [key=2, style=dotted];
m4_388 -> m4_389  [key=0, style=solid];
m4_390 -> m4_391  [key=0, style=solid];
m4_392 -> m4_393  [key=0, style=solid];
m4_394 -> m4_336  [key=0, style=bold, color=blue];
m4_2830 -> m4_2831  [key=0, style=solid];
m4_2832 -> m4_65  [key=2, style=dotted];
m4_2832 -> m4_2833  [key=0, style=solid];
m4_2833 -> m4_67  [key=2, style=dotted];
m4_2833 -> m4_2834  [key=0, style=solid];
m4_2831 -> m4_2832  [key=0, style=solid];
m4_2831 -> m4_2835  [key=2, style=dotted];
m4_2831 -> m4_2836  [key=2, style=dotted];
m4_2834 -> m4_2830  [key=0, style=bold, color=blue];
m4_2498 -> m4_2499  [key=0, style=solid];
m4_2501 -> m4_34  [key=2, style=dotted];
m4_2501 -> m4_2502  [key=0, style=solid];
m4_2500 -> m4_2501  [key=0, style=solid];
m4_2500 -> m4_65  [key=2, style=dotted];
m4_2499 -> m4_2500  [key=0, style=solid];
m4_2499 -> m4_2503  [key=2, style=dotted];
m4_2502 -> m4_2498  [key=0, style=bold, color=blue];
m4_1825 -> m4_1828  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_1825 -> m4_1826  [key=0, style=solid];
m4_1829 -> m4_557  [key=2, style=dotted];
m4_1829 -> m4_1829  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_1829 -> m4_1828  [key=0, style=solid];
m4_1828 -> m4_1829  [key=0, style=solid];
m4_1828 -> m4_1830  [key=0, style=solid];
m4_1826 -> m4_1828  [key=0, style=solid];
m4_1826 -> m4_1827  [key=0, style=solid];
m4_1827 -> m4_1830  [key=0, style=solid];
m4_1827 -> m4_1831  [key=2, style=dotted];
m4_1830 -> m4_1825  [key=0, style=bold, color=blue];
m4_3437 -> m4_3438  [key=0, style=solid];
m4_3439 -> m4_47  [key=2, style=dotted];
m4_3439 -> m4_3440  [key=0, style=solid];
m4_3440 -> m4_34  [key=2, style=dotted];
m4_3440 -> m4_3441  [key=0, style=solid];
m4_3444 -> m4_34  [key=2, style=dotted];
m4_3444 -> m4_3445  [key=0, style=solid];
m4_3438 -> m4_3439  [key=0, style=solid];
m4_3438 -> m4_3433  [key=2, style=dotted];
m4_3438 -> m4_3443  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_3441 -> m4_3442  [key=0, style=solid];
m4_3441 -> n0  [key=2, style=dotted];
m4_3441 -> m4_3443  [key=1, style=dashed, color=darkseagreen4, label=r];
m4_3443 -> m4_3444  [key=0, style=solid];
m4_3443 -> m4_95  [key=2, style=dotted];
m4_3443 -> m4_463  [key=2, style=dotted];
m4_3442 -> m4_3443  [key=0, style=solid];
m4_3445 -> m4_3437  [key=0, style=bold, color=blue];
m4_1173 -> m4_1174  [key=0, style=solid];
m4_1175 -> m4_12  [key=2, style=dotted];
m4_1175 -> m4_1176  [key=0, style=solid];
m4_1175 -> m4_1177  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1175 -> m4_1178  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1176 -> m4_34  [key=2, style=dotted];
m4_1176 -> m4_1177  [key=0, style=solid];
m4_1177 -> m4_34  [key=2, style=dotted];
m4_1177 -> m4_1178  [key=0, style=solid];
m4_1178 -> m4_34  [key=2, style=dotted];
m4_1178 -> m4_1179  [key=0, style=solid];
m4_1174 -> m4_1175  [key=0, style=solid];
m4_1179 -> m4_1173  [key=0, style=bold, color=blue];
m4_3139 -> m4_3140  [key=0, style=solid];
m4_3143 -> m4_12  [key=2, style=dotted];
m4_3143 -> m4_3144  [key=0, style=solid];
m4_3143 -> m4_3145  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_3143 -> m4_3146  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_3144 -> m4_34  [key=2, style=dotted];
m4_3144 -> m4_3145  [key=0, style=solid];
m4_3145 -> m4_34  [key=2, style=dotted];
m4_3145 -> m4_3146  [key=0, style=solid];
m4_3145 -> m4_123  [key=2, style=dotted];
m4_3146 -> m4_34  [key=2, style=dotted];
m4_3146 -> m4_3147  [key=0, style=solid];
m4_3146 -> m4_123  [key=2, style=dotted];
m4_3141 -> m4_3143  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3141 -> m4_3142  [key=0, style=solid];
m4_3141 -> m4_65  [key=2, style=dotted];
m4_3142 -> m4_3143  [key=0, style=solid];
m4_3142 -> m4_67  [key=2, style=dotted];
m4_3140 -> m4_3141  [key=0, style=solid];
m4_3140 -> m4_554  [key=2, style=dotted];
m4_3140 -> m4_123  [key=2, style=dotted];
m4_3147 -> m4_3139  [key=0, style=bold, color=blue];
m4_3291 -> m4_3292  [key=0, style=solid];
m4_3293 -> m4_67  [key=2, style=dotted];
m4_3293 -> m4_3294  [key=0, style=solid];
m4_3292 -> m4_95  [key=2, style=dotted];
m4_3292 -> m4_962  [key=2, style=dotted];
m4_3292 -> m4_271  [key=2, style=dotted];
m4_3292 -> m4_3293  [key=0, style=solid];
m4_3292 -> m4_3295  [key=2, style=dotted];
m4_3294 -> m4_3291  [key=0, style=bold, color=blue];
m4_1539 -> m4_1540  [key=0, style=solid];
m4_1540 -> m4_1544  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1540 -> m4_1541  [key=0, style=solid];
m4_1541 -> m4_1543  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1541 -> m4_1542  [key=0, style=solid];
m4_1541 -> m4_8  [key=2, style=dotted];
m4_1542 -> m4_1539  [key=0, style=bold, color=blue];
m4_1889 -> m4_1890  [key=0, style=solid];
m4_1889 -> m4_1891  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_1889 -> m4_1892  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m4_1889 -> m4_1893  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.Person"];
m4_1894 -> m4_1036  [key=2, style=dotted];
m4_1894 -> m4_1895  [key=0, style=solid];
m4_1890 -> m4_1891  [key=0, style=solid];
m4_1891 -> m4_1892  [key=0, style=solid];
m4_1892 -> m4_1893  [key=0, style=solid];
m4_1893 -> m4_1894  [key=0, style=solid];
m4_1895 -> m4_1889  [key=0, style=bold, color=blue];
m4_514 -> m4_515  [key=0, style=solid];
m4_516 -> m4_12  [key=2, style=dotted];
m4_516 -> m4_517  [key=0, style=solid];
m4_516 -> m4_518  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_518 -> m4_34  [key=2, style=dotted];
m4_518 -> m4_519  [key=0, style=solid];
m4_515 -> m4_516  [key=0, style=solid];
m4_517 -> m4_518  [key=0, style=solid];
m4_517 -> m4_520  [key=2, style=dotted];
m4_519 -> m4_514  [key=0, style=bold, color=blue];
m4_2344 -> m4_2345  [key=0, style=solid];
m4_2345 -> m4_12  [key=2, style=dotted];
m4_2345 -> m4_2346  [key=0, style=solid];
m4_2346 -> m4_34  [key=2, style=dotted];
m4_2346 -> m4_2347  [key=0, style=solid];
m4_2347 -> m4_2344  [key=0, style=bold, color=blue];
m4_2202 -> m4_2203  [key=0, style=solid];
m4_2205 -> m4_34  [key=2, style=dotted];
m4_2205 -> m4_2206  [key=0, style=solid];
m4_2205 -> m4_122  [key=2, style=dotted];
m4_2206 -> m4_34  [key=2, style=dotted];
m4_2206 -> m4_2207  [key=0, style=solid];
m4_2204 -> m4_2205  [key=0, style=solid];
m4_2204 -> m4_2206  [key=1, style=dashed, color=darkseagreen4, label=dic];
m4_2204 -> m4_95  [key=2, style=dotted];
m4_2204 -> m4_96  [key=2, style=dotted];
m4_2203 -> m4_2204  [key=0, style=solid];
m4_2207 -> m4_2202  [key=0, style=bold, color=blue];
m4_1832 -> m4_1833  [key=0, style=solid];
m4_1833 -> m4_64  [key=2, style=dotted];
m4_1833 -> m4_1834  [key=0, style=solid];
m4_1834 -> m4_1832  [key=0, style=bold, color=blue];
m4_2079 -> m4_2080  [key=0, style=solid];
m4_2086 -> m4_12  [key=2, style=dotted];
m4_2086 -> m4_2087  [key=0, style=solid];
m4_2086 -> m4_2088  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m4_2086 -> m4_2089  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m4_2087 -> m4_34  [key=2, style=dotted];
m4_2087 -> m4_2088  [key=0, style=solid];
m4_2087 -> m4_2093  [key=2, style=dotted];
m4_2088 -> m4_34  [key=2, style=dotted];
m4_2088 -> m4_2089  [key=0, style=solid];
m4_2088 -> m4_2093  [key=2, style=dotted];
m4_2083 -> m4_2086  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2083 -> m4_2084  [key=0, style=solid];
m4_2083 -> m4_65  [key=2, style=dotted];
m4_2083 -> m4_2085  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2085 -> m4_2086  [key=0, style=solid];
m4_2085 -> m4_67  [key=2, style=dotted];
m4_2089 -> m4_2090  [key=0, style=solid];
m4_2089 -> m4_89  [key=2, style=dotted];
m4_2080 -> m4_2087  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m4_2080 -> m4_2088  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m4_2080 -> m4_2083  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m4_2080 -> m4_2081  [key=0, style=solid];
m4_2080 -> m4_2091  [key=2, style=dotted];
m4_2080 -> m4_2082  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m4_2082 -> m4_2083  [key=0, style=solid];
m4_2082 -> m4_2092  [key=2, style=dotted];
m4_2084 -> m4_2085  [key=0, style=solid];
m4_2081 -> m4_2092  [key=2, style=dotted];
m4_2081 -> m4_2082  [key=0, style=solid];
m4_2090 -> m4_2079  [key=0, style=bold, color=blue];
m4_728 -> m4_729  [key=0, style=solid];
m4_731 -> m4_34  [key=2, style=dotted];
m4_731 -> m4_732  [key=0, style=solid];
m4_731 -> m4_727  [key=2, style=dotted];
m4_730 -> m4_731  [key=0, style=solid];
m4_730 -> m4_666  [key=2, style=dotted];
m4_730 -> m4_732  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_732 -> m4_727  [key=2, style=dotted];
m4_732 -> m4_733  [key=0, style=solid];
m4_732 -> m4_67  [key=2, style=dotted];
m4_729 -> m4_730  [key=0, style=solid];
m4_733 -> m4_728  [key=0, style=bold, color=blue];
m4_1838 -> m4_1839  [key=0, style=solid];
m4_1839 -> m4_1840  [key=0, style=solid];
m4_1839 -> m4_1841  [key=2, style=dotted];
m4_1840 -> m4_1838  [key=0, style=bold, color=blue];
m4_1083 -> m4_1084  [key=0, style=solid];
m4_1088 -> m4_34  [key=2, style=dotted];
m4_1088 -> m4_1089  [key=0, style=solid];
m4_1090 -> m4_34  [key=2, style=dotted];
m4_1090 -> m4_1091  [key=0, style=solid];
m4_1091 -> m4_34  [key=2, style=dotted];
m4_1091 -> m4_1092  [key=0, style=solid];
m4_1087 -> m4_1088  [key=0, style=solid];
m4_1087 -> m4_1025  [key=2, style=dotted];
m4_1087 -> m4_1026  [key=2, style=dotted];
m4_1087 -> m4_1089  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1089 -> m4_1090  [key=0, style=solid];
m4_1089 -> m4_1091  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_1089 -> m4_1025  [key=2, style=dotted];
m4_1089 -> m4_36  [key=2, style=dotted];
m4_1084 -> m4_1087  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_1084 -> m4_1085  [key=0, style=solid];
m4_1084 -> m4_1093  [key=2, style=dotted];
m4_1084 -> m4_1086  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_1086 -> m4_1087  [key=0, style=solid];
m4_1086 -> m4_1017  [key=2, style=dotted];
m4_1085 -> m4_1017  [key=2, style=dotted];
m4_1085 -> m4_1086  [key=0, style=solid];
m4_1092 -> m4_1083  [key=0, style=bold, color=blue];
m4_3059 -> m4_3060  [key=0, style=solid];
m4_3070 -> m4_493  [key=2, style=dotted];
m4_3070 -> m4_3071  [key=0, style=solid];
m4_3070 -> m4_66  [key=2, style=dotted];
m4_3069 -> m4_122  [key=2, style=dotted];
m4_3069 -> m4_3070  [key=0, style=solid];
m4_3069 -> m4_3078  [key=2, style=dotted];
m4_3066 -> m4_797  [key=2, style=dotted];
m4_3066 -> m4_3067  [key=0, style=solid];
m4_3066 -> m4_3076  [key=2, style=dotted];
m4_3067 -> m4_3070  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_3067 -> m4_3077  [key=2, style=dotted];
m4_3067 -> m4_3068  [key=0, style=solid];
m4_3060 -> m4_559  [key=2, style=dotted];
m4_3060 -> m4_3061  [key=0, style=solid];
m4_3060 -> m4_3065  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_3068 -> m4_3069  [key=0, style=solid];
m4_3065 -> m4_3066  [key=0, style=solid];
m4_3065 -> m4_646  [key=2, style=dotted];
m4_3061 -> m4_3062  [key=0, style=solid];
m4_3061 -> m4_3072  [key=2, style=dotted];
m4_3061 -> m4_3063  [key=1, style=dashed, color=darkseagreen4, label=writer];
m4_3061 -> m4_3064  [key=1, style=dashed, color=darkseagreen4, label=writer];
m4_3064 -> m4_3065  [key=0, style=solid];
m4_3064 -> m4_3075  [key=2, style=dotted];
m4_3062 -> m4_3063  [key=0, style=solid];
m4_3062 -> m4_3073  [key=2, style=dotted];
m4_3063 -> m4_3064  [key=0, style=solid];
m4_3063 -> m4_3074  [key=2, style=dotted];
m4_3071 -> m4_3059  [key=0, style=bold, color=blue];
m4_1601 -> m4_1602  [key=0, style=solid];
m4_1602 -> m4_8  [key=2, style=dotted];
m4_1602 -> m4_1603  [key=0, style=solid];
m4_1602 -> m4_1604  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1603 -> m4_1601  [key=0, style=bold, color=blue];
m4_2021 -> m4_2068  [key=0, style=solid];
m4_2021 -> m4_2069  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2021 -> m4_2070  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2021 -> m4_2071  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2021 -> m4_2072  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2021 -> m4_2073  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2021 -> m4_2074  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2021 -> m4_2075  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2021 -> m4_2076  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2021 -> m4_2077  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2068 -> m4_2069  [key=0, style=solid];
m4_2069 -> m4_2070  [key=0, style=solid];
m4_2070 -> m4_2071  [key=0, style=solid];
m4_2071 -> m4_2072  [key=0, style=solid];
m4_2072 -> m4_2073  [key=0, style=solid];
m4_2073 -> m4_2074  [key=0, style=solid];
m4_2074 -> m4_2075  [key=0, style=solid];
m4_2075 -> m4_2076  [key=0, style=solid];
m4_2076 -> m4_2077  [key=0, style=solid];
m4_2077 -> m4_2078  [key=0, style=solid];
m4_2078 -> m4_2021  [key=0, style=bold, color=blue];
m4_574 -> m4_575  [key=0, style=solid];
m4_576 -> m4_555  [key=2, style=dotted];
m4_576 -> m4_577  [key=0, style=solid];
m4_576 -> m4_579  [key=2, style=dotted];
m4_575 -> m4_576  [key=0, style=solid];
m4_575 -> m4_578  [key=2, style=dotted];
m4_577 -> m4_574  [key=0, style=bold, color=blue];
m4_1107 -> m4_1108  [key=0, style=solid];
m4_1109 -> m4_47  [key=2, style=dotted];
m4_1109 -> m4_1110  [key=0, style=solid];
m4_1111 -> m4_47  [key=2, style=dotted];
m4_1111 -> m4_1112  [key=0, style=solid];
m4_1110 -> m4_34  [key=2, style=dotted];
m4_1110 -> m4_1111  [key=0, style=solid];
m4_1112 -> m4_34  [key=2, style=dotted];
m4_1112 -> m4_1113  [key=0, style=solid];
m4_1108 -> m4_1109  [key=0, style=solid];
m4_1113 -> m4_1107  [key=0, style=bold, color=blue];
m4_1448 -> m4_1449  [key=0, style=solid];
m4_1450 -> m4_65  [key=2, style=dotted];
m4_1450 -> m4_1451  [key=0, style=solid];
m4_1451 -> m4_67  [key=2, style=dotted];
m4_1451 -> m4_1452  [key=0, style=solid];
m4_1449 -> m4_120  [key=2, style=dotted];
m4_1449 -> m4_1450  [key=0, style=solid];
m4_1449 -> m4_1453  [key=2, style=dotted];
m4_1452 -> m4_1448  [key=0, style=bold, color=blue];
m4_3505 -> m4_3506  [key=0, style=solid];
m4_3507 -> m4_12  [key=2, style=dotted];
m4_3507 -> m4_3508  [key=0, style=solid];
m4_3508 -> m4_34  [key=2, style=dotted];
m4_3508 -> m4_3509  [key=0, style=solid];
m4_3506 -> m4_3507  [key=0, style=solid];
m4_3509 -> m4_3505  [key=0, style=bold, color=blue];
m4_1960 -> m4_1961  [key=0, style=solid];
m4_1972 -> m4_12  [key=2, style=dotted];
m4_1972 -> m4_1973  [key=0, style=solid];
m4_1972 -> m4_1974  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1972 -> m4_1975  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1972 -> m4_1976  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1972 -> m4_1977  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1972 -> m4_1978  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1975 -> m4_34  [key=2, style=dotted];
m4_1975 -> m4_1976  [key=0, style=solid];
m4_1973 -> m4_34  [key=2, style=dotted];
m4_1973 -> m4_1974  [key=0, style=solid];
m4_1974 -> m4_34  [key=2, style=dotted];
m4_1974 -> m4_1975  [key=0, style=solid];
m4_1976 -> m4_34  [key=2, style=dotted];
m4_1976 -> m4_1977  [key=0, style=solid];
m4_1977 -> m4_34  [key=2, style=dotted];
m4_1977 -> m4_1978  [key=0, style=solid];
m4_1978 -> m4_34  [key=2, style=dotted];
m4_1978 -> m4_1979  [key=0, style=solid];
m4_1971 -> m4_1972  [key=0, style=solid];
m4_1971 -> m4_67  [key=2, style=dotted];
m4_1970 -> m4_1972  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1970 -> m4_1971  [key=0, style=solid];
m4_1970 -> m4_65  [key=2, style=dotted];
m4_1966 -> m4_1975  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m4_1966 -> m4_839  [key=2, style=dotted];
m4_1966 -> m4_123  [key=2, style=dotted];
m4_1966 -> m4_1967  [key=0, style=solid];
m4_1966 -> m4_1969  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m4_1968 -> m4_1971  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m4_1968 -> m4_1969  [key=0, style=solid];
m4_1969 -> m4_1970  [key=0, style=solid];
m4_1969 -> m4_1889  [key=2, style=dotted];
m4_1962 -> m4_831  [key=2, style=dotted];
m4_1962 -> m4_1963  [key=0, style=solid];
m4_1965 -> m4_1966  [key=0, style=solid];
m4_1967 -> m4_1968  [key=0, style=solid];
m4_1961 -> m4_1969  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1961 -> m4_1962  [key=0, style=solid];
m4_1961 -> m4_1965  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1961 -> m4_1244  [key=2, style=dotted];
m4_1961 -> m4_1963  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1961 -> m4_1964  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1963 -> m4_1964  [key=0, style=solid];
m4_1964 -> m4_1965  [key=0, style=solid];
m4_1979 -> m4_1960  [key=0, style=bold, color=blue];
m4_2812 -> m4_2813  [key=0, style=solid];
m4_2819 -> m4_12  [key=2, style=dotted];
m4_2819 -> m4_2820  [key=0, style=solid];
m4_2817 -> m4_47  [key=2, style=dotted];
m4_2817 -> m4_2819  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2817 -> m4_2818  [key=0, style=solid];
m4_2818 -> m4_34  [key=2, style=dotted];
m4_2818 -> m4_2819  [key=0, style=solid];
m4_2820 -> m4_34  [key=2, style=dotted];
m4_2820 -> m4_2821  [key=0, style=solid];
m4_2813 -> m4_2817  [key=1, style=dashed, color=darkseagreen4, label=b];
m4_2813 -> m4_2814  [key=0, style=solid];
m4_2813 -> m4_2822  [key=2, style=dotted];
m4_2813 -> m4_2815  [key=1, style=dashed, color=darkseagreen4, label=b];
m4_2816 -> m4_2817  [key=0, style=solid];
m4_2814 -> m4_2815  [key=0, style=solid];
m4_2815 -> m4_2816  [key=0, style=solid];
m4_2821 -> m4_2812  [key=0, style=bold, color=blue];
m4_1164 -> m4_1165  [key=0, style=solid];
m4_1168 -> m4_12  [key=2, style=dotted];
m4_1168 -> m4_1169  [key=0, style=solid];
m4_1168 -> m4_1170  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_1169 -> m4_34  [key=2, style=dotted];
m4_1169 -> m4_1170  [key=0, style=solid];
m4_1170 -> m4_34  [key=2, style=dotted];
m4_1170 -> m4_1171  [key=0, style=solid];
m4_1170 -> m4_831  [key=2, style=dotted];
m4_1166 -> m4_1168  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1166 -> m4_1167  [key=0, style=solid];
m4_1166 -> m4_65  [key=2, style=dotted];
m4_1167 -> m4_1168  [key=0, style=solid];
m4_1167 -> m4_67  [key=2, style=dotted];
m4_1165 -> m4_1166  [key=0, style=solid];
m4_1165 -> m4_831  [key=2, style=dotted];
m4_1165 -> m4_1172  [key=2, style=dotted];
m4_1171 -> m4_1164  [key=0, style=bold, color=blue];
m4_2564 -> m4_2565  [key=0, style=solid];
m4_2566 -> m4_120  [key=2, style=dotted];
m4_2566 -> m4_2567  [key=0, style=solid];
m4_2565 -> m4_2566  [key=0, style=solid];
m4_2567 -> m4_2564  [key=0, style=bold, color=blue];
m4_1773 -> m4_1774  [key=0, style=solid];
m4_1775 -> m4_65  [key=2, style=dotted];
m4_1775 -> m4_1776  [key=0, style=solid];
m4_1776 -> m4_67  [key=2, style=dotted];
m4_1776 -> m4_1777  [key=0, style=solid];
m4_1774 -> m4_1775  [key=0, style=solid];
m4_1774 -> m4_1778  [key=2, style=dotted];
m4_1777 -> m4_1773  [key=0, style=bold, color=blue];
m4_1340 -> m4_1341  [key=0, style=solid];
m4_1342 -> m4_8  [key=2, style=dotted];
m4_1342 -> m4_1343  [key=0, style=solid];
m4_1342 -> m4_1344  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1341 -> m4_1342  [key=0, style=solid];
m4_1343 -> m4_1340  [key=0, style=bold, color=blue];
m4_1180 -> m4_1181  [key=0, style=solid];
m4_1182 -> m4_12  [key=2, style=dotted];
m4_1182 -> m4_1183  [key=0, style=solid];
m4_1181 -> m4_1182  [key=0, style=solid];
m4_1183 -> m4_1184  [key=0, style=solid];
m4_1183 -> m4_1186  [key=0, style=solid];
m4_1183 -> m4_1187  [key=2, style=dotted];
m4_1184 -> m4_1185  [key=0, style=solid];
m4_1185 -> m4_1186  [key=0, style=solid];
m4_1185 -> m4_203  [key=2, style=dotted];
m4_1185 -> m4_1188  [key=2, style=dotted];
m4_1186 -> m4_1180  [key=0, style=bold, color=blue];
m4_3368 -> m4_3369  [key=0, style=solid];
m4_3369 -> m4_839  [key=2, style=dotted];
m4_3369 -> m4_123  [key=2, style=dotted];
m4_3369 -> m4_831  [key=2, style=dotted];
m4_3369 -> m4_120  [key=2, style=dotted];
m4_3369 -> m4_3370  [key=0, style=solid];
m4_3371 -> m4_67  [key=2, style=dotted];
m4_3371 -> m4_3372  [key=0, style=solid];
m4_3370 -> m4_95  [key=2, style=dotted];
m4_3370 -> m4_962  [key=2, style=dotted];
m4_3370 -> m4_273  [key=2, style=dotted];
m4_3370 -> m4_3371  [key=0, style=solid];
m4_3372 -> m4_3368  [key=0, style=bold, color=blue];
m4_1835 -> m4_1836  [key=0, style=solid];
m4_1836 -> m4_557  [key=2, style=dotted];
m4_1836 -> m4_1837  [key=0, style=solid];
m4_1837 -> m4_1835  [key=0, style=bold, color=blue];
m4_571 -> m4_572  [key=0, style=solid];
m4_572 -> m4_573  [key=0, style=solid];
m4_573 -> m4_571  [key=0, style=bold, color=blue];
m4_1649 -> m4_1650  [key=0, style=solid];
m4_1656 -> m4_12  [key=2, style=dotted];
m4_1656 -> m4_1657  [key=0, style=solid];
m4_1656 -> m4_1658  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m4_1656 -> m4_1659  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m4_1656 -> m4_1660  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m4_1657 -> m4_34  [key=2, style=dotted];
m4_1657 -> m4_1658  [key=0, style=solid];
m4_1658 -> m4_34  [key=2, style=dotted];
m4_1658 -> m4_1659  [key=0, style=solid];
m4_1659 -> m4_34  [key=2, style=dotted];
m4_1659 -> m4_1660  [key=0, style=solid];
m4_1660 -> m4_34  [key=2, style=dotted];
m4_1660 -> m4_1661  [key=0, style=solid];
m4_1654 -> m4_1656  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1654 -> m4_1655  [key=0, style=solid];
m4_1654 -> m4_65  [key=2, style=dotted];
m4_1655 -> m4_1656  [key=0, style=solid];
m4_1655 -> m4_67  [key=2, style=dotted];
m4_1650 -> m4_1654  [key=1, style=dashed, color=darkseagreen4, label=f];
m4_1650 -> m4_1651  [key=0, style=solid];
m4_1650 -> m4_1662  [key=2, style=dotted];
m4_1650 -> m4_1652  [key=1, style=dashed, color=darkseagreen4, label=f];
m4_1650 -> m4_1653  [key=1, style=dashed, color=darkseagreen4, label=f];
m4_1653 -> m4_1654  [key=0, style=solid];
m4_1653 -> m4_1663  [key=2, style=dotted];
m4_1653 -> m4_1627  [key=2, style=dotted];
m4_1651 -> m4_1627  [key=2, style=dotted];
m4_1651 -> m4_1652  [key=0, style=solid];
m4_1651 -> m4_1663  [key=2, style=dotted];
m4_1652 -> m4_1653  [key=0, style=solid];
m4_1652 -> m4_1627  [key=2, style=dotted];
m4_1652 -> m4_1663  [key=2, style=dotted];
m4_1661 -> m4_1649  [key=0, style=bold, color=blue];
m4_1928 -> m4_1929  [key=0, style=solid];
m4_1928 -> m4_1930  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1931  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1932  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1933  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1935  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1936  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1937  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1938  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1939  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1940  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1941  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1942  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1943  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1944  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1945  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1946  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1928 -> m4_1934  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1929 -> m4_1930  [key=0, style=solid];
m4_1929 -> m4_424  [key=2, style=dotted];
m4_1930 -> m4_1931  [key=0, style=solid];
m4_1930 -> m4_425  [key=2, style=dotted];
m4_1931 -> m4_1932  [key=0, style=solid];
m4_1931 -> m4_424  [key=2, style=dotted];
m4_1932 -> m4_1933  [key=0, style=solid];
m4_1932 -> m4_424  [key=2, style=dotted];
m4_1933 -> m4_1934  [key=0, style=solid];
m4_1933 -> m4_424  [key=2, style=dotted];
m4_1935 -> m4_1936  [key=0, style=solid];
m4_1935 -> m4_1948  [key=2, style=dotted];
m4_1936 -> m4_1937  [key=0, style=solid];
m4_1936 -> m4_1949  [key=2, style=dotted];
m4_1937 -> m4_1938  [key=0, style=solid];
m4_1937 -> m4_1950  [key=2, style=dotted];
m4_1938 -> m4_1939  [key=0, style=solid];
m4_1938 -> m4_1951  [key=2, style=dotted];
m4_1939 -> m4_1940  [key=0, style=solid];
m4_1939 -> m4_1952  [key=2, style=dotted];
m4_1940 -> m4_1941  [key=0, style=solid];
m4_1940 -> m4_1953  [key=2, style=dotted];
m4_1941 -> m4_1942  [key=0, style=solid];
m4_1941 -> m4_1954  [key=2, style=dotted];
m4_1942 -> m4_1943  [key=0, style=solid];
m4_1942 -> m4_1955  [key=2, style=dotted];
m4_1943 -> m4_1944  [key=0, style=solid];
m4_1943 -> m4_1956  [key=2, style=dotted];
m4_1944 -> m4_1945  [key=0, style=solid];
m4_1944 -> m4_1957  [key=2, style=dotted];
m4_1945 -> m4_1946  [key=0, style=solid];
m4_1945 -> m4_1958  [key=2, style=dotted];
m4_1946 -> m4_1947  [key=0, style=solid];
m4_1946 -> m4_1959  [key=2, style=dotted];
m4_1934 -> m4_1935  [key=0, style=solid];
m4_1934 -> m4_424  [key=2, style=dotted];
m4_1947 -> m4_1928  [key=0, style=bold, color=blue];
m4_2658 -> m4_2659  [key=0, style=solid];
m4_2659 -> m4_120  [key=2, style=dotted];
m4_2659 -> m4_2660  [key=0, style=solid];
m4_2660 -> m4_2658  [key=0, style=bold, color=blue];
m4_1149 -> m4_1150  [key=0, style=solid];
m4_1154 -> m4_12  [key=2, style=dotted];
m4_1154 -> m4_1155  [key=0, style=solid];
m4_1160 -> m4_12  [key=2, style=dotted];
m4_1160 -> m4_1161  [key=0, style=solid];
m4_1152 -> m4_47  [key=2, style=dotted];
m4_1152 -> m4_1154  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1152 -> m4_1153  [key=0, style=solid];
m4_1158 -> m4_47  [key=2, style=dotted];
m4_1158 -> m4_1160  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1158 -> m4_1159  [key=0, style=solid];
m4_1153 -> m4_34  [key=2, style=dotted];
m4_1153 -> m4_1154  [key=0, style=solid];
m4_1155 -> m4_34  [key=2, style=dotted];
m4_1155 -> m4_1156  [key=0, style=solid];
m4_1159 -> m4_34  [key=2, style=dotted];
m4_1159 -> m4_1160  [key=0, style=solid];
m4_1161 -> m4_34  [key=2, style=dotted];
m4_1161 -> m4_1162  [key=0, style=solid];
m4_1151 -> m4_1152  [key=0, style=solid];
m4_1151 -> m4_1163  [key=2, style=dotted];
m4_1157 -> m4_1158  [key=0, style=solid];
m4_1157 -> m4_1163  [key=2, style=dotted];
m4_1150 -> m4_1153  [key=1, style=dashed, color=darkseagreen4, label=boolRef];
m4_1150 -> m4_1151  [key=0, style=solid];
m4_1156 -> m4_1159  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerTestRef];
m4_1156 -> m4_1157  [key=0, style=solid];
m4_1162 -> m4_1149  [key=0, style=bold, color=blue];
m4_3617 -> m4_3618  [key=0, style=solid];
m4_3618 -> m4_3583  [key=2, style=dotted];
m4_3618 -> m4_3619  [key=0, style=solid];
m4_3619 -> m4_3617  [key=0, style=bold, color=blue];
m4_3378 -> m4_3379  [key=0, style=solid];
m4_3385 -> m4_34  [key=2, style=dotted];
m4_3385 -> m4_3386  [key=0, style=solid];
m4_3386 -> m4_34  [key=2, style=dotted];
m4_3386 -> m4_3387  [key=0, style=solid];
m4_3381 -> m4_3385  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m4_3381 -> m4_3386  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m4_3381 -> m4_3382  [key=0, style=solid];
m4_3381 -> m4_2710  [key=2, style=dotted];
m4_3381 -> m4_3383  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m4_3381 -> m4_3384  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m4_3384 -> m4_3385  [key=0, style=solid];
m4_3384 -> m4_89  [key=2, style=dotted];
m4_3387 -> m4_3388  [key=0, style=solid];
m4_3387 -> m4_2714  [key=2, style=dotted];
m4_3379 -> m4_839  [key=2, style=dotted];
m4_3379 -> m4_123  [key=2, style=dotted];
m4_3379 -> m4_831  [key=2, style=dotted];
m4_3379 -> m4_120  [key=2, style=dotted];
m4_3379 -> m4_3380  [key=0, style=solid];
m4_3379 -> m4_3383  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_3380 -> m4_3381  [key=0, style=solid];
m4_3380 -> m4_3387  [key=1, style=dashed, color=darkseagreen4, label=sw];
m4_3380 -> m4_2709  [key=2, style=dotted];
m4_3382 -> m4_95  [key=2, style=dotted];
m4_3382 -> m4_273  [key=2, style=dotted];
m4_3382 -> m4_3383  [key=0, style=solid];
m4_3382 -> m4_558  [key=2, style=dotted];
m4_3383 -> m4_3384  [key=0, style=solid];
m4_3383 -> m4_2746  [key=2, style=dotted];
m4_3388 -> m4_67  [key=2, style=dotted];
m4_3388 -> m4_3389  [key=0, style=solid];
m4_3389 -> m4_3378  [key=0, style=bold, color=blue];
m4_1518 -> m4_1519  [key=0, style=solid];
m4_1519 -> m4_1523  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1519 -> m4_1520  [key=0, style=solid];
m4_1520 -> m4_1522  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1520 -> m4_1521  [key=0, style=solid];
m4_1520 -> m4_8  [key=2, style=dotted];
m4_1521 -> m4_1518  [key=0, style=bold, color=blue];
m4_2584 -> m4_2585  [key=0, style=solid];
m4_2590 -> m4_12  [key=2, style=dotted];
m4_2590 -> m4_2591  [key=0, style=solid];
m4_2590 -> m4_2592  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2590 -> m4_2593  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2590 -> m4_2594  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2591 -> m4_34  [key=2, style=dotted];
m4_2591 -> m4_2592  [key=0, style=solid];
m4_2592 -> m4_34  [key=2, style=dotted];
m4_2592 -> m4_2593  [key=0, style=solid];
m4_2593 -> m4_34  [key=2, style=dotted];
m4_2593 -> m4_2594  [key=0, style=solid];
m4_2594 -> m4_34  [key=2, style=dotted];
m4_2594 -> m4_2595  [key=0, style=solid];
m4_2588 -> m4_2590  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2588 -> m4_2589  [key=0, style=solid];
m4_2588 -> m4_65  [key=2, style=dotted];
m4_2589 -> m4_2590  [key=0, style=solid];
m4_2589 -> m4_67  [key=2, style=dotted];
m4_2585 -> m4_2591  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2585 -> m4_2592  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2585 -> m4_2588  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2585 -> m4_2586  [key=0, style=solid];
m4_2585 -> m4_2580  [key=2, style=dotted];
m4_2585 -> m4_2587  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2587 -> m4_2588  [key=0, style=solid];
m4_2587 -> m4_2596  [key=2, style=dotted];
m4_2586 -> m4_2587  [key=0, style=solid];
m4_2586 -> m4_2596  [key=2, style=dotted];
m4_2595 -> m4_2584  [key=0, style=bold, color=blue];
m4_2022 -> m4_2023  [key=0, style=solid];
m4_2023 -> m4_12  [key=2, style=dotted];
m4_2023 -> m4_2024  [key=0, style=solid];
m4_2023 -> m4_2025  [key=1, style=dashed, color=darkseagreen4, label=myA];
m4_2023 -> m4_2026  [key=1, style=dashed, color=darkseagreen4, label=myA];
m4_2023 -> m4_2027  [key=1, style=dashed, color=darkseagreen4, label=myA];
m4_2023 -> m4_2028  [key=1, style=dashed, color=darkseagreen4, label=myA];
m4_2023 -> m4_2029  [key=1, style=dashed, color=darkseagreen4, label=myA];
m4_2023 -> m4_2030  [key=1, style=dashed, color=darkseagreen4, label=myA];
m4_2023 -> m4_2031  [key=1, style=dashed, color=darkseagreen4, label=myA];
m4_2032 -> m4_12  [key=2, style=dotted];
m4_2032 -> m4_2033  [key=0, style=solid];
m4_2032 -> m4_2034  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2035  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2036  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2037  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2038  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2039  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2040  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2041  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2042  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2043  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2044  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2045  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2046  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2047  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2048  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2049  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2032 -> m4_2050  [key=1, style=dashed, color=darkseagreen4, label=myB];
m4_2024 -> m4_34  [key=2, style=dotted];
m4_2024 -> m4_2025  [key=0, style=solid];
m4_2024 -> m4_2052  [key=2, style=dotted];
m4_2024 -> m4_2053  [key=2, style=dotted];
m4_2025 -> m4_34  [key=2, style=dotted];
m4_2025 -> m4_2026  [key=0, style=solid];
m4_2025 -> m4_2052  [key=2, style=dotted];
m4_2025 -> m4_2053  [key=2, style=dotted];
m4_2026 -> m4_34  [key=2, style=dotted];
m4_2026 -> m4_2027  [key=0, style=solid];
m4_2026 -> m4_2054  [key=2, style=dotted];
m4_2026 -> m4_2053  [key=2, style=dotted];
m4_2027 -> m4_34  [key=2, style=dotted];
m4_2027 -> m4_2028  [key=0, style=solid];
m4_2027 -> m4_2054  [key=2, style=dotted];
m4_2027 -> m4_2053  [key=2, style=dotted];
m4_2028 -> m4_34  [key=2, style=dotted];
m4_2028 -> m4_2029  [key=0, style=solid];
m4_2028 -> m4_2054  [key=2, style=dotted];
m4_2028 -> m4_2053  [key=2, style=dotted];
m4_2029 -> m4_34  [key=2, style=dotted];
m4_2029 -> m4_2030  [key=0, style=solid];
m4_2029 -> m4_2054  [key=2, style=dotted];
m4_2029 -> m4_2053  [key=2, style=dotted];
m4_2030 -> m4_34  [key=2, style=dotted];
m4_2030 -> m4_2031  [key=0, style=solid];
m4_2030 -> m4_2054  [key=2, style=dotted];
m4_2030 -> m4_2053  [key=2, style=dotted];
m4_2031 -> m4_34  [key=2, style=dotted];
m4_2031 -> m4_2032  [key=0, style=solid];
m4_2031 -> m4_2054  [key=2, style=dotted];
m4_2031 -> m4_2053  [key=2, style=dotted];
m4_2033 -> m4_34  [key=2, style=dotted];
m4_2033 -> m4_2034  [key=0, style=solid];
m4_2033 -> m4_2052  [key=2, style=dotted];
m4_2033 -> m4_2053  [key=2, style=dotted];
m4_2034 -> m4_34  [key=2, style=dotted];
m4_2034 -> m4_2035  [key=0, style=solid];
m4_2034 -> m4_2052  [key=2, style=dotted];
m4_2034 -> m4_2053  [key=2, style=dotted];
m4_2035 -> m4_34  [key=2, style=dotted];
m4_2035 -> m4_2036  [key=0, style=solid];
m4_2035 -> m4_2054  [key=2, style=dotted];
m4_2035 -> m4_2053  [key=2, style=dotted];
m4_2036 -> m4_34  [key=2, style=dotted];
m4_2036 -> m4_2037  [key=0, style=solid];
m4_2036 -> m4_2054  [key=2, style=dotted];
m4_2036 -> m4_2053  [key=2, style=dotted];
m4_2037 -> m4_34  [key=2, style=dotted];
m4_2037 -> m4_2038  [key=0, style=solid];
m4_2037 -> m4_2054  [key=2, style=dotted];
m4_2037 -> m4_2053  [key=2, style=dotted];
m4_2038 -> m4_34  [key=2, style=dotted];
m4_2038 -> m4_2039  [key=0, style=solid];
m4_2038 -> m4_2054  [key=2, style=dotted];
m4_2038 -> m4_2053  [key=2, style=dotted];
m4_2039 -> m4_34  [key=2, style=dotted];
m4_2039 -> m4_2040  [key=0, style=solid];
m4_2039 -> m4_2054  [key=2, style=dotted];
m4_2039 -> m4_2053  [key=2, style=dotted];
m4_2040 -> m4_34  [key=2, style=dotted];
m4_2040 -> m4_2041  [key=0, style=solid];
m4_2040 -> m4_2054  [key=2, style=dotted];
m4_2040 -> m4_2053  [key=2, style=dotted];
m4_2041 -> m4_34  [key=2, style=dotted];
m4_2041 -> m4_2042  [key=0, style=solid];
m4_2042 -> m4_34  [key=2, style=dotted];
m4_2042 -> m4_2043  [key=0, style=solid];
m4_2043 -> m4_34  [key=2, style=dotted];
m4_2043 -> m4_2044  [key=0, style=solid];
m4_2044 -> m4_34  [key=2, style=dotted];
m4_2044 -> m4_2045  [key=0, style=solid];
m4_2045 -> m4_34  [key=2, style=dotted];
m4_2045 -> m4_2046  [key=0, style=solid];
m4_2045 -> m4_2054  [key=2, style=dotted];
m4_2045 -> m4_2053  [key=2, style=dotted];
m4_2046 -> m4_34  [key=2, style=dotted];
m4_2046 -> m4_2047  [key=0, style=solid];
m4_2046 -> m4_2054  [key=2, style=dotted];
m4_2046 -> m4_2053  [key=2, style=dotted];
m4_2047 -> m4_34  [key=2, style=dotted];
m4_2047 -> m4_2048  [key=0, style=solid];
m4_2048 -> m4_34  [key=2, style=dotted];
m4_2048 -> m4_2049  [key=0, style=solid];
m4_2048 -> m4_2054  [key=2, style=dotted];
m4_2048 -> m4_2053  [key=2, style=dotted];
m4_2049 -> m4_34  [key=2, style=dotted];
m4_2049 -> m4_2050  [key=0, style=solid];
m4_2049 -> m4_2054  [key=2, style=dotted];
m4_2049 -> m4_2053  [key=2, style=dotted];
m4_2050 -> m4_34  [key=2, style=dotted];
m4_2050 -> m4_2051  [key=0, style=solid];
m4_2050 -> m4_2054  [key=2, style=dotted];
m4_2050 -> m4_2053  [key=2, style=dotted];
m4_2051 -> m4_2022  [key=0, style=bold, color=blue];
m4_464 -> m4_465  [key=0, style=solid];
m4_467 -> m4_203  [key=2, style=dotted];
m4_467 -> m4_468  [key=0, style=solid];
m4_467 -> m4_470  [key=2, style=dotted];
m4_466 -> m4_469  [key=2, style=dotted];
m4_466 -> m4_467  [key=0, style=solid];
m4_465 -> m4_199  [key=2, style=dotted];
m4_465 -> m4_467  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_465 -> m4_466  [key=0, style=solid];
m4_468 -> m4_464  [key=0, style=bold, color=blue];
m4_3605 -> m4_3606  [key=0, style=solid];
m4_3606 -> m4_3607  [key=0, style=solid];
m4_3607 -> m4_3605  [key=0, style=bold, color=blue];
m4_1270 -> m4_1271  [key=0, style=solid];
m4_1272 -> m4_12  [key=2, style=dotted];
m4_1272 -> m4_1273  [key=0, style=solid];
m4_1272 -> m4_1274  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1272 -> m4_1275  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1272 -> m4_1276  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1272 -> m4_1277  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1274 -> m4_34  [key=2, style=dotted];
m4_1274 -> m4_1275  [key=0, style=solid];
m4_1275 -> m4_34  [key=2, style=dotted];
m4_1275 -> m4_1276  [key=0, style=solid];
m4_1276 -> m4_34  [key=2, style=dotted];
m4_1276 -> m4_1277  [key=0, style=solid];
m4_1277 -> m4_34  [key=2, style=dotted];
m4_1277 -> m4_1278  [key=0, style=solid];
m4_1271 -> m4_1272  [key=0, style=solid];
m4_1273 -> m4_1274  [key=0, style=solid];
m4_1273 -> m4_520  [key=2, style=dotted];
m4_1278 -> m4_1270  [key=0, style=bold, color=blue];
m4_909 -> m4_910  [key=0, style=solid];
m4_914 -> m4_34  [key=2, style=dotted];
m4_914 -> m4_915  [key=0, style=solid];
m4_915 -> m4_34  [key=2, style=dotted];
m4_915 -> m4_916  [key=0, style=solid];
m4_913 -> m4_914  [key=0, style=solid];
m4_913 -> m4_915  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_913 -> m4_118  [key=2, style=dotted];
m4_913 -> m4_566  [key=2, style=dotted];
m4_910 -> m4_913  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_910 -> m4_911  [key=0, style=solid];
m4_911 -> m4_913  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_911 -> m4_119  [key=2, style=dotted];
m4_911 -> m4_912  [key=0, style=solid];
m4_912 -> m4_913  [key=0, style=solid];
m4_916 -> m4_909  [key=0, style=bold, color=blue];
m4_1320 -> m4_1321  [key=0, style=solid];
m4_1326 -> m4_65  [key=2, style=dotted];
m4_1326 -> m4_1327  [key=0, style=solid];
m4_1327 -> m4_67  [key=2, style=dotted];
m4_1327 -> m4_1328  [key=0, style=solid];
m4_1329 -> m4_67  [key=2, style=dotted];
m4_1329 -> m4_1330  [key=0, style=solid];
m4_1328 -> m4_95  [key=2, style=dotted];
m4_1328 -> m4_962  [key=2, style=dotted];
m4_1328 -> m4_1329  [key=0, style=solid];
m4_1321 -> m4_1326  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1321 -> m4_1328  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1321 -> m4_1322  [key=0, style=solid];
m4_1321 -> m4_1331  [key=2, style=dotted];
m4_1321 -> m4_1323  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1321 -> m4_1324  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1321 -> m4_1325  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1325 -> m4_1326  [key=0, style=solid];
m4_1322 -> m4_1323  [key=0, style=solid];
m4_1323 -> m4_1324  [key=0, style=solid];
m4_1324 -> m4_1325  [key=0, style=solid];
m4_1330 -> m4_1320  [key=0, style=bold, color=blue];
m4_3258 -> m4_3259  [key=0, style=solid];
m4_3259 -> m4_12  [key=2, style=dotted];
m4_3259 -> m4_3260  [key=0, style=solid];
m4_3259 -> m4_3261  [key=1, style=dashed, color=darkseagreen4, label=uris];
m4_3262 -> m4_12  [key=2, style=dotted];
m4_3262 -> m4_3263  [key=0, style=solid];
m4_3267 -> m4_12  [key=2, style=dotted];
m4_3267 -> m4_3268  [key=0, style=solid];
m4_3267 -> m4_3269  [key=1, style=dashed, color=darkseagreen4, label=uri];
m4_3260 -> m4_34  [key=2, style=dotted];
m4_3260 -> m4_3261  [key=0, style=solid];
m4_3261 -> m4_34  [key=2, style=dotted];
m4_3261 -> m4_3262  [key=0, style=solid];
m4_3261 -> m4_1440  [key=2, style=dotted];
m4_3266 -> m4_34  [key=2, style=dotted];
m4_3266 -> m4_3267  [key=0, style=solid];
m4_3269 -> m4_34  [key=2, style=dotted];
m4_3269 -> m4_3270  [key=0, style=solid];
m4_3269 -> m4_3271  [key=2, style=dotted];
m4_3263 -> m4_3264  [key=0, style=solid];
m4_3263 -> m4_520  [key=2, style=dotted];
m4_3268 -> m4_3269  [key=0, style=solid];
m4_3268 -> m4_520  [key=2, style=dotted];
m4_3264 -> m4_3266  [key=1, style=dashed, color=darkseagreen4, label=i1];
m4_3264 -> m4_3265  [key=0, style=solid];
m4_3264 -> m4_3271  [key=2, style=dotted];
m4_3265 -> m4_3266  [key=0, style=solid];
m4_3265 -> m4_1440  [key=2, style=dotted];
m4_3270 -> m4_3258  [key=0, style=bold, color=blue];
m4_2195 -> m4_2196  [key=0, style=solid];
m4_2197 -> m4_12  [key=2, style=dotted];
m4_2197 -> m4_2198  [key=0, style=solid];
m4_2197 -> m4_2199  [key=1, style=dashed, color=darkseagreen4, label=cc];
m4_2197 -> m4_2200  [key=1, style=dashed, color=darkseagreen4, label=cc];
m4_2198 -> m4_34  [key=2, style=dotted];
m4_2198 -> m4_2199  [key=0, style=solid];
m4_2199 -> m4_34  [key=2, style=dotted];
m4_2199 -> m4_2200  [key=0, style=solid];
m4_2200 -> m4_34  [key=2, style=dotted];
m4_2200 -> m4_2201  [key=0, style=solid];
m4_2196 -> m4_2197  [key=0, style=solid];
m4_2201 -> m4_2195  [key=0, style=bold, color=blue];
m4_854 -> m4_855  [key=0, style=solid];
m4_856 -> m4_47  [key=2, style=dotted];
m4_856 -> m4_857  [key=0, style=solid];
m4_856 -> m4_858  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_857 -> m4_34  [key=2, style=dotted];
m4_857 -> m4_858  [key=0, style=solid];
m4_859 -> m4_34  [key=2, style=dotted];
m4_859 -> m4_860  [key=0, style=solid];
m4_860 -> m4_34  [key=2, style=dotted];
m4_860 -> m4_861  [key=0, style=solid];
m4_861 -> m4_34  [key=2, style=dotted];
m4_861 -> m4_862  [key=0, style=solid];
m4_862 -> m4_34  [key=2, style=dotted];
m4_862 -> m4_863  [key=0, style=solid];
m4_863 -> m4_34  [key=2, style=dotted];
m4_863 -> m4_864  [key=0, style=solid];
m4_864 -> m4_34  [key=2, style=dotted];
m4_864 -> m4_865  [key=0, style=solid];
m4_865 -> m4_34  [key=2, style=dotted];
m4_865 -> m4_866  [key=0, style=solid];
m4_855 -> m4_856  [key=0, style=solid];
m4_855 -> m4_682  [key=2, style=dotted];
m4_855 -> m4_858  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_858 -> m4_859  [key=0, style=solid];
m4_858 -> m4_860  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_858 -> m4_861  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_858 -> m4_862  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_858 -> m4_863  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_858 -> m4_864  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_858 -> m4_865  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_858 -> m4_858  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_858 -> m4_867  [key=2, style=dotted];
m4_866 -> m4_854  [key=0, style=bold, color=blue];
m4_2661 -> m4_2662  [key=0, style=solid];
m4_2667 -> m4_12  [key=2, style=dotted];
m4_2667 -> m4_2668  [key=0, style=solid];
m4_2670 -> m4_12  [key=2, style=dotted];
m4_2670 -> m4_2671  [key=0, style=solid];
m4_2666 -> m4_47  [key=2, style=dotted];
m4_2666 -> m4_2667  [key=0, style=solid];
m4_2668 -> m4_34  [key=2, style=dotted];
m4_2668 -> m4_2669  [key=0, style=solid];
m4_2668 -> m4_2674  [key=2, style=dotted];
m4_2671 -> m4_34  [key=2, style=dotted];
m4_2671 -> m4_2672  [key=0, style=solid];
m4_2671 -> m4_2674  [key=2, style=dotted];
m4_2669 -> m4_2670  [key=0, style=solid];
m4_2669 -> m4_65  [key=2, style=dotted];
m4_2662 -> m4_2666  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m4_2662 -> m4_2669  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m4_2662 -> m4_2663  [key=0, style=solid];
m4_2662 -> m4_2658  [key=2, style=dotted];
m4_2662 -> m4_2665  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m4_2663 -> m4_2666  [key=0, style=solid];
m4_2663 -> m4_2673  [key=2, style=dotted];
m4_2665 -> m4_2666  [key=0, style=solid];
m4_2665 -> m4_64  [key=2, style=dotted];
m4_2664 -> m4_2665  [key=0, style=solid];
m4_2672 -> m4_2661  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_8  [key=2, style=dotted];
m4_1 -> m4_4  [key=2, style=dotted];
m4_2 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_8  [key=2, style=dotted];
m4_2 -> m4_5  [key=2, style=dotted];
m4_2 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label=utcOffset];
m4_3 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_8  [key=2, style=dotted];
m4_3 -> m4_0  [key=0, style=bold, color=blue];
m4_4 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_8  [key=2, style=dotted];
m4_5 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_8  [key=2, style=dotted];
m4_6 -> m4_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_8  [key=2, style=dotted];
m4_7 -> m4_0  [key=0, style=bold, color=blue];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [key=2, style=dotted];
m4_2652 -> m4_2653  [key=0, style=solid];
m4_2654 -> m4_65  [key=2, style=dotted];
m4_2654 -> m4_2655  [key=0, style=solid];
m4_2655 -> m4_67  [key=2, style=dotted];
m4_2655 -> m4_2656  [key=0, style=solid];
m4_2653 -> m4_2654  [key=0, style=solid];
m4_2653 -> m4_2657  [key=2, style=dotted];
m4_2656 -> m4_2652  [key=0, style=bold, color=blue];
m4_2094 -> m4_2095  [key=0, style=solid];
m4_2102 -> m4_12  [key=2, style=dotted];
m4_2102 -> m4_2103  [key=0, style=solid];
m4_2103 -> m4_34  [key=2, style=dotted];
m4_2103 -> m4_2104  [key=0, style=solid];
m4_2099 -> m4_2102  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2099 -> m4_2100  [key=0, style=solid];
m4_2099 -> m4_65  [key=2, style=dotted];
m4_2099 -> m4_2101  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2101 -> m4_2102  [key=0, style=solid];
m4_2101 -> m4_67  [key=2, style=dotted];
m4_2095 -> m4_2103  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m4_2095 -> m4_2099  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m4_2095 -> m4_2096  [key=0, style=solid];
m4_2095 -> m4_2105  [key=2, style=dotted];
m4_2095 -> m4_2098  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m4_2098 -> m4_2099  [key=0, style=solid];
m4_2100 -> m4_2101  [key=0, style=solid];
m4_2096 -> m4_2098  [key=1, style=dashed, color=darkseagreen4, label=document];
m4_2096 -> m4_2097  [key=0, style=solid];
m4_2096 -> m4_2106  [key=2, style=dotted];
m4_2097 -> m4_2098  [key=0, style=solid];
m4_2097 -> m4_2107  [key=2, style=dotted];
m4_2104 -> m4_2094  [key=0, style=bold, color=blue];
m4_8 -> m4_6  [key=0, style=bold, color=blue];
m4_1854 -> m4_1855  [key=0, style=solid];
m4_1855 -> m4_1856  [key=0, style=solid];
m4_1855 -> m4_1857  [key=2, style=dotted];
m4_1856 -> m4_1854  [key=0, style=bold, color=blue];
m4_3186 -> m4_3187  [key=0, style=solid];
m4_3187 -> m4_3188  [key=0, style=solid];
m4_3187 -> m4_3190  [key=2, style=dotted];
m4_3188 -> m4_3189  [key=0, style=solid];
m4_3188 -> m4_3191  [key=2, style=dotted];
m4_3189 -> m4_3186  [key=0, style=bold, color=blue];
m4_2377 -> m4_2378  [key=0, style=solid];
m4_2381 -> m4_12  [key=2, style=dotted];
m4_2381 -> m4_2382  [key=0, style=solid];
m4_2381 -> m4_2383  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_2381 -> m4_2384  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_2380 -> m4_47  [key=2, style=dotted];
m4_2380 -> m4_2381  [key=0, style=solid];
m4_2382 -> m4_34  [key=2, style=dotted];
m4_2382 -> m4_2383  [key=0, style=solid];
m4_2383 -> m4_34  [key=2, style=dotted];
m4_2383 -> m4_2384  [key=0, style=solid];
m4_2384 -> m4_34  [key=2, style=dotted];
m4_2384 -> m4_2385  [key=0, style=solid];
m4_2378 -> m4_2380  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_2378 -> m4_2379  [key=0, style=solid];
m4_2378 -> m4_2386  [key=2, style=dotted];
m4_2379 -> m4_2380  [key=0, style=solid];
m4_2379 -> m4_2387  [key=2, style=dotted];
m4_2385 -> m4_2377  [key=0, style=bold, color=blue];
m4_1384 -> m4_1385  [key=0, style=solid];
m4_1389 -> m4_12  [key=2, style=dotted];
m4_1389 -> m4_1390  [key=0, style=solid];
m4_1390 -> m4_34  [key=2, style=dotted];
m4_1390 -> m4_1391  [key=0, style=solid];
m4_1390 -> m4_1381  [key=2, style=dotted];
m4_1387 -> m4_1389  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1387 -> m4_1388  [key=0, style=solid];
m4_1387 -> m4_65  [key=2, style=dotted];
m4_1388 -> m4_1389  [key=0, style=solid];
m4_1388 -> m4_67  [key=2, style=dotted];
m4_1385 -> m4_1387  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1385 -> m4_1386  [key=0, style=solid];
m4_1385 -> m4_1375  [key=2, style=dotted];
m4_1386 -> m4_1387  [key=0, style=solid];
m4_1391 -> m4_1384  [key=0, style=bold, color=blue];
m4_2939 -> m4_2940  [key=0, style=solid];
m4_2940 -> m4_2942  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2940 -> m4_2941  [key=0, style=solid];
m4_2940 -> m4_8  [key=2, style=dotted];
m4_2941 -> m4_2939  [key=0, style=bold, color=blue];
m4_2626 -> m4_2627  [key=0, style=solid];
m4_2626 -> m4_2628  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_2626 -> m4_2629  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_2627 -> m4_2628  [key=0, style=solid];
m4_2628 -> m4_2629  [key=0, style=solid];
m4_2629 -> m4_2630  [key=0, style=solid];
m4_2630 -> m4_2626  [key=0, style=bold, color=blue];
m4_1779 -> m4_1780  [key=0, style=solid];
m4_1783 -> m4_34  [key=2, style=dotted];
m4_1783 -> m4_1784  [key=0, style=solid];
m4_1781 -> m4_1783  [key=1, style=dashed, color=darkseagreen4, label=cISO];
m4_1781 -> m4_1782  [key=0, style=solid];
m4_1781 -> m4_95  [key=2, style=dotted];
m4_1781 -> m4_878  [key=2, style=dotted];
m4_1781 -> m4_96  [key=2, style=dotted];
m4_1782 -> m4_1783  [key=0, style=solid];
m4_1782 -> m4_95  [key=2, style=dotted];
m4_1782 -> m4_96  [key=2, style=dotted];
m4_1780 -> m4_1781  [key=0, style=solid];
m4_1780 -> m4_1782  [key=1, style=dashed, color=darkseagreen4, label=jsonIsoText];
m4_1784 -> m4_1779  [key=0, style=bold, color=blue];
m4_3352 -> m4_3353  [key=0, style=solid];
m4_3357 -> m4_34  [key=2, style=dotted];
m4_3357 -> m4_3357  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m4_3357 -> m4_3358  [key=0, style=solid];
m4_3357 -> m4_839  [key=2, style=dotted];
m4_3358 -> m4_34  [key=2, style=dotted];
m4_3358 -> m4_3358  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m4_3358 -> m4_3359  [key=0, style=solid];
m4_3358 -> m4_3361  [key=2, style=dotted];
m4_3356 -> m4_3357  [key=0, style=solid];
m4_3355 -> m4_3356  [key=0, style=solid];
m4_3355 -> m4_3360  [key=2, style=dotted];
m4_3354 -> m4_95  [key=2, style=dotted];
m4_3354 -> m4_3355  [key=0, style=solid];
m4_3353 -> m4_3355  [key=1, style=dashed, color=darkseagreen4, label=content];
m4_3353 -> m4_3354  [key=0, style=solid];
m4_3359 -> m4_3352  [key=0, style=bold, color=blue];
m4_1010 -> m4_1011  [key=0, style=solid];
m4_1014 -> m4_12  [key=2, style=dotted];
m4_1014 -> m4_1015  [key=0, style=solid];
m4_1012 -> m4_47  [key=2, style=dotted];
m4_1012 -> m4_1014  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1012 -> m4_1013  [key=0, style=solid];
m4_1013 -> m4_34  [key=2, style=dotted];
m4_1013 -> m4_1014  [key=0, style=solid];
m4_1015 -> m4_34  [key=2, style=dotted];
m4_1015 -> m4_1016  [key=0, style=solid];
m4_1011 -> m4_1012  [key=0, style=solid];
m4_1011 -> m4_1017  [key=2, style=dotted];
m4_1016 -> m4_1010  [key=0, style=bold, color=blue];
m4_1332 -> m4_1333  [key=0, style=solid];
m4_1334 -> m4_12  [key=2, style=dotted];
m4_1334 -> m4_1335  [key=0, style=solid];
m4_1334 -> m4_1336  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1334 -> m4_1337  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1334 -> m4_1338  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1335 -> m4_34  [key=2, style=dotted];
m4_1335 -> m4_1336  [key=0, style=solid];
m4_1336 -> m4_34  [key=2, style=dotted];
m4_1336 -> m4_1337  [key=0, style=solid];
m4_1337 -> m4_34  [key=2, style=dotted];
m4_1337 -> m4_1338  [key=0, style=solid];
m4_1338 -> m4_34  [key=2, style=dotted];
m4_1338 -> m4_1339  [key=0, style=solid];
m4_1333 -> m4_1334  [key=0, style=solid];
m4_1339 -> m4_1332  [key=0, style=bold, color=blue];
m4_3190 -> m4_3192  [key=0, style=solid];
m4_3190 -> m4_3195  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_3193 -> m4_119  [key=2, style=dotted];
m4_3193 -> m4_3194  [key=0, style=solid];
m4_3193 -> m4_3195  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_3196 -> m4_2714  [key=2, style=dotted];
m4_3196 -> m4_3197  [key=0, style=solid];
m4_3194 -> n0  [key=2, style=dotted];
m4_3194 -> m4_3195  [key=0, style=solid];
m4_3192 -> m4_3193  [key=0, style=solid];
m4_3192 -> m4_2709  [key=2, style=dotted];
m4_3192 -> m4_3196  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m4_3192 -> m4_3195  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m4_3195 -> m4_3196  [key=0, style=solid];
m4_3195 -> m4_561  [key=2, style=dotted];
m4_3197 -> m4_3190  [key=0, style=bold, color=blue];
m4_2880 -> m4_2881  [key=0, style=solid];
m4_2884 -> m4_12  [key=2, style=dotted];
m4_2884 -> m4_2885  [key=0, style=solid];
m4_2884 -> m4_2886  [key=1, style=dashed, color=darkseagreen4, label=actual];
m4_2884 -> m4_2887  [key=1, style=dashed, color=darkseagreen4, label=actual];
m4_2885 -> m4_34  [key=2, style=dotted];
m4_2885 -> m4_2886  [key=0, style=solid];
m4_2885 -> m4_976  [key=2, style=dotted];
m4_2886 -> m4_34  [key=2, style=dotted];
m4_2886 -> m4_2887  [key=0, style=solid];
m4_2886 -> m4_976  [key=2, style=dotted];
m4_2882 -> m4_2884  [key=1, style=dashed, color=darkseagreen4, label=jsonString];
m4_2882 -> m4_2883  [key=0, style=solid];
m4_2882 -> m4_65  [key=2, style=dotted];
m4_2883 -> m4_2884  [key=0, style=solid];
m4_2883 -> m4_67  [key=2, style=dotted];
m4_2887 -> m4_2888  [key=0, style=solid];
m4_2881 -> m4_2882  [key=0, style=solid];
m4_2881 -> m4_976  [key=2, style=dotted];
m4_2881 -> m4_831  [key=2, style=dotted];
m4_2881 -> m4_2890  [key=2, style=dotted];
m4_2888 -> m4_2889  [key=0, style=solid];
m4_2888 -> m4_177  [key=2, style=dotted];
m4_2888 -> m4_2749  [key=2, style=dotted];
m4_2889 -> m4_2880  [key=0, style=bold, color=blue];
m4_141 -> m4_142  [key=0, style=solid];
m4_144 -> m4_145  [key=0, style=solid, color=green];
m4_144 -> m4_12  [key=2, style=dotted, color=green];
m4_144 -> m4_146  [key=1, style=dashed, color=green, label=deserialized];
m4_144 -> m4_147  [key=1, style=dashed, color=green, label=deserialized];
m4_143 -> m4_144  [key=0, style=solid, color=green];
m4_143 -> m4_47  [key=2, style=dotted];
m4_145 -> m4_146  [key=0, style=solid];
m4_145 -> m4_34  [key=2, style=dotted];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_34  [key=2, style=dotted];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_34  [key=2, style=dotted];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_145  [key=1, style=dashed, color=darkseagreen4, label=input];
m4_142 -> m4_146  [key=1, style=dashed, color=darkseagreen4, label=input];
m4_142 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label=input];
m4_142 -> m4_149  [key=2, style=dotted];
m4_148 -> m4_141  [key=0, style=bold, color=blue];
m4_3225 -> m4_3226  [key=0, style=solid];
m4_3231 -> m4_34  [key=2, style=dotted];
m4_3231 -> m4_3232  [key=0, style=solid];
m4_3229 -> m4_3231  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_3229 -> m4_3230  [key=0, style=solid];
m4_3229 -> m4_117  [key=2, style=dotted];
m4_3229 -> m4_118  [key=2, style=dotted];
m4_3229 -> m4_2297  [key=2, style=dotted];
m4_3230 -> m4_3231  [key=0, style=solid];
m4_3230 -> m4_520  [key=2, style=dotted];
m4_3232 -> m4_3233  [key=0, style=solid];
m4_3226 -> m4_3229  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3226 -> m4_3227  [key=0, style=solid];
m4_3226 -> m4_3234  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3226 -> m4_3237  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3228 -> m4_3229  [key=0, style=solid];
m4_3228 -> m4_558  [key=2, style=dotted];
m4_3227 -> m4_3232  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_3227 -> m4_95  [key=2, style=dotted];
m4_3227 -> m4_3228  [key=0, style=solid];
m4_3227 -> m4_3233  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_3233 -> m4_3234  [key=0, style=solid];
m4_3233 -> m4_558  [key=2, style=dotted];
m4_3233 -> m4_3237  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_3234 -> m4_8  [key=2, style=dotted];
m4_3234 -> m4_3235  [key=0, style=solid];
m4_3234 -> m4_3236  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3235 -> m4_3225  [key=0, style=bold, color=blue];
m4_2012 -> m4_2013  [key=0, style=solid];
m4_2014 -> m4_65  [key=2, style=dotted];
m4_2014 -> m4_2015  [key=0, style=solid];
m4_2017 -> m4_65  [key=2, style=dotted];
m4_2017 -> m4_2018  [key=0, style=solid];
m4_2015 -> m4_67  [key=2, style=dotted];
m4_2015 -> m4_2016  [key=0, style=solid];
m4_2018 -> m4_67  [key=2, style=dotted];
m4_2018 -> m4_2019  [key=0, style=solid];
m4_2013 -> m4_2014  [key=0, style=solid];
m4_2013 -> m4_2020  [key=2, style=dotted];
m4_2016 -> m4_2017  [key=0, style=solid];
m4_2016 -> m4_2021  [key=2, style=dotted];
m4_2019 -> m4_2012  [key=0, style=bold, color=blue];
m4_3599 -> m4_3600  [key=0, style=solid];
m4_3600 -> m4_3583  [key=2, style=dotted];
m4_3600 -> m4_3601  [key=0, style=solid];
m4_3601 -> m4_3599  [key=0, style=bold, color=blue];
m4_2430 -> m4_2431  [key=0, style=solid];
m4_2431 -> m4_95  [key=2, style=dotted];
m4_2431 -> m4_96  [key=2, style=dotted];
m4_2431 -> m4_2432  [key=0, style=solid];
m4_2432 -> m4_2430  [key=0, style=bold, color=blue];
m4_2951 -> m4_2952  [key=0, style=solid];
m4_2952 -> m4_2954  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2952 -> m4_2953  [key=0, style=solid];
m4_2952 -> m4_8  [key=2, style=dotted];
m4_2953 -> m4_2951  [key=0, style=bold, color=blue];
m4_1225 -> m4_1226  [key=0, style=solid];
m4_1227 -> m4_12  [key=2, style=dotted];
m4_1227 -> m4_1228  [key=0, style=solid];
m4_1226 -> m4_1227  [key=0, style=solid];
m4_1228 -> m4_1225  [key=0, style=bold, color=blue];
m4_1715 -> m4_1716  [key=0, style=solid];
m4_1716 -> m4_12  [key=2, style=dotted];
m4_1716 -> m4_1717  [key=0, style=solid];
m4_1716 -> m4_1718  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1716 -> m4_1719  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1716 -> m4_1720  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1716 -> m4_1721  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1716 -> m4_1722  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1716 -> m4_1723  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1716 -> m4_1724  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1716 -> m4_1725  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_1719 -> m4_34  [key=2, style=dotted];
m4_1719 -> m4_1720  [key=0, style=solid];
m4_1719 -> m4_122  [key=2, style=dotted];
m4_1720 -> m4_34  [key=2, style=dotted];
m4_1720 -> m4_1721  [key=0, style=solid];
m4_1720 -> m4_122  [key=2, style=dotted];
m4_1721 -> m4_34  [key=2, style=dotted];
m4_1721 -> m4_1722  [key=0, style=solid];
m4_1722 -> m4_34  [key=2, style=dotted];
m4_1722 -> m4_1723  [key=0, style=solid];
m4_1723 -> m4_34  [key=2, style=dotted];
m4_1723 -> m4_1724  [key=0, style=solid];
m4_1724 -> m4_34  [key=2, style=dotted];
m4_1724 -> m4_1725  [key=0, style=solid];
m4_1725 -> m4_34  [key=2, style=dotted];
m4_1725 -> m4_1726  [key=0, style=solid];
m4_1717 -> m4_1718  [key=0, style=solid];
m4_1717 -> m4_520  [key=2, style=dotted];
m4_1718 -> m4_1719  [key=0, style=solid];
m4_1718 -> m4_520  [key=2, style=dotted];
m4_1726 -> m4_1715  [key=0, style=bold, color=blue];
m4_178 -> m4_179  [key=0, style=solid];
m4_181 -> m4_34  [key=2, style=dotted];
m4_181 -> m4_182  [key=0, style=solid];
m4_182 -> m4_34  [key=2, style=dotted];
m4_182 -> m4_183  [key=0, style=solid];
m4_183 -> m4_34  [key=2, style=dotted];
m4_183 -> m4_184  [key=0, style=solid];
m4_184 -> m4_34  [key=2, style=dotted];
m4_184 -> m4_185  [key=0, style=solid];
m4_184 -> m4_200  [key=2, style=dotted];
m4_185 -> m4_34  [key=2, style=dotted];
m4_185 -> m4_186  [key=0, style=solid];
m4_186 -> m4_34  [key=2, style=dotted];
m4_186 -> m4_187  [key=0, style=solid];
m4_187 -> m4_34  [key=2, style=dotted];
m4_187 -> m4_188  [key=0, style=solid];
m4_191 -> m4_34  [key=2, style=dotted];
m4_191 -> m4_192  [key=0, style=solid];
m4_195 -> m4_34  [key=2, style=dotted];
m4_195 -> m4_196  [key=0, style=solid];
m4_196 -> m4_34  [key=2, style=dotted];
m4_196 -> m4_197  [key=0, style=solid];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_182  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_180 -> m4_183  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_180 -> m4_184  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_180 -> m4_185  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_180 -> m4_186  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_180 -> m4_187  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_180 -> m4_199  [key=2, style=dotted];
m4_180 -> m4_188  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_188 -> m4_201  [key=2, style=dotted];
m4_188 -> m4_189  [key=0, style=solid];
m4_188 -> m4_202  [key=2, style=dotted];
m4_188 -> m4_203  [key=2, style=dotted];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_199  [key=2, style=dotted];
m4_190 -> m4_192  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_192 -> m4_201  [key=2, style=dotted];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_202  [key=2, style=dotted];
m4_192 -> m4_203  [key=2, style=dotted];
m4_194 -> m4_195  [key=0, style=solid];
m4_194 -> m4_196  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_194 -> m4_199  [key=2, style=dotted];
m4_194 -> m4_197  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_197 -> m4_201  [key=2, style=dotted];
m4_197 -> m4_198  [key=0, style=solid];
m4_197 -> m4_202  [key=2, style=dotted];
m4_197 -> m4_203  [key=2, style=dotted];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_188  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_189 -> m4_190  [key=0, style=solid];
m4_189 -> m4_192  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_197  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_198 -> m4_178  [key=0, style=bold, color=blue];
m4_1546 -> m4_1547  [key=0, style=solid];
m4_1547 -> m4_1551  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1547 -> m4_1548  [key=0, style=solid];
m4_1548 -> m4_1550  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1548 -> m4_1549  [key=0, style=solid];
m4_1548 -> m4_8  [key=2, style=dotted];
m4_1549 -> m4_1546  [key=0, style=bold, color=blue];
m4_667 -> m4_668  [key=0, style=solid];
m4_673 -> m4_47  [key=2, style=dotted];
m4_673 -> m4_674  [key=0, style=solid];
m4_675 -> m4_34  [key=2, style=dotted];
m4_675 -> m4_676  [key=0, style=solid];
m4_676 -> m4_34  [key=2, style=dotted];
m4_676 -> m4_677  [key=0, style=solid];
m4_676 -> m4_683  [key=2, style=dotted];
m4_677 -> m4_34  [key=2, style=dotted];
m4_677 -> m4_678  [key=0, style=solid];
m4_678 -> m4_34  [key=2, style=dotted];
m4_678 -> m4_679  [key=0, style=solid];
m4_679 -> m4_34  [key=2, style=dotted];
m4_679 -> m4_680  [key=0, style=solid];
m4_680 -> m4_34  [key=2, style=dotted];
m4_680 -> m4_681  [key=0, style=solid];
m4_668 -> m4_673  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_668 -> m4_669  [key=0, style=solid];
m4_668 -> m4_682  [key=2, style=dotted];
m4_668 -> m4_670  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_668 -> m4_671  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_668 -> m4_672  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_672 -> m4_673  [key=0, style=solid];
m4_674 -> m4_675  [key=0, style=solid];
m4_674 -> m4_676  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_674 -> m4_677  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_674 -> m4_678  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_674 -> m4_679  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_674 -> m4_680  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_674 -> m4_666  [key=2, style=dotted];
m4_669 -> m4_670  [key=0, style=solid];
m4_670 -> m4_683  [key=2, style=dotted];
m4_670 -> m4_671  [key=0, style=solid];
m4_671 -> m4_672  [key=0, style=solid];
m4_681 -> m4_667  [key=0, style=bold, color=blue];
m4_3572 -> m4_3579  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m4_3572 -> m4_3573  [key=0, style=solid];
m4_3572 -> m4_3575  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m4_3572 -> m4_3577  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m4_3580 -> m4_556  [key=2, style=dotted];
m4_3580 -> m4_3582  [key=0, style=solid];
m4_3579 -> m4_3580  [key=0, style=solid];
m4_3579 -> m4_3581  [key=0, style=solid];
m4_3574 -> m4_3582  [key=0, style=solid];
m4_3576 -> m4_3582  [key=0, style=solid];
m4_3578 -> m4_3582  [key=0, style=solid];
m4_3577 -> m4_3579  [key=0, style=solid];
m4_3577 -> m4_3578  [key=0, style=solid];
m4_3581 -> m4_3582  [key=0, style=solid];
m4_3581 -> m4_3583  [key=2, style=dotted];
m4_3573 -> m4_3574  [key=0, style=solid];
m4_3573 -> m4_3575  [key=0, style=solid];
m4_3575 -> m4_3576  [key=0, style=solid];
m4_3575 -> m4_3577  [key=0, style=solid];
m4_3582 -> m4_3572  [key=0, style=bold, color=blue];
m4_2321 -> m4_2322  [key=0, style=solid];
m4_2330 -> m4_12  [key=2, style=dotted];
m4_2330 -> m4_2331  [key=0, style=solid];
m4_2330 -> m4_2332  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m4_2330 -> m4_2333  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m4_2330 -> m4_2334  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m4_2330 -> m4_2335  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m4_2330 -> m4_2336  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m4_2332 -> m4_34  [key=2, style=dotted];
m4_2332 -> m4_2333  [key=0, style=solid];
m4_2334 -> m4_34  [key=2, style=dotted];
m4_2334 -> m4_2335  [key=0, style=solid];
m4_2338 -> m4_34  [key=2, style=dotted];
m4_2338 -> m4_2339  [key=0, style=solid];
m4_2340 -> m4_34  [key=2, style=dotted];
m4_2340 -> m4_2341  [key=0, style=solid];
m4_2328 -> m4_2330  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2328 -> m4_2329  [key=0, style=solid];
m4_2328 -> m4_2343  [key=2, style=dotted];
m4_2329 -> m4_2330  [key=0, style=solid];
m4_2329 -> m4_67  [key=2, style=dotted];
m4_2331 -> m4_2332  [key=0, style=solid];
m4_2331 -> m4_469  [key=2, style=dotted];
m4_2333 -> m4_2334  [key=0, style=solid];
m4_2333 -> m4_469  [key=2, style=dotted];
m4_2335 -> m4_2336  [key=0, style=solid];
m4_2335 -> m4_469  [key=2, style=dotted];
m4_2336 -> m4_2338  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_2336 -> m4_2340  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_2336 -> m4_2337  [key=0, style=solid];
m4_2336 -> m4_2339  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_2322 -> m4_2332  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2322 -> m4_2334  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2322 -> m4_2338  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2322 -> m4_2340  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2322 -> m4_2328  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2322 -> m4_2323  [key=0, style=solid];
m4_2322 -> m4_2342  [key=2, style=dotted];
m4_2322 -> m4_2324  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2322 -> m4_2325  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2322 -> m4_2326  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2322 -> m4_2327  [key=1, style=dashed, color=darkseagreen4, label=expando];
m4_2337 -> m4_2338  [key=0, style=solid];
m4_2337 -> m4_469  [key=2, style=dotted];
m4_2339 -> m4_2340  [key=0, style=solid];
m4_2339 -> m4_469  [key=2, style=dotted];
m4_2327 -> m4_2328  [key=0, style=solid];
m4_2327 -> m4_831  [key=2, style=dotted];
m4_2323 -> m4_2324  [key=0, style=solid];
m4_2324 -> m4_2325  [key=0, style=solid];
m4_2325 -> m4_2342  [key=2, style=dotted];
m4_2325 -> m4_2326  [key=0, style=solid];
m4_2326 -> m4_2327  [key=0, style=solid];
m4_2341 -> m4_2321  [key=0, style=bold, color=blue];
m4_413 -> m4_414  [key=0, style=solid];
m4_414 -> m4_415  [key=0, style=solid];
m4_415 -> m4_413  [key=0, style=bold, color=blue];
m4_3587 -> m4_3588  [key=0, style=solid];
m4_3588 -> m4_3583  [key=2, style=dotted];
m4_3588 -> m4_3589  [key=0, style=solid];
m4_3589 -> m4_3587  [key=0, style=bold, color=blue];
m4_1589 -> m4_1590  [key=0, style=solid];
m4_1591 -> m4_12  [key=2, style=dotted];
m4_1591 -> m4_1592  [key=0, style=solid];
m4_1592 -> m4_34  [key=2, style=dotted];
m4_1592 -> m4_1593  [key=0, style=solid];
m4_1590 -> m4_1591  [key=0, style=solid];
m4_1593 -> m4_1589  [key=0, style=bold, color=blue];
m4_3246 -> m4_3247  [key=0, style=solid];
m4_3247 -> m4_8  [key=2, style=dotted];
m4_3247 -> m4_3248  [key=0, style=solid];
m4_3247 -> m4_3249  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3248 -> m4_3246  [key=0, style=bold, color=blue];
m4_3698 -> m4_3699  [key=0, style=solid];
m4_3705 -> m4_34  [key=2, style=dotted];
m4_3705 -> m4_3706  [key=0, style=solid];
m4_3705 -> m4_1413  [key=2, style=dotted];
m4_3699 -> m4_3705  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3699 -> m4_683  [key=2, style=dotted];
m4_3699 -> m4_3700  [key=0, style=solid];
m4_3699 -> m4_3702  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3704 -> m4_3705  [key=0, style=solid];
m4_3704 -> m4_96  [key=2, style=dotted];
m4_3702 -> m4_554  [key=2, style=dotted];
m4_3702 -> m4_3704  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3702 -> m4_463  [key=2, style=dotted];
m4_3702 -> m4_3703  [key=0, style=solid];
m4_3700 -> m4_3701  [key=0, style=solid];
m4_3701 -> m4_3704  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_3701 -> m4_95  [key=2, style=dotted];
m4_3701 -> m4_3702  [key=0, style=solid];
m4_3703 -> m4_3704  [key=0, style=solid];
m4_3703 -> m4_67  [key=2, style=dotted];
m4_3706 -> m4_3698  [key=0, style=bold, color=blue];
m4_1637 -> m4_1638  [key=0, style=solid];
m4_1642 -> m4_12  [key=2, style=dotted];
m4_1642 -> m4_1643  [key=0, style=solid];
m4_1643 -> m4_34  [key=2, style=dotted];
m4_1643 -> m4_1643  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m4_1643 -> m4_1644  [key=0, style=solid];
m4_1643 -> m4_1645  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m4_1644 -> m4_34  [key=2, style=dotted];
m4_1644 -> m4_1645  [key=0, style=solid];
m4_1645 -> m4_34  [key=2, style=dotted];
m4_1645 -> m4_1645  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m4_1645 -> m4_1646  [key=0, style=solid];
m4_1646 -> m4_34  [key=2, style=dotted];
m4_1646 -> m4_1647  [key=0, style=solid];
m4_1639 -> m4_1642  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1639 -> m4_1640  [key=0, style=solid];
m4_1639 -> m4_65  [key=2, style=dotted];
m4_1639 -> m4_1641  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1641 -> m4_1642  [key=0, style=solid];
m4_1641 -> m4_67  [key=2, style=dotted];
m4_1638 -> m4_1643  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m4_1638 -> m4_1639  [key=0, style=solid];
m4_1638 -> m4_1648  [key=2, style=dotted];
m4_1640 -> m4_1641  [key=0, style=solid];
m4_1640 -> m4_66  [key=2, style=dotted];
m4_1647 -> m4_1637  [key=0, style=bold, color=blue];
m4_2858 -> m4_2859  [key=0, style=solid];
m4_2859 -> m4_2861  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2859 -> m4_8  [key=2, style=dotted];
m4_2859 -> m4_2860  [key=0, style=solid];
m4_2860 -> m4_2858  [key=0, style=bold, color=blue];
m4_3716 -> m4_3717  [key=0, style=solid];
m4_3723 -> m4_34  [key=2, style=dotted];
m4_3723 -> m4_3724  [key=0, style=solid];
m4_3723 -> m4_1413  [key=2, style=dotted];
m4_3717 -> m4_3723  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3717 -> m4_123  [key=2, style=dotted];
m4_3717 -> m4_3718  [key=0, style=solid];
m4_3717 -> m4_3720  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3722 -> m4_3723  [key=0, style=solid];
m4_3722 -> m4_96  [key=2, style=dotted];
m4_3720 -> m4_554  [key=2, style=dotted];
m4_3720 -> m4_3722  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3720 -> m4_463  [key=2, style=dotted];
m4_3720 -> m4_3721  [key=0, style=solid];
m4_3718 -> m4_3719  [key=0, style=solid];
m4_3719 -> m4_3722  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_3719 -> m4_95  [key=2, style=dotted];
m4_3719 -> m4_3720  [key=0, style=solid];
m4_3721 -> m4_3722  [key=0, style=solid];
m4_3721 -> m4_67  [key=2, style=dotted];
m4_3724 -> m4_3716  [key=0, style=bold, color=blue];
m4_813 -> m4_814  [key=0, style=solid];
m4_814 -> m4_818  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_814 -> m4_815  [key=0, style=solid];
m4_815 -> m4_817  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_815 -> m4_816  [key=0, style=solid];
m4_815 -> m4_8  [key=2, style=dotted];
m4_816 -> m4_813  [key=0, style=bold, color=blue];
m4_1301 -> m4_1302  [key=0, style=solid];
m4_1306 -> m4_12  [key=2, style=dotted];
m4_1306 -> m4_1307  [key=0, style=solid];
m4_1304 -> m4_47  [key=2, style=dotted];
m4_1304 -> m4_1306  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1304 -> m4_1305  [key=0, style=solid];
m4_1307 -> m4_47  [key=2, style=dotted];
m4_1307 -> m4_1308  [key=0, style=solid];
m4_1305 -> m4_34  [key=2, style=dotted];
m4_1305 -> m4_1306  [key=0, style=solid];
m4_1308 -> m4_34  [key=2, style=dotted];
m4_1308 -> m4_1309  [key=0, style=solid];
m4_1302 -> m4_1304  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_1302 -> m4_1303  [key=0, style=solid];
m4_1302 -> m4_1310  [key=2, style=dotted];
m4_1303 -> m4_1304  [key=0, style=solid];
m4_1309 -> m4_1301  [key=0, style=bold, color=blue];
m4_3166 -> m4_3167  [key=0, style=solid];
m4_3170 -> m4_12  [key=2, style=dotted];
m4_3170 -> m4_3171  [key=0, style=solid];
m4_3170 -> m4_3172  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_3170 -> m4_3173  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_3171 -> m4_34  [key=2, style=dotted];
m4_3171 -> m4_3172  [key=0, style=solid];
m4_3172 -> m4_34  [key=2, style=dotted];
m4_3172 -> m4_3173  [key=0, style=solid];
m4_3172 -> m4_831  [key=2, style=dotted];
m4_3173 -> m4_34  [key=2, style=dotted];
m4_3173 -> m4_3174  [key=0, style=solid];
m4_3173 -> m4_831  [key=2, style=dotted];
m4_3168 -> m4_3170  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3168 -> m4_3169  [key=0, style=solid];
m4_3168 -> m4_95  [key=2, style=dotted];
m4_3168 -> m4_962  [key=2, style=dotted];
m4_3169 -> m4_3170  [key=0, style=solid];
m4_3169 -> m4_67  [key=2, style=dotted];
m4_3167 -> m4_3168  [key=0, style=solid];
m4_3167 -> m4_554  [key=2, style=dotted];
m4_3167 -> m4_831  [key=2, style=dotted];
m4_3174 -> m4_3166  [key=0, style=bold, color=blue];
m4_506 -> m4_507  [key=0, style=solid];
m4_508 -> m4_47  [key=2, style=dotted];
m4_508 -> m4_509  [key=0, style=solid];
m4_508 -> m4_510  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_510 -> m4_34  [key=2, style=dotted];
m4_510 -> m4_511  [key=0, style=solid];
m4_507 -> m4_508  [key=0, style=solid];
m4_507 -> m4_512  [key=2, style=dotted];
m4_507 -> m4_513  [key=2, style=dotted];
m4_509 -> m4_510  [key=0, style=solid];
m4_511 -> m4_506  [key=0, style=bold, color=blue];
m4_2675 -> m4_2676  [key=0, style=solid];
m4_2679 -> m4_12  [key=2, style=dotted];
m4_2679 -> m4_2680  [key=0, style=solid];
m4_2679 -> m4_2681  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2679 -> m4_2682  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2679 -> m4_2683  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2679 -> m4_2684  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2680 -> m4_34  [key=2, style=dotted];
m4_2680 -> m4_2681  [key=0, style=solid];
m4_2681 -> m4_34  [key=2, style=dotted];
m4_2681 -> m4_2682  [key=0, style=solid];
m4_2682 -> m4_34  [key=2, style=dotted];
m4_2682 -> m4_2683  [key=0, style=solid];
m4_2683 -> m4_34  [key=2, style=dotted];
m4_2683 -> m4_2684  [key=0, style=solid];
m4_2684 -> m4_34  [key=2, style=dotted];
m4_2684 -> m4_2685  [key=0, style=solid];
m4_2677 -> m4_2679  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2677 -> m4_2678  [key=0, style=solid];
m4_2677 -> m4_65  [key=2, style=dotted];
m4_2678 -> m4_2679  [key=0, style=solid];
m4_2678 -> m4_67  [key=2, style=dotted];
m4_2676 -> m4_2680  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2676 -> m4_2681  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2676 -> m4_2682  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2676 -> m4_2683  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2676 -> m4_2684  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2676 -> m4_2677  [key=0, style=solid];
m4_2676 -> m4_2686  [key=2, style=dotted];
m4_2685 -> m4_2675  [key=0, style=bold, color=blue];
m4_3528 -> m4_3529  [key=0, style=solid];
m4_3531 -> m4_34  [key=2, style=dotted];
m4_3531 -> m4_3532  [key=0, style=solid];
m4_3534 -> m4_34  [key=2, style=dotted];
m4_3534 -> m4_3535  [key=0, style=solid];
m4_3535 -> m4_34  [key=2, style=dotted];
m4_3535 -> m4_3536  [key=0, style=solid];
m4_3530 -> m4_3531  [key=0, style=solid];
m4_3530 -> m4_95  [key=2, style=dotted];
m4_3530 -> m4_275  [key=2, style=dotted];
m4_3530 -> m4_96  [key=2, style=dotted];
m4_3530 -> m4_3532  [key=1, style=dashed, color=darkseagreen4, label=people];
m4_3530 -> m4_3533  [key=1, style=dashed, color=darkseagreen4, label=people];
m4_3532 -> m4_3534  [key=1, style=dashed, color=darkseagreen4, label=john];
m4_3532 -> m4_3535  [key=1, style=dashed, color=darkseagreen4, label=john];
m4_3532 -> m4_3533  [key=0, style=solid];
m4_3533 -> m4_3534  [key=0, style=solid];
m4_3533 -> m4_3535  [key=1, style=dashed, color=darkseagreen4, label=jane];
m4_3529 -> m4_3530  [key=0, style=solid];
m4_3536 -> m4_3528  [key=0, style=bold, color=blue];
m4_1525 -> m4_1526  [key=0, style=solid];
m4_1526 -> m4_1530  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1526 -> m4_1527  [key=0, style=solid];
m4_1527 -> m4_1529  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1527 -> m4_1528  [key=0, style=solid];
m4_1527 -> m4_8  [key=2, style=dotted];
m4_1528 -> m4_1525  [key=0, style=bold, color=blue];
m4_3322 -> m4_3323  [key=0, style=solid];
m4_3324 -> m4_12  [key=2, style=dotted];
m4_3324 -> m4_3325  [key=0, style=solid];
m4_3324 -> m4_3326  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_3325 -> m4_34  [key=2, style=dotted];
m4_3325 -> m4_3326  [key=0, style=solid];
m4_3326 -> m4_34  [key=2, style=dotted];
m4_3326 -> m4_3327  [key=0, style=solid];
m4_3323 -> m4_3324  [key=0, style=solid];
m4_3327 -> m4_3322  [key=0, style=bold, color=blue];
m4_3811 -> m4_3812  [key=0, style=solid];
m4_3812 -> m4_2297  [key=2, style=dotted];
m4_3812 -> m4_3813  [key=0, style=solid];
m4_3812 -> m4_3815  [key=1, style=dashed, color=darkseagreen4, label=messageJObject];
m4_3812 -> m4_3818  [key=1, style=dashed, color=darkseagreen4, label=messageJObject];
m4_3813 -> m4_3814  [key=0, style=solid];
m4_3813 -> m4_3815  [key=0, style=solid];
m4_3815 -> m4_3816  [key=0, style=solid];
m4_3815 -> m4_3822  [key=2, style=dotted];
m4_3815 -> m4_3823  [key=2, style=dotted];
m4_3815 -> m4_3819  [key=1, style=dashed, color=darkseagreen4, label=address];
m4_3815 -> m4_3820  [key=1, style=dashed, color=darkseagreen4, label=address];
m4_3818 -> m4_3818  [key=1, style=dashed, color=darkseagreen4, label=displayNameToken];
m4_3818 -> m4_3819  [key=0, style=solid];
m4_3818 -> m4_3820  [key=0, style=solid];
m4_3818 -> m4_3824  [key=2, style=dotted];
m4_3818 -> m4_3823  [key=2, style=dotted];
m4_3818 -> m4_3825  [key=2, style=dotted];
m4_3814 -> m4_3821  [key=0, style=solid];
m4_3816 -> m4_3818  [key=1, style=dashed, color=darkseagreen4, label=displayNameToken];
m4_3816 -> m4_3817  [key=0, style=solid];
m4_3819 -> m4_3821  [key=0, style=solid];
m4_3819 -> m4_3826  [key=2, style=dotted];
m4_3820 -> m4_3821  [key=0, style=solid];
m4_3820 -> m4_3827  [key=2, style=dotted];
m4_3817 -> m4_3818  [key=0, style=solid];
m4_3821 -> m4_3811  [key=0, style=bold, color=blue];
m4_1567 -> m4_1568  [key=0, style=solid];
m4_1569 -> m4_12  [key=2, style=dotted];
m4_1569 -> m4_1570  [key=0, style=solid];
m4_1568 -> m4_1569  [key=0, style=solid];
m4_1570 -> m4_1571  [key=0, style=solid];
m4_1570 -> m4_1573  [key=0, style=solid];
m4_1570 -> m4_1187  [key=2, style=dotted];
m4_1571 -> m4_1572  [key=0, style=solid];
m4_1572 -> m4_1573  [key=0, style=solid];
m4_1572 -> m4_203  [key=2, style=dotted];
m4_1572 -> m4_1188  [key=2, style=dotted];
m4_1573 -> m4_1567  [key=0, style=bold, color=blue];
m4_277 -> m4_278  [key=0, style=solid];
m4_281 -> m4_34  [key=2, style=dotted];
m4_281 -> m4_282  [key=0, style=solid];
m4_283 -> m4_34  [key=2, style=dotted];
m4_283 -> m4_284  [key=0, style=solid];
m4_285 -> m4_34  [key=2, style=dotted];
m4_285 -> m4_286  [key=0, style=solid];
m4_287 -> m4_34  [key=2, style=dotted];
m4_287 -> m4_288  [key=0, style=solid];
m4_287 -> m4_270  [key=2, style=dotted];
m4_290 -> m4_34  [key=2, style=dotted];
m4_290 -> m4_291  [key=0, style=solid];
m4_292 -> m4_34  [key=2, style=dotted];
m4_292 -> m4_293  [key=0, style=solid];
m4_294 -> m4_34  [key=2, style=dotted];
m4_294 -> m4_295  [key=0, style=solid];
m4_294 -> m4_274  [key=2, style=dotted];
m4_296 -> m4_34  [key=2, style=dotted];
m4_296 -> m4_297  [key=0, style=solid];
m4_298 -> m4_34  [key=2, style=dotted];
m4_298 -> m4_299  [key=0, style=solid];
m4_300 -> m4_34  [key=2, style=dotted];
m4_300 -> m4_301  [key=0, style=solid];
m4_302 -> m4_34  [key=2, style=dotted];
m4_302 -> m4_303  [key=0, style=solid];
m4_304 -> m4_34  [key=2, style=dotted];
m4_304 -> m4_305  [key=0, style=solid];
m4_306 -> m4_34  [key=2, style=dotted];
m4_306 -> m4_307  [key=0, style=solid];
m4_308 -> m4_34  [key=2, style=dotted];
m4_308 -> m4_309  [key=0, style=solid];
m4_310 -> m4_34  [key=2, style=dotted];
m4_310 -> m4_311  [key=0, style=solid];
m4_312 -> m4_34  [key=2, style=dotted];
m4_312 -> m4_313  [key=0, style=solid];
m4_314 -> m4_34  [key=2, style=dotted];
m4_314 -> m4_315  [key=0, style=solid];
m4_316 -> m4_34  [key=2, style=dotted];
m4_316 -> m4_317  [key=0, style=solid];
m4_318 -> m4_34  [key=2, style=dotted];
m4_318 -> m4_319  [key=0, style=solid];
m4_320 -> m4_34  [key=2, style=dotted];
m4_320 -> m4_321  [key=0, style=solid];
m4_322 -> m4_34  [key=2, style=dotted];
m4_322 -> m4_323  [key=0, style=solid];
m4_325 -> m4_34  [key=2, style=dotted];
m4_325 -> m4_326  [key=0, style=solid];
m4_327 -> m4_34  [key=2, style=dotted];
m4_327 -> m4_328  [key=0, style=solid];
m4_330 -> m4_34  [key=2, style=dotted];
m4_330 -> m4_331  [key=0, style=solid];
m4_332 -> m4_34  [key=2, style=dotted];
m4_332 -> m4_333  [key=0, style=solid];
m4_334 -> m4_34  [key=2, style=dotted];
m4_334 -> m4_335  [key=0, style=solid];
m4_278 -> m4_281  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_283  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_285  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_287  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_290  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_292  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_294  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_296  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_298  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_300  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_302  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_304  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_306  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_308  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_310  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_312  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_314  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_316  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_318  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_320  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_322  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_325  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_327  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_330  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_332  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_334  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_279  [key=0, style=solid];
m4_278 -> m4_95  [key=2, style=dotted];
m4_278 -> m4_280  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_282  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_284  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_286  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_289  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_291  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_293  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_295  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_297  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_299  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_301  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_303  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_305  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_307  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_309  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_311  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_313  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_315  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_317  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_319  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_321  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_324  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_326  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_329  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_331  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_278 -> m4_333  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_279 -> m4_281  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_269  [key=2, style=dotted];
m4_280 -> m4_281  [key=0, style=solid];
m4_282 -> m4_283  [key=0, style=solid];
m4_284 -> m4_285  [key=0, style=solid];
m4_286 -> m4_287  [key=0, style=solid];
m4_286 -> m4_270  [key=2, style=dotted];
m4_288 -> m4_290  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m4_288 -> m4_289  [key=0, style=solid];
m4_288 -> m4_271  [key=2, style=dotted];
m4_289 -> m4_290  [key=0, style=solid];
m4_291 -> m4_292  [key=0, style=solid];
m4_291 -> m4_35  [key=2, style=dotted];
m4_291 -> m4_64  [key=2, style=dotted];
m4_293 -> m4_294  [key=0, style=solid];
m4_293 -> m4_273  [key=2, style=dotted];
m4_295 -> m4_296  [key=0, style=solid];
m4_297 -> m4_298  [key=0, style=solid];
m4_299 -> m4_300  [key=0, style=solid];
m4_301 -> m4_302  [key=0, style=solid];
m4_303 -> m4_304  [key=0, style=solid];
m4_305 -> m4_306  [key=0, style=solid];
m4_307 -> m4_308  [key=0, style=solid];
m4_309 -> m4_310  [key=0, style=solid];
m4_311 -> m4_312  [key=0, style=solid];
m4_313 -> m4_314  [key=0, style=solid];
m4_315 -> m4_316  [key=0, style=solid];
m4_317 -> m4_318  [key=0, style=solid];
m4_319 -> m4_320  [key=0, style=solid];
m4_321 -> m4_322  [key=0, style=solid];
m4_323 -> m4_325  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m4_323 -> m4_324  [key=0, style=solid];
m4_323 -> m4_275  [key=2, style=dotted];
m4_324 -> m4_325  [key=0, style=solid];
m4_326 -> m4_327  [key=0, style=solid];
m4_328 -> m4_330  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m4_328 -> m4_329  [key=0, style=solid];
m4_328 -> m4_276  [key=2, style=dotted];
m4_329 -> m4_330  [key=0, style=solid];
m4_331 -> m4_332  [key=0, style=solid];
m4_333 -> m4_334  [key=0, style=solid];
m4_335 -> m4_277  [key=0, style=bold, color=blue];
m4_555 -> m4_568  [key=0, style=solid];
m4_555 -> m4_569  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_568 -> m4_569  [key=0, style=solid];
m4_569 -> m4_570  [key=0, style=solid];
m4_570 -> m4_555  [key=0, style=bold, color=blue];
m4_2398 -> m4_2399  [key=0, style=solid];
m4_2403 -> m4_34  [key=2, style=dotted];
m4_2403 -> m4_2404  [key=0, style=solid];
m4_2404 -> m4_34  [key=2, style=dotted];
m4_2404 -> m4_2405  [key=0, style=solid];
m4_2402 -> m4_2403  [key=0, style=solid];
m4_2402 -> m4_2404  [key=1, style=dashed, color=darkseagreen4, label=meh];
m4_2402 -> m4_96  [key=2, style=dotted];
m4_2400 -> m4_2402  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_2400 -> m4_95  [key=2, style=dotted];
m4_2400 -> m4_2401  [key=0, style=solid];
m4_2401 -> m4_2402  [key=0, style=solid];
m4_2401 -> m4_962  [key=2, style=dotted];
m4_2399 -> m4_2400  [key=0, style=solid];
m4_2399 -> m4_2401  [key=1, style=dashed, color=darkseagreen4, label=derived];
m4_2399 -> m4_2390  [key=2, style=dotted];
m4_2405 -> m4_2398  [key=0, style=bold, color=blue];
m4_1553 -> m4_1554  [key=0, style=solid];
m4_1554 -> m4_1558  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1554 -> m4_1555  [key=0, style=solid];
m4_1555 -> m4_1557  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1555 -> m4_1556  [key=0, style=solid];
m4_1555 -> m4_8  [key=2, style=dotted];
m4_1556 -> m4_1553  [key=0, style=bold, color=blue];
m4_150 -> m4_151  [key=0, style=solid];
m4_153 -> m4_12  [key=2, style=dotted];
m4_153 -> m4_154  [key=0, style=solid];
m4_153 -> m4_155  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_153 -> m4_156  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_152 -> m4_47  [key=2, style=dotted];
m4_152 -> m4_153  [key=0, style=solid];
m4_154 -> m4_34  [key=2, style=dotted];
m4_154 -> m4_155  [key=0, style=solid];
m4_155 -> m4_34  [key=2, style=dotted];
m4_155 -> m4_156  [key=0, style=solid];
m4_156 -> m4_34  [key=2, style=dotted];
m4_156 -> m4_157  [key=0, style=solid];
m4_151 -> m4_152  [key=0, style=solid];
m4_151 -> m4_154  [key=1, style=dashed, color=darkseagreen4, label=input];
m4_151 -> m4_155  [key=1, style=dashed, color=darkseagreen4, label=input];
m4_151 -> m4_156  [key=1, style=dashed, color=darkseagreen4, label=input];
m4_151 -> m4_158  [key=2, style=dotted];
m4_157 -> m4_150  [key=0, style=bold, color=blue];
m4_3500 -> m4_3501  [key=0, style=solid];
m4_3500 -> m4_3503  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_3502 -> m4_1831  [key=2, style=dotted];
m4_3502 -> m4_3504  [key=0, style=solid];
m4_3501 -> m4_3502  [key=0, style=solid];
m4_3501 -> m4_3503  [key=0, style=solid];
m4_3503 -> m4_3504  [key=0, style=solid];
m4_3504 -> m4_3500  [key=0, style=bold, color=blue];
m4_3593 -> m4_3594  [key=0, style=solid];
m4_3594 -> m4_3583  [key=2, style=dotted];
m4_3594 -> m4_3595  [key=0, style=solid];
m4_3595 -> m4_3593  [key=0, style=bold, color=blue];
m4_3296 -> m4_3297  [key=0, style=solid];
m4_3297 -> m4_3298  [key=0, style=solid];
m4_3298 -> m4_3296  [key=0, style=bold, color=blue];
m4_2580 -> m4_2581  [key=0, style=solid];
m4_2582 -> m4_554  [key=2, style=dotted];
m4_2582 -> m4_2583  [key=0, style=solid];
m4_2581 -> m4_2582  [key=0, style=solid];
m4_2583 -> m4_2580  [key=0, style=bold, color=blue];
m4_2365 -> m4_2366  [key=0, style=solid];
m4_2371 -> m4_34  [key=2, style=dotted];
m4_2371 -> m4_2372  [key=0, style=solid];
m4_2370 -> m4_2371  [key=0, style=solid];
m4_2370 -> m4_2297  [key=2, style=dotted];
m4_2367 -> m4_2370  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_2367 -> m4_117  [key=2, style=dotted];
m4_2367 -> m4_118  [key=2, style=dotted];
m4_2367 -> m4_2368  [key=0, style=solid];
m4_2369 -> m4_2370  [key=0, style=solid];
m4_2369 -> m4_119  [key=2, style=dotted];
m4_2366 -> m4_2367  [key=0, style=solid];
m4_2368 -> m4_2369  [key=0, style=solid];
m4_2372 -> m4_2365  [key=0, style=bold, color=blue];
m4_2631 -> m4_2632  [key=0, style=solid];
m4_2632 -> m4_2633  [key=0, style=solid];
m4_2633 -> m4_2631  [key=0, style=bold, color=blue];
m4_984 -> m4_985  [key=0, style=solid];
m4_988 -> m4_12  [key=2, style=dotted];
m4_988 -> m4_989  [key=0, style=solid];
m4_989 -> m4_34  [key=2, style=dotted];
m4_989 -> m4_990  [key=0, style=solid];
m4_986 -> m4_988  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_986 -> m4_987  [key=0, style=solid];
m4_986 -> m4_992  [key=2, style=dotted];
m4_986 -> m4_65  [key=2, style=dotted];
m4_987 -> m4_988  [key=0, style=solid];
m4_987 -> m4_67  [key=2, style=dotted];
m4_985 -> m4_989  [key=1, style=dashed, color=darkseagreen4, label=ts];
m4_985 -> m4_986  [key=0, style=solid];
m4_985 -> m4_991  [key=2, style=dotted];
m4_990 -> m4_984  [key=0, style=bold, color=blue];
m4_3328 -> m4_3329  [key=0, style=solid];
m4_3330 -> m4_47  [key=2, style=dotted];
m4_3330 -> m4_3339  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3330 -> m4_3331  [key=0, style=solid];
m4_3330 -> m4_3333  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3331 -> m4_34  [key=2, style=dotted];
m4_3331 -> m4_3332  [key=0, style=solid];
m4_3335 -> m4_34  [key=2, style=dotted];
m4_3335 -> m4_3336  [key=0, style=solid];
m4_3329 -> m4_3330  [key=0, style=solid];
m4_3329 -> m4_3296  [key=2, style=dotted];
m4_3333 -> m4_3334  [key=0, style=solid];
m4_3332 -> m4_3333  [key=0, style=solid];
m4_3334 -> m4_3335  [key=0, style=solid];
m4_3334 -> m4_3337  [key=2, style=dotted];
m4_3336 -> m4_3328  [key=0, style=bold, color=blue];
m4_1896 -> m4_1897  [key=0, style=solid];
m4_1896 -> m4_1898  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1899  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1900  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1901  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1902  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1903  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1904  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1905  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1906  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1907  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1908  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1909  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1910  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1911  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1912  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1913  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1896 -> m4_1914  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_1897 -> m4_1898  [key=0, style=solid];
m4_1897 -> m4_438  [key=2, style=dotted];
m4_1898 -> m4_1899  [key=0, style=solid];
m4_1898 -> m4_439  [key=2, style=dotted];
m4_1899 -> m4_1900  [key=0, style=solid];
m4_1899 -> m4_440  [key=2, style=dotted];
m4_1900 -> m4_1901  [key=0, style=solid];
m4_1900 -> m4_440  [key=2, style=dotted];
m4_1901 -> m4_1902  [key=0, style=solid];
m4_1901 -> m4_440  [key=2, style=dotted];
m4_1902 -> m4_1903  [key=0, style=solid];
m4_1902 -> m4_440  [key=2, style=dotted];
m4_1903 -> m4_1904  [key=0, style=solid];
m4_1903 -> m4_1916  [key=2, style=dotted];
m4_1904 -> m4_1905  [key=0, style=solid];
m4_1904 -> m4_1917  [key=2, style=dotted];
m4_1905 -> m4_1906  [key=0, style=solid];
m4_1905 -> m4_1918  [key=2, style=dotted];
m4_1906 -> m4_1907  [key=0, style=solid];
m4_1906 -> m4_1919  [key=2, style=dotted];
m4_1907 -> m4_1908  [key=0, style=solid];
m4_1907 -> m4_1920  [key=2, style=dotted];
m4_1908 -> m4_1909  [key=0, style=solid];
m4_1908 -> m4_1921  [key=2, style=dotted];
m4_1909 -> m4_1910  [key=0, style=solid];
m4_1909 -> m4_1922  [key=2, style=dotted];
m4_1910 -> m4_1911  [key=0, style=solid];
m4_1910 -> m4_1923  [key=2, style=dotted];
m4_1911 -> m4_1912  [key=0, style=solid];
m4_1911 -> m4_1924  [key=2, style=dotted];
m4_1912 -> m4_1913  [key=0, style=solid];
m4_1912 -> m4_1925  [key=2, style=dotted];
m4_1913 -> m4_1914  [key=0, style=solid];
m4_1913 -> m4_1926  [key=2, style=dotted];
m4_1914 -> m4_1915  [key=0, style=solid];
m4_1914 -> m4_1927  [key=2, style=dotted];
m4_1915 -> m4_1896  [key=0, style=bold, color=blue];
m4_397 -> m4_398  [key=0, style=solid];
m4_401 -> m4_12  [key=2, style=dotted];
m4_401 -> m4_402  [key=0, style=solid];
m4_399 -> m4_47  [key=2, style=dotted];
m4_399 -> m4_401  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_399 -> m4_400  [key=0, style=solid];
m4_402 -> m4_34  [key=2, style=dotted];
m4_402 -> m4_402  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m4_402 -> m4_403  [key=0, style=solid];
m4_400 -> m4_34  [key=2, style=dotted];
m4_400 -> m4_401  [key=0, style=solid];
m4_403 -> m4_34  [key=2, style=dotted];
m4_403 -> m4_403  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m4_403 -> m4_404  [key=0, style=solid];
m4_398 -> m4_399  [key=0, style=solid];
m4_398 -> m4_402  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m4_398 -> m4_405  [key=2, style=dotted];
m4_404 -> m4_397  [key=0, style=bold, color=blue];
m4_2891 -> m4_2892  [key=0, style=solid];
m4_2894 -> m4_34  [key=2, style=dotted];
m4_2894 -> m4_2895  [key=0, style=solid];
m4_2895 -> m4_34  [key=2, style=dotted];
m4_2895 -> m4_2896  [key=0, style=solid];
m4_2893 -> m4_2894  [key=0, style=solid];
m4_2893 -> m4_2895  [key=1, style=dashed, color=darkseagreen4, label=dict];
m4_2893 -> m4_117  [key=2, style=dotted];
m4_2893 -> m4_118  [key=2, style=dotted];
m4_2893 -> m4_2297  [key=2, style=dotted];
m4_2892 -> m4_2893  [key=0, style=solid];
m4_2892 -> m4_95  [key=2, style=dotted];
m4_2892 -> m4_558  [key=2, style=dotted];
m4_2896 -> m4_2891  [key=0, style=bold, color=blue];
m4_3175 -> m4_3176  [key=0, style=solid];
m4_3177 -> m4_34  [key=2, style=dotted];
m4_3177 -> m4_3178  [key=0, style=solid];
m4_3176 -> m4_3177  [key=0, style=solid];
m4_3176 -> m4_119  [key=2, style=dotted];
m4_3176 -> m4_117  [key=2, style=dotted];
m4_3176 -> m4_118  [key=2, style=dotted];
m4_3176 -> m4_2748  [key=2, style=dotted];
m4_3178 -> m4_3175  [key=0, style=bold, color=blue];
m4_3286 -> m4_3287  [key=0, style=solid];
m4_3287 -> m4_12  [key=2, style=dotted];
m4_3287 -> m4_3288  [key=0, style=solid];
m4_3288 -> m4_34  [key=2, style=dotted];
m4_3288 -> m4_3288  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_3288 -> m4_3289  [key=0, style=solid];
m4_3289 -> m4_34  [key=2, style=dotted];
m4_3289 -> m4_3289  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_3289 -> m4_3290  [key=0, style=solid];
m4_3290 -> m4_3286  [key=0, style=bold, color=blue];
m4_1823 -> m4_1824  [key=0, style=solid];
m4_1824 -> m4_1823  [key=0, style=bold, color=blue];
m4_684 -> m4_685  [key=0, style=solid];
m4_687 -> m4_34  [key=2, style=dotted];
m4_687 -> m4_688  [key=0, style=solid];
m4_688 -> m4_34  [key=2, style=dotted];
m4_688 -> m4_689  [key=0, style=solid];
m4_688 -> m4_691  [key=2, style=dotted];
m4_689 -> m4_34  [key=2, style=dotted];
m4_689 -> m4_690  [key=0, style=solid];
m4_686 -> m4_687  [key=0, style=solid];
m4_686 -> m4_688  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_686 -> m4_689  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_686 -> m4_666  [key=2, style=dotted];
m4_685 -> m4_686  [key=0, style=solid];
m4_690 -> m4_684  [key=0, style=bold, color=blue];
m4_1240 -> m4_1241  [key=0, style=solid];
m4_1241 -> m4_831  [key=2, style=dotted];
m4_1241 -> m4_1242  [key=0, style=solid];
m4_1241 -> m4_1244  [key=2, style=dotted];
m4_1242 -> m4_1243  [key=0, style=solid];
m4_1243 -> m4_1240  [key=0, style=bold, color=blue];
m4_1294 -> m4_1295  [key=0, style=solid];
m4_1296 -> m4_12  [key=2, style=dotted];
m4_1296 -> m4_1297  [key=0, style=solid];
m4_1295 -> m4_1296  [key=0, style=solid];
m4_1297 -> m4_1298  [key=0, style=solid];
m4_1297 -> m4_1300  [key=0, style=solid];
m4_1297 -> m4_1187  [key=2, style=dotted];
m4_1298 -> m4_1299  [key=0, style=solid];
m4_1299 -> m4_1300  [key=0, style=solid];
m4_1299 -> m4_203  [key=2, style=dotted];
m4_1299 -> m4_1188  [key=2, style=dotted];
m4_1300 -> m4_1294  [key=0, style=bold, color=blue];
m4_1197 -> m4_1198  [key=0, style=solid];
m4_1199 -> m4_12  [key=2, style=dotted];
m4_1199 -> m4_1200  [key=0, style=solid];
m4_1198 -> m4_1199  [key=0, style=solid];
m4_1200 -> m4_1201  [key=0, style=solid];
m4_1200 -> m4_1203  [key=0, style=solid];
m4_1200 -> m4_1187  [key=2, style=dotted];
m4_1201 -> m4_1202  [key=0, style=solid];
m4_1202 -> m4_1203  [key=0, style=solid];
m4_1202 -> m4_203  [key=2, style=dotted];
m4_1202 -> m4_1188  [key=2, style=dotted];
m4_1203 -> m4_1197  [key=0, style=bold, color=blue];
m4_20 -> m4_12  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_1189 -> m4_1190  [key=0, style=solid];
m4_1190 -> m4_1192  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1190 -> m4_8  [key=2, style=dotted];
m4_1190 -> m4_1191  [key=0, style=solid];
m4_1191 -> m4_1189  [key=0, style=bold, color=blue];
m4_2409 -> m4_2410  [key=0, style=solid];
m4_2410 -> m4_424  [key=2, style=dotted];
m4_2410 -> m4_2411  [key=0, style=solid];
m4_2411 -> m4_2409  [key=0, style=bold, color=blue];
m4_3623 -> m4_3624  [key=0, style=solid];
m4_3624 -> m4_3583  [key=2, style=dotted];
m4_3624 -> m4_3625  [key=0, style=solid];
m4_3625 -> m4_3623  [key=0, style=bold, color=blue];
m4_3005 -> m4_3006  [key=0, style=solid];
m4_3010 -> m4_12  [key=2, style=dotted];
m4_3010 -> m4_3011  [key=0, style=solid];
m4_3009 -> m4_47  [key=2, style=dotted];
m4_3009 -> m4_3010  [key=0, style=solid];
m4_3011 -> m4_34  [key=2, style=dotted];
m4_3011 -> m4_3012  [key=0, style=solid];
m4_3006 -> m4_3009  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_3006 -> m4_3011  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_3006 -> m4_3007  [key=0, style=solid];
m4_3006 -> m4_3013  [key=2, style=dotted];
m4_3006 -> m4_3008  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_3008 -> m4_3009  [key=0, style=solid];
m4_3007 -> m4_3008  [key=0, style=solid];
m4_3012 -> m4_3005  [key=0, style=bold, color=blue];
m4_1414 -> m4_1415  [key=0, style=solid];
m4_1417 -> m4_34  [key=2, style=dotted];
m4_1417 -> m4_1418  [key=0, style=solid];
m4_1418 -> m4_34  [key=2, style=dotted];
m4_1418 -> m4_1419  [key=0, style=solid];
m4_1418 -> m4_831  [key=2, style=dotted];
m4_1419 -> m4_34  [key=2, style=dotted];
m4_1419 -> m4_1420  [key=0, style=solid];
m4_1420 -> m4_34  [key=2, style=dotted];
m4_1420 -> m4_1421  [key=0, style=solid];
m4_1421 -> m4_34  [key=2, style=dotted];
m4_1421 -> m4_1422  [key=0, style=solid];
m4_1422 -> m4_34  [key=2, style=dotted];
m4_1422 -> m4_1423  [key=0, style=solid];
m4_1416 -> m4_1417  [key=0, style=solid];
m4_1416 -> m4_1418  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_1416 -> m4_1419  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_1416 -> m4_1420  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_1416 -> m4_1421  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_1416 -> m4_1422  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m4_1416 -> m4_666  [key=2, style=dotted];
m4_1415 -> m4_1416  [key=0, style=solid];
m4_1423 -> m4_1414  [key=0, style=bold, color=blue];
m4_657 -> m4_658  [key=0, style=solid];
m4_659 -> m4_47  [key=2, style=dotted];
m4_659 -> m4_660  [key=0, style=solid];
m4_659 -> m4_663  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_661 -> m4_34  [key=2, style=dotted];
m4_661 -> m4_662  [key=0, style=solid];
m4_662 -> m4_34  [key=2, style=dotted];
m4_662 -> m4_663  [key=0, style=solid];
m4_658 -> m4_659  [key=0, style=solid];
m4_658 -> m4_661  [key=1, style=dashed, color=darkseagreen4, label=store];
m4_658 -> m4_662  [key=1, style=dashed, color=darkseagreen4, label=store];
m4_658 -> m4_665  [key=2, style=dotted];
m4_660 -> m4_661  [key=0, style=solid];
m4_660 -> m4_662  [key=1, style=dashed, color=darkseagreen4, label=deserializedStore];
m4_660 -> m4_666  [key=2, style=dotted];
m4_663 -> m4_664  [key=0, style=solid];
m4_663 -> m4_66  [key=2, style=dotted];
m4_664 -> m4_657  [key=0, style=bold, color=blue];
m4_3203 -> m4_3204  [key=0, style=solid];
m4_3205 -> m4_65  [key=2, style=dotted];
m4_3205 -> m4_3206  [key=0, style=solid];
m4_3206 -> m4_67  [key=2, style=dotted];
m4_3206 -> m4_3207  [key=0, style=solid];
m4_3204 -> m4_120  [key=2, style=dotted];
m4_3204 -> m4_3205  [key=0, style=solid];
m4_3204 -> m4_3208  [key=2, style=dotted];
m4_3204 -> m4_3209  [key=2, style=dotted];
m4_3207 -> m4_3203  [key=0, style=bold, color=blue];
m4_2459 -> m4_2460  [key=0, style=solid];
m4_2460 -> m4_12  [key=2, style=dotted];
m4_2460 -> m4_2461  [key=0, style=solid];
m4_2460 -> m4_2462  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2460 -> m4_2463  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2461 -> m4_34  [key=2, style=dotted];
m4_2461 -> m4_2462  [key=0, style=solid];
m4_2462 -> m4_34  [key=2, style=dotted];
m4_2462 -> m4_2463  [key=0, style=solid];
m4_2463 -> m4_34  [key=2, style=dotted];
m4_2463 -> m4_2464  [key=0, style=solid];
m4_2464 -> m4_2459  [key=0, style=bold, color=blue];
m4_917 -> m4_918  [key=0, style=solid];
m4_924 -> m4_12  [key=2, style=dotted];
m4_924 -> m4_925  [key=0, style=solid];
m4_924 -> m4_926  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m4_924 -> m4_927  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m4_924 -> m4_928  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m4_924 -> m4_929  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m4_924 -> m4_930  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m4_924 -> m4_931  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m4_923 -> m4_47  [key=2, style=dotted];
m4_923 -> m4_924  [key=0, style=solid];
m4_925 -> m4_34  [key=2, style=dotted];
m4_925 -> m4_926  [key=0, style=solid];
m4_926 -> m4_34  [key=2, style=dotted];
m4_926 -> m4_927  [key=0, style=solid];
m4_927 -> m4_34  [key=2, style=dotted];
m4_927 -> m4_928  [key=0, style=solid];
m4_928 -> m4_34  [key=2, style=dotted];
m4_928 -> m4_929  [key=0, style=solid];
m4_929 -> m4_34  [key=2, style=dotted];
m4_929 -> m4_930  [key=0, style=solid];
m4_930 -> m4_34  [key=2, style=dotted];
m4_930 -> m4_931  [key=0, style=solid];
m4_931 -> m4_34  [key=2, style=dotted];
m4_931 -> m4_932  [key=0, style=solid];
m4_918 -> m4_923  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_918 -> m4_919  [key=0, style=solid];
m4_918 -> m4_933  [key=2, style=dotted];
m4_918 -> m4_920  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_918 -> m4_921  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_918 -> m4_922  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_922 -> m4_923  [key=0, style=solid];
m4_922 -> m4_64  [key=2, style=dotted];
m4_919 -> m4_920  [key=0, style=solid];
m4_920 -> m4_64  [key=2, style=dotted];
m4_920 -> m4_921  [key=0, style=solid];
m4_921 -> m4_922  [key=0, style=solid];
m4_921 -> m4_64  [key=2, style=dotted];
m4_932 -> m4_917  [key=0, style=bold, color=blue];
m4_1980 -> m4_1981  [key=0, style=solid];
m4_1992 -> m4_12  [key=2, style=dotted];
m4_1992 -> m4_1993  [key=0, style=solid];
m4_1992 -> m4_1994  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1992 -> m4_1995  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1992 -> m4_1996  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1992 -> m4_1997  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1992 -> m4_1998  [key=1, style=dashed, color=darkseagreen4, label=o2];
m4_1995 -> m4_34  [key=2, style=dotted];
m4_1995 -> m4_1996  [key=0, style=solid];
m4_1993 -> m4_34  [key=2, style=dotted];
m4_1993 -> m4_1994  [key=0, style=solid];
m4_1994 -> m4_34  [key=2, style=dotted];
m4_1994 -> m4_1995  [key=0, style=solid];
m4_1996 -> m4_34  [key=2, style=dotted];
m4_1996 -> m4_1997  [key=0, style=solid];
m4_1997 -> m4_34  [key=2, style=dotted];
m4_1997 -> m4_1998  [key=0, style=solid];
m4_1998 -> m4_34  [key=2, style=dotted];
m4_1998 -> m4_1999  [key=0, style=solid];
m4_1991 -> m4_1992  [key=0, style=solid];
m4_1991 -> m4_67  [key=2, style=dotted];
m4_1990 -> m4_1992  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1990 -> m4_1991  [key=0, style=solid];
m4_1990 -> m4_95  [key=2, style=dotted];
m4_1990 -> m4_962  [key=2, style=dotted];
m4_1986 -> m4_1995  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m4_1986 -> m4_839  [key=2, style=dotted];
m4_1986 -> m4_123  [key=2, style=dotted];
m4_1986 -> m4_1987  [key=0, style=solid];
m4_1986 -> m4_1989  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m4_1988 -> m4_1991  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m4_1988 -> m4_1989  [key=0, style=solid];
m4_1989 -> m4_1990  [key=0, style=solid];
m4_1989 -> m4_1889  [key=2, style=dotted];
m4_1982 -> m4_831  [key=2, style=dotted];
m4_1982 -> m4_1983  [key=0, style=solid];
m4_1985 -> m4_1986  [key=0, style=solid];
m4_1987 -> m4_1988  [key=0, style=solid];
m4_1981 -> m4_1989  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1981 -> m4_1982  [key=0, style=solid];
m4_1981 -> m4_1985  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1981 -> m4_1244  [key=2, style=dotted];
m4_1981 -> m4_1983  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1981 -> m4_1984  [key=1, style=dashed, color=darkseagreen4, label=person];
m4_1983 -> m4_1984  [key=0, style=solid];
m4_1984 -> m4_1985  [key=0, style=solid];
m4_1999 -> m4_1980  [key=0, style=bold, color=blue];
m4_3362 -> m4_3363  [key=0, style=solid];
m4_3365 -> m4_67  [key=2, style=dotted];
m4_3365 -> m4_3366  [key=0, style=solid];
m4_3364 -> m4_95  [key=2, style=dotted];
m4_3364 -> m4_962  [key=2, style=dotted];
m4_3364 -> m4_3365  [key=0, style=solid];
m4_3363 -> m4_3364  [key=0, style=solid];
m4_3363 -> m4_3367  [key=2, style=dotted];
m4_3366 -> m4_3362  [key=0, style=bold, color=blue];
m4_2872 -> m4_2873  [key=0, style=solid];
m4_2874 -> m4_12  [key=2, style=dotted];
m4_2874 -> m4_2875  [key=0, style=solid];
m4_2877 -> m4_12  [key=2, style=dotted];
m4_2877 -> m4_2878  [key=0, style=solid];
m4_2875 -> m4_34  [key=2, style=dotted];
m4_2875 -> m4_2876  [key=0, style=solid];
m4_2878 -> m4_34  [key=2, style=dotted];
m4_2878 -> m4_2879  [key=0, style=solid];
m4_2878 -> m4_976  [key=2, style=dotted];
m4_2873 -> m4_2874  [key=0, style=solid];
m4_2876 -> m4_2877  [key=0, style=solid];
m4_2879 -> m4_2872  [key=0, style=bold, color=blue];
m4_1065 -> m4_1066  [key=0, style=solid];
m4_1071 -> m4_34  [key=2, style=dotted];
m4_1071 -> m4_1072  [key=0, style=solid];
m4_1072 -> m4_34  [key=2, style=dotted];
m4_1072 -> m4_1073  [key=0, style=solid];
m4_1069 -> m4_34  [key=2, style=dotted];
m4_1069 -> m4_1070  [key=0, style=solid];
m4_1066 -> m4_1071  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m4_1066 -> m4_1072  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m4_1066 -> m4_1067  [key=0, style=solid];
m4_1066 -> m4_1036  [key=2, style=dotted];
m4_1070 -> m4_1071  [key=0, style=solid];
m4_1070 -> m4_1072  [key=1, style=dashed, color=darkseagreen4, label=m2];
m4_1070 -> m4_1074  [key=2, style=dotted];
m4_1070 -> m4_36  [key=2, style=dotted];
m4_1068 -> m4_1069  [key=0, style=solid];
m4_1068 -> m4_1070  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1068 -> m4_1074  [key=2, style=dotted];
m4_1068 -> m4_1026  [key=2, style=dotted];
m4_1067 -> m4_1068  [key=0, style=solid];
m4_1067 -> m4_1037  [key=2, style=dotted];
m4_1073 -> m4_1065  [key=0, style=bold, color=blue];
m4_1454 -> m4_1455  [key=0, style=solid];
m4_1456 -> m4_12  [key=2, style=dotted];
m4_1456 -> m4_1457  [key=0, style=solid];
m4_1456 -> m4_1458  [key=1, style=dashed, color=darkseagreen4, label=content];
m4_1456 -> m4_1459  [key=1, style=dashed, color=darkseagreen4, label=content];
m4_1456 -> m4_1460  [key=1, style=dashed, color=darkseagreen4, label=content];
m4_1457 -> m4_34  [key=2, style=dotted];
m4_1457 -> m4_1458  [key=0, style=solid];
m4_1458 -> m4_34  [key=2, style=dotted];
m4_1458 -> m4_1459  [key=0, style=solid];
m4_1459 -> m4_34  [key=2, style=dotted];
m4_1459 -> m4_1460  [key=0, style=solid];
m4_1460 -> m4_34  [key=2, style=dotted];
m4_1460 -> m4_1461  [key=0, style=solid];
m4_1455 -> m4_1456  [key=0, style=solid];
m4_1461 -> m4_1454  [key=0, style=bold, color=blue];
m4_1730 -> m4_1731  [key=0, style=solid];
m4_10 -> m4_12  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeKind"];
m4_14 -> m4_12  [key=2, style=dotted];
m4_14 -> m4_15  [key=0, style=solid];
m4_17 -> m4_12  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_19  [key=0, style=solid];
m4_23 -> m4_12  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_26 -> m4_12  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_818 -> m4_12  [key=2, style=dotted];
m4_818 -> m4_819  [key=0, style=solid];
m4_1489 -> m4_12  [key=2, style=dotted];
m4_1489 -> m4_1490  [key=0, style=solid];
m4_1516 -> m4_12  [key=2, style=dotted];
m4_1516 -> m4_1517  [key=0, style=solid];
m4_1523 -> m4_12  [key=2, style=dotted];
m4_1523 -> m4_1524  [key=0, style=solid];
m4_1530 -> m4_12  [key=2, style=dotted];
m4_1530 -> m4_1531  [key=0, style=solid];
m4_1537 -> m4_12  [key=2, style=dotted];
m4_1537 -> m4_1538  [key=0, style=solid];
m4_1544 -> m4_12  [key=2, style=dotted];
m4_1544 -> m4_1545  [key=0, style=solid];
m4_1551 -> m4_12  [key=2, style=dotted];
m4_1551 -> m4_1552  [key=0, style=solid];
m4_1558 -> m4_12  [key=2, style=dotted];
m4_1558 -> m4_1559  [key=0, style=solid];
m4_1565 -> m4_12  [key=2, style=dotted];
m4_1565 -> m4_1566  [key=0, style=solid];
m4_2159 -> m4_12  [key=2, style=dotted];
m4_2159 -> m4_2160  [key=0, style=solid];
m4_2173 -> m4_12  [key=2, style=dotted];
m4_2173 -> m4_2174  [key=0, style=solid];
m4_2275 -> m4_12  [key=2, style=dotted];
m4_2275 -> m4_2276  [key=0, style=solid];
m4_2828 -> m4_12  [key=2, style=dotted];
m4_2828 -> m4_2829  [key=0, style=solid];
m4_2842 -> m4_12  [key=2, style=dotted];
m4_2842 -> m4_2843  [key=0, style=solid];
m4_2863 -> m4_12  [key=2, style=dotted];
m4_2863 -> m4_2864  [key=0, style=solid];
m4_2870 -> m4_12  [key=2, style=dotted];
m4_2870 -> m4_2871  [key=0, style=solid];
m4_2943 -> m4_12  [key=2, style=dotted];
m4_2943 -> m4_2944  [key=0, style=solid];
m4_2949 -> m4_12  [key=2, style=dotted];
m4_2949 -> m4_2950  [key=0, style=solid];
m4_2955 -> m4_12  [key=2, style=dotted];
m4_2955 -> m4_2956  [key=0, style=solid];
m4_2965 -> m4_12  [key=2, style=dotted];
m4_2965 -> m4_2966  [key=0, style=solid];
m4_3339 -> m4_12  [key=2, style=dotted];
m4_3339 -> m4_3340  [key=0, style=solid];
m4_3339 -> m4_3335  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_3414 -> m4_12  [key=2, style=dotted];
m4_3414 -> m4_3415  [key=0, style=solid];
m4_3422 -> m4_12  [key=2, style=dotted];
m4_3422 -> m4_3423  [key=0, style=solid];
m4_3431 -> m4_12  [key=2, style=dotted];
m4_3431 -> m4_3432  [key=0, style=solid];
m4_3641 -> m4_12  [key=2, style=dotted];
m4_3641 -> m4_3642  [key=0, style=solid];
m4_3783 -> m4_12  [key=2, style=dotted];
m4_3783 -> m4_3784  [key=0, style=solid];
m4_786 -> m4_47  [key=2, style=dotted];
m4_786 -> m4_787  [key=0, style=solid];
m4_786 -> m4_788  [key=2, style=dotted];
m4_1099 -> m4_47  [key=2, style=dotted];
m4_1099 -> m4_1100  [key=0, style=solid];
m4_1194 -> m4_47  [key=2, style=dotted];
m4_1194 -> m4_1195  [key=0, style=solid];
m4_3776 -> m4_47  [key=2, style=dotted];
m4_3776 -> m4_3777  [key=0, style=solid];
m4_3776 -> m4_3778  [key=2, style=dotted];
m4_11 -> m4_9  [key=0, style=bold, color=blue];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_14  [key=0, style=solid];
m4_11 -> m4_16  [key=0, style=solid];
m4_11 -> m4_18  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_19  [key=0, style=solid];
m4_15 -> m4_13  [key=0, style=bold, color=blue];
m4_15 -> m4_19  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_18 -> m4_16  [key=0, style=bold, color=blue];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_20  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_10  [key=0, style=bold, color=blue];
m4_21 -> m4_19  [key=0, style=bold, color=blue];
m4_22 -> m4_23  [key=0, style=solid];
m4_24 -> m4_22  [key=0, style=bold, color=blue];
m4_25 -> m4_26  [key=0, style=solid];
m4_27 -> m4_25  [key=0, style=bold, color=blue];
m4_817 -> m4_818  [key=0, style=solid];
m4_819 -> m4_817  [key=0, style=bold, color=blue];
m4_1488 -> m4_1489  [key=0, style=solid];
m4_1490 -> m4_1488  [key=0, style=bold, color=blue];
m4_1515 -> m4_1516  [key=0, style=solid];
m4_1517 -> m4_1515  [key=0, style=bold, color=blue];
m4_1522 -> m4_1523  [key=0, style=solid];
m4_1524 -> m4_1522  [key=0, style=bold, color=blue];
m4_1529 -> m4_1530  [key=0, style=solid];
m4_1531 -> m4_1529  [key=0, style=bold, color=blue];
m4_1536 -> m4_1537  [key=0, style=solid];
m4_1538 -> m4_1536  [key=0, style=bold, color=blue];
m4_1543 -> m4_1544  [key=0, style=solid];
m4_1545 -> m4_1543  [key=0, style=bold, color=blue];
m4_1550 -> m4_1551  [key=0, style=solid];
m4_1552 -> m4_1550  [key=0, style=bold, color=blue];
m4_1557 -> m4_1558  [key=0, style=solid];
m4_1559 -> m4_1557  [key=0, style=bold, color=blue];
m4_1564 -> m4_1565  [key=0, style=solid];
m4_1566 -> m4_1564  [key=0, style=bold, color=blue];
m4_2158 -> m4_2159  [key=0, style=solid];
m4_2160 -> m4_2158  [key=0, style=bold, color=blue];
m4_2172 -> m4_2173  [key=0, style=solid];
m4_2172 -> m4_65  [key=2, style=dotted];
m4_2174 -> m4_2164  [key=0, style=bold, color=blue];
m4_2274 -> m4_2275  [key=0, style=solid];
m4_2276 -> m4_2274  [key=0, style=bold, color=blue];
m4_2827 -> m4_2828  [key=0, style=solid];
m4_2829 -> m4_2827  [key=0, style=bold, color=blue];
m4_2841 -> m4_2842  [key=0, style=solid];
m4_2843 -> m4_2841  [key=0, style=bold, color=blue];
m4_2862 -> m4_2863  [key=0, style=solid];
m4_2864 -> m4_2861  [key=0, style=bold, color=blue];
m4_2869 -> m4_2870  [key=0, style=solid];
m4_2871 -> m4_2868  [key=0, style=bold, color=blue];
m4_2942 -> m4_2943  [key=0, style=solid];
m4_2944 -> m4_2942  [key=0, style=bold, color=blue];
m4_2948 -> m4_2949  [key=0, style=solid];
m4_2950 -> m4_2948  [key=0, style=bold, color=blue];
m4_2954 -> m4_2955  [key=0, style=solid];
m4_2956 -> m4_2954  [key=0, style=bold, color=blue];
m4_2964 -> m4_2965  [key=0, style=solid];
m4_2966 -> m4_2964  [key=0, style=bold, color=blue];
m4_3338 -> m4_3339  [key=0, style=solid];
m4_3340 -> m4_3338  [key=0, style=bold, color=blue];
m4_3413 -> m4_3414  [key=0, style=solid];
m4_3415 -> m4_3413  [key=0, style=bold, color=blue];
m4_3421 -> m4_3422  [key=0, style=solid];
m4_3423 -> m4_3421  [key=0, style=bold, color=blue];
m4_3430 -> m4_3431  [key=0, style=solid];
m4_3432 -> m4_3430  [key=0, style=bold, color=blue];
m4_3640 -> m4_3641  [key=0, style=solid];
m4_3642 -> m4_3639  [key=0, style=bold, color=blue];
m4_3782 -> m4_3783  [key=0, style=solid];
m4_3784 -> m4_3782  [key=0, style=bold, color=blue];
m4_785 -> m4_786  [key=0, style=solid];
m4_787 -> m4_785  [key=0, style=bold, color=blue];
m4_1098 -> m4_1099  [key=0, style=solid];
m4_1098 -> m4_1101  [key=2, style=dotted];
m4_1100 -> m4_1097  [key=0, style=bold, color=blue];
m4_1193 -> m4_1194  [key=0, style=solid];
m4_1193 -> m4_1172  [key=2, style=dotted];
m4_1193 -> m4_831  [key=2, style=dotted];
m4_1195 -> m4_1196  [key=0, style=solid];
m4_1195 -> m4_66  [key=2, style=dotted];
m4_1238 -> m4_1239  [key=0, style=solid];
m4_1238 -> m4_666  [key=2, style=dotted];
m4_3775 -> m4_3776  [key=0, style=solid];
m4_3777 -> m4_3775  [key=0, style=bold, color=blue];
m4_2171 -> m4_2172  [key=0, style=solid];
m4_2171 -> m4_557  [key=2, style=dotted];
m4_2168 -> m4_2172  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_2168 -> m4_554  [key=2, style=dotted];
m4_2168 -> m4_2171  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_2168 -> m4_2169  [key=0, style=solid];
m4_2168 -> m4_2170  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_2164 -> m4_2165  [key=0, style=solid];
m4_2861 -> m4_2862  [key=0, style=solid];
m4_2868 -> m4_2869  [key=0, style=solid];
m4_3639 -> m4_3640  [key=0, style=solid];
m4_651 -> m4_652  [key=0, style=solid];
m4_654 -> m4_655  [key=0, style=solid];
m4_1097 -> m4_1098  [key=0, style=solid];
m4_1192 -> m4_1193  [key=0, style=solid];
m4_1196 -> m4_1192  [key=0, style=bold, color=blue];
m4_1237 -> m4_1238  [key=0, style=solid];
m4_1239 -> m4_1237  [key=0, style=bold, color=blue];
m4_2165 -> m4_554  [key=2, style=dotted];
m4_2165 -> m4_2171  [key=1, style=dashed, color=darkseagreen4, label=reference];
m4_2165 -> m4_2166  [key=0, style=solid];
m4_2165 -> m4_2167  [key=1, style=dashed, color=darkseagreen4, label=reference];
m4_98 -> m4_99  [key=0, style=solid];
m4_3092 -> m4_64  [key=2, style=dotted];
m4_3092 -> m4_3093  [key=0, style=solid];
m4_3107 -> m4_64  [key=2, style=dotted];
m4_3107 -> m4_3108  [key=0, style=solid];
m4_3122 -> m4_64  [key=2, style=dotted];
m4_3122 -> m4_3123  [key=0, style=solid];
m4_1598 -> m4_463  [key=2, style=dotted];
m4_1598 -> m4_95  [key=2, style=dotted];
m4_1598 -> m4_559  [key=2, style=dotted];
m4_1598 -> n0  [key=2, style=dotted];
m4_1598 -> m4_1599  [key=0, style=solid];
m4_1347 -> m4_95  [key=2, style=dotted];
m4_1347 -> m4_962  [key=2, style=dotted];
m4_1347 -> m4_1348  [key=0, style=solid];
m4_1605 -> m4_95  [key=2, style=dotted];
m4_1605 -> m4_96  [key=2, style=dotted];
m4_1605 -> n0  [key=2, style=dotted];
m4_1605 -> m4_1606  [key=0, style=solid];
m4_1611 -> m4_95  [key=2, style=dotted];
m4_1611 -> m4_96  [key=2, style=dotted];
m4_1611 -> n0  [key=2, style=dotted];
m4_1611 -> m4_1612  [key=0, style=solid];
m4_1617 -> m4_95  [key=2, style=dotted];
m4_1617 -> m4_96  [key=2, style=dotted];
m4_1617 -> n0  [key=2, style=dotted];
m4_1617 -> m4_1618  [key=0, style=solid];
m4_1767 -> m4_95  [key=2, style=dotted];
m4_1767 -> m4_96  [key=2, style=dotted];
m4_1767 -> m4_1768  [key=0, style=solid];
m4_2170 -> m4_2171  [key=0, style=solid];
m4_2170 -> m4_557  [key=2, style=dotted];
m4_2167 -> m4_2168  [key=0, style=solid];
m4_2167 -> m4_557  [key=2, style=dotted];
m4_2169 -> m4_557  [key=2, style=dotted];
m4_2169 -> m4_2170  [key=0, style=solid];
m4_653 -> m4_651  [key=0, style=bold, color=blue];
m4_652 -> m4_653  [key=0, style=solid];
m4_656 -> m4_654  [key=0, style=bold, color=blue];
m4_655 -> m4_656  [key=0, style=solid];
m4_2492 -> m4_666  [key=2, style=dotted];
m4_2492 -> m4_2493  [key=0, style=solid];
m4_1587 -> m4_120  [key=2, style=dotted];
m4_1587 -> m4_1588  [key=0, style=solid];
m4_1587 -> m4_1581  [key=2, style=dotted];
m4_2166 -> m4_557  [key=2, style=dotted];
m4_2166 -> m4_2167  [key=0, style=solid];
m4_3237 -> m4_117  [key=2, style=dotted];
m4_3237 -> m4_118  [key=2, style=dotted];
m4_3237 -> m4_2297  [key=2, style=dotted];
m4_3237 -> m4_3238  [key=0, style=solid];
m4_3253 -> m4_117  [key=2, style=dotted];
m4_3253 -> m4_118  [key=2, style=dotted];
m4_3253 -> m4_3254  [key=0, style=solid];
m4_3253 -> m4_3255  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_3253 -> m4_3256  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_3803 -> m4_36  [key=2, style=dotted];
m4_3803 -> m4_3804  [key=0, style=solid];
m4_3803 -> m4_3805  [key=2, style=dotted];
m4_3803 -> m4_3806  [key=2, style=dotted];
m4_3803 -> m4_3807  [key=2, style=dotted];
m4_97 -> m4_98  [key=0, style=solid];
m4_99 -> m4_97  [key=0, style=bold, color=blue];
m4_3251 -> m4_119  [key=2, style=dotted];
m4_3251 -> m4_3252  [key=0, style=solid];
m4_3251 -> m4_3256  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_2971 -> m4_199  [key=2, style=dotted];
m4_2971 -> m4_2972  [key=0, style=solid];
m4_3256 -> m4_2259  [key=2, style=dotted];
m4_3256 -> m4_3257  [key=0, style=solid];
m4_3254 -> m4_3058  [key=2, style=dotted];
m4_3254 -> m4_3255  [key=0, style=solid];
m4_3255 -> m4_3058  [key=2, style=dotted];
m4_3255 -> m4_3256  [key=0, style=solid];
m4_3093 -> m4_3094  [key=0, style=solid];
m4_3091 -> m4_3092  [key=0, style=solid];
m4_3091 -> m4_3093  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_3108 -> m4_3109  [key=0, style=solid];
m4_3106 -> m4_3107  [key=0, style=solid];
m4_3106 -> m4_3108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_3123 -> m4_3124  [key=0, style=solid];
m4_3121 -> m4_3122  [key=0, style=solid];
m4_3121 -> m4_3123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_1597 -> m4_1598  [key=0, style=solid];
m4_1599 -> m4_1597  [key=0, style=bold, color=blue];
m4_1345 -> m4_1347  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1345 -> m4_1346  [key=0, style=solid];
m4_1345 -> m4_1331  [key=2, style=dotted];
m4_1346 -> m4_1347  [key=0, style=solid];
m4_1348 -> m4_1344  [key=0, style=bold, color=blue];
m4_1604 -> m4_1605  [key=0, style=solid];
m4_1606 -> m4_1604  [key=0, style=bold, color=blue];
m4_1610 -> m4_1611  [key=0, style=solid];
m4_1612 -> m4_1610  [key=0, style=bold, color=blue];
m4_1616 -> m4_1617  [key=0, style=solid];
m4_1618 -> m4_1616  [key=0, style=bold, color=blue];
m4_1766 -> m4_1767  [key=0, style=solid];
m4_1768 -> m4_1766  [key=0, style=bold, color=blue];
m4_2491 -> m4_2492  [key=0, style=solid];
m4_2493 -> m4_2491  [key=0, style=bold, color=blue];
m4_1586 -> m4_1587  [key=0, style=solid];
m4_1588 -> m4_1586  [key=0, style=bold, color=blue];
m4_1344 -> m4_1345  [key=0, style=solid];
m4_1578 -> m4_1579  [key=0, style=solid];
m4_2970 -> m4_2971  [key=0, style=solid];
m4_3236 -> m4_3237  [key=0, style=solid];
m4_3249 -> m4_3250  [key=0, style=solid];
m4_3802 -> m4_3803  [key=0, style=solid];
m4_3238 -> m4_3236  [key=0, style=bold, color=blue];
m4_3250 -> m4_3253  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3250 -> m4_3251  [key=0, style=solid];
m4_3252 -> m4_3253  [key=0, style=solid];
m4_3804 -> m4_3802  [key=0, style=bold, color=blue];
m4_2972 -> m4_2970  [key=0, style=bold, color=blue];
m4_1579 -> m4_1244  [key=2, style=dotted];
m4_1579 -> m4_1581  [key=2, style=dotted];
m4_1579 -> m4_1580  [key=0, style=solid];
m4_3257 -> m4_3249  [key=0, style=bold, color=blue];
m4_3094 -> m4_3091  [key=0, style=bold, color=blue];
m4_3109 -> m4_3106  [key=0, style=bold, color=blue];
m4_3124 -> m4_3121  [key=0, style=bold, color=blue];
m4_1731 -> m4_1732  [key=0, style=solid];
m4_1580 -> m4_1578  [key=0, style=bold, color=blue];
m4_1732 -> m4_1730  [key=0, style=bold, color=blue];
m4_3302 -> m4_3303  [key=0, style=solid];
m4_3305 -> m4_47  [key=2, style=dotted];
m4_3305 -> m4_3306  [key=0, style=solid];
m4_3308 -> m4_34  [key=2, style=dotted];
m4_3308 -> m4_3309  [key=0, style=solid];
m4_3304 -> m4_3305  [key=0, style=solid];
m4_3304 -> m4_120  [key=2, style=dotted];
m4_3304 -> m4_3306  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_3304 -> m4_3307  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_3306 -> m4_3307  [key=0, style=solid];
m4_3306 -> m4_95  [key=2, style=dotted];
m4_3306 -> m4_463  [key=2, style=dotted];
m4_3307 -> m4_3308  [key=0, style=solid];
m4_3307 -> m4_95  [key=2, style=dotted];
m4_3307 -> m4_463  [key=2, style=dotted];
m4_3303 -> m4_3304  [key=0, style=solid];
m4_3309 -> m4_3302  [key=0, style=bold, color=blue];
m4_3643 -> m4_3644  [key=0, style=solid];
m4_3647 -> m4_12  [key=2, style=dotted];
m4_3647 -> m4_3648  [key=0, style=solid];
m4_3646 -> m4_47  [key=2, style=dotted];
m4_3646 -> m4_3647  [key=0, style=solid];
m4_3648 -> m4_34  [key=2, style=dotted];
m4_3648 -> m4_3649  [key=0, style=solid];
m4_3645 -> m4_3646  [key=0, style=solid];
m4_3645 -> m4_1440  [key=2, style=dotted];
m4_3644 -> m4_3648  [key=1, style=dashed, color=darkseagreen4, label=originalUri];
m4_3644 -> m4_3645  [key=0, style=solid];
m4_3649 -> m4_3643  [key=0, style=bold, color=blue];
m4_3418 -> m4_3419  [key=0, style=solid];
m4_3419 -> m4_3421  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3419 -> m4_3420  [key=0, style=solid];
m4_3419 -> m4_8  [key=2, style=dotted];
m4_3420 -> m4_3418  [key=0, style=bold, color=blue];
m4_1075 -> m4_1076  [key=0, style=solid];
m4_1078 -> m4_65  [key=2, style=dotted];
m4_1078 -> m4_1079  [key=0, style=solid];
m4_1079 -> m4_66  [key=2, style=dotted];
m4_1079 -> m4_1080  [key=0, style=solid];
m4_1077 -> m4_1037  [key=2, style=dotted];
m4_1077 -> m4_1078  [key=0, style=solid];
m4_1076 -> m4_1077  [key=0, style=solid];
m4_1076 -> m4_1081  [key=2, style=dotted];
m4_1076 -> m4_1082  [key=2, style=dotted];
m4_1080 -> m4_1075  [key=0, style=bold, color=blue];
m4_1607 -> m4_1608  [key=0, style=solid];
m4_1608 -> m4_8  [key=2, style=dotted];
m4_1608 -> m4_1609  [key=0, style=solid];
m4_1608 -> m4_1610  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1609 -> m4_1607  [key=0, style=bold, color=blue];
m4_90 -> m4_91  [key=0, style=solid];
m4_93 -> m4_34  [key=2, style=dotted];
m4_93 -> m4_94  [key=0, style=solid];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_95  [key=2, style=dotted];
m4_92 -> m4_96  [key=2, style=dotted];
m4_92 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_91 -> m4_92  [key=0, style=solid];
m4_94 -> m4_90  [key=0, style=bold, color=blue];
m4_100 -> m4_101  [key=0, style=solid];
m4_101 -> m4_12  [key=2, style=dotted];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_103  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_101 -> m4_104  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_102 -> m4_34  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_103 -> m4_34  [key=2, style=dotted];
m4_103 -> m4_104  [key=0, style=solid];
m4_104 -> m4_34  [key=2, style=dotted];
m4_104 -> m4_105  [key=0, style=solid];
m4_105 -> m4_100  [key=0, style=bold, color=blue];
m4_1685 -> m4_1686  [key=0, style=solid];
m4_1691 -> m4_12  [key=2, style=dotted];
m4_1691 -> m4_1692  [key=0, style=solid];
m4_1691 -> m4_493  [key=2, style=dotted];
m4_1693 -> m4_34  [key=2, style=dotted];
m4_1693 -> m4_1694  [key=0, style=solid];
m4_1694 -> m4_34  [key=2, style=dotted];
m4_1694 -> m4_1695  [key=0, style=solid];
m4_1695 -> m4_34  [key=2, style=dotted];
m4_1695 -> m4_1696  [key=0, style=solid];
m4_1690 -> m4_1691  [key=0, style=solid];
m4_1690 -> m4_1693  [key=0, style=solid];
m4_1692 -> m4_1690  [key=0, style=solid];
m4_1692 -> m4_64  [key=2, style=dotted];
m4_1689 -> m4_1693  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m4_1689 -> m4_1694  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m4_1689 -> m4_1695  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m4_1689 -> m4_1690  [key=0, style=solid];
m4_1689 -> m4_1692  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m4_1689 -> m4_120  [key=2, style=dotted];
m4_1688 -> m4_1690  [key=1, style=dashed, color=darkseagreen4, label=results];
m4_1688 -> m4_770  [key=2, style=dotted];
m4_1688 -> m4_1689  [key=0, style=solid];
m4_1688 -> m4_177  [key=2, style=dotted];
m4_1687 -> m4_201  [key=2, style=dotted];
m4_1687 -> m4_1688  [key=0, style=solid];
m4_1686 -> m4_1687  [key=0, style=solid];
m4_1696 -> m4_1685  [key=0, style=bold, color=blue];
m4_2004 -> m4_2005  [key=0, style=solid];
m4_2005 -> m4_12  [key=2, style=dotted];
m4_2005 -> m4_2006  [key=0, style=solid];
m4_2005 -> m4_2007  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m4_2005 -> m4_2008  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m4_2005 -> m4_2009  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m4_2005 -> m4_2010  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m4_2006 -> m4_34  [key=2, style=dotted];
m4_2006 -> m4_2007  [key=0, style=solid];
m4_2007 -> m4_34  [key=2, style=dotted];
m4_2007 -> m4_2008  [key=0, style=solid];
m4_2008 -> m4_34  [key=2, style=dotted];
m4_2008 -> m4_2009  [key=0, style=solid];
m4_2009 -> m4_34  [key=2, style=dotted];
m4_2009 -> m4_2010  [key=0, style=solid];
m4_2010 -> m4_34  [key=2, style=dotted];
m4_2010 -> m4_2011  [key=0, style=solid];
m4_2011 -> m4_2004  [key=0, style=bold, color=blue];
m4_3282 -> m4_3283  [key=0, style=solid];
m4_3283 -> m4_12  [key=2, style=dotted];
m4_3283 -> m4_3284  [key=0, style=solid];
m4_3284 -> m4_34  [key=2, style=dotted];
m4_3284 -> m4_3285  [key=0, style=solid];
m4_3285 -> m4_3282  [key=0, style=bold, color=blue];
m4_1229 -> m4_1230  [key=0, style=solid];
m4_1232 -> m4_47  [key=2, style=dotted];
m4_1232 -> m4_1233  [key=0, style=solid];
m4_1232 -> m4_1238  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m4_1230 -> m4_1232  [key=1, style=dashed, color=darkseagreen4, label=testClass];
m4_1230 -> m4_1231  [key=0, style=solid];
m4_1230 -> m4_1235  [key=2, style=dotted];
m4_1231 -> m4_1232  [key=0, style=solid];
m4_1231 -> m4_1236  [key=2, style=dotted];
m4_1233 -> m4_1234  [key=0, style=solid];
m4_1233 -> m4_8  [key=2, style=dotted];
m4_1233 -> m4_1237  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1234 -> m4_1229  [key=0, style=bold, color=blue];
m4_536 -> m4_537  [key=0, style=solid];
m4_537 -> m4_554  [key=2, style=dotted];
m4_537 -> m4_538  [key=0, style=solid];
m4_537 -> m4_540  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m4_537 -> m4_546  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m4_542 -> m4_95  [key=2, style=dotted];
m4_542 -> m4_543  [key=0, style=solid];
m4_552 -> m4_66  [key=2, style=dotted];
m4_552 -> m4_553  [key=0, style=solid];
m4_544 -> m4_559  [key=2, style=dotted];
m4_544 -> m4_545  [key=0, style=solid];
m4_544 -> m4_548  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_544 -> m4_550  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_540 -> m4_557  [key=2, style=dotted];
m4_540 -> m4_541  [key=0, style=solid];
m4_540 -> m4_555  [key=2, style=dotted];
m4_540 -> m4_556  [key=2, style=dotted];
m4_538 -> m4_540  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_538 -> m4_539  [key=0, style=solid];
m4_538 -> m4_541  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_546 -> m4_547  [key=0, style=solid];
m4_546 -> m4_561  [key=2, style=dotted];
m4_550 -> m4_566  [key=2, style=dotted];
m4_550 -> m4_565  [key=2, style=dotted];
m4_550 -> m4_551  [key=0, style=solid];
m4_539 -> m4_542  [key=0, style=solid];
m4_539 -> m4_540  [key=0, style=solid];
m4_543 -> m4_544  [key=0, style=solid];
m4_543 -> m4_546  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m4_543 -> m4_550  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m4_543 -> m4_558  [key=2, style=dotted];
m4_549 -> m4_552  [key=1, style=dashed, color=darkseagreen4, label=stopWatch];
m4_549 -> m4_550  [key=0, style=solid];
m4_549 -> m4_564  [key=2, style=dotted];
m4_549 -> m4_551  [key=1, style=dashed, color=darkseagreen4, label=stopWatch];
m4_551 -> m4_552  [key=0, style=solid];
m4_551 -> m4_567  [key=2, style=dotted];
m4_545 -> m4_546  [key=0, style=solid];
m4_545 -> m4_560  [key=2, style=dotted];
m4_545 -> m4_547  [key=1, style=dashed, color=darkseagreen4, label=streamWriter];
m4_548 -> m4_549  [key=0, style=solid];
m4_548 -> m4_563  [key=2, style=dotted];
m4_541 -> m4_539  [key=0, style=solid];
m4_541 -> m4_541  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_547 -> m4_548  [key=0, style=solid];
m4_547 -> m4_562  [key=2, style=dotted];
m4_553 -> m4_536  [key=0, style=bold, color=blue];
m4_3602 -> m4_3603  [key=0, style=solid];
m4_3603 -> m4_3604  [key=0, style=solid];
m4_3604 -> m4_3602  [key=0, style=bold, color=blue];
m4_1799 -> m4_1802  [key=0, style=solid];
m4_1802 -> m4_1803  [key=0, style=solid];
m4_1803 -> m4_1799  [key=0, style=bold, color=blue];
m4_2961 -> m4_2962  [key=0, style=solid];
m4_2962 -> m4_2964  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2962 -> m4_2963  [key=0, style=solid];
m4_2962 -> m4_8  [key=2, style=dotted];
m4_2963 -> m4_2961  [key=0, style=bold, color=blue];
m4_1671 -> m4_1672  [key=0, style=solid];
m4_1672 -> m4_554  [key=2, style=dotted];
m4_1672 -> m4_1673  [key=0, style=solid];
m4_1672 -> m4_1674  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m4_1672 -> m4_1675  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m4_1675 -> m4_65  [key=2, style=dotted];
m4_1675 -> m4_1676  [key=0, style=solid];
m4_1676 -> m4_67  [key=2, style=dotted];
m4_1676 -> m4_1677  [key=0, style=solid];
m4_1673 -> m4_557  [key=2, style=dotted];
m4_1673 -> m4_1674  [key=0, style=solid];
m4_1673 -> m4_1244  [key=2, style=dotted];
m4_1674 -> m4_557  [key=2, style=dotted];
m4_1674 -> m4_1675  [key=0, style=solid];
m4_1674 -> m4_1244  [key=2, style=dotted];
m4_1677 -> m4_1671  [key=0, style=bold, color=blue];
m4_204 -> m4_205  [key=0, style=solid];
m4_205 -> m4_12  [key=2, style=dotted];
m4_205 -> m4_206  [key=0, style=solid];
m4_207 -> m4_12  [key=2, style=dotted];
m4_207 -> m4_208  [key=0, style=solid];
m4_206 -> m4_34  [key=2, style=dotted];
m4_206 -> m4_207  [key=0, style=solid];
m4_208 -> m4_34  [key=2, style=dotted];
m4_208 -> m4_209  [key=0, style=solid];
m4_209 -> m4_204  [key=0, style=bold, color=blue];
m4_978 -> m4_979  [key=0, style=solid];
m4_981 -> m4_12  [key=2, style=dotted];
m4_981 -> m4_982  [key=0, style=solid];
m4_979 -> m4_47  [key=2, style=dotted];
m4_979 -> m4_981  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_979 -> m4_980  [key=0, style=solid];
m4_980 -> m4_34  [key=2, style=dotted];
m4_980 -> m4_981  [key=0, style=solid];
m4_982 -> m4_34  [key=2, style=dotted];
m4_982 -> m4_983  [key=0, style=solid];
m4_983 -> m4_978  [key=0, style=bold, color=blue];
m4_2923 -> m4_2924  [key=0, style=solid];
m4_2924 -> m4_12  [key=2, style=dotted];
m4_2924 -> m4_2925  [key=0, style=solid];
m4_2926 -> m4_12  [key=2, style=dotted];
m4_2926 -> m4_2927  [key=0, style=solid];
m4_2928 -> m4_12  [key=2, style=dotted];
m4_2928 -> m4_2929  [key=0, style=solid];
m4_2930 -> m4_12  [key=2, style=dotted];
m4_2930 -> m4_2931  [key=0, style=solid];
m4_2932 -> m4_12  [key=2, style=dotted];
m4_2932 -> m4_2933  [key=0, style=solid];
m4_2934 -> m4_12  [key=2, style=dotted];
m4_2934 -> m4_2935  [key=0, style=solid];
m4_2936 -> m4_12  [key=2, style=dotted];
m4_2936 -> m4_2937  [key=0, style=solid];
m4_2925 -> m4_2926  [key=0, style=solid];
m4_2925 -> m4_89  [key=2, style=dotted];
m4_2927 -> m4_2928  [key=0, style=solid];
m4_2927 -> m4_89  [key=2, style=dotted];
m4_2929 -> m4_2930  [key=0, style=solid];
m4_2929 -> m4_89  [key=2, style=dotted];
m4_2931 -> m4_2932  [key=0, style=solid];
m4_2931 -> m4_89  [key=2, style=dotted];
m4_2933 -> m4_2934  [key=0, style=solid];
m4_2933 -> m4_89  [key=2, style=dotted];
m4_2935 -> m4_2936  [key=0, style=solid];
m4_2935 -> m4_89  [key=2, style=dotted];
m4_2937 -> m4_2938  [key=0, style=solid];
m4_2937 -> m4_89  [key=2, style=dotted];
m4_2938 -> m4_2923  [key=0, style=bold, color=blue];
m4_3465 -> m4_3466  [key=0, style=solid];
m4_3467 -> m4_12  [key=2, style=dotted];
m4_3467 -> m4_3468  [key=0, style=solid];
m4_3467 -> m4_3469  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3467 -> m4_3470  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3467 -> m4_3471  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3467 -> m4_3472  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3466 -> m4_3467  [key=0, style=solid];
m4_3468 -> m4_3469  [key=0, style=solid];
m4_3468 -> m4_89  [key=2, style=dotted];
m4_3469 -> m4_3470  [key=0, style=solid];
m4_3469 -> m4_89  [key=2, style=dotted];
m4_3470 -> m4_3471  [key=0, style=solid];
m4_3470 -> m4_89  [key=2, style=dotted];
m4_3471 -> m4_3472  [key=0, style=solid];
m4_3471 -> m4_89  [key=2, style=dotted];
m4_3472 -> m4_3473  [key=0, style=solid];
m4_3472 -> m4_89  [key=2, style=dotted];
m4_3473 -> m4_3465  [key=0, style=bold, color=blue];
m4_2844 -> m4_2845  [key=0, style=solid];
m4_2846 -> m4_47  [key=2, style=dotted];
m4_2846 -> m4_2847  [key=0, style=solid];
m4_2847 -> m4_34  [key=2, style=dotted];
m4_2847 -> m4_2848  [key=0, style=solid];
m4_2845 -> m4_2846  [key=0, style=solid];
m4_2845 -> m4_2849  [key=2, style=dotted];
m4_2845 -> m4_2850  [key=2, style=dotted];
m4_2848 -> m4_2844  [key=0, style=bold, color=blue];
m4_945 -> m4_946  [key=0, style=solid];
m4_950 -> m4_47  [key=2, style=dotted];
m4_950 -> m4_951  [key=0, style=solid];
m4_951 -> m4_34  [key=2, style=dotted];
m4_951 -> m4_952  [key=0, style=solid];
m4_946 -> m4_950  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_946 -> m4_947  [key=0, style=solid];
m4_946 -> m4_953  [key=2, style=dotted];
m4_946 -> m4_948  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_946 -> m4_949  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_949 -> m4_950  [key=0, style=solid];
m4_949 -> m4_954  [key=2, style=dotted];
m4_947 -> m4_948  [key=0, style=solid];
m4_947 -> m4_954  [key=2, style=dotted];
m4_948 -> m4_949  [key=0, style=solid];
m4_948 -> m4_954  [key=2, style=dotted];
m4_952 -> m4_945  [key=0, style=bold, color=blue];
m4_820 -> m4_821  [key=0, style=solid];
m4_829 -> m4_34  [key=2, style=dotted];
m4_829 -> m4_830  [key=0, style=solid];
m4_828 -> m4_829  [key=0, style=solid];
m4_828 -> m4_95  [key=2, style=dotted];
m4_828 -> m4_463  [key=2, style=dotted];
m4_827 -> m4_829  [key=1, style=dashed, color=darkseagreen4, label=expected];
m4_827 -> m4_828  [key=0, style=solid];
m4_827 -> m4_832  [key=2, style=dotted];
m4_821 -> m4_828  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m4_821 -> m4_831  [key=2, style=dotted];
m4_821 -> m4_120  [key=2, style=dotted];
m4_821 -> m4_822  [key=0, style=solid];
m4_821 -> m4_824  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m4_826 -> m4_827  [key=0, style=solid];
m4_826 -> m4_565  [key=2, style=dotted];
m4_822 -> m4_559  [key=2, style=dotted];
m4_822 -> m4_826  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_822 -> m4_823  [key=0, style=solid];
m4_822 -> m4_824  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_822 -> m4_825  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_824 -> m4_645  [key=2, style=dotted];
m4_824 -> m4_825  [key=0, style=solid];
m4_825 -> m4_826  [key=0, style=solid];
m4_825 -> m4_563  [key=2, style=dotted];
m4_823 -> m4_644  [key=2, style=dotted];
m4_823 -> m4_824  [key=0, style=solid];
m4_830 -> m4_820  [key=0, style=bold, color=blue];
m4_1381 -> m4_1382  [key=0, style=solid];
m4_1382 -> m4_1383  [key=0, style=solid];
m4_1383 -> m4_1381  [key=0, style=bold, color=blue];
m4_2729 -> m4_2730  [key=0, style=solid];
m4_2742 -> m4_34  [key=2, style=dotted];
m4_2742 -> m4_2743  [key=0, style=solid];
m4_2741 -> m4_2742  [key=0, style=solid];
m4_2741 -> m4_2748  [key=2, style=dotted];
m4_2741 -> m4_2743  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m4_2743 -> m4_2744  [key=0, style=solid];
m4_2743 -> m4_2749  [key=2, style=dotted];
m4_2731 -> m4_2741  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_2731 -> m4_119  [key=2, style=dotted];
m4_2731 -> m4_2732  [key=0, style=solid];
m4_2731 -> m4_2736  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_2740 -> m4_2741  [key=0, style=solid];
m4_2740 -> m4_117  [key=2, style=dotted];
m4_2740 -> m4_565  [key=2, style=dotted];
m4_2739 -> m4_797  [key=2, style=dotted];
m4_2739 -> m4_2740  [key=0, style=solid];
m4_2734 -> m4_559  [key=2, style=dotted];
m4_2734 -> m4_2735  [key=0, style=solid];
m4_2734 -> m4_2738  [key=1, style=dashed, color=darkseagreen4, label=bsonStream];
m4_2730 -> m4_2731  [key=0, style=solid];
m4_2730 -> m4_2745  [key=2, style=dotted];
m4_2730 -> m4_2736  [key=1, style=dashed, color=darkseagreen4, label=test];
m4_2732 -> m4_2733  [key=0, style=solid];
m4_2736 -> m4_2746  [key=2, style=dotted];
m4_2736 -> m4_2737  [key=0, style=solid];
m4_2735 -> m4_2710  [key=2, style=dotted];
m4_2735 -> m4_2736  [key=0, style=solid];
m4_2735 -> m4_560  [key=2, style=dotted];
m4_2735 -> m4_2737  [key=1, style=dashed, color=darkseagreen4, label=bsonWriter];
m4_2738 -> m4_2739  [key=0, style=solid];
m4_2738 -> m4_646  [key=2, style=dotted];
m4_2733 -> m4_2734  [key=0, style=solid];
m4_2737 -> m4_2738  [key=0, style=solid];
m4_2737 -> m4_2747  [key=2, style=dotted];
m4_2744 -> m4_2729  [key=0, style=bold, color=blue];
m4_1842 -> m4_1843  [key=0, style=solid];
m4_1843 -> m4_1845  [key=2, style=dotted];
m4_1843 -> m4_1844  [key=0, style=solid];
m4_1844 -> m4_1842  [key=0, style=bold, color=blue];
m4_741 -> m4_742  [key=0, style=solid];
m4_743 -> m4_12  [key=2, style=dotted];
m4_743 -> m4_744  [key=0, style=solid];
m4_742 -> m4_47  [key=2, style=dotted];
m4_742 -> m4_743  [key=0, style=solid];
m4_742 -> m4_746  [key=2, style=dotted];
m4_744 -> m4_34  [key=2, style=dotted];
m4_744 -> m4_745  [key=0, style=solid];
m4_745 -> m4_741  [key=0, style=bold, color=blue];
m4_12 -> m4_13  [key=0, style=solid];
m4_3079 -> m4_3080  [key=0, style=solid];
m4_3085 -> m4_34  [key=2, style=dotted];
m4_3085 -> m4_3086  [key=0, style=solid];
m4_3081 -> m4_3085  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3081 -> m4_3082  [key=0, style=solid];
m4_3081 -> m4_120  [key=2, style=dotted];
m4_3081 -> m4_3092  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3081 -> m4_3086  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3081 -> m4_3087  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3081 -> m4_3088  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3081 -> m4_3089  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3084 -> m4_3085  [key=0, style=solid];
m4_3084 -> m4_520  [key=2, style=dotted];
m4_3086 -> m4_3087  [key=0, style=solid];
m4_3086 -> m4_1188  [key=2, style=dotted];
m4_3086 -> m4_203  [key=2, style=dotted];
m4_3080 -> m4_3081  [key=0, style=solid];
m4_3080 -> m4_3083  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3082 -> m4_3083  [key=0, style=solid];
m4_3082 -> m4_3092  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_3082 -> m4_3093  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_3087 -> m4_203  [key=2, style=dotted];
m4_3087 -> m4_3088  [key=0, style=solid];
m4_3087 -> m4_1188  [key=2, style=dotted];
m4_3088 -> m4_203  [key=2, style=dotted];
m4_3088 -> m4_3089  [key=0, style=solid];
m4_3088 -> m4_1188  [key=2, style=dotted];
m4_3089 -> m4_203  [key=2, style=dotted];
m4_3089 -> m4_3090  [key=0, style=solid];
m4_3089 -> m4_1188  [key=2, style=dotted];
m4_3083 -> m4_3084  [key=0, style=solid];
m4_3083 -> m4_95  [key=2, style=dotted];
m4_3083 -> m4_96  [key=2, style=dotted];
m4_3090 -> m4_3079  [key=0, style=bold, color=blue];
m4_2767 -> m4_2768  [key=0, style=solid];
m4_2775 -> m4_34  [key=2, style=dotted];
m4_2775 -> m4_2776  [key=0, style=solid];
m4_2776 -> m4_34  [key=2, style=dotted];
m4_2776 -> m4_2777  [key=0, style=solid];
m4_2777 -> m4_34  [key=2, style=dotted];
m4_2777 -> m4_2778  [key=0, style=solid];
m4_2774 -> m4_2775  [key=0, style=solid];
m4_2774 -> m4_95  [key=2, style=dotted];
m4_2774 -> m4_96  [key=2, style=dotted];
m4_2768 -> m4_2774  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m4_2768 -> m4_2769  [key=0, style=solid];
m4_2768 -> m4_2779  [key=2, style=dotted];
m4_2768 -> m4_2772  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m4_2773 -> m4_2774  [key=0, style=solid];
m4_2773 -> m4_67  [key=2, style=dotted];
m4_2772 -> m4_95  [key=2, style=dotted];
m4_2772 -> m4_962  [key=2, style=dotted];
m4_2772 -> m4_2773  [key=0, style=solid];
m4_2769 -> m4_2772  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2769 -> m4_2770  [key=0, style=solid];
m4_2769 -> m4_2766  [key=2, style=dotted];
m4_2771 -> m4_2772  [key=0, style=solid];
m4_2770 -> m4_2771  [key=0, style=solid];
m4_2778 -> m4_2767  [key=0, style=bold, color=blue];
m4_1047 -> m4_1048  [key=0, style=solid];
m4_1051 -> m4_34  [key=2, style=dotted];
m4_1051 -> m4_1052  [key=0, style=solid];
m4_1053 -> m4_34  [key=2, style=dotted];
m4_1053 -> m4_1054  [key=0, style=solid];
m4_1053 -> m4_683  [key=2, style=dotted];
m4_1054 -> m4_34  [key=2, style=dotted];
m4_1054 -> m4_1055  [key=0, style=solid];
m4_1054 -> m4_683  [key=2, style=dotted];
m4_1050 -> m4_1051  [key=0, style=solid];
m4_1050 -> m4_95  [key=2, style=dotted];
m4_1050 -> m4_463  [key=2, style=dotted];
m4_1050 -> m4_1052  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1052 -> m4_1053  [key=0, style=solid];
m4_1052 -> m4_1054  [key=1, style=dashed, color=darkseagreen4, label=m2];
m4_1052 -> m4_95  [key=2, style=dotted];
m4_1052 -> m4_96  [key=2, style=dotted];
m4_1049 -> m4_1050  [key=0, style=solid];
m4_1049 -> m4_1037  [key=2, style=dotted];
m4_1048 -> m4_1036  [key=2, style=dotted];
m4_1048 -> m4_1049  [key=0, style=solid];
m4_1055 -> m4_1047  [key=0, style=bold, color=blue];
m4_3446 -> m4_3447  [key=0, style=solid];
m4_3448 -> m4_12  [key=2, style=dotted];
m4_3448 -> m4_3449  [key=0, style=solid];
m4_3448 -> m4_3450  [key=1, style=dashed, color=darkseagreen4, label=floats];
m4_3448 -> m4_3451  [key=1, style=dashed, color=darkseagreen4, label=floats];
m4_3452 -> m4_12  [key=2, style=dotted];
m4_3452 -> m4_3453  [key=0, style=solid];
m4_3452 -> m4_3454  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m4_3452 -> m4_3455  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m4_3449 -> m4_34  [key=2, style=dotted];
m4_3449 -> m4_3450  [key=0, style=solid];
m4_3450 -> m4_34  [key=2, style=dotted];
m4_3450 -> m4_3451  [key=0, style=solid];
m4_3451 -> m4_34  [key=2, style=dotted];
m4_3451 -> m4_3452  [key=0, style=solid];
m4_3453 -> m4_34  [key=2, style=dotted];
m4_3453 -> m4_3454  [key=0, style=solid];
m4_3454 -> m4_34  [key=2, style=dotted];
m4_3454 -> m4_3455  [key=0, style=solid];
m4_3455 -> m4_34  [key=2, style=dotted];
m4_3455 -> m4_3456  [key=0, style=solid];
m4_3447 -> m4_3448  [key=0, style=solid];
m4_3447 -> m4_3452  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3456 -> m4_3446  [key=0, style=bold, color=blue];
m4_1868 -> m4_1869  [key=0, style=solid];
m4_1869 -> m4_1870  [key=0, style=solid];
m4_1869 -> m4_1871  [key=2, style=dotted];
m4_1870 -> m4_1868  [key=0, style=bold, color=blue];
m4_2475 -> m4_2476  [key=0, style=solid];
m4_2477 -> m4_65  [key=2, style=dotted];
m4_2477 -> m4_2478  [key=0, style=solid];
m4_2478 -> m4_67  [key=2, style=dotted];
m4_2478 -> m4_2479  [key=0, style=solid];
m4_2476 -> m4_2477  [key=0, style=solid];
m4_2476 -> m4_2480  [key=2, style=dotted];
m4_2479 -> m4_2475  [key=0, style=bold, color=blue];
m4_1532 -> m4_1533  [key=0, style=solid];
m4_1533 -> m4_1537  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1533 -> m4_1534  [key=0, style=solid];
m4_1534 -> m4_1536  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1534 -> m4_1535  [key=0, style=solid];
m4_1534 -> m4_8  [key=2, style=dotted];
m4_1535 -> m4_1532  [key=0, style=bold, color=blue];
m4_2993 -> m4_2994  [key=0, style=solid];
m4_2999 -> m4_12  [key=2, style=dotted];
m4_2999 -> m4_3000  [key=0, style=solid];
m4_2999 -> m4_3001  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2999 -> m4_3002  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2999 -> m4_3003  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2995 -> m4_34  [key=2, style=dotted];
m4_2995 -> m4_2996  [key=0, style=solid];
m4_2995 -> m4_2990  [key=2, style=dotted];
m4_2995 -> m4_2991  [key=2, style=dotted];
m4_2996 -> m4_34  [key=2, style=dotted];
m4_2996 -> m4_2997  [key=0, style=solid];
m4_2996 -> m4_2992  [key=2, style=dotted];
m4_2997 -> m4_34  [key=2, style=dotted];
m4_2997 -> m4_2998  [key=0, style=solid];
m4_2998 -> m4_34  [key=2, style=dotted];
m4_2998 -> m4_2999  [key=0, style=solid];
m4_3000 -> m4_34  [key=2, style=dotted];
m4_3000 -> m4_3001  [key=0, style=solid];
m4_3001 -> m4_34  [key=2, style=dotted];
m4_3001 -> m4_3002  [key=0, style=solid];
m4_3002 -> m4_34  [key=2, style=dotted];
m4_3002 -> m4_3003  [key=0, style=solid];
m4_3003 -> m4_34  [key=2, style=dotted];
m4_3003 -> m4_3004  [key=0, style=solid];
m4_2994 -> m4_2995  [key=0, style=solid];
m4_2994 -> m4_2996  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2994 -> m4_2997  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2994 -> m4_2998  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2994 -> m4_95  [key=2, style=dotted];
m4_2994 -> m4_96  [key=2, style=dotted];
m4_3004 -> m4_2993  [key=0, style=bold, color=blue];
m4_106 -> m4_107  [key=0, style=solid];
m4_108 -> m4_34  [key=2, style=dotted];
m4_108 -> m4_109  [key=0, style=solid];
m4_115 -> m4_34  [key=2, style=dotted];
m4_115 -> m4_116  [key=0, style=solid];
m4_113 -> m4_34  [key=2, style=dotted];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_122  [key=2, style=dotted];
m4_114 -> m4_34  [key=2, style=dotted];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_123  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_115  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_107 -> m4_117  [key=2, style=dotted];
m4_107 -> m4_118  [key=2, style=dotted];
m4_107 -> m4_112  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_119  [key=2, style=dotted];
m4_109 -> m4_112  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_121  [key=2, style=dotted];
m4_111 -> m4_113  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_111 -> m4_114  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_120  [key=2, style=dotted];
m4_110 -> m4_111  [key=0, style=solid];
m4_116 -> m4_106  [key=0, style=bold, color=blue];
m4_3772 -> m4_3773  [key=0, style=solid];
m4_3773 -> m4_3775  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3773 -> m4_8  [key=2, style=dotted];
m4_3773 -> m4_3774  [key=0, style=solid];
m4_3774 -> m4_3772  [key=0, style=bold, color=blue];
m4_1027 -> m4_1028  [key=0, style=solid];
m4_1032 -> m4_12  [key=2, style=dotted];
m4_1032 -> m4_1033  [key=0, style=solid];
m4_1032 -> m4_1034  [key=1, style=dashed, color=darkseagreen4, label=m2];
m4_1030 -> m4_47  [key=2, style=dotted];
m4_1030 -> m4_1032  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1030 -> m4_1031  [key=0, style=solid];
m4_1033 -> m4_34  [key=2, style=dotted];
m4_1033 -> m4_1034  [key=0, style=solid];
m4_1034 -> m4_34  [key=2, style=dotted];
m4_1034 -> m4_1035  [key=0, style=solid];
m4_1031 -> m4_34  [key=2, style=dotted];
m4_1031 -> m4_1032  [key=0, style=solid];
m4_1029 -> m4_1030  [key=0, style=solid];
m4_1029 -> m4_1037  [key=2, style=dotted];
m4_1028 -> m4_1033  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m4_1028 -> m4_1034  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m4_1028 -> m4_1029  [key=0, style=solid];
m4_1028 -> m4_1036  [key=2, style=dotted];
m4_1035 -> m4_1027  [key=0, style=bold, color=blue];
m4_3626 -> m4_3627  [key=0, style=solid];
m4_3627 -> m4_3583  [key=2, style=dotted];
m4_3627 -> m4_3628  [key=0, style=solid];
m4_3628 -> m4_3626  [key=0, style=bold, color=blue];
m4_1846 -> m4_1847  [key=0, style=solid];
m4_1847 -> m4_1848  [key=0, style=solid];
m4_1847 -> m4_1849  [key=2, style=dotted];
m4_1848 -> m4_1846  [key=0, style=bold, color=blue];
m4_1511 -> m4_1512  [key=0, style=solid];
m4_1512 -> m4_1516  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1512 -> m4_1513  [key=0, style=solid];
m4_1513 -> m4_1515  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1513 -> m4_1514  [key=0, style=solid];
m4_1513 -> m4_8  [key=2, style=dotted];
m4_1514 -> m4_1511  [key=0, style=bold, color=blue];
m4_3095 -> m4_3096  [key=0, style=solid];
m4_3101 -> m4_34  [key=2, style=dotted];
m4_3101 -> m4_3102  [key=0, style=solid];
m4_3097 -> m4_3101  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3097 -> m4_3098  [key=0, style=solid];
m4_3097 -> m4_120  [key=2, style=dotted];
m4_3097 -> m4_3107  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3097 -> m4_3102  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3097 -> m4_3103  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3097 -> m4_3104  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3100 -> m4_3101  [key=0, style=solid];
m4_3100 -> m4_520  [key=2, style=dotted];
m4_3102 -> m4_3103  [key=0, style=solid];
m4_3102 -> m4_1188  [key=2, style=dotted];
m4_3102 -> m4_203  [key=2, style=dotted];
m4_3096 -> m4_3097  [key=0, style=solid];
m4_3096 -> m4_3099  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3098 -> m4_3099  [key=0, style=solid];
m4_3098 -> m4_3107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_3098 -> m4_3108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_3103 -> m4_203  [key=2, style=dotted];
m4_3103 -> m4_1188  [key=2, style=dotted];
m4_3103 -> m4_3104  [key=0, style=solid];
m4_3104 -> m4_203  [key=2, style=dotted];
m4_3104 -> m4_1188  [key=2, style=dotted];
m4_3104 -> m4_3105  [key=0, style=solid];
m4_3099 -> m4_3100  [key=0, style=solid];
m4_3099 -> m4_95  [key=2, style=dotted];
m4_3099 -> m4_96  [key=2, style=dotted];
m4_3105 -> m4_3095  [key=0, style=bold, color=blue];
m4_124 -> m4_125  [key=0, style=solid];
m4_126 -> m4_12  [key=2, style=dotted];
m4_126 -> m4_127  [key=0, style=solid];
m4_125 -> m4_47  [key=2, style=dotted];
m4_125 -> m4_34  [key=2, style=dotted];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_129  [key=2, style=dotted];
m4_127 -> m4_34  [key=2, style=dotted];
m4_127 -> m4_128  [key=0, style=solid];
m4_128 -> m4_124  [key=0, style=bold, color=blue];
m4_3179 -> m4_3180  [key=0, style=solid];
m4_3182 -> m4_34  [key=2, style=dotted];
m4_3182 -> m4_3183  [key=0, style=solid];
m4_3183 -> m4_34  [key=2, style=dotted];
m4_3183 -> m4_3184  [key=0, style=solid];
m4_3180 -> m4_3182  [key=1, style=dashed, color=darkseagreen4, label=testObj];
m4_3180 -> m4_3181  [key=0, style=solid];
m4_3180 -> m4_3185  [key=2, style=dotted];
m4_3181 -> m4_3182  [key=0, style=solid];
m4_3181 -> m4_3183  [key=1, style=dashed, color=darkseagreen4, label=objDeserialized];
m4_3181 -> m4_3186  [key=2, style=dotted];
m4_3184 -> m4_3179  [key=0, style=bold, color=blue];
m4_1711 -> m4_1712  [key=0, style=solid];
m4_1712 -> m4_554  [key=2, style=dotted];
m4_1712 -> m4_1713  [key=0, style=solid];
m4_1713 -> m4_120  [key=2, style=dotted];
m4_1713 -> m4_1714  [key=0, style=solid];
m4_1714 -> m4_1711  [key=0, style=bold, color=blue];
m4_2465 -> m4_2466  [key=0, style=solid];
m4_2469 -> m4_12  [key=2, style=dotted];
m4_2469 -> m4_2470  [key=0, style=solid];
m4_2469 -> m4_2471  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2469 -> m4_2472  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2470 -> m4_34  [key=2, style=dotted];
m4_2470 -> m4_2471  [key=0, style=solid];
m4_2470 -> m4_1413  [key=2, style=dotted];
m4_2471 -> m4_34  [key=2, style=dotted];
m4_2471 -> m4_2472  [key=0, style=solid];
m4_2471 -> m4_1413  [key=2, style=dotted];
m4_2472 -> m4_34  [key=2, style=dotted];
m4_2472 -> m4_2473  [key=0, style=solid];
m4_2472 -> m4_1413  [key=2, style=dotted];
m4_2467 -> m4_2469  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2467 -> m4_2468  [key=0, style=solid];
m4_2467 -> m4_65  [key=2, style=dotted];
m4_2468 -> m4_2469  [key=0, style=solid];
m4_2468 -> m4_67  [key=2, style=dotted];
m4_2466 -> m4_2467  [key=0, style=solid];
m4_2466 -> m4_2474  [key=2, style=dotted];
m4_2466 -> m4_120  [key=2, style=dotted];
m4_2473 -> m4_2465  [key=0, style=bold, color=blue];
m4_2851 -> m4_2852  [key=0, style=solid];
m4_2853 -> m4_12  [key=2, style=dotted];
m4_2853 -> m4_2854  [key=0, style=solid];
m4_2853 -> m4_2855  [key=1, style=dashed, color=darkseagreen4, label=w];
m4_2853 -> m4_2856  [key=1, style=dashed, color=darkseagreen4, label=w];
m4_2854 -> m4_34  [key=2, style=dotted];
m4_2854 -> m4_2855  [key=0, style=solid];
m4_2854 -> m4_2850  [key=2, style=dotted];
m4_2855 -> m4_34  [key=2, style=dotted];
m4_2855 -> m4_2856  [key=0, style=solid];
m4_2855 -> m4_2850  [key=2, style=dotted];
m4_2856 -> m4_34  [key=2, style=dotted];
m4_2856 -> m4_2857  [key=0, style=solid];
m4_2852 -> m4_2853  [key=0, style=solid];
m4_2857 -> m4_2851  [key=0, style=bold, color=blue];
m4_1038 -> m4_1039  [key=0, style=solid];
m4_1043 -> m4_12  [key=2, style=dotted];
m4_1043 -> m4_1044  [key=0, style=solid];
m4_1043 -> m4_1045  [key=1, style=dashed, color=darkseagreen4, label=m2];
m4_1044 -> m4_34  [key=2, style=dotted];
m4_1044 -> m4_1045  [key=0, style=solid];
m4_1045 -> m4_34  [key=2, style=dotted];
m4_1045 -> m4_1046  [key=0, style=solid];
m4_1042 -> m4_34  [key=2, style=dotted];
m4_1042 -> m4_1043  [key=0, style=solid];
m4_1041 -> m4_1043  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1041 -> m4_1042  [key=0, style=solid];
m4_1041 -> m4_95  [key=2, style=dotted];
m4_1041 -> m4_463  [key=2, style=dotted];
m4_1039 -> m4_1044  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m4_1039 -> m4_1045  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m4_1039 -> m4_1040  [key=0, style=solid];
m4_1039 -> m4_1036  [key=2, style=dotted];
m4_1040 -> m4_1041  [key=0, style=solid];
m4_1040 -> m4_1037  [key=2, style=dotted];
m4_1046 -> m4_1038  [key=0, style=bold, color=blue];
m4_2916 -> m4_2917  [key=0, style=solid];
m4_2921 -> m4_34  [key=2, style=dotted];
m4_2921 -> m4_2922  [key=0, style=solid];
m4_2918 -> m4_2921  [key=1, style=dashed, color=darkseagreen4, label=dict];
m4_2918 -> m4_2919  [key=0, style=solid];
m4_2918 -> m4_117  [key=2, style=dotted];
m4_2918 -> m4_118  [key=2, style=dotted];
m4_2918 -> m4_2297  [key=2, style=dotted];
m4_2920 -> m4_2921  [key=0, style=solid];
m4_2920 -> m4_2297  [key=2, style=dotted];
m4_2917 -> m4_2918  [key=0, style=solid];
m4_2917 -> m4_2920  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_2917 -> m4_95  [key=2, style=dotted];
m4_2917 -> m4_558  [key=2, style=dotted];
m4_2919 -> m4_2920  [key=0, style=solid];
m4_2919 -> m4_117  [key=2, style=dotted];
m4_2919 -> m4_118  [key=2, style=dotted];
m4_2922 -> m4_2916  [key=0, style=bold, color=blue];
m4_596 -> m4_634  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_596 -> m4_628  [key=0, style=solid];
m4_596 -> m4_629  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_596 -> m4_630  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_596 -> m4_636  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_634 -> m4_47  [key=2, style=dotted];
m4_634 -> m4_635  [key=0, style=solid];
m4_634 -> m4_201  [key=2, style=dotted];
m4_639 -> m4_34  [key=2, style=dotted];
m4_639 -> m4_640  [key=0, style=solid];
m4_633 -> m4_634  [key=0, style=solid];
m4_633 -> m4_639  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m4_633 -> m4_633  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m4_633 -> m4_648  [key=2, style=dotted];
m4_633 -> m4_649  [key=2, style=dotted];
m4_633 -> m4_650  [key=2, style=dotted];
m4_633 -> m4_651  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_633 -> m4_637  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m4_633 -> m4_640  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m4_635 -> m4_639  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m4_635 -> m4_635  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m4_635 -> m4_636  [key=0, style=solid];
m4_635 -> m4_648  [key=2, style=dotted];
m4_635 -> m4_649  [key=2, style=dotted];
m4_635 -> m4_650  [key=2, style=dotted];
m4_635 -> m4_654  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_635 -> m4_638  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m4_635 -> m4_641  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m4_635 -> m4_642  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m4_638 -> m4_639  [key=0, style=solid];
m4_638 -> m4_66  [key=2, style=dotted];
m4_640 -> m4_641  [key=0, style=solid];
m4_640 -> m4_642  [key=0, style=solid];
m4_642 -> m4_493  [key=2, style=dotted];
m4_642 -> m4_643  [key=0, style=solid];
m4_628 -> m4_629  [key=0, style=solid];
m4_628 -> m4_559  [key=2, style=dotted];
m4_628 -> m4_630  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_628 -> m4_631  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_629 -> m4_122  [key=2, style=dotted];
m4_629 -> m4_630  [key=0, style=solid];
m4_629 -> m4_644  [key=2, style=dotted];
m4_630 -> m4_631  [key=0, style=solid];
m4_630 -> m4_645  [key=2, style=dotted];
m4_636 -> m4_122  [key=2, style=dotted];
m4_636 -> m4_66  [key=2, style=dotted];
m4_636 -> m4_637  [key=0, style=solid];
m4_632 -> m4_633  [key=0, style=solid];
m4_632 -> m4_201  [key=2, style=dotted];
m4_632 -> m4_647  [key=2, style=dotted];
m4_637 -> m4_638  [key=0, style=solid];
m4_637 -> m4_66  [key=2, style=dotted];
m4_641 -> m4_640  [key=0, style=solid];
m4_641 -> m4_203  [key=2, style=dotted];
m4_641 -> m4_641  [key=1, style=dashed, color=darkseagreen4, label=property];
m4_641 -> m4_202  [key=2, style=dotted];
m4_631 -> m4_632  [key=0, style=solid];
m4_631 -> m4_646  [key=2, style=dotted];
m4_643 -> m4_596  [key=0, style=bold, color=blue];
m4_3707 -> m4_3708  [key=0, style=solid];
m4_3714 -> m4_34  [key=2, style=dotted];
m4_3714 -> m4_3715  [key=0, style=solid];
m4_3714 -> m4_1413  [key=2, style=dotted];
m4_3708 -> m4_3714  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3708 -> m4_123  [key=2, style=dotted];
m4_3708 -> m4_3709  [key=0, style=solid];
m4_3708 -> m4_3711  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3713 -> m4_3714  [key=0, style=solid];
m4_3713 -> m4_96  [key=2, style=dotted];
m4_3711 -> m4_554  [key=2, style=dotted];
m4_3711 -> m4_3713  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3711 -> m4_463  [key=2, style=dotted];
m4_3711 -> m4_3712  [key=0, style=solid];
m4_3709 -> m4_3710  [key=0, style=solid];
m4_3710 -> m4_3713  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_3710 -> m4_95  [key=2, style=dotted];
m4_3710 -> m4_3711  [key=0, style=solid];
m4_3712 -> m4_3713  [key=0, style=solid];
m4_3712 -> m4_67  [key=2, style=dotted];
m4_3715 -> m4_3707  [key=0, style=bold, color=blue];
m4_3110 -> m4_3111  [key=0, style=solid];
m4_3115 -> m4_34  [key=2, style=dotted];
m4_3115 -> m4_3116  [key=0, style=solid];
m4_3116 -> m4_34  [key=2, style=dotted];
m4_3116 -> m4_3117  [key=0, style=solid];
m4_3117 -> m4_34  [key=2, style=dotted];
m4_3117 -> m4_3118  [key=0, style=solid];
m4_3118 -> m4_34  [key=2, style=dotted];
m4_3118 -> m4_3119  [key=0, style=solid];
m4_3111 -> m4_3115  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3111 -> m4_3116  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3111 -> m4_3117  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3111 -> m4_3118  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3111 -> m4_3112  [key=0, style=solid];
m4_3111 -> m4_120  [key=2, style=dotted];
m4_3111 -> m4_3122  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3114 -> m4_3115  [key=0, style=solid];
m4_3114 -> m4_67  [key=2, style=dotted];
m4_3112 -> m4_3113  [key=0, style=solid];
m4_3112 -> m4_3122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_3112 -> m4_3123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m4_3113 -> m4_3114  [key=0, style=solid];
m4_3113 -> m4_463  [key=2, style=dotted];
m4_3113 -> m4_95  [key=2, style=dotted];
m4_3113 -> m4_3120  [key=2, style=dotted];
m4_3119 -> m4_3110  [key=0, style=bold, color=blue];
m4_889 -> m4_890  [key=0, style=solid];
m4_891 -> m4_12  [key=2, style=dotted];
m4_891 -> m4_892  [key=0, style=solid];
m4_891 -> m4_893  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_891 -> m4_894  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_891 -> m4_895  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_891 -> m4_896  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_891 -> m4_897  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_892 -> m4_34  [key=2, style=dotted];
m4_892 -> m4_893  [key=0, style=solid];
m4_893 -> m4_34  [key=2, style=dotted];
m4_893 -> m4_894  [key=0, style=solid];
m4_894 -> m4_34  [key=2, style=dotted];
m4_894 -> m4_895  [key=0, style=solid];
m4_895 -> m4_34  [key=2, style=dotted];
m4_895 -> m4_896  [key=0, style=solid];
m4_896 -> m4_34  [key=2, style=dotted];
m4_896 -> m4_897  [key=0, style=solid];
m4_897 -> m4_34  [key=2, style=dotted];
m4_897 -> m4_898  [key=0, style=solid];
m4_890 -> m4_891  [key=0, style=solid];
m4_898 -> m4_889  [key=0, style=bold, color=blue];
m4_48 -> m4_49  [key=0, style=solid];
m4_49 -> m4_51  [key=2, style=dotted];
m4_49 -> m4_50  [key=0, style=solid];
m4_50 -> m4_48  [key=0, style=bold, color=blue];
m4_845 -> m4_846  [key=0, style=solid];
m4_851 -> m4_12  [key=2, style=dotted];
m4_851 -> m4_852  [key=0, style=solid];
m4_849 -> m4_47  [key=2, style=dotted];
m4_849 -> m4_851  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_849 -> m4_850  [key=0, style=solid];
m4_852 -> m4_34  [key=2, style=dotted];
m4_852 -> m4_853  [key=0, style=solid];
m4_850 -> m4_34  [key=2, style=dotted];
m4_850 -> m4_851  [key=0, style=solid];
m4_846 -> m4_849  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_846 -> m4_852  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_846 -> m4_847  [key=0, style=solid];
m4_846 -> m4_554  [key=2, style=dotted];
m4_846 -> m4_848  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_848 -> m4_849  [key=0, style=solid];
m4_848 -> m4_557  [key=2, style=dotted];
m4_847 -> m4_848  [key=0, style=solid];
m4_847 -> m4_557  [key=2, style=dotted];
m4_853 -> m4_845  [key=0, style=bold, color=blue];
m4_3537 -> m4_3538  [key=0, style=solid];
m4_3541 -> m4_34  [key=2, style=dotted];
m4_3541 -> m4_3542  [key=0, style=solid];
m4_3543 -> m4_34  [key=2, style=dotted];
m4_3543 -> m4_3544  [key=0, style=solid];
m4_3543 -> m4_3560  [key=2, style=dotted];
m4_3549 -> m4_34  [key=2, style=dotted];
m4_3549 -> m4_3550  [key=0, style=solid];
m4_3549 -> m4_3527  [key=2, style=dotted];
m4_3549 -> m4_3560  [key=2, style=dotted];
m4_3555 -> m4_34  [key=2, style=dotted];
m4_3555 -> m4_3556  [key=0, style=solid];
m4_3555 -> m4_3527  [key=2, style=dotted];
m4_3555 -> m4_3560  [key=2, style=dotted];
m4_3540 -> m4_3541  [key=0, style=solid];
m4_3540 -> m4_962  [key=2, style=dotted];
m4_3540 -> m4_3542  [key=1, style=dashed, color=darkseagreen4, label=text1];
m4_3542 -> m4_3543  [key=0, style=solid];
m4_3542 -> m4_96  [key=2, style=dotted];
m4_3544 -> m4_554  [key=2, style=dotted];
m4_3544 -> m4_3545  [key=0, style=solid];
m4_3544 -> m4_3546  [key=1, style=dashed, color=darkseagreen4, label=dict2];
m4_3548 -> m4_3549  [key=0, style=solid];
m4_3548 -> m4_96  [key=2, style=dotted];
m4_3550 -> m4_554  [key=2, style=dotted];
m4_3550 -> m4_3551  [key=0, style=solid];
m4_3550 -> m4_3552  [key=1, style=dashed, color=darkseagreen4, label=dict3];
m4_3554 -> m4_3555  [key=0, style=solid];
m4_3554 -> m4_96  [key=2, style=dotted];
m4_3538 -> m4_3540  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m4_3538 -> m4_3539  [key=0, style=solid];
m4_3538 -> m4_3557  [key=2, style=dotted];
m4_3538 -> m4_3545  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m4_3538 -> m4_3551  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m4_3539 -> m4_3540  [key=0, style=solid];
m4_3539 -> m4_3542  [key=1, style=dashed, color=darkseagreen4, label=options];
m4_3539 -> m4_3548  [key=1, style=dashed, color=darkseagreen4, label=options];
m4_3539 -> m4_3554  [key=1, style=dashed, color=darkseagreen4, label=options];
m4_3539 -> m4_95  [key=2, style=dotted];
m4_3539 -> m4_3558  [key=2, style=dotted];
m4_3539 -> m4_3559  [key=2, style=dotted];
m4_3539 -> m4_3546  [key=1, style=dashed, color=darkseagreen4, label=options];
m4_3539 -> m4_3552  [key=1, style=dashed, color=darkseagreen4, label=options];
m4_3545 -> m4_557  [key=2, style=dotted];
m4_3545 -> m4_3546  [key=0, style=solid];
m4_3546 -> m4_3548  [key=1, style=dashed, color=darkseagreen4, label=text2];
m4_3546 -> m4_962  [key=2, style=dotted];
m4_3546 -> m4_3547  [key=0, style=solid];
m4_3547 -> m4_3548  [key=0, style=solid];
m4_3547 -> m4_67  [key=2, style=dotted];
m4_3551 -> m4_557  [key=2, style=dotted];
m4_3551 -> m4_3552  [key=0, style=solid];
m4_3552 -> m4_3554  [key=1, style=dashed, color=darkseagreen4, label=text3];
m4_3552 -> m4_962  [key=2, style=dotted];
m4_3552 -> m4_3553  [key=0, style=solid];
m4_3553 -> m4_3554  [key=0, style=solid];
m4_3553 -> m4_67  [key=2, style=dotted];
m4_3556 -> m4_3537  [key=0, style=bold, color=blue];
m4_1697 -> m4_1698  [key=0, style=solid];
m4_1707 -> m4_12  [key=2, style=dotted];
m4_1707 -> m4_1708  [key=0, style=solid];
m4_1708 -> m4_34  [key=2, style=dotted];
m4_1708 -> m4_1709  [key=0, style=solid];
m4_1705 -> m4_1707  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1705 -> m4_1706  [key=0, style=solid];
m4_1705 -> m4_65  [key=2, style=dotted];
m4_1706 -> m4_1707  [key=0, style=solid];
m4_1706 -> m4_67  [key=2, style=dotted];
m4_1699 -> m4_1708  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m4_1699 -> m4_1700  [key=0, style=solid];
m4_1699 -> m4_1701  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m4_1699 -> m4_1702  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m4_1699 -> m4_1703  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m4_1699 -> m4_1704  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m4_1698 -> m4_1705  [key=1, style=dashed, color=darkseagreen4, label=personPropertyClass];
m4_1698 -> m4_1699  [key=0, style=solid];
m4_1698 -> m4_1710  [key=2, style=dotted];
m4_1704 -> m4_1705  [key=0, style=solid];
m4_1700 -> m4_831  [key=2, style=dotted];
m4_1700 -> m4_1701  [key=0, style=solid];
m4_1703 -> m4_831  [key=2, style=dotted];
m4_1703 -> m4_1704  [key=0, style=solid];
m4_1701 -> m4_1702  [key=0, style=solid];
m4_1702 -> m4_1703  [key=0, style=solid];
m4_1709 -> m4_1697  [key=0, style=bold, color=blue];
m4_1094 -> m4_1095  [key=0, style=solid];
m4_1095 -> m4_1097  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1095 -> m4_8  [key=2, style=dotted];
m4_1095 -> m4_1096  [key=0, style=solid];
m4_1096 -> m4_1094  [key=0, style=bold, color=blue];
m4_1762 -> m4_1763  [key=0, style=solid];
m4_1764 -> m4_8  [key=2, style=dotted];
m4_1764 -> m4_1765  [key=0, style=solid];
m4_1764 -> m4_1766  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1763 -> m4_1767  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1763 -> m4_1764  [key=0, style=solid];
m4_1765 -> m4_1762  [key=0, style=bold, color=blue];
m4_761 -> m4_762  [key=0, style=solid];
m4_764 -> m4_34  [key=2, style=dotted];
m4_764 -> m4_765  [key=0, style=solid];
m4_764 -> m4_769  [key=2, style=dotted];
m4_764 -> m4_200  [key=2, style=dotted];
m4_767 -> m4_34  [key=2, style=dotted];
m4_767 -> m4_768  [key=0, style=solid];
m4_767 -> m4_770  [key=2, style=dotted];
m4_767 -> m4_200  [key=2, style=dotted];
m4_763 -> m4_764  [key=0, style=solid];
m4_763 -> m4_199  [key=2, style=dotted];
m4_763 -> m4_765  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_765 -> m4_766  [key=0, style=solid];
m4_766 -> m4_767  [key=0, style=solid];
m4_762 -> m4_763  [key=0, style=solid];
m4_768 -> m4_761  [key=0, style=bold, color=blue];
m4_168 -> m4_169  [key=0, style=solid];
m4_171 -> m4_12  [key=2, style=dotted];
m4_171 -> m4_172  [key=0, style=solid];
m4_171 -> m4_173  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_171 -> m4_174  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_170 -> m4_47  [key=2, style=dotted];
m4_170 -> m4_171  [key=0, style=solid];
m4_172 -> m4_34  [key=2, style=dotted];
m4_172 -> m4_173  [key=0, style=solid];
m4_173 -> m4_34  [key=2, style=dotted];
m4_173 -> m4_174  [key=0, style=solid];
m4_174 -> m4_34  [key=2, style=dotted];
m4_174 -> m4_175  [key=0, style=solid];
m4_169 -> m4_149  [key=2, style=dotted];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_172  [key=1, style=dashed, color=darkseagreen4, label=input];
m4_169 -> m4_173  [key=1, style=dashed, color=darkseagreen4, label=input];
m4_169 -> m4_174  [key=1, style=dashed, color=darkseagreen4, label=input];
m4_169 -> m4_176  [key=2, style=dotted];
m4_169 -> m4_177  [key=2, style=dotted];
m4_175 -> m4_168  [key=0, style=bold, color=blue];
m4_2449 -> m4_3860  [key=0, style=solid];
m4_3860 -> m4_3861  [key=0, style=solid];
m4_3861 -> m4_2449  [key=0, style=bold, color=blue];
m4_3310 -> m4_3311  [key=0, style=solid];
m4_3312 -> m4_12  [key=2, style=dotted];
m4_3312 -> m4_3313  [key=0, style=solid];
m4_3314 -> m4_34  [key=2, style=dotted];
m4_3314 -> m4_3315  [key=0, style=solid];
m4_3314 -> m4_2092  [key=2, style=dotted];
m4_3311 -> m4_3312  [key=0, style=solid];
m4_3313 -> m4_3314  [key=0, style=solid];
m4_3315 -> m4_3310  [key=0, style=bold, color=blue];
m4_1311 -> m4_1312  [key=0, style=solid];
m4_1315 -> m4_34  [key=2, style=dotted];
m4_1315 -> m4_1316  [key=0, style=solid];
m4_1318 -> m4_34  [key=2, style=dotted];
m4_1318 -> m4_1319  [key=0, style=solid];
m4_1314 -> m4_1315  [key=0, style=solid];
m4_1314 -> m4_95  [key=2, style=dotted];
m4_1314 -> m4_463  [key=2, style=dotted];
m4_1314 -> m4_1316  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1316 -> m4_1317  [key=0, style=solid];
m4_1316 -> m4_95  [key=2, style=dotted];
m4_1316 -> m4_96  [key=2, style=dotted];
m4_1317 -> m4_1318  [key=0, style=solid];
m4_1317 -> m4_95  [key=2, style=dotted];
m4_1317 -> m4_463  [key=2, style=dotted];
m4_1312 -> m4_1314  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_1312 -> m4_1310  [key=2, style=dotted];
m4_1312 -> m4_1313  [key=0, style=solid];
m4_1313 -> m4_1314  [key=0, style=solid];
m4_1319 -> m4_1311  [key=0, style=bold, color=blue];
m4_2973 -> m4_2974  [key=0, style=solid];
m4_2976 -> m4_34  [key=2, style=dotted];
m4_2976 -> m4_2977  [key=0, style=solid];
m4_2975 -> m4_2976  [key=0, style=solid];
m4_2975 -> m4_878  [key=2, style=dotted];
m4_2975 -> m4_36  [key=2, style=dotted];
m4_2974 -> m4_2975  [key=0, style=solid];
m4_2977 -> m4_2973  [key=0, style=bold, color=blue];
m4_210 -> m4_211  [key=0, style=solid];
m4_214 -> m4_34  [key=2, style=dotted];
m4_214 -> m4_215  [key=0, style=solid];
m4_216 -> m4_34  [key=2, style=dotted];
m4_216 -> m4_217  [key=0, style=solid];
m4_218 -> m4_34  [key=2, style=dotted];
m4_218 -> m4_219  [key=0, style=solid];
m4_220 -> m4_34  [key=2, style=dotted];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_270  [key=2, style=dotted];
m4_223 -> m4_34  [key=2, style=dotted];
m4_223 -> m4_224  [key=0, style=solid];
m4_225 -> m4_34  [key=2, style=dotted];
m4_225 -> m4_226  [key=0, style=solid];
m4_227 -> m4_34  [key=2, style=dotted];
m4_227 -> m4_228  [key=0, style=solid];
m4_227 -> m4_274  [key=2, style=dotted];
m4_229 -> m4_34  [key=2, style=dotted];
m4_229 -> m4_230  [key=0, style=solid];
m4_231 -> m4_34  [key=2, style=dotted];
m4_231 -> m4_232  [key=0, style=solid];
m4_233 -> m4_34  [key=2, style=dotted];
m4_233 -> m4_234  [key=0, style=solid];
m4_235 -> m4_34  [key=2, style=dotted];
m4_235 -> m4_236  [key=0, style=solid];
m4_237 -> m4_34  [key=2, style=dotted];
m4_237 -> m4_238  [key=0, style=solid];
m4_239 -> m4_34  [key=2, style=dotted];
m4_239 -> m4_240  [key=0, style=solid];
m4_241 -> m4_34  [key=2, style=dotted];
m4_241 -> m4_242  [key=0, style=solid];
m4_243 -> m4_34  [key=2, style=dotted];
m4_243 -> m4_244  [key=0, style=solid];
m4_245 -> m4_34  [key=2, style=dotted];
m4_245 -> m4_246  [key=0, style=solid];
m4_247 -> m4_34  [key=2, style=dotted];
m4_247 -> m4_248  [key=0, style=solid];
m4_249 -> m4_34  [key=2, style=dotted];
m4_249 -> m4_250  [key=0, style=solid];
m4_251 -> m4_34  [key=2, style=dotted];
m4_251 -> m4_252  [key=0, style=solid];
m4_253 -> m4_34  [key=2, style=dotted];
m4_253 -> m4_254  [key=0, style=solid];
m4_255 -> m4_34  [key=2, style=dotted];
m4_255 -> m4_256  [key=0, style=solid];
m4_258 -> m4_34  [key=2, style=dotted];
m4_258 -> m4_259  [key=0, style=solid];
m4_260 -> m4_34  [key=2, style=dotted];
m4_260 -> m4_261  [key=0, style=solid];
m4_263 -> m4_34  [key=2, style=dotted];
m4_263 -> m4_264  [key=0, style=solid];
m4_265 -> m4_34  [key=2, style=dotted];
m4_265 -> m4_266  [key=0, style=solid];
m4_267 -> m4_34  [key=2, style=dotted];
m4_267 -> m4_268  [key=0, style=solid];
m4_211 -> m4_214  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_216  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_218  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_220  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_223  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_225  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_227  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_229  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_231  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_233  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_235  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_237  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_239  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_241  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_243  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_245  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_247  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_249  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_251  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_253  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_255  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_258  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_260  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_263  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_265  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_267  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_212  [key=0, style=solid];
m4_211 -> m4_119  [key=2, style=dotted];
m4_211 -> m4_213  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_215  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_217  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_219  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_222  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_224  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_226  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_228  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_230  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_232  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_234  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_236  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_238  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_240  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_242  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_244  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_246  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_248  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_250  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_252  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_254  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_257  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_259  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_262  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_264  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_211 -> m4_266  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_212 -> m4_214  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_269  [key=2, style=dotted];
m4_213 -> m4_214  [key=0, style=solid];
m4_215 -> m4_216  [key=0, style=solid];
m4_217 -> m4_218  [key=0, style=solid];
m4_219 -> m4_220  [key=0, style=solid];
m4_219 -> m4_270  [key=2, style=dotted];
m4_221 -> m4_223  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m4_221 -> m4_222  [key=0, style=solid];
m4_221 -> m4_271  [key=2, style=dotted];
m4_222 -> m4_223  [key=0, style=solid];
m4_224 -> m4_225  [key=0, style=solid];
m4_224 -> m4_35  [key=2, style=dotted];
m4_224 -> m4_272  [key=2, style=dotted];
m4_226 -> m4_227  [key=0, style=solid];
m4_226 -> m4_273  [key=2, style=dotted];
m4_228 -> m4_229  [key=0, style=solid];
m4_230 -> m4_231  [key=0, style=solid];
m4_232 -> m4_233  [key=0, style=solid];
m4_234 -> m4_235  [key=0, style=solid];
m4_236 -> m4_237  [key=0, style=solid];
m4_238 -> m4_239  [key=0, style=solid];
m4_240 -> m4_241  [key=0, style=solid];
m4_242 -> m4_243  [key=0, style=solid];
m4_244 -> m4_245  [key=0, style=solid];
m4_246 -> m4_247  [key=0, style=solid];
m4_248 -> m4_249  [key=0, style=solid];
m4_250 -> m4_251  [key=0, style=solid];
m4_252 -> m4_253  [key=0, style=solid];
m4_254 -> m4_255  [key=0, style=solid];
m4_256 -> m4_258  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m4_256 -> m4_257  [key=0, style=solid];
m4_256 -> m4_275  [key=2, style=dotted];
m4_257 -> m4_258  [key=0, style=solid];
m4_259 -> m4_260  [key=0, style=solid];
m4_261 -> m4_263  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m4_261 -> m4_262  [key=0, style=solid];
m4_261 -> m4_276  [key=2, style=dotted];
m4_262 -> m4_263  [key=0, style=solid];
m4_264 -> m4_265  [key=0, style=solid];
m4_266 -> m4_267  [key=0, style=solid];
m4_268 -> m4_210  [key=0, style=bold, color=blue];
m4_2433 -> m4_2434  [key=0, style=solid];
m4_2436 -> m4_12  [key=2, style=dotted];
m4_2436 -> m4_2437  [key=0, style=solid];
m4_2436 -> m4_2438  [key=1, style=dashed, color=darkseagreen4, label=deserializedResponse];
m4_2437 -> m4_34  [key=2, style=dotted];
m4_2437 -> m4_2438  [key=0, style=solid];
m4_2435 -> m4_2436  [key=0, style=solid];
m4_2435 -> m4_65  [key=2, style=dotted];
m4_2438 -> m4_2439  [key=0, style=solid];
m4_2438 -> m4_2442  [key=2, style=dotted];
m4_2438 -> m4_203  [key=2, style=dotted];
m4_2434 -> m4_2435  [key=0, style=solid];
m4_2434 -> m4_2438  [key=1, style=dashed, color=darkseagreen4, label=response];
m4_2434 -> m4_2440  [key=2, style=dotted];
m4_2434 -> m4_2441  [key=2, style=dotted];
m4_2434 -> m4_1447  [key=2, style=dotted];
m4_2439 -> m4_2433  [key=0, style=bold, color=blue];
m4_2406 -> m4_2407  [key=0, style=solid];
m4_2407 -> m4_438  [key=2, style=dotted];
m4_2407 -> m4_2408  [key=0, style=solid];
m4_2407 -> m4_3928  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m4_2408 -> m4_2406  [key=0, style=bold, color=blue];
m4_1678 -> m4_1679  [key=0, style=solid];
m4_1680 -> m4_12  [key=2, style=dotted];
m4_1680 -> m4_1681  [key=0, style=solid];
m4_1679 -> m4_1680  [key=0, style=solid];
m4_1681 -> m4_1682  [key=0, style=solid];
m4_1681 -> m4_1684  [key=0, style=solid];
m4_1681 -> m4_1187  [key=2, style=dotted];
m4_1682 -> m4_1683  [key=0, style=solid];
m4_1683 -> m4_1684  [key=0, style=solid];
m4_1683 -> m4_203  [key=2, style=dotted];
m4_1683 -> m4_1188  [key=2, style=dotted];
m4_1684 -> m4_1678  [key=0, style=bold, color=blue];
m4_3373 -> m4_3374  [key=0, style=solid];
m4_3374 -> m4_839  [key=2, style=dotted];
m4_3374 -> m4_123  [key=2, style=dotted];
m4_3374 -> m4_831  [key=2, style=dotted];
m4_3374 -> m4_120  [key=2, style=dotted];
m4_3374 -> m4_3375  [key=0, style=solid];
m4_3376 -> m4_67  [key=2, style=dotted];
m4_3376 -> m4_3377  [key=0, style=solid];
m4_3375 -> m4_95  [key=2, style=dotted];
m4_3375 -> m4_962  [key=2, style=dotted];
m4_3375 -> m4_3376  [key=0, style=solid];
m4_3377 -> m4_3373  [key=0, style=bold, color=blue];
m4_2454 -> m4_2455  [key=0, style=solid];
m4_2455 -> m4_12  [key=2, style=dotted];
m4_2455 -> m4_2456  [key=0, style=solid];
m4_2455 -> m4_2457  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2456 -> m4_34  [key=2, style=dotted];
m4_2456 -> m4_2457  [key=0, style=solid];
m4_2457 -> m4_34  [key=2, style=dotted];
m4_2457 -> m4_2458  [key=0, style=solid];
m4_2458 -> m4_2454  [key=0, style=bold, color=blue];
m4_3596 -> m4_3597  [key=0, style=solid];
m4_3597 -> m4_3583  [key=2, style=dotted];
m4_3597 -> m4_3598  [key=0, style=solid];
m4_3598 -> m4_3596  [key=0, style=bold, color=blue];
m4_3779 -> m4_3780  [key=0, style=solid];
m4_3780 -> m4_3782  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3780 -> m4_3781  [key=0, style=solid];
m4_3780 -> m4_8  [key=2, style=dotted];
m4_3781 -> m4_3779  [key=0, style=bold, color=blue];
m4_789 -> m4_790  [key=0, style=solid];
m4_793 -> m4_12  [key=2, style=dotted];
m4_793 -> m4_794  [key=0, style=solid];
m4_793 -> m4_795  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m4_795 -> m4_34  [key=2, style=dotted];
m4_795 -> m4_796  [key=0, style=solid];
m4_794 -> m4_34  [key=2, style=dotted];
m4_794 -> m4_795  [key=0, style=solid];
m4_790 -> m4_793  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_790 -> m4_791  [key=0, style=solid];
m4_790 -> m4_792  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_792 -> m4_793  [key=0, style=solid];
m4_792 -> m4_795  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m4_792 -> m4_797  [key=2, style=dotted];
m4_792 -> m4_798  [key=2, style=dotted];
m4_792 -> m4_799  [key=2, style=dotted];
m4_791 -> m4_792  [key=0, style=solid];
m4_791 -> m4_644  [key=2, style=dotted];
m4_796 -> m4_789  [key=0, style=bold, color=blue];
m4_2558 -> m4_2559  [key=0, style=solid];
m4_2559 -> m4_831  [key=2, style=dotted];
m4_2559 -> m4_2560  [key=0, style=solid];
m4_2559 -> m4_2563  [key=2, style=dotted];
m4_2560 -> m4_65  [key=2, style=dotted];
m4_2560 -> m4_2561  [key=0, style=solid];
m4_2561 -> m4_67  [key=2, style=dotted];
m4_2561 -> m4_2562  [key=0, style=solid];
m4_2562 -> m4_2558  [key=0, style=bold, color=blue];
m4_2754 -> m4_2755  [key=0, style=solid];
m4_2762 -> m4_34  [key=2, style=dotted];
m4_2762 -> m4_2763  [key=0, style=solid];
m4_2763 -> m4_34  [key=2, style=dotted];
m4_2763 -> m4_2764  [key=0, style=solid];
m4_2764 -> m4_34  [key=2, style=dotted];
m4_2764 -> m4_2765  [key=0, style=solid];
m4_2761 -> m4_2762  [key=0, style=solid];
m4_2761 -> m4_95  [key=2, style=dotted];
m4_2761 -> m4_96  [key=2, style=dotted];
m4_2755 -> m4_2761  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m4_2755 -> m4_2756  [key=0, style=solid];
m4_2755 -> n0  [key=2, style=dotted];
m4_2755 -> m4_2759  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m4_2760 -> m4_2761  [key=0, style=solid];
m4_2760 -> m4_67  [key=2, style=dotted];
m4_2759 -> m4_95  [key=2, style=dotted];
m4_2759 -> m4_962  [key=2, style=dotted];
m4_2759 -> m4_2760  [key=0, style=solid];
m4_2756 -> m4_2759  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2756 -> m4_2757  [key=0, style=solid];
m4_2756 -> m4_2766  [key=2, style=dotted];
m4_2758 -> m4_2759  [key=0, style=solid];
m4_2757 -> m4_2758  [key=0, style=solid];
m4_2765 -> m4_2754  [key=0, style=bold, color=blue];
m4_580 -> m4_581  [key=0, style=solid];
m4_582 -> m4_47  [key=2, style=dotted];
m4_582 -> m4_583  [key=0, style=solid];
m4_583 -> m4_34  [key=2, style=dotted];
m4_583 -> m4_584  [key=0, style=solid];
m4_581 -> m4_582  [key=0, style=solid];
m4_581 -> m4_585  [key=2, style=dotted];
m4_584 -> m4_580  [key=0, style=bold, color=blue];
m4_692 -> m4_693  [key=0, style=solid];
m4_696 -> m4_47  [key=2, style=dotted];
m4_696 -> m4_697  [key=0, style=solid];
m4_696 -> m4_702  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_704 -> m4_34  [key=2, style=dotted];
m4_704 -> m4_705  [key=0, style=solid];
m4_694 -> m4_696  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m4_694 -> m4_695  [key=0, style=solid];
m4_694 -> m4_554  [key=2, style=dotted];
m4_694 -> m4_699  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m4_695 -> m4_696  [key=0, style=solid];
m4_697 -> m4_698  [key=0, style=solid];
m4_697 -> m4_559  [key=2, style=dotted];
m4_697 -> m4_699  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_697 -> m4_700  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_702 -> m4_703  [key=0, style=solid];
m4_702 -> m4_666  [key=2, style=dotted];
m4_693 -> m4_704  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m4_693 -> m4_694  [key=0, style=solid];
m4_693 -> m4_695  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m4_693 -> m4_683  [key=2, style=dotted];
m4_703 -> m4_704  [key=0, style=solid];
m4_699 -> m4_700  [key=0, style=solid];
m4_699 -> m4_645  [key=2, style=dotted];
m4_698 -> m4_699  [key=0, style=solid];
m4_698 -> m4_644  [key=2, style=dotted];
m4_700 -> m4_701  [key=0, style=solid];
m4_700 -> m4_646  [key=2, style=dotted];
m4_701 -> m4_702  [key=0, style=solid];
m4_701 -> m4_647  [key=2, style=dotted];
m4_705 -> m4_692  [key=0, style=bold, color=blue];
m4_1876 -> m4_1877  [key=0, style=solid];
m4_1877 -> m4_1878  [key=0, style=solid];
m4_1877 -> m4_1879  [key=2, style=dotted];
m4_1878 -> m4_1876  [key=0, style=bold, color=blue];
m4_3746 -> m4_3747  [key=0, style=solid];
m4_3752 -> m4_34  [key=2, style=dotted];
m4_3752 -> m4_3753  [key=0, style=solid];
m4_3753 -> m4_34  [key=2, style=dotted];
m4_3753 -> m4_3754  [key=0, style=solid];
m4_3751 -> m4_3752  [key=0, style=solid];
m4_3751 -> m4_3753  [key=1, style=dashed, color=darkseagreen4, label=clonedObject];
m4_3751 -> m4_96  [key=2, style=dotted];
m4_3748 -> m4_3751  [key=1, style=dashed, color=darkseagreen4, label=serializerSettings];
m4_3748 -> m4_95  [key=2, style=dotted];
m4_3748 -> m4_3749  [key=0, style=solid];
m4_3749 -> m4_3751  [key=1, style=dashed, color=darkseagreen4, label=jsonCopy];
m4_3749 -> m4_463  [key=2, style=dotted];
m4_3749 -> m4_3750  [key=0, style=solid];
m4_3750 -> m4_3751  [key=0, style=solid];
m4_3750 -> m4_3078  [key=2, style=dotted];
m4_3747 -> m4_3748  [key=0, style=solid];
m4_3747 -> m4_3749  [key=1, style=dashed, color=darkseagreen4, label=original];
m4_3747 -> m4_3750  [key=1, style=dashed, color=darkseagreen4, label=original];
m4_3747 -> m4_3755  [key=2, style=dotted];
m4_3754 -> m4_3746  [key=0, style=bold, color=blue];
m4_1399 -> m4_1400  [key=0, style=solid];
m4_1402 -> m4_34  [key=2, style=dotted];
m4_1402 -> m4_1403  [key=0, style=solid];
m4_1403 -> m4_34  [key=2, style=dotted];
m4_1403 -> m4_1404  [key=0, style=solid];
m4_1404 -> m4_34  [key=2, style=dotted];
m4_1404 -> m4_1405  [key=0, style=solid];
m4_1405 -> m4_34  [key=2, style=dotted];
m4_1405 -> m4_1406  [key=0, style=solid];
m4_1406 -> m4_34  [key=2, style=dotted];
m4_1406 -> m4_1407  [key=0, style=solid];
m4_1407 -> m4_34  [key=2, style=dotted];
m4_1407 -> m4_1408  [key=0, style=solid];
m4_1407 -> m4_1413  [key=2, style=dotted];
m4_1408 -> m4_34  [key=2, style=dotted];
m4_1408 -> m4_1409  [key=0, style=solid];
m4_1408 -> m4_1413  [key=2, style=dotted];
m4_1409 -> m4_34  [key=2, style=dotted];
m4_1409 -> m4_1410  [key=0, style=solid];
m4_1410 -> m4_34  [key=2, style=dotted];
m4_1410 -> m4_1411  [key=0, style=solid];
m4_1401 -> m4_1402  [key=0, style=solid];
m4_1401 -> m4_1403  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1401 -> m4_1404  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1401 -> m4_1405  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1401 -> m4_1406  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1401 -> m4_1407  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1401 -> m4_1408  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1401 -> m4_1409  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1401 -> m4_1410  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1401 -> m4_95  [key=2, style=dotted];
m4_1401 -> m4_96  [key=2, style=dotted];
m4_1401 -> m4_1411  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1411 -> m4_1412  [key=0, style=solid];
m4_1411 -> m4_520  [key=2, style=dotted];
m4_1400 -> m4_1401  [key=0, style=solid];
m4_1412 -> m4_1399  [key=0, style=bold, color=blue];
m4_1114 -> m4_1115  [key=0, style=solid];
m4_1117 -> m4_47  [key=2, style=dotted];
m4_1117 -> m4_1118  [key=0, style=solid];
m4_1118 -> m4_34  [key=2, style=dotted];
m4_1118 -> m4_1119  [key=0, style=solid];
m4_1115 -> m4_1117  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m4_1115 -> m4_1116  [key=0, style=solid];
m4_1115 -> m4_1120  [key=2, style=dotted];
m4_1115 -> m4_1121  [key=2, style=dotted];
m4_1116 -> m4_1117  [key=0, style=solid];
m4_1119 -> m4_1114  [key=0, style=bold, color=blue];
m4_618 -> m4_619  [key=0, style=solid];
m4_624 -> m4_596  [key=2, style=dotted];
m4_624 -> m4_625  [key=0, style=solid];
m4_625 -> m4_67  [key=2, style=dotted];
m4_625 -> m4_626  [key=0, style=solid];
m4_619 -> m4_624  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_619 -> m4_620  [key=0, style=solid];
m4_619 -> m4_627  [key=2, style=dotted];
m4_619 -> m4_621  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_619 -> m4_622  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_619 -> m4_623  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_623 -> m4_624  [key=0, style=solid];
m4_620 -> m4_621  [key=0, style=solid];
m4_621 -> m4_622  [key=0, style=solid];
m4_622 -> m4_623  [key=0, style=solid];
m4_626 -> m4_618  [key=0, style=bold, color=blue];
m4_1850 -> m4_1851  [key=0, style=solid];
m4_1851 -> m4_1852  [key=0, style=solid];
m4_1851 -> m4_1853  [key=2, style=dotted];
m4_1852 -> m4_1850  [key=0, style=bold, color=blue];
m4_3215 -> m4_3216  [key=0, style=solid];
m4_3217 -> m4_65  [key=2, style=dotted];
m4_3217 -> m4_3218  [key=0, style=solid];
m4_3220 -> m4_65  [key=2, style=dotted];
m4_3220 -> m4_3221  [key=0, style=solid];
m4_3218 -> m4_67  [key=2, style=dotted];
m4_3218 -> m4_3219  [key=0, style=solid];
m4_3221 -> m4_67  [key=2, style=dotted];
m4_3221 -> m4_3222  [key=0, style=solid];
m4_3216 -> m4_3217  [key=0, style=solid];
m4_3216 -> m4_3223  [key=2, style=dotted];
m4_3219 -> m4_3220  [key=0, style=solid];
m4_3219 -> m4_3224  [key=2, style=dotted];
m4_3222 -> m4_3215  [key=0, style=bold, color=blue];
m4_3848 -> m4_3849  [key=0, style=solid];
m4_3849 -> m4_2297  [key=2, style=dotted];
m4_3849 -> m4_3850  [key=0, style=solid];
m4_3849 -> m4_3852  [key=1, style=dashed, color=darkseagreen4, label=encodingName];
m4_3850 -> m4_3851  [key=0, style=solid];
m4_3850 -> m4_3852  [key=0, style=solid];
m4_3852 -> m4_3853  [key=0, style=solid];
m4_3852 -> m4_3854  [key=2, style=dotted];
m4_3851 -> m4_3853  [key=0, style=solid];
m4_3853 -> m4_3848  [key=0, style=bold, color=blue];
m4_608 -> m4_609  [key=0, style=solid];
m4_614 -> m4_596  [key=2, style=dotted];
m4_614 -> m4_615  [key=0, style=solid];
m4_615 -> m4_67  [key=2, style=dotted];
m4_615 -> m4_616  [key=0, style=solid];
m4_609 -> m4_614  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_609 -> m4_610  [key=0, style=solid];
m4_609 -> m4_617  [key=2, style=dotted];
m4_609 -> m4_611  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_609 -> m4_612  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_609 -> m4_613  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_613 -> m4_614  [key=0, style=solid];
m4_610 -> m4_611  [key=0, style=solid];
m4_611 -> m4_612  [key=0, style=solid];
m4_612 -> m4_613  [key=0, style=solid];
m4_616 -> m4_608  [key=0, style=bold, color=blue];
m4_2298 -> m4_2299  [key=0, style=solid];
m4_2299 -> m4_12  [key=2, style=dotted];
m4_2299 -> m4_2300  [key=0, style=solid];
m4_2300 -> m4_34  [key=2, style=dotted];
m4_2300 -> m4_2301  [key=0, style=solid];
m4_2300 -> m4_2296  [key=2, style=dotted];
m4_2300 -> m4_683  [key=2, style=dotted];
m4_2300 -> m4_839  [key=2, style=dotted];
m4_2301 -> m4_2298  [key=0, style=bold, color=blue];
m4_2504 -> m4_2505  [key=0, style=solid];
m4_2506 -> m4_12  [key=2, style=dotted];
m4_2506 -> m4_2507  [key=0, style=solid];
m4_2506 -> m4_2508  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m4_2506 -> m4_2509  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m4_2507 -> m4_34  [key=2, style=dotted];
m4_2507 -> m4_2508  [key=0, style=solid];
m4_2508 -> m4_34  [key=2, style=dotted];
m4_2508 -> m4_2509  [key=0, style=solid];
m4_2509 -> m4_34  [key=2, style=dotted];
m4_2509 -> m4_2510  [key=0, style=solid];
m4_2505 -> m4_2506  [key=0, style=solid];
m4_2510 -> m4_2504  [key=0, style=bold, color=blue];
m4_1479 -> m4_1480  [key=0, style=solid];
m4_1481 -> m4_12  [key=2, style=dotted];
m4_1481 -> m4_1482  [key=0, style=solid];
m4_1482 -> m4_34  [key=2, style=dotted];
m4_1482 -> m4_1483  [key=0, style=solid];
m4_1480 -> m4_1481  [key=0, style=solid];
m4_1483 -> m4_1479  [key=0, style=bold, color=blue];
m4_833 -> m4_834  [key=0, style=solid];
m4_835 -> m4_47  [key=2, style=dotted];
m4_835 -> m4_836  [key=0, style=solid];
m4_836 -> m4_34  [key=2, style=dotted];
m4_836 -> m4_837  [key=0, style=solid];
m4_834 -> m4_835  [key=0, style=solid];
m4_834 -> m4_120  [key=2, style=dotted];
m4_834 -> m4_838  [key=2, style=dotted];
m4_834 -> m4_831  [key=2, style=dotted];
m4_834 -> m4_123  [key=2, style=dotted];
m4_834 -> m4_839  [key=2, style=dotted];
m4_837 -> m4_833  [key=0, style=bold, color=blue];
m4_2945 -> m4_2946  [key=0, style=solid];
m4_2946 -> m4_2948  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2946 -> m4_2947  [key=0, style=solid];
m4_2946 -> m4_8  [key=2, style=dotted];
m4_2947 -> m4_2945  [key=0, style=bold, color=blue];
m4_3191 -> m4_3198  [key=0, style=solid];
m4_3198 -> m4_117  [key=2, style=dotted];
m4_3198 -> m4_118  [key=2, style=dotted];
m4_3198 -> m4_3199  [key=0, style=solid];
m4_3198 -> m4_3201  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m4_3199 -> m4_119  [key=2, style=dotted];
m4_3199 -> m4_3200  [key=0, style=solid];
m4_3199 -> m4_3201  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_3201 -> m4_2259  [key=2, style=dotted];
m4_3201 -> m4_3202  [key=0, style=solid];
m4_3200 -> n0  [key=2, style=dotted];
m4_3200 -> m4_3201  [key=0, style=solid];
m4_3202 -> m4_3191  [key=0, style=bold, color=blue];
m4_2897 -> m4_2898  [key=0, style=solid];
m4_2900 -> m4_12  [key=2, style=dotted];
m4_2900 -> m4_2901  [key=0, style=solid];
m4_2904 -> m4_12  [key=2, style=dotted];
m4_2904 -> m4_2905  [key=0, style=solid];
m4_2898 -> m4_47  [key=2, style=dotted];
m4_2898 -> m4_2900  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2898 -> m4_2899  [key=0, style=solid];
m4_2898 -> m4_2907  [key=2, style=dotted];
m4_2902 -> m4_47  [key=2, style=dotted];
m4_2902 -> m4_2904  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2902 -> m4_2903  [key=0, style=solid];
m4_2902 -> m4_2907  [key=2, style=dotted];
m4_2899 -> m4_34  [key=2, style=dotted];
m4_2899 -> m4_2900  [key=0, style=solid];
m4_2901 -> m4_34  [key=2, style=dotted];
m4_2901 -> m4_2902  [key=0, style=solid];
m4_2903 -> m4_34  [key=2, style=dotted];
m4_2903 -> m4_2904  [key=0, style=solid];
m4_2905 -> m4_34  [key=2, style=dotted];
m4_2905 -> m4_2906  [key=0, style=solid];
m4_2906 -> m4_2897  [key=0, style=bold, color=blue];
m4_840 -> m4_841  [key=0, style=solid];
m4_843 -> m4_34  [key=2, style=dotted];
m4_843 -> m4_844  [key=0, style=solid];
m4_842 -> m4_843  [key=0, style=solid];
m4_842 -> m4_95  [key=2, style=dotted];
m4_842 -> m4_463  [key=2, style=dotted];
m4_841 -> m4_839  [key=2, style=dotted];
m4_841 -> m4_123  [key=2, style=dotted];
m4_841 -> m4_842  [key=0, style=solid];
m4_841 -> m4_831  [key=2, style=dotted];
m4_841 -> m4_120  [key=2, style=dotted];
m4_841 -> m4_838  [key=2, style=dotted];
m4_844 -> m4_840  [key=0, style=bold, color=blue];
m4_3561 -> m4_3562  [key=0, style=solid];
m4_3566 -> m4_12  [key=2, style=dotted];
m4_3566 -> m4_3567  [key=0, style=solid];
m4_3564 -> m4_47  [key=2, style=dotted];
m4_3564 -> m4_3566  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3564 -> m4_3565  [key=0, style=solid];
m4_3565 -> m4_3566  [key=0, style=solid];
m4_3565 -> m4_66  [key=2, style=dotted];
m4_3562 -> m4_3564  [key=1, style=dashed, color=darkseagreen4, label=product];
m4_3562 -> m4_3563  [key=0, style=solid];
m4_3562 -> m4_3568  [key=2, style=dotted];
m4_3563 -> m4_3564  [key=0, style=solid];
m4_3563 -> m4_554  [key=2, style=dotted];
m4_3567 -> m4_3561  [key=0, style=bold, color=blue];
m4_955 -> m4_956  [key=0, style=solid];
m4_958 -> m4_463  [key=2, style=dotted];
m4_958 -> m4_959  [key=0, style=solid];
m4_958 -> m4_960  [key=1, style=dashed, color=darkseagreen4, label=indented];
m4_957 -> m4_95  [key=2, style=dotted];
m4_957 -> m4_958  [key=0, style=solid];
m4_957 -> m4_959  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_959 -> m4_962  [key=2, style=dotted];
m4_959 -> m4_960  [key=0, style=solid];
m4_956 -> m4_958  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_956 -> m4_957  [key=0, style=solid];
m4_956 -> m4_959  [key=1, style=dashed, color=darkseagreen4, label=obj];
m4_960 -> m4_961  [key=0, style=solid];
m4_960 -> m4_963  [key=2, style=dotted];
m4_961 -> m4_955  [key=0, style=bold, color=blue];
m4_3490 -> m4_3491  [key=0, style=solid];
m4_3492 -> m4_67  [key=2, style=dotted];
m4_3492 -> m4_3493  [key=0, style=solid];
m4_3491 -> m4_95  [key=2, style=dotted];
m4_3491 -> m4_962  [key=2, style=dotted];
m4_3491 -> n0  [key=2, style=dotted];
m4_3491 -> m4_3492  [key=0, style=solid];
m4_3491 -> m4_3494  [key=2, style=dotted];
m4_3493 -> m4_3490  [key=0, style=bold, color=blue];
m4_2865 -> m4_2866  [key=0, style=solid];
m4_2866 -> m4_2868  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2866 -> m4_8  [key=2, style=dotted];
m4_2866 -> m4_2867  [key=0, style=solid];
m4_2867 -> m4_2865  [key=0, style=bold, color=blue];
m4_2488 -> m4_2489  [key=0, style=solid];
m4_2489 -> m4_8  [key=2, style=dotted];
m4_2489 -> m4_2490  [key=0, style=solid];
m4_2489 -> m4_2491  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2490 -> m4_2488  [key=0, style=bold, color=blue];
m4_1880 -> m4_1881  [key=0, style=solid];
m4_1885 -> m4_12  [key=2, style=dotted];
m4_1885 -> m4_1886  [key=0, style=solid];
m4_1885 -> m4_1887  [key=1, style=dashed, color=darkseagreen4, label=newModelStateDictionary];
m4_1883 -> m4_47  [key=2, style=dotted];
m4_1883 -> m4_1885  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1883 -> m4_1884  [key=0, style=solid];
m4_1884 -> m4_34  [key=2, style=dotted];
m4_1884 -> m4_1885  [key=0, style=solid];
m4_1886 -> m4_34  [key=2, style=dotted];
m4_1886 -> m4_1887  [key=0, style=solid];
m4_1887 -> m4_34  [key=2, style=dotted];
m4_1887 -> m4_1888  [key=0, style=solid];
m4_1881 -> m4_1883  [key=1, style=dashed, color=darkseagreen4, label=modelStateDictionary];
m4_1881 -> m4_1882  [key=0, style=solid];
m4_1881 -> m4_1823  [key=2, style=dotted];
m4_1882 -> m4_1883  [key=0, style=solid];
m4_1882 -> m4_1835  [key=2, style=dotted];
m4_1888 -> m4_1880  [key=0, style=bold, color=blue];
m4_3755 -> m4_3756  [key=0, style=solid];
m4_3756 -> m4_3757  [key=0, style=solid];
m4_3757 -> m4_3755  [key=0, style=bold, color=blue];
m4_2535 -> m4_2536  [key=0, style=solid];
m4_2541 -> m4_66  [key=2, style=dotted];
m4_2541 -> m4_2542  [key=0, style=solid];
m4_2538 -> m4_559  [key=2, style=dotted];
m4_2538 -> m4_2539  [key=0, style=solid];
m4_2538 -> m4_2540  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_2540 -> m4_2541  [key=0, style=solid];
m4_2540 -> m4_647  [key=2, style=dotted];
m4_2540 -> m4_646  [key=2, style=dotted];
m4_2540 -> m4_2544  [key=2, style=dotted];
m4_2539 -> m4_645  [key=2, style=dotted];
m4_2539 -> m4_2540  [key=0, style=solid];
m4_2537 -> m4_2538  [key=0, style=solid];
m4_2537 -> m4_2539  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_2537 -> m4_2543  [key=2, style=dotted];
m4_2536 -> m4_2539  [key=1, style=dashed, color=darkseagreen4, label=cc];
m4_2536 -> m4_2537  [key=0, style=solid];
m4_2536 -> m4_2534  [key=2, style=dotted];
m4_2542 -> m4_2535  [key=0, style=bold, color=blue];
m4_2545 -> m4_2546  [key=0, style=solid];
m4_2547 -> m4_47  [key=2, style=dotted];
m4_2547 -> m4_2548  [key=0, style=solid];
m4_2548 -> m4_34  [key=2, style=dotted];
m4_2548 -> m4_2549  [key=0, style=solid];
m4_2546 -> m4_2547  [key=0, style=solid];
m4_2546 -> m4_2550  [key=2, style=dotted];
m4_2549 -> m4_2545  [key=0, style=bold, color=blue];
m4_3669 -> m4_3670  [key=0, style=solid];
m4_3677 -> m4_34  [key=2, style=dotted];
m4_3677 -> m4_3678  [key=0, style=solid];
m4_3682 -> m4_34  [key=2, style=dotted];
m4_3682 -> m4_3683  [key=0, style=solid];
m4_3675 -> m4_34  [key=2, style=dotted];
m4_3675 -> m4_3676  [key=0, style=solid];
m4_3680 -> m4_34  [key=2, style=dotted];
m4_3680 -> m4_3681  [key=0, style=solid];
m4_3681 -> m4_34  [key=2, style=dotted];
m4_3681 -> m4_3682  [key=0, style=solid];
m4_3681 -> m4_122  [key=2, style=dotted];
m4_3685 -> m4_34  [key=2, style=dotted];
m4_3685 -> m4_3686  [key=0, style=solid];
m4_3686 -> m4_34  [key=2, style=dotted];
m4_3686 -> m4_3687  [key=0, style=solid];
m4_3686 -> m4_122  [key=2, style=dotted];
m4_3687 -> m4_34  [key=2, style=dotted];
m4_3687 -> m4_3688  [key=0, style=solid];
m4_3671 -> m4_3677  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3671 -> m4_3682  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3671 -> m4_683  [key=2, style=dotted];
m4_3671 -> m4_3672  [key=0, style=solid];
m4_3671 -> m4_3674  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3676 -> m4_3677  [key=0, style=solid];
m4_3676 -> m4_96  [key=2, style=dotted];
m4_3678 -> m4_3679  [key=0, style=solid];
m4_3678 -> m4_117  [key=2, style=dotted];
m4_3678 -> m4_118  [key=2, style=dotted];
m4_3679 -> m4_3682  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_3679 -> m4_3680  [key=0, style=solid];
m4_3679 -> m4_3681  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_3679 -> m4_3077  [key=2, style=dotted];
m4_3683 -> m4_3684  [key=0, style=solid];
m4_3683 -> m4_117  [key=2, style=dotted];
m4_3683 -> m4_118  [key=2, style=dotted];
m4_3674 -> m4_3675  [key=0, style=solid];
m4_3674 -> m4_3676  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3674 -> m4_3678  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3674 -> m4_463  [key=2, style=dotted];
m4_3684 -> m4_3685  [key=0, style=solid];
m4_3684 -> m4_3686  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_3684 -> m4_3687  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_3684 -> m4_3077  [key=2, style=dotted];
m4_3670 -> m4_3671  [key=0, style=solid];
m4_3670 -> m4_3678  [key=1, style=dashed, color=darkseagreen4, label=culture];
m4_3670 -> m4_3683  [key=1, style=dashed, color=darkseagreen4, label=culture];
m4_3670 -> m4_273  [key=2, style=dotted];
m4_3670 -> m4_3673  [key=1, style=dashed, color=darkseagreen4, label=culture];
m4_3672 -> m4_3678  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m4_3672 -> m4_3683  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m4_3672 -> m4_3673  [key=0, style=solid];
m4_3673 -> m4_3676  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_3673 -> m4_3674  [key=0, style=solid];
m4_3673 -> m4_95  [key=2, style=dotted];
m4_3688 -> m4_3669  [key=0, style=bold, color=blue];
m4_3798 -> m4_3799  [key=0, style=solid];
m4_3800 -> m4_8  [key=2, style=dotted];
m4_3800 -> m4_3801  [key=0, style=solid];
m4_3800 -> m4_3802  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3799 -> m4_3800  [key=0, style=solid];
m4_3799 -> m4_3803  [key=1, style=dashed, color=darkseagreen4, label=JsonMessage];
m4_3801 -> m4_3798  [key=0, style=bold, color=blue];
m4_1619 -> m4_1620  [key=0, style=solid];
m4_1624 -> m4_47  [key=2, style=dotted];
m4_1624 -> m4_1625  [key=0, style=solid];
m4_1625 -> m4_34  [key=2, style=dotted];
m4_1625 -> m4_1626  [key=0, style=solid];
m4_1620 -> m4_1624  [key=1, style=dashed, color=darkseagreen4, label=strings];
m4_1620 -> m4_1621  [key=0, style=solid];
m4_1620 -> m4_120  [key=2, style=dotted];
m4_1620 -> m4_1622  [key=1, style=dashed, color=darkseagreen4, label=strings];
m4_1620 -> m4_1623  [key=1, style=dashed, color=darkseagreen4, label=strings];
m4_1623 -> m4_1624  [key=0, style=solid];
m4_1623 -> m4_1627  [key=2, style=dotted];
m4_1621 -> m4_1622  [key=0, style=solid];
m4_1621 -> m4_1627  [key=2, style=dotted];
m4_1622 -> m4_1623  [key=0, style=solid];
m4_1622 -> m4_1627  [key=2, style=dotted];
m4_1626 -> m4_1619  [key=0, style=bold, color=blue];
m4_1628 -> m4_1629  [key=0, style=solid];
m4_1632 -> m4_12  [key=2, style=dotted];
m4_1632 -> m4_1633  [key=0, style=solid];
m4_1632 -> m4_1634  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_1633 -> m4_34  [key=2, style=dotted];
m4_1633 -> m4_1634  [key=0, style=solid];
m4_1634 -> m4_34  [key=2, style=dotted];
m4_1634 -> m4_1635  [key=0, style=solid];
m4_1630 -> m4_1632  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1630 -> m4_1631  [key=0, style=solid];
m4_1630 -> m4_65  [key=2, style=dotted];
m4_1631 -> m4_1632  [key=0, style=solid];
m4_1631 -> m4_67  [key=2, style=dotted];
m4_1629 -> m4_1630  [key=0, style=solid];
m4_1629 -> m4_1636  [key=2, style=dotted];
m4_1635 -> m4_1628  [key=0, style=bold, color=blue];
m4_2908 -> m4_2909  [key=0, style=solid];
m4_2911 -> m4_12  [key=2, style=dotted];
m4_2911 -> m4_2912  [key=0, style=solid];
m4_2909 -> m4_47  [key=2, style=dotted];
m4_2909 -> m4_2910  [key=0, style=solid];
m4_2909 -> m4_2914  [key=2, style=dotted];
m4_2909 -> m4_2915  [key=2, style=dotted];
m4_2910 -> m4_34  [key=2, style=dotted];
m4_2910 -> m4_2911  [key=0, style=solid];
m4_2912 -> m4_34  [key=2, style=dotted];
m4_2912 -> m4_2913  [key=0, style=solid];
m4_2912 -> m4_2915  [key=2, style=dotted];
m4_2913 -> m4_2908  [key=0, style=bold, color=blue];
m4_3125 -> m4_3126  [key=0, style=solid];
m4_3127 -> m4_12  [key=2, style=dotted];
m4_3127 -> m4_3128  [key=0, style=solid];
m4_3127 -> m4_3129  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3127 -> m4_3130  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3127 -> m4_3131  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_3129 -> m4_34  [key=2, style=dotted];
m4_3129 -> m4_3130  [key=0, style=solid];
m4_3130 -> m4_34  [key=2, style=dotted];
m4_3130 -> m4_3131  [key=0, style=solid];
m4_3131 -> m4_34  [key=2, style=dotted];
m4_3131 -> m4_3132  [key=0, style=solid];
m4_3126 -> m4_3127  [key=0, style=solid];
m4_3126 -> m4_3133  [key=2, style=dotted];
m4_3128 -> m4_3129  [key=0, style=solid];
m4_3128 -> m4_520  [key=2, style=dotted];
m4_3132 -> m4_3125  [key=0, style=bold, color=blue];
m4_2978 -> m4_2979  [key=0, style=solid];
m4_2980 -> m4_34  [key=2, style=dotted];
m4_2980 -> m4_2981  [key=0, style=solid];
m4_2980 -> m4_2990  [key=2, style=dotted];
m4_2980 -> m4_2991  [key=2, style=dotted];
m4_2981 -> m4_34  [key=2, style=dotted];
m4_2981 -> m4_2982  [key=0, style=solid];
m4_2981 -> m4_2992  [key=2, style=dotted];
m4_2982 -> m4_34  [key=2, style=dotted];
m4_2982 -> m4_2983  [key=0, style=solid];
m4_2983 -> m4_34  [key=2, style=dotted];
m4_2983 -> m4_2984  [key=0, style=solid];
m4_2985 -> m4_34  [key=2, style=dotted];
m4_2985 -> m4_2986  [key=0, style=solid];
m4_2985 -> m4_2990  [key=2, style=dotted];
m4_2985 -> m4_2991  [key=2, style=dotted];
m4_2986 -> m4_34  [key=2, style=dotted];
m4_2986 -> m4_2987  [key=0, style=solid];
m4_2986 -> m4_2992  [key=2, style=dotted];
m4_2987 -> m4_34  [key=2, style=dotted];
m4_2987 -> m4_2988  [key=0, style=solid];
m4_2988 -> m4_34  [key=2, style=dotted];
m4_2988 -> m4_2989  [key=0, style=solid];
m4_2979 -> m4_2980  [key=0, style=solid];
m4_2979 -> m4_2981  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2979 -> m4_2982  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2979 -> m4_2983  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2979 -> m4_95  [key=2, style=dotted];
m4_2979 -> m4_96  [key=2, style=dotted];
m4_2984 -> m4_2985  [key=0, style=solid];
m4_2984 -> m4_2986  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2984 -> m4_2987  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2984 -> m4_2988  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2984 -> m4_95  [key=2, style=dotted];
m4_2984 -> m4_96  [key=2, style=dotted];
m4_2989 -> m4_2978  [key=0, style=bold, color=blue];
m4_993 -> m4_994  [key=0, style=solid];
m4_996 -> m4_12  [key=2, style=dotted];
m4_996 -> m4_997  [key=0, style=solid];
m4_996 -> m4_998  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_994 -> m4_47  [key=2, style=dotted];
m4_994 -> m4_995  [key=0, style=solid];
m4_994 -> m4_1000  [key=2, style=dotted];
m4_995 -> m4_34  [key=2, style=dotted];
m4_995 -> m4_996  [key=0, style=solid];
m4_997 -> m4_34  [key=2, style=dotted];
m4_997 -> m4_998  [key=0, style=solid];
m4_998 -> m4_34  [key=2, style=dotted];
m4_998 -> m4_999  [key=0, style=solid];
m4_999 -> m4_993  [key=0, style=bold, color=blue];
m4_2618 -> m4_2619  [key=0, style=solid];
m4_2619 -> m4_65  [key=2, style=dotted];
m4_2619 -> m4_2620  [key=0, style=solid];
m4_2619 -> m4_2624  [key=2, style=dotted];
m4_2621 -> m4_65  [key=2, style=dotted];
m4_2621 -> m4_2622  [key=0, style=solid];
m4_2621 -> m4_2625  [key=2, style=dotted];
m4_2620 -> m4_67  [key=2, style=dotted];
m4_2620 -> m4_2621  [key=0, style=solid];
m4_2622 -> m4_67  [key=2, style=dotted];
m4_2622 -> m4_2623  [key=0, style=solid];
m4_2623 -> m4_2618  [key=0, style=bold, color=blue];
m4_1574 -> m4_1575  [key=0, style=solid];
m4_1576 -> m4_8  [key=2, style=dotted];
m4_1576 -> m4_1577  [key=0, style=solid];
m4_1576 -> m4_1578  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1575 -> m4_1576  [key=0, style=solid];
m4_1575 -> m4_1579  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1577 -> m4_1574  [key=0, style=bold, color=blue];
m4_37 -> m4_38  [key=0, style=solid];
m4_42 -> m4_12  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_40 -> m4_47  [key=2, style=dotted];
m4_40 -> m4_41  [key=0, style=solid];
m4_41 -> m4_34  [key=2, style=dotted];
m4_41 -> m4_42  [key=0, style=solid];
m4_43 -> m4_34  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_38 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_45  [key=2, style=dotted];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_46  [key=2, style=dotted];
m4_44 -> m4_37  [key=0, style=bold, color=blue];
m4_3157 -> m4_3158  [key=0, style=solid];
m4_3161 -> m4_12  [key=2, style=dotted];
m4_3161 -> m4_3162  [key=0, style=solid];
m4_3161 -> m4_3163  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_3161 -> m4_3164  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_3162 -> m4_34  [key=2, style=dotted];
m4_3162 -> m4_3163  [key=0, style=solid];
m4_3163 -> m4_34  [key=2, style=dotted];
m4_3163 -> m4_3164  [key=0, style=solid];
m4_3163 -> m4_831  [key=2, style=dotted];
m4_3164 -> m4_34  [key=2, style=dotted];
m4_3164 -> m4_3165  [key=0, style=solid];
m4_3164 -> m4_831  [key=2, style=dotted];
m4_3159 -> m4_3161  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3159 -> m4_3160  [key=0, style=solid];
m4_3159 -> m4_65  [key=2, style=dotted];
m4_3160 -> m4_3161  [key=0, style=solid];
m4_3160 -> m4_67  [key=2, style=dotted];
m4_3158 -> m4_3159  [key=0, style=solid];
m4_3158 -> m4_554  [key=2, style=dotted];
m4_3158 -> m4_831  [key=2, style=dotted];
m4_3165 -> m4_3157  [key=0, style=bold, color=blue];
m4_1469 -> m4_1470  [key=0, style=solid];
m4_1471 -> m4_12  [key=2, style=dotted];
m4_1471 -> m4_1472  [key=0, style=solid];
m4_1471 -> m4_1473  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_1471 -> m4_1474  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_1471 -> m4_1475  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_1471 -> m4_1476  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_1474 -> m4_34  [key=2, style=dotted];
m4_1474 -> m4_1475  [key=0, style=solid];
m4_1475 -> m4_34  [key=2, style=dotted];
m4_1475 -> m4_1476  [key=0, style=solid];
m4_1476 -> m4_34  [key=2, style=dotted];
m4_1476 -> m4_1477  [key=0, style=solid];
m4_1470 -> m4_1471  [key=0, style=solid];
m4_1472 -> m4_1473  [key=0, style=solid];
m4_1472 -> m4_1478  [key=2, style=dotted];
m4_1473 -> m4_1474  [key=0, style=solid];
m4_1473 -> m4_66  [key=2, style=dotted];
m4_1477 -> m4_1469  [key=0, style=bold, color=blue];
m4_1733 -> m4_1734  [key=0, style=solid];
m4_1734 -> m4_65  [key=2, style=dotted];
m4_1734 -> m4_1735  [key=0, style=solid];
m4_1735 -> m4_1733  [key=0, style=bold, color=blue];
m4_3650 -> m4_3651  [key=0, style=solid];
m4_3657 -> m4_34  [key=2, style=dotted];
m4_3657 -> m4_3658  [key=0, style=solid];
m4_3662 -> m4_34  [key=2, style=dotted];
m4_3662 -> m4_3663  [key=0, style=solid];
m4_3655 -> m4_34  [key=2, style=dotted];
m4_3655 -> m4_3656  [key=0, style=solid];
m4_3660 -> m4_34  [key=2, style=dotted];
m4_3660 -> m4_3661  [key=0, style=solid];
m4_3661 -> m4_34  [key=2, style=dotted];
m4_3661 -> m4_3662  [key=0, style=solid];
m4_3661 -> m4_122  [key=2, style=dotted];
m4_3665 -> m4_34  [key=2, style=dotted];
m4_3665 -> m4_3666  [key=0, style=solid];
m4_3666 -> m4_34  [key=2, style=dotted];
m4_3666 -> m4_3667  [key=0, style=solid];
m4_3666 -> m4_122  [key=2, style=dotted];
m4_3667 -> m4_34  [key=2, style=dotted];
m4_3667 -> m4_3668  [key=0, style=solid];
m4_3651 -> m4_3657  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3651 -> m4_3662  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3651 -> m4_683  [key=2, style=dotted];
m4_3651 -> m4_3652  [key=0, style=solid];
m4_3651 -> m4_3654  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3656 -> m4_3657  [key=0, style=solid];
m4_3656 -> m4_96  [key=2, style=dotted];
m4_3658 -> m4_3659  [key=0, style=solid];
m4_3658 -> m4_117  [key=2, style=dotted];
m4_3658 -> m4_118  [key=2, style=dotted];
m4_3659 -> m4_3662  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_3659 -> m4_3660  [key=0, style=solid];
m4_3659 -> m4_3661  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_3659 -> m4_3077  [key=2, style=dotted];
m4_3663 -> m4_3664  [key=0, style=solid];
m4_3663 -> m4_117  [key=2, style=dotted];
m4_3663 -> m4_118  [key=2, style=dotted];
m4_3654 -> m4_3655  [key=0, style=solid];
m4_3654 -> m4_3656  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3654 -> m4_3658  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3654 -> m4_463  [key=2, style=dotted];
m4_3664 -> m4_3665  [key=0, style=solid];
m4_3664 -> m4_3666  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_3664 -> m4_3667  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_3664 -> m4_3077  [key=2, style=dotted];
m4_3652 -> m4_3658  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m4_3652 -> m4_3663  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m4_3652 -> m4_3653  [key=0, style=solid];
m4_3653 -> m4_3656  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_3653 -> m4_3654  [key=0, style=solid];
m4_3653 -> m4_95  [key=2, style=dotted];
m4_3668 -> m4_3650  [key=0, style=bold, color=blue];
m4_2360 -> m4_2361  [key=0, style=solid];
m4_2362 -> m4_12  [key=2, style=dotted];
m4_2362 -> m4_2363  [key=0, style=solid];
m4_2363 -> m4_34  [key=2, style=dotted];
m4_2363 -> m4_2364  [key=0, style=solid];
m4_2361 -> m4_2362  [key=0, style=solid];
m4_2364 -> m4_2360  [key=0, style=bold, color=blue];
m4_1500 -> m4_1501  [key=0, style=solid];
m4_1502 -> m4_12  [key=2, style=dotted];
m4_1502 -> m4_1503  [key=0, style=solid];
m4_1501 -> m4_1502  [key=0, style=solid];
m4_1503 -> m4_1500  [key=0, style=bold, color=blue];
m4_1018 -> m4_1019  [key=0, style=solid];
m4_1021 -> m4_34  [key=2, style=dotted];
m4_1021 -> m4_1022  [key=0, style=solid];
m4_1023 -> m4_34  [key=2, style=dotted];
m4_1023 -> m4_1024  [key=0, style=solid];
m4_1020 -> m4_1021  [key=0, style=solid];
m4_1020 -> m4_1025  [key=2, style=dotted];
m4_1020 -> m4_1026  [key=2, style=dotted];
m4_1020 -> m4_1022  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1022 -> m4_1023  [key=0, style=solid];
m4_1022 -> m4_1025  [key=2, style=dotted];
m4_1022 -> m4_36  [key=2, style=dotted];
m4_1019 -> m4_1020  [key=0, style=solid];
m4_1019 -> m4_1017  [key=2, style=dotted];
m4_1024 -> m4_1018  [key=0, style=bold, color=blue];
m4_3341 -> m4_3342  [key=0, style=solid];
m4_3344 -> m4_34  [key=2, style=dotted];
m4_3344 -> m4_3345  [key=0, style=solid];
m4_3346 -> m4_34  [key=2, style=dotted];
m4_3346 -> m4_3347  [key=0, style=solid];
m4_3343 -> m4_3344  [key=0, style=solid];
m4_3343 -> m4_95  [key=2, style=dotted];
m4_3343 -> m4_3349  [key=2, style=dotted];
m4_3343 -> m4_463  [key=2, style=dotted];
m4_3343 -> m4_3345  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3345 -> m4_3346  [key=0, style=solid];
m4_3345 -> m4_95  [key=2, style=dotted];
m4_3345 -> m4_3349  [key=2, style=dotted];
m4_3345 -> m4_96  [key=2, style=dotted];
m4_3342 -> m4_3343  [key=0, style=solid];
m4_3342 -> m4_3348  [key=2, style=dotted];
m4_3347 -> m4_3341  [key=0, style=bold, color=blue];
m4_1130 -> m4_1131  [key=0, style=solid];
m4_1134 -> m4_12  [key=2, style=dotted];
m4_1134 -> m4_1135  [key=0, style=solid];
m4_1134 -> m4_1136  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m4_1134 -> m4_1137  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m4_1134 -> m4_1138  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m4_1134 -> m4_1139  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m4_1134 -> m4_1140  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m4_1134 -> m4_1141  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m4_1132 -> m4_47  [key=2, style=dotted];
m4_1132 -> m4_1134  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1132 -> m4_1133  [key=0, style=solid];
m4_1133 -> m4_34  [key=2, style=dotted];
m4_1133 -> m4_1134  [key=0, style=solid];
m4_1135 -> m4_34  [key=2, style=dotted];
m4_1135 -> m4_1136  [key=0, style=solid];
m4_1135 -> m4_976  [key=2, style=dotted];
m4_1136 -> m4_34  [key=2, style=dotted];
m4_1136 -> m4_1137  [key=0, style=solid];
m4_1137 -> m4_34  [key=2, style=dotted];
m4_1137 -> m4_1138  [key=0, style=solid];
m4_1138 -> m4_34  [key=2, style=dotted];
m4_1138 -> m4_1139  [key=0, style=solid];
m4_1139 -> m4_34  [key=2, style=dotted];
m4_1139 -> m4_1140  [key=0, style=solid];
m4_1140 -> m4_34  [key=2, style=dotted];
m4_1140 -> m4_1141  [key=0, style=solid];
m4_1141 -> m4_34  [key=2, style=dotted];
m4_1141 -> m4_1142  [key=0, style=solid];
m4_1131 -> m4_1132  [key=0, style=solid];
m4_1131 -> m4_1143  [key=2, style=dotted];
m4_1131 -> m4_976  [key=2, style=dotted];
m4_1142 -> m4_1130  [key=0, style=bold, color=blue];
m4_1613 -> m4_1614  [key=0, style=solid];
m4_1614 -> m4_8  [key=2, style=dotted];
m4_1614 -> m4_1615  [key=0, style=solid];
m4_1614 -> m4_1616  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1615 -> m4_1613  [key=0, style=bold, color=blue];
m4_2637 -> m4_2638  [key=0, style=solid];
m4_2641 -> m4_12  [key=2, style=dotted];
m4_2641 -> m4_2642  [key=0, style=solid];
m4_2642 -> m4_34  [key=2, style=dotted];
m4_2642 -> m4_2643  [key=0, style=solid];
m4_2642 -> m4_2634  [key=2, style=dotted];
m4_2639 -> m4_2641  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2639 -> m4_2640  [key=0, style=solid];
m4_2639 -> m4_65  [key=2, style=dotted];
m4_2640 -> m4_2641  [key=0, style=solid];
m4_2640 -> m4_67  [key=2, style=dotted];
m4_2638 -> m4_2639  [key=0, style=solid];
m4_2638 -> m4_2626  [key=2, style=dotted];
m4_2643 -> m4_2637  [key=0, style=bold, color=blue];
m4_3399 -> m4_3400  [key=0, style=solid];
m4_3404 -> m4_34  [key=2, style=dotted];
m4_3404 -> m4_3405  [key=0, style=solid];
m4_3401 -> m4_3404  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m4_3401 -> m4_3402  [key=0, style=solid];
m4_3401 -> m4_2710  [key=2, style=dotted];
m4_3401 -> m4_3403  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m4_3403 -> m4_3404  [key=0, style=solid];
m4_3403 -> m4_2746  [key=2, style=dotted];
m4_3405 -> m4_3406  [key=0, style=solid];
m4_3405 -> m4_2714  [key=2, style=dotted];
m4_3400 -> m4_3401  [key=0, style=solid];
m4_3400 -> m4_3405  [key=1, style=dashed, color=darkseagreen4, label=sw];
m4_3400 -> m4_2709  [key=2, style=dotted];
m4_3402 -> m4_3403  [key=0, style=solid];
m4_3402 -> m4_95  [key=2, style=dotted];
m4_3402 -> m4_558  [key=2, style=dotted];
m4_3406 -> m4_67  [key=2, style=dotted];
m4_3406 -> m4_3407  [key=0, style=solid];
m4_3407 -> m4_3399  [key=0, style=bold, color=blue];
m4_1560 -> m4_1561  [key=0, style=solid];
m4_1561 -> m4_1565  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1561 -> m4_1562  [key=0, style=solid];
m4_1562 -> m4_1564  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1562 -> m4_1563  [key=0, style=solid];
m4_1562 -> m4_8  [key=2, style=dotted];
m4_1563 -> m4_1560  [key=0, style=bold, color=blue];
m4_471 -> m4_472  [key=0, style=solid];
m4_474 -> m4_12  [key=2, style=dotted];
m4_474 -> m4_475  [key=0, style=solid];
m4_474 -> m4_476  [key=1, style=dashed, color=darkseagreen4, label=r2];
m4_475 -> m4_34  [key=2, style=dotted];
m4_475 -> m4_476  [key=0, style=solid];
m4_475 -> m4_479  [key=2, style=dotted];
m4_476 -> m4_34  [key=2, style=dotted];
m4_476 -> m4_477  [key=0, style=solid];
m4_473 -> m4_474  [key=0, style=solid];
m4_473 -> m4_65  [key=2, style=dotted];
m4_472 -> m4_473  [key=0, style=solid];
m4_472 -> m4_478  [key=2, style=dotted];
m4_477 -> m4_471  [key=0, style=bold, color=blue];
m4_1360 -> m4_1361  [key=0, style=solid];
m4_1367 -> m4_12  [key=2, style=dotted];
m4_1367 -> m4_1368  [key=0, style=solid];
m4_1367 -> m4_1369  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m4_1367 -> m4_1370  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m4_1368 -> m4_34  [key=2, style=dotted];
m4_1368 -> m4_1369  [key=0, style=solid];
m4_1369 -> m4_34  [key=2, style=dotted];
m4_1369 -> m4_1370  [key=0, style=solid];
m4_1370 -> m4_34  [key=2, style=dotted];
m4_1370 -> m4_1371  [key=0, style=solid];
m4_1366 -> m4_1367  [key=0, style=solid];
m4_1366 -> m4_67  [key=2, style=dotted];
m4_1365 -> m4_1366  [key=0, style=solid];
m4_1365 -> m4_65  [key=2, style=dotted];
m4_1361 -> m4_1365  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m4_1361 -> m4_1362  [key=0, style=solid];
m4_1361 -> m4_1372  [key=2, style=dotted];
m4_1361 -> m4_1363  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m4_1361 -> m4_1364  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m4_1364 -> m4_1365  [key=0, style=solid];
m4_1362 -> m4_1363  [key=0, style=solid];
m4_1363 -> m4_1364  [key=0, style=solid];
m4_1371 -> m4_1360  [key=0, style=bold, color=blue];
m4_1245 -> m4_1246  [key=0, style=solid];
m4_1247 -> m4_47  [key=2, style=dotted];
m4_1247 -> m4_1248  [key=0, style=solid];
m4_1247 -> m4_1250  [key=1, style=dashed, color=darkseagreen4, label=defaultJson];
m4_1246 -> m4_1247  [key=0, style=solid];
m4_1246 -> m4_1254  [key=2, style=dotted];
m4_1246 -> m4_831  [key=2, style=dotted];
m4_1246 -> m4_1248  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_1246 -> m4_1249  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_1248 -> m4_1249  [key=0, style=solid];
m4_1248 -> m4_878  [key=2, style=dotted];
m4_1248 -> m4_1026  [key=2, style=dotted];
m4_1248 -> m4_1251  [key=1, style=dashed, color=darkseagreen4, label=isoJson];
m4_1250 -> m4_1251  [key=0, style=solid];
m4_1250 -> m4_66  [key=2, style=dotted];
m4_1249 -> m4_1250  [key=0, style=solid];
m4_1249 -> m4_1074  [key=2, style=dotted];
m4_1249 -> m4_1026  [key=2, style=dotted];
m4_1249 -> m4_1252  [key=1, style=dashed, color=darkseagreen4, label=javascriptJson];
m4_1251 -> m4_66  [key=2, style=dotted];
m4_1251 -> m4_1252  [key=0, style=solid];
m4_1252 -> m4_66  [key=2, style=dotted];
m4_1252 -> m4_1253  [key=0, style=solid];
m4_1253 -> m4_1245  [key=0, style=bold, color=blue];
m4_706 -> m4_707  [key=0, style=solid];
m4_711 -> m4_47  [key=2, style=dotted];
m4_711 -> m4_712  [key=0, style=solid];
m4_714 -> m4_34  [key=2, style=dotted];
m4_714 -> m4_715  [key=0, style=solid];
m4_715 -> m4_34  [key=2, style=dotted];
m4_715 -> m4_716  [key=0, style=solid];
m4_717 -> m4_34  [key=2, style=dotted];
m4_717 -> m4_718  [key=0, style=solid];
m4_707 -> m4_711  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m4_707 -> m4_708  [key=0, style=solid];
m4_707 -> m4_719  [key=2, style=dotted];
m4_707 -> m4_709  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m4_707 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m4_707 -> m4_713  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m4_710 -> m4_711  [key=0, style=solid];
m4_712 -> m4_714  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m4_712 -> m4_715  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m4_712 -> m4_717  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m4_712 -> m4_713  [key=0, style=solid];
m4_712 -> m4_666  [key=2, style=dotted];
m4_712 -> m4_716  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m4_713 -> m4_714  [key=0, style=solid];
m4_713 -> m4_720  [key=2, style=dotted];
m4_716 -> m4_717  [key=0, style=solid];
m4_716 -> m4_721  [key=2, style=dotted];
m4_708 -> m4_709  [key=0, style=solid];
m4_709 -> m4_710  [key=0, style=solid];
m4_718 -> m4_706  [key=0, style=bold, color=blue];
m4_501 -> m4_502  [key=0, style=solid];
m4_503 -> m4_12  [key=2, style=dotted];
m4_503 -> m4_504  [key=0, style=solid];
m4_504 -> m4_34  [key=2, style=dotted];
m4_504 -> m4_505  [key=0, style=solid];
m4_502 -> m4_503  [key=0, style=solid];
m4_505 -> m4_501  [key=0, style=bold, color=blue];
m4_3030 -> m4_3033  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_3030 -> m4_3031  [key=0, style=solid];
m4_3033 -> m4_2093  [key=2, style=dotted];
m4_3033 -> m4_3034  [key=0, style=solid];
m4_3033 -> m4_3035  [key=2, style=dotted];
m4_3033 -> m4_3036  [key=2, style=dotted];
m4_3033 -> m4_3037  [key=2, style=dotted];
m4_3032 -> m4_3033  [key=0, style=solid];
m4_3031 -> m4_3032  [key=0, style=solid];
m4_3034 -> m4_3030  [key=0, style=bold, color=blue];
m4_3620 -> m4_3621  [key=0, style=solid];
m4_3621 -> m4_3583  [key=2, style=dotted];
m4_3621 -> m4_3622  [key=0, style=solid];
m4_3622 -> m4_3620  [key=0, style=bold, color=blue];
m4_2277 -> m4_2278  [key=0, style=solid];
m4_2281 -> m4_12  [key=2, style=dotted];
m4_2281 -> m4_2282  [key=0, style=solid];
m4_2282 -> m4_34  [key=2, style=dotted];
m4_2282 -> m4_2282  [key=1, style=dashed, color=darkseagreen4, label=newStruct];
m4_2282 -> m4_2283  [key=0, style=solid];
m4_2279 -> m4_2281  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2279 -> m4_2280  [key=0, style=solid];
m4_2279 -> m4_65  [key=2, style=dotted];
m4_2280 -> m4_2281  [key=0, style=solid];
m4_2280 -> m4_67  [key=2, style=dotted];
m4_2278 -> m4_2279  [key=0, style=solid];
m4_2278 -> m4_2284  [key=2, style=dotted];
m4_2283 -> m4_2277  [key=0, style=bold, color=blue];
m4_1282 -> m4_1283  [key=0, style=solid];
m4_1285 -> m4_34  [key=2, style=dotted];
m4_1285 -> m4_1286  [key=0, style=solid];
m4_1286 -> m4_34  [key=2, style=dotted];
m4_1286 -> m4_1287  [key=0, style=solid];
m4_1288 -> m4_34  [key=2, style=dotted];
m4_1288 -> m4_1289  [key=0, style=solid];
m4_1289 -> m4_34  [key=2, style=dotted];
m4_1289 -> m4_1290  [key=0, style=solid];
m4_1284 -> m4_1285  [key=0, style=solid];
m4_1284 -> m4_1286  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1284 -> m4_95  [key=2, style=dotted];
m4_1284 -> m4_96  [key=2, style=dotted];
m4_1287 -> m4_1288  [key=0, style=solid];
m4_1287 -> m4_1289  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1287 -> m4_95  [key=2, style=dotted];
m4_1287 -> m4_96  [key=2, style=dotted];
m4_1283 -> m4_1284  [key=0, style=solid];
m4_1283 -> m4_1287  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1290 -> m4_1282  [key=0, style=bold, color=blue];
m4_2494 -> m4_2495  [key=0, style=solid];
m4_2496 -> m4_89  [key=2, style=dotted];
m4_2496 -> m4_2497  [key=0, style=solid];
m4_2495 -> m4_666  [key=2, style=dotted];
m4_2495 -> m4_2496  [key=0, style=solid];
m4_2497 -> m4_2494  [key=0, style=bold, color=blue];
m4_3210 -> m4_3211  [key=0, style=solid];
m4_3212 -> m4_34  [key=2, style=dotted];
m4_3212 -> m4_3213  [key=0, style=solid];
m4_3211 -> m4_3212  [key=0, style=solid];
m4_3211 -> m4_3214  [key=2, style=dotted];
m4_3211 -> m4_65  [key=2, style=dotted];
m4_3213 -> m4_3210  [key=0, style=bold, color=blue];
m4_2798 -> m4_2799  [key=0, style=solid];
m4_2801 -> m4_12  [key=2, style=dotted];
m4_2801 -> m4_2802  [key=0, style=solid];
m4_2801 -> m4_2803  [key=1, style=dashed, color=darkseagreen4, label=d2];
m4_2800 -> m4_47  [key=2, style=dotted];
m4_2800 -> m4_2801  [key=0, style=solid];
m4_2802 -> m4_34  [key=2, style=dotted];
m4_2802 -> m4_2803  [key=0, style=solid];
m4_2803 -> m4_34  [key=2, style=dotted];
m4_2803 -> m4_2804  [key=0, style=solid];
m4_2799 -> m4_2800  [key=0, style=solid];
m4_2799 -> m4_2802  [key=1, style=dashed, color=darkseagreen4, label=d1];
m4_2799 -> m4_2803  [key=1, style=dashed, color=darkseagreen4, label=d1];
m4_2799 -> m4_120  [key=2, style=dotted];
m4_2804 -> m4_2798  [key=0, style=bold, color=blue];
m4_3410 -> m4_3411  [key=0, style=solid];
m4_3411 -> m4_3413  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3411 -> m4_3412  [key=0, style=solid];
m4_3411 -> m4_8  [key=2, style=dotted];
m4_3412 -> m4_3410  [key=0, style=bold, color=blue];
m4_3316 -> m4_3317  [key=0, style=solid];
m4_3318 -> m4_12  [key=2, style=dotted];
m4_3318 -> m4_3319  [key=0, style=solid];
m4_3320 -> m4_34  [key=2, style=dotted];
m4_3320 -> m4_3321  [key=0, style=solid];
m4_3317 -> m4_3318  [key=0, style=solid];
m4_3319 -> m4_3320  [key=0, style=solid];
m4_3321 -> m4_3316  [key=0, style=bold, color=blue];
m4_494 -> m4_495  [key=0, style=solid];
m4_496 -> m4_47  [key=2, style=dotted];
m4_496 -> m4_497  [key=0, style=solid];
m4_496 -> m4_498  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_498 -> m4_34  [key=2, style=dotted];
m4_498 -> m4_499  [key=0, style=solid];
m4_495 -> m4_496  [key=0, style=solid];
m4_495 -> m4_500  [key=2, style=dotted];
m4_497 -> m4_498  [key=0, style=solid];
m4_499 -> m4_494  [key=0, style=bold, color=blue];
m4_2302 -> m4_2303  [key=0, style=solid];
m4_2304 -> m4_34  [key=2, style=dotted];
m4_2304 -> m4_2305  [key=0, style=solid];
m4_2309 -> m4_34  [key=2, style=dotted];
m4_2309 -> m4_2310  [key=0, style=solid];
m4_2309 -> m4_839  [key=2, style=dotted];
m4_2310 -> m4_34  [key=2, style=dotted];
m4_2310 -> m4_2311  [key=0, style=solid];
m4_2310 -> m4_683  [key=2, style=dotted];
m4_2303 -> m4_2304  [key=0, style=solid];
m4_2303 -> m4_2295  [key=2, style=dotted];
m4_2303 -> m4_2296  [key=2, style=dotted];
m4_2303 -> m4_683  [key=2, style=dotted];
m4_2303 -> m4_839  [key=2, style=dotted];
m4_2303 -> m4_95  [key=2, style=dotted];
m4_2303 -> m4_962  [key=2, style=dotted];
m4_2303 -> m4_2305  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m4_2305 -> m4_2306  [key=0, style=solid];
m4_2305 -> m4_117  [key=2, style=dotted];
m4_2305 -> m4_118  [key=2, style=dotted];
m4_2305 -> m4_2308  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_2308 -> m4_2309  [key=0, style=solid];
m4_2308 -> m4_2310  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m4_2308 -> m4_2297  [key=2, style=dotted];
m4_2306 -> m4_2308  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m4_2306 -> m4_119  [key=2, style=dotted];
m4_2306 -> m4_2307  [key=0, style=solid];
m4_2307 -> m4_2308  [key=0, style=solid];
m4_2311 -> m4_2302  [key=0, style=bold, color=blue];
m4_1122 -> m4_1123  [key=0, style=solid];
m4_1124 -> m4_12  [key=2, style=dotted];
m4_1124 -> m4_1125  [key=0, style=solid];
m4_1124 -> m4_1126  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m4_1124 -> m4_1127  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m4_1125 -> m4_34  [key=2, style=dotted];
m4_1125 -> m4_1126  [key=0, style=solid];
m4_1126 -> m4_34  [key=2, style=dotted];
m4_1126 -> m4_1127  [key=0, style=solid];
m4_1126 -> m4_1129  [key=2, style=dotted];
m4_1127 -> m4_34  [key=2, style=dotted];
m4_1127 -> m4_1128  [key=0, style=solid];
m4_1123 -> m4_1124  [key=0, style=solid];
m4_1128 -> m4_1122  [key=0, style=bold, color=blue];
m4_2020 -> m4_2057  [key=0, style=solid];
m4_2020 -> m4_2058  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2020 -> m4_2059  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2020 -> m4_2060  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2020 -> m4_2061  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2020 -> m4_2062  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2020 -> m4_2063  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2020 -> m4_2064  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_2057 -> m4_2058  [key=0, style=solid];
m4_2058 -> m4_2059  [key=0, style=solid];
m4_2059 -> m4_2060  [key=0, style=solid];
m4_2060 -> m4_2061  [key=0, style=solid];
m4_2061 -> m4_2062  [key=0, style=solid];
m4_2062 -> m4_2063  [key=0, style=solid];
m4_2063 -> m4_2064  [key=0, style=solid];
m4_2064 -> m4_2065  [key=0, style=solid];
m4_2065 -> m4_2020  [key=0, style=bold, color=blue];
m4_427 -> m4_428  [key=0, style=solid];
m4_428 -> m4_429  [key=0, style=solid];
m4_428 -> m4_430  [key=0, style=solid];
m4_430 -> m4_431  [key=0, style=solid];
m4_430 -> m4_438  [key=2, style=dotted];
m4_431 -> m4_432  [key=0, style=solid];
m4_431 -> m4_439  [key=2, style=dotted];
m4_432 -> m4_433  [key=0, style=solid];
m4_432 -> m4_440  [key=2, style=dotted];
m4_433 -> m4_434  [key=0, style=solid];
m4_433 -> m4_440  [key=2, style=dotted];
m4_434 -> m4_435  [key=0, style=solid];
m4_434 -> m4_440  [key=2, style=dotted];
m4_435 -> m4_436  [key=0, style=solid];
m4_435 -> m4_440  [key=2, style=dotted];
m4_436 -> m4_437  [key=0, style=solid];
m4_429 -> m4_437  [key=0, style=solid];
m4_437 -> m4_427  [key=0, style=bold, color=blue];
m4_2224 -> m4_2225  [key=0, style=solid];
m4_2225 -> m4_65  [key=2, style=dotted];
m4_2225 -> m4_2226  [key=0, style=solid];
m4_2226 -> m4_67  [key=2, style=dotted];
m4_2226 -> m4_2227  [key=0, style=solid];
m4_2227 -> m4_2224  [key=0, style=bold, color=blue];
m4_1001 -> m4_1002  [key=0, style=solid];
m4_1004 -> m4_12  [key=2, style=dotted];
m4_1004 -> m4_1005  [key=0, style=solid];
m4_1004 -> m4_1006  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_1004 -> m4_1007  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_1003 -> m4_47  [key=2, style=dotted];
m4_1003 -> m4_1004  [key=0, style=solid];
m4_1005 -> m4_34  [key=2, style=dotted];
m4_1005 -> m4_1006  [key=0, style=solid];
m4_1006 -> m4_34  [key=2, style=dotted];
m4_1006 -> m4_1007  [key=0, style=solid];
m4_1007 -> m4_34  [key=2, style=dotted];
m4_1007 -> m4_1008  [key=0, style=solid];
m4_1002 -> m4_1003  [key=0, style=solid];
m4_1002 -> m4_1009  [key=2, style=dotted];
m4_1008 -> m4_1001  [key=0, style=bold, color=blue];
m4_2260 -> m4_2261  [key=0, style=solid];
m4_2265 -> m4_12  [key=2, style=dotted];
m4_2265 -> m4_2266  [key=0, style=solid];
m4_2265 -> m4_2267  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_2265 -> m4_2268  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_2265 -> m4_2269  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_2266 -> m4_34  [key=2, style=dotted];
m4_2266 -> m4_2267  [key=0, style=solid];
m4_2267 -> m4_34  [key=2, style=dotted];
m4_2267 -> m4_2268  [key=0, style=solid];
m4_2268 -> m4_34  [key=2, style=dotted];
m4_2268 -> m4_2269  [key=0, style=solid];
m4_2269 -> m4_34  [key=2, style=dotted];
m4_2269 -> m4_2271  [key=0, style=solid];
m4_2263 -> m4_2265  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2263 -> m4_2275  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2263 -> m4_2264  [key=0, style=solid];
m4_2263 -> m4_65  [key=2, style=dotted];
m4_2263 -> m4_2270  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2264 -> m4_2265  [key=0, style=solid];
m4_2264 -> m4_2270  [key=0, style=solid];
m4_2262 -> m4_2263  [key=0, style=solid];
m4_2262 -> m4_2264  [key=1, style=dashed, color=darkseagreen4, label=s1];
m4_2262 -> m4_2272  [key=2, style=dotted];
m4_2262 -> m4_2273  [key=2, style=dotted];
m4_2270 -> m4_2274  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2270 -> m4_2271  [key=0, style=solid];
m4_2270 -> m4_8  [key=2, style=dotted];
m4_2261 -> m4_2262  [key=0, style=solid];
m4_2261 -> m4_2270  [key=1, style=dashed, color=darkseagreen4, label=classRef];
m4_2271 -> m4_2260  [key=0, style=bold, color=blue];
m4_1785 -> m4_1786  [key=0, style=solid];
m4_1792 -> m4_12  [key=2, style=dotted];
m4_1792 -> m4_1793  [key=0, style=solid];
m4_1792 -> m4_1794  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m4_1792 -> m4_1795  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m4_1792 -> m4_1796  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m4_1793 -> m4_34  [key=2, style=dotted];
m4_1793 -> m4_1794  [key=0, style=solid];
m4_1794 -> m4_34  [key=2, style=dotted];
m4_1794 -> m4_1795  [key=0, style=solid];
m4_1795 -> m4_34  [key=2, style=dotted];
m4_1795 -> m4_1796  [key=0, style=solid];
m4_1796 -> m4_34  [key=2, style=dotted];
m4_1796 -> m4_1797  [key=0, style=solid];
m4_1791 -> m4_1792  [key=0, style=solid];
m4_1791 -> m4_67  [key=2, style=dotted];
m4_1790 -> m4_1791  [key=0, style=solid];
m4_1790 -> m4_463  [key=2, style=dotted];
m4_1790 -> m4_95  [key=2, style=dotted];
m4_1786 -> m4_1790  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_1786 -> m4_1787  [key=0, style=solid];
m4_1786 -> m4_1798  [key=2, style=dotted];
m4_1786 -> m4_1788  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_1786 -> m4_1789  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_1789 -> m4_1790  [key=0, style=solid];
m4_1787 -> m4_1789  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_1787 -> m4_1788  [key=0, style=solid];
m4_1787 -> m4_1799  [key=2, style=dotted];
m4_1788 -> m4_1789  [key=0, style=solid];
m4_1797 -> m4_1785  [key=0, style=bold, color=blue];
m4_969 -> m4_970  [key=0, style=solid];
m4_973 -> m4_12  [key=2, style=dotted];
m4_973 -> m4_974  [key=0, style=solid];
m4_971 -> m4_47  [key=2, style=dotted];
m4_971 -> m4_973  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_971 -> m4_972  [key=0, style=solid];
m4_971 -> m4_977  [key=2, style=dotted];
m4_974 -> m4_34  [key=2, style=dotted];
m4_974 -> m4_975  [key=0, style=solid];
m4_972 -> m4_34  [key=2, style=dotted];
m4_972 -> m4_973  [key=0, style=solid];
m4_970 -> m4_971  [key=0, style=solid];
m4_970 -> m4_974  [key=1, style=dashed, color=darkseagreen4, label=guid];
m4_970 -> m4_976  [key=2, style=dotted];
m4_975 -> m4_969  [key=0, style=bold, color=blue];
m4_2390 -> m4_2391  [key=0, style=solid];
m4_2391 -> m4_2392  [key=0, style=solid];
m4_2392 -> m4_2390  [key=0, style=bold, color=blue];
m4_2967 -> m4_2968  [key=0, style=solid];
m4_2968 -> m4_8  [key=2, style=dotted];
m4_2968 -> m4_2969  [key=0, style=solid];
m4_2968 -> m4_2970  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2969 -> m4_2967  [key=0, style=bold, color=blue];
m4_880 -> m4_881  [key=0, style=solid];
m4_881 -> m4_47  [key=2, style=dotted];
m4_881 -> m4_882  [key=0, style=solid];
m4_881 -> m4_884  [key=2, style=dotted];
m4_882 -> m4_34  [key=2, style=dotted];
m4_882 -> m4_883  [key=0, style=solid];
m4_883 -> m4_880  [key=0, style=bold, color=blue];
m4_2211 -> m4_2212  [key=0, style=solid];
m4_2212 -> m4_2214  [key=2, style=dotted];
m4_2212 -> m4_2213  [key=0, style=solid];
m4_2213 -> m4_2211  [key=0, style=bold, color=blue];
m4_2529 -> m4_2530  [key=0, style=solid];
m4_2531 -> m4_65  [key=2, style=dotted];
m4_2531 -> m4_2532  [key=0, style=solid];
m4_2532 -> m4_66  [key=2, style=dotted];
m4_2532 -> m4_2533  [key=0, style=solid];
m4_2530 -> m4_2531  [key=0, style=solid];
m4_2530 -> m4_2534  [key=2, style=dotted];
m4_2533 -> m4_2529  [key=0, style=bold, color=blue];
m4_934 -> m4_935  [key=0, style=solid];
m4_939 -> m4_12  [key=2, style=dotted];
m4_939 -> m4_940  [key=0, style=solid];
m4_939 -> m4_941  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_939 -> m4_942  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_940 -> m4_34  [key=2, style=dotted];
m4_940 -> m4_941  [key=0, style=solid];
m4_941 -> m4_34  [key=2, style=dotted];
m4_941 -> m4_942  [key=0, style=solid];
m4_942 -> m4_34  [key=2, style=dotted];
m4_942 -> m4_943  [key=0, style=solid];
m4_935 -> m4_939  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_935 -> m4_936  [key=0, style=solid];
m4_935 -> m4_944  [key=2, style=dotted];
m4_935 -> m4_65  [key=2, style=dotted];
m4_935 -> m4_938  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_938 -> m4_939  [key=0, style=solid];
m4_938 -> m4_67  [key=2, style=dotted];
m4_936 -> m4_937  [key=0, style=solid];
m4_937 -> m4_938  [key=0, style=solid];
m4_943 -> m4_934  [key=0, style=bold, color=blue];
m4_2248 -> m4_2249  [key=0, style=solid];
m4_2255 -> m4_34  [key=2, style=dotted];
m4_2255 -> m4_2256  [key=0, style=solid];
m4_2256 -> m4_34  [key=2, style=dotted];
m4_2256 -> m4_2257  [key=0, style=solid];
m4_2257 -> m4_34  [key=2, style=dotted];
m4_2257 -> m4_2258  [key=0, style=solid];
m4_2254 -> m4_2255  [key=0, style=solid];
m4_2254 -> m4_2256  [key=1, style=dashed, color=darkseagreen4, label=z];
m4_2254 -> m4_2257  [key=1, style=dashed, color=darkseagreen4, label=z];
m4_2254 -> m4_2259  [key=2, style=dotted];
m4_2249 -> m4_2254  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m4_2249 -> m4_119  [key=2, style=dotted];
m4_2249 -> m4_2250  [key=0, style=solid];
m4_2249 -> m4_2251  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m4_2253 -> m4_2254  [key=0, style=solid];
m4_2253 -> m4_117  [key=2, style=dotted];
m4_2253 -> m4_118  [key=2, style=dotted];
m4_2250 -> m4_878  [key=2, style=dotted];
m4_2250 -> m4_272  [key=2, style=dotted];
m4_2250 -> m4_2251  [key=0, style=solid];
m4_2251 -> m4_2252  [key=0, style=solid];
m4_2252 -> m4_2253  [key=0, style=solid];
m4_2258 -> m4_2248  [key=0, style=bold, color=blue];
m4_1424 -> m4_1425  [key=0, style=solid];
m4_1427 -> m4_12  [key=2, style=dotted];
m4_1427 -> m4_1428  [key=0, style=solid];
m4_1427 -> m4_493  [key=2, style=dotted];
m4_1427 -> m4_1429  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_1427 -> m4_1430  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_1427 -> m4_1431  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_1429 -> m4_34  [key=2, style=dotted];
m4_1429 -> m4_1430  [key=0, style=solid];
m4_1430 -> m4_34  [key=2, style=dotted];
m4_1430 -> m4_1431  [key=0, style=solid];
m4_1431 -> m4_34  [key=2, style=dotted];
m4_1431 -> m4_1432  [key=0, style=solid];
m4_1426 -> m4_1427  [key=0, style=solid];
m4_1426 -> m4_201  [key=2, style=dotted];
m4_1428 -> m4_1429  [key=0, style=solid];
m4_1428 -> m4_520  [key=2, style=dotted];
m4_1425 -> m4_1426  [key=0, style=solid];
m4_1432 -> m4_1424  [key=0, style=bold, color=blue];
m4_68 -> m4_69  [key=0, style=solid];
m4_76 -> m4_12  [key=2, style=dotted];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_78  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_77 -> m4_34  [key=2, style=dotted];
m4_77 -> m4_78  [key=0, style=solid];
m4_78 -> m4_34  [key=2, style=dotted];
m4_78 -> m4_79  [key=0, style=solid];
m4_73 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_65  [key=2, style=dotted];
m4_73 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_67  [key=2, style=dotted];
m4_69 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_80  [key=2, style=dotted];
m4_69 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_69 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_72 -> m4_73  [key=0, style=solid];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_66  [key=2, style=dotted];
m4_70 -> m4_71  [key=0, style=solid];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_64  [key=2, style=dotted];
m4_71 -> m4_63  [key=2, style=dotted];
m4_79 -> m4_68  [key=0, style=bold, color=blue];
m4_2780 -> m4_2781  [key=0, style=solid];
m4_2786 -> m4_12  [key=2, style=dotted];
m4_2786 -> m4_2787  [key=0, style=solid];
m4_2786 -> m4_2788  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_2787 -> m4_34  [key=2, style=dotted];
m4_2787 -> m4_2788  [key=0, style=solid];
m4_2788 -> m4_34  [key=2, style=dotted];
m4_2788 -> m4_2789  [key=0, style=solid];
m4_2785 -> m4_2786  [key=0, style=solid];
m4_2784 -> m4_2785  [key=0, style=solid];
m4_2782 -> m4_2784  [key=1, style=dashed, color=darkseagreen4, label=testCulture];
m4_2782 -> m4_2783  [key=0, style=solid];
m4_2782 -> m4_2790  [key=2, style=dotted];
m4_2783 -> m4_2784  [key=0, style=solid];
m4_2781 -> m4_2782  [key=0, style=solid];
m4_2789 -> m4_2780  [key=0, style=bold, color=blue];
m4_1255 -> m4_1256  [key=0, style=solid];
m4_1262 -> m4_12  [key=2, style=dotted];
m4_1262 -> m4_1263  [key=0, style=solid];
m4_1262 -> m4_1264  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m4_1262 -> m4_1265  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m4_1262 -> m4_1266  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m4_1264 -> m4_34  [key=2, style=dotted];
m4_1264 -> m4_1265  [key=0, style=solid];
m4_1264 -> m4_1269  [key=2, style=dotted];
m4_1265 -> m4_34  [key=2, style=dotted];
m4_1265 -> m4_1266  [key=0, style=solid];
m4_1265 -> m4_1269  [key=2, style=dotted];
m4_1266 -> m4_34  [key=2, style=dotted];
m4_1266 -> m4_1267  [key=0, style=solid];
m4_1266 -> m4_1269  [key=2, style=dotted];
m4_1261 -> m4_34  [key=2, style=dotted];
m4_1261 -> m4_1262  [key=0, style=solid];
m4_1260 -> m4_1262  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1260 -> m4_1261  [key=0, style=solid];
m4_1260 -> m4_65  [key=2, style=dotted];
m4_1263 -> m4_1264  [key=0, style=solid];
m4_1263 -> m4_520  [key=2, style=dotted];
m4_1256 -> m4_1264  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1256 -> m4_1265  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1256 -> m4_1266  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1256 -> m4_1260  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1256 -> m4_1257  [key=0, style=solid];
m4_1256 -> m4_1268  [key=2, style=dotted];
m4_1256 -> m4_1258  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1256 -> m4_1259  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1259 -> m4_1260  [key=0, style=solid];
m4_1259 -> m4_120  [key=2, style=dotted];
m4_1257 -> m4_554  [key=2, style=dotted];
m4_1257 -> m4_1258  [key=0, style=solid];
m4_1258 -> m4_1259  [key=0, style=solid];
m4_1258 -> m4_120  [key=2, style=dotted];
m4_1267 -> m4_1255  [key=0, style=bold, color=blue];
m4_2715 -> m4_2716  [key=0, style=solid];
m4_2719 -> m4_12  [key=2, style=dotted];
m4_2719 -> m4_2720  [key=0, style=solid];
m4_2718 -> m4_47  [key=2, style=dotted];
m4_2718 -> m4_2719  [key=0, style=solid];
m4_2720 -> m4_34  [key=2, style=dotted];
m4_2720 -> m4_2721  [key=0, style=solid];
m4_2717 -> m4_2718  [key=0, style=solid];
m4_2717 -> m4_2720  [key=1, style=dashed, color=darkseagreen4, label=uri];
m4_2717 -> m4_1440  [key=2, style=dotted];
m4_2716 -> m4_2717  [key=0, style=solid];
m4_2721 -> m4_2715  [key=0, style=bold, color=blue];
m4_3608 -> m4_3609  [key=0, style=solid];
m4_3609 -> m4_3610  [key=0, style=solid];
m4_3610 -> m4_3608  [key=0, style=bold, color=blue];
m4_1349 -> m4_1350  [key=0, style=solid];
m4_1351 -> m4_12  [key=2, style=dotted];
m4_1351 -> m4_1352  [key=0, style=solid];
m4_1353 -> m4_12  [key=2, style=dotted];
m4_1353 -> m4_1354  [key=0, style=solid];
m4_1353 -> m4_1355  [key=1, style=dashed, color=darkseagreen4, label=n];
m4_1353 -> m4_1356  [key=1, style=dashed, color=darkseagreen4, label=n];
m4_1353 -> m4_1357  [key=1, style=dashed, color=darkseagreen4, label=n];
m4_1353 -> m4_1358  [key=1, style=dashed, color=darkseagreen4, label=n];
m4_1352 -> m4_34  [key=2, style=dotted];
m4_1352 -> m4_1353  [key=0, style=solid];
m4_1354 -> m4_34  [key=2, style=dotted];
m4_1354 -> m4_1355  [key=0, style=solid];
m4_1354 -> m4_976  [key=2, style=dotted];
m4_1355 -> m4_34  [key=2, style=dotted];
m4_1355 -> m4_1356  [key=0, style=solid];
m4_1355 -> m4_976  [key=2, style=dotted];
m4_1356 -> m4_34  [key=2, style=dotted];
m4_1356 -> m4_1357  [key=0, style=solid];
m4_1357 -> m4_34  [key=2, style=dotted];
m4_1357 -> m4_1358  [key=0, style=solid];
m4_1358 -> m4_34  [key=2, style=dotted];
m4_1358 -> m4_1359  [key=0, style=solid];
m4_1350 -> m4_1351  [key=0, style=solid];
m4_1350 -> m4_1353  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1359 -> m4_1349  [key=0, style=bold, color=blue];
m4_3519 -> m4_3520  [key=0, style=solid];
m4_3522 -> m4_12  [key=2, style=dotted];
m4_3522 -> m4_3523  [key=0, style=solid];
m4_3522 -> m4_3524  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_3520 -> m4_47  [key=2, style=dotted];
m4_3520 -> m4_3522  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3520 -> m4_3521  [key=0, style=solid];
m4_3520 -> m4_554  [key=2, style=dotted];
m4_3520 -> m4_3526  [key=2, style=dotted];
m4_3521 -> m4_34  [key=2, style=dotted];
m4_3521 -> m4_3522  [key=0, style=solid];
m4_3523 -> m4_34  [key=2, style=dotted];
m4_3523 -> m4_3524  [key=0, style=solid];
m4_3523 -> m4_3526  [key=2, style=dotted];
m4_3523 -> m4_3527  [key=2, style=dotted];
m4_3524 -> m4_34  [key=2, style=dotted];
m4_3524 -> m4_3525  [key=0, style=solid];
m4_3524 -> m4_3526  [key=2, style=dotted];
m4_3524 -> m4_3527  [key=2, style=dotted];
m4_3525 -> m4_3519  [key=0, style=bold, color=blue];
m4_2412 -> m4_2413  [key=0, style=solid];
m4_2419 -> m4_47  [key=2, style=dotted];
m4_2419 -> m4_2420  [key=0, style=solid];
m4_2423 -> m4_47  [key=2, style=dotted];
m4_2423 -> m4_2424  [key=0, style=solid];
m4_2421 -> m4_34  [key=2, style=dotted];
m4_2421 -> m4_2422  [key=0, style=solid];
m4_2422 -> m4_34  [key=2, style=dotted];
m4_2422 -> m4_2423  [key=0, style=solid];
m4_2425 -> m4_34  [key=2, style=dotted];
m4_2425 -> m4_2426  [key=0, style=solid];
m4_2426 -> m4_34  [key=2, style=dotted];
m4_2426 -> m4_2427  [key=0, style=solid];
m4_2413 -> m4_2419  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m4_2413 -> m4_2414  [key=0, style=solid];
m4_2413 -> m4_2428  [key=2, style=dotted];
m4_2413 -> m4_2415  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m4_2418 -> m4_2419  [key=0, style=solid];
m4_2420 -> m4_2421  [key=0, style=solid];
m4_2420 -> m4_2422  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_2420 -> m4_2430  [key=2, style=dotted];
m4_2416 -> m4_2423  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m4_2416 -> m4_2418  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m4_2416 -> m4_2417  [key=0, style=solid];
m4_2416 -> m4_2428  [key=2, style=dotted];
m4_2424 -> m4_2425  [key=0, style=solid];
m4_2424 -> m4_2426  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_2424 -> m4_2430  [key=2, style=dotted];
m4_2414 -> m4_2415  [key=0, style=solid];
m4_2414 -> m4_2429  [key=2, style=dotted];
m4_2415 -> m4_2416  [key=0, style=solid];
m4_2415 -> m4_2429  [key=2, style=dotted];
m4_2417 -> m4_2418  [key=0, style=solid];
m4_2417 -> m4_2429  [key=2, style=dotted];
m4_2427 -> m4_2412  [key=0, style=bold, color=blue];
m4_1144 -> m4_1145  [key=0, style=solid];
m4_1146 -> m4_12  [key=2, style=dotted];
m4_1146 -> m4_1147  [key=0, style=solid];
m4_1147 -> m4_34  [key=2, style=dotted];
m4_1147 -> m4_1148  [key=0, style=solid];
m4_1145 -> m4_1146  [key=0, style=solid];
m4_1148 -> m4_1144  [key=0, style=bold, color=blue];
m4_3785 -> m4_3786  [key=0, style=solid];
m4_3787 -> m4_12  [key=2, style=dotted];
m4_3787 -> m4_3788  [key=0, style=solid];
m4_3787 -> m4_3789  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_3788 -> m4_34  [key=2, style=dotted];
m4_3788 -> m4_3789  [key=0, style=solid];
m4_3789 -> m4_34  [key=2, style=dotted];
m4_3789 -> m4_3790  [key=0, style=solid];
m4_3786 -> m4_3787  [key=0, style=solid];
m4_3790 -> m4_3785  [key=0, style=bold, color=blue];
m4_2443 -> m4_2444  [key=0, style=solid];
m4_2445 -> m4_47  [key=2, style=dotted];
m4_2445 -> m4_2446  [key=0, style=solid];
m4_2447 -> m4_34  [key=2, style=dotted];
m4_2447 -> m4_2448  [key=0, style=solid];
m4_2444 -> m4_2445  [key=0, style=solid];
m4_2444 -> m4_2449  [key=2, style=dotted];
m4_2446 -> m4_2447  [key=0, style=solid];
m4_2446 -> m4_95  [key=2, style=dotted];
m4_2446 -> m4_96  [key=2, style=dotted];
m4_2448 -> m4_2443  [key=0, style=bold, color=blue];
m4_2108 -> m4_2109  [key=0, style=solid];
m4_2111 -> m4_34  [key=2, style=dotted];
m4_2111 -> m4_2112  [key=0, style=solid];
m4_2110 -> m4_2111  [key=0, style=solid];
m4_2110 -> m4_2116  [key=2, style=dotted];
m4_2110 -> m4_2117  [key=2, style=dotted];
m4_2110 -> m4_1026  [key=2, style=dotted];
m4_2109 -> m4_2110  [key=0, style=solid];
m4_2109 -> m4_2113  [key=2, style=dotted];
m4_2109 -> m4_2114  [key=2, style=dotted];
m4_2109 -> m4_2115  [key=2, style=dotted];
m4_2112 -> m4_2108  [key=0, style=bold, color=blue];
m4_2699 -> m4_2700  [key=0, style=solid];
m4_2707 -> m4_34  [key=2, style=dotted];
m4_2707 -> m4_2708  [key=0, style=solid];
m4_2706 -> m4_2707  [key=0, style=solid];
m4_2706 -> m4_2714  [key=2, style=dotted];
m4_2702 -> m4_2706  [key=1, style=dashed, color=darkseagreen4, label=sw];
m4_2702 -> m4_2703  [key=0, style=solid];
m4_2702 -> m4_2709  [key=2, style=dotted];
m4_2705 -> m4_2706  [key=0, style=solid];
m4_2705 -> m4_2713  [key=2, style=dotted];
m4_2701 -> m4_2702  [key=0, style=solid];
m4_2701 -> m4_491  [key=2, style=dotted];
m4_2701 -> m4_2704  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2703 -> m4_2705  [key=1, style=dashed, color=darkseagreen4, label=jw];
m4_2703 -> m4_2710  [key=2, style=dotted];
m4_2703 -> m4_2704  [key=0, style=solid];
m4_2704 -> m4_2705  [key=0, style=solid];
m4_2704 -> m4_2711  [key=2, style=dotted];
m4_2704 -> m4_2712  [key=2, style=dotted];
m4_2700 -> m4_2701  [key=0, style=solid];
m4_2708 -> m4_2699  [key=0, style=bold, color=blue];
m4_1858 -> m4_1861  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_1858 -> m4_1859  [key=0, style=solid];
m4_1862 -> m4_1862  [key=1, style=dashed, color=darkseagreen4, label=entry];
m4_1862 -> m4_1861  [key=0, style=solid];
m4_1861 -> m4_1862  [key=0, style=solid];
m4_1861 -> m4_1863  [key=0, style=solid];
m4_1859 -> m4_1861  [key=0, style=solid];
m4_1859 -> m4_1860  [key=0, style=solid];
m4_1860 -> m4_1863  [key=0, style=solid];
m4_1863 -> m4_1858  [key=0, style=bold, color=blue];
m4_2316 -> m4_2317  [key=0, style=solid];
m4_2317 -> m4_65  [key=2, style=dotted];
m4_2317 -> m4_2318  [key=0, style=solid];
m4_2317 -> m4_2320  [key=2, style=dotted];
m4_2318 -> m4_67  [key=2, style=dotted];
m4_2318 -> m4_2319  [key=0, style=solid];
m4_2319 -> m4_2316  [key=0, style=bold, color=blue];
m4_899 -> m4_900  [key=0, style=solid];
m4_901 -> m4_12  [key=2, style=dotted];
m4_901 -> m4_902  [key=0, style=solid];
m4_901 -> m4_903  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_901 -> m4_904  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_901 -> m4_905  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_901 -> m4_906  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_901 -> m4_907  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m4_902 -> m4_34  [key=2, style=dotted];
m4_902 -> m4_903  [key=0, style=solid];
m4_903 -> m4_34  [key=2, style=dotted];
m4_903 -> m4_904  [key=0, style=solid];
m4_904 -> m4_34  [key=2, style=dotted];
m4_904 -> m4_905  [key=0, style=solid];
m4_905 -> m4_34  [key=2, style=dotted];
m4_905 -> m4_906  [key=0, style=solid];
m4_906 -> m4_34  [key=2, style=dotted];
m4_906 -> m4_907  [key=0, style=solid];
m4_907 -> m4_34  [key=2, style=dotted];
m4_907 -> m4_908  [key=0, style=solid];
m4_900 -> m4_901  [key=0, style=solid];
m4_908 -> m4_899  [key=0, style=bold, color=blue];
m4_747 -> m4_748  [key=0, style=solid];
m4_750 -> m4_12  [key=2, style=dotted];
m4_750 -> m4_751  [key=0, style=solid];
m4_750 -> m4_752  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_748 -> m4_47  [key=2, style=dotted];
m4_748 -> m4_749  [key=0, style=solid];
m4_748 -> m4_754  [key=2, style=dotted];
m4_749 -> m4_34  [key=2, style=dotted];
m4_749 -> m4_750  [key=0, style=solid];
m4_751 -> m4_34  [key=2, style=dotted];
m4_751 -> m4_752  [key=0, style=solid];
m4_752 -> m4_34  [key=2, style=dotted];
m4_752 -> m4_753  [key=0, style=solid];
m4_753 -> m4_747  [key=0, style=bold, color=blue];
m4_2228 -> m4_2229  [key=0, style=solid];
m4_2230 -> m4_34  [key=2, style=dotted];
m4_2230 -> m4_2231  [key=0, style=solid];
m4_2231 -> m4_34  [key=2, style=dotted];
m4_2231 -> m4_2232  [key=0, style=solid];
m4_2232 -> m4_34  [key=2, style=dotted];
m4_2232 -> m4_2233  [key=0, style=solid];
m4_2233 -> m4_34  [key=2, style=dotted];
m4_2233 -> m4_2234  [key=0, style=solid];
m4_2229 -> m4_2230  [key=0, style=solid];
m4_2229 -> m4_2231  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_2229 -> m4_2232  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_2229 -> m4_2233  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_2229 -> m4_666  [key=2, style=dotted];
m4_2234 -> m4_2228  [key=0, style=bold, color=blue];
m4_528 -> m4_529  [key=0, style=solid];
m4_530 -> m4_12  [key=2, style=dotted];
m4_530 -> m4_531  [key=0, style=solid];
m4_530 -> m4_532  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_530 -> m4_533  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_530 -> m4_534  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_532 -> m4_34  [key=2, style=dotted];
m4_532 -> m4_533  [key=0, style=solid];
m4_534 -> m4_34  [key=2, style=dotted];
m4_534 -> m4_535  [key=0, style=solid];
m4_529 -> m4_530  [key=0, style=solid];
m4_531 -> m4_532  [key=0, style=solid];
m4_531 -> m4_520  [key=2, style=dotted];
m4_533 -> m4_534  [key=0, style=solid];
m4_533 -> m4_520  [key=2, style=dotted];
m4_535 -> m4_528  [key=0, style=bold, color=blue];
m4_800 -> m4_801  [key=0, style=solid];
m4_806 -> m4_12  [key=2, style=dotted];
m4_806 -> m4_807  [key=0, style=solid];
m4_806 -> m4_808  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m4_806 -> m4_809  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m4_809 -> m4_34  [key=2, style=dotted];
m4_809 -> m4_810  [key=0, style=solid];
m4_808 -> m4_34  [key=2, style=dotted];
m4_808 -> m4_809  [key=0, style=solid];
m4_807 -> m4_34  [key=2, style=dotted];
m4_807 -> m4_808  [key=0, style=solid];
m4_801 -> m4_806  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_801 -> m4_802  [key=0, style=solid];
m4_801 -> m4_803  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_801 -> m4_805  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_805 -> m4_806  [key=0, style=solid];
m4_805 -> m4_808  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m4_805 -> m4_797  [key=2, style=dotted];
m4_805 -> m4_798  [key=2, style=dotted];
m4_805 -> m4_799  [key=2, style=dotted];
m4_803 -> m4_809  [key=1, style=dashed, color=darkseagreen4, label=javaScriptSerializerResult];
m4_803 -> m4_804  [key=0, style=solid];
m4_803 -> m4_812  [key=2, style=dotted];
m4_802 -> m4_803  [key=0, style=solid];
m4_802 -> m4_811  [key=2, style=dotted];
m4_804 -> m4_805  [key=0, style=solid];
m4_804 -> m4_644  [key=2, style=dotted];
m4_810 -> m4_800  [key=0, style=bold, color=blue];
m4_3614 -> m4_3615  [key=0, style=solid];
m4_3615 -> m4_3583  [key=2, style=dotted];
m4_3615 -> m4_3616  [key=0, style=solid];
m4_3616 -> m4_3614  [key=0, style=bold, color=blue];
m4_782 -> m4_783  [key=0, style=solid];
m4_783 -> m4_785  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_783 -> m4_784  [key=0, style=solid];
m4_783 -> m4_8  [key=2, style=dotted];
m4_784 -> m4_782  [key=0, style=bold, color=blue];
m4_3038 -> m4_3039  [key=0, style=solid];
m4_3039 -> m4_727  [key=2, style=dotted];
m4_3039 -> m4_3040  [key=0, style=solid];
m4_3039 -> m4_3041  [key=2, style=dotted];
m4_3040 -> m4_3038  [key=0, style=bold, color=blue];
m4_597 -> m4_598  [key=0, style=solid];
m4_603 -> m4_65  [key=2, style=dotted];
m4_603 -> m4_604  [key=0, style=solid];
m4_603 -> m4_605  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_605 -> m4_67  [key=2, style=dotted];
m4_605 -> m4_606  [key=0, style=solid];
m4_604 -> m4_66  [key=2, style=dotted];
m4_604 -> m4_605  [key=0, style=solid];
m4_598 -> m4_603  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_598 -> m4_599  [key=0, style=solid];
m4_598 -> m4_607  [key=2, style=dotted];
m4_598 -> m4_600  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_598 -> m4_601  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_598 -> m4_602  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m4_602 -> m4_603  [key=0, style=solid];
m4_599 -> m4_600  [key=0, style=solid];
m4_600 -> m4_601  [key=0, style=solid];
m4_601 -> m4_602  [key=0, style=solid];
m4_606 -> m4_597  [key=0, style=bold, color=blue];
m4_3725 -> m4_3726  [key=0, style=solid];
m4_3732 -> m4_34  [key=2, style=dotted];
m4_3732 -> m4_3733  [key=0, style=solid];
m4_3737 -> m4_34  [key=2, style=dotted];
m4_3737 -> m4_3738  [key=0, style=solid];
m4_3730 -> m4_34  [key=2, style=dotted];
m4_3730 -> m4_3731  [key=0, style=solid];
m4_3735 -> m4_34  [key=2, style=dotted];
m4_3735 -> m4_3736  [key=0, style=solid];
m4_3736 -> m4_34  [key=2, style=dotted];
m4_3736 -> m4_3737  [key=0, style=solid];
m4_3736 -> m4_122  [key=2, style=dotted];
m4_3726 -> m4_3732  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3726 -> m4_3737  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3726 -> m4_683  [key=2, style=dotted];
m4_3726 -> m4_3727  [key=0, style=solid];
m4_3726 -> m4_838  [key=2, style=dotted];
m4_3726 -> m4_3729  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3731 -> m4_3732  [key=0, style=solid];
m4_3731 -> m4_96  [key=2, style=dotted];
m4_3733 -> m4_3734  [key=0, style=solid];
m4_3733 -> m4_117  [key=2, style=dotted];
m4_3733 -> m4_118  [key=2, style=dotted];
m4_3734 -> m4_3737  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_3734 -> m4_3735  [key=0, style=solid];
m4_3734 -> m4_3736  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_3734 -> m4_3077  [key=2, style=dotted];
m4_3729 -> m4_3730  [key=0, style=solid];
m4_3729 -> m4_3731  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3729 -> m4_3733  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3729 -> m4_463  [key=2, style=dotted];
m4_3727 -> m4_3733  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m4_3727 -> m4_3728  [key=0, style=solid];
m4_3728 -> m4_3731  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_3728 -> m4_3729  [key=0, style=solid];
m4_3728 -> m4_95  [key=2, style=dotted];
m4_3738 -> m4_3725  [key=0, style=bold, color=blue];
m4_3433 -> m4_3434  [key=0, style=solid];
m4_3433 -> m4_3435  [key=1, style=dashed, color=darkseagreen4, label=TSecond];
m4_3434 -> m4_3435  [key=0, style=solid];
m4_3435 -> m4_3436  [key=0, style=solid];
m4_3436 -> m4_3433  [key=0, style=bold, color=blue];
m4_3834 -> m4_3835  [key=0, style=solid];
m4_3836 -> m4_797  [key=2, style=dotted];
m4_3836 -> m4_3837  [key=0, style=solid];
m4_3836 -> m4_3839  [key=2, style=dotted];
m4_3836 -> m4_3840  [key=2, style=dotted];
m4_3835 -> m4_2297  [key=2, style=dotted];
m4_3835 -> m4_3836  [key=0, style=solid];
m4_3837 -> m4_3838  [key=0, style=solid];
m4_3838 -> m4_3834  [key=0, style=bold, color=blue];
m4_2687 -> m4_2688  [key=0, style=solid];
m4_2691 -> m4_12  [key=2, style=dotted];
m4_2691 -> m4_2692  [key=0, style=solid];
m4_2691 -> m4_2693  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2691 -> m4_2694  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2691 -> m4_2695  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2691 -> m4_2696  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2692 -> m4_34  [key=2, style=dotted];
m4_2692 -> m4_2693  [key=0, style=solid];
m4_2693 -> m4_34  [key=2, style=dotted];
m4_2693 -> m4_2694  [key=0, style=solid];
m4_2694 -> m4_34  [key=2, style=dotted];
m4_2694 -> m4_2695  [key=0, style=solid];
m4_2695 -> m4_34  [key=2, style=dotted];
m4_2695 -> m4_2696  [key=0, style=solid];
m4_2696 -> m4_34  [key=2, style=dotted];
m4_2696 -> m4_2697  [key=0, style=solid];
m4_2689 -> m4_2691  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2689 -> m4_2690  [key=0, style=solid];
m4_2689 -> m4_65  [key=2, style=dotted];
m4_2690 -> m4_2691  [key=0, style=solid];
m4_2690 -> m4_67  [key=2, style=dotted];
m4_2688 -> m4_2692  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2688 -> m4_2693  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2688 -> m4_2694  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2688 -> m4_2695  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2688 -> m4_2696  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2688 -> m4_2689  [key=0, style=solid];
m4_2688 -> m4_839  [key=2, style=dotted];
m4_2688 -> m4_976  [key=2, style=dotted];
m4_2688 -> m4_2686  [key=2, style=dotted];
m4_2688 -> m4_2698  [key=2, style=dotted];
m4_2688 -> m4_1440  [key=2, style=dotted];
m4_2697 -> m4_2687  [key=0, style=bold, color=blue];
m4_28 -> m4_29  [key=0, style=solid];
m4_29 -> m4_12  [key=2, style=dotted];
m4_29 -> m4_30  [key=0, style=solid];
m4_30 -> m4_34  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_32 -> m4_34  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_35  [key=2, style=dotted];
m4_31 -> m4_36  [key=2, style=dotted];
m4_33 -> m4_28  [key=0, style=bold, color=blue];
m4_2568 -> m4_2569  [key=0, style=solid];
m4_2574 -> m4_12  [key=2, style=dotted];
m4_2574 -> m4_2575  [key=0, style=solid];
m4_2574 -> m4_2576  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2574 -> m4_2577  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2574 -> m4_2578  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_2575 -> m4_34  [key=2, style=dotted];
m4_2575 -> m4_2576  [key=0, style=solid];
m4_2576 -> m4_34  [key=2, style=dotted];
m4_2576 -> m4_2577  [key=0, style=solid];
m4_2577 -> m4_34  [key=2, style=dotted];
m4_2577 -> m4_2578  [key=0, style=solid];
m4_2578 -> m4_34  [key=2, style=dotted];
m4_2578 -> m4_2579  [key=0, style=solid];
m4_2572 -> m4_2574  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2572 -> m4_2573  [key=0, style=solid];
m4_2572 -> m4_65  [key=2, style=dotted];
m4_2573 -> m4_2574  [key=0, style=solid];
m4_2573 -> m4_67  [key=2, style=dotted];
m4_2569 -> m4_2575  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2569 -> m4_2576  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2569 -> m4_2572  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2569 -> m4_2570  [key=0, style=solid];
m4_2569 -> m4_2564  [key=2, style=dotted];
m4_2569 -> m4_2571  [key=1, style=dashed, color=darkseagreen4, label=c1];
m4_2571 -> m4_2572  [key=0, style=solid];
m4_2571 -> m4_64  [key=2, style=dotted];
m4_2570 -> m4_64  [key=2, style=dotted];
m4_2570 -> m4_2571  [key=0, style=solid];
m4_2579 -> m4_2568  [key=0, style=bold, color=blue];
m4_1491 -> m4_1492  [key=0, style=solid];
m4_1493 -> m4_12  [key=2, style=dotted];
m4_1493 -> m4_1494  [key=0, style=solid];
m4_1495 -> m4_34  [key=2, style=dotted];
m4_1495 -> m4_1496  [key=0, style=solid];
m4_1496 -> m4_34  [key=2, style=dotted];
m4_1496 -> m4_1497  [key=0, style=solid];
m4_1497 -> m4_34  [key=2, style=dotted];
m4_1497 -> m4_1498  [key=0, style=solid];
m4_1492 -> m4_1493  [key=0, style=solid];
m4_1494 -> m4_1495  [key=0, style=solid];
m4_1494 -> m4_1496  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1494 -> m4_1497  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1494 -> m4_1499  [key=2, style=dotted];
m4_1498 -> m4_1491  [key=0, style=bold, color=blue];
m4_1392 -> m4_1393  [key=0, style=solid];
m4_1395 -> m4_34  [key=2, style=dotted];
m4_1395 -> m4_1396  [key=0, style=solid];
m4_1396 -> m4_34  [key=2, style=dotted];
m4_1396 -> m4_1397  [key=0, style=solid];
m4_1397 -> m4_34  [key=2, style=dotted];
m4_1397 -> m4_1398  [key=0, style=solid];
m4_1394 -> m4_1395  [key=0, style=solid];
m4_1394 -> m4_1396  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1394 -> m4_1397  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1394 -> m4_95  [key=2, style=dotted];
m4_1394 -> m4_96  [key=2, style=dotted];
m4_1393 -> m4_1394  [key=0, style=solid];
m4_1398 -> m4_1392  [key=0, style=bold, color=blue];
m4_3510 -> m4_3511  [key=0, style=solid];
m4_3511 -> m4_976  [key=2, style=dotted];
m4_3511 -> m4_3512  [key=0, style=solid];
m4_3511 -> m4_462  [key=2, style=dotted];
m4_3511 -> m4_3513  [key=1, style=dashed, color=darkseagreen4, label=john];
m4_3511 -> m4_3514  [key=1, style=dashed, color=darkseagreen4, label=john];
m4_3511 -> m4_3515  [key=1, style=dashed, color=darkseagreen4, label=john];
m4_3512 -> m4_976  [key=2, style=dotted];
m4_3512 -> m4_3513  [key=0, style=solid];
m4_3512 -> m4_462  [key=2, style=dotted];
m4_3512 -> m4_3514  [key=1, style=dashed, color=darkseagreen4, label=jane];
m4_3512 -> m4_3515  [key=1, style=dashed, color=darkseagreen4, label=jane];
m4_3517 -> m4_67  [key=2, style=dotted];
m4_3517 -> m4_3518  [key=0, style=solid];
m4_3516 -> m4_463  [key=2, style=dotted];
m4_3516 -> m4_95  [key=2, style=dotted];
m4_3516 -> m4_275  [key=2, style=dotted];
m4_3516 -> m4_3517  [key=0, style=solid];
m4_3515 -> m4_120  [key=2, style=dotted];
m4_3515 -> m4_3516  [key=0, style=solid];
m4_3513 -> m4_3514  [key=0, style=solid];
m4_3514 -> m4_3515  [key=0, style=solid];
m4_3518 -> m4_3510  [key=0, style=bold, color=blue];
m4_1804 -> m4_1805  [key=0, style=solid];
m4_1806 -> m4_12  [key=2, style=dotted];
m4_1806 -> m4_1807  [key=0, style=solid];
m4_1807 -> m4_34  [key=2, style=dotted];
m4_1807 -> m4_1808  [key=0, style=solid];
m4_1805 -> m4_1806  [key=0, style=solid];
m4_1808 -> m4_1804  [key=0, style=bold, color=blue];
m4_1582 -> m4_1583  [key=0, style=solid];
m4_1584 -> m4_8  [key=2, style=dotted];
m4_1584 -> m4_1585  [key=0, style=solid];
m4_1584 -> m4_1586  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1583 -> m4_1587  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1583 -> m4_1584  [key=0, style=solid];
m4_1585 -> m4_1582  [key=0, style=bold, color=blue];
m4_3791 -> m4_3792  [key=0, style=solid];
m4_3794 -> m4_12  [key=2, style=dotted];
m4_3794 -> m4_3795  [key=0, style=solid];
m4_3793 -> m4_47  [key=2, style=dotted];
m4_3793 -> m4_3794  [key=0, style=solid];
m4_3795 -> m4_34  [key=2, style=dotted];
m4_3795 -> m4_3796  [key=0, style=solid];
m4_3792 -> m4_3793  [key=0, style=solid];
m4_3792 -> m4_3797  [key=2, style=dotted];
m4_3796 -> m4_3791  [key=0, style=bold, color=blue];
m4_3584 -> m4_3585  [key=0, style=solid];
m4_3585 -> m4_3583  [key=2, style=dotted];
m4_3585 -> m4_3586  [key=0, style=solid];
m4_3586 -> m4_3584  [key=0, style=bold, color=blue];
m4_1809 -> m4_1810  [key=0, style=solid];
m4_1812 -> m4_976  [key=2, style=dotted];
m4_1812 -> m4_1813  [key=0, style=solid];
m4_1814 -> m4_559  [key=2, style=dotted];
m4_1814 -> m4_1815  [key=0, style=solid];
m4_1814 -> m4_1816  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_1814 -> m4_1817  [key=1, style=dashed, color=darkseagreen4, label=ms];
m4_1810 -> m4_1812  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1810 -> m4_1811  [key=0, style=solid];
m4_1810 -> m4_1820  [key=2, style=dotted];
m4_1810 -> m4_1813  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1810 -> m4_1816  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_1811 -> m4_1812  [key=0, style=solid];
m4_1811 -> m4_1821  [key=2, style=dotted];
m4_1813 -> m4_1814  [key=0, style=solid];
m4_1813 -> m4_1822  [key=2, style=dotted];
m4_1815 -> m4_644  [key=2, style=dotted];
m4_1815 -> m4_1816  [key=0, style=solid];
m4_1816 -> m4_645  [key=2, style=dotted];
m4_1816 -> m4_1817  [key=0, style=solid];
m4_1818 -> m4_647  [key=2, style=dotted];
m4_1818 -> m4_1819  [key=0, style=solid];
m4_1817 -> m4_646  [key=2, style=dotted];
m4_1817 -> m4_1818  [key=0, style=solid];
m4_1819 -> m4_1809  [key=0, style=bold, color=blue];
m4_3483 -> m4_3484  [key=0, style=solid];
m4_3488 -> m4_34  [key=2, style=dotted];
m4_3488 -> m4_3489  [key=0, style=solid];
m4_3487 -> m4_3488  [key=0, style=solid];
m4_3487 -> m4_2297  [key=2, style=dotted];
m4_3484 -> m4_3487  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_3484 -> m4_117  [key=2, style=dotted];
m4_3484 -> m4_118  [key=2, style=dotted];
m4_3484 -> m4_3485  [key=0, style=solid];
m4_3486 -> m4_3487  [key=0, style=solid];
m4_3486 -> m4_558  [key=2, style=dotted];
m4_3485 -> m4_95  [key=2, style=dotted];
m4_3485 -> m4_3486  [key=0, style=solid];
m4_3489 -> m4_3483  [key=0, style=bold, color=blue];
m4_722 -> m4_723  [key=0, style=solid];
m4_725 -> m4_34  [key=2, style=dotted];
m4_725 -> m4_726  [key=0, style=solid];
m4_725 -> m4_727  [key=2, style=dotted];
m4_724 -> m4_725  [key=0, style=solid];
m4_724 -> m4_666  [key=2, style=dotted];
m4_723 -> m4_724  [key=0, style=solid];
m4_726 -> m4_722  [key=0, style=bold, color=blue];
m4_1664 -> m4_1665  [key=0, style=solid];
m4_1665 -> m4_554  [key=2, style=dotted];
m4_1665 -> m4_1666  [key=0, style=solid];
m4_1665 -> m4_1667  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m4_1665 -> m4_1668  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m4_1666 -> m4_976  [key=2, style=dotted];
m4_1666 -> m4_557  [key=2, style=dotted];
m4_1666 -> m4_1667  [key=0, style=solid];
m4_1667 -> m4_976  [key=2, style=dotted];
m4_1667 -> m4_557  [key=2, style=dotted];
m4_1667 -> m4_1668  [key=0, style=solid];
m4_1668 -> m4_65  [key=2, style=dotted];
m4_1668 -> m4_1669  [key=0, style=solid];
m4_1669 -> m4_67  [key=2, style=dotted];
m4_1669 -> m4_1670  [key=0, style=solid];
m4_1670 -> m4_1664  [key=0, style=bold, color=blue];
m4_2348 -> m4_2349  [key=0, style=solid];
m4_2349 -> m4_12  [key=2, style=dotted];
m4_2349 -> m4_2350  [key=0, style=solid];
m4_2350 -> m4_34  [key=2, style=dotted];
m4_2350 -> m4_2351  [key=0, style=solid];
m4_2351 -> m4_2348  [key=0, style=bold, color=blue];
m4_3689 -> m4_3690  [key=0, style=solid];
m4_3696 -> m4_34  [key=2, style=dotted];
m4_3696 -> m4_3697  [key=0, style=solid];
m4_3696 -> m4_1413  [key=2, style=dotted];
m4_3690 -> m4_3696  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3690 -> m4_683  [key=2, style=dotted];
m4_3690 -> m4_3691  [key=0, style=solid];
m4_3690 -> m4_3693  [key=1, style=dashed, color=darkseagreen4, label=dt];
m4_3695 -> m4_3696  [key=0, style=solid];
m4_3695 -> m4_96  [key=2, style=dotted];
m4_3693 -> m4_554  [key=2, style=dotted];
m4_3693 -> m4_3695  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3693 -> m4_463  [key=2, style=dotted];
m4_3693 -> m4_3694  [key=0, style=solid];
m4_3691 -> m4_3692  [key=0, style=solid];
m4_3692 -> m4_3695  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_3692 -> m4_95  [key=2, style=dotted];
m4_3692 -> m4_3693  [key=0, style=solid];
m4_3694 -> m4_3695  [key=0, style=solid];
m4_3694 -> m4_67  [key=2, style=dotted];
m4_3697 -> m4_3689  [key=0, style=bold, color=blue];
m4_2235 -> m4_2236  [key=0, style=solid];
m4_2238 -> m4_12  [key=2, style=dotted];
m4_2238 -> m4_2239  [key=0, style=solid];
m4_2238 -> m4_2240  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_2238 -> m4_2241  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_2238 -> m4_2242  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_2239 -> m4_34  [key=2, style=dotted];
m4_2239 -> m4_2240  [key=0, style=solid];
m4_2236 -> m4_2238  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_2236 -> m4_2237  [key=0, style=solid];
m4_2236 -> m4_51  [key=2, style=dotted];
m4_2236 -> m4_65  [key=2, style=dotted];
m4_2237 -> m4_2238  [key=0, style=solid];
m4_2237 -> m4_67  [key=2, style=dotted];
m4_2240 -> m4_2241  [key=0, style=solid];
m4_2240 -> m4_2244  [key=2, style=dotted];
m4_2240 -> m4_203  [key=2, style=dotted];
m4_2241 -> m4_2242  [key=0, style=solid];
m4_2241 -> m4_2244  [key=2, style=dotted];
m4_2241 -> m4_203  [key=2, style=dotted];
m4_2242 -> m4_2243  [key=0, style=solid];
m4_2242 -> m4_2244  [key=2, style=dotted];
m4_2242 -> m4_203  [key=2, style=dotted];
m4_2243 -> m4_2235  [key=0, style=bold, color=blue];
m4_1433 -> m4_1434  [key=0, style=solid];
m4_1437 -> m4_12  [key=2, style=dotted];
m4_1437 -> m4_1438  [key=0, style=solid];
m4_1435 -> m4_47  [key=2, style=dotted];
m4_1435 -> m4_1437  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1435 -> m4_1436  [key=0, style=solid];
m4_1436 -> m4_34  [key=2, style=dotted];
m4_1436 -> m4_1437  [key=0, style=solid];
m4_1436 -> m4_1441  [key=2, style=dotted];
m4_1438 -> m4_34  [key=2, style=dotted];
m4_1438 -> m4_1439  [key=0, style=solid];
m4_1434 -> m4_1435  [key=0, style=solid];
m4_1434 -> m4_1436  [key=1, style=dashed, color=darkseagreen4, label=uri];
m4_1434 -> m4_1438  [key=1, style=dashed, color=darkseagreen4, label=uri];
m4_1434 -> m4_1440  [key=2, style=dotted];
m4_1439 -> m4_1433  [key=0, style=bold, color=blue];
m4_2147 -> m4_2148  [key=0, style=solid];
m4_2155 -> m4_2159  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2155 -> m4_2156  [key=0, style=solid];
m4_2155 -> m4_65  [key=2, style=dotted];
m4_2154 -> m4_2155  [key=0, style=solid];
m4_2154 -> m4_557  [key=2, style=dotted];
m4_2151 -> m4_2155  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_2151 -> m4_554  [key=2, style=dotted];
m4_2151 -> m4_2154  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_2151 -> m4_2152  [key=0, style=solid];
m4_2151 -> m4_2153  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_2156 -> m4_2158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2156 -> m4_2157  [key=0, style=solid];
m4_2156 -> m4_8  [key=2, style=dotted];
m4_2148 -> m4_554  [key=2, style=dotted];
m4_2148 -> m4_2154  [key=1, style=dashed, color=darkseagreen4, label=reference];
m4_2148 -> m4_2149  [key=0, style=solid];
m4_2148 -> m4_2150  [key=1, style=dashed, color=darkseagreen4, label=reference];
m4_2153 -> m4_2154  [key=0, style=solid];
m4_2153 -> m4_557  [key=2, style=dotted];
m4_2150 -> m4_2151  [key=0, style=solid];
m4_2150 -> m4_557  [key=2, style=dotted];
m4_2152 -> m4_557  [key=2, style=dotted];
m4_2152 -> m4_2153  [key=0, style=solid];
m4_2149 -> m4_557  [key=2, style=dotted];
m4_2149 -> m4_2150  [key=0, style=solid];
m4_2157 -> m4_2147  [key=0, style=bold, color=blue];
m4_3134 -> m4_3135  [key=0, style=solid];
m4_3136 -> m4_47  [key=2, style=dotted];
m4_3136 -> m4_3137  [key=0, style=solid];
m4_3137 -> m4_34  [key=2, style=dotted];
m4_3137 -> m4_3138  [key=0, style=solid];
m4_3135 -> m4_3136  [key=0, style=solid];
m4_3135 -> m4_3133  [key=2, style=dotted];
m4_3138 -> m4_3134  [key=0, style=bold, color=blue];
m4_2823 -> m4_2824  [key=0, style=solid];
m4_2824 -> m4_2828  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2824 -> m4_2825  [key=0, style=solid];
m4_2825 -> m4_2827  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2825 -> m4_2826  [key=0, style=solid];
m4_2825 -> m4_8  [key=2, style=dotted];
m4_2826 -> m4_2823  [key=0, style=bold, color=blue];
m4_3590 -> m4_3591  [key=0, style=solid];
m4_3591 -> m4_3583  [key=2, style=dotted];
m4_3591 -> m4_3592  [key=0, style=solid];
m4_3592 -> m4_3590  [key=0, style=bold, color=blue];
m4_3474 -> m4_3475  [key=0, style=solid];
m4_3477 -> m4_12  [key=2, style=dotted];
m4_3477 -> m4_3478  [key=0, style=solid];
m4_3477 -> m4_3480  [key=1, style=dashed, color=darkseagreen4, label=s2];
m4_3476 -> m4_47  [key=2, style=dotted];
m4_3476 -> m4_3477  [key=0, style=solid];
m4_3478 -> m4_34  [key=2, style=dotted];
m4_3478 -> m4_3479  [key=0, style=solid];
m4_3480 -> m4_3479  [key=0, style=solid];
m4_3480 -> m4_1845  [key=2, style=dotted];
m4_3480 -> m4_203  [key=2, style=dotted];
m4_3475 -> m4_3476  [key=0, style=solid];
m4_3475 -> m4_3478  [key=1, style=dashed, color=darkseagreen4, label=s1];
m4_3475 -> m4_3482  [key=2, style=dotted];
m4_3475 -> m4_3479  [key=1, style=dashed, color=darkseagreen4, label=s1];
m4_3479 -> m4_3480  [key=0, style=solid];
m4_3479 -> m4_3481  [key=0, style=solid];
m4_3481 -> m4_3474  [key=0, style=bold, color=blue];
m4_755 -> m4_756  [key=0, style=solid];
m4_757 -> m4_199  [key=2, style=dotted];
m4_757 -> m4_758  [key=0, style=solid];
m4_756 -> m4_757  [key=0, style=solid];
m4_758 -> m4_759  [key=0, style=solid];
m4_759 -> m4_759  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_759 -> m4_760  [key=0, style=solid];
m4_760 -> m4_755  [key=0, style=bold, color=blue];
m4_3611 -> m4_3612  [key=0, style=solid];
m4_3612 -> m4_3583  [key=2, style=dotted];
m4_3612 -> m4_3613  [key=0, style=solid];
m4_3613 -> m4_3611  [key=0, style=bold, color=blue];
m4_1748 -> m4_1749  [key=0, style=solid];
m4_1749 -> m4_12  [key=2, style=dotted];
m4_1749 -> m4_1750  [key=0, style=solid];
m4_1751 -> m4_12  [key=2, style=dotted];
m4_1751 -> m4_1752  [key=0, style=solid];
m4_1750 -> m4_34  [key=2, style=dotted];
m4_1750 -> m4_1751  [key=0, style=solid];
m4_1750 -> m4_1129  [key=2, style=dotted];
m4_1752 -> m4_34  [key=2, style=dotted];
m4_1752 -> m4_1753  [key=0, style=solid];
m4_1752 -> m4_1129  [key=2, style=dotted];
m4_1753 -> m4_1748  [key=0, style=bold, color=blue];
m4_3457 -> m4_3458  [key=0, style=solid];
m4_3463 -> m4_34  [key=2, style=dotted];
m4_3463 -> m4_3464  [key=0, style=solid];
m4_3459 -> m4_3463  [key=1, style=dashed, color=darkseagreen4, label=expected];
m4_3459 -> m4_3460  [key=0, style=solid];
m4_3459 -> m4_65  [key=2, style=dotted];
m4_3459 -> m4_3462  [key=1, style=dashed, color=darkseagreen4, label=expected];
m4_3461 -> m4_3463  [key=1, style=dashed, color=darkseagreen4, label=actual];
m4_3461 -> m4_3462  [key=0, style=solid];
m4_3461 -> m4_95  [key=2, style=dotted];
m4_3461 -> m4_962  [key=2, style=dotted];
m4_3462 -> m4_3463  [key=0, style=solid];
m4_3462 -> m4_66  [key=2, style=dotted];
m4_3458 -> m4_839  [key=2, style=dotted];
m4_3458 -> m4_554  [key=2, style=dotted];
m4_3458 -> m4_123  [key=2, style=dotted];
m4_3458 -> m4_831  [key=2, style=dotted];
m4_3458 -> m4_3459  [key=0, style=solid];
m4_3458 -> m4_3461  [key=1, style=dashed, color=darkseagreen4, label=dates];
m4_3460 -> m4_3461  [key=0, style=solid];
m4_3460 -> m4_66  [key=2, style=dotted];
m4_3464 -> m4_3457  [key=0, style=bold, color=blue];
m4_3148 -> m4_3149  [key=0, style=solid];
m4_3152 -> m4_12  [key=2, style=dotted];
m4_3152 -> m4_3153  [key=0, style=solid];
m4_3152 -> m4_3154  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_3152 -> m4_3155  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m4_3153 -> m4_34  [key=2, style=dotted];
m4_3153 -> m4_3154  [key=0, style=solid];
m4_3154 -> m4_34  [key=2, style=dotted];
m4_3154 -> m4_3155  [key=0, style=solid];
m4_3154 -> m4_123  [key=2, style=dotted];
m4_3155 -> m4_34  [key=2, style=dotted];
m4_3155 -> m4_3156  [key=0, style=solid];
m4_3155 -> m4_123  [key=2, style=dotted];
m4_3150 -> m4_3152  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3150 -> m4_3151  [key=0, style=solid];
m4_3150 -> m4_95  [key=2, style=dotted];
m4_3150 -> m4_962  [key=2, style=dotted];
m4_3151 -> m4_3152  [key=0, style=solid];
m4_3151 -> m4_67  [key=2, style=dotted];
m4_3149 -> m4_3150  [key=0, style=solid];
m4_3149 -> m4_554  [key=2, style=dotted];
m4_3149 -> m4_123  [key=2, style=dotted];
m4_3156 -> m4_3148  [key=0, style=bold, color=blue];
m4_3045 -> m4_3046  [key=0, style=solid];
m4_3054 -> m4_34  [key=2, style=dotted];
m4_3054 -> m4_3055  [key=0, style=solid];
m4_3055 -> m4_34  [key=2, style=dotted];
m4_3055 -> m4_3056  [key=0, style=solid];
m4_3056 -> m4_34  [key=2, style=dotted];
m4_3056 -> m4_3057  [key=0, style=solid];
m4_3046 -> m4_3054  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_3046 -> m4_3055  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_3046 -> m4_3056  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_3046 -> m4_3047  [key=0, style=solid];
m4_3046 -> m4_120  [key=2, style=dotted];
m4_3046 -> m4_3053  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_3050 -> m4_3054  [key=0, style=solid];
m4_3050 -> m4_3051  [key=0, style=solid];
m4_3050 -> m4_3058  [key=2, style=dotted];
m4_3049 -> m4_3054  [key=0, style=solid];
m4_3049 -> m4_3050  [key=0, style=solid];
m4_3047 -> m4_3050  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_3047 -> m4_117  [key=2, style=dotted];
m4_3047 -> m4_118  [key=2, style=dotted];
m4_3047 -> m4_3048  [key=0, style=solid];
m4_3047 -> m4_3052  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_3053 -> m4_3049  [key=0, style=solid];
m4_3053 -> m4_64  [key=2, style=dotted];
m4_3051 -> m4_119  [key=2, style=dotted];
m4_3051 -> m4_3052  [key=0, style=solid];
m4_3048 -> m4_3049  [key=0, style=solid];
m4_3052 -> m4_2297  [key=2, style=dotted];
m4_3052 -> m4_3053  [key=0, style=solid];
m4_3057 -> m4_3045  [key=0, style=bold, color=blue];
m4_734 -> m4_735  [key=0, style=solid];
m4_736 -> m4_12  [key=2, style=dotted];
m4_736 -> m4_737  [key=0, style=solid];
m4_736 -> m4_738  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_735 -> m4_47  [key=2, style=dotted];
m4_735 -> m4_736  [key=0, style=solid];
m4_735 -> m4_740  [key=2, style=dotted];
m4_737 -> m4_34  [key=2, style=dotted];
m4_737 -> m4_738  [key=0, style=solid];
m4_738 -> m4_34  [key=2, style=dotted];
m4_738 -> m4_739  [key=0, style=solid];
m4_739 -> m4_734  [key=0, style=bold, color=blue];
m4_2518 -> m4_2519  [key=0, style=solid];
m4_2520 -> m4_12  [key=2, style=dotted];
m4_2520 -> m4_2521  [key=0, style=solid];
m4_2520 -> m4_2522  [key=1, style=dashed, color=darkseagreen4, label=withoutParameterisedConstructor];
m4_2521 -> m4_12  [key=2, style=dotted];
m4_2521 -> m4_2522  [key=0, style=solid];
m4_2522 -> m4_34  [key=2, style=dotted];
m4_2522 -> m4_2523  [key=0, style=solid];
m4_2519 -> m4_2520  [key=0, style=solid];
m4_2519 -> m4_2521  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2523 -> m4_2518  [key=0, style=bold, color=blue];
m4_868 -> m4_869  [key=0, style=solid];
m4_876 -> m4_34  [key=2, style=dotted];
m4_876 -> m4_877  [key=0, style=solid];
m4_874 -> m4_34  [key=2, style=dotted];
m4_874 -> m4_875  [key=0, style=solid];
m4_869 -> m4_876  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_869 -> m4_683  [key=2, style=dotted];
m4_869 -> m4_870  [key=0, style=solid];
m4_875 -> m4_876  [key=0, style=solid];
m4_875 -> m4_875  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_875 -> m4_879  [key=2, style=dotted];
m4_873 -> m4_874  [key=0, style=solid];
m4_873 -> m4_875  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_873 -> m4_463  [key=2, style=dotted];
m4_870 -> m4_875  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_870 -> m4_873  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m4_870 -> m4_871  [key=0, style=solid];
m4_871 -> m4_875  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_871 -> m4_873  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_871 -> m4_95  [key=2, style=dotted];
m4_871 -> m4_872  [key=0, style=solid];
m4_872 -> m4_873  [key=0, style=solid];
m4_872 -> m4_64  [key=2, style=dotted];
m4_872 -> m4_878  [key=2, style=dotted];
m4_877 -> m4_868  [key=0, style=bold, color=blue];
m4_52 -> m4_53  [key=0, style=solid];
m4_59 -> m4_12  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label=c2];
m4_60 -> m4_34  [key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_61 -> m4_34  [key=2, style=dotted];
m4_61 -> m4_62  [key=0, style=solid];
m4_56 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_65  [key=2, style=dotted];
m4_56 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_67  [key=2, style=dotted];
m4_53 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_48  [key=2, style=dotted];
m4_53 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_63  [key=2, style=dotted];
m4_55 -> m4_64  [key=2, style=dotted];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_66  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_62 -> m4_52  [key=0, style=bold, color=blue];
m4_3239 -> m4_3240  [key=0, style=solid];
m4_3241 -> m4_12  [key=2, style=dotted];
m4_3241 -> m4_3242  [key=0, style=solid];
m4_3241 -> m4_3243  [key=1, style=dashed, color=darkseagreen4, label=exception];
m4_3241 -> m4_3244  [key=1, style=dashed, color=darkseagreen4, label=exception];
m4_3244 -> m4_34  [key=2, style=dotted];
m4_3244 -> m4_3245  [key=0, style=solid];
m4_3240 -> m4_3241  [key=0, style=solid];
m4_3242 -> m4_3243  [key=0, style=solid];
m4_3242 -> m4_520  [key=2, style=dotted];
m4_3243 -> m4_3244  [key=0, style=solid];
m4_3243 -> m4_469  [key=2, style=dotted];
m4_3245 -> m4_3239  [key=0, style=bold, color=blue];
m4_159 -> m4_160  [key=0, style=solid, color=green];
m4_160 -> m4_161  [key=0, style=solid, color=green];
m4_160 -> m4_167  [key=2, style=dotted, color=green];
m4_160 -> m4_163  [key=1, style=dashed, color=green, label=input];
m4_160 -> m4_164  [key=1, style=dashed, color=green, label=input];
m4_160 -> m4_165  [key=1, style=dashed, color=green, label=input];
m4_161 -> m4_162  [key=0, style=solid];
m4_161 -> m4_47  [key=2, style=dotted];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_34  [key=2, style=dotted];
m4_164 -> m4_165  [key=0, style=solid];
m4_164 -> m4_34  [key=2, style=dotted];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_34  [key=2, style=dotted];
m4_162 -> m4_12  [key=2, style=dotted];
m4_162 -> m4_163  [key=0, style=solid];
m4_162 -> m4_164  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_162 -> m4_165  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m4_166 -> m4_159  [key=0, style=bold, color=blue];
m4_1736 -> m4_1737  [key=0, style=solid];
m4_1743 -> m4_12  [key=2, style=dotted];
m4_1743 -> m4_1744  [key=0, style=solid];
m4_1744 -> m4_34  [key=2, style=dotted];
m4_1744 -> m4_1745  [key=0, style=solid];
m4_1741 -> m4_1743  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_1741 -> m4_1742  [key=0, style=solid];
m4_1741 -> m4_1733  [key=2, style=dotted];
m4_1742 -> m4_1743  [key=0, style=solid];
m4_1742 -> m4_67  [key=2, style=dotted];
m4_1737 -> m4_1741  [key=1, style=dashed, color=darkseagreen4, label=g];
m4_1737 -> m4_1738  [key=0, style=solid];
m4_1737 -> m4_1746  [key=2, style=dotted];
m4_1737 -> m4_1739  [key=1, style=dashed, color=darkseagreen4, label=g];
m4_1737 -> m4_1740  [key=1, style=dashed, color=darkseagreen4, label=g];
m4_1740 -> m4_1741  [key=0, style=solid];
m4_1738 -> m4_1739  [key=0, style=solid];
m4_1738 -> m4_1747  [key=2, style=dotted];
m4_1738 -> m4_1727  [key=2, style=dotted];
m4_1739 -> m4_1740  [key=0, style=solid];
m4_1739 -> m4_1747  [key=2, style=dotted];
m4_1739 -> m4_1727  [key=2, style=dotted];
m4_1745 -> m4_1736  [key=0, style=bold, color=blue];
m4_416 -> m4_417  [key=0, style=solid];
m4_416 -> m4_418  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_416 -> m4_419  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_416 -> m4_420  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_416 -> m4_421  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_416 -> m4_422  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_417 -> m4_418  [key=0, style=solid];
m4_417 -> m4_424  [key=2, style=dotted];
m4_418 -> m4_419  [key=0, style=solid];
m4_418 -> m4_425  [key=2, style=dotted];
m4_419 -> m4_420  [key=0, style=solid];
m4_419 -> m4_426  [key=2, style=dotted];
m4_420 -> m4_421  [key=0, style=solid];
m4_420 -> m4_426  [key=2, style=dotted];
m4_421 -> m4_422  [key=0, style=solid];
m4_421 -> m4_426  [key=2, style=dotted];
m4_422 -> m4_423  [key=0, style=solid];
m4_422 -> m4_426  [key=2, style=dotted];
m4_423 -> m4_416  [key=0, style=bold, color=blue];
m4_1102 -> m4_1103  [key=0, style=solid];
m4_1103 -> m4_47  [key=2, style=dotted];
m4_1103 -> m4_1104  [key=0, style=solid];
m4_1103 -> m4_1106  [key=2, style=dotted];
m4_1104 -> m4_34  [key=2, style=dotted];
m4_1104 -> m4_1105  [key=0, style=solid];
m4_1105 -> m4_1102  [key=0, style=bold, color=blue];
m4_3495 -> m4_3496  [key=0, style=solid];
m4_3496 -> m4_2092  [key=2, style=dotted];
m4_3496 -> m4_3497  [key=0, style=solid];
m4_3497 -> m4_65  [key=2, style=dotted];
m4_3497 -> m4_3498  [key=0, style=solid];
m4_3498 -> m4_67  [key=2, style=dotted];
m4_3498 -> m4_3499  [key=0, style=solid];
m4_3499 -> m4_3495  [key=0, style=bold, color=blue];
m4_130 -> m4_131  [key=0, style=solid];
m4_132 -> m4_12  [key=2, style=dotted];
m4_132 -> m4_133  [key=0, style=solid];
m4_131 -> m4_47  [key=2, style=dotted];
m4_131 -> m4_34  [key=2, style=dotted];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_135  [key=2, style=dotted];
m4_133 -> m4_34  [key=2, style=dotted];
m4_133 -> m4_134  [key=0, style=solid];
m4_134 -> m4_130  [key=0, style=bold, color=blue];
m4_1594 -> m4_1595  [key=0, style=solid];
m4_1595 -> m4_8  [key=2, style=dotted];
m4_1595 -> m4_1596  [key=0, style=solid];
m4_1595 -> m4_1597  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1596 -> m4_1594  [key=0, style=bold, color=blue];
m4_771 -> m4_772  [key=0, style=solid];
m4_777 -> m4_12  [key=2, style=dotted];
m4_777 -> m4_778  [key=0, style=solid];
m4_777 -> m4_779  [key=1, style=dashed, color=darkseagreen4, label=test2];
m4_775 -> m4_47  [key=2, style=dotted];
m4_775 -> m4_777  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m4_775 -> m4_776  [key=0, style=solid];
m4_778 -> m4_34  [key=2, style=dotted];
m4_778 -> m4_779  [key=0, style=solid];
m4_779 -> m4_34  [key=2, style=dotted];
m4_779 -> m4_780  [key=0, style=solid];
m4_776 -> m4_34  [key=2, style=dotted];
m4_776 -> m4_777  [key=0, style=solid];
m4_772 -> m4_775  [key=1, style=dashed, color=darkseagreen4, label=test];
m4_772 -> m4_778  [key=1, style=dashed, color=darkseagreen4, label=test];
m4_772 -> m4_779  [key=1, style=dashed, color=darkseagreen4, label=test];
m4_772 -> m4_773  [key=0, style=solid];
m4_772 -> m4_781  [key=2, style=dotted];
m4_772 -> m4_774  [key=1, style=dashed, color=darkseagreen4, label=test];
m4_774 -> m4_775  [key=0, style=solid];
m4_773 -> m4_774  [key=0, style=solid];
m4_780 -> m4_771  [key=0, style=bold, color=blue];
m4_2957 -> m4_2958  [key=0, style=solid];
m4_2958 -> m4_12  [key=2, style=dotted];
m4_2958 -> m4_2959  [key=0, style=solid];
m4_2959 -> m4_2960  [key=0, style=solid];
m4_2959 -> m4_89  [key=2, style=dotted];
m4_2960 -> m4_2957  [key=0, style=bold, color=blue];
m4_2551 -> m4_2552  [key=0, style=solid];
m4_2553 -> m4_47  [key=2, style=dotted];
m4_2553 -> m4_2554  [key=0, style=solid];
m4_2553 -> m4_2555  [key=1, style=dashed, color=darkseagreen4, label=result];
m4_2555 -> m4_34  [key=2, style=dotted];
m4_2555 -> m4_2556  [key=0, style=solid];
m4_2552 -> m4_2553  [key=0, style=solid];
m4_2552 -> m4_2557  [key=2, style=dotted];
m4_2554 -> m4_2555  [key=0, style=solid];
m4_2554 -> m4_66  [key=2, style=dotted];
m4_2556 -> m4_2551  [key=0, style=bold, color=blue];
m4_2837 -> m4_2838  [key=0, style=solid];
m4_2838 -> m4_2842  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_2838 -> m4_2839  [key=0, style=solid];
m4_2839 -> m4_2841  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_2839 -> m4_2840  [key=0, style=solid];
m4_2839 -> m4_8  [key=2, style=dotted];
m4_2840 -> m4_2837  [key=0, style=bold, color=blue];
m4_2644 -> m4_2645  [key=0, style=solid];
m4_2645 -> m4_12  [key=2, style=dotted];
m4_2645 -> m4_2646  [key=0, style=solid];
m4_2645 -> m4_2647  [key=1, style=dashed, color=darkseagreen4, label=r];
m4_2645 -> m4_2648  [key=1, style=dashed, color=darkseagreen4, label=r];
m4_2645 -> m4_2649  [key=1, style=dashed, color=darkseagreen4, label=r];
m4_2645 -> m4_2650  [key=1, style=dashed, color=darkseagreen4, label=r];
m4_2646 -> m4_34  [key=2, style=dotted];
m4_2646 -> m4_2647  [key=0, style=solid];
m4_2646 -> m4_122  [key=2, style=dotted];
m4_2647 -> m4_34  [key=2, style=dotted];
m4_2647 -> m4_2648  [key=0, style=solid];
m4_2647 -> m4_200  [key=2, style=dotted];
m4_2648 -> m4_2649  [key=0, style=solid];
m4_2648 -> m4_1413  [key=2, style=dotted];
m4_2648 -> m4_520  [key=2, style=dotted];
m4_2649 -> m4_2650  [key=0, style=solid];
m4_2649 -> m4_1413  [key=2, style=dotted];
m4_2649 -> m4_520  [key=2, style=dotted];
m4_2650 -> m4_2651  [key=0, style=solid];
m4_2650 -> m4_1413  [key=2, style=dotted];
m4_2650 -> m4_89  [key=2, style=dotted];
m4_2651 -> m4_2644  [key=0, style=bold, color=blue];
m4_3893 -> m4_818  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3898 -> m4_1489  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3899 -> m4_1516  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3900 -> m4_1523  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3901 -> m4_1530  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3902 -> m4_1537  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3903 -> m4_1544  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3904 -> m4_1551  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3905 -> m4_1558  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3906 -> m4_1565  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3920 -> m4_2159  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3924 -> m4_2275  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3936 -> m4_2828  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3937 -> m4_2842  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3945 -> m4_3339  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3947 -> m4_3431  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3894 -> m4_1238  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m4_3892 -> m4_3181  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m4_3892 -> m4_592  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m4_3892 -> m4_614  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m4_3892 -> m4_624  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m4_3892 -> m4_3187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m4_3892 -> m4_3188  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m4_3909 -> m4_1712  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m4_3909 -> m4_1713  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m4_3933 -> m4_2582  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m4_3933 -> m4_2581  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m4_3897 -> m4_1382  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m4_3897 -> m4_1376  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m4_3897 -> m4_1377  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m4_3897 -> m4_1378  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m4_3897 -> m4_1379  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m4_3934 -> m4_2635  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m4_3934 -> m4_2627  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m4_3934 -> m4_2628  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m4_3934 -> m4_2629  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m4_3934 -> m4_2632  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m4_3938 -> m4_3092  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3939 -> m4_3107  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3940 -> m4_3122  [key=1, style=dashed, color=darkseagreen4, label=errors];
m4_3910 -> m4_1734  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m4_3910 -> m4_1728  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m4_3910 -> m4_1731  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m4_3911 -> m4_1767  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3915 -> m4_1833  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3915 -> m4_1843  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3915 -> m4_1829  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3915 -> m4_1836  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3915 -> m4_1839  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3915 -> m4_1847  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3915 -> m4_1851  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3915 -> m4_1855  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3915 -> m4_1862  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3915 -> m4_1865  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3915 -> m4_1869  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3915 -> m4_1873  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3915 -> m4_1877  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m4_3888 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem"];
m4_3908 -> m4_1587  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3932 -> m4_2566  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m4_3932 -> m4_2565  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m4_3935 -> m4_2659  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException"];
m4_3912 -> m4_1771  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor"];
m4_3941 -> m4_3237  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3942 -> m4_3237  [key=1, style=dashed, color=darkseagreen4, label=s];
m4_3953 -> m4_3860  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DecimalTest"];
m4_3943 -> m4_3297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>"];
m4_3952 -> m4_3803  [key=1, style=dashed, color=darkseagreen4, label=JsonMessage];
m4_3890 -> m4_407  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_408  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_414  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_417  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_418  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_419  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_420  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_422  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_428  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_430  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_434  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_435  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3890 -> m4_436  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m4_3916 -> m4_1894  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1890  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1891  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1892  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1893  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1897  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1898  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1899  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1900  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1901  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1902  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1903  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1904  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1905  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1906  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1907  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1908  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1909  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1910  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1911  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1912  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1913  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1914  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1929  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1930  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1931  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1932  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1933  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1935  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1936  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1937  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1938  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1939  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1940  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1941  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1942  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1943  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1944  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1945  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3916 -> m4_1946  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m4_3946 -> m4_3350  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver"];
m4_3907 -> m4_1579  [key=1, style=dashed, color=darkseagreen4, label=json];
m4_3913 -> m4_1800  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1"];
m4_3891 -> m4_568  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m4_3891 -> m4_569  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m4_3891 -> m4_572  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m4_3949 -> m4_3580  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m4_3949 -> m4_3574  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m4_3949 -> m4_3576  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m4_3949 -> m4_3578  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m4_3949 -> m4_3603  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m4_3949 -> m4_3606  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m4_3949 -> m4_3609  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m4_3926 -> m4_2391  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived"];
m4_3950 -> m4_3756  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType"];
m4_3918 -> m4_2057  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3918 -> m4_2058  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3918 -> m4_2059  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3918 -> m4_2060  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3918 -> m4_2061  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3918 -> m4_2062  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3918 -> m4_2063  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3918 -> m4_2064  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m4_3919 -> m4_2068  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3919 -> m4_2069  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3919 -> m4_2070  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3919 -> m4_2071  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3919 -> m4_2072  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3919 -> m4_2073  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3919 -> m4_2074  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3919 -> m4_2075  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3919 -> m4_2076  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3919 -> m4_2077  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m4_3914 -> m4_1802  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2"];
m4_3929 -> m4_2410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m4_3948 -> m4_3503  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor"];
m5_29 -> m5_30  [key=0, style=solid, color=green];
m5_30 -> m5_30  [key=3, color=green, style=bold, label="Local variable string json"];
m5_30 -> m5_31  [key=0, style=solid, color=green];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_37  [key=2, style=dotted];
m5_31 -> m5_38  [key=2, style=dotted];
m5_31 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_31 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_31 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_32 -> m5_36  [key=0, style=solid];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_39  [key=2, style=dotted];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_35  [key=0, style=solid];
m5_34 -> m5_32  [key=0, style=solid];
m5_34 -> m5_40  [key=2, style=dotted];
m5_35 -> m5_32  [key=0, style=solid];
m5_35 -> m5_41  [key=2, style=dotted];
m5_36 -> m5_29  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_19  [key=2, style=dotted];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_20  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid, color=green];
m5_15 -> m5_24  [key=2, style=dotted, color=green];
m5_3 -> m5_15  [key=1, style=dashed, color=green, label=writer];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_21  [key=2, style=dotted];
m5_3 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_3 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m5_14 -> m5_15  [key=0, style=solid, color=green];
m5_14 -> m5_24  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_27  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_22  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_23  [key=2, style=dotted];
m5_7 -> m5_24  [key=2, style=dotted];
m5_7 -> m5_8  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_23  [key=2, style=dotted];
m5_9 -> m5_24  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_23  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_25  [key=2, style=dotted];
m5_12 -> m5_24  [key=2, style=dotted];
m5_12 -> m5_13  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_26  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_28  [key=2, style=dotted];
m5_18 -> m5_0  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid, color=green];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_1 -> m6_1  [key=3, color=green, style=bold, label="Local variable string json"];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_8  [key=2, style=dotted];
m6_2 -> m6_9  [key=2, style=dotted];
m6_2 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label=reader];
m6_2 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label=reader];
m6_2 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label=reader];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_7  [key=0, style=solid];
m6_3 -> m6_10  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_6  [key=0, style=solid];
m6_5 -> m6_3  [key=0, style=solid];
m6_5 -> m6_11  [key=2, style=dotted];
m6_6 -> m6_3  [key=0, style=solid];
m6_6 -> m6_12  [key=2, style=dotted];
m6_7 -> m6_0  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_21  [key=2, style=dotted];
m7_1 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label=sb];
m7_1 -> m7_19  [key=1, style=dashed, color=green, label=sb];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_22  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid, color=green];
m7_18 -> m7_31  [key=2, style=dotted];
m7_18 -> m7_32  [key=2, style=dotted];
m7_19 -> m7_20  [key=0, style=solid, color=green];
m7_19 -> m7_31  [key=2, style=dotted, color=green];
m7_19 -> m7_33  [key=2, style=dotted, color=green];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_23  [key=2, style=dotted];
m7_3 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_3 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_3 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_3 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_3 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_3 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_3 -> m7_11  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_3 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_3 -> m7_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_3 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_3 -> m7_15  [key=1, style=dashed, color=green, label=writer];
m7_3 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_3 -> m7_17  [key=1, style=dashed, color=darkseagreen4, label=writer];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_24  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_25  [key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_26  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_25  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_26  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_25  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_27  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_26  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_28  [key=2, style=dotted];
m7_14 -> m7_15  [key=0, style=solid, color=green];
m7_14 -> m7_26  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid, color=green];
m7_15 -> m7_26  [key=2, style=dotted, color=green];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_29  [key=2, style=dotted];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_30  [key=2, style=dotted];
m7_20 -> m7_0  [key=0, style=bold, color=blue];
}
