digraph  {
m0_3 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="57-57", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_4 [label="JToken t = JToken.FromObject(value)", span="59-59", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_6 [label="t.WriteTo(writer)", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_10 [label="o.WriteTo(writer)", span="72-72", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_5 [label="t.Type != JTokenType.Object", span="61-61", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_7 [label="JObject o = (JObject)t", span="67-67", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_8 [label="IList<string> propertyNames = o.Properties().Select(p => p.Name).ToList()", span="68-68", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_9 [label="o.AddFirst(new JProperty(''Keys'', new JArray(propertyNames)))", span="70-70", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_11 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="57-57", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_15 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ConvertUtils.cs"];
m0_14 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="229-229", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="ConvertUtils.cs"];
m0_47 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="787-787", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="ConvertUtils.cs"];
m0_27 [label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0", cluster="System.NotImplementedException.NotImplementedException(string)", file="ConvertUtils.cs"];
m0_44 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ConvertUtils.cs"];
m0_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.KeysJsonConverter(params System.Type[])", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.KeysJsonConverter(params System.Type[])", file="ConvertUtils.cs"];
m0_1 [label="_types = types", span="54-54", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.KeysJsonConverter(params System.Type[])", file="ConvertUtils.cs"];
m0_2 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.KeysJsonConverter(params System.Type[])", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.KeysJsonConverter(params System.Type[])", file="ConvertUtils.cs"];
m0_16 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="ConvertUtils.cs"];
m0_45 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="552-552", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="ConvertUtils.cs"];
m0_17 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="ConvertUtils.cs"];
m0_46 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="ConvertUtils.cs"];
m0_48 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ConvertUtils.cs"];
m0_31 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="ConvertUtils.cs"];
m0_24 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="76-76", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_25 [label="throw new NotImplementedException(''Unnecessary because CanRead is false. The type will skip the converter.'');", span="78-78", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_26 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="76-76", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_19 [label="Entry Newtonsoft.Json.Linq.JContainer.AddFirst(object)", span="581-581", cluster="Newtonsoft.Json.Linq.JContainer.AddFirst(object)", file="ConvertUtils.cs"];
m0_13 [label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="402-402", cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="ConvertUtils.cs"];
m0_20 [label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="403-403", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="ConvertUtils.cs"];
m0_12 [label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object)", span="1674-1674", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)", file="ConvertUtils.cs"];
m0_32 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="ConvertUtils.cs"];
m0_21 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="ConvertUtils.cs"];
m0_22 [label="p.Name", span="68-68", cluster="lambda expression", file="ConvertUtils.cs"];
m0_23 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="ConvertUtils.cs"];
m0_33 [label="t == objectType", span="88-88", cluster="lambda expression", file="ConvertUtils.cs"];
m0_34 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="ConvertUtils.cs"];
m0_18 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91", cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="ConvertUtils.cs"];
m0_28 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.CanConvert(System.Type)", span="86-86", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.CanConvert(System.Type)", file="ConvertUtils.cs"];
m0_29 [label="return _types.Any(t => t == objectType);", span="88-88", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.CanConvert(System.Type)", file="ConvertUtils.cs"];
m0_30 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.CanConvert(System.Type)", span="86-86", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter.CanConvert(System.Type)", file="ConvertUtils.cs"];
m0_35 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.Example()", span="101-101", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.Example()", file="ConvertUtils.cs"];
m0_36 [label="Employee employee = new Employee\r\n            {\r\n                FirstName = ''James'',\r\n                LastName = ''Newton-King'',\r\n                Roles = new List<string>\r\n                {\r\n                    ''Admin''\r\n                }\r\n            }", span="104-112", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.Example()", file="ConvertUtils.cs"];
m0_37 [label="string json = JsonConvert.SerializeObject(employee, Formatting.Indented, new KeysJsonConverter(typeof(Employee)))", span="114-114", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.Example()", file="ConvertUtils.cs"];
m0_38 [label="Console.WriteLine(json)", span="116-116", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.Example()", file="ConvertUtils.cs"];
m0_39 [label="Employee newEmployee = JsonConvert.DeserializeObject<Employee>(json, new KeysJsonConverter(typeof(Employee)))", span="130-130", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.Example()", file="ConvertUtils.cs"];
m0_40 [label="Console.WriteLine(newEmployee.FirstName)", span="132-132", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.Example()", file="ConvertUtils.cs"];
m0_41 [label="Assert.AreEqual(''James'', newEmployee.FirstName)", span="136-136", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.Example()", file="ConvertUtils.cs"];
m0_42 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.Example()", span="101-101", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.Example()", file="ConvertUtils.cs"];
m0_43 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.Employee.Employee()", span="92-92", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.Employee.Employee()", file="ConvertUtils.cs"];
m0_49 [label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter", span="", file="ConvertUtils.cs"];
m0_50 [label="System.Type", span="", file="ConvertUtils.cs"];
m1_0 [label="Entry Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", span="37-37", cluster="Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", file="DataTableConverter.cs"];
m1_1 [label="OriginalObject = originalObject", span="39-39", cluster="Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", file="DataTableConverter.cs"];
m1_2 [label="Member = member", span="40-40", cluster="Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", file="DataTableConverter.cs"];
m1_3 [label="Error = error", span="41-41", cluster="Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", file="DataTableConverter.cs"];
m1_4 [label="Path = path", span="42-42", cluster="Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", file="DataTableConverter.cs"];
m1_5 [label="Exit Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", span="37-37", cluster="Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", file="DataTableConverter.cs"];
m1_6 [label="Newtonsoft.Json.Serialization.ErrorContext", span="", file="DataTableConverter.cs"];
m2_71 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="DiscriminatedUnionConverter.cs"];
m2_15 [label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27", cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="DiscriminatedUnionConverter.cs"];
m2_93 [label="Entry System.Type.GetMethod(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMethod(string, System.Reflection.BindingFlags)", file="DiscriminatedUnionConverter.cs"];
m2_56 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", span="140-140", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_57 [label="typeof(IEnumerable).IsAssignableFrom(objectType)", span="142-142", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_59 [label="object[] attributes = objectType.GetCustomAttributes(true)", span="147-147", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", color=red, community=0, file="DiscriminatedUnionConverter.cs"];
m2_68 [label="return (bool)_isUnion(null, objectType, null);", span="164-164", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_58 [label="return false;", span="143-143", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_60 [label="bool isFSharpType = false", span="148-148", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_61 [label=attributes, span="149-149", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_66 [label="!isFSharpType", span="161-161", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_62 [label="Type attributeType = attribute.GetType()", span="151-151", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_63 [label="attributeType.Name == ''CompilationMappingAttribute''", span="152-152", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_64 [label="EnsureInitialized(attributeType)", span="154-154", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_65 [label="isFSharpType = true", span="156-156", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_67 [label="return false;", span="162-162", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_69 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", span="140-140", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_16 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="DiscriminatedUnionConverter.cs"];
m2_102 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="DiscriminatedUnionConverter.cs"];
m2_106 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="354-354", cluster="Newtonsoft.Json.JsonReader.Read()", file="DiscriminatedUnionConverter.cs"];
m2_52 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="DiscriminatedUnionConverter.cs"];
m2_72 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", span="167-167", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_73 [label="!_initialized", span="169-169", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_75 [label="Assembly fsharpCoreAssembly = attributeType.Assembly", span="173-173", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", color=red, community=0, file="DiscriminatedUnionConverter.cs"];
m2_74 [label="_initialized = true", span="171-171", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_76 [label="Type fsharpType = fsharpCoreAssembly.GetType(''Microsoft.FSharp.Reflection.FSharpType'')", span="174-174", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_81 [label="Type fsharpValue = fsharpCoreAssembly.GetType(''Microsoft.FSharp.Reflection.FSharpValue'')", span="182-182", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_88 [label="Type unionCaseInfo = fsharpCoreAssembly.GetType(''Microsoft.FSharp.Reflection.UnionCaseInfo'')", span="193-193", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_77 [label="MethodInfo isUnionMethodInfo = fsharpType.GetMethod(''IsUnion'', BindingFlags.Public | BindingFlags.Static)", span="176-176", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_79 [label="MethodInfo getUnionCasesMethodInfo = fsharpType.GetMethod(''GetUnionCases'', BindingFlags.Public | BindingFlags.Static)", span="179-179", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_78 [label="_isUnion = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(isUnionMethodInfo)", span="177-177", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_80 [label="_getUnionCases = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(getUnionCasesMethodInfo)", span="180-180", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_82 [label="MethodInfo getUnionFieldsMethodInfo = fsharpValue.GetMethod(''GetUnionFields'', BindingFlags.Public | BindingFlags.Static)", span="184-184", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_86 [label="MethodInfo makeUnionMethodInfo = fsharpValue.GetMethod(''MakeUnion'', BindingFlags.Public | BindingFlags.Static)", span="190-190", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_83 [label="_getUnionFields = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(getUnionFieldsMethodInfo)", span="185-185", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_84 [label="_getUnionCaseInfo = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(getUnionFieldsMethodInfo.ReturnType.GetProperty(''Item1''))", span="187-187", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_85 [label="_getUnionCaseFields = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(getUnionFieldsMethodInfo.ReturnType.GetProperty(''Item2''))", span="188-188", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_87 [label="_makeUnion = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(makeUnionMethodInfo)", span="191-191", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_89 [label="_getUnionCaseInfoName = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(unionCaseInfo.GetProperty(''Name''))", span="195-195", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_90 [label="_getUnionCaseInfoFields = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(unionCaseInfo.GetMethod(''GetFields''))", span="196-196", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_91 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", span="167-167", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.EnsureInitialized(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_0 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="61-61", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_1 [label="DefaultContractResolver resolver = serializer.ContractResolver as DefaultContractResolver", span="63-63", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_2 [label="Type t = value.GetType()", span="65-65", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_3 [label="object result = _getUnionFields(null, value, t, null)", span="67-67", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_7 [label="writer.WriteStartObject()", span="72-72", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_8 [label="writer.WritePropertyName((resolver != null) ? resolver.GetResolvedPropertyName(CasePropertyName) : CasePropertyName)", span="73-73", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_9 [label="writer.WriteValue((string)caseName)", span="74-74", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_10 [label="writer.WritePropertyName((resolver != null) ? resolver.GetResolvedPropertyName(FieldsPropertyName) : FieldsPropertyName)", span="75-75", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_11 [label="serializer.Serialize(writer, fields)", span="76-76", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_12 [label="writer.WriteEndObject()", span="77-77", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_4 [label="object info = _getUnionCaseInfo(result)", span="68-68", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_5 [label="object fields = _getUnionCaseFields(result)", span="69-69", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_6 [label="object caseName = _getUnionCaseInfoName(info)", span="70-70", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_13 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="61-61", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_18 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1313-1313", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="DiscriminatedUnionConverter.cs"];
m2_21 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="769-769", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="DiscriminatedUnionConverter.cs"];
m2_96 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", span="66-66", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="DiscriminatedUnionConverter.cs"];
m2_97 [label="Entry System.Type.GetMethod(string)", span="0-0", cluster="System.Type.GetMethod(string)", file="DiscriminatedUnionConverter.cs"];
m2_54 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="DiscriminatedUnionConverter.cs"];
m2_92 [label="Entry System.Reflection.Assembly.GetType(string)", span="0-0", cluster="System.Reflection.Assembly.GetType(string)", file="DiscriminatedUnionConverter.cs"];
m2_49 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="DiscriminatedUnionConverter.cs"];
m2_48 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", span="208-208", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="DiscriminatedUnionConverter.cs"];
m2_103 [label="!reader.Read()", span="210-210", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="DiscriminatedUnionConverter.cs"];
m2_104 [label="throw new JsonSerializationException(''Unexpected end.'');", span="211-211", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="DiscriminatedUnionConverter.cs"];
m2_105 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", span="208-208", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="DiscriminatedUnionConverter.cs"];
m2_20 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="DiscriminatedUnionConverter.cs"];
m2_50 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="DiscriminatedUnionConverter.cs"];
m2_22 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="DiscriminatedUnionConverter.cs"];
m2_19 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="DiscriminatedUnionConverter.cs"];
m2_55 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="DiscriminatedUnionConverter.cs"];
m2_94 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="64-64", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="DiscriminatedUnionConverter.cs"];
m2_23 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="88-88", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_24 [label="reader.TokenType == JsonToken.Null", span="90-90", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_26 [label="IEnumerable cases = (IEnumerable)_getUnionCases(null, objectType, null)", span="93-93", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_27 [label="ReadAndAssertProperty(reader, CasePropertyName)", span="95-95", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_28 [label="ReadAndAssert(reader)", span="96-96", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_29 [label="string caseName = reader.Value.ToString()", span="98-98", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_36 [label="ReadAndAssertProperty(reader, FieldsPropertyName)", span="113-113", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_37 [label="ReadAndAssert(reader)", span="115-115", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_38 [label="ReadAndAssert(reader)", span="117-117", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_42 [label="fieldValues.Add(serializer.Deserialize(reader, field.PropertyType))", span="123-123", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_43 [label="ReadAndAssert(reader)", span="124-124", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_44 [label="ReadAndAssert(reader)", span="128-128", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_25 [label="return null;", span="91-91", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_31 [label=cases, span="101-101", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_30 [label="object matchingCaseInfo = null", span="100-100", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_32 [label="(string)_getUnionCaseInfoName(c) == caseName", span="103-103", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_35 [label="throw new JsonSerializationException(''No union type found with the name '{0}'.''.FormatWith(CultureInfo.InvariantCulture, caseName));", span="111-111", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_34 [label="matchingCaseInfo == null", span="110-110", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_39 [label="PropertyInfo[] fieldProperties = (PropertyInfo[])_getUnionCaseInfoFields(matchingCaseInfo)", span="119-119", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_45 [label="return _makeUnion(null, matchingCaseInfo, fieldValues.ToArray(), null);", span="130-130", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_33 [label="matchingCaseInfo = c", span="105-105", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_40 [label="List<object> fieldValues = new List<object>()", span="120-120", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_41 [label=fieldProperties, span="121-121", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_46 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="88-88", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m2_47 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssertProperty(Newtonsoft.Json.JsonReader, string)", span="200-200", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssertProperty(Newtonsoft.Json.JsonReader, string)", file="DiscriminatedUnionConverter.cs"];
m2_98 [label="ReadAndAssert(reader)", span="202-202", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssertProperty(Newtonsoft.Json.JsonReader, string)", file="DiscriminatedUnionConverter.cs"];
m2_99 [label="reader.TokenType != JsonToken.PropertyName || !string.Equals(reader.Value.ToString(), propertyName, StringComparison.OrdinalIgnoreCase)", span="204-204", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssertProperty(Newtonsoft.Json.JsonReader, string)", file="DiscriminatedUnionConverter.cs"];
m2_100 [label="throw new JsonSerializationException(''Expected JSON property '{0}'.''.FormatWith(CultureInfo.InvariantCulture, propertyName));", span="205-205", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssertProperty(Newtonsoft.Json.JsonReader, string)", file="DiscriminatedUnionConverter.cs"];
m2_101 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssertProperty(Newtonsoft.Json.JsonReader, string)", span="200-200", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssertProperty(Newtonsoft.Json.JsonReader, string)", file="DiscriminatedUnionConverter.cs"];
m2_70 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_95 [label="Entry System.Type.GetProperty(string)", span="0-0", cluster="System.Type.GetProperty(string)", file="DiscriminatedUnionConverter.cs"];
m2_14 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DiscriminatedUnionConverter.cs"];
m2_53 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="650-650", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="DiscriminatedUnionConverter.cs"];
m2_17 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="DiscriminatedUnionConverter.cs"];
m2_51 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="DiscriminatedUnionConverter.cs"];
m4_99 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", span="193-193", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m4_100 [label="JObject o = new JObject()", span="195-195", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m4_101 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="196-196", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m4_102 [label="Assert.AreEqual(1, o.Children().Count())", span="197-197", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m4_103 [label="JProperty p = (JProperty)o.Children().ElementAt(0)", span="199-199", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m4_104 [label="((ICollection<KeyValuePair<string, JToken>>)o).Clear()", span="201-201", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m4_105 [label="Assert.AreEqual(0, o.Children().Count())", span="202-202", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m4_106 [label="Assert.AreEqual(null, p.Parent)", span="204-204", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m4_107 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", span="193-193", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionClear()", file="JObjectTests.cs"];
m4_727 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIsReadOnly()", span="1205-1205", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIsReadOnly()", file="JObjectTests.cs"];
m4_728 [label="IList<JToken> l = new JObject()", span="1207-1207", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIsReadOnly()", file="JObjectTests.cs"];
m4_729 [label="Assert.IsFalse(l.IsReadOnly)", span="1208-1208", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIsReadOnly()", file="JObjectTests.cs"];
m4_730 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIsReadOnly()", span="1205-1205", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIsReadOnly()", file="JObjectTests.cs"];
m4_135 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", span="243-243", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_136 [label="JObject o = new JObject()", span="245-245", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_137 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="246-246", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_138 [label="o.Add(''PropertyNameValue2'', new JValue(2))", span="247-247", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_139 [label="o.Add(''PropertyNameValue3'', new JValue(3))", span="248-248", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_140 [label="Assert.AreEqual(3, o.Children().Count())", span="249-249", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_142 [label="((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(a, 1)", span="253-253", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_141 [label="KeyValuePair<string, JToken>[] a = new KeyValuePair<string, JToken>[5]", span="251-251", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_143 [label="Assert.AreEqual(default(KeyValuePair<string, JToken>), a[0])", span="255-255", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_144 [label="Assert.AreEqual(''PropertyNameValue'', a[1].Key)", span="257-257", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_145 [label="Assert.AreEqual(1, (int)a[1].Value)", span="258-258", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_146 [label="Assert.AreEqual(''PropertyNameValue2'', a[2].Key)", span="260-260", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_147 [label="Assert.AreEqual(2, (int)a[2].Value)", span="261-261", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_148 [label="Assert.AreEqual(''PropertyNameValue3'', a[3].Key)", span="263-263", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_149 [label="Assert.AreEqual(3, (int)a[3].Value)", span="264-264", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_150 [label="Assert.AreEqual(default(KeyValuePair<string, JToken>), a[4])", span="266-266", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_151 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", span="243-243", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyTo()", file="JObjectTests.cs"];
m4_1045 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JObjectTests.cs"];
m4_1140 [label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0", cluster="System.NotSupportedException.NotSupportedException(string)", file="JObjectTests.cs"];
m4_1067 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="81-81", cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JObjectTests.cs"];
m4_1001 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", span="1694-1694", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_1002 [label="JObject o = JObject.Parse(''{'prop1':12,'prop2':'hi!'}'')", span="1696-1696", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", color=red, community=0, file="JObjectTests.cs"];
m4_1003 [label="ICustomTypeDescriptor descriptor = o", span="1698-1698", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_1010 [label="Assert.AreEqual(false, prop1.CanResetValue(o))", span="1707-1707", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_1011 [label="Assert.AreEqual(false, prop1.ShouldSerializeValue(o))", span="1708-1708", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_1016 [label="Assert.AreEqual(false, prop2.CanResetValue(o))", span="1714-1714", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_1017 [label="Assert.AreEqual(false, prop2.ShouldSerializeValue(o))", span="1715-1715", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_1004 [label="PropertyDescriptorCollection properties = descriptor.GetProperties()", span="1700-1700", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_1005 [label="Assert.AreEqual(2, properties.Count)", span="1701-1701", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", color=red, community=0, file="JObjectTests.cs"];
m4_1006 [label="PropertyDescriptor prop1 = properties[0]", span="1703-1703", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_1012 [label="PropertyDescriptor prop2 = properties[1]", span="1710-1710", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_1007 [label="Assert.AreEqual(''prop1'', prop1.Name)", span="1704-1704", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_1008 [label="Assert.AreEqual(typeof(object), prop1.PropertyType)", span="1705-1705", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_1009 [label="Assert.AreEqual(typeof(JObject), prop1.ComponentType)", span="1706-1706", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_1013 [label="Assert.AreEqual(''prop2'', prop2.Name)", span="1711-1711", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_1014 [label="Assert.AreEqual(typeof(object), prop2.PropertyType)", span="1712-1712", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_1015 [label="Assert.AreEqual(typeof(JObject), prop2.ComponentType)", span="1713-1713", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_1018 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", span="1694-1694", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetProperties()", file="JObjectTests.cs"];
m4_775 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowNew()", span="1287-1287", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowNew()", file="JObjectTests.cs"];
m4_776 [label="IBindingList l = new JObject()", span="1289-1289", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowNew()", file="JObjectTests.cs"];
m4_777 [label="Assert.AreEqual(true, l.AllowNew)", span="1290-1290", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowNew()", file="JObjectTests.cs"];
m4_778 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowNew()", span="1287-1287", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowNew()", file="JObjectTests.cs"];
m4_856 [label="Entry System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])", span="0-0", cluster="System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])", file="JObjectTests.cs"];
m4_1150 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JObjectTests.cs"];
m4_160 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNegativeArrayIndexShouldThrow()", span="283-283", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNegativeArrayIndexShouldThrow()", file="JObjectTests.cs"];
m4_161 [label="ExceptionAssert.Throws<ArgumentOutOfRangeException>(\r\n                @''arrayIndex is less than 0.\r\nParameter name: arrayIndex'',\r\n                () =>\r\n                {\r\n                    JObject o = new JObject();\r\n                    ((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[1], -1);\r\n                })", span="285-292", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNegativeArrayIndexShouldThrow()", file="JObjectTests.cs"];
m4_162 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNegativeArrayIndexShouldThrow()", span="283-283", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNegativeArrayIndexShouldThrow()", file="JObjectTests.cs"];
m4_273 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", span="466-466", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m4_274 [label="JObject o = new JObject()", span="468-468", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m4_275 [label="o.Add(''PropertyNameValue1'', new JValue(1))", span="469-469", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m4_276 [label="o.Add(''PropertyNameValue2'', new JValue(2))", span="470-470", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m4_277 [label="JToken t = o", span="472-472", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m4_278 [label="int i = 1", span="474-474", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m4_279 [label=t, span="475-475", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m4_280 [label="Assert.AreEqual(''PropertyNameValue'' + i, property.Name)", span="477-477", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m4_281 [label="Assert.AreEqual(i, (int)property.Value)", span="478-478", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m4_282 [label="i++", span="480-480", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m4_283 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", span="466-466", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="JObjectTests.cs"];
m4_570 [label="Entry System.Collections.IList.Insert(int, object)", span="0-0", cluster="System.Collections.IList.Insert(int, object)", file="JObjectTests.cs"];
m4_857 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JObjectTests.cs"];
m4_219 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JObjectTests.cs"];
m4_635 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", span="1059-1059", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", file="JObjectTests.cs"];
m4_636 [label="JProperty p = new JProperty(''Test'', 1)", span="1061-1061", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", file="JObjectTests.cs"];
m4_637 [label="IList<JToken> l = new JObject(p)", span="1062-1062", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", file="JObjectTests.cs"];
m4_638 [label="Assert.AreEqual(1, l.Count)", span="1064-1064", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", file="JObjectTests.cs"];
m4_639 [label="l.Clear()", span="1066-1066", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", file="JObjectTests.cs"];
m4_640 [label="Assert.AreEqual(0, l.Count)", span="1068-1068", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", file="JObjectTests.cs"];
m4_641 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", span="1059-1059", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenClear()", file="JObjectTests.cs"];
m4_240 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="326-326", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JObjectTests.cs"];
m4_688 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", span="1147-1147", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_689 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1149-1149", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_690 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1150-1150", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_691 [label="IList<JToken> l = new JObject(p1, p2)", span="1151-1151", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_695 [label="Assert.IsTrue(l.Remove(p1))", span="1159-1159", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_697 [label="Assert.IsFalse(l.Contains(p1))", span="1161-1161", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_698 [label="Assert.IsTrue(l.Contains(p2))", span="1162-1162", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_699 [label="Assert.IsTrue(l.Remove(p2))", span="1164-1164", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_701 [label="Assert.IsFalse(l.Contains(p2))", span="1166-1166", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_702 [label="Assert.AreEqual(null, p2.Parent)", span="1167-1167", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_692 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1153-1153", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_693 [label="Assert.IsFalse(l.Remove(p3))", span="1156-1156", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_694 [label="Assert.AreEqual(2, l.Count)", span="1157-1157", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_696 [label="Assert.AreEqual(1, l.Count)", span="1160-1160", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_700 [label="Assert.AreEqual(0, l.Count)", span="1165-1165", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_703 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", span="1147-1147", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemove()", file="JObjectTests.cs"];
m4_1132 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JObjectTests.cs"];
m4_914 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", span="1487-1487", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", file="JObjectTests.cs"];
m4_915 [label="string json = @''{\r\n  ''''name'''': ''''Address: 435 North Mulford Road Rockford, IL 61107'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [ {\r\n    ''''id'''': ''''p1'''',\r\n    ''''address'''': ''''435 N Mulford Rd, Rockford, IL 61107, USA'''',\r\n    ''''AddressDetails'''': {\r\n   ''''Accuracy'''' : 8,\r\n   ''''Country'''' : {\r\n      ''''AdministrativeArea'''' : {\r\n         ''''AdministrativeAreaName'''' : ''''IL'''',\r\n         ''''SubAdministrativeArea'''' : {\r\n            ''''Locality'''' : {\r\n               ''''LocalityName'''' : ''''Rockford'''',\r\n               ''''PostalCode'''' : {\r\n                  ''''PostalCodeNumber'''' : ''''61107''''\r\n               },\r\n               ''''Thoroughfare'''' : {\r\n                  ''''ThoroughfareName'''' : ''''435 N Mulford Rd''''\r\n               }\r\n            },\r\n            ''''SubAdministrativeAreaName'''' : ''''Winnebago''''\r\n         }\r\n      },\r\n      ''''CountryName'''' : ''''USA'''',\r\n      ''''CountryNameCode'''' : ''''US''''\r\n   }\r\n},\r\n    ''''ExtendedData'''': {\r\n      ''''LatLonBox'''': {\r\n        ''''north'''': 42.2753076,\r\n        ''''south'''': 42.2690124,\r\n        ''''east'''': -88.9964645,\r\n        ''''west'''': -89.0027597\r\n      }\r\n    },\r\n    ''''Point'''': {\r\n      ''''coordinates'''': [ -88.9995886, 42.2721596, 0 ]\r\n    }\r\n  } ]\r\n}''", span="1489-1532", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", file="JObjectTests.cs"];
m4_916 [label="JObject o = JObject.Parse(json)", span="1534-1534", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", file="JObjectTests.cs"];
m4_917 [label="string searchAddress = (string)o[''Placemark''][0][''AddressDetails''][''Country''][''AdministrativeArea''][''SubAdministrativeArea''][''Locality''][''Thoroughfare''][''ThoroughfareName'']", span="1536-1536", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", file="JObjectTests.cs"];
m4_918 [label="Assert.AreEqual(''435 N Mulford Rd'', searchAddress)", span="1537-1537", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", file="JObjectTests.cs"];
m4_919 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", span="1487-1487", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetGeocodeAddress()", file="JObjectTests.cs"];
m4_127 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", span="232-232", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", file="JObjectTests.cs"];
m4_128 [label="JObject o = new JObject()", span="234-234", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", file="JObjectTests.cs"];
m4_129 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="235-235", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", file="JObjectTests.cs"];
m4_130 [label="Assert.AreEqual(1, o.Children().Count())", span="236-236", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", file="JObjectTests.cs"];
m4_131 [label="bool contains = ((IDictionary<string, JToken>)o).ContainsKey(''PropertyNameValue'')", span="238-238", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", file="JObjectTests.cs"];
m4_132 [label="Assert.AreEqual(true, contains)", span="239-239", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", file="JObjectTests.cs"];
m4_133 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", span="232-232", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryContains()", file="JObjectTests.cs"];
m4_751 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortDirection()", span="1245-1245", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortDirection()", file="JObjectTests.cs"];
m4_752 [label="IBindingList l = new JObject()", span="1247-1247", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortDirection()", file="JObjectTests.cs"];
m4_753 [label="Assert.AreEqual(ListSortDirection.Ascending, l.SortDirection)", span="1248-1248", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortDirection()", file="JObjectTests.cs"];
m4_754 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortDirection()", span="1245-1245", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortDirection()", file="JObjectTests.cs"];
m4_704 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", span="1171-1171", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m4_705 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1173-1173", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m4_706 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1174-1174", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m4_707 [label="IList<JToken> l = new JObject(p1, p2)", span="1175-1175", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m4_709 [label="l.Remove(p1)", span="1180-1180", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m4_711 [label="l.Remove(p2)", span="1183-1183", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m4_708 [label="l.RemoveAt(0)", span="1178-1178", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m4_710 [label="Assert.AreEqual(1, l.Count)", span="1181-1181", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m4_712 [label="Assert.AreEqual(0, l.Count)", span="1184-1184", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m4_713 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", span="1171-1171", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenRemoveAt()", file="JObjectTests.cs"];
m4_259 [label="Entry Newtonsoft.Json.Linq.JToken.Value<T>(object)", span="305-305", cluster="Newtonsoft.Json.Linq.JToken.Value<T>(object)", file="JObjectTests.cs"];
m4_327 [label="Entry Newtonsoft.Json.Tests.TestObjects.Shortie.Shortie()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Shortie.Shortie()", file="JObjectTests.cs"];
m4_558 [label="Entry System.Collections.IList.RemoveAt(int)", span="0-0", cluster="System.Collections.IList.RemoveAt(int)", file="JObjectTests.cs"];
m4_795 [label="Entry System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor, System.ComponentModel.ListSortDirection)", span="0-0", cluster="System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor, System.ComponentModel.ListSortDirection)", file="JObjectTests.cs"];
m4_35 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", span="102-102", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_36 [label="JObject o = new JObject()", span="104-104", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_37 [label="o[''PropertyNameValue''] = new JValue(1)", span="105-105", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_38 [label="Assert.AreEqual(1, o.Children().Count())", span="106-106", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_40 [label="Assert.AreEqual(true, o.TryGetValue(''PropertyNameValue'', out t))", span="109-109", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_42 [label="o[''PropertyNameValue''] = new JValue(2)", span="112-112", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_43 [label="Assert.AreEqual(1, o.Children().Count())", span="113-113", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_44 [label="Assert.AreEqual(true, o.TryGetValue(''PropertyNameValue'', out t))", span="115-115", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_46 [label="o[''PropertyNameValue''] = null", span="118-118", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_47 [label="Assert.AreEqual(1, o.Children().Count())", span="119-119", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_48 [label="Assert.AreEqual(true, o.TryGetValue(''PropertyNameValue'', out t))", span="121-121", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_39 [label="JToken t", span="108-108", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_41 [label="Assert.AreEqual(true, JToken.DeepEquals(new JValue(1), t))", span="110-110", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_45 [label="Assert.AreEqual(true, JToken.DeepEquals(new JValue(2), t))", span="116-116", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_49 [label="Assert.AreEqual(true, JToken.DeepEquals(new JValue((object)null), t))", span="122-122", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_50 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", span="102-102", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="JObjectTests.cs"];
m4_352 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="116-116", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JObjectTests.cs"];
m4_17 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", span="84-84", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m4_18 [label="JObject o = new JObject()", span="86-86", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m4_19 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="87-87", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m4_20 [label="Assert.AreEqual(1, o.Children().Count())", span="88-88", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m4_22 [label="Assert.AreEqual(false, o.TryGetValue(''sdf'', out t))", span="91-91", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m4_24 [label="Assert.AreEqual(false, o.TryGetValue(null, out t))", span="94-94", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m4_26 [label="Assert.AreEqual(true, o.TryGetValue(''PropertyNameValue'', out t))", span="97-97", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m4_21 [label="JToken t", span="90-90", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m4_23 [label="Assert.AreEqual(null, t)", span="92-92", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m4_25 [label="Assert.AreEqual(null, t)", span="95-95", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m4_27 [label="Assert.AreEqual(true, JToken.DeepEquals(new JValue(1), t))", span="98-98", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m4_28 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", span="84-84", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="JObjectTests.cs"];
m4_109 [label="Entry System.Collections.Generic.ICollection<T>.Clear()", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Clear()", file="JObjectTests.cs"];
m4_377 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="105-105", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JObjectTests.cs"];
m4_571 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsReadOnly()", span="957-957", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsReadOnly()", file="JObjectTests.cs"];
m4_572 [label="IList l = new JObject()", span="959-959", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsReadOnly()", file="JObjectTests.cs"];
m4_573 [label="Assert.IsFalse(l.IsReadOnly)", span="960-960", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsReadOnly()", file="JObjectTests.cs"];
m4_574 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsReadOnly()", span="957-957", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsReadOnly()", file="JObjectTests.cs"];
m4_678 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddPropertyWithExistingName()", span="1131-1131", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddPropertyWithExistingName()", file="JObjectTests.cs"];
m4_679 [label="ExceptionAssert.Throws<ArgumentException>(''Can not add property Test2 to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList<JToken> l = new JObject(p1, p2);\r\n\r\n                    JProperty p3 = new JProperty(''Test2'', ''II'');\r\n\r\n                    l.Add(p3);\r\n                })", span="1133-1143", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddPropertyWithExistingName()", file="JObjectTests.cs"];
m4_680 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddPropertyWithExistingName()", span="1131-1131", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddPropertyWithExistingName()", file="JObjectTests.cs"];
m4_466 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="114-114", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JObjectTests.cs"];
m4_1021 [label="Entry System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(object)", span="0-0", cluster="System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(object)", file="JObjectTests.cs"];
m4_1039 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JObjectTests.cs"];
m4_575 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsFixedSize()", span="964-964", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsFixedSize()", file="JObjectTests.cs"];
m4_576 [label="IList l = new JObject()", span="966-966", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsFixedSize()", file="JObjectTests.cs"];
m4_577 [label="Assert.IsFalse(l.IsFixedSize)", span="967-967", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsFixedSize()", file="JObjectTests.cs"];
m4_578 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsFixedSize()", span="964-964", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsFixedSize()", file="JObjectTests.cs"];
m4_193 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JObjectTests.cs"];
m4_232 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="650-650", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JObjectTests.cs"];
m4_1022 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ParseEmptyObjectWithComment()", span="1720-1720", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseEmptyObjectWithComment()", file="JObjectTests.cs"];
m4_1023 [label="JObject o = JObject.Parse(''{ /* A Comment */ }'')", span="1722-1722", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseEmptyObjectWithComment()", file="JObjectTests.cs"];
m4_1024 [label="Assert.AreEqual(0, o.Count)", span="1723-1723", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseEmptyObjectWithComment()", file="JObjectTests.cs"];
m4_1025 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ParseEmptyObjectWithComment()", span="1720-1720", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseEmptyObjectWithComment()", file="JObjectTests.cs"];
m4_804 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveIndex()", span="1333-1333", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveIndex()", file="JObjectTests.cs"];
m4_805 [label="IBindingList l = new JObject()", span="1335-1335", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveIndex()", file="JObjectTests.cs"];
m4_806 [label="l.RemoveIndex(null)", span="1337-1337", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveIndex()", file="JObjectTests.cs"];
m4_807 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveIndex()", span="1333-1333", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveIndex()", file="JObjectTests.cs"];
m4_599 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemInvalid()", span="1004-1004", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemInvalid()", file="JObjectTests.cs"];
m4_600 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                @''Can not add Newtonsoft.Json.Linq.JValue to Newtonsoft.Json.Linq.JObject.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList l = new JObject(p1, p2);\r\n\r\n                    l[0] = new JValue(true);\r\n                })", span="1006-1015", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemInvalid()", file="JObjectTests.cs"];
m4_601 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemInvalid()", span="1004-1004", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemInvalid()", file="JObjectTests.cs"];
m4_759 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsChangeNotification()", span="1259-1259", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsChangeNotification()", file="JObjectTests.cs"];
m4_760 [label="IBindingList l = new JObject()", span="1261-1261", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsChangeNotification()", file="JObjectTests.cs"];
m4_761 [label="Assert.AreEqual(true, l.SupportsChangeNotification)", span="1262-1262", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsChangeNotification()", file="JObjectTests.cs"];
m4_762 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsChangeNotification()", span="1259-1259", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsChangeNotification()", file="JObjectTests.cs"];
m4_642 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", span="1072-1072", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m4_643 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1074-1074", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m4_644 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1075-1075", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m4_645 [label="IList<JToken> l = new JObject(p1, p2)", span="1076-1076", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m4_648 [label="Assert.AreEqual(p1, a[0])", span="1082-1082", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m4_649 [label="Assert.AreEqual(p2, a[1])", span="1083-1083", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m4_646 [label="JToken[] a = new JToken[l.Count]", span="1078-1078", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m4_647 [label="l.CopyTo(a, 0)", span="1080-1080", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m4_650 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", span="1072-1072", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenCopyTo()", file="JObjectTests.cs"];
m4_939 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", span="1578-1578", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m4_940 [label="DBNull dbNull = DBNull.Value", span="1580-1580", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m4_941 [label="JValue v = new JValue(dbNull)", span="1581-1581", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m4_942 [label="Assert.AreEqual(DBNull.Value, v.Value)", span="1582-1582", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m4_943 [label="Assert.AreEqual(JTokenType.Null, v.Type)", span="1583-1583", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m4_945 [label="o[''title''] = v", span="1586-1586", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m4_944 [label="JObject o = new JObject()", span="1585-1585", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m4_946 [label="string output = o.ToString()", span="1588-1588", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m4_947 [label="Assert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="1590-1592", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m4_948 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", span="1578-1578", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullDBNullValue()", file="JObjectTests.cs"];
m4_1151 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="347-347", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JObjectTests.cs"];
m4_30 [label="Entry Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", span="443-443", cluster="Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", file="JObjectTests.cs"];
m4_5 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JObjectTests.cs"];
m4_247 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="687-687", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JObjectTests.cs"];
m4_988 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObjectIncomplete()", span="1669-1669", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObjectIncomplete()", file="JObjectTests.cs"];
m4_989 [label="ExceptionAssert.Throws<JsonReaderException>(''Unexpected end of content while loading JObject. Path 'short.error.code', line 6, position 15.'',\r\n                () =>\r\n                {\r\n                    string jsonText = @''{\r\n  ''''short'''':\r\n  {\r\n    ''''error'''':\r\n    {\r\n      ''''code'''':0'';\r\n\r\n                    JsonReader reader = new JsonTextReader(new StringReader(jsonText));\r\n                    reader.Read();\r\n                    reader.Read();\r\n                    reader.Read();\r\n                    reader.Read();\r\n                    reader.Read();\r\n\r\n                    JToken.ReadFrom(reader);\r\n                })", span="1671-1689", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObjectIncomplete()", file="JObjectTests.cs"];
m4_990 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObjectIncomplete()", span="1669-1669", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObjectIncomplete()", file="JObjectTests.cs"];
m4_84 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", span="169-169", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m4_85 [label="JObject o = new JObject()", span="171-171", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m4_86 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="173-173", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m4_87 [label="Assert.AreEqual(1, (int)o[''PropertyNameValue''])", span="174-174", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m4_88 [label="o.Add(''PropertyNameValue1'', null)", span="176-176", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m4_89 [label="Assert.AreEqual(null, ((JValue)o[''PropertyNameValue1'']).Value)", span="177-177", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m4_90 [label="Assert.AreEqual(2, o.Children().Count())", span="179-179", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m4_91 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", span="169-169", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="JObjectTests.cs"];
m4_32 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JObjectTests.cs"];
m4_1069 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", span="1825-1825", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m4_1070 [label="JObject o = JObject.Parse(@''{}'')", span="1827-1827", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m4_1071 [label="IList<JToken> l1 = o.ToList<JToken>()", span="1828-1828", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m4_1073 [label="IList<KeyValuePair<string, JToken>> l2 = o.ToList<KeyValuePair<string, JToken>>()", span="1831-1831", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m4_1072 [label="Assert.AreEqual(0, l1.Count)", span="1829-1829", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m4_1074 [label="Assert.AreEqual(0, l2.Count)", span="1832-1832", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m4_1075 [label="o = JObject.Parse(@''{'hi':null}'')", span="1834-1834", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m4_1076 [label="l1 = o.ToList<JToken>()", span="1836-1836", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m4_1078 [label="l2 = o.ToList<KeyValuePair<string, JToken>>()", span="1839-1839", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m4_1077 [label="Assert.AreEqual(1, l1.Count)", span="1837-1837", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m4_1079 [label="Assert.AreEqual(1, l2.Count)", span="1840-1840", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m4_1080 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", span="1825-1825", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ToListOnEmptyObject()", file="JObjectTests.cs"];
m4_849 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", span="1397-1397", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", file="JObjectTests.cs"];
m4_850 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1399-1399", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", file="JObjectTests.cs"];
m4_851 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1400-1400", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", file="JObjectTests.cs"];
m4_852 [label="ITypedList l = new JObject(p1, p2)", span="1401-1401", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", file="JObjectTests.cs"];
m4_853 [label="PropertyDescriptorCollection propertyDescriptors = l.GetItemProperties(null)", span="1403-1403", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", file="JObjectTests.cs"];
m4_854 [label="Assert.IsNull(propertyDescriptors)", span="1404-1404", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", file="JObjectTests.cs"];
m4_855 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", span="1397-1397", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetItemProperties()", file="JObjectTests.cs"];
m4_126 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JObjectTests.cs"];
m4_380 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", span="688-688", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_381 [label="object changing = null", span="690-690", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_382 [label="object changed = null", span="691-691", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_383 [label="int changingCount = 0", span="692-692", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_384 [label="int changedCount = 0", span="693-693", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_386 [label="o.PropertyChanging += (sender, args) =>\r\n            {\r\n                JObject s = (JObject)sender;\r\n                changing = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null;\r\n                changingCount++;\r\n            }", span="696-701", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_385 [label="JObject o = new JObject()", span="695-695", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_387 [label="o.PropertyChanged += (sender, args) =>\r\n            {\r\n                JObject s = (JObject)sender;\r\n                changed = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null;\r\n                changedCount++;\r\n            }", span="702-707", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_388 [label="o[''StringValue''] = ''value1''", span="709-709", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_391 [label="Assert.AreEqual(''value1'', (string)o[''StringValue''])", span="712-712", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_394 [label="o[''StringValue''] = ''value1''", span="716-716", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_397 [label="o[''StringValue''] = ''value2''", span="720-720", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_400 [label="Assert.AreEqual(''value2'', (string)o[''StringValue''])", span="723-723", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_403 [label="o[''StringValue''] = null", span="727-727", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_406 [label="Assert.AreEqual(null, (string)o[''StringValue''])", span="730-730", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_409 [label="o[''NullValue''] = null", span="734-734", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_412 [label="Assert.AreEqual(new JValue((object)null), o[''NullValue''])", span="737-737", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_415 [label="o[''NullValue''] = null", span="741-741", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_389 [label="Assert.AreEqual(null, changing)", span="710-710", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_390 [label="Assert.AreEqual(''value1'', changed)", span="711-711", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_392 [label="Assert.AreEqual(1, changingCount)", span="713-713", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_393 [label="Assert.AreEqual(1, changedCount)", span="714-714", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_395 [label="Assert.AreEqual(1, changingCount)", span="717-717", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_396 [label="Assert.AreEqual(1, changedCount)", span="718-718", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_398 [label="Assert.AreEqual(''value1'', changing)", span="721-721", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_399 [label="Assert.AreEqual(''value2'', changed)", span="722-722", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_401 [label="Assert.AreEqual(2, changingCount)", span="724-724", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_402 [label="Assert.AreEqual(2, changedCount)", span="725-725", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_404 [label="Assert.AreEqual(''value2'', changing)", span="728-728", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_405 [label="Assert.AreEqual(null, changed)", span="729-729", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_407 [label="Assert.AreEqual(3, changingCount)", span="731-731", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_408 [label="Assert.AreEqual(3, changedCount)", span="732-732", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_410 [label="Assert.AreEqual(null, changing)", span="735-735", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_411 [label="Assert.AreEqual(null, changed)", span="736-736", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_413 [label="Assert.AreEqual(4, changingCount)", span="738-738", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_414 [label="Assert.AreEqual(4, changedCount)", span="739-739", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_416 [label="Assert.AreEqual(4, changingCount)", span="742-742", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_417 [label="Assert.AreEqual(4, changedCount)", span="743-743", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_418 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", span="688-688", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="JObjectTests.cs"];
m4_787 [label="Entry System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)", span="0-0", cluster="System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)", file="JObjectTests.cs"];
m4_241 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", span="415-415", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", file="JObjectTests.cs"];
m4_242 [label="string json = @''[new Date(1207285200000)]''", span="417-417", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", file="JObjectTests.cs"];
m4_243 [label="JArray a = (JArray)JsonConvert.DeserializeObject(json)", span="419-419", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", file="JObjectTests.cs"];
m4_244 [label="JValue v = (JValue)a[0]", span="420-420", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", file="JObjectTests.cs"];
m4_245 [label="Assert.AreEqual(DateTimeUtils.ConvertJavaScriptTicksToDateTime(1207285200000), (DateTime)v)", span="422-422", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", file="JObjectTests.cs"];
m4_246 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", span="415-415", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", file="JObjectTests.cs"];
m4_61 [label="Entry Newtonsoft.Json.Linq.JObject.Remove(string)", span="464-464", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObjectTests.cs"];
m4_1082 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", span="1844-1844", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m4_1083 [label="Assert.IsTrue(JToken.DeepEquals(new JObject(), new JObject()))", span="1846-1846", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m4_1084 [label="JObject a = new JObject()", span="1848-1848", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m4_1085 [label="JObject b = new JObject()", span="1849-1849", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m4_1088 [label="Assert.IsTrue(JToken.DeepEquals(a, b))", span="1854-1854", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m4_1089 [label="Assert.IsTrue(JToken.DeepEquals(b, a))", span="1855-1855", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m4_1086 [label="b.Add(''hi'', ''bye'')", span="1851-1851", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m4_1087 [label="b.Remove(''hi'')", span="1852-1852", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m4_1090 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", span="1844-1844", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmptyObjectDeepEquals()", file="JObjectTests.cs"];
m4_167 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow()", span="296-296", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow()", file="JObjectTests.cs"];
m4_168 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                @''arrayIndex is equal to or greater than the length of array.'',\r\n                () =>\r\n                {\r\n                    JObject o = new JObject();\r\n                    ((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[1], 1);\r\n                })", span="298-304", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow()", file="JObjectTests.cs"];
m4_169 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow()", span="296-296", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow()", file="JObjectTests.cs"];
m4_669 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadValue()", span="1116-1116", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadValue()", file="JObjectTests.cs"];
m4_670 [label="ExceptionAssert.Throws<ArgumentException>(''Can not add Newtonsoft.Json.Linq.JValue to Newtonsoft.Json.Linq.JObject.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList<JToken> l = new JObject(p1, p2);\r\n\r\n                    // string is implicitly converted to JValue\r\n                    l.Add(''Bad!'');\r\n                })", span="1118-1127", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadValue()", file="JObjectTests.cs"];
m4_671 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadValue()", span="1116-1116", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadValue()", file="JObjectTests.cs"];
m4_726 [label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0", cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="JObjectTests.cs"];
m4_927 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", span="1552-1552", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", file="JObjectTests.cs"];
m4_928 [label="object key = ''TestKey''", span="1554-1554", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", file="JObjectTests.cs"];
m4_929 [label="JObject o = new JObject()", span="1556-1556", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", file="JObjectTests.cs"];
m4_930 [label="o[key] = new JValue(3)", span="1557-1557", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", file="JObjectTests.cs"];
m4_931 [label="Assert.AreEqual(3, (int)o[key])", span="1559-1559", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", file="JObjectTests.cs"];
m4_932 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", span="1552-1552", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValue()", file="JObjectTests.cs"];
m4_779 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowRemove()", span="1294-1294", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowRemove()", file="JObjectTests.cs"];
m4_780 [label="IBindingList l = new JObject()", span="1296-1296", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowRemove()", file="JObjectTests.cs"];
m4_781 [label="Assert.AreEqual(true, l.AllowRemove)", span="1297-1297", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowRemove()", file="JObjectTests.cs"];
m4_782 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowRemove()", span="1294-1294", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowRemove()", file="JObjectTests.cs"];
m4_220 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JObjectTests.cs"];
m4_74 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JObjectTests.cs"];
m4_376 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="192-192", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JObjectTests.cs"];
m4_6 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="169-169", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JObjectTests.cs"];
m4_284 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", span="485-485", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m4_285 [label="JObject o = new JObject()", span="487-487", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m4_286 [label="o.Add(''PropertyNameValue1'', new JValue(1))", span="488-488", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m4_287 [label="o.Add(''PropertyNameValue2'', new JValue(2))", span="489-489", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m4_289 [label=o, span="492-492", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m4_288 [label="int i = 1", span="491-491", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m4_290 [label="Assert.AreEqual(''PropertyNameValue'' + i, pair.Key)", span="494-494", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m4_291 [label="Assert.AreEqual(i, (int)pair.Value)", span="495-495", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m4_292 [label="i++", span="497-497", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m4_293 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", span="485-485", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="JObjectTests.cs"];
m4_763 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSearching()", span="1266-1266", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSearching()", file="JObjectTests.cs"];
m4_764 [label="IBindingList l = new JObject()", span="1268-1268", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSearching()", file="JObjectTests.cs"];
m4_765 [label="Assert.AreEqual(false, l.SupportsSearching)", span="1269-1269", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSearching()", file="JObjectTests.cs"];
m4_766 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSearching()", span="1266-1266", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSearching()", file="JObjectTests.cs"];
m4_803 [label="Entry System.ComponentModel.IBindingList.RemoveSort()", span="0-0", cluster="System.ComponentModel.IBindingList.RemoveSort()", file="JObjectTests.cs"];
m4_1137 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1926-1926", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m4_1138 [label="throw new NotSupportedException(''This custom converter only supportes serialization and not deserialization.'');", span="1928-1928", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m4_1139 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1926-1926", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m4_493 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", span="837-837", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m4_494 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="839-839", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m4_495 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="840-840", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m4_496 [label="IList l = new JObject(p1, p2)", span="841-841", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m4_497 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="843-843", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m4_498 [label="l.Add(p3)", span="845-845", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m4_499 [label="Assert.AreEqual(3, l.Count)", span="847-847", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m4_500 [label="Assert.AreEqual(p3, l[2])", span="848-848", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m4_501 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", span="837-837", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAdd()", file="JObjectTests.cs"];
m4_1123 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="431-431", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JObjectTests.cs"];
m4_987 [label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="406-406", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JObjectTests.cs"];
m4_616 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", span="1029-1029", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", file="JObjectTests.cs"];
m4_617 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1031-1031", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", file="JObjectTests.cs"];
m4_618 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1032-1032", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", file="JObjectTests.cs"];
m4_619 [label="IList l = new JObject(p1, p2)", span="1033-1033", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", file="JObjectTests.cs"];
m4_620 [label="Assert.IsFalse(l.IsSynchronized)", span="1035-1035", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", file="JObjectTests.cs"];
m4_621 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", span="1029-1029", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIsSynchronized()", file="JObjectTests.cs"];
m4_842 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", span="1387-1387", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", file="JObjectTests.cs"];
m4_843 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1389-1389", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", file="JObjectTests.cs"];
m4_844 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1390-1390", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", file="JObjectTests.cs"];
m4_845 [label="ITypedList l = new JObject(p1, p2)", span="1391-1391", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", file="JObjectTests.cs"];
m4_846 [label="Assert.AreEqual(string.Empty, l.GetListName(null))", span="1393-1393", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", file="JObjectTests.cs"];
m4_847 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", span="1387-1387", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ITypedListGetListName()", file="JObjectTests.cs"];
m4_559 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", span="940-940", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m4_560 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="942-942", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m4_561 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="943-943", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m4_562 [label="IList l = new JObject(p1, p2)", span="944-944", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m4_566 [label="Assert.AreEqual(p1, l[0])", span="951-951", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m4_568 [label="Assert.AreEqual(p2, l[2])", span="953-953", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m4_563 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="946-946", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m4_564 [label="l.Insert(1, p3)", span="948-948", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m4_565 [label="Assert.AreEqual(l, p3.Parent)", span="949-949", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m4_567 [label="Assert.AreEqual(p3, l[1])", span="952-952", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m4_569 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", span="940-940", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="JObjectTests.cs"];
m4_1153 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.FooJsonConverter()", span="1908-1908", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.FooJsonConverter()", file="JObjectTests.cs"];
m4_108 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JObjectTests.cs"];
m4_755 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortProperty()", span="1252-1252", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortProperty()", file="JObjectTests.cs"];
m4_756 [label="IBindingList l = new JObject()", span="1254-1254", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortProperty()", file="JObjectTests.cs"];
m4_757 [label="Assert.AreEqual(null, l.SortProperty)", span="1255-1255", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortProperty()", file="JObjectTests.cs"];
m4_758 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortProperty()", span="1252-1252", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSortProperty()", file="JObjectTests.cs"];
m4_984 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JObjectTests.cs"];
m4_1032 [label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object)", span="1659-1659", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)", file="JObjectTests.cs"];
m4_62 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", span="140-140", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m4_63 [label="JValue v = new JValue(1)", span="142-142", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m4_64 [label="JObject o = new JObject()", span="143-143", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m4_65 [label="o.Add(''PropertyNameValue'', v)", span="144-144", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m4_70 [label="Assert.AreEqual(true, ((ICollection<KeyValuePair<string, JToken>>)o).Remove(new KeyValuePair<string, JToken>(''PropertyNameValue'', v)))", span="150-150", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m4_66 [label="Assert.AreEqual(1, o.Children().Count())", span="145-145", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m4_67 [label="Assert.AreEqual(false, ((ICollection<KeyValuePair<string, JToken>>)o).Remove(new KeyValuePair<string, JToken>(''PropertyNameValue1'', new JValue(1))))", span="147-147", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m4_68 [label="Assert.AreEqual(false, ((ICollection<KeyValuePair<string, JToken>>)o).Remove(new KeyValuePair<string, JToken>(''PropertyNameValue'', new JValue(2))))", span="148-148", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m4_69 [label="Assert.AreEqual(false, ((ICollection<KeyValuePair<string, JToken>>)o).Remove(new KeyValuePair<string, JToken>(''PropertyNameValue'', new JValue(1))))", span="149-149", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m4_71 [label="Assert.AreEqual(0, o.Children().Count())", span="152-152", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m4_72 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", span="140-140", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="JObjectTests.cs"];
m4_153 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNullArrayShouldThrow()", span="270-270", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNullArrayShouldThrow()", file="JObjectTests.cs"];
m4_154 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                @''Value cannot be null.\r\nParameter name: array'',\r\n                () =>\r\n                {\r\n                    JObject o = new JObject();\r\n                    ((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(null, 0);\r\n                })", span="272-279", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNullArrayShouldThrow()", file="JObjectTests.cs"];
m4_155 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNullArrayShouldThrow()", span="270-270", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNullArrayShouldThrow()", file="JObjectTests.cs"];
m4_1124 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1910-1910", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m4_1125 [label="var token = JToken.FromObject(value, new JsonSerializer\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="1912-1915", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m4_1129 [label="o.WriteTo(writer)", span="1920-1920", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m4_1130 [label="token.WriteTo(writer)", span="1923-1923", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m4_1126 [label="token.Type == JTokenType.Object", span="1916-1916", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m4_1127 [label="var o = (JObject)token", span="1918-1918", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m4_1128 [label="o.AddFirst(new JProperty(''foo'', ''bar''))", span="1919-1919", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m4_1131 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="1910-1910", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m4_1034 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectUri()", span="1736-1736", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectUri()", file="JObjectTests.cs"];
m4_1035 [label="JValue v = (JValue)JToken.FromObject(new Uri(''http://www.stuff.co.nz''))", span="1738-1738", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectUri()", file="JObjectTests.cs"];
m4_1036 [label="Assert.AreEqual(v.Value, new Uri(''http://www.stuff.co.nz''))", span="1739-1739", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectUri()", file="JObjectTests.cs"];
m4_1037 [label="Assert.AreEqual(''http://www.stuff.co.nz/'', v.ToString())", span="1741-1741", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectUri()", file="JObjectTests.cs"];
m4_1038 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectUri()", span="1736-1736", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectUri()", file="JObjectTests.cs"];
m4_920 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.SetValueWithInvalidPropertyName()", span="1541-1541", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValueWithInvalidPropertyName()", file="JObjectTests.cs"];
m4_921 [label="ExceptionAssert.Throws<ArgumentException>(''Set JObject values with invalid key value: 0. Object property name expected.'',\r\n                () =>\r\n                {\r\n                    JObject o = new JObject();\r\n                    o[0] = new JValue(3);\r\n                })", span="1543-1548", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValueWithInvalidPropertyName()", file="JObjectTests.cs"];
m4_922 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.SetValueWithInvalidPropertyName()", span="1541-1541", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.SetValueWithInvalidPropertyName()", file="JObjectTests.cs"];
m4_816 [label="Entry System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor, object)", span="0-0", cluster="System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor, object)", file="JObjectTests.cs"];
m4_29 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JObjectTests.cs"];
m4_588 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemAlreadyExists()", span="986-986", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemAlreadyExists()", file="JObjectTests.cs"];
m4_589 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                ''Can not add property Test3 to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList l = new JObject(p1, p2);\r\n\r\n                    JProperty p3 = new JProperty(''Test3'', ''III'');\r\n\r\n                    l[0] = p3;\r\n                    l[1] = p3;\r\n                })", span="988-1000", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemAlreadyExists()", file="JObjectTests.cs"];
m4_590 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemAlreadyExists()", span="986-986", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItemAlreadyExists()", file="JObjectTests.cs"];
m4_1154 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="557-557", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JObjectTests.cs"];
m4_379 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="196-196", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JObjectTests.cs"];
m4_1066 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="182-182", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="JObjectTests.cs"];
m4_808 [label="Entry System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)", span="0-0", cluster="System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)", file="JObjectTests.cs"];
m4_51 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="170-170", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JObjectTests.cs"];
m4_1031 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="JObjectTests.cs"];
m4_315 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", span="548-548", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m4_316 [label="string jsonText = @''{\r\n  ''''short'''':\r\n  {\r\n    ''''original'''':''''http://www.foo.com/'''',\r\n    ''''short'''':''''krehqk'''',\r\n    ''''error'''':\r\n    {\r\n      ''''code'''':0,\r\n      ''''msg'''':''''No action taken''''\r\n    }\r\n  }\r\n}''", span="550-561", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m4_317 [label="JObject json = JObject.Parse(jsonText)", span="563-563", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m4_318 [label="Shortie shortie = new Shortie\r\n            {\r\n                Original = (string)json[''short''][''original''],\r\n                Short = (string)json[''short''][''short''],\r\n                Error = new ShortieException\r\n                {\r\n                    Code = (int)json[''short''][''error''][''code''],\r\n                    ErrorMessage = (string)json[''short''][''error''][''msg'']\r\n                }\r\n            }", span="565-574", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m4_319 [label="Console.WriteLine(shortie.Original)", span="576-576", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m4_320 [label="Console.WriteLine(shortie.Error.ErrorMessage)", span="579-579", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m4_321 [label="Assert.AreEqual(''http://www.foo.com/'', shortie.Original)", span="582-582", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m4_322 [label="Assert.AreEqual(''krehqk'', shortie.Short)", span="583-583", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m4_323 [label="Assert.AreEqual(null, shortie.Shortened)", span="584-584", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m4_324 [label="Assert.AreEqual(0, shortie.Error.Code)", span="585-585", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m4_325 [label="Assert.AreEqual(''No action taken'', shortie.Error.ErrorMessage)", span="586-586", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m4_326 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", span="548-548", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="JObjectTests.cs"];
m4_483 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", span="822-822", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m4_484 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="824-824", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m4_485 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="825-825", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m4_486 [label="IList l = new JObject(p1, p2)", span="826-826", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m4_489 [label="Assert.AreEqual(p1, a[0])", span="832-832", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m4_490 [label="Assert.AreEqual(p2, a[1])", span="833-833", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m4_487 [label="object[] a = new object[l.Count]", span="828-828", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m4_488 [label="l.CopyTo(a, 0)", span="830-830", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m4_491 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", span="822-822", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="JObjectTests.cs"];
m4_218 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="354-354", cluster="Newtonsoft.Json.JsonReader.Read()", file="JObjectTests.cs"];
m4_8 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="395-395", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JObjectTests.cs"];
m4_184 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", span="324-324", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m4_185 [label="PersonRaw raw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="326-331", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m4_186 [label="JObject o = JObject.FromObject(raw)", span="333-333", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m4_187 [label="Assert.AreEqual(''FirstNameValue'', (string)o[''first_name''])", span="335-335", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m4_188 [label="Assert.AreEqual(JTokenType.Raw, ((JValue)o[''RawContent'']).Type)", span="336-336", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m4_189 [label="Assert.AreEqual(''[1,2,3,4,5]'', (string)o[''RawContent''])", span="337-337", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m4_190 [label="Assert.AreEqual(''LastNameValue'', (string)o[''last_name''])", span="338-338", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m4_191 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", span="324-324", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectRaw()", file="JObjectTests.cs"];
m4_75 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.DuplicatePropertyNameShouldThrow()", span="156-156", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DuplicatePropertyNameShouldThrow()", file="JObjectTests.cs"];
m4_76 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                ''Can not add property PropertyNameValue to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'',\r\n                () =>\r\n                {\r\n                    JObject o = new JObject();\r\n                    o.Add(''PropertyNameValue'', null);\r\n                    o.Add(''PropertyNameValue'', null);\r\n                })", span="158-165", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DuplicatePropertyNameShouldThrow()", file="JObjectTests.cs"];
m4_77 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.DuplicatePropertyNameShouldThrow()", span="156-156", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DuplicatePropertyNameShouldThrow()", file="JObjectTests.cs"];
m4_231 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="418-418", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JObjectTests.cs"];
m4_195 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", span="342-342", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_196 [label="PersonRaw raw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="344-349", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_197 [label="JObject o = JObject.FromObject(raw)", span="351-351", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_198 [label="JsonReader reader = new JTokenReader(o)", span="353-353", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_199 [label="Assert.IsTrue(reader.Read())", span="355-355", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_200 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="356-356", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_201 [label="Assert.IsTrue(reader.Read())", span="358-358", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_202 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="359-359", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_203 [label="Assert.IsTrue(reader.Read())", span="361-361", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_204 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="362-362", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_205 [label="Assert.IsTrue(reader.Read())", span="364-364", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_206 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="365-365", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_207 [label="Assert.IsTrue(reader.Read())", span="367-367", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_208 [label="Assert.AreEqual(JsonToken.Raw, reader.TokenType)", span="368-368", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_209 [label="Assert.IsTrue(reader.Read())", span="370-370", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_210 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="371-371", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_211 [label="Assert.IsTrue(reader.Read())", span="373-373", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_212 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="374-374", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_213 [label="Assert.IsTrue(reader.Read())", span="376-376", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_214 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="377-377", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_215 [label="Assert.IsFalse(reader.Read())", span="379-379", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_216 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", span="342-342", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="JObjectTests.cs"];
m4_0 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", span="60-60", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", file="JObjectTests.cs"];
m4_1 [label="var o = new JObject()", span="62-62", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", file="JObjectTests.cs"];
m4_2 [label="o.Add(new JProperty(''novalue''))", span="63-63", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", file="JObjectTests.cs"];
m4_3 [label="Assert.AreEqual(@''{\r\n  ''''novalue'''': null\r\n}'', o.ToString())", span="65-67", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", file="JObjectTests.cs"];
m4_4 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", span="60-60", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", file="JObjectTests.cs"];
m4_1046 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ParseAdditionalContent()", span="1754-1754", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseAdditionalContent()", file="JObjectTests.cs"];
m4_1047 [label="ExceptionAssert.Throws<JsonReaderException>(''Additional text encountered after finished reading JSON content: ,. Path '', line 10, position 2.'',\r\n                () =>\r\n                {\r\n                    string json = @''{\r\n''''Name'''': ''''Apple'''',\r\n''''Expiry'''': new Date(1230422400000),\r\n''''Price'''': 3.99,\r\n''''Sizes'''': [\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]\r\n}, 987987'';\r\n\r\n                    JObject o = JObject.Parse(json);\r\n                })", span="1756-1771", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseAdditionalContent()", file="JObjectTests.cs"];
m4_1048 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ParseAdditionalContent()", span="1754-1754", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseAdditionalContent()", file="JObjectTests.cs"];
m4_1098 [label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="399-399", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObjectTests.cs"];
m4_304 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="134-134", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JObjectTests.cs"];
m4_194 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="343-343", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JObjectTests.cs"];
m4_886 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", span="1448-1448", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_887 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1450-1450", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_888 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1451-1451", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_889 [label="JObject o = new JObject(p1, p2)", span="1452-1452", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_890 [label="NotifyCollectionChangedAction? changedType = null", span="1454-1454", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_892 [label="o._collectionChanged += (s, a) =>\r\n            {\r\n                changedType = a.Action;\r\n                index = a.NewStartingIndex;\r\n            }", span="1457-1461", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_894 [label="o.Add(p3)", span="1465-1465", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_897 [label="Assert.AreEqual(p3, ((IList<JToken>)o)[index.Value])", span="1468-1468", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_899 [label="((IList<JToken>)o)[index.Value] = p4", span="1472-1472", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_902 [label="Assert.AreEqual(p4, ((IList<JToken>)o)[index.Value])", span="1475-1475", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_903 [label="Assert.IsFalse(((IList<JToken>)o).Contains(p3))", span="1476-1476", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_904 [label="Assert.IsTrue(((IList<JToken>)o).Contains(p4))", span="1477-1477", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_905 [label="o[''Test1''] = 2", span="1479-1479", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_908 [label="Assert.AreEqual(2, (int)o[''Test1''])", span="1482-1482", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_891 [label="int? index = null", span="1455-1455", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_893 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1463-1463", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_895 [label="Assert.AreEqual(changedType, NotifyCollectionChangedAction.Add)", span="1466-1466", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_896 [label="Assert.AreEqual(index, 2)", span="1467-1467", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_898 [label="JProperty p4 = new JProperty(''Test4'', ''IV'')", span="1470-1470", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_900 [label="Assert.AreEqual(changedType, NotifyCollectionChangedAction.Replace)", span="1473-1473", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_901 [label="Assert.AreEqual(index, 2)", span="1474-1474", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_906 [label="Assert.AreEqual(changedType, NotifyCollectionChangedAction.Replace)", span="1480-1480", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_907 [label="Assert.AreEqual(index, 0)", span="1481-1481", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_909 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", span="1448-1448", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.CollectionChanged()", file="JObjectTests.cs"];
m4_174 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToInsufficientArrayCapacity()", span="308-308", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToInsufficientArrayCapacity()", file="JObjectTests.cs"];
m4_175 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                @''The number of elements in the source JObject is greater than the available space from arrayIndex to the end of the destination array.'',\r\n                () =>\r\n                {\r\n                    JObject o = new JObject();\r\n                    o.Add(''PropertyNameValue'', new JValue(1));\r\n                    o.Add(''PropertyNameValue2'', new JValue(2));\r\n                    o.Add(''PropertyNameValue3'', new JValue(3));\r\n\r\n                    ((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[3], 1);\r\n                })", span="310-320", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToInsufficientArrayCapacity()", file="JObjectTests.cs"];
m4_176 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToInsufficientArrayCapacity()", span="308-308", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToInsufficientArrayCapacity()", file="JObjectTests.cs"];
m4_467 [label="Entry System.Collections.IList.Contains(object)", span="0-0", cluster="System.Collections.IList.Contains(object)", file="JObjectTests.cs"];
m4_783 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddIndex()", span="1301-1301", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddIndex()", file="JObjectTests.cs"];
m4_784 [label="IBindingList l = new JObject()", span="1303-1303", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddIndex()", file="JObjectTests.cs"];
m4_785 [label="l.AddIndex(null)", span="1305-1305", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddIndex()", file="JObjectTests.cs"];
m4_786 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddIndex()", span="1301-1301", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddIndex()", file="JObjectTests.cs"];
m4_314 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JObjectTests.cs"];
m4_828 [label="Entry System.ComponentModel.IBindingList.AddNew()", span="0-0", cluster="System.ComponentModel.IBindingList.AddNew()", file="JObjectTests.cs"];
m4_512 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadValue()", span="867-867", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadValue()", file="JObjectTests.cs"];
m4_513 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                ''Argument is not a JToken.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList l = new JObject(p1, p2);\r\n\r\n                    l.Add(''Bad!'');\r\n                })", span="869-878", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadValue()", file="JObjectTests.cs"];
m4_514 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadValue()", span="867-867", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadValue()", file="JObjectTests.cs"];
m4_957 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidPropertyValueCastExceptionMessage()", span="1615-1615", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidPropertyValueCastExceptionMessage()", file="JObjectTests.cs"];
m4_958 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Object to String.'',\r\n                () =>\r\n                {\r\n                    string json = @''{\r\n  ''''responseData'''': {}, \r\n  ''''responseDetails'''': null, \r\n  ''''responseStatus'''': 200\r\n}'';\r\n\r\n                    JObject o = JObject.Parse(json);\r\n\r\n                    string name = (string)o.Property(''responseData'');\r\n                })", span="1617-1629", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidPropertyValueCastExceptionMessage()", file="JObjectTests.cs"];
m4_959 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidPropertyValueCastExceptionMessage()", span="1615-1615", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidPropertyValueCastExceptionMessage()", file="JObjectTests.cs"];
m4_9 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JObjectTests.cs"];
m4_468 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", span="799-799", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="JObjectTests.cs"];
m4_469 [label="JProperty p = new JProperty(''Test'', 1)", span="801-801", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="JObjectTests.cs"];
m4_470 [label="IList l = new JObject(p)", span="802-802", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="JObjectTests.cs"];
m4_471 [label="Assert.AreEqual(0, l.IndexOf(p))", span="804-804", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="JObjectTests.cs"];
m4_472 [label="Assert.AreEqual(-1, l.IndexOf(new JProperty(''Test'', 1)))", span="805-805", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="JObjectTests.cs"];
m4_473 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", span="799-799", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="JObjectTests.cs"];
m4_634 [label="Entry System.Collections.Generic.IList<T>.IndexOf(T)", span="0-0", cluster="System.Collections.Generic.IList<T>.IndexOf(T)", file="JObjectTests.cs"];
m4_353 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JObjectTests.cs"];
m4_767 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSorting()", span="1273-1273", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSorting()", file="JObjectTests.cs"];
m4_768 [label="IBindingList l = new JObject()", span="1275-1275", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSorting()", file="JObjectTests.cs"];
m4_769 [label="Assert.AreEqual(false, l.SupportsSorting)", span="1276-1276", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSorting()", file="JObjectTests.cs"];
m4_770 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSorting()", span="1273-1273", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListSupportsSorting()", file="JObjectTests.cs"];
m4_615 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JObjectTests.cs"];
m4_134 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JObjectTests.cs"];
m4_796 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveSort()", span="1321-1321", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveSort()", file="JObjectTests.cs"];
m4_797 [label="ExceptionAssert.Throws<NotSupportedException>(\r\n                ''Specified method is not supported.'',\r\n                () =>\r\n                {\r\n                    IBindingList l = new JObject();\r\n                    l.RemoveSort();\r\n                })", span="1323-1329", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveSort()", file="JObjectTests.cs"];
m4_798 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveSort()", span="1321-1321", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListRemoveSort()", file="JObjectTests.cs"];
m4_98 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JObjectTests.cs"];
m4_547 [label="Entry System.Collections.IList.Remove(object)", span="0-0", cluster="System.Collections.IList.Remove(object)", file="JObjectTests.cs"];
m4_33 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="480-480", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JObjectTests.cs"];
m4_521 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddPropertyWithExistingName()", span="882-882", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddPropertyWithExistingName()", file="JObjectTests.cs"];
m4_522 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                ''Can not add property Test2 to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList l = new JObject(p1, p2);\r\n\r\n                    JProperty p3 = new JProperty(''Test2'', ''II'');\r\n\r\n                    l.Add(p3);\r\n                })", span="884-895", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddPropertyWithExistingName()", file="JObjectTests.cs"];
m4_523 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddPropertyWithExistingName()", span="882-882", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddPropertyWithExistingName()", file="JObjectTests.cs"];
m4_608 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="125-125", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JObjectTests.cs"];
m4_1122 [label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string)", span="386-386", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string)", file="JObjectTests.cs"];
m4_221 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", span="383-383", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m4_222 [label="PersonRaw raw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="385-390", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m4_223 [label="JObject o = JObject.FromObject(raw)", span="392-392", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m4_224 [label="JsonReader reader = new JTokenReader(o)", span="394-394", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m4_225 [label="JsonSerializer serializer = new JsonSerializer()", span="395-395", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m4_226 [label="raw = (PersonRaw)serializer.Deserialize(reader, typeof(PersonRaw))", span="396-396", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m4_227 [label="Assert.AreEqual(''FirstNameValue'', raw.FirstName)", span="398-398", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m4_228 [label="Assert.AreEqual(''LastNameValue'', raw.LastName)", span="399-399", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m4_229 [label="Assert.AreEqual(''[1,2,3,4,5]'', raw.RawContent.Value)", span="400-400", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m4_230 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", span="383-383", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="JObjectTests.cs"];
m4_294 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", span="502-502", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m4_295 [label="string s = null", span="504-504", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m4_296 [label="JValue v = new JValue(s)", span="505-505", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m4_297 [label="Assert.AreEqual(null, v.Value)", span="506-506", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m4_298 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="507-507", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m4_300 [label="o[''title''] = v", span="510-510", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m4_299 [label="JObject o = new JObject()", span="509-509", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m4_301 [label="string output = o.ToString()", span="512-512", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m4_302 [label="Assert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="514-516", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m4_303 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", span="502-502", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="JObjectTests.cs"];
m4_329 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", span="590-590", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="JObjectTests.cs"];
m4_330 [label="JObject o = new JObject()", span="592-592", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="JObjectTests.cs"];
m4_331 [label="o[''rc''] = new JValue(200)", span="593-593", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="JObjectTests.cs"];
m4_332 [label="o[''m''] = new JValue('''')", span="594-594", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="JObjectTests.cs"];
m4_333 [label="o[''o''] = new JValue(@''<div class='s1'>\r\n    <div class='avatar'>                    \r\n        <a href='asdf'>asdf</a><br />\r\n        <strong>0</strong>\r\n    </div>\r\n    <div class='sl'>\r\n        <p>\r\n            444444444\r\n        </p>\r\n    </div>\r\n    <div class='clear'>\r\n    </div>                        \r\n</div>'')", span="595-607", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="JObjectTests.cs"];
m4_334 [label="Assert.AreEqual(@''{\r\n  ''''rc'''': 200,\r\n  ''''m'''': '''''''',\r\n  ''''o'''': ''''<div class='s1'>\r\n    <div class='avatar'>                    \r\n        <a href='asdf'>asdf</a><br />\r\n        <strong>0</strong>\r\n    </div>\r\n    <div class='sl'>\r\n        <p>\r\n            444444444\r\n        </p>\r\n    </div>\r\n    <div class='clear'>\r\n    </div>                        \r\n</div>''''\r\n}'', o.ToString())", span="609-613", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="JObjectTests.cs"];
m4_335 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", span="590-590", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="JObjectTests.cs"];
m4_714 [label="Entry System.Collections.Generic.IList<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.IList<T>.RemoveAt(int)", file="JObjectTests.cs"];
m4_1099 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", span="1877-1877", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1100 [label="JObject a = new JObject()", span="1879-1879", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1101 [label="a[''Name''] = ''Name!''", span="1880-1880", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1102 [label="a[''name''] = ''name!''", span="1881-1881", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1103 [label="a[''title''] = ''Title!''", span="1882-1882", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1104 [label="Assert.AreEqual(null, a.GetValue(''NAME'', StringComparison.Ordinal))", span="1884-1884", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1105 [label="Assert.AreEqual(null, a.GetValue(''NAME''))", span="1885-1885", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1106 [label="Assert.AreEqual(null, a.GetValue(''TITLE''))", span="1886-1886", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1107 [label="Assert.AreEqual(''Name!'', (string)a.GetValue(''NAME'', StringComparison.OrdinalIgnoreCase))", span="1887-1887", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1108 [label="Assert.AreEqual(''name!'', (string)a.GetValue(''name'', StringComparison.Ordinal))", span="1888-1888", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1109 [label="Assert.AreEqual(null, a.GetValue(null, StringComparison.Ordinal))", span="1889-1889", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1110 [label="Assert.AreEqual(null, a.GetValue(null))", span="1890-1890", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1112 [label="Assert.IsFalse(a.TryGetValue(''NAME'', StringComparison.Ordinal, out v))", span="1893-1893", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1114 [label="Assert.IsFalse(a.TryGetValue(''NAME'', out v))", span="1896-1896", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1115 [label="Assert.IsFalse(a.TryGetValue(''TITLE'', out v))", span="1897-1897", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1116 [label="Assert.IsTrue(a.TryGetValue(''NAME'', StringComparison.OrdinalIgnoreCase, out v))", span="1899-1899", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1118 [label="Assert.IsTrue(a.TryGetValue(''name'', StringComparison.Ordinal, out v))", span="1902-1902", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1120 [label="Assert.IsFalse(a.TryGetValue(null, StringComparison.Ordinal, out v))", span="1905-1905", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1111 [label="JToken v", span="1892-1892", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1113 [label="Assert.AreEqual(null, v)", span="1894-1894", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1117 [label="Assert.AreEqual(''Name!'', (string)v)", span="1900-1900", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1119 [label="Assert.AreEqual(''name!'', (string)v)", span="1903-1903", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_1121 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", span="1877-1877", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValue()", file="JObjectTests.cs"];
m4_31 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="249-249", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JObjectTests.cs"];
m4_858 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", span="1408-1408", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_859 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1410-1410", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_860 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1411-1411", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_861 [label="JObject o = new JObject(p1, p2)", span="1412-1412", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_862 [label="ListChangedType? changedType = null", span="1414-1414", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_864 [label="o.ListChanged += (s, a) =>\r\n            {\r\n                changedType = a.ListChangedType;\r\n                index = a.NewIndex;\r\n            }", span="1417-1421", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_866 [label="o.Add(p3)", span="1425-1425", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_869 [label="Assert.AreEqual(p3, ((IList<JToken>)o)[index.Value])", span="1428-1428", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_871 [label="((IList<JToken>)o)[index.Value] = p4", span="1432-1432", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_874 [label="Assert.AreEqual(p4, ((IList<JToken>)o)[index.Value])", span="1435-1435", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_875 [label="Assert.IsFalse(((IList<JToken>)o).Contains(p3))", span="1436-1436", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_876 [label="Assert.IsTrue(((IList<JToken>)o).Contains(p4))", span="1437-1437", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_877 [label="o[''Test1''] = 2", span="1439-1439", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_880 [label="Assert.AreEqual(2, (int)o[''Test1''])", span="1442-1442", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_863 [label="int? index = null", span="1415-1415", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_865 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1423-1423", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_867 [label="Assert.AreEqual(changedType, ListChangedType.ItemAdded)", span="1426-1426", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_868 [label="Assert.AreEqual(index, 2)", span="1427-1427", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_870 [label="JProperty p4 = new JProperty(''Test4'', ''IV'')", span="1430-1430", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_872 [label="Assert.AreEqual(changedType, ListChangedType.ItemChanged)", span="1433-1433", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_873 [label="Assert.AreEqual(index, 2)", span="1434-1434", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_878 [label="Assert.AreEqual(changedType, ListChangedType.ItemChanged)", span="1440-1440", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_879 [label="Assert.AreEqual(index, 0)", span="1441-1441", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_881 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", span="1408-1408", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ListChanged()", file="JObjectTests.cs"];
m4_1049 [label="Entry lambda expression", span="1757-1771", cluster="lambda expression", file="JObjectTests.cs"];
m4_79 [label="Entry lambda expression", span="160-165", cluster="lambda expression", file="JObjectTests.cs"];
m4_80 [label="JObject o = new JObject()", span="162-162", cluster="lambda expression", file="JObjectTests.cs"];
m4_81 [label="o.Add(''PropertyNameValue'', null)", span="163-163", cluster="lambda expression", file="JObjectTests.cs"];
m4_82 [label="o.Add(''PropertyNameValue'', null)", span="164-164", cluster="lambda expression", file="JObjectTests.cs"];
m4_83 [label="Exit lambda expression", span="160-165", cluster="lambda expression", file="JObjectTests.cs"];
m4_156 [label="Entry lambda expression", span="275-279", cluster="lambda expression", file="JObjectTests.cs"];
m4_157 [label="JObject o = new JObject()", span="277-277", cluster="lambda expression", file="JObjectTests.cs"];
m4_158 [label="((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(null, 0)", span="278-278", cluster="lambda expression", file="JObjectTests.cs"];
m4_159 [label="Exit lambda expression", span="275-279", cluster="lambda expression", file="JObjectTests.cs"];
m4_163 [label="Entry lambda expression", span="288-292", cluster="lambda expression", file="JObjectTests.cs"];
m4_164 [label="JObject o = new JObject()", span="290-290", cluster="lambda expression", file="JObjectTests.cs"];
m4_165 [label="((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[1], -1)", span="291-291", cluster="lambda expression", file="JObjectTests.cs"];
m4_166 [label="Exit lambda expression", span="288-292", cluster="lambda expression", file="JObjectTests.cs"];
m4_170 [label="Entry lambda expression", span="300-304", cluster="lambda expression", file="JObjectTests.cs"];
m4_171 [label="JObject o = new JObject()", span="302-302", cluster="lambda expression", file="JObjectTests.cs"];
m4_172 [label="((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[1], 1)", span="303-303", cluster="lambda expression", file="JObjectTests.cs"];
m4_173 [label="Exit lambda expression", span="300-304", cluster="lambda expression", file="JObjectTests.cs"];
m4_177 [label="Entry lambda expression", span="312-320", cluster="lambda expression", file="JObjectTests.cs"];
m4_178 [label="JObject o = new JObject()", span="314-314", cluster="lambda expression", file="JObjectTests.cs"];
m4_179 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="315-315", cluster="lambda expression", file="JObjectTests.cs"];
m4_180 [label="o.Add(''PropertyNameValue2'', new JValue(2))", span="316-316", cluster="lambda expression", file="JObjectTests.cs"];
m4_181 [label="o.Add(''PropertyNameValue3'', new JValue(3))", span="317-317", cluster="lambda expression", file="JObjectTests.cs"];
m4_182 [label="((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[3], 1)", span="319-319", cluster="lambda expression", file="JObjectTests.cs"];
m4_183 [label="Exit lambda expression", span="312-320", cluster="lambda expression", file="JObjectTests.cs"];
m4_236 [label="Entry lambda expression", span="407-411", cluster="lambda expression", file="JObjectTests.cs"];
m4_237 [label="string json = @''[''''prop'''']''", span="409-409", cluster="lambda expression", file="JObjectTests.cs"];
m4_238 [label="JObject.Parse(json)", span="410-410", cluster="lambda expression", file="JObjectTests.cs"];
m4_239 [label="Exit lambda expression", span="407-411", cluster="lambda expression", file="JObjectTests.cs"];
m4_263 [label="Entry lambda expression", span="444-447", cluster="lambda expression", file="JObjectTests.cs"];
m4_264 [label="JObject.Parse(@''{\r\n    ''''name'''': ''''James'''',\r\n    ]!#$THIS IS: BAD JSON![{}}}}]\r\n  }'')", span="444-447", cluster="lambda expression", file="JObjectTests.cs"];
m4_265 [label="Exit lambda expression", span="444-447", cluster="lambda expression", file="JObjectTests.cs"];
m4_420 [label="JObject s = (JObject)sender", span="698-698", cluster="lambda expression", file="JObjectTests.cs"];
m4_421 [label="changing = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null", span="699-699", cluster="lambda expression", file="JObjectTests.cs"];
m4_422 [label="changingCount++", span="700-700", cluster="lambda expression", file="JObjectTests.cs"];
m4_425 [label="JObject s = (JObject)sender", span="704-704", cluster="lambda expression", file="JObjectTests.cs"];
m4_426 [label="changed = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null", span="705-705", cluster="lambda expression", file="JObjectTests.cs"];
m4_427 [label="changedCount++", span="706-706", cluster="lambda expression", file="JObjectTests.cs"];
m4_419 [label="Entry lambda expression", span="696-701", cluster="lambda expression", file="JObjectTests.cs"];
m4_423 [label="Exit lambda expression", span="696-701", cluster="lambda expression", file="JObjectTests.cs"];
m4_424 [label="Entry lambda expression", span="702-707", cluster="lambda expression", file="JObjectTests.cs"];
m4_428 [label="Exit lambda expression", span="702-707", cluster="lambda expression", file="JObjectTests.cs"];
m4_456 [label="JObject s = (JObject)sender", span="756-756", cluster="lambda expression", file="JObjectTests.cs"];
m4_457 [label="changed = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null", span="757-757", cluster="lambda expression", file="JObjectTests.cs"];
m4_458 [label="changedCount++", span="758-758", cluster="lambda expression", file="JObjectTests.cs"];
m4_455 [label="Entry lambda expression", span="754-759", cluster="lambda expression", file="JObjectTests.cs"];
m4_459 [label="Exit lambda expression", span="754-759", cluster="lambda expression", file="JObjectTests.cs"];
m4_506 [label="Entry lambda expression", span="856-863", cluster="lambda expression", file="JObjectTests.cs"];
m4_507 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="858-858", cluster="lambda expression", file="JObjectTests.cs"];
m4_508 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="859-859", cluster="lambda expression", file="JObjectTests.cs"];
m4_509 [label="IList l = new JObject(p1, p2)", span="860-860", cluster="lambda expression", file="JObjectTests.cs"];
m4_510 [label="l.Add(new JValue(''Bad!''))", span="862-862", cluster="lambda expression", file="JObjectTests.cs"];
m4_511 [label="Exit lambda expression", span="856-863", cluster="lambda expression", file="JObjectTests.cs"];
m4_515 [label="Entry lambda expression", span="871-878", cluster="lambda expression", file="JObjectTests.cs"];
m4_516 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="873-873", cluster="lambda expression", file="JObjectTests.cs"];
m4_517 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="874-874", cluster="lambda expression", file="JObjectTests.cs"];
m4_518 [label="IList l = new JObject(p1, p2)", span="875-875", cluster="lambda expression", file="JObjectTests.cs"];
m4_519 [label="l.Add(''Bad!'')", span="877-877", cluster="lambda expression", file="JObjectTests.cs"];
m4_520 [label="Exit lambda expression", span="871-878", cluster="lambda expression", file="JObjectTests.cs"];
m4_524 [label="Entry lambda expression", span="886-895", cluster="lambda expression", file="JObjectTests.cs"];
m4_525 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="888-888", cluster="lambda expression", file="JObjectTests.cs"];
m4_526 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="889-889", cluster="lambda expression", file="JObjectTests.cs"];
m4_527 [label="IList l = new JObject(p1, p2)", span="890-890", cluster="lambda expression", file="JObjectTests.cs"];
m4_528 [label="JProperty p3 = new JProperty(''Test2'', ''II'')", span="892-892", cluster="lambda expression", file="JObjectTests.cs"];
m4_529 [label="l.Add(p3)", span="894-894", cluster="lambda expression", file="JObjectTests.cs"];
m4_530 [label="Exit lambda expression", span="886-895", cluster="lambda expression", file="JObjectTests.cs"];
m4_591 [label="Entry lambda expression", span="990-1000", cluster="lambda expression", file="JObjectTests.cs"];
m4_592 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="992-992", cluster="lambda expression", file="JObjectTests.cs"];
m4_593 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="993-993", cluster="lambda expression", file="JObjectTests.cs"];
m4_594 [label="IList l = new JObject(p1, p2)", span="994-994", cluster="lambda expression", file="JObjectTests.cs"];
m4_595 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="996-996", cluster="lambda expression", file="JObjectTests.cs"];
m4_596 [label="l[0] = p3", span="998-998", cluster="lambda expression", file="JObjectTests.cs"];
m4_597 [label="l[1] = p3", span="999-999", cluster="lambda expression", file="JObjectTests.cs"];
m4_598 [label="Exit lambda expression", span="990-1000", cluster="lambda expression", file="JObjectTests.cs"];
m4_602 [label="Entry lambda expression", span="1008-1015", cluster="lambda expression", file="JObjectTests.cs"];
m4_603 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1010-1010", cluster="lambda expression", file="JObjectTests.cs"];
m4_604 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1011-1011", cluster="lambda expression", file="JObjectTests.cs"];
m4_605 [label="IList l = new JObject(p1, p2)", span="1012-1012", cluster="lambda expression", file="JObjectTests.cs"];
m4_606 [label="l[0] = new JValue(true)", span="1014-1014", cluster="lambda expression", file="JObjectTests.cs"];
m4_607 [label="Exit lambda expression", span="1008-1015", cluster="lambda expression", file="JObjectTests.cs"];
m4_663 [label="Entry lambda expression", span="1105-1112", cluster="lambda expression", file="JObjectTests.cs"];
m4_664 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1107-1107", cluster="lambda expression", file="JObjectTests.cs"];
m4_665 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1108-1108", cluster="lambda expression", file="JObjectTests.cs"];
m4_666 [label="IList<JToken> l = new JObject(p1, p2)", span="1109-1109", cluster="lambda expression", file="JObjectTests.cs"];
m4_667 [label="l.Add(new JValue(''Bad!''))", span="1111-1111", cluster="lambda expression", file="JObjectTests.cs"];
m4_668 [label="Exit lambda expression", span="1105-1112", cluster="lambda expression", file="JObjectTests.cs"];
m4_672 [label="Entry lambda expression", span="1119-1127", cluster="lambda expression", file="JObjectTests.cs"];
m4_673 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1121-1121", cluster="lambda expression", file="JObjectTests.cs"];
m4_674 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1122-1122", cluster="lambda expression", file="JObjectTests.cs"];
m4_675 [label="IList<JToken> l = new JObject(p1, p2)", span="1123-1123", cluster="lambda expression", file="JObjectTests.cs"];
m4_676 [label="l.Add(''Bad!'')", span="1126-1126", cluster="lambda expression", file="JObjectTests.cs"];
m4_677 [label="Exit lambda expression", span="1119-1127", cluster="lambda expression", file="JObjectTests.cs"];
m4_681 [label="Entry lambda expression", span="1134-1143", cluster="lambda expression", file="JObjectTests.cs"];
m4_682 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1136-1136", cluster="lambda expression", file="JObjectTests.cs"];
m4_683 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1137-1137", cluster="lambda expression", file="JObjectTests.cs"];
m4_684 [label="IList<JToken> l = new JObject(p1, p2)", span="1138-1138", cluster="lambda expression", file="JObjectTests.cs"];
m4_685 [label="JProperty p3 = new JProperty(''Test2'', ''II'')", span="1140-1140", cluster="lambda expression", file="JObjectTests.cs"];
m4_686 [label="l.Add(p3)", span="1142-1142", cluster="lambda expression", file="JObjectTests.cs"];
m4_687 [label="Exit lambda expression", span="1134-1143", cluster="lambda expression", file="JObjectTests.cs"];
m4_743 [label="Entry lambda expression", span="1230-1240", cluster="lambda expression", file="JObjectTests.cs"];
m4_744 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1232-1232", cluster="lambda expression", file="JObjectTests.cs"];
m4_745 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1233-1233", cluster="lambda expression", file="JObjectTests.cs"];
m4_746 [label="IList<JToken> l = new JObject(p1, p2)", span="1234-1234", cluster="lambda expression", file="JObjectTests.cs"];
m4_747 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1236-1236", cluster="lambda expression", file="JObjectTests.cs"];
m4_748 [label="l[0] = p3", span="1238-1238", cluster="lambda expression", file="JObjectTests.cs"];
m4_749 [label="l[1] = p3", span="1239-1239", cluster="lambda expression", file="JObjectTests.cs"];
m4_750 [label="Exit lambda expression", span="1230-1240", cluster="lambda expression", file="JObjectTests.cs"];
m4_791 [label="Entry lambda expression", span="1313-1317", cluster="lambda expression", file="JObjectTests.cs"];
m4_792 [label="IBindingList l = new JObject()", span="1315-1315", cluster="lambda expression", file="JObjectTests.cs"];
m4_793 [label="l.ApplySort(null, ListSortDirection.Ascending)", span="1316-1316", cluster="lambda expression", file="JObjectTests.cs"];
m4_794 [label="Exit lambda expression", span="1313-1317", cluster="lambda expression", file="JObjectTests.cs"];
m4_799 [label="Entry lambda expression", span="1325-1329", cluster="lambda expression", file="JObjectTests.cs"];
m4_800 [label="IBindingList l = new JObject()", span="1327-1327", cluster="lambda expression", file="JObjectTests.cs"];
m4_801 [label="l.RemoveSort()", span="1328-1328", cluster="lambda expression", file="JObjectTests.cs"];
m4_802 [label="Exit lambda expression", span="1325-1329", cluster="lambda expression", file="JObjectTests.cs"];
m4_812 [label="Entry lambda expression", span="1345-1349", cluster="lambda expression", file="JObjectTests.cs"];
m4_813 [label="IBindingList l = new JObject()", span="1347-1347", cluster="lambda expression", file="JObjectTests.cs"];
m4_814 [label="l.Find(null, null)", span="1348-1348", cluster="lambda expression", file="JObjectTests.cs"];
m4_815 [label="Exit lambda expression", span="1345-1349", cluster="lambda expression", file="JObjectTests.cs"];
m4_824 [label="Entry lambda expression", span="1364-1368", cluster="lambda expression", file="JObjectTests.cs"];
m4_825 [label="IBindingList l = new JObject()", span="1366-1366", cluster="lambda expression", file="JObjectTests.cs"];
m4_826 [label="l.AddNew()", span="1367-1367", cluster="lambda expression", file="JObjectTests.cs"];
m4_827 [label="Exit lambda expression", span="1364-1368", cluster="lambda expression", file="JObjectTests.cs"];
m4_840 [label="e.NewObject = new JProperty(''Property!'')", span="1375-1375", cluster="lambda expression", file="JObjectTests.cs"];
m4_839 [label="Entry lambda expression", span="1375-1375", cluster="lambda expression", file="JObjectTests.cs"];
m4_841 [label="Exit lambda expression", span="1375-1375", cluster="lambda expression", file="JObjectTests.cs"];
m4_883 [label="changedType = a.ListChangedType", span="1419-1419", cluster="lambda expression", file="JObjectTests.cs"];
m4_884 [label="index = a.NewIndex", span="1420-1420", cluster="lambda expression", file="JObjectTests.cs"];
m4_882 [label="Entry lambda expression", span="1417-1421", cluster="lambda expression", file="JObjectTests.cs"];
m4_885 [label="Exit lambda expression", span="1417-1421", cluster="lambda expression", file="JObjectTests.cs"];
m4_911 [label="changedType = a.Action", span="1459-1459", cluster="lambda expression", file="JObjectTests.cs"];
m4_912 [label="index = a.NewStartingIndex", span="1460-1460", cluster="lambda expression", file="JObjectTests.cs"];
m4_910 [label="Entry lambda expression", span="1457-1461", cluster="lambda expression", file="JObjectTests.cs"];
m4_913 [label="Exit lambda expression", span="1457-1461", cluster="lambda expression", file="JObjectTests.cs"];
m4_923 [label="Entry lambda expression", span="1544-1548", cluster="lambda expression", file="JObjectTests.cs"];
m4_924 [label="JObject o = new JObject()", span="1546-1546", cluster="lambda expression", file="JObjectTests.cs"];
m4_925 [label="o[0] = new JValue(3)", span="1547-1547", cluster="lambda expression", file="JObjectTests.cs"];
m4_926 [label="Exit lambda expression", span="1544-1548", cluster="lambda expression", file="JObjectTests.cs"];
m4_952 [label="Entry lambda expression", span="1600-1611", cluster="lambda expression", file="JObjectTests.cs"];
m4_953 [label="string json = @''{\r\n  ''''responseData'''': {}, \r\n  ''''responseDetails'''': null, \r\n  ''''responseStatus'''': 200\r\n}''", span="1602-1606", cluster="lambda expression", file="JObjectTests.cs"];
m4_954 [label="JObject o = JObject.Parse(json)", span="1608-1608", cluster="lambda expression", file="JObjectTests.cs"];
m4_955 [label="string name = (string)o[''responseData'']", span="1610-1610", cluster="lambda expression", file="JObjectTests.cs"];
m4_956 [label="Exit lambda expression", span="1600-1611", cluster="lambda expression", file="JObjectTests.cs"];
m4_960 [label="Entry lambda expression", span="1618-1629", cluster="lambda expression", file="JObjectTests.cs"];
m4_961 [label="string json = @''{\r\n  ''''responseData'''': {}, \r\n  ''''responseDetails'''': null, \r\n  ''''responseStatus'''': 200\r\n}''", span="1620-1624", cluster="lambda expression", file="JObjectTests.cs"];
m4_962 [label="JObject o = JObject.Parse(json)", span="1626-1626", cluster="lambda expression", file="JObjectTests.cs"];
m4_963 [label="string name = (string)o.Property(''responseData'')", span="1628-1628", cluster="lambda expression", file="JObjectTests.cs"];
m4_964 [label="Exit lambda expression", span="1618-1629", cluster="lambda expression", file="JObjectTests.cs"];
m4_969 [label="Entry lambda expression", span="1636-1636", cluster="lambda expression", file="JObjectTests.cs"];
m4_970 [label="JObject.Parse(''{ foo:'')", span="1636-1636", cluster="lambda expression", file="JObjectTests.cs"];
m4_971 [label="Exit lambda expression", span="1636-1636", cluster="lambda expression", file="JObjectTests.cs"];
m4_991 [label="Entry lambda expression", span="1672-1689", cluster="lambda expression", file="JObjectTests.cs"];
m4_992 [label="string jsonText = @''{\r\n  ''''short'''':\r\n  {\r\n    ''''error'''':\r\n    {\r\n      ''''code'''':0''", span="1674-1679", cluster="lambda expression", file="JObjectTests.cs"];
m4_993 [label="JsonReader reader = new JsonTextReader(new StringReader(jsonText))", span="1681-1681", cluster="lambda expression", file="JObjectTests.cs"];
m4_994 [label="reader.Read()", span="1682-1682", cluster="lambda expression", file="JObjectTests.cs"];
m4_995 [label="reader.Read()", span="1683-1683", cluster="lambda expression", file="JObjectTests.cs"];
m4_996 [label="reader.Read()", span="1684-1684", cluster="lambda expression", file="JObjectTests.cs"];
m4_997 [label="reader.Read()", span="1685-1685", cluster="lambda expression", file="JObjectTests.cs"];
m4_998 [label="reader.Read()", span="1686-1686", cluster="lambda expression", file="JObjectTests.cs"];
m4_999 [label="JToken.ReadFrom(reader)", span="1688-1688", cluster="lambda expression", file="JObjectTests.cs"];
m4_1000 [label="Exit lambda expression", span="1672-1689", cluster="lambda expression", file="JObjectTests.cs"];
m4_1050 [label="string json = @''{\r\n''''Name'''': ''''Apple'''',\r\n''''Expiry'''': new Date(1230422400000),\r\n''''Price'''': 3.99,\r\n''''Sizes'''': [\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]\r\n}, 987987''", span="1759-1768", cluster="lambda expression", file="JObjectTests.cs"];
m4_1051 [label="JObject o = JObject.Parse(json)", span="1770-1770", cluster="lambda expression", file="JObjectTests.cs"];
m4_1052 [label="Exit lambda expression", span="1757-1771", cluster="lambda expression", file="JObjectTests.cs"];
m4_460 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", span="789-789", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="JObjectTests.cs"];
m4_461 [label="JProperty p = new JProperty(''Test'', 1)", span="791-791", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="JObjectTests.cs"];
m4_462 [label="IList l = new JObject(p)", span="792-792", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="JObjectTests.cs"];
m4_463 [label="Assert.IsTrue(l.Contains(p))", span="794-794", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="JObjectTests.cs"];
m4_464 [label="Assert.IsFalse(l.Contains(new JProperty(''Test'', 1)))", span="795-795", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="JObjectTests.cs"];
m4_465 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", span="789-789", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="JObjectTests.cs"];
m4_933 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", span="1563-1563", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", file="JObjectTests.cs"];
m4_934 [label="string json = @''{\r\n        ''''Name'''': ''''Name1'''',\r\n        ''''Name'''': ''''Name2''''\r\n      }''", span="1565-1568", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", file="JObjectTests.cs"];
m4_935 [label="JObject o = JObject.Parse(json)", span="1570-1570", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", file="JObjectTests.cs"];
m4_936 [label="string value = (string)o[''Name'']", span="1571-1571", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", file="JObjectTests.cs"];
m4_937 [label="Assert.AreEqual(''Name2'', value)", span="1573-1573", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", file="JObjectTests.cs"];
m4_938 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", span="1563-1563", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseMultipleProperties()", file="JObjectTests.cs"];
m4_986 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1820-1820", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JObjectTests.cs"];
m4_1091 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", span="1859-1859", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", file="JObjectTests.cs"];
m4_1092 [label="JObject o = JObject.Parse(@''{\r\n        'name': 'Lower',\r\n        'NAME': 'Upper'\r\n      }'')", span="1861-1864", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", file="JObjectTests.cs"];
m4_1093 [label="string exactMatch = (string)o.GetValue(''NAME'', StringComparison.OrdinalIgnoreCase)", span="1866-1866", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", file="JObjectTests.cs"];
m4_1094 [label="string ignoreCase = (string)o.GetValue(''Name'', StringComparison.OrdinalIgnoreCase)", span="1869-1869", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", file="JObjectTests.cs"];
m4_1095 [label="Assert.AreEqual(''Upper'', exactMatch)", span="1872-1872", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", file="JObjectTests.cs"];
m4_1096 [label="Assert.AreEqual(''Lower'', ignoreCase)", span="1873-1873", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", file="JObjectTests.cs"];
m4_1097 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", span="1859-1859", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GetValueBlogExample()", file="JObjectTests.cs"];
m4_715 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", span="1188-1188", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m4_716 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1190-1190", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m4_717 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1191-1191", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m4_718 [label="IList<JToken> l = new JObject(p1, p2)", span="1192-1192", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m4_722 [label="Assert.AreEqual(p1, l[0])", span="1199-1199", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m4_724 [label="Assert.AreEqual(p2, l[2])", span="1201-1201", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m4_719 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1194-1194", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m4_720 [label="l.Insert(1, p3)", span="1196-1196", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m4_721 [label="Assert.AreEqual(l, p3.Parent)", span="1197-1197", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m4_723 [label="Assert.AreEqual(p3, l[1])", span="1200-1200", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m4_725 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", span="1188-1188", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenInsert()", file="JObjectTests.cs"];
m4_972 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", span="1640-1640", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m4_973 [label="string jsonText = @''{\r\n  ''''short'''':\r\n  {\r\n    ''''error'''':\r\n    {\r\n      ''''code'''':0,\r\n      ''''msg'''':''''No action taken''''\r\n    }\r\n  }\r\n}''", span="1642-1651", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m4_974 [label="JsonReader reader = new JsonTextReader(new StringReader(jsonText))", span="1653-1653", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m4_975 [label="reader.Read()", span="1654-1654", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m4_976 [label="reader.Read()", span="1655-1655", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m4_977 [label="reader.Read()", span="1656-1656", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m4_978 [label="reader.Read()", span="1657-1657", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m4_979 [label="reader.Read()", span="1658-1658", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m4_980 [label="JObject o = (JObject)JToken.ReadFrom(reader)", span="1660-1660", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m4_981 [label="Assert.IsNotNull(o)", span="1661-1661", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m4_982 [label="Assert.AreEqual(@''{\r\n  ''''code'''': 0,\r\n  ''''msg'''': ''''No action taken''''\r\n}'', o.ToString(Formatting.Indented))", span="1662-1665", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m4_983 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", span="1640-1640", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.LoadFromNestedObject()", file="JObjectTests.cs"];
m4_1068 [label="Entry Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="119-119", cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JObjectTests.cs"];
m4_809 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListFind()", span="1341-1341", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListFind()", file="JObjectTests.cs"];
m4_810 [label="ExceptionAssert.Throws<NotSupportedException>(\r\n                ''Specified method is not supported.'',\r\n                () =>\r\n                {\r\n                    IBindingList l = new JObject();\r\n                    l.Find(null, null);\r\n                })", span="1343-1349", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListFind()", file="JObjectTests.cs"];
m4_811 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListFind()", span="1341-1341", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListFind()", file="JObjectTests.cs"];
m4_1081 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JObjectTests.cs"];
m4_266 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", span="451-451", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="JObjectTests.cs"];
m4_267 [label="JObject o = new JObject()", span="453-453", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="JObjectTests.cs"];
m4_268 [label="o[''val1''] = new JRaw(''1'')", span="454-454", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="JObjectTests.cs"];
m4_269 [label="o[''val2''] = new JRaw(''1'')", span="455-455", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="JObjectTests.cs"];
m4_270 [label="string json = o.ToString()", span="457-457", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="JObjectTests.cs"];
m4_271 [label="Assert.AreEqual(@''{\r\n  ''''val1'''': 1,\r\n  ''''val2'''': 1\r\n}'', json)", span="459-462", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="JObjectTests.cs"];
m4_272 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", span="451-451", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="JObjectTests.cs"];
m4_1040 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectGuid()", span="1745-1745", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectGuid()", file="JObjectTests.cs"];
m4_1041 [label="JValue v = (JValue)JToken.FromObject(new Guid(''9065ACF3-C820-467D-BE50-8D4664BEAF35''))", span="1747-1747", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectGuid()", file="JObjectTests.cs"];
m4_1042 [label="Assert.AreEqual(v.Value, new Guid(''9065ACF3-C820-467D-BE50-8D4664BEAF35''))", span="1748-1748", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectGuid()", file="JObjectTests.cs"];
m4_1043 [label="Assert.AreEqual(''9065acf3-c820-467d-be50-8d4664beaf35'', v.ToString())", span="1750-1750", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectGuid()", file="JObjectTests.cs"];
m4_1044 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectGuid()", span="1745-1745", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectGuid()", file="JObjectTests.cs"];
m4_492 [label="Entry System.Collections.ICollection.CopyTo(System.Array, int)", span="0-0", cluster="System.Collections.ICollection.CopyTo(System.Array, int)", file="JObjectTests.cs"];
m4_92 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", span="183-183", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", file="JObjectTests.cs"];
m4_93 [label="JObject o = new JObject()", span="185-185", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", file="JObjectTests.cs"];
m4_94 [label="((ICollection<KeyValuePair<string, JToken>>)o).Add(new KeyValuePair<string, JToken>(''PropertyNameValue'', new JValue(1)))", span="186-186", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", file="JObjectTests.cs"];
m4_95 [label="Assert.AreEqual(1, (int)o[''PropertyNameValue''])", span="188-188", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", file="JObjectTests.cs"];
m4_96 [label="Assert.AreEqual(1, o.Children().Count())", span="189-189", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", file="JObjectTests.cs"];
m4_97 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", span="183-183", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", file="JObjectTests.cs"];
m4_660 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadToken()", span="1102-1102", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadToken()", file="JObjectTests.cs"];
m4_661 [label="ExceptionAssert.Throws<ArgumentException>(''Can not add Newtonsoft.Json.Linq.JValue to Newtonsoft.Json.Linq.JObject.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList<JToken> l = new JObject(p1, p2);\r\n\r\n                    l.Add(new JValue(''Bad!''));\r\n                })", span="1104-1112", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadToken()", file="JObjectTests.cs"];
m4_662 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadToken()", span="1102-1102", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAddBadToken()", file="JObjectTests.cs"];
m4_52 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", span="126-126", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m4_53 [label="JObject o = new JObject()", span="128-128", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m4_54 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="129-129", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m4_55 [label="Assert.AreEqual(1, o.Children().Count())", span="130-130", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m4_56 [label="Assert.AreEqual(false, o.Remove(''sdf''))", span="132-132", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m4_57 [label="Assert.AreEqual(false, o.Remove(null))", span="133-133", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m4_58 [label="Assert.AreEqual(true, o.Remove(''PropertyNameValue''))", span="134-134", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m4_59 [label="Assert.AreEqual(0, o.Children().Count())", span="136-136", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m4_60 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", span="126-126", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="JObjectTests.cs"];
m4_152 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JObjectTests.cs"];
m4_985 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JObjectTests.cs"];
m4_503 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadToken()", span="852-852", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadToken()", file="JObjectTests.cs"];
m4_504 [label="ExceptionAssert.Throws<ArgumentException>(\r\n                ''Can not add Newtonsoft.Json.Linq.JValue to Newtonsoft.Json.Linq.JObject.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList l = new JObject(p1, p2);\r\n\r\n                    l.Add(new JValue(''Bad!''));\r\n                })", span="854-863", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadToken()", file="JObjectTests.cs"];
m4_505 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadToken()", span="852-852", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadToken()", file="JObjectTests.cs"];
m4_609 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", span="1019-1019", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", file="JObjectTests.cs"];
m4_610 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1021-1021", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", file="JObjectTests.cs"];
m4_611 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1022-1022", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", file="JObjectTests.cs"];
m4_612 [label="IList l = new JObject(p1, p2)", span="1023-1023", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", file="JObjectTests.cs"];
m4_613 [label="Assert.IsNotNull(l.SyncRoot)", span="1025-1025", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", file="JObjectTests.cs"];
m4_614 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", span="1019-1019", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSyncRoot()", file="JObjectTests.cs"];
m4_78 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JObjectTests.cs"];
m4_378 [label="Entry Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="374-374", cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JObjectTests.cs"];
m4_475 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", span="809-809", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="JObjectTests.cs"];
m4_476 [label="JProperty p = new JProperty(''Test'', 1)", span="811-811", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="JObjectTests.cs"];
m4_477 [label="IList l = new JObject(p)", span="812-812", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="JObjectTests.cs"];
m4_478 [label="Assert.AreEqual(1, l.Count)", span="814-814", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="JObjectTests.cs"];
m4_479 [label="l.Clear()", span="816-816", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="JObjectTests.cs"];
m4_480 [label="Assert.AreEqual(0, l.Count)", span="818-818", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="JObjectTests.cs"];
m4_481 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", span="809-809", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="JObjectTests.cs"];
m4_531 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", span="899-899", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_532 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="901-901", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_533 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="902-902", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_534 [label="IList l = new JObject(p1, p2)", span="903-903", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_538 [label="l.Remove(p1)", span="911-911", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_540 [label="Assert.IsFalse(l.Contains(p1))", span="913-913", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_541 [label="Assert.IsTrue(l.Contains(p2))", span="914-914", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_542 [label="l.Remove(p2)", span="916-916", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_544 [label="Assert.IsFalse(l.Contains(p2))", span="918-918", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_545 [label="Assert.AreEqual(null, p2.Parent)", span="919-919", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_535 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="905-905", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_536 [label="l.Remove(p3)", span="908-908", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_537 [label="Assert.AreEqual(2, l.Count)", span="909-909", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_539 [label="Assert.AreEqual(1, l.Count)", span="912-912", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_543 [label="Assert.AreEqual(0, l.Count)", span="917-917", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_546 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", span="899-899", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="JObjectTests.cs"];
m4_217 [label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="43-43", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JObjectTests.cs"];
m4_628 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", span="1049-1049", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", file="JObjectTests.cs"];
m4_629 [label="JProperty p = new JProperty(''Test'', 1)", span="1051-1051", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", file="JObjectTests.cs"];
m4_630 [label="IList<JToken> l = new JObject(p)", span="1052-1052", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", file="JObjectTests.cs"];
m4_631 [label="Assert.AreEqual(0, l.IndexOf(p))", span="1054-1054", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", file="JObjectTests.cs"];
m4_632 [label="Assert.AreEqual(-1, l.IndexOf(new JProperty(''Test'', 1)))", span="1055-1055", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", file="JObjectTests.cs"];
m4_633 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", span="1049-1049", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenIndexOf()", file="JObjectTests.cs"];
m4_548 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", span="923-923", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m4_549 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="925-925", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m4_550 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="926-926", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m4_551 [label="IList l = new JObject(p1, p2)", span="927-927", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m4_553 [label="l.Remove(p1)", span="932-932", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m4_555 [label="l.Remove(p2)", span="935-935", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m4_552 [label="l.RemoveAt(0)", span="930-930", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m4_554 [label="Assert.AreEqual(1, l.Count)", span="933-933", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m4_556 [label="Assert.AreEqual(0, l.Count)", span="936-936", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m4_557 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", span="923-923", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="JObjectTests.cs"];
m4_965 [label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="206-206", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JObjectTests.cs"];
m4_1152 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JObjectTests.cs"];
m4_829 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", span="1372-1372", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m4_830 [label="JObject o = new JObject()", span="1374-1374", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m4_831 [label="o._addingNew += (s, e) => e.NewObject = new JProperty(''Property!'')", span="1375-1375", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m4_832 [label="IBindingList l = o", span="1377-1377", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m4_837 [label="Assert.AreEqual(o, p.Parent)", span="1383-1383", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m4_833 [label="object newObject = l.AddNew()", span="1378-1378", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m4_834 [label="Assert.IsNotNull(newObject)", span="1379-1379", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m4_835 [label="JProperty p = (JProperty)newObject", span="1381-1381", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m4_836 [label="Assert.AreEqual(''Property!'', p.Name)", span="1382-1382", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m4_838 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", span="1372-1372", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNewWithEvent()", file="JObjectTests.cs"];
m4_328 [label="Entry Newtonsoft.Json.Tests.TestObjects.ShortieException.ShortieException()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ShortieException.ShortieException()", file="JObjectTests.cs"];
m4_731 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", span="1212-1212", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m4_732 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1214-1214", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m4_733 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1215-1215", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m4_734 [label="IList<JToken> l = new JObject(p1, p2)", span="1216-1216", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m4_738 [label="Assert.AreEqual(p2, l[1])", span="1223-1223", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m4_735 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1218-1218", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m4_736 [label="l[0] = p3", span="1220-1220", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m4_737 [label="Assert.AreEqual(p3, l[0])", span="1222-1222", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m4_739 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", span="1212-1212", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItem()", file="JObjectTests.cs"];
m4_740 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItemAlreadyExists()", span="1227-1227", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItemAlreadyExists()", file="JObjectTests.cs"];
m4_741 [label="ExceptionAssert.Throws<ArgumentException>(''Can not add property Test3 to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'',\r\n                () =>\r\n                {\r\n                    JProperty p1 = new JProperty(''Test1'', 1);\r\n                    JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                    IList<JToken> l = new JObject(p1, p2);\r\n\r\n                    JProperty p3 = new JProperty(''Test3'', ''III'');\r\n\r\n                    l[0] = p3;\r\n                    l[1] = p3;\r\n                })", span="1229-1240", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItemAlreadyExists()", file="JObjectTests.cs"];
m4_742 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItemAlreadyExists()", span="1227-1227", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenSetItemAlreadyExists()", file="JObjectTests.cs"];
m4_788 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListApplySort()", span="1309-1309", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListApplySort()", file="JObjectTests.cs"];
m4_789 [label="ExceptionAssert.Throws<NotSupportedException>(\r\n                ''Specified method is not supported.'',\r\n                () =>\r\n                {\r\n                    IBindingList l = new JObject();\r\n                    l.ApplySort(null, ListSortDirection.Ascending);\r\n                })", span="1311-1317", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListApplySort()", file="JObjectTests.cs"];
m4_790 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListApplySort()", span="1309-1309", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListApplySort()", file="JObjectTests.cs"];
m4_1026 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectTimeSpan()", span="1727-1727", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectTimeSpan()", file="JObjectTests.cs"];
m4_1027 [label="JValue v = (JValue)JToken.FromObject(TimeSpan.FromDays(1))", span="1729-1729", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectTimeSpan()", file="JObjectTests.cs"];
m4_1028 [label="Assert.AreEqual(v.Value, TimeSpan.FromDays(1))", span="1730-1730", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectTimeSpan()", file="JObjectTests.cs"];
m4_1029 [label="Assert.AreEqual(''1.00:00:00'', v.ToString())", span="1732-1732", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectTimeSpan()", file="JObjectTests.cs"];
m4_1030 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectTimeSpan()", span="1727-1727", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectTimeSpan()", file="JObjectTests.cs"];
m4_1053 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", span="1775-1775", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m4_1054 [label="JObject o1 = new JObject(\r\n                new JProperty(''null'', null),\r\n                new JProperty(''integer'', 1),\r\n                new JProperty(''string'', ''string!''),\r\n                new JProperty(''decimal'', 0.5m),\r\n                new JProperty(''array'', new JArray(1, 2)))", span="1777-1782", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m4_1055 [label="Assert.IsTrue(o1.DeepEquals(o1))", span="1784-1784", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m4_1057 [label="Assert.IsTrue(o1.DeepEquals(o2))", span="1793-1793", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m4_1059 [label="Assert.IsFalse(o1.DeepEquals(o3))", span="1802-1802", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m4_1061 [label="Assert.IsFalse(o1.DeepEquals(o4))", span="1811-1811", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m4_1063 [label="Assert.IsFalse(o1.DeepEquals(o5))", span="1819-1819", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m4_1064 [label="Assert.IsFalse(o1.DeepEquals(null))", span="1821-1821", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m4_1056 [label="JObject o2 = new JObject(\r\n                new JProperty(''null'', null),\r\n                new JProperty(''string'', ''string!''),\r\n                new JProperty(''decimal'', 0.5m),\r\n                new JProperty(''integer'', 1),\r\n                new JProperty(''array'', new JArray(1, 2)))", span="1786-1791", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m4_1058 [label="JObject o3 = new JObject(\r\n                new JProperty(''null'', null),\r\n                new JProperty(''string'', ''string!''),\r\n                new JProperty(''decimal'', 0.5m),\r\n                new JProperty(''integer'', 2),\r\n                new JProperty(''array'', new JArray(1, 2)))", span="1795-1800", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m4_1060 [label="JObject o4 = new JObject(\r\n                new JProperty(''null'', null),\r\n                new JProperty(''string'', ''string!''),\r\n                new JProperty(''decimal'', 0.5m),\r\n                new JProperty(''integer'', 1),\r\n                new JProperty(''array'', new JArray(2, 1)))", span="1804-1809", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m4_1062 [label="JObject o5 = new JObject(\r\n                new JProperty(''null'', null),\r\n                new JProperty(''string'', ''string!''),\r\n                new JProperty(''decimal'', 0.5m),\r\n                new JProperty(''integer'', 1))", span="1813-1817", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m4_1065 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", span="1775-1775", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeepEqualsIgnoreOrder()", file="JObjectTests.cs"];
m4_474 [label="Entry System.Collections.IList.IndexOf(object)", span="0-0", cluster="System.Collections.IList.IndexOf(object)", file="JObjectTests.cs"];
m4_848 [label="Entry System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])", span="0-0", cluster="System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])", file="JObjectTests.cs"];
m4_10 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", span="71-71", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="JObjectTests.cs"];
m4_11 [label="var o = new JObject()", span="73-73", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="JObjectTests.cs"];
m4_12 [label="var d = (IDictionary<string, JToken>)o", span="74-74", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="JObjectTests.cs"];
m4_14 [label="o[''value''] = true", span="78-78", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="JObjectTests.cs"];
m4_13 [label="Assert.AreEqual(0, d.Keys.Count)", span="76-76", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="JObjectTests.cs"];
m4_15 [label="Assert.AreEqual(1, d.Keys.Count)", span="80-80", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="JObjectTests.cs"];
m4_16 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", span="71-71", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="JObjectTests.cs"];
m4_1144 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", span="1943-1943", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", file="JObjectTests.cs"];
m4_1145 [label="var p = new Person\r\n            {\r\n                Name = ''Daniel Wertheim'',\r\n            }", span="1945-1948", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", file="JObjectTests.cs"];
m4_1146 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                Converters = new List<JsonConverter> { new FooJsonConverter() },\r\n                ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n            }", span="1950-1954", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", file="JObjectTests.cs"];
m4_1147 [label="var json = JsonConvert.SerializeObject(p, settings)", span="1956-1956", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", file="JObjectTests.cs"];
m4_1148 [label="Assert.AreEqual(@''{''''foo'''':''''bar'''',''''name'''':''''Daniel Wertheim'''',''''birthDate'''':''''0001-01-01T00:00:00'''',''''lastModified'''':''''0001-01-01T00:00:00''''}'', json)", span="1958-1958", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", file="JObjectTests.cs"];
m4_1149 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", span="1943-1943", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FromObjectInsideConverterWithCustomSerializer()", file="JObjectTests.cs"];
m4_305 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", span="520-520", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m4_306 [label="string json = @''{\r\n        ''''Name'''': ''''Apple'''',\r\n        ''''Expiry'''': new Date(1230422400000),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': [\r\n          ''''Small'''',\r\n          ''''Medium'''',\r\n          ''''Large''''\r\n        ]\r\n      }''", span="522-531", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m4_307 [label="JObject o = JObject.Parse(json)", span="533-533", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m4_308 [label="string name = (string)o[''Name'']", span="535-535", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m4_309 [label="JArray sizes = (JArray)o[''Sizes'']", span="538-538", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m4_311 [label="Console.WriteLine(name)", span="543-543", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m4_310 [label="string smallest = (string)sizes[0]", span="540-540", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m4_312 [label="Console.WriteLine(smallest)", span="544-544", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m4_313 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", span="520-520", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="JObjectTests.cs"];
m4_482 [label="Entry System.Collections.IList.Clear()", span="0-0", cluster="System.Collections.IList.Clear()", file="JObjectTests.cs"];
m4_579 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", span="971-971", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m4_580 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="973-973", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m4_581 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="974-974", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m4_582 [label="IList l = new JObject(p1, p2)", span="975-975", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m4_586 [label="Assert.AreEqual(p2, l[1])", span="982-982", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m4_583 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="977-977", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m4_584 [label="l[0] = p3", span="979-979", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m4_585 [label="Assert.AreEqual(p3, l[0])", span="981-981", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m4_587 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", span="971-971", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="JObjectTests.cs"];
m4_771 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowEdit()", span="1280-1280", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowEdit()", file="JObjectTests.cs"];
m4_772 [label="IBindingList l = new JObject()", span="1282-1282", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowEdit()", file="JObjectTests.cs"];
m4_773 [label="Assert.AreEqual(true, l.AllowEdit)", span="1283-1283", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowEdit()", file="JObjectTests.cs"];
m4_774 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowEdit()", span="1280-1280", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAllowEdit()", file="JObjectTests.cs"];
m4_622 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", span="1039-1039", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", file="JObjectTests.cs"];
m4_623 [label="JProperty p = new JProperty(''Test'', 1)", span="1041-1041", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", file="JObjectTests.cs"];
m4_624 [label="IList<JToken> l = new JObject(p)", span="1042-1042", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", file="JObjectTests.cs"];
m4_625 [label="Assert.IsTrue(l.Contains(p))", span="1044-1044", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", file="JObjectTests.cs"];
m4_626 [label="Assert.IsFalse(l.Contains(new JProperty(''Test'', 1)))", span="1045-1045", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", file="JObjectTests.cs"];
m4_627 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", span="1039-1039", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenContains()", file="JObjectTests.cs"];
m4_73 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JObjectTests.cs"];
m4_110 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", span="208-208", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_111 [label="JValue v = new JValue(1)", span="210-210", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_112 [label="JObject o = new JObject()", span="211-211", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_113 [label="o.Add(''PropertyNameValue'', v)", span="212-212", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_117 [label="contains = ((ICollection<KeyValuePair<string, JToken>>)o).Contains(new KeyValuePair<string, JToken>(''PropertyNameValue'', v))", span="218-218", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_114 [label="Assert.AreEqual(1, o.Children().Count())", span="213-213", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_115 [label="bool contains = ((ICollection<KeyValuePair<string, JToken>>)o).Contains(new KeyValuePair<string, JToken>(''PropertyNameValue'', new JValue(1)))", span="215-215", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_119 [label="contains = ((ICollection<KeyValuePair<string, JToken>>)o).Contains(new KeyValuePair<string, JToken>(''PropertyNameValue'', new JValue(2)))", span="221-221", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_121 [label="contains = ((ICollection<KeyValuePair<string, JToken>>)o).Contains(new KeyValuePair<string, JToken>(''PropertyNameValue1'', new JValue(1)))", span="224-224", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_123 [label="contains = ((ICollection<KeyValuePair<string, JToken>>)o).Contains(default(KeyValuePair<string, JToken>))", span="227-227", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_116 [label="Assert.AreEqual(false, contains)", span="216-216", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_118 [label="Assert.AreEqual(true, contains)", span="219-219", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_120 [label="Assert.AreEqual(false, contains)", span="222-222", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_122 [label="Assert.AreEqual(false, contains)", span="225-225", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_124 [label="Assert.AreEqual(false, contains)", span="228-228", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_125 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", span="208-208", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="JObjectTests.cs"];
m4_260 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Blog()", span="440-440", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Blog()", file="JObjectTests.cs"];
m4_261 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Invalid property identifier character: ]. Path 'name', line 3, position 5.'',\r\n                () => { JObject.Parse(@''{\r\n    ''''name'''': ''''James'''',\r\n    ]!#$THIS IS: BAD JSON![{}}}}]\r\n  }''); })", span="442-447", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Blog()", file="JObjectTests.cs"];
m4_262 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Blog()", span="440-440", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Blog()", file="JObjectTests.cs"];
m4_192 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JObjectTests.cs"];
m4_336 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", span="617-617", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_337 [label="JObject moss = new JObject()", span="619-619", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_338 [label="moss[''FirstName''] = new JValue(''Maurice'')", span="620-620", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_339 [label="moss[''LastName''] = new JValue(''Moss'')", span="621-621", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_340 [label="moss[''BirthDate''] = new JValue(new DateTime(1977, 12, 30))", span="622-622", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_341 [label="moss[''Department''] = new JValue(''IT'')", span="623-623", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_342 [label="moss[''JobTitle''] = new JValue(''Support'')", span="624-624", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_343 [label="Console.WriteLine(moss.ToString())", span="626-626", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_344 [label="JObject jen = new JObject()", span="636-636", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_345 [label="jen[''FirstName''] = ''Jen''", span="637-637", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_346 [label="jen[''LastName''] = ''Barber''", span="638-638", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_347 [label="jen[''BirthDate''] = new DateTime(1978, 3, 15)", span="639-639", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_348 [label="jen[''Department''] = ''IT''", span="640-640", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_349 [label="jen[''JobTitle''] = ''Manager''", span="641-641", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_350 [label="Console.WriteLine(jen.ToString())", span="643-643", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_351 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", span="617-617", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="JObjectTests.cs"];
m4_1133 [label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="1670-1670", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JObjectTests.cs"];
m4_354 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", span="654-654", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_355 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="656-656", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_356 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="657-657", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_357 [label="JObject o = new JObject(p1, p2)", span="659-659", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_359 [label="Assert.AreEqual(p1, l[0])", span="661-661", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_362 [label="p1.Replace(p3)", span="666-666", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_363 [label="Assert.AreEqual(null, p1.Parent)", span="667-667", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_360 [label="Assert.AreEqual(p2, l[1])", span="662-662", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_366 [label="Assert.AreEqual(p2, l[1])", span="671-671", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_370 [label="p2.Replace(p4)", span="678-678", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_371 [label="Assert.AreEqual(null, p2.Parent)", span="679-679", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_358 [label="IList l = o", span="660-660", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_368 [label="Assert.AreEqual(2, o.Properties().Count())", span="674-674", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_364 [label="Assert.AreEqual(l, p3.Parent)", span="668-668", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_365 [label="Assert.AreEqual(p3, l[0])", span="670-670", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_367 [label="Assert.AreEqual(2, l.Count)", span="673-673", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_372 [label="Assert.AreEqual(l, p4.Parent)", span="680-680", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_373 [label="Assert.AreEqual(p3, l[0])", span="682-682", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_374 [label="Assert.AreEqual(p4, l[1])", span="683-683", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_361 [label="JProperty p3 = new JProperty(''Test1'', ''III'')", span="664-664", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_369 [label="JProperty p4 = new JProperty(''Test4'', ''IV'')", span="676-676", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_375 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", span="654-654", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="JObjectTests.cs"];
m4_651 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", span="1087-1087", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m4_652 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="1089-1089", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m4_653 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="1090-1090", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m4_654 [label="IList<JToken> l = new JObject(p1, p2)", span="1091-1091", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m4_655 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1093-1093", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m4_656 [label="l.Add(p3)", span="1095-1095", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m4_657 [label="Assert.AreEqual(3, l.Count)", span="1097-1097", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m4_658 [label="Assert.AreEqual(p3, l[2])", span="1098-1098", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m4_659 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", span="1087-1087", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericListJTokenAdd()", file="JObjectTests.cs"];
m4_1020 [label="Entry System.ComponentModel.PropertyDescriptor.CanResetValue(object)", span="0-0", cluster="System.ComponentModel.PropertyDescriptor.CanResetValue(object)", file="JObjectTests.cs"];
m4_233 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Parse_ShouldThrowOnUnexpectedToken()", span="404-404", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Parse_ShouldThrowOnUnexpectedToken()", file="JObjectTests.cs"];
m4_234 [label="ExceptionAssert.Throws<JsonReaderException>(''Error reading JObject from JsonReader. Current JsonReader item is not an object: StartArray. Path '', line 1, position 1.'',\r\n                () =>\r\n                {\r\n                    string json = @''[''''prop'''']'';\r\n                    JObject.Parse(json);\r\n                })", span="406-411", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Parse_ShouldThrowOnUnexpectedToken()", file="JObjectTests.cs"];
m4_235 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Parse_ShouldThrowOnUnexpectedToken()", span="404-404", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Parse_ShouldThrowOnUnexpectedToken()", file="JObjectTests.cs"];
m4_7 [label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="550-550", cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="JObjectTests.cs"];
m4_1019 [label="Entry System.ComponentModel.ICustomTypeDescriptor.GetProperties()", span="0-0", cluster="System.ComponentModel.ICustomTypeDescriptor.GetProperties()", file="JObjectTests.cs"];
m4_1141 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.CanConvert(System.Type)", span="1936-1936", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.CanConvert(System.Type)", file="JObjectTests.cs"];
m4_1142 [label="return true;", span="1938-1938", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.CanConvert(System.Type)", file="JObjectTests.cs"];
m4_1143 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.CanConvert(System.Type)", span="1936-1936", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.FooJsonConverter.CanConvert(System.Type)", file="JObjectTests.cs"];
m4_966 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ParseIncomplete()", span="1633-1633", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseIncomplete()", file="JObjectTests.cs"];
m4_967 [label="ExceptionAssert.Throws<Exception>(''Unexpected end of content while loading JObject. Path 'foo', line 1, position 6.'',\r\n                () => { JObject.Parse(''{ foo:''); })", span="1635-1636", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseIncomplete()", file="JObjectTests.cs"];
m4_968 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ParseIncomplete()", span="1633-1633", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseIncomplete()", file="JObjectTests.cs"];
m4_821 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNew()", span="1360-1360", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNew()", file="JObjectTests.cs"];
m4_822 [label="ExceptionAssert.Throws<JsonException>(\r\n                ''Could not determine new value to add to 'Newtonsoft.Json.Linq.JObject'.'',\r\n                () =>\r\n                {\r\n                    IBindingList l = new JObject();\r\n                    l.AddNew();\r\n                })", span="1362-1368", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNew()", file="JObjectTests.cs"];
m4_823 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNew()", span="1360-1360", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListAddNew()", file="JObjectTests.cs"];
m4_1134 [label="Entry Newtonsoft.Json.Linq.JContainer.AddFirst(object)", span="564-564", cluster="Newtonsoft.Json.Linq.JContainer.AddFirst(object)", file="JObjectTests.cs"];
m4_1136 [label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="387-387", cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObjectTests.cs"];
m4_1135 [label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="369-369", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObjectTests.cs"];
m4_817 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListIsSorted()", span="1353-1353", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListIsSorted()", file="JObjectTests.cs"];
m4_818 [label="IBindingList l = new JObject()", span="1355-1355", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListIsSorted()", file="JObjectTests.cs"];
m4_819 [label="Assert.AreEqual(false, l.IsSorted)", span="1356-1356", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListIsSorted()", file="JObjectTests.cs"];
m4_820 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListIsSorted()", span="1353-1353", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IBindingListIsSorted()", file="JObjectTests.cs"];
m4_949 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidValueCastExceptionMessage()", span="1597-1597", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidValueCastExceptionMessage()", file="JObjectTests.cs"];
m4_950 [label="ExceptionAssert.Throws<ArgumentException>(''Can not convert Object to String.'',\r\n                () =>\r\n                {\r\n                    string json = @''{\r\n  ''''responseData'''': {}, \r\n  ''''responseDetails'''': null, \r\n  ''''responseStatus'''': 200\r\n}'';\r\n\r\n                    JObject o = JObject.Parse(json);\r\n\r\n                    string name = (string)o[''responseData''];\r\n                })", span="1599-1611", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidValueCastExceptionMessage()", file="JObjectTests.cs"];
m4_951 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidValueCastExceptionMessage()", span="1597-1597", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.InvalidValueCastExceptionMessage()", file="JObjectTests.cs"];
m4_1033 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="753-753", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JObjectTests.cs"];
m4_248 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="181-181", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JObjectTests.cs"];
m4_249 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", span="426-426", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m4_250 [label="string json = @''{''''foo'''':true}''", span="428-428", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m4_251 [label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="429-429", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m4_252 [label="bool? value = o.Value<bool?>(''foo'')", span="430-430", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m4_253 [label="Assert.AreEqual(true, value)", span="431-431", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m4_254 [label="json = @''{''''foo'''':null}''", span="433-433", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m4_255 [label="o = (JObject)JsonConvert.DeserializeObject(json)", span="434-434", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m4_256 [label="value = o.Value<bool?>(''foo'')", span="435-435", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m4_257 [label="Assert.AreEqual(null, value)", span="436-436", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m4_258 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", span="426-426", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="JObjectTests.cs"];
m4_502 [label="Entry System.Collections.IList.Add(object)", span="0-0", cluster="System.Collections.IList.Add(object)", file="JObjectTests.cs"];
m4_429 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", span="748-748", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_430 [label="object changed = null", span="750-750", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_431 [label="int changedCount = 0", span="751-751", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_432 [label="JObject o = new JObject()", span="753-753", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_433 [label="o.PropertyChanged += (sender, args) =>\r\n            {\r\n                JObject s = (JObject)sender;\r\n                changed = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null;\r\n                changedCount++;\r\n            }", span="754-759", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_434 [label="o[''StringValue''] = ''value1''", span="761-761", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_436 [label="Assert.AreEqual(''value1'', (string)o[''StringValue''])", span="763-763", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_438 [label="o[''StringValue''] = ''value1''", span="766-766", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_440 [label="o[''StringValue''] = ''value2''", span="769-769", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_442 [label="Assert.AreEqual(''value2'', (string)o[''StringValue''])", span="771-771", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_444 [label="o[''StringValue''] = null", span="774-774", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_446 [label="Assert.AreEqual(null, (string)o[''StringValue''])", span="776-776", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_448 [label="o[''NullValue''] = null", span="779-779", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_450 [label="Assert.AreEqual(new JValue((object)null), o[''NullValue''])", span="781-781", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_452 [label="o[''NullValue''] = null", span="784-784", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_435 [label="Assert.AreEqual(''value1'', changed)", span="762-762", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_437 [label="Assert.AreEqual(1, changedCount)", span="764-764", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_439 [label="Assert.AreEqual(1, changedCount)", span="767-767", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_441 [label="Assert.AreEqual(''value2'', changed)", span="770-770", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_443 [label="Assert.AreEqual(2, changedCount)", span="772-772", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_445 [label="Assert.AreEqual(null, changed)", span="775-775", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_447 [label="Assert.AreEqual(3, changedCount)", span="777-777", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_449 [label="Assert.AreEqual(null, changed)", span="780-780", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_451 [label="Assert.AreEqual(4, changedCount)", span="782-782", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_453 [label="Assert.AreEqual(4, changedCount)", span="785-785", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_454 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", span="748-748", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="JObjectTests.cs"];
m4_34 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="150-150", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObjectTests.cs"];
m4_1155 [label=changingCount, span="", file="JObjectTests.cs"];
m4_1156 [label=changedCount, span="", file="JObjectTests.cs"];
m4_1157 [label=changedCount, span="", file="JObjectTests.cs"];
m5_349 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="612-612", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JPath.cs"];
m5_350 [label="return GetAttribute<T>(attributeProvider, true);", span="614-614", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JPath.cs"];
m5_351 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="612-612", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="JPath.cs"];
m5_458 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="810-810", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_462 [label="(bindingAttr & BindingFlags.NonPublic) != 0", span="814-814", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_463 [label="BindingFlags nonPublicBindingAttr = bindingAttr.RemoveFlag(BindingFlags.Public)", span="817-817", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_464 [label="(targetType = targetType.BaseType) != null", span="819-819", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_467 [label="int index = initialProperties.IndexOf(p => p.Name == nonPublicProperty.Name)", span="827-827", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_469 [label="initialProperties.Add(nonPublicProperty)", span="830-830", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_470 [label="initialProperties[index] = nonPublicProperty", span="837-837", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_465 [label="targetType.GetProperties(nonPublicBindingAttr)", span="821-821", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_466 [label="PropertyInfo nonPublicProperty = propertyInfo", span="823-823", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_468 [label="index == -1", span="828-828", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_471 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="810-810", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateProperties(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_154 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="294-294", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_155 [label="ValidationUtils.ArgumentNotNull(dictionaryType, ''type'')", span="296-296", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_159 [label="throw new Exception(''Type {0} is not a dictionary.''.FormatWith(CultureInfo.InvariantCulture, dictionaryType));", span="302-302", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_168 [label="throw new Exception(''Type {0} is not a dictionary.''.FormatWith(CultureInfo.InvariantCulture, dictionaryType));", span="318-318", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_156 [label="Type genericDictionaryType", span="298-298", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_158 [label="genericDictionaryType.IsGenericTypeDefinition", span="301-301", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_164 [label="typeof(IDictionary).IsAssignableFrom(dictionaryType)", span="310-310", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_157 [label="ImplementsGenericDefinition(dictionaryType, typeof(IDictionary<,>), out genericDictionaryType)", span="299-299", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_160 [label="Type[] dictionaryGenericArguments = genericDictionaryType.GetGenericArguments()", span="304-304", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_161 [label="keyType = dictionaryGenericArguments[0]", span="306-306", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_162 [label="valueType = dictionaryGenericArguments[1]", span="307-307", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_163 [label="return;", span="308-308", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_165 [label="keyType = null", span="312-312", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_166 [label="valueType = null", span="313-313", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_167 [label="return;", span="314-314", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_169 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="294-294", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JPath.cs"];
m5_325 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="JPath.cs"];
m5_329 [label="Entry Unk.IsOverridenGenericMember", span="", cluster="Unk.IsOverridenGenericMember", file="JPath.cs"];
m5_152 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="JPath.cs"];
m5_438 [label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="JPath.cs"];
m5_109 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="JPath.cs"];
m5_251 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="495-495", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_252 [label="member.MemberType", span="497-497", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_254 [label="FieldInfo fieldInfo = (FieldInfo)member", span="500-500", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_255 [label=nonPublic, span="502-502", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_261 [label="PropertyInfo propertyInfo = (PropertyInfo) member", span="508-508", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_264 [label=nonPublic, span="512-512", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_266 [label="return (propertyInfo.GetGetMethod(nonPublic) != null);", span="514-514", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_267 [label="return false;", span="516-516", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_256 [label="return true;", span="503-503", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_258 [label="return true;", span="505-505", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_259 [label="return false;", span="506-506", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_263 [label="return false;", span="511-511", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_265 [label="return true;", span="513-513", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_253 [label="MemberTypes.Field", span="499-499", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_260 [label="MemberTypes.Property", span="507-507", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_257 [label="fieldInfo.IsPublic", span="504-504", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_262 [label="!propertyInfo.CanRead", span="510-510", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_268 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="495-495", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_379 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", span="652-652", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", file="JPath.cs"];
m5_380 [label="return CreateGeneric(genericTypeDefinition, innerTypes, (t, a) => CreateInstance(t, a.ToArray()), args);", span="654-654", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", file="JPath.cs"];
m5_381 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", span="652-652", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, params object[])", file="JPath.cs"];
m5_448 [label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="194-194", cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="JPath.cs"];
m5_374 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentConditionTrue(bool, string, string)", span="142-142", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentConditionTrue(bool, string, string)", file="JPath.cs"];
m5_312 [label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JPath.cs"];
m5_69 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="144-144", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="JPath.cs"];
m5_71 [label="return ImplementsGenericDefinition(type, genericInterfaceDefinition, out implementingType);", span="147-147", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="JPath.cs"];
m5_70 [label="Type implementingType", span="146-146", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="JPath.cs"];
m5_72 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", span="144-144", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type)", file="JPath.cs"];
m5_395 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", span="668-668", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", file="JPath.cs"];
m5_397 [label="return IsNullable(type);", span="671-671", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", file="JPath.cs"];
m5_396 [label="value == null", span="670-670", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", file="JPath.cs"];
m5_398 [label="type.IsAssignableFrom(value.GetType())", span="673-673", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", file="JPath.cs"];
m5_399 [label="return true;", span="674-674", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", file="JPath.cs"];
m5_400 [label="return false;", span="676-676", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", file="JPath.cs"];
m5_401 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", span="668-668", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsCompatibleValue(object, System.Type)", file="JPath.cs"];
m5_314 [label="Entry Unk.First", span="", cluster="Unk.First", file="JPath.cs"];
m5_357 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", span="311-311", cluster="Newtonsoft.Json.Utilities.CollectionUtils.GetSingleItem<T>(System.Collections.Generic.IList<T>, bool)", file="JPath.cs"];
m5_437 [label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="JPath.cs"];
m5_12 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JPath.cs"];
m5_316 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="JPath.cs"];
m5_315 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="JPath.cs"];
m5_68 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="73-73", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="JPath.cs"];
m5_137 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="268-268", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JPath.cs"];
m5_138 [label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="270-270", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JPath.cs"];
m5_144 [label="throw new Exception(''Type {0} is not a collection.''.FormatWith(CultureInfo.InvariantCulture, type));", span="280-280", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JPath.cs"];
m5_148 [label="throw new Exception(''Type {0} is not a collection.''.FormatWith(CultureInfo.InvariantCulture, type));", span="290-290", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JPath.cs"];
m5_139 [label="Type genericListType", span="271-271", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JPath.cs"];
m5_143 [label="genericListType.IsGenericTypeDefinition", span="279-279", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JPath.cs"];
m5_146 [label="typeof(IEnumerable).IsAssignableFrom(type)", span="284-284", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JPath.cs"];
m5_142 [label="ImplementsGenericDefinition(type, typeof(IEnumerable<>), out genericListType)", span="277-277", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JPath.cs"];
m5_140 [label="type.IsArray", span="273-273", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JPath.cs"];
m5_141 [label="return type.GetElementType();", span="275-275", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JPath.cs"];
m5_145 [label="return genericListType.GetGenericArguments()[0];", span="282-282", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JPath.cs"];
m5_147 [label="return null;", span="286-286", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JPath.cs"];
m5_149 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="268-268", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JPath.cs"];
m5_16 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="59-59", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="JPath.cs"];
m5_17 [label="ValidationUtils.ArgumentNotNull(t, ''t'')", span="61-61", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="JPath.cs"];
m5_18 [label="t.IsValueType", span="63-63", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="JPath.cs"];
m5_20 [label="return (GetDefaultConstructor(t, nonPublic) != null);", span="66-66", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="JPath.cs"];
m5_19 [label="return true;", span="64-64", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="JPath.cs"];
m5_21 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="59-59", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="JPath.cs"];
m5_294 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="560-560", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_295 [label="List<MemberInfo> targetMembers = new List<MemberInfo>()", span="562-562", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", color=green, community=0, file="JPath.cs"];
m5_296 [label="targetMembers.AddRange(GetFields(type, bindingAttr))", span="564-564", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", color=green, community=0, file="JPath.cs"];
m5_297 [label="targetMembers.AddRange(GetProperties(type, bindingAttr))", span="565-565", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", color=green, community=0, file="JPath.cs"];
m5_298 [label="List<MemberInfo> distinctMembers = new List<MemberInfo>(targetMembers.Count)", span="571-571", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_299 [label="var groupedMembers = targetMembers.GroupBy(m => m.Name).Select(g => new { Count = g.Count(), Members = g.Cast<MemberInfo>() })", span="573-573", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_303 [label="var members = groupedMember.Members.Where(m => !IsOverridenGenericMember(m, bindingAttr) || m.Name == ''Item'')", span="582-582", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_302 [label="distinctMembers.Add(groupedMember.Members.First())", span="578-578", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_304 [label="distinctMembers.AddRange(members)", span="584-584", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_305 [label="return distinctMembers;", span="588-588", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_300 [label=groupedMembers, span="574-574", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_301 [label="groupedMember.Count == 1", span="576-576", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_306 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="560-560", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_151 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JPath.cs"];
m5_0 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="36-36", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="JPath.cs"];
m5_1 [label="return (v != null) ? v.GetType() : null;", span="38-38", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="JPath.cs"];
m5_2 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="36-36", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="JPath.cs"];
m5_61 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JPath.cs"];
m5_38 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="94-94", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JPath.cs"];
m5_39 [label="ValidationUtils.ArgumentNotNull(t, ''t'')", span="96-96", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JPath.cs"];
m5_40 [label="return (t.IsGenericType && t.GetGenericTypeDefinition() == typeof(Nullable<>));", span="98-98", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JPath.cs"];
m5_41 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="94-94", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JPath.cs"];
m5_324 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JPath.cs"];
m5_375 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])", file="JPath.cs"];
m5_311 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="JPath.cs"];
m5_93 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JPath.cs"];
m5_361 [label="Entry System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type, bool)", file="JPath.cs"];
m5_238 [label="Entry System.ArgumentException.ArgumentException(string, System.Exception)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, System.Exception)", file="JPath.cs"];
m5_386 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JPath.cs"];
m5_110 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string)", span="218-218", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string)", file="JPath.cs"];
m5_111 [label="Type match", span="220-220", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string)", file="JPath.cs"];
m5_112 [label="return type.AssignableToTypeName(fullTypeName, out match);", span="221-221", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string)", file="JPath.cs"];
m5_113 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string)", span="218-218", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string)", file="JPath.cs"];
m5_182 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", span="345-345", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_183 [label="ValidationUtils.ArgumentNotNull(list, ''list'')", span="347-347", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_199 [label="throw new Exception(''Type {0} is neither a ValueType or a Class.''.FormatWith(CultureInfo.InvariantCulture, elementType));", span="373-373", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_184 [label="Type elementType = GetCollectionItemType(list.GetType())", span="349-349", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_192 [label="elementType.IsClass", span="361-361", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_188 [label="i < list.Count", span="355-355", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_189 [label="!list[i].Equals(unitializedValue)", span="357-357", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_194 [label="i < list.Count", span="363-363", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_195 [label="object value = list[i]", span="365-365", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_186 [label="object unitializedValue = CreateUnitializedValue(elementType)", span="353-353", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_185 [label="elementType.IsValueType", span="351-351", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_193 [label="int i = 0", span="363-363", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_200 [label="return true;", span="376-376", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_190 [label="return false;", span="358-358", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_197 [label="return false;", span="368-368", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_187 [label="int i = 0", span="355-355", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_191 [label="i++", span="355-355", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_198 [label="i++", span="363-363", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_196 [label="value != null", span="367-367", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_201 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", span="345-345", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ItemsUnitializedValue<T>(System.Collections.Generic.IList<T>)", file="JPath.cs"];
m5_330 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", span="591-591", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_343 [label="!memberUnderlyingType.IsGenericParameter", span="606-606", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", color=green, community=0, file="JPath.cs"];
m5_342 [label="Type memberUnderlyingType = GetMemberUnderlyingType(members[0])", span="605-605", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_344 [label="return false;", span="607-607", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_345 [label="return true;", span="609-609", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", color=green, community=0, file="JPath.cs"];
m5_339 [label="MemberInfo[] members = genericTypeDefinition.GetMember(memberInfo.Name, bindingAttr)", span="602-602", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_340 [label="members.Length == 0", span="603-603", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_332 [label="throw new ArgumentException(''Member must be a field or property.'');", span="594-594", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_335 [label="return false;", span="598-598", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_338 [label="return false;", span="601-601", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_341 [label="return false;", span="604-604", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_336 [label="Type genericTypeDefinition = declaringType.GetGenericTypeDefinition()", span="599-599", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_337 [label="genericTypeDefinition == null", span="600-600", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_331 [label="memberInfo.MemberType != MemberTypes.Field && memberInfo.MemberType != MemberTypes.Property", span="593-593", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_334 [label="!declaringType.IsGenericType", span="597-597", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_333 [label="Type declaringType = memberInfo.DeclaringType", span="596-596", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_346 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", span="591-591", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsOverridenGenericMember(System.Reflection.MemberInfo, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_270 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", span="528-528", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_273 [label="FieldInfo fieldInfo = (FieldInfo)member", span="533-533", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_272 [label="MemberTypes.Field", span="532-532", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_274 [label="fieldInfo.IsInitOnly", span="535-535", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_278 [label="fieldInfo.IsPublic", span="539-539", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_276 [label=nonPublic, span="537-537", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_277 [label="return true;", span="538-538", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_282 [label="PropertyInfo propertyInfo = (PropertyInfo)member", span="543-543", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_281 [label="MemberTypes.Property", span="542-542", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_283 [label="!propertyInfo.CanWrite", span="545-545", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_287 [label="return (propertyInfo.GetSetMethod(nonPublic) != null);", span="549-549", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_285 [label=nonPublic, span="547-547", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_286 [label="return true;", span="548-548", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_271 [label="member.MemberType", span="530-530", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_288 [label="return false;", span="551-551", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_275 [label="return false;", span="536-536", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_279 [label="return true;", span="540-540", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_280 [label="return false;", span="541-541", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_284 [label="return false;", span="546-546", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", color=green, community=0, file="JPath.cs"];
m5_289 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", span="528-528", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="JPath.cs"];
m5_416 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="JPath.cs"];
m5_406 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="718-718", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JPath.cs"];
m5_407 [label="int? assemblyDelimiterIndex = GetAssemblyDelimiterIndex(fullyQualifiedTypeName)", span="720-720", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JPath.cs"];
m5_408 [label="assemblyDelimiterIndex != null", span="722-722", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JPath.cs"];
m5_409 [label="typeName = fullyQualifiedTypeName.Substring(0, assemblyDelimiterIndex.Value).Trim()", span="724-724", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JPath.cs"];
m5_410 [label="assemblyName = fullyQualifiedTypeName.Substring(assemblyDelimiterIndex.Value + 1, fullyQualifiedTypeName.Length - assemblyDelimiterIndex.Value - 1).Trim()", span="725-725", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JPath.cs"];
m5_411 [label="typeName = fullyQualifiedTypeName", span="729-729", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JPath.cs"];
m5_412 [label="assemblyName = null", span="730-730", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JPath.cs"];
m5_413 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="718-718", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JPath.cs"];
m5_415 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="JPath.cs"];
m5_249 [label="Entry System.Reflection.FieldInfo.SetValue(object, object)", span="0-0", cluster="System.Reflection.FieldInfo.SetValue(object, object)", file="JPath.cs"];
m5_220 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", span="427-427", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="JPath.cs"];
m5_221 [label="ValidationUtils.ArgumentNotNull(property, ''property'')", span="429-429", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="JPath.cs"];
m5_222 [label="return (property.GetIndexParameters().Length > 0);", span="431-431", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="JPath.cs"];
m5_223 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", span="427-427", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.PropertyInfo)", file="JPath.cs"];
m5_382 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", span="657-657", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="JPath.cs"];
m5_388 [label="ValidationUtils.ArgumentNotNull(genericTypeDefinition, ''genericTypeDefinition'')", span="659-659", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="JPath.cs"];
m5_390 [label="ValidationUtils.ArgumentNotNull(instanceCreator, ''createInstance'')", span="661-661", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="JPath.cs"];
m5_391 [label="Type specificType = MakeGenericType(genericTypeDefinition, innerTypes.ToArray())", span="663-663", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="JPath.cs"];
m5_389 [label="ValidationUtils.ArgumentNotNullOrEmpty(innerTypes, ''innerTypes'')", span="660-660", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="JPath.cs"];
m5_392 [label="return instanceCreator(specificType, args);", span="665-665", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="JPath.cs"];
m5_393 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", span="657-657", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Collections.Generic.IList<System.Type>, System.Func<System.Type, System.Collections.Generic.IList<object>, object>, params object[])", file="JPath.cs"];
m5_352 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", span="617-617", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", file="JPath.cs"];
m5_353 [label="T[] attributes = GetAttributes<T>(attributeProvider, inherit)", span="619-619", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", color=green, community=0, file="JPath.cs"];
m5_354 [label="return CollectionUtils.GetSingleItem(attributes, true);", span="621-621", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", file="JPath.cs"];
m5_355 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", span="617-617", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(System.Reflection.ICustomAttributeProvider, bool)", file="JPath.cs"];
m5_414 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", span="735-735", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_417 [label="int scope = 0", span="739-739", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_419 [label="i < fullyQualifiedTypeName.Length", span="740-740", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_418 [label="int i = 0", span="740-740", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_423 [label="scope++", span="746-746", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_429 [label="i++", span="740-740", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_420 [label="char current = fullyQualifiedTypeName[i]", span="742-742", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_430 [label="return null;", span="758-758", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_428 [label="return i;", span="753-753", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_422 [label="'['", span="745-745", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_425 [label="scope--", span="749-749", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_427 [label="scope == 0", span="752-752", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_421 [label=current, span="743-743", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_424 [label="']'", span="748-748", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_426 [label="','", span="751-751", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_431 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", span="735-735", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAssemblyDelimiterIndex(string)", file="JPath.cs"];
m5_60 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="JPath.cs"];
m5_22 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", span="74-74", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="JPath.cs"];
m5_29 [label="return t.GetConstructor(accessModifier | BindingFlags.Instance, null, new Type[0], null);", span="81-81", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="JPath.cs"];
m5_26 [label="BindingFlags accessModifier = BindingFlags.Public", span="76-76", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="JPath.cs"];
m5_27 [label=nonPublic, span="78-78", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="JPath.cs"];
m5_28 [label="accessModifier = accessModifier | BindingFlags.NonPublic", span="79-79", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="JPath.cs"];
m5_30 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", span="74-74", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type, bool)", file="JPath.cs"];
m5_213 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="408-408", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_214 [label="ValidationUtils.ArgumentNotNull(member, ''member'')", span="410-410", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_215 [label="PropertyInfo propertyInfo = member as PropertyInfo", span="412-412", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_216 [label="propertyInfo != null", span="414-414", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_217 [label="return IsIndexedProperty(propertyInfo);", span="415-415", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_218 [label="return false;", span="417-417", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_219 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="408-408", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_43 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", span="109-109", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", file="JPath.cs"];
m5_44 [label="value == null", span="111-111", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", file="JPath.cs"];
m5_46 [label="object unitializedValue = CreateUnitializedValue(value.GetType())", span="117-117", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", file="JPath.cs"];
m5_47 [label="return value.Equals(unitializedValue);", span="118-118", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", file="JPath.cs"];
m5_45 [label="return true;", span="113-113", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", file="JPath.cs"];
m5_48 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", span="109-109", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsUnitializedValue(object)", file="JPath.cs"];
m5_150 [label="Entry System.Type.GetElementType()", span="0-0", cluster="System.Type.GetElementType()", file="JPath.cs"];
m5_291 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties<T>(System.Reflection.BindingFlags)", span="555-555", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties<T>(System.Reflection.BindingFlags)", file="JPath.cs"];
m5_292 [label="return GetFieldsAndProperties(typeof(T), bindingAttr);", span="557-557", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties<T>(System.Reflection.BindingFlags)", color=green, community=0, file="JPath.cs"];
m5_293 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties<T>(System.Reflection.BindingFlags)", span="555-555", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties<T>(System.Reflection.BindingFlags)", file="JPath.cs"];
m5_405 [label="Entry System.Activator.CreateInstance(System.Type, params object[])", span="0-0", cluster="System.Activator.CreateInstance(System.Type, params object[])", file="JPath.cs"];
m5_290 [label="Entry System.Reflection.PropertyInfo.GetSetMethod(bool)", span="0-0", cluster="System.Reflection.PropertyInfo.GetSetMethod(bool)", file="JPath.cs"];
m5_472 [label="Entry System.Collections.Generic.IEnumerable<T>.IndexOf<T>(System.Func<T, bool>)", span="613-613", cluster="System.Collections.Generic.IEnumerable<T>.IndexOf<T>(System.Func<T, bool>)", file="JPath.cs"];
m5_447 [label="Entry Unk.>", span="", cluster="Unk.>", file="JPath.cs"];
m5_308 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", span="761-761", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_432 [label="ValidationUtils.ArgumentNotNull(targetType, ''targetType'')", span="763-763", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_433 [label="List<MemberInfo> fieldInfos = new List<MemberInfo>(targetType.GetFields(bindingAttr))", span="765-765", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_434 [label="GetChildPrivateFields(fieldInfos, targetType, bindingAttr)", span="768-768", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_435 [label="return fieldInfos.Cast<FieldInfo>();", span="770-770", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_436 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", span="761-761", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFields(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_313 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JPath.cs"];
m5_23 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="69-69", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="JPath.cs"];
m5_24 [label="return GetDefaultConstructor(t, false);", span="71-71", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="JPath.cs"];
m5_25 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="69-69", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="JPath.cs"];
m5_50 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="JPath.cs"];
m5_356 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", span="624-624", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", file="JPath.cs"];
m5_358 [label="ValidationUtils.ArgumentNotNull(attributeProvider, ''attributeProvider'')", span="626-626", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", color=green, community=0, file="JPath.cs"];
m5_359 [label="return (T[])attributeProvider.GetCustomAttributes(typeof(T), inherit);", span="628-628", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", color=green, community=0, file="JPath.cs"];
m5_360 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", span="624-624", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes<T>(System.Reflection.ICustomAttributeProvider, bool)", file="JPath.cs"];
m5_373 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNullOrEmpty<T>(System.Collections.Generic.ICollection<T>, string)", span="66-66", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNullOrEmpty<T>(System.Collections.Generic.ICollection<T>, string)", file="JPath.cs"];
m5_446 [label="Entry System.Reflection.BindingFlags.RemoveFlag(System.Reflection.BindingFlags)", span="803-803", cluster="System.Reflection.BindingFlags.RemoveFlag(System.Reflection.BindingFlags)", file="JPath.cs"];
m5_347 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="JPath.cs"];
m5_13 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type)", span="54-54", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type)", file="JPath.cs"];
m5_14 [label="return HasDefaultConstructor(t, false);", span="56-56", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type)", file="JPath.cs"];
m5_15 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type)", span="54-54", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type)", file="JPath.cs"];
m5_376 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", span="647-647", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", file="JPath.cs"];
m5_377 [label="return CreateGeneric(genericTypeDefinition, new [] { innerType }, args);", span="649-649", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", file="JPath.cs"];
m5_378 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", span="647-647", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateGeneric(System.Type, System.Type, params object[])", file="JPath.cs"];
m5_63 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", span="137-137", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", file="JPath.cs"];
m5_64 [label="ValidationUtils.ArgumentNotNull(property, ''property'')", span="139-139", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", file="JPath.cs"];
m5_65 [label="return !CollectionUtils.IsNullOrEmpty<ParameterInfo>(property.GetIndexParameters());", span="141-141", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", file="JPath.cs"];
m5_66 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", span="137-137", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsPropertyIndexed(System.Reflection.PropertyInfo)", file="JPath.cs"];
m5_126 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", span="241-241", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_135 [label="return InheritsGenericDefinitionInternal(currentType.BaseType, genericClassDefinition, out implementingType);", span="260-260", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_127 [label="currentType.IsGenericType", span="243-243", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_128 [label="Type currentGenericClassDefinition = currentType.GetGenericTypeDefinition()", span="245-245", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_129 [label="genericClassDefinition == currentGenericClassDefinition", span="247-247", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_130 [label="implementingType = currentType", span="249-249", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_132 [label="currentType.BaseType == null", span="254-254", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_131 [label="return true;", span="250-250", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_134 [label="return false;", span="257-257", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_133 [label="implementingType = null", span="256-256", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_136 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", span="241-241", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinitionInternal(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_119 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", span="230-230", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_120 [label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="232-232", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_121 [label="ValidationUtils.ArgumentNotNull(genericClassDefinition, ''genericClassDefinition'')", span="233-233", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_123 [label="throw new ArgumentNullException('''{0}' is not a generic class definition.''.FormatWith(CultureInfo.InvariantCulture, genericClassDefinition));", span="236-236", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_122 [label="!genericClassDefinition.IsClass || !genericClassDefinition.IsGenericTypeDefinition", span="235-235", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_124 [label="return InheritsGenericDefinitionInternal(type, genericClassDefinition, out implementingType);", span="238-238", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_125 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", span="230-230", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_67 [label="Entry System.Reflection.PropertyInfo.GetIndexParameters()", span="0-0", cluster="System.Reflection.PropertyInfo.GetIndexParameters()", file="JPath.cs"];
m5_32 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="84-84", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="JPath.cs"];
m5_33 [label="ValidationUtils.ArgumentNotNull(t, ''t'')", span="86-86", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="JPath.cs"];
m5_34 [label="t.IsValueType", span="88-88", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="JPath.cs"];
m5_35 [label="return IsNullableType(t);", span="89-89", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="JPath.cs"];
m5_36 [label="return true;", span="91-91", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="JPath.cs"];
m5_37 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="84-84", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="JPath.cs"];
m5_473 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JPath.cs"];
m5_387 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateInstance(System.Type, params object[])", span="679-679", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateInstance(System.Type, params object[])", file="JPath.cs"];
m5_402 [label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="681-681", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateInstance(System.Type, params object[])", file="JPath.cs"];
m5_403 [label="return Activator.CreateInstance(type, args);", span="684-684", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateInstance(System.Type, params object[])", file="JPath.cs"];
m5_404 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CreateInstance(System.Type, params object[])", span="679-679", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateInstance(System.Type, params object[])", file="JPath.cs"];
m5_457 [label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="JPath.cs"];
m5_237 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="JPath.cs"];
m5_62 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="JPath.cs"];
m5_153 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JPath.cs"];
m5_73 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="150-150", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_74 [label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="152-152", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_75 [label="ValidationUtils.ArgumentNotNull(genericInterfaceDefinition, ''genericInterfaceDefinition'')", span="153-153", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_77 [label="throw new ArgumentNullException('''{0}' is not a generic interface definition.''.FormatWith(CultureInfo.InvariantCulture, genericInterfaceDefinition));", span="156-156", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_76 [label="!genericInterfaceDefinition.IsInterface || !genericInterfaceDefinition.IsGenericTypeDefinition", span="155-155", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_78 [label="type.IsInterface", span="158-158", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_79 [label="type.IsGenericType", span="160-160", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_80 [label="Type interfaceDefinition = type.GetGenericTypeDefinition()", span="162-162", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_81 [label="genericInterfaceDefinition == interfaceDefinition", span="164-164", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_82 [label="implementingType = type", span="166-166", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_84 [label="type.GetInterfaces()", span="172-172", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_87 [label="genericInterfaceDefinition == interfaceDefinition", span="178-178", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_83 [label="return true;", span="167-167", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_90 [label="implementingType = null", span="186-186", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_89 [label="return true;", span="181-181", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_91 [label="return false;", span="187-187", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_85 [label="i.IsGenericType", span="174-174", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_86 [label="Type interfaceDefinition = i.GetGenericTypeDefinition()", span="176-176", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_88 [label="implementingType = i", span="180-180", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_92 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="150-150", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JPath.cs"];
m5_31 [label="Entry System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", span="0-0", cluster="System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", file="JPath.cs"];
m5_449 [label="Entry lambda expression", span="786-786", cluster="lambda expression", file="JPath.cs"];
m5_327 [label="!IsOverridenGenericMember(m, bindingAttr) || m.Name == ''Item''", span="582-582", cluster="lambda expression", file="JPath.cs"];
m5_318 [label="Entry lambda expression", span="573-573", cluster="lambda expression", file="JPath.cs"];
m5_321 [label="Entry lambda expression", span="573-573", cluster="lambda expression", file="JPath.cs"];
m5_326 [label="Entry lambda expression", span="582-582", cluster="lambda expression", file="JPath.cs"];
m5_328 [label="Exit lambda expression", span="582-582", cluster="lambda expression", file="JPath.cs"];
m5_320 [label="Exit lambda expression", span="573-573", cluster="lambda expression", file="JPath.cs"];
m5_319 [label="m.Name", span="573-573", cluster="lambda expression", file="JPath.cs"];
m5_323 [label="Exit lambda expression", span="573-573", cluster="lambda expression", file="JPath.cs"];
m5_322 [label="new { Count = g.Count(), Members = g.Cast<MemberInfo>() }", span="573-573", cluster="lambda expression", file="JPath.cs"];
m5_474 [label="Entry lambda expression", span="827-827", cluster="lambda expression", file="JPath.cs"];
m5_384 [label="CreateInstance(t, a.ToArray())", span="654-654", cluster="lambda expression", file="JPath.cs"];
m5_383 [label="Entry lambda expression", span="654-654", cluster="lambda expression", file="JPath.cs"];
m5_475 [label="p.Name == nonPublicProperty.Name", span="827-827", cluster="lambda expression", file="JPath.cs"];
m5_476 [label="Exit lambda expression", span="827-827", cluster="lambda expression", file="JPath.cs"];
m5_385 [label="Exit lambda expression", span="654-654", cluster="lambda expression", file="JPath.cs"];
m5_450 [label="f.IsPrivate", span="786-786", cluster="lambda expression", file="JPath.cs"];
m5_451 [label="Exit lambda expression", span="786-786", cluster="lambda expression", file="JPath.cs"];
m5_224 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="440-440", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JPath.cs"];
m5_225 [label="ValidationUtils.ArgumentNotNull(member, ''member'')", span="442-442", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JPath.cs"];
m5_226 [label="ValidationUtils.ArgumentNotNull(target, ''target'')", span="443-443", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JPath.cs"];
m5_233 [label="throw new ArgumentException(''MemberInfo '{0}' has index parameters''.FormatWith(CultureInfo.InvariantCulture, member.Name), e);", span="456-456", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JPath.cs"];
m5_234 [label="throw new ArgumentException(''MemberInfo '{0}' is not of type FieldInfo or PropertyInfo''.FormatWith(CultureInfo.InvariantCulture, CultureInfo.InvariantCulture, member.Name), ''member'');", span="459-459", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JPath.cs"];
m5_227 [label="member.MemberType", span="445-445", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JPath.cs"];
m5_232 [label=TargetParameterCountException, span="454-454", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JPath.cs"];
m5_229 [label="return ((FieldInfo)member).GetValue(target);", span="448-448", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JPath.cs"];
m5_231 [label="return ((PropertyInfo)member).GetValue(target, null);", span="452-452", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JPath.cs"];
m5_228 [label="MemberTypes.Field", span="447-447", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JPath.cs"];
m5_230 [label="MemberTypes.Property", span="449-449", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JPath.cs"];
m5_235 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="440-440", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JPath.cs"];
m5_3 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JPath.cs"];
m5_115 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="224-224", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="JPath.cs"];
m5_117 [label="return InheritsGenericDefinition(type, genericClassDefinition, out implementingType);", span="227-227", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="JPath.cs"];
m5_116 [label="Type implementingType", span="226-226", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="JPath.cs"];
m5_118 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="224-224", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="JPath.cs"];
m5_114 [label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="190-190", cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="JPath.cs"];
m5_250 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="JPath.cs"];
m5_439 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="773-773", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_440 [label="(bindingAttr & BindingFlags.NonPublic) != 0", span="777-777", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_441 [label="BindingFlags nonPublicBindingAttr = bindingAttr.RemoveFlag(BindingFlags.Public)", span="780-780", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_442 [label="(targetType = targetType.BaseType) != null", span="782-782", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_444 [label="initialFields.AddRange(childPrivateFields)", span="788-788", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_443 [label="IEnumerable<MemberInfo> childPrivateFields =\r\n            targetType.GetFields(nonPublicBindingAttr).Where(f => f.IsPrivate).Cast<MemberInfo>()", span="785-786", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_445 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", span="773-773", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetChildPrivateFields(System.Collections.Generic.IList<System.Reflection.MemberInfo>, System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_42 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="JPath.cs"];
m5_309 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="JPath.cs"];
m5_176 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", span="331-331", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="JPath.cs"];
m5_179 [label="GetDictionaryKeyValueTypes(dictionaryType, out keyType, out valueType)", span="335-335", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="JPath.cs"];
m5_177 [label="Type keyType", span="333-333", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="JPath.cs"];
m5_178 [label="Type valueType", span="334-334", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="JPath.cs"];
m5_180 [label="return keyType;", span="337-337", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="JPath.cs"];
m5_181 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", span="331-331", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyType(System.Type)", file="JPath.cs"];
m5_95 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", span="190-190", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JPath.cs"];
m5_101 [label="current = current.BaseType", span="202-202", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JPath.cs"];
m5_96 [label="Type current = type", span="192-192", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JPath.cs"];
m5_98 [label="string.Equals(current.FullName, fullTypeName, StringComparison.Ordinal)", span="196-196", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JPath.cs"];
m5_102 [label="type.GetInterfaces()", span="205-205", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JPath.cs"];
m5_103 [label="string.Equals(i.Name, fullTypeName, StringComparison.Ordinal)", span="207-207", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JPath.cs"];
m5_97 [label="current != null", span="194-194", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JPath.cs"];
m5_99 [label="match = current", span="198-198", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JPath.cs"];
m5_106 [label="match = null", span="214-214", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JPath.cs"];
m5_104 [label="match = type", span="209-209", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JPath.cs"];
m5_100 [label="return true;", span="199-199", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JPath.cs"];
m5_107 [label="return false;", span="215-215", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JPath.cs"];
m5_105 [label="return true;", span="210-210", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JPath.cs"];
m5_108 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", span="190-190", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.AssignableToTypeName(System.Type, string, out System.Type)", file="JPath.cs"];
m5_394 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="JPath.cs"];
m5_239 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", span="469-469", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JPath.cs"];
m5_242 [label="member.MemberType", span="474-474", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", color=green, community=0, file="JPath.cs"];
m5_241 [label="ValidationUtils.ArgumentNotNull(target, ''target'')", span="472-472", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JPath.cs"];
m5_243 [label="MemberTypes.Field", span="476-476", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JPath.cs"];
m5_245 [label="MemberTypes.Property", span="479-479", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JPath.cs"];
m5_247 [label="throw new ArgumentException(''MemberInfo '{0}' must be of type FieldInfo or PropertyInfo''.FormatWith(CultureInfo.InvariantCulture, member.Name), ''member'');", span="483-483", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JPath.cs"];
m5_240 [label="ValidationUtils.ArgumentNotNull(member, ''member'')", span="471-471", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JPath.cs"];
m5_244 [label="((FieldInfo)member).SetValue(target, value)", span="477-477", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JPath.cs"];
m5_246 [label="((PropertyInfo)member).SetValue(target, value, null)", span="480-480", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JPath.cs"];
m5_248 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", span="469-469", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SetMemberValue(System.Reflection.MemberInfo, object, object)", file="JPath.cs"];
m5_307 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JPath.cs"];
m5_317 [label="Entry Unk.AddRange", span="", cluster="Unk.AddRange", file="JPath.cs"];
m5_269 [label="Entry System.Reflection.PropertyInfo.GetGetMethod(bool)", span="0-0", cluster="System.Reflection.PropertyInfo.GetGetMethod(bool)", file="JPath.cs"];
m5_170 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", span="322-322", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="JPath.cs"];
m5_173 [label="GetDictionaryKeyValueTypes(dictionaryType, out keyType, out valueType)", span="326-326", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="JPath.cs"];
m5_171 [label="Type keyType", span="324-324", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="JPath.cs"];
m5_172 [label="Type valueType", span="325-325", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="JPath.cs"];
m5_174 [label="return valueType;", span="328-328", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="JPath.cs"];
m5_175 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", span="322-322", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryValueType(System.Type)", file="JPath.cs"];
m5_348 [label="Entry System.Type.GetMember(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMember(string, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_236 [label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0", cluster="System.Reflection.FieldInfo.GetValue(object)", file="JPath.cs"];
m5_367 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", span="638-638", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="JPath.cs"];
m5_369 [label="ValidationUtils.ArgumentNotNullOrEmpty<Type>(innerTypes, ''innerTypes'')", span="641-641", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", color=green, community=0, file="JPath.cs"];
m5_368 [label="ValidationUtils.ArgumentNotNull(genericTypeDefinition, ''genericTypeDefinition'')", span="640-640", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="JPath.cs"];
m5_370 [label="ValidationUtils.ArgumentConditionTrue(genericTypeDefinition.IsGenericTypeDefinition, ''genericTypeDefinition'', ''Type {0} is not a generic type definition.''.FormatWith(CultureInfo.InvariantCulture, genericTypeDefinition))", span="642-642", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", color=green, community=0, file="JPath.cs"];
m5_371 [label="return genericTypeDefinition.MakeGenericType(innerTypes);", span="644-644", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", color=green, community=0, file="JPath.cs"];
m5_372 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", span="638-638", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="JPath.cs"];
m5_94 [label="Entry System.Type.GetInterfaces()", span="0-0", cluster="System.Type.GetInterfaces()", file="JPath.cs"];
m5_310 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", span="793-793", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_452 [label="ValidationUtils.ArgumentNotNull(targetType, ''targetType'')", span="795-795", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_453 [label="List<MemberInfo> propertyInfos = new List<MemberInfo>(targetType.GetProperties(bindingAttr))", span="797-797", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_454 [label="GetChildPrivateProperties(propertyInfos, targetType, bindingAttr)", span="798-798", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_455 [label="return propertyInfos.Cast<PropertyInfo>();", span="800-800", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_456 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", span="793-793", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetProperties(System.Type, System.Reflection.BindingFlags)", file="JPath.cs"];
m5_366 [label="Entry System.Reflection.Assembly.GetName()", span="0-0", cluster="System.Reflection.Assembly.GetName()", file="JPath.cs"];
m5_202 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="384-384", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_208 [label="return ((PropertyInfo)member).PropertyType;", span="393-393", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_203 [label="ValidationUtils.ArgumentNotNull(member, ''member'')", span="386-386", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_207 [label="MemberTypes.Property", span="392-392", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_204 [label="member.MemberType", span="388-388", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_211 [label="throw new ArgumentException(''MemberInfo must be of type FieldInfo, PropertyInfo or EventInfo'', ''member'');", span="397-397", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_206 [label="return ((FieldInfo)member).FieldType;", span="391-391", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_210 [label="return ((EventInfo)member).EventHandlerType;", span="395-395", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_205 [label="MemberTypes.Field", span="390-390", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_209 [label="MemberTypes.Event", span="394-394", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_212 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="384-384", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JPath.cs"];
m5_362 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", span="631-631", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", file="JPath.cs"];
m5_363 [label="ValidationUtils.ArgumentNotNull(t, ''t'')", span="633-633", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", color=green, community=0, file="JPath.cs"];
m5_364 [label="return t.FullName + '', '' + t.Assembly.GetName().Name;", span="635-635", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", color=green, community=0, file="JPath.cs"];
m5_365 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", span="631-631", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetNameAndAssessmblyName(System.Type)", file="JPath.cs"];
m5_49 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", span="122-122", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="JPath.cs"];
m5_51 [label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="124-124", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="JPath.cs"];
m5_53 [label="throw new ArgumentException(''Type {0} is a generic type definition and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, type), ''type'');", span="127-127", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="JPath.cs"];
m5_58 [label="throw new ArgumentException(''Type {0} cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, type), ''type'');", span="134-134", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="JPath.cs"];
m5_52 [label="type.IsGenericTypeDefinition", span="126-126", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="JPath.cs"];
m5_56 [label="type.IsValueType", span="131-131", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="JPath.cs"];
m5_54 [label="type.IsClass || type.IsInterface || type == typeof(void)", span="129-129", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="JPath.cs"];
m5_57 [label="return Activator.CreateInstance(type);", span="132-132", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="JPath.cs"];
m5_55 [label="return null;", span="130-130", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="JPath.cs"];
m5_59 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", span="122-122", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CreateUnitializedValue(System.Type)", file="JPath.cs"];
m5_4 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", span="41-41", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="JPath.cs"];
m5_7 [label="return false;", span="46-46", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="JPath.cs"];
m5_10 [label="return true;", span="51-51", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="JPath.cs"];
m5_5 [label="ValidationUtils.ArgumentNotNull(t, ''t'')", span="43-43", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="JPath.cs"];
m5_6 [label="t.IsAbstract || t.IsInterface || t.IsArray || t.IsGenericTypeDefinition || t == typeof(void)", span="45-45", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="JPath.cs"];
m5_8 [label="!HasDefaultConstructor(t)", span="48-48", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="JPath.cs"];
m5_9 [label="return false;", span="49-49", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="JPath.cs"];
m5_11 [label="Exit Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", span="41-41", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsInstantiatableType(System.Type)", file="JPath.cs"];
m5_477 [label="System.Reflection.BindingFlags", span="", file="JPath.cs"];
m5_478 [label=nonPublicProperty, span="", file="JPath.cs"];
m7_271 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", span="487-487", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="JsonSerializerInternalReader.cs"];
m7_272 [label="Employee employee = new Employee\r\n            {\r\n                BirthDate = new DateTime(1977, 12, 30, 1, 1, 1, DateTimeKind.Utc),\r\n                FirstName = ''Maurice'',\r\n                LastName = ''Moss'',\r\n                Department = ''IT'',\r\n                JobTitle = ''Support''\r\n            }", span="489-496", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="JsonSerializerInternalReader.cs"];
m7_273 [label="string iPersonJson = JsonConvert.SerializeObject(employee, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = new IPersonContractResolver() })", span="498-499", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="JsonSerializerInternalReader.cs"];
m7_274 [label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Maurice'''',\r\n  ''''LastName'''': ''''Moss'''',\r\n  ''''BirthDate'''': ''''1977-12-30T01:01:01Z''''\r\n}'', iPersonJson)", span="501-505", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="JsonSerializerInternalReader.cs"];
m7_275 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", span="487-487", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeInterface()", file="JsonSerializerInternalReader.cs"];
m7_72 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerInternalReader.cs"];
m7_14 [label="Entry char.ToString()", span="0-0", cluster="char.ToString()", file="JsonSerializerInternalReader.cs"];
m7_167 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerInternalReader.cs"];
m7_163 [label="Entry Newtonsoft.Json.Tests.Serialization.AddressWithDataMember.AddressWithDataMember()", span="102-102", cluster="Newtonsoft.Json.Tests.Serialization.AddressWithDataMember.AddressWithDataMember()", file="JsonSerializerInternalReader.cs"];
m7_169 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", span="311-311", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_170 [label="string json = JsonConvert.SerializeObject(\r\n                new AddressWithDataMember\r\n                {\r\n                    AddressLine1 = ''value!''\r\n                },\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new EscapedPropertiesContractResolver\r\n                    {\r\n                        PropertyPrefix = ''<b>'',\r\n                        PropertySuffix = ''</b>''\r\n                    },\r\n                    StringEscapeHandling = StringEscapeHandling.EscapeHtml\r\n                })", span="313-326", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_171 [label="Assert.AreEqual(@''{''''\u003cb\u003eAddressLine1\u003c/b\u003e'''':''''value!''''}'', json)", span="328-328", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_172 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="330-330", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_173 [label="reader.Read()", span="331-331", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_174 [label="reader.Read()", span="332-332", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_175 [label="Assert.AreEqual(@''<b>AddressLine1</b>'', reader.Value)", span="334-334", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_176 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", span="311-311", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithHtmlEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_46 [label="Entry System.DateTime.DateTime()", span="0-0", cluster="System.DateTime.DateTime()", file="JsonSerializerInternalReader.cs"];
m7_25 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="962-962", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerInternalReader.cs"];
m7_222 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", span="410-410", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", file="JsonSerializerInternalReader.cs"];
m7_223 [label="var resolver = new DefaultContractResolver()", span="412-412", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", file="JsonSerializerInternalReader.cs"];
m7_224 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(NumberFormatInfo))", span="413-413", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", file="JsonSerializerInternalReader.cs"];
m7_225 [label="Assert.IsFalse(contract.Properties.Any(c => c.PropertyName == ''InvariantInfo''))", span="415-415", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", file="JsonSerializerInternalReader.cs"];
m7_226 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", span="410-410", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ResolveProperties_IgnoreStatic()", file="JsonSerializerInternalReader.cs"];
m7_168 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSerializerInternalReader.cs"];
m7_279 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs"];
m7_70 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JsonSerializerInternalReader.cs"];
m7_270 [label="Entry Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="8315-8315", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerInternalReader.cs"];
m7_100 [label="Entry Newtonsoft.Json.Tests.Serialization.AbstractImplementationListTestClass<T>.AbstractImplementationListTestClass()", span="8272-8272", cluster="Newtonsoft.Json.Tests.Serialization.AbstractImplementationListTestClass<T>.AbstractImplementationListTestClass()", file="JsonSerializerInternalReader.cs"];
m7_134 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomDictionary<TKey, TValue>.CustomDictionary()", span="232-232", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomDictionary<TKey, TValue>.CustomDictionary()", file="JsonSerializerInternalReader.cs"];
m7_3 [label="Entry Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="59-59", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalReader.cs"];
m7_4 [label="IList<JsonProperty> properties = base.CreateProperties(type, memberSerialization)", span="61-61", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalReader.cs"];
m7_5 [label="properties =\r\n                properties.Where(p => p.PropertyName.StartsWith(_startingWithChar.ToString())).ToList()", span="64-65", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalReader.cs"];
m7_6 [label="return properties;", span="67-67", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalReader.cs"];
m7_7 [label="Exit Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="59-59", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalReader.cs"];
m7_10 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="JsonSerializerInternalReader.cs"];
m7_56 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonSerializerInternalReader.cs"];
m7_289 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", span="552-552", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="JsonSerializerInternalReader.cs"];
m7_290 [label="StructTest structTest = new StructTest\r\n            {\r\n                IntField = 1,\r\n                IntProperty = 2,\r\n                StringField = ''Field'',\r\n                StringProperty = ''Property''\r\n            }", span="554-560", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="JsonSerializerInternalReader.cs"];
m7_291 [label="DefaultContractResolver skipCompilerGeneratedResolver = new DefaultContractResolver\r\n            {\r\n                DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public\r\n            }", span="562-565", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="JsonSerializerInternalReader.cs"];
m7_292 [label="string skipCompilerGeneratedJson = JsonConvert.SerializeObject(structTest, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = skipCompilerGeneratedResolver })", span="567-568", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="JsonSerializerInternalReader.cs"];
m7_295 [label="string includeCompilerGeneratedJson = JsonConvert.SerializeObject(structTest, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = includeCompilerGeneratedResolver })", span="583-584", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="JsonSerializerInternalReader.cs"];
m7_293 [label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''Field'''',\r\n  ''''IntField'''': 1,\r\n  ''''StringProperty'''': ''''Property'''',\r\n  ''''IntProperty'''': 2\r\n}'', skipCompilerGeneratedJson)", span="570-575", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="JsonSerializerInternalReader.cs"];
m7_294 [label="DefaultContractResolver includeCompilerGeneratedResolver = new DefaultContractResolver\r\n            {\r\n                DefaultMembersSearchFlags = BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public,\r\n                SerializeCompilerGeneratedMembers = true\r\n            }", span="577-581", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="JsonSerializerInternalReader.cs"];
m7_296 [label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''Field'''',\r\n  ''''IntField'''': 1,\r\n  ''''<StringProperty>k__BackingField'''': ''''Property'''',\r\n  ''''<IntProperty>k__BackingField'''': 2,\r\n  ''''StringProperty'''': ''''Property'''',\r\n  ''''IntProperty'''': 2\r\n}'', includeCompilerGeneratedJson)", span="586-593", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="JsonSerializerInternalReader.cs"];
m7_297 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", span="552-552", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeCompilerGeneratedMembers()", file="JsonSerializerInternalReader.cs"];
m7_44 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="163-163", cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_69 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JsonSerializerInternalReader.cs"];
m7_20 [label="Entry Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.CreateContract(System.Type)", span="93-93", cluster="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.CreateContract(System.Type)", file="JsonSerializerInternalReader.cs"];
m7_21 [label="objectType == typeof(Employee)", span="95-95", cluster="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.CreateContract(System.Type)", file="JsonSerializerInternalReader.cs"];
m7_23 [label="return base.CreateContract(objectType);", span="98-98", cluster="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.CreateContract(System.Type)", file="JsonSerializerInternalReader.cs"];
m7_22 [label="objectType = typeof(IPerson)", span="96-96", cluster="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.CreateContract(System.Type)", file="JsonSerializerInternalReader.cs"];
m7_24 [label="Exit Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.CreateContract(System.Type)", span="93-93", cluster="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.CreateContract(System.Type)", file="JsonSerializerInternalReader.cs"];
m7_55 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="229-229", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="JsonSerializerInternalReader.cs"];
m7_16 [label="Entry Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.ResolvePropertyName(string)", span="76-76", cluster="Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.ResolvePropertyName(string)", file="JsonSerializerInternalReader.cs"];
m7_17 [label="return base.ResolvePropertyName(PropertyPrefix + propertyName + PropertySuffix);", span="78-78", cluster="Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.ResolvePropertyName(string)", file="JsonSerializerInternalReader.cs"];
m7_18 [label="Exit Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.ResolvePropertyName(string)", span="76-76", cluster="Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.ResolvePropertyName(string)", file="JsonSerializerInternalReader.cs"];
m7_164 [label="Entry Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.EscapedPropertiesContractResolver()", span="71-71", cluster="Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver.EscapedPropertiesContractResolver()", file="JsonSerializerInternalReader.cs"];
m7_81 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", span="179-179", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="JsonSerializerInternalReader.cs"];
m7_82 [label="var resolver = new DefaultContractResolver()", span="181-181", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="JsonSerializerInternalReader.cs"];
m7_83 [label="var contract = (JsonArrayContract)resolver.ResolveContract(typeof(AbstractListTestClass<int>))", span="182-182", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="JsonSerializerInternalReader.cs"];
m7_87 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<AbstractListTestClass<int>>(@''[1,2]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            }), ''Could not create an instance of type Newtonsoft.Json.Tests.Serialization.AbstractListTestClass`1[System.Int32]. Type is an interface or abstract class and cannot be instantiated. Path '', line 1, position 1.'')", span="188-191", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="JsonSerializerInternalReader.cs"];
m7_89 [label="var l = JsonConvert.DeserializeObject<AbstractListTestClass<int>>(@''[1,2]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="195-198", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="JsonSerializerInternalReader.cs"];
m7_84 [label="Assert.IsFalse(contract.IsInstantiable)", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="JsonSerializerInternalReader.cs"];
m7_85 [label="Assert.IsNull(contract.DefaultCreator)", span="185-185", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="JsonSerializerInternalReader.cs"];
m7_86 [label="Assert.IsFalse(contract.HasParametrizedCreator)", span="186-186", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="JsonSerializerInternalReader.cs"];
m7_88 [label="contract.DefaultCreator = () => new AbstractImplementationListTestClass<int>()", span="193-193", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="JsonSerializerInternalReader.cs"];
m7_90 [label="Assert.AreEqual(2, l.Count)", span="200-200", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="JsonSerializerInternalReader.cs"];
m7_91 [label="Assert.AreEqual(1, l[0])", span="201-201", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="JsonSerializerInternalReader.cs"];
m7_92 [label="Assert.AreEqual(2, l[1])", span="202-202", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="JsonSerializerInternalReader.cs"];
m7_93 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", span="179-179", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractListTestClass()", file="JsonSerializerInternalReader.cs"];
m7_45 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSerializerInternalReader.cs"];
m7_119 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", span="237-237", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_120 [label="var resolver = new DefaultContractResolver()", span="239-239", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_121 [label="var contract = (JsonDictionaryContract)resolver.ResolveContract(typeof(IDictionary<string, int>))", span="240-240", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_125 [label="var d = JsonConvert.DeserializeObject<IDictionary<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="247-250", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_122 [label="Assert.IsTrue(contract.IsInstantiable)", span="242-242", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_123 [label="Assert.IsNotNull(contract.DefaultCreator)", span="243-243", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_124 [label="contract.DefaultCreator = () => new CustomDictionary<string, int>()", span="245-245", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_126 [label="Assert.AreEqual(typeof(CustomDictionary<string, int>), d.GetType())", span="252-252", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_127 [label="Assert.AreEqual(2, d.Count)", span="253-253", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_128 [label="Assert.AreEqual(1, d[''key1''])", span="254-254", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_129 [label="Assert.AreEqual(2, d[''key2''])", span="255-255", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_130 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", span="237-237", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DictionaryInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_54 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="188-188", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonSerializerInternalReader.cs"];
m7_80 [label="Entry Newtonsoft.Json.Tests.Serialization.AbstractImplementationTestClass.AbstractImplementationTestClass()", span="8264-8264", cluster="Newtonsoft.Json.Tests.Serialization.AbstractImplementationTestClass.AbstractImplementationTestClass()", file="JsonSerializerInternalReader.cs"];
m7_101 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", span="210-210", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_102 [label="var resolver = new DefaultContractResolver()", span="212-212", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_103 [label="var contract = (JsonArrayContract)resolver.ResolveContract(typeof(IList<int>))", span="213-213", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_107 [label="var l = JsonConvert.DeserializeObject<IList<int>>(@''[1,2,3]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="220-223", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_104 [label="Assert.IsTrue(contract.IsInstantiable)", span="215-215", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_105 [label="Assert.IsNotNull(contract.DefaultCreator)", span="216-216", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_106 [label="contract.DefaultCreator = () => new CustomList<int>()", span="218-218", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_108 [label="Assert.AreEqual(typeof(CustomList<int>), l.GetType())", span="225-225", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_109 [label="Assert.AreEqual(3, l.Count)", span="226-226", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_110 [label="Assert.AreEqual(1, l[0])", span="227-227", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_111 [label="Assert.AreEqual(2, l[1])", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_112 [label="Assert.AreEqual(3, l[2])", span="229-229", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_113 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", span="210-210", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterfaceDefaultCreator()", file="JsonSerializerInternalReader.cs"];
m7_26 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", span="114-114", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_27 [label="JsonProperty p = new JsonProperty()", span="116-116", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_28 [label="Assert.AreEqual(null, p.GetResolvedDefaultValue())", span="118-118", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_29 [label="Assert.AreEqual(null, p.DefaultValue)", span="119-119", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_30 [label="p.PropertyType = typeof(int)", span="121-121", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_31 [label="Assert.AreEqual(0 , p.GetResolvedDefaultValue())", span="123-123", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_32 [label="Assert.AreEqual(null, p.DefaultValue)", span="124-124", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_33 [label="p.PropertyType = typeof(DateTime)", span="126-126", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_34 [label="Assert.AreEqual(new DateTime(), p.GetResolvedDefaultValue())", span="128-128", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_35 [label="Assert.AreEqual(null, p.DefaultValue)", span="129-129", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_36 [label="p.PropertyType = null", span="131-131", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_37 [label="Assert.AreEqual(null, p.GetResolvedDefaultValue())", span="133-133", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_38 [label="Assert.AreEqual(null, p.DefaultValue)", span="134-134", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_39 [label="p.PropertyType = typeof(CompareOptions)", span="136-136", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_40 [label="Assert.AreEqual(CompareOptions.None, (CompareOptions)p.GetResolvedDefaultValue())", span="138-138", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_41 [label="Assert.AreEqual(null, p.DefaultValue)", span="139-139", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_42 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", span="114-114", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.JsonPropertyDefaultValue()", file="JsonSerializerInternalReader.cs"];
m7_57 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonSerializerInternalReader.cs"];
m7_227 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="JsonSerializerInternalReader.cs"];
m7_242 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="JsonSerializerInternalReader.cs"];
m7_276 [label="Entry Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", span="63-63", cluster="Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", file="JsonSerializerInternalReader.cs"];
m7_288 [label="Entry Newtonsoft.Json.Tests.Serialization.Book.Book()", span="82-82", cluster="Newtonsoft.Json.Tests.Serialization.Book.Book()", file="JsonSerializerInternalReader.cs"];
m7_177 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", span="338-338", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_178 [label="JsonProperty p = new JsonProperty { PropertyName = ''abc'' }", span="340-340", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_179 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="341-341", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_180 [label="p = new JsonProperty { PropertyName = ''123'' }", span="343-343", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_181 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="344-344", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_182 [label="p = new JsonProperty { PropertyName = ''._-'' }", span="346-346", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_183 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="347-347", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_184 [label="p = new JsonProperty { PropertyName = ''!@#'' }", span="349-349", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_185 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="350-350", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_186 [label="p = new JsonProperty { PropertyName = ''$%^'' }", span="352-352", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_187 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="353-353", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_188 [label="p = new JsonProperty { PropertyName = ''?*('' }", span="355-355", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_189 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="356-356", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_190 [label="p = new JsonProperty { PropertyName = '')_+'' }", span="358-358", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_191 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="359-359", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_192 [label="p = new JsonProperty { PropertyName = ''=:,'' }", span="361-361", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_193 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="362-362", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_194 [label="p = new JsonProperty { PropertyName = null }", span="364-364", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_195 [label="Assert.IsTrue(p._skipPropertyNameEscape)", span="365-365", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_196 [label="p = new JsonProperty { PropertyName = ''&'' }", span="367-367", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_197 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="368-368", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_198 [label="p = new JsonProperty { PropertyName = ''<'' }", span="370-370", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_199 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="371-371", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_200 [label="p = new JsonProperty { PropertyName = ''>'' }", span="373-373", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_201 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="374-374", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_202 [label="p = new JsonProperty { PropertyName = ''''' }", span="376-376", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_203 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="377-377", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_204 [label="p = new JsonProperty { PropertyName = @'''''''' }", span="379-379", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_205 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="380-380", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_206 [label="p = new JsonProperty { PropertyName = Environment.NewLine }", span="382-382", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_207 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="383-383", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_208 [label="p = new JsonProperty { PropertyName = ''\0'' }", span="385-385", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_209 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="386-386", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_210 [label="p = new JsonProperty { PropertyName = ''\n'' }", span="388-388", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_211 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="389-389", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_212 [label="p = new JsonProperty { PropertyName = ''\v'' }", span="391-391", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_213 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="392-392", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_214 [label="p = new JsonProperty { PropertyName = ''\u00B9'' }", span="394-394", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_215 [label="Assert.IsFalse(p._skipPropertyNameEscape)", span="395-395", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_216 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", span="338-338", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CalculatingPropertyNameEscapedSkipping()", file="JsonSerializerInternalReader.cs"];
m7_19 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1341-1341", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="JsonSerializerInternalReader.cs"];
m7_0 [label="Entry Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", span="53-53", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", file="JsonSerializerInternalReader.cs"];
m7_1 [label="_startingWithChar = startingWithChar", span="56-56", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", file="JsonSerializerInternalReader.cs"];
m7_2 [label="Exit Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", span="53-53", cluster="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver.DynamicContractResolver(char)", file="JsonSerializerInternalReader.cs"];
m7_155 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", span="286-286", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_156 [label="string json = JsonConvert.SerializeObject(\r\n                new AddressWithDataMember\r\n                {\r\n                    AddressLine1 = ''value!''\r\n                },\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new EscapedPropertiesContractResolver\r\n                    {\r\n                        PropertySuffix = @''-'-''''-''\r\n                    }\r\n                })", span="288-299", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_157 [label="Assert.AreEqual(@''{''''AddressLine1-'-\''''-'''':''''value!''''}'', json)", span="301-301", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_158 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="303-303", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_159 [label="reader.Read()", span="304-304", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_160 [label="reader.Read()", span="305-305", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_161 [label="Assert.AreEqual(@''AddressLine1-'-''''-'', reader.Value)", span="307-307", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_162 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", span="286-286", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SerializeWithEscapedPropertyName()", file="JsonSerializerInternalReader.cs"];
m7_231 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParametrizedCreator()", span="419-419", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParametrizedCreator()", file="JsonSerializerInternalReader.cs"];
m7_232 [label="var resolver = new DefaultContractResolver()", span="421-421", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParametrizedCreator()", file="JsonSerializerInternalReader.cs"];
m7_233 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(PublicParametizedConstructorWithPropertyNameConflictWithAttribute))", span="422-422", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParametrizedCreator()", file="JsonSerializerInternalReader.cs"];
m7_234 [label="Assert.IsNull(contract.DefaultCreator)", span="424-424", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParametrizedCreator()", file="JsonSerializerInternalReader.cs"];
m7_235 [label="Assert.IsNotNull(contract.ParametrizedCreator)", span="425-425", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParametrizedCreator()", file="JsonSerializerInternalReader.cs"];
m7_236 [label="Assert.AreEqual(contract.ParametrizedConstructor, typeof(PublicParametizedConstructorWithPropertyNameConflictWithAttribute).GetConstructor(new[] { typeof(string) }))", span="427-427", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParametrizedCreator()", file="JsonSerializerInternalReader.cs"];
m7_237 [label="Assert.AreEqual(1, contract.CreatorParameters.Count)", span="429-429", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParametrizedCreator()", file="JsonSerializerInternalReader.cs"];
m7_238 [label="Assert.AreEqual(''name'', contract.CreatorParameters[0].PropertyName)", span="430-430", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParametrizedCreator()", file="JsonSerializerInternalReader.cs"];
m7_239 [label="contract.ParametrizedConstructor = null", span="433-433", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParametrizedCreator()", file="JsonSerializerInternalReader.cs"];
m7_240 [label="Assert.IsNull(contract.ParametrizedCreator)", span="435-435", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParametrizedCreator()", file="JsonSerializerInternalReader.cs"];
m7_241 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParametrizedCreator()", span="419-419", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ParametrizedCreator()", file="JsonSerializerInternalReader.cs"];
m7_277 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerInternalReader.cs"];
m7_298 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonSerializerInternalReader.cs"];
m7_166 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerInternalReader.cs"];
m7_217 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", file="JsonSerializerInternalReader.cs"];
m7_218 [label="var resolver = new DefaultContractResolver()", span="402-402", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", file="JsonSerializerInternalReader.cs"];
m7_219 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(AddressWithDataMember))", span="403-403", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", file="JsonSerializerInternalReader.cs"];
m7_220 [label="Assert.AreEqual(''AddressLine1'', contract.Properties[0].PropertyName)", span="405-405", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", file="JsonSerializerInternalReader.cs"];
m7_221 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.DeserializeDataMemberClassWithNoDataContract()", file="JsonSerializerInternalReader.cs"];
m7_280 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="184-184", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerInternalReader.cs"];
m7_255 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", span="460-460", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_256 [label="var resolver = new DefaultContractResolver()", span="462-462", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_257 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(MultipleParamatrizedConstructorsJsonConstructor))", span="463-463", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_261 [label="var o = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="476-479", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_258 [label="bool ensureCustomCreatorCalled = false", span="465-465", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_259 [label="contract.OverrideCreator = args =>\r\n            {\r\n                ensureCustomCreatorCalled = true;\r\n                return new MultipleParamatrizedConstructorsJsonConstructor((string) args[0], (int) args[1]);\r\n            }", span="467-471", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_260 [label="Assert.IsNull(contract.OverrideConstructor)", span="473-473", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_262 [label="Assert.AreEqual(''value!'', o.Value)", span="481-481", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_263 [label="Assert.AreEqual(1, o.Age)", span="482-482", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_264 [label="Assert.IsTrue(ensureCustomCreatorCalled)", span="483-483", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_265 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", span="460-460", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomOverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_73 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs"];
m7_15 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="JsonSerializerInternalReader.cs"];
m7_9 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="JsonSerializerInternalReader.cs"];
m7_266 [label="Entry lambda expression", span="467-471", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_11 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_12 [label="p.PropertyName.StartsWith(_startingWithChar.ToString())", span="65-65", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_13 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_75 [label="JsonConvert.DeserializeObject<AbstractTestClass>(@''{Value:'Value!'}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="163-166", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_74 [label="Entry lambda expression", span="163-166", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_76 [label="Exit lambda expression", span="163-166", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_77 [label="Entry lambda expression", span="168-168", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_78 [label="new AbstractImplementationTestClass()", span="168-168", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_79 [label="Exit lambda expression", span="168-168", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_95 [label="JsonConvert.DeserializeObject<AbstractListTestClass<int>>(@''[1,2]'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="188-191", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_94 [label="Entry lambda expression", span="188-191", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_96 [label="Exit lambda expression", span="188-191", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_97 [label="Entry lambda expression", span="193-193", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_98 [label="new AbstractImplementationListTestClass<int>()", span="193-193", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_99 [label="Exit lambda expression", span="193-193", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_115 [label="Entry lambda expression", span="218-218", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_116 [label="new CustomList<int>()", span="218-218", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_117 [label="Exit lambda expression", span="218-218", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_131 [label="Entry lambda expression", span="245-245", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_132 [label="new CustomDictionary<string, int>()", span="245-245", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_133 [label="Exit lambda expression", span="245-245", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_149 [label="JsonConvert.DeserializeObject<AbstractDictionaryTestClass<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="268-271", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_148 [label="Entry lambda expression", span="268-271", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_150 [label="Exit lambda expression", span="268-271", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_151 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_152 [label="new AbstractImplementationDictionaryTestClass<string, int>()", span="273-273", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_153 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_228 [label="Entry lambda expression", span="415-415", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_229 [label="c.PropertyName == ''InvariantInfo''", span="415-415", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_230 [label="Exit lambda expression", span="415-415", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_268 [label="return new MultipleParamatrizedConstructorsJsonConstructor((string) args[0], (int) args[1]);", span="470-470", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_267 [label="ensureCustomCreatorCalled = true", span="469-469", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_269 [label="Exit lambda expression", span="467-471", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m7_47 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", span="143-143", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", file="JsonSerializerInternalReader.cs"];
m7_48 [label="var resolver = new DefaultContractResolver()", span="145-145", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", file="JsonSerializerInternalReader.cs"];
m7_49 [label="var contract = (JsonArrayContract)resolver.ResolveContract(typeof(IList<int>))", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", file="JsonSerializerInternalReader.cs"];
m7_50 [label="Assert.IsTrue(contract.IsInstantiable)", span="148-148", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", file="JsonSerializerInternalReader.cs"];
m7_51 [label="Assert.AreEqual(typeof(List<int>), contract.CreatedType)", span="149-149", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", file="JsonSerializerInternalReader.cs"];
m7_52 [label="Assert.IsNotNull(contract.DefaultCreator)", span="150-150", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", file="JsonSerializerInternalReader.cs"];
m7_53 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", span="143-143", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.ListInterface()", file="JsonSerializerInternalReader.cs"];
m7_114 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonSerializerInternalReader.cs"];
m7_135 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", span="259-259", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="JsonSerializerInternalReader.cs"];
m7_136 [label="var resolver = new DefaultContractResolver()", span="261-261", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="JsonSerializerInternalReader.cs"];
m7_137 [label="var contract = (JsonDictionaryContract)resolver.ResolveContract(typeof(AbstractDictionaryTestClass<string, int>))", span="262-262", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="JsonSerializerInternalReader.cs"];
m7_141 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<AbstractDictionaryTestClass<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            }), ''Could not create an instance of type Newtonsoft.Json.Tests.Serialization.AbstractDictionaryTestClass`2[System.String,System.Int32]. Type is an interface or abstract class and cannot be instantiated. Path 'key1', line 1, position 6.'')", span="268-271", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="JsonSerializerInternalReader.cs"];
m7_143 [label="var d = JsonConvert.DeserializeObject<AbstractDictionaryTestClass<string, int>>(@''{key1:1,key2:2}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="275-278", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="JsonSerializerInternalReader.cs"];
m7_138 [label="Assert.IsFalse(contract.IsInstantiable)", span="264-264", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="JsonSerializerInternalReader.cs"];
m7_139 [label="Assert.IsNull(contract.DefaultCreator)", span="265-265", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="JsonSerializerInternalReader.cs"];
m7_140 [label="Assert.IsFalse(contract.HasParametrizedCreator)", span="266-266", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="JsonSerializerInternalReader.cs"];
m7_142 [label="contract.DefaultCreator = () => new AbstractImplementationDictionaryTestClass<string, int>()", span="273-273", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="JsonSerializerInternalReader.cs"];
m7_144 [label="Assert.AreEqual(2, d.Count)", span="280-280", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="JsonSerializerInternalReader.cs"];
m7_145 [label="Assert.AreEqual(1, d[''key1''])", span="281-281", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="JsonSerializerInternalReader.cs"];
m7_146 [label="Assert.AreEqual(2, d[''key2''])", span="282-282", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="JsonSerializerInternalReader.cs"];
m7_147 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", span="259-259", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractDictionaryTestClass()", file="JsonSerializerInternalReader.cs"];
m7_154 [label="Entry Newtonsoft.Json.Tests.Serialization.AbstractImplementationDictionaryTestClass<TKey, TValue>.AbstractImplementationDictionaryTestClass()", span="8280-8280", cluster="Newtonsoft.Json.Tests.Serialization.AbstractImplementationDictionaryTestClass<TKey, TValue>.AbstractImplementationDictionaryTestClass()", file="JsonSerializerInternalReader.cs"];
m7_243 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_244 [label="var resolver = new DefaultContractResolver()", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_245 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(MultipleParamatrizedConstructorsJsonConstructor))", span="442-442", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_246 [label="Assert.IsNull(contract.DefaultCreator)", span="444-444", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_247 [label="Assert.IsNotNull(contract.OverrideCreator)", span="445-445", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_248 [label="Assert.AreEqual(contract.OverrideConstructor, typeof(MultipleParamatrizedConstructorsJsonConstructor).GetConstructor(new[] { typeof(string), typeof(int) }))", span="447-447", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_249 [label="Assert.AreEqual(2, contract.CreatorParameters.Count)", span="449-449", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_250 [label="Assert.AreEqual(''Value'', contract.CreatorParameters[0].PropertyName)", span="450-450", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_251 [label="Assert.AreEqual(''Age'', contract.CreatorParameters[1].PropertyName)", span="451-451", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_252 [label="contract.OverrideConstructor = null", span="454-454", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_253 [label="Assert.IsNull(contract.OverrideCreator)", span="456-456", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_254 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.OverrideCreator()", file="JsonSerializerInternalReader.cs"];
m7_278 [label="Entry Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.IPersonContractResolver()", span="91-91", cluster="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver.IPersonContractResolver()", file="JsonSerializerInternalReader.cs"];
m7_8 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1099-1099", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerInternalReader.cs"];
m7_118 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomList<T>.CustomList()", span="205-205", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.CustomList<T>.CustomList()", file="JsonSerializerInternalReader.cs"];
m7_281 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", span="509-509", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="JsonSerializerInternalReader.cs"];
m7_282 [label="Book book = new Book\r\n            {\r\n                BookName = ''The Gathering Storm'',\r\n                BookPrice = 16.19m,\r\n                AuthorName = ''Brandon Sanderson'',\r\n                AuthorAge = 34,\r\n                AuthorCountry = ''United States of America''\r\n            }", span="511-518", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="JsonSerializerInternalReader.cs"];
m7_283 [label="string startingWithA = JsonConvert.SerializeObject(book, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = new DynamicContractResolver('A') })", span="520-521", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="JsonSerializerInternalReader.cs"];
m7_284 [label="string startingWithB = JsonConvert.SerializeObject(book, Formatting.Indented,\r\n                new JsonSerializerSettings { ContractResolver = new DynamicContractResolver('B') })", span="529-530", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="JsonSerializerInternalReader.cs"];
m7_285 [label="StringAssert.AreEqual(@''{\r\n  ''''AuthorName'''': ''''Brandon Sanderson'''',\r\n  ''''AuthorAge'''': 34,\r\n  ''''AuthorCountry'''': ''''United States of America''''\r\n}'', startingWithA)", span="537-541", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="JsonSerializerInternalReader.cs"];
m7_286 [label="StringAssert.AreEqual(@''{\r\n  ''''BookName'''': ''''The Gathering Storm'''',\r\n  ''''BookPrice'''': 16.19\r\n}'', startingWithB)", span="543-546", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="JsonSerializerInternalReader.cs"];
m7_287 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", span="509-509", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.SingleTypeWithMultipleContractResolvers()", file="JsonSerializerInternalReader.cs"];
m7_71 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="211-211", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerInternalReader.cs"];
m7_43 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="37-37", cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", file="JsonSerializerInternalReader.cs"];
m7_165 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerInternalReader.cs"];
m7_58 [label="Entry Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", span="154-154", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", file="JsonSerializerInternalReader.cs"];
m7_59 [label="var resolver = new DefaultContractResolver()", span="156-156", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", file="JsonSerializerInternalReader.cs"];
m7_60 [label="var contract = (JsonObjectContract)resolver.ResolveContract(typeof(AbstractTestClass))", span="157-157", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", file="JsonSerializerInternalReader.cs"];
m7_64 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<AbstractTestClass>(@''{Value:'Value!'}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            }), ''Could not create an instance of type Newtonsoft.Json.Tests.Serialization.AbstractTestClass. Type is an interface or abstract class and cannot be instantiated. Path 'Value', line 1, position 7.'')", span="163-166", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", file="JsonSerializerInternalReader.cs"];
m7_66 [label="var o = JsonConvert.DeserializeObject<AbstractTestClass>(@''{Value:'Value!'}'', new JsonSerializerSettings\r\n            {\r\n                ContractResolver = resolver\r\n            })", span="170-173", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", file="JsonSerializerInternalReader.cs"];
m7_61 [label="Assert.IsFalse(contract.IsInstantiable)", span="159-159", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", file="JsonSerializerInternalReader.cs"];
m7_62 [label="Assert.IsNull(contract.DefaultCreator)", span="160-160", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", file="JsonSerializerInternalReader.cs"];
m7_63 [label="Assert.IsNull(contract.OverrideCreator)", span="161-161", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", file="JsonSerializerInternalReader.cs"];
m7_65 [label="contract.DefaultCreator = () => new AbstractImplementationTestClass()", span="168-168", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", file="JsonSerializerInternalReader.cs"];
m7_67 [label="Assert.AreEqual(''Value!'', o.Value)", span="175-175", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", file="JsonSerializerInternalReader.cs"];
m7_68 [label="Exit Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", span="154-154", cluster="Newtonsoft.Json.Tests.Serialization.ContractResolverTests.AbstractTestClass()", file="JsonSerializerInternalReader.cs"];
m7_299 [label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver", span="", file="JsonSerializerInternalReader.cs"];
m7_300 [label="Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver", span="", file="JsonSerializerInternalReader.cs"];
m7_301 [label="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver", span="", file="JsonSerializerInternalReader.cs"];
m7_302 [label=resolver, span="", file="JsonSerializerInternalReader.cs"];
m7_303 [label=resolver, span="", file="JsonSerializerInternalReader.cs"];
m7_304 [label=resolver, span="", file="JsonSerializerInternalReader.cs"];
m8_93 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.Post.Post()", span="313-313", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.Post.Post()", file="JsonSerializerTest.cs"];
m8_46 [label="Entry Newtonsoft.Json.Linq.JContainer.Descendants()", span="138-138", cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="JsonSerializerTest.cs"];
m8_125 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="36-36", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonSerializerTest.cs"];
m8_16 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="71-71", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonSerializerTest.cs"];
m8_20 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerTest.cs"];
m8_86 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="50-50", cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JsonSerializerTest.cs"];
m8_166 [label="Entry Newtonsoft.Json.Linq.JsonTokenWriter.JsonTokenWriter()", span="26-26", cluster="Newtonsoft.Json.Linq.JsonTokenWriter.JsonTokenWriter()", file="JsonSerializerTest.cs"];
m8_148 [label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int)", file="JsonSerializerTest.cs"];
m8_32 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs"];
m8_60 [label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="76-76", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JsonSerializerTest.cs"];
m8_165 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs"];
m8_58 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="181-181", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerTest.cs"];
m8_76 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", span="251-251", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="JsonSerializerTest.cs"];
m8_77 [label="JObject o =\r\n        new JObject(\r\n          new JProperty(''Test1'', ''Test1Value''),\r\n          new JProperty(''Test2'', ''Test2Value''),\r\n          new JProperty(''Test3'', ''Test3Value''),\r\n          new JProperty(''Test4'', null)\r\n        )", span="253-259", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="JsonSerializerTest.cs"];
m8_78 [label="Assert.AreEqual(4, o.Properties().Count())", span="261-261", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="JsonSerializerTest.cs"];
m8_79 [label="Assert.AreEqual(@''{\r\n  ''''Test1'''': ''''Test1Value'''',\r\n  ''''Test2'''': ''''Test2Value'''',\r\n  ''''Test3'''': ''''Test3Value'''',\r\n  ''''Test4'''': null\r\n}'', o.ToString())", span="263-268", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="JsonSerializerTest.cs"];
m8_80 [label="JArray a =\r\n        new JArray(\r\n          o,\r\n          new DateTime(2000, 10, 10, 0, 0, 0, DateTimeKind.Utc),\r\n          55,\r\n          new JArray(\r\n            ''1'',\r\n            2,\r\n            3.0,\r\n            new DateTime(4, 5, 6, 7, 8, 9, DateTimeKind.Utc)\r\n          ),\r\n          new JConstructor(\r\n            ''ConstructorName'',\r\n            ''param1'',\r\n            2,\r\n            3.0\r\n          )\r\n        )", span="270-287", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="JsonSerializerTest.cs"];
m8_81 [label="Assert.AreEqual(5, a.Count())", span="289-289", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="JsonSerializerTest.cs"];
m8_82 [label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Test1'''': ''''Test1Value'''',\r\n    ''''Test2'''': ''''Test2Value'''',\r\n    ''''Test3'''': ''''Test3Value'''',\r\n    ''''Test4'''': null\r\n  },\r\n  ''''\/Date(971136000000)\/'''',\r\n  55,\r\n  [\r\n    ''''1'''',\r\n    2,\r\n    3,\r\n    ''''\/Date(-62030076711000)\/''''\r\n  ],\r\n  new ConstructorName(\r\n    ''''param1'''',\r\n    2,\r\n    3\r\n  )\r\n]'', a.ToString())", span="290-310", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="JsonSerializerTest.cs"];
m8_83 [label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", span="251-251", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTree()", file="JsonSerializerTest.cs"];
m8_106 [label="Entry JArray.cstr", span="", cluster="JArray.cstr", file="JsonSerializerTest.cs"];
m8_164 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonSerializerTest.cs"];
m8_154 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="552-552", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs"];
m8_22 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="JsonSerializerTest.cs"];
m8_149 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="125-125", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs"];
m8_167 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", span="545-545", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="JsonSerializerTest.cs"];
m8_168 [label="List<Post> posts = GetPosts()", span="547-547", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="JsonSerializerTest.cs"];
m8_169 [label="JObject o = JObject.FromObject(new\r\n      {\r\n        channel = new\r\n        {\r\n          title = ''James Newton-King'',\r\n          link = ''http://james.newtonking.com'',\r\n          description = ''James Newton-King's blog.'',\r\n          item =\r\n              from p in posts\r\n              orderby p.Title\r\n              select new\r\n              {\r\n                title = p.Title,\r\n                description = p.Description,\r\n                link = p.Link,\r\n                category = p.Categories\r\n              }\r\n        }\r\n      })", span="549-567", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="JsonSerializerTest.cs"];
m8_170 [label="Console.WriteLine(o.ToString())", span="569-569", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="JsonSerializerTest.cs"];
m8_171 [label="Assert.IsInstanceOfType(typeof(JObject), o)", span="570-570", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="JsonSerializerTest.cs"];
m8_172 [label="Assert.IsInstanceOfType(typeof(JObject), o[''channel''])", span="571-571", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="JsonSerializerTest.cs"];
m8_173 [label="Assert.AreEqual(''James Newton-King'', (string)o[''channel''][''title''])", span="572-572", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="JsonSerializerTest.cs"];
m8_174 [label="Assert.AreEqual(2, o[''channel''][''item''].Children().Count())", span="573-573", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="JsonSerializerTest.cs"];
m8_175 [label="JArray a = JArray.FromObject(new List<int>() { 0, 1, 2, 3, 4 })", span="575-575", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="JsonSerializerTest.cs"];
m8_176 [label="Assert.IsInstanceOfType(typeof(JArray), a)", span="576-576", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="JsonSerializerTest.cs"];
m8_177 [label="Assert.AreEqual(5, a.Count())", span="577-577", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="JsonSerializerTest.cs"];
m8_178 [label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", span="545-545", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.FromObject()", file="JsonSerializerTest.cs"];
m8_15 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="139-139", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSerializerTest.cs"];
m8_94 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", span="343-343", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonSerializerTest.cs"];
m8_95 [label="List<Post> posts = GetPosts()", span="345-345", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonSerializerTest.cs"];
m8_96 [label="JObject rss =\r\n        new JObject(\r\n          new JProperty(''channel'',\r\n            new JObject(\r\n              new JProperty(''title'', ''James Newton-King''),\r\n              new JProperty(''link'', ''http://james.newtonking.com''),\r\n              new JProperty(''description'', ''James Newton-King's blog.''),\r\n              new JProperty(''item'',\r\n                new JArray(\r\n                  from p in posts\r\n                  orderby p.Title\r\n                  select new JObject(\r\n                    new JProperty(''title'', p.Title),\r\n                    new JProperty(''description'', p.Description),\r\n                    new JProperty(''link'', p.Link),\r\n                    new JProperty(''category'',\r\n                      new JArray(\r\n                        from c in p.Categories\r\n                        select new JValue(c)))))))))", span="347-365", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonSerializerTest.cs"];
m8_97 [label="Console.WriteLine(rss.ToString())", span="367-367", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonSerializerTest.cs"];
m8_98 [label="var postTitles =\r\n        from p in rss[''channel''][''item''].Children()\r\n        select p.Value<string>(''title'')", span="397-399", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonSerializerTest.cs"];
m8_101 [label="var categories =\r\n        from c in rss[''channel''][''item''].Children()[''category''].Values<string>()\r\n        group c by c into g\r\n        orderby g.Count() descending\r\n        select new { Category = g.Key, Count = g.Count() }", span="409-413", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonSerializerTest.cs"];
m8_99 [label=postTitles, span="401-401", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonSerializerTest.cs"];
m8_100 [label="Console.WriteLine(item)", span="403-403", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonSerializerTest.cs"];
m8_102 [label=categories, span="415-415", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonSerializerTest.cs"];
m8_103 [label="Console.WriteLine(c.Category + '' - Count: '' + c.Count)", span="417-417", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonSerializerTest.cs"];
m8_104 [label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", span="343-343", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonSerializerTest.cs"];
m8_107 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="73-73", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonSerializerTest.cs"];
m8_126 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.JArrayStringIndex()", span="477-477", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JArrayStringIndex()", file="JsonSerializerTest.cs"];
m8_127 [label="JArray a = new JArray()", span="479-479", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JArrayStringIndex()", file="JsonSerializerTest.cs"];
m8_128 [label="Assert.AreEqual(null, a[''purple''])", span="480-480", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JArrayStringIndex()", file="JsonSerializerTest.cs"];
m8_129 [label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.JArrayStringIndex()", span="477-477", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JArrayStringIndex()", file="JsonSerializerTest.cs"];
m8_47 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", span="184-184", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="JsonSerializerTest.cs"];
m8_48 [label="string json = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="186-192", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="JsonSerializerTest.cs"];
m8_49 [label="JObject o = JObject.Parse(json)", span="194-194", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="JsonSerializerTest.cs"];
m8_50 [label="Assert.AreEqual(@''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer'''',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'', o.ToString())", span="196-202", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="JsonSerializerTest.cs"];
m8_51 [label="JArray list = o.Value<JArray>(''Drives'')", span="204-204", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="JsonSerializerTest.cs"];
m8_53 [label="JProperty cpuProperty = o.Property(''CPU'')", span="211-211", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="JsonSerializerTest.cs"];
m8_55 [label="JProperty drivesProperty = o.Property(''Drives'')", span="214-214", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="JsonSerializerTest.cs"];
m8_52 [label="Assert.AreEqual(@''[\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', list.ToString())", span="206-209", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="JsonSerializerTest.cs"];
m8_54 [label="Assert.AreEqual(@''''''CPU'''': ''''Intel'''''', cpuProperty.ToString())", span="212-212", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="JsonSerializerTest.cs"];
m8_56 [label="Assert.AreEqual(@''''''Drives'''': [\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', drivesProperty.ToString())", span="215-218", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="JsonSerializerTest.cs"];
m8_57 [label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", span="184-184", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToString()", file="JsonSerializerTest.cs"];
m8_152 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs"];
m8_88 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", span="57-57", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", file="JsonSerializerTest.cs"];
m8_89 [label="Entry Newtonsoft.Json.Linq.JArray.Count()", span="71-71", cluster="Newtonsoft.Json.Linq.JArray.Count()", file="JsonSerializerTest.cs"];
m8_121 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.JObjectIntIndex()", span="469-469", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JObjectIntIndex()", file="JsonSerializerTest.cs"];
m8_122 [label="JObject o = new JObject()", span="471-471", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JObjectIntIndex()", file="JsonSerializerTest.cs"];
m8_123 [label="Assert.AreEqual(null, o[0])", span="472-472", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JObjectIntIndex()", file="JsonSerializerTest.cs"];
m8_124 [label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.JObjectIntIndex()", span="469-469", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JObjectIntIndex()", file="JsonSerializerTest.cs"];
m8_135 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor()", span="48-48", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor()", file="JsonSerializerTest.cs"];
m8_23 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", span="72-72", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", file="JsonSerializerTest.cs"];
m8_24 [label="string json = @''[0,1,2,3,4,5,6,7,8,9]''", span="74-74", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", file="JsonSerializerTest.cs"];
m8_25 [label="JArray a = JArray.Parse(json)", span="76-76", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", file="JsonSerializerTest.cs"];
m8_26 [label="List<int> list = a.Values<int>().ToList()", span="77-77", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", file="JsonSerializerTest.cs"];
m8_27 [label="List<int> expected = new List<int>() { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }", span="79-79", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", file="JsonSerializerTest.cs"];
m8_28 [label="CollectionAssert.AreEqual(expected, list)", span="81-81", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", file="JsonSerializerTest.cs"];
m8_29 [label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", span="72-72", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.CreateLongArray()", file="JsonSerializerTest.cs"];
m8_85 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="84-84", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSerializerTest.cs"];
m8_43 [label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="151-151", cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="JsonSerializerTest.cs"];
m8_59 [label="Entry Newtonsoft.Json.Linq.JToken.Value<T>(object)", span="126-126", cluster="Newtonsoft.Json.Linq.JToken.Value<T>(object)", file="JsonSerializerTest.cs"];
m8_108 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs"];
m8_131 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.JConstructorStringIndex()", span="485-485", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JConstructorStringIndex()", file="JsonSerializerTest.cs"];
m8_132 [label="JConstructor c = new JConstructor()", span="487-487", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JConstructorStringIndex()", file="JsonSerializerTest.cs"];
m8_133 [label="Assert.AreEqual(null, c[''purple''])", span="488-488", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JConstructorStringIndex()", file="JsonSerializerTest.cs"];
m8_134 [label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.JConstructorStringIndex()", span="485-485", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JConstructorStringIndex()", file="JsonSerializerTest.cs"];
m8_151 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSerializerTest.cs"];
m8_18 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSerializerTest.cs"];
m8_120 [label="Entry Unk.IsInstanceOfType", span="", cluster="Unk.IsInstanceOfType", file="JsonSerializerTest.cs"];
m8_136 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", span="492-492", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="JsonSerializerTest.cs"];
m8_137 [label="JObject o =\r\n        new JObject(\r\n          new JProperty(''Test1'', new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc)),\r\n          new JProperty(''Test2'', new DateTimeOffset(2000, 10, 15, 5, 5, 5, new TimeSpan(11, 11, 0))),\r\n          new JProperty(''Test3'', ''Test3Value''),\r\n          new JProperty(''Test4'', null)\r\n        )", span="494-500", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="JsonSerializerTest.cs"];
m8_138 [label="JsonSerializer serializer = new JsonSerializer()", span="502-502", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="JsonSerializerTest.cs"];
m8_143 [label="serializer.Serialize(writer, o)", span="507-507", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="JsonSerializerTest.cs"];
m8_139 [label="serializer.Converters.Add(new JavaScriptDateTimeConverter())", span="503-503", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="JsonSerializerTest.cs"];
m8_140 [label="StringWriter sw = new StringWriter()", span="504-504", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="JsonSerializerTest.cs"];
m8_141 [label="JsonWriter writer = new JsonTextWriter(sw)", span="505-505", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="JsonSerializerTest.cs"];
m8_144 [label="string json = sw.ToString()", span="509-509", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="JsonSerializerTest.cs"];
m8_142 [label="writer.Formatting = Formatting.Indented", span="506-506", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="JsonSerializerTest.cs"];
m8_145 [label="Assert.AreEqual(@''{\r\n  ''''Test1'''': new Date(\r\n    971586305000\r\n  ),\r\n  ''''Test2'''': new Date(\r\n    971546045000\r\n  ),\r\n  ''''Test3'''': ''''Test3Value'''',\r\n  ''''Test4'''': null\r\n}'', json)", span="511-520", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="JsonSerializerTest.cs"];
m8_146 [label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", span="492-492", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ToStringJsonConverter()", file="JsonSerializerTest.cs"];
m8_0 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", span="40-40", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="JsonSerializerTest.cs"];
m8_1 [label="string json = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="42-48", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="JsonSerializerTest.cs"];
m8_2 [label="JObject o = JObject.Parse(json)", span="50-50", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="JsonSerializerTest.cs"];
m8_3 [label="IList<JProperty> properties = o.Properties().ToList()", span="51-51", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="JsonSerializerTest.cs"];
m8_11 [label="List<object> parameterValues =\r\n        (from p in o.Properties()\r\n         where p.Value is JValue\r\n         select ((JValue)p.Value).Value).ToList()", span="62-65", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="JsonSerializerTest.cs"];
m8_4 [label="Assert.AreEqual(''CPU'', properties[0].Name)", span="53-53", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="JsonSerializerTest.cs"];
m8_5 [label="Assert.AreEqual(''Intel'', (string)properties[0].Value)", span="54-54", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="JsonSerializerTest.cs"];
m8_6 [label="Assert.AreEqual(''Drives'', properties[1].Name)", span="55-55", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="JsonSerializerTest.cs"];
m8_7 [label="JArray list = (JArray)properties[1].Value", span="57-57", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="JsonSerializerTest.cs"];
m8_8 [label="Assert.AreEqual(2, list.Children().Count())", span="58-58", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="JsonSerializerTest.cs"];
m8_9 [label="Assert.AreEqual(''DVD read/writer'', (string)list.Children().ElementAt(0))", span="59-59", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="JsonSerializerTest.cs"];
m8_10 [label="Assert.AreEqual(''500 gigabyte hard drive'', (string)list.Children().ElementAt(1))", span="60-60", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="JsonSerializerTest.cs"];
m8_12 [label="Assert.AreEqual(1, parameterValues.Count)", span="67-67", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="JsonSerializerTest.cs"];
m8_13 [label="Assert.AreEqual(''Intel'', parameterValues[0])", span="68-68", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="JsonSerializerTest.cs"];
m8_14 [label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", span="40-40", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.ObjectParse()", file="JsonSerializerTest.cs"];
m8_31 [label="Entry Newtonsoft.Json.Linq.JContainer.Values<T>()", span="126-126", cluster="Newtonsoft.Json.Linq.JContainer.Values<T>()", file="JsonSerializerTest.cs"];
m8_150 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="9-9", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonSerializerTest.cs"];
m8_21 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerTest.cs"];
m8_61 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", span="222-222", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="JsonSerializerTest.cs"];
m8_62 [label="string json = @''{''''Color'''':2,''''Establised'''':new Date(1264118400000),''''Width'''':1.1,''''Employees'''':999,''''RoomsPerFloor'''':[1,2,3,4,5,6,7,8,9],''''Open'''':false,''''Symbol'''':''''@'''',''''Mottos'''':[''''Hello World'''',''''öäüÖÄÜ\\'{new Date(12345);}[222]_µ@²³~'''',null,'''' ''''],''''Cost'''':100980.1,''''Escape'''':''''\r\n\t\f\b?{\\r\\n\''''''''',''''product'''':[{''''Name'''':''''Rocket'''',''''Expiry'''':new Date(949532490000),''''Price'''':0},{''''Name'''':''''Alien'''',''''Expiry'''':new Date(-62135596800000),''''Price'''':0}]}''", span="224-224", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="JsonSerializerTest.cs"];
m8_63 [label="JObject o = JObject.Parse(json)", span="226-226", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="JsonSerializerTest.cs"];
m8_64 [label="Assert.AreEqual(@''''''Establised'''': new Date(\r\n  1264118400000\r\n)'', o.Property(''Establised'').ToString())", span="228-230", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="JsonSerializerTest.cs"];
m8_65 [label="Assert.AreEqual(@''new Date(\r\n  1264118400000\r\n)'', o.Property(''Establised'').Value.ToString())", span="231-233", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="JsonSerializerTest.cs"];
m8_66 [label="Assert.AreEqual(@''''''Width'''': 1.1'', o.Property(''Width'').ToString())", span="234-234", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="JsonSerializerTest.cs"];
m8_67 [label="Assert.AreEqual(@''1.1'', o.Property(''Width'').Value.ToString())", span="235-235", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="JsonSerializerTest.cs"];
m8_68 [label="Assert.AreEqual(@''''''Open'''': false'', o.Property(''Open'').ToString())", span="236-236", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="JsonSerializerTest.cs"];
m8_69 [label="Assert.AreEqual(@''false'', o.Property(''Open'').Value.ToString())", span="237-237", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="JsonSerializerTest.cs"];
m8_70 [label="json = @''[null,undefined]''", span="239-239", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="JsonSerializerTest.cs"];
m8_71 [label="JArray a = JArray.Parse(json)", span="241-241", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="JsonSerializerTest.cs"];
m8_72 [label="Assert.AreEqual(@''[\r\n  null,\r\n  undefined\r\n]'', a.ToString())", span="242-245", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="JsonSerializerTest.cs"];
m8_73 [label="Assert.AreEqual(@''null'', a.Children().ElementAt(0).ToString())", span="246-246", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="JsonSerializerTest.cs"];
m8_74 [label="Assert.AreEqual(@''undefined'', a.Children().ElementAt(1).ToString())", span="247-247", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="JsonSerializerTest.cs"];
m8_75 [label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", span="222-222", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.JTokenToStringTypes()", file="JsonSerializerTest.cs"];
m8_30 [label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="99-99", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JsonSerializerTest.cs"];
m8_84 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="45-45", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonSerializerTest.cs"];
m8_109 [label="Entry Unk.WriteLine", span="", cluster="Unk.WriteLine", file="JsonSerializerTest.cs"];
m8_110 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", span="89-89", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", file="JsonSerializerTest.cs"];
m8_155 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonSerializerTest.cs"];
m8_179 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="146-146", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSerializerTest.cs"];
m8_45 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>(object)", span="84-84", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>(object)", file="JsonSerializerTest.cs"];
m8_87 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs"];
m8_33 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", span="85-85", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m8_34 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="88-165", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m8_35 [label="JObject o = JObject.Parse(json)", span="168-168", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m8_36 [label="List<JObject> resultObjects = o[''results''].Children<JObject>().ToList()", span="170-170", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m8_37 [label="List<string> resultUrls = o[''results''].Children().Values<string>(''url'').ToList()", span="173-173", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m8_40 [label="List<JToken> descendants = o.Descendants().ToList()", span="179-179", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m8_38 [label="List<string> expectedUrls = new List<string>() { ''http://www.google.com/'', ''http://news.google.com/'', ''http://groups.google.com/'', ''http://maps.google.com/'' }", span="175-175", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m8_39 [label="CollectionAssert.AreEqual(expectedUrls, resultUrls)", span="177-177", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m8_41 [label="Assert.AreEqual(89, descendants.Count)", span="180-180", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m8_42 [label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", span="85-85", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m8_147 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs"];
m8_156 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", span="524-524", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="JsonSerializerTest.cs"];
m8_157 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset> {\r\n        new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n      }", span="526-531", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="JsonSerializerTest.cs"];
m8_158 [label="JsonSerializer jsonSerializer = new JsonSerializer()", span="533-533", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="JsonSerializerTest.cs"];
m8_161 [label="jsonSerializer.Serialize(jsonWriter, testDates)", span="538-538", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="JsonSerializerTest.cs"];
m8_159 [label="JsonTokenWriter jsonWriter", span="535-535", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="JsonSerializerTest.cs"];
m8_160 [label="jsonWriter = new JsonTokenWriter()", span="536-536", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="JsonSerializerTest.cs"];
m8_162 [label="Assert.AreEqual(4, jsonWriter.Token.Children().Count())", span="541-541", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="JsonSerializerTest.cs"];
m8_163 [label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", span="524-524", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.DateTimeOffset()", file="JsonSerializerTest.cs"];
m8_105 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="50-50", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonSerializerTest.cs"];
m8_153 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="97-97", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs"];
m8_44 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="145-145", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonSerializerTest.cs"];
m8_19 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="108-108", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonSerializerTest.cs"];
m8_180 [label="Entry Newtonsoft.Json.Linq.JArray.FromObject(object)", span="114-114", cluster="Newtonsoft.Json.Linq.JArray.FromObject(object)", file="JsonSerializerTest.cs"];
m8_130 [label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="41-41", cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JsonSerializerTest.cs"];
m8_17 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerTest.cs"];
m8_111 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", span="426-426", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="JsonSerializerTest.cs"];
m8_112 [label="string json = @''{\r\n                        ''''channel'''': {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and the source being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        }\r\n                      }''", span="428-454", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="JsonSerializerTest.cs"];
m8_113 [label="JObject o = JObject.Parse(json)", span="456-456", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="JsonSerializerTest.cs"];
m8_114 [label="Assert.AreEqual(null, o[''purple''])", span="458-458", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="JsonSerializerTest.cs"];
m8_115 [label="Assert.AreEqual(null, o.Value<string>(''purple''))", span="459-459", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="JsonSerializerTest.cs"];
m8_116 [label="Assert.IsInstanceOfType(typeof(JArray), o[''channel''][''item''])", span="461-461", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="JsonSerializerTest.cs"];
m8_117 [label="Assert.AreEqual(2, o[''channel''][''item''].Children()[''title''].Count())", span="463-463", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="JsonSerializerTest.cs"];
m8_118 [label="Assert.AreEqual(0, o[''channel''][''item''].Children()[''monkey''].Count())", span="464-464", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="JsonSerializerTest.cs"];
m8_119 [label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", span="426-426", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.BasicQuerying()", file="JsonSerializerTest.cs"];
m8_90 [label="Entry Newtonsoft.Json.Tests.LinqToJsonTest.GetPosts()", span="321-321", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GetPosts()", file="JsonSerializerTest.cs"];
m8_91 [label="return new List<Post>()\r\n      {\r\n        new Post()\r\n        {\r\n          Title = ''LINQ to JSON beta'',\r\n          Description = ''Annoucing LINQ to JSON'',\r\n          Link = ''http://james.newtonking.com/projects/json-net.aspx'',\r\n          Categories = new List<string>() { ''Json.NET'', ''LINQ'' }\r\n        },\r\n        new Post()\r\n        {\r\n          Title = ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n          Description = ''Annoucing the release of Json.NET 1.3, the MIT license and the source being available on CodePlex'',\r\n          Link = ''http://james.newtonking.com/projects/json-net.aspx'',\r\n          Categories = new List<string>() { ''Json.NET'', ''CodePlex'' }\r\n        }\r\n      };", span="323-339", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GetPosts()", file="JsonSerializerTest.cs"];
m8_92 [label="Exit Newtonsoft.Json.Tests.LinqToJsonTest.GetPosts()", span="321-321", cluster="Newtonsoft.Json.Tests.LinqToJsonTest.GetPosts()", file="JsonSerializerTest.cs"];
m8_181 [label="Newtonsoft.Json.Tests.LinqToJsonTest", span="", file="JsonSerializerTest.cs"];
m11_32 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.GetConverter(System.Type)", span="121-121", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.GetConverter(System.Type)", file="QueryExpressionTests.cs"];
m11_33 [label="var converters = type.GetCustomAttributes(typeof(TypeConverterAttribute), true).Union(\r\n                from t in type.GetInterfaces()\r\n                from c in t.GetCustomAttributes(typeof(TypeConverterAttribute), true)\r\n                select c).Distinct()", span="123-126", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.GetConverter(System.Type)", file="QueryExpressionTests.cs"];
m11_34 [label="return\r\n                (from c in converters\r\n                 let converter =\r\n                     (TypeConverter)Activator.CreateInstance(Type.GetType(((TypeConverterAttribute)c).ConverterTypeName))\r\n                 where converter.CanConvertFrom(typeof(string))\r\n                       && converter.CanConvertTo(typeof(string))\r\n                 select converter)\r\n                    .FirstOrDefault();", span="128-135", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.GetConverter(System.Type)", file="QueryExpressionTests.cs"];
m11_35 [label="Exit Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.GetConverter(System.Type)", span="121-121", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.GetConverter(System.Type)", file="QueryExpressionTests.cs"];
m11_26 [label="Entry Newtonsoft.Json.Tests.TestObjects.TraceWriter.ToString()", span="108-108", cluster="Newtonsoft.Json.Tests.TestObjects.TraceWriter.ToString()", file="QueryExpressionTests.cs"];
m11_27 [label="return Name;", span="110-110", cluster="Newtonsoft.Json.Tests.TestObjects.TraceWriter.ToString()", file="QueryExpressionTests.cs"];
m11_28 [label="Exit Newtonsoft.Json.Tests.TestObjects.TraceWriter.ToString()", span="108-108", cluster="Newtonsoft.Json.Tests.TestObjects.TraceWriter.ToString()", file="QueryExpressionTests.cs"];
m11_50 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="QueryExpressionTests.cs"];
m11_42 [label="Entry Unk.CanConvertFrom", span="", cluster="Unk.CanConvertFrom", file="QueryExpressionTests.cs"];
m11_43 [label="Entry Unk.CanConvertTo", span="", cluster="Unk.CanConvertTo", file="QueryExpressionTests.cs"];
m11_20 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.PrintTest()", span="90-90", cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.PrintTest()", file="QueryExpressionTests.cs"];
m11_21 [label="return ''ConsoleWriter'';", span="92-92", cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.PrintTest()", file="QueryExpressionTests.cs"];
m11_22 [label="Exit Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.PrintTest()", span="90-90", cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.PrintTest()", file="QueryExpressionTests.cs"];
m11_39 [label="Entry Unk.Distinct", span="", cluster="Unk.Distinct", file="QueryExpressionTests.cs"];
m11_23 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ToString()", span="95-95", cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ToString()", file="QueryExpressionTests.cs"];
m11_24 [label="return Name;", span="97-97", cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ToString()", file="QueryExpressionTests.cs"];
m11_25 [label="Exit Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ToString()", span="95-95", cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ToString()", file="QueryExpressionTests.cs"];
m11_57 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.CanConvert(System.Type)", span="153-153", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.CanConvert(System.Type)", file="QueryExpressionTests.cs"];
m11_58 [label="return GetConverter(objectType) != null;", span="155-155", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.CanConvert(System.Type)", file="QueryExpressionTests.cs"];
m11_59 [label="Exit Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.CanConvert(System.Type)", span="153-153", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.CanConvert(System.Type)", file="QueryExpressionTests.cs"];
m11_40 [label="Entry System.Type.GetType(string)", span="0-0", cluster="System.Type.GetType(string)", file="QueryExpressionTests.cs"];
m11_29 [label="Entry Newtonsoft.Json.Tests.TestObjects.TraceWriter.PrintTest()", span="113-113", cluster="Newtonsoft.Json.Tests.TestObjects.TraceWriter.PrintTest()", file="QueryExpressionTests.cs"];
m11_30 [label="return ''TraceWriter'';", span="115-115", cluster="Newtonsoft.Json.Tests.TestObjects.TraceWriter.PrintTest()", file="QueryExpressionTests.cs"];
m11_31 [label="Exit Newtonsoft.Json.Tests.TestObjects.TraceWriter.PrintTest()", span="113-113", cluster="Newtonsoft.Json.Tests.TestObjects.TraceWriter.PrintTest()", file="QueryExpressionTests.cs"];
m11_44 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="139-139", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="QueryExpressionTests.cs"];
m11_45 [label="var converter = GetConverter(value.GetType())", span="141-141", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="QueryExpressionTests.cs"];
m11_46 [label="var text = converter.ConvertToInvariantString(value)", span="142-142", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="QueryExpressionTests.cs"];
m11_47 [label="writer.WriteValue(text)", span="144-144", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="QueryExpressionTests.cs"];
m11_48 [label="Exit Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="139-139", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="QueryExpressionTests.cs"];
m11_13 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="QueryExpressionTests.cs"];
m11_15 [label="Entry Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="73-73", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="QueryExpressionTests.cs"];
m11_16 [label="value == null", span="76-76", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="QueryExpressionTests.cs"];
m11_18 [label="return ((IMyInterface)value).Name;", span="78-78", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="QueryExpressionTests.cs"];
m11_17 [label="return null;", span="77-77", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="QueryExpressionTests.cs"];
m11_19 [label="Exit Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="73-73", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="QueryExpressionTests.cs"];
m11_51 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="813-813", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="QueryExpressionTests.cs"];
m11_38 [label="Entry Unk.Union", span="", cluster="Unk.Union", file="QueryExpressionTests.cs"];
m11_37 [label="Entry System.Type.GetInterfaces()", span="0-0", cluster="System.Type.GetInterfaces()", file="QueryExpressionTests.cs"];
m11_5 [label="Entry Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="60-60", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="QueryExpressionTests.cs"];
m11_6 [label="return sourceType == typeof(string);", span="62-62", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="QueryExpressionTests.cs"];
m11_7 [label="Exit Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="60-60", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="QueryExpressionTests.cs"];
m11_36 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="QueryExpressionTests.cs"];
m11_14 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="QueryExpressionTests.cs"];
m11_56 [label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="QueryExpressionTests.cs"];
m11_41 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="QueryExpressionTests.cs"];
m11_2 [label="Entry Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="55-55", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="QueryExpressionTests.cs"];
m11_3 [label="return destinationType == typeof(string);", span="57-57", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="QueryExpressionTests.cs"];
m11_4 [label="Exit Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="55-55", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="QueryExpressionTests.cs"];
m11_8 [label="Entry Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="65-65", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="QueryExpressionTests.cs"];
m11_9 [label="value == null", span="67-67", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="QueryExpressionTests.cs"];
m11_11 [label="return (from w in _writers where w.Name == value.ToString() select w).FirstOrDefault();", span="70-70", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="QueryExpressionTests.cs"];
m11_10 [label="return null;", span="68-68", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="QueryExpressionTests.cs"];
m11_12 [label="Exit Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="65-65", cluster="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="QueryExpressionTests.cs"];
m11_49 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="QueryExpressionTests.cs"];
m11_0 [label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="44-44", cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="QueryExpressionTests.cs"];
m11_1 [label="Exit Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="44-44", cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="QueryExpressionTests.cs"];
m11_52 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="147-147", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="QueryExpressionTests.cs"];
m11_53 [label="var converter = GetConverter(objectType)", span="149-149", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="QueryExpressionTests.cs"];
m11_54 [label="return converter.ConvertFromInvariantString(reader.Value.ToString());", span="150-150", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="QueryExpressionTests.cs"];
m11_55 [label="Exit Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="147-147", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="QueryExpressionTests.cs"];
m11_60 [label="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter", span="", file="QueryExpressionTests.cs"];
m11_61 [label="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter", span="", file="QueryExpressionTests.cs"];
m11_62 [label="Newtonsoft.Json.Tests.TestObjects.TraceWriter", span="", file="QueryExpressionTests.cs"];
m11_63 [label="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter", span="", file="QueryExpressionTests.cs"];
m12_0 [label="Entry Newtonsoft.Json.Linq.JsonPath.QueryFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", span="10-10", cluster="Newtonsoft.Json.Linq.JsonPath.QueryFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="QueryFilter.cs"];
m12_1 [label=current, span="12-12", cluster="Newtonsoft.Json.Linq.JsonPath.QueryFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="QueryFilter.cs"];
m12_4 [label="yield return v;", span="17-17", cluster="Newtonsoft.Json.Linq.JsonPath.QueryFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="QueryFilter.cs"];
m12_2 [label=t, span="14-14", cluster="Newtonsoft.Json.Linq.JsonPath.QueryFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="QueryFilter.cs"];
m12_3 [label="Expression.IsMatch(v)", span="16-16", cluster="Newtonsoft.Json.Linq.JsonPath.QueryFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="QueryFilter.cs"];
m12_5 [label="Exit Newtonsoft.Json.Linq.JsonPath.QueryFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", span="10-10", cluster="Newtonsoft.Json.Linq.JsonPath.QueryFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="QueryFilter.cs"];
m12_6 [label="Entry Newtonsoft.Json.Linq.JsonPath.QueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", span="23-23", cluster="Newtonsoft.Json.Linq.JsonPath.QueryExpression.IsMatch(Newtonsoft.Json.Linq.JToken)", file="QueryFilter.cs"];
m12_7 [label="Newtonsoft.Json.Linq.JsonPath.QueryFilter", span="", file="QueryFilter.cs"];
m13_6 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="ReflectionUtils.cs"];
m13_0 [label="Entry Newtonsoft.Json.TestConsole.Program.Main(string[])", span="34-34", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="ReflectionUtils.cs"];
m13_1 [label="string version = FileVersionInfo.GetVersionInfo(typeof(JsonConvert).Assembly.Location).FileVersion", span="36-36", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", color=green, community=0, file="ReflectionUtils.cs"];
m13_2 [label="Console.WriteLine(''Json.NET Version: '' + version)", span="37-37", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", color=green, community=0, file="ReflectionUtils.cs"];
m13_3 [label="new BenchmarkSwitcher(new [] { typeof(LowLevelBenchmarks) }).Run(new[] { ''*'' })", span="39-39", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", color=green, community=0, file="ReflectionUtils.cs"];
m13_4 [label="Exit Newtonsoft.Json.TestConsole.Program.Main(string[])", span="34-34", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", color=green, community=0, file="ReflectionUtils.cs"];
m13_5 [label="Entry System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", span="0-0", cluster="System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", file="ReflectionUtils.cs"];
m13_8 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="ReflectionUtils.cs"];
m13_14 [label="Entry Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", span="135-135", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="ReflectionUtils.cs"];
m13_16 [label="XmlDocument doc = new XmlDocument()", span="144-144", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="ReflectionUtils.cs"];
m13_20 [label="doc = new XmlDocument()", span="163-163", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="ReflectionUtils.cs"];
m13_17 [label="doc.LoadXml(xml)", span="145-145", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="ReflectionUtils.cs"];
m13_21 [label="doc.LoadXml(xml)", span="164-164", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="ReflectionUtils.cs"];
m13_18 [label="string json = JsonConvert.SerializeXmlNode(doc)", span="147-147", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="ReflectionUtils.cs"];
m13_22 [label="json = JsonConvert.SerializeXmlNode(doc)", span="166-166", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="ReflectionUtils.cs"];
m13_15 [label="string xml = @''<person id='1'>\r\n			  <name>Alan</name>\r\n			  <url>http://www.google.com</url>\r\n			  <role>Admin1</role>\r\n			</person>''", span="138-142", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="ReflectionUtils.cs"];
m13_19 [label="xml = @''<person xmlns:json='http://james.newtonking.com/projects/json' id='1'>\r\n			  <name>Alan</name>\r\n			  <url>http://www.google.com</url>\r\n			  <role json:Array='true'>Admin</role>\r\n			</person>''", span="157-161", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="ReflectionUtils.cs"];
m13_23 [label="Exit Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", span="135-135", cluster="Newtonsoft.Json.Tests.Documentation.ConvertingJsonAndXmlTests.ForceJsonArray()", file="ReflectionUtils.cs"];
m13_7 [label="Entry BenchmarkSwitcher.cstr", span="", cluster="BenchmarkSwitcher.cstr", file="ReflectionUtils.cs"];
m14_0 [label="Entry Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.DataServicesTestDatabaseEntities()", span="40-40", cluster="Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.DataServicesTestDatabaseEntities()", file="StringEnumConverter.cs"];
m14_1 [label="OnContextCreated()", span="42-42", cluster="Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.DataServicesTestDatabaseEntities()", color=green, community=0, file="StringEnumConverter.cs"];
m14_2 [label="Exit Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.DataServicesTestDatabaseEntities()", span="40-40", cluster="Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.DataServicesTestDatabaseEntities()", file="StringEnumConverter.cs"];
m14_40 [label="Exit Newtonsoft.Json.Tests.File.OnCreatedDateChanging(System.DateTime)", span="258-258", cluster="Newtonsoft.Json.Tests.File.OnCreatedDateChanging(System.DateTime)", file="StringEnumConverter.cs"];
m14_56 [label="Entry Newtonsoft.Json.Tests.Folder.OnNameChanging(string)", span="387-387", cluster="Newtonsoft.Json.Tests.Folder.OnNameChanging(string)", file="StringEnumConverter.cs"];
m14_57 [label="Exit Newtonsoft.Json.Tests.Folder.OnNameChanging(string)", span="387-387", cluster="Newtonsoft.Json.Tests.Folder.OnNameChanging(string)", file="StringEnumConverter.cs"];
m14_18 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1396-1396", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="StringEnumConverter.cs"];
m14_19 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="StringEnumConverter.cs"];
m14_20 [label="Entry Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", span="219-219", cluster="Newtonsoft.Json.Utilities.EnumUtils.ToEnumName(System.Type, string, bool)", file="StringEnumConverter.cs"];
m14_21 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="917-917", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="StringEnumConverter.cs"];
m14_22 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="106-106", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_23 [label="bool isNullable = ReflectionUtils.IsNullableType(objectType)", span="108-108", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_24 [label="Type t = isNullable ? Nullable.GetUnderlyingType(objectType) : objectType", span="109-109", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_25 [label="reader.TokenType == JsonToken.Null", span="111-111", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_52 [label="return t.IsEnum();", span="161-161", cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="StringEnumConverter.cs"];
m14_53 [label="Exit Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", span="155-155", cluster="Newtonsoft.Json.Converters.StringEnumConverter.CanConvert(System.Type)", file="StringEnumConverter.cs"];
m14_41 [label="Entry Newtonsoft.Json.Tests.File.OnCreatedDateChanged()", span="259-259", cluster="Newtonsoft.Json.Tests.File.OnCreatedDateChanged()", file="StringEnumConverter.cs"];
m14_50 [label="Exit Newtonsoft.Json.Tests.Folder.CreateFolder(System.Guid, string, string, System.DateTime)", span="325-325", cluster="Newtonsoft.Json.Tests.Folder.CreateFolder(System.Guid, string, string, System.DateTime)", file="StringEnumConverter.cs"];
m14_51 [label="Entry Newtonsoft.Json.Tests.Folder.Folder()", span="314-314", cluster="Newtonsoft.Json.Tests.Folder.Folder()", file="StringEnumConverter.cs"];
m14_27 [label="throw JsonSerializationException.Create(reader, ''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="115-115", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_28 [label="return null;", span="118-118", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_45 [label="folder.FolderId = folderId", span="328-328", cluster="Newtonsoft.Json.Tests.Folder.CreateFolder(System.Guid, string, string, System.DateTime)", file="StringEnumConverter.cs"];
m14_33 [label="!AllowIntegerValues", span="131-131", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_34 [label="throw JsonSerializationException.Create(reader, ''Integer value {0} is not allowed.''.FormatWith(CultureInfo.InvariantCulture, reader.Value));", span="133-133", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_7 [label="Enum e = (Enum)value", span="79-79", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_8 [label="string enumName = e.ToString(''G'')", span="81-81", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_9 [label="char.IsNumber(enumName[0]) || enumName[0] == '-'", span="83-83", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_17 [label="Exit Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.AddToFolder(Newtonsoft.Json.Tests.Folder)", span="118-118", cluster="Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.AddToFolder(Newtonsoft.Json.Tests.Folder)", file="StringEnumConverter.cs"];
m14_49 [label="return folder;", span="332-332", cluster="Newtonsoft.Json.Tests.Folder.CreateFolder(System.Guid, string, string, System.DateTime)", file="StringEnumConverter.cs"];
m14_11 [label="Type enumType = e.GetType()", span="90-90", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_12 [label="string finalName = EnumUtils.ToEnumName(enumType, enumName, CamelCaseText)", span="92-92", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_13 [label="writer.WriteValue(finalName)", span="94-94", cluster="Newtonsoft.Json.Converters.StringEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_44 [label="Folder folder = new Folder()", span="327-327", cluster="Newtonsoft.Json.Tests.Folder.CreateFolder(System.Guid, string, string, System.DateTime)", file="StringEnumConverter.cs"];
m14_46 [label="folder.Name = name", span="329-329", cluster="Newtonsoft.Json.Tests.Folder.CreateFolder(System.Guid, string, string, System.DateTime)", file="StringEnumConverter.cs"];
m14_54 [label="Entry System.Type.IsEnum()", span="174-174", cluster="System.Type.IsEnum()", file="StringEnumConverter.cs"];
m14_55 [label="Newtonsoft.Json.Converters.StringEnumConverter", span="", cluster="Newtonsoft.Json.Tests.Folder.OnFolderIdChanged()", file="StringEnumConverter.cs"];
m14_66 [label="Entry Newtonsoft.Json.Tests.Folder.OnCreatedDateChanged()", span="436-436", cluster="Newtonsoft.Json.Tests.Folder.OnCreatedDateChanged()", file="StringEnumConverter.cs"];
m14_67 [label="Exit Newtonsoft.Json.Tests.Folder.OnCreatedDateChanged()", span="436-436", cluster="Newtonsoft.Json.Tests.Folder.OnCreatedDateChanged()", file="StringEnumConverter.cs"];
m14_3 [label="Entry Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.OnContextCreated()", span="65-65", cluster="Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.OnContextCreated()", file="StringEnumConverter.cs"];
m14_4 [label="Entry Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.DataServicesTestDatabaseEntities(string)", span="48-48", cluster="Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.DataServicesTestDatabaseEntities(string)", file="StringEnumConverter.cs"];
m14_10 [label="Exit Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.OnContextCreated()", span="65-65", cluster="Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.OnContextCreated()", file="StringEnumConverter.cs"];
m14_5 [label="OnContextCreated()", span="50-50", cluster="Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.DataServicesTestDatabaseEntities(string)", file="StringEnumConverter.cs"];
m14_6 [label="Exit Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.DataServicesTestDatabaseEntities(string)", span="48-48", cluster="Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.DataServicesTestDatabaseEntities(string)", file="StringEnumConverter.cs"];
m14_14 [label="Entry Unk.AddObject", span="", cluster="Unk.AddObject", file="StringEnumConverter.cs"];
m14_35 [label="return ConvertUtils.ConvertOrCast(reader.Value, CultureInfo.InvariantCulture, t);", span="136-136", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_36 [label=Exception, span="139-139", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_47 [label="folder.Description = description", span="330-330", cluster="Newtonsoft.Json.Tests.Folder.CreateFolder(System.Guid, string, string, System.DateTime)", file="StringEnumConverter.cs"];
m14_31 [label="return EnumUtils.ParseEnumName(enumText, isNullable, t);", span="126-126", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_32 [label="reader.TokenType == JsonToken.Integer", span="129-129", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_60 [label="Entry Newtonsoft.Json.Tests.Folder.OnDescriptionChanging(string)", span="411-411", cluster="Newtonsoft.Json.Tests.Folder.OnDescriptionChanging(string)", file="StringEnumConverter.cs"];
m14_61 [label="Exit Newtonsoft.Json.Tests.Folder.OnDescriptionChanging(string)", span="411-411", cluster="Newtonsoft.Json.Tests.Folder.OnDescriptionChanging(string)", file="StringEnumConverter.cs"];
m14_37 [label="throw JsonSerializationException.Create(reader, ''Error converting value {0} to type '{1}'.''.FormatWith(CultureInfo.InvariantCulture, MiscellaneousUtils.FormatValueForPrint(reader.Value), objectType), ex);", span="141-141", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_38 [label="throw JsonSerializationException.Create(reader, ''Unexpected token {0} when parsing enum.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="145-145", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_15 [label="Entry Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.AddToFolder(Newtonsoft.Json.Tests.Folder)", span="118-118", cluster="Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities.AddToFolder(Newtonsoft.Json.Tests.Folder)", file="StringEnumConverter.cs"];
m14_16 [label="Entry System.Enum.ToString(string)", span="0-0", cluster="System.Enum.ToString(string)", file="StringEnumConverter.cs"];
m14_42 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="StringEnumConverter.cs"];
m14_39 [label="Exit Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="106-106", cluster="Newtonsoft.Json.Converters.StringEnumConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverter.cs"];
m14_64 [label="Entry Newtonsoft.Json.Tests.Folder.OnCreatedDateChanging(System.DateTime)", span="435-435", cluster="Newtonsoft.Json.Tests.Folder.OnCreatedDateChanging(System.DateTime)", file="StringEnumConverter.cs"];
m14_65 [label="Exit Newtonsoft.Json.Tests.Folder.OnCreatedDateChanging(System.DateTime)", span="435-435", cluster="Newtonsoft.Json.Tests.Folder.OnCreatedDateChanging(System.DateTime)", file="StringEnumConverter.cs"];
m14_43 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="StringEnumConverter.cs"];
m14_48 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="StringEnumConverter.cs"];
m14_62 [label="Entry Newtonsoft.Json.Tests.Folder.OnDescriptionChanged()", span="412-412", cluster="Newtonsoft.Json.Tests.Folder.OnDescriptionChanged()", file="StringEnumConverter.cs"];
m14_63 [label="Exit Newtonsoft.Json.Tests.Folder.OnDescriptionChanged()", span="412-412", cluster="Newtonsoft.Json.Tests.Folder.OnDescriptionChanged()", file="StringEnumConverter.cs"];
m14_58 [label="Entry Newtonsoft.Json.Tests.Folder.OnNameChanged()", span="388-388", cluster="Newtonsoft.Json.Tests.Folder.OnNameChanged()", file="StringEnumConverter.cs"];
m14_59 [label="Exit Newtonsoft.Json.Tests.Folder.OnNameChanged()", span="388-388", cluster="Newtonsoft.Json.Tests.Folder.OnNameChanged()", file="StringEnumConverter.cs"];
m14_29 [label="Entry Newtonsoft.Json.Tests.File.OnFileIdChanged()", span="187-187", cluster="Newtonsoft.Json.Tests.File.OnFileIdChanged()", file="StringEnumConverter.cs"];
m14_26 [label="Entry Newtonsoft.Json.Tests.File.File()", span="137-137", cluster="Newtonsoft.Json.Tests.File.File()", file="StringEnumConverter.cs"];
m14_30 [label="Exit Newtonsoft.Json.Tests.File.OnFileIdChanged()", span="187-187", cluster="Newtonsoft.Json.Tests.File.OnFileIdChanged()", file="StringEnumConverter.cs"];
m14_68 [label="Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities", span="", file="StringEnumConverter.cs"];
m15_344 [label="Entry Unk.CreateComment", span="", cluster="Unk.CreateComment", file="StringEnumConverterTests.cs"];
m15_176 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="StringEnumConverterTests.cs"];
m15_127 [label="writer.WriteStartObject()", span="241-241", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_128 [label="!string.IsNullOrEmpty(declaration.Version)", span="243-243", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_129 [label="writer.WritePropertyName(''@version'')", span="245-245", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_130 [label="writer.WriteValue(declaration.Version)", span="246-246", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_131 [label="!string.IsNullOrEmpty(declaration.Encoding)", span="248-248", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_132 [label="writer.WritePropertyName(''@encoding'')", span="250-250", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_133 [label="writer.WriteValue(declaration.Encoding)", span="251-251", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_75 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="StringEnumConverterTests.cs"];
m15_154 [label="Entry Unk.WriteComment", span="", cluster="Unk.WriteComment", file="StringEnumConverterTests.cs"];
m15_294 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", span="495-495", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_312 [label="currentNode.AppendChild(declaration)", span="524-524", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_314 [label="currentNode.AppendChild(instruction)", span="529-529", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_300 [label="reader.Value.ToString()", span="504-504", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_303 [label="version = reader.Value.ToString()", span="508-508", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_306 [label="encoding = reader.Value.ToString()", span="512-512", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_309 [label="standalone = reader.Value.ToString()", span="516-516", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_313 [label="IXmlNode instruction = document.CreateProcessingInstruction(propertyName.Substring(1), reader.Value.ToString())", span="528-528", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_296 [label="string version = null", span="499-499", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_297 [label="string encoding = null", span="500-500", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_298 [label="string standalone = null", span="501-501", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_310 [label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="519-519", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_311 [label="IXmlNode declaration = document.CreateXmlDeclaration(version, encoding, standalone)", span="523-523", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_299 [label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="502-502", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_301 [label="''@version''", span="506-506", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_304 [label="''@encoding''", span="510-510", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_307 [label="''@standalone''", span="514-514", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_302 [label="reader.Read()", span="507-507", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_305 [label="reader.Read()", span="511-511", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_308 [label="reader.Read()", span="515-515", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_295 [label="propertyName == DeclarationName", span="497-497", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_315 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", span="495-495", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string)", file="StringEnumConverterTests.cs"];
m15_150 [label="Entry Unk.Substring", span="", cluster="Unk.Substring", file="StringEnumConverterTests.cs"];
m15_179 [label="Entry Unk.ReadElement", span="", cluster="Unk.ReadElement", file="StringEnumConverterTests.cs"];
m15_125 [label="XmlDeclaration declaration = (XmlDeclaration)node", span="239-239", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_158 [label="Entry Unk.StartsWith", span="", cluster="Unk.StartsWith", file="StringEnumConverterTests.cs"];
m15_363 [label="Entry string.IndexOf(char)", span="0-0", cluster="string.IndexOf(char)", file="StringEnumConverterTests.cs"];
m15_135 [label="writer.WritePropertyName(''@standalone'')", span="255-255", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_136 [label="writer.WriteValue(declaration.Standalone)", span="256-256", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_137 [label="writer.WriteEndObject()", span="259-259", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_138 [label="throw new JsonSerializationException(''Unexpected XmlNodeType when serializing nodes: '' + node.NodeType);", span="262-262", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_199 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="StringEnumConverterTests.cs"];
m15_250 [label="Entry Unk.DeserializeValue", span="", cluster="Unk.DeserializeValue", file="StringEnumConverterTests.cs"];
m15_355 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="StringEnumConverterTests.cs"];
m15_68 [label="i++", span="153-153", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="StringEnumConverterTests.cs"];
m15_237 [label="Entry Unk.CreateAttribute", span="", cluster="Unk.CreateAttribute", file="StringEnumConverterTests.cs"];
m15_149 [label="Entry Unk.First", span="", cluster="Unk.First", file="StringEnumConverterTests.cs"];
m15_32 [label="XmlNodeType.Whitespace", span="95-95", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_33 [label="return WhitespaceName;", span="96-96", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_34 [label="throw new JsonSerializationException(''Unexpected XmlNodeType when getting node name: '' + node.NodeType);", span="98-98", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_35 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", span="72-72", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_36 [label="Entry Unk.ResolveFullName", span="", cluster="Unk.ResolveFullName", file="StringEnumConverterTests.cs"];
m15_37 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="211-211", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="StringEnumConverterTests.cs"];
m15_124 [label="XmlNodeType.XmlDeclaration", span="238-238", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_200 [label="Entry Unk.CreateTextNode", span="", cluster="Unk.CreateTextNode", file="StringEnumConverterTests.cs"];
m15_152 [label="Entry Unk.SerializeNode", span="", cluster="Unk.SerializeNode", file="StringEnumConverterTests.cs"];
m15_289 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="StringEnumConverterTests.cs"];
m15_238 [label="Entry Unk.SetAttributeNode", span="", cluster="Unk.SetAttributeNode", file="StringEnumConverterTests.cs"];
m15_51 [label="List<XmlNode> groupedNodes = nodeNameGroup.Value", span="126-126", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="StringEnumConverterTests.cs"];
m15_52 [label="bool writeArray", span="127-127", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="StringEnumConverterTests.cs"];
m15_53 [label="groupedNodes.Count == 1", span="129-129", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="StringEnumConverterTests.cs"];
m15_54 [label="XmlNode singleNode = groupedNodes[0]", span="131-131", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="StringEnumConverterTests.cs"];
m15_55 [label="XmlAttribute jsonArrayAttribute = (singleNode.Attributes != null) ? singleNode.Attributes[''Array'', JsonNamespaceUri] : null", span="132-132", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, XmlNode)", file="StringEnumConverterTests.cs"];
m15_147 [label=l, span="", cluster="Unk.Where", file="StringEnumConverterTests.cs"];
m15_13 [label="node.NodeType", span="74-74", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_14 [label="XmlNodeType.Attribute", span="76-76", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_15 [label="node.NamespaceURI == JsonNamespaceUri", span="77-77", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_19 [label="return CDataName;", span="82-82", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_16 [label="return ''$'' + node.LocalName;", span="78-78", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_18 [label="XmlNodeType.CDATA", span="81-81", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_17 [label="return ''@'' + ResolveFullName(node, manager);", span="80-80", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_20 [label="XmlNodeType.Comment", span="83-83", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_21 [label="return CommentName;", span="84-84", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_22 [label="XmlNodeType.Element", span="85-85", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_142 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="StringEnumConverterTests.cs"];
m15_291 [label="Entry Unk.AddNamespace", span="", cluster="Unk.AddNamespace", file="StringEnumConverterTests.cs"];
m15_83 [label="SerializeGroupedNodes(writer, node)", span="169-169", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_84 [label="XmlNodeType.Element", span="171-171", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_85 [label=writePropertyName, span="172-172", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_87 [label="ValueAttributes(node.Attributes).Count() == 0 && node.ChildNodes.Count == 1\r\n                  && node.ChildNodes[0].NodeType == XmlNodeType.Text", span="175-176", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_89 [label="node.ChildNodes.Count == 0 && CollectionUtils.IsNullOrEmpty(node.Attributes)", span="181-181", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_86 [label="writer.WritePropertyName(node.Name)", span="173-173", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_88 [label="writer.WriteValue(node.ChildNodes[0].Value)", span="179-179", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_90 [label="writer.WriteNull()", span="184-184", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_203 [label="Entry Unk.CreateWhitespace", span="", cluster="Unk.CreateWhitespace", file="StringEnumConverterTests.cs"];
m15_316 [label="Entry Unk.CreateXmlDeclaration", span="", cluster="Unk.CreateXmlDeclaration", file="StringEnumConverterTests.cs"];
m15_144 [label=l, span="", cluster="Unk.IsNullOrEmpty", file="StringEnumConverterTests.cs"];
m15_74 [label="Exit Newtonsoft.Json.Tests.Linq.JPropertyTests.JPropertyLinq()", span="132-132", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.JPropertyLinq()", file="StringEnumConverterTests.cs"];
m15_207 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", span="340-340", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_224 [label="reader.TokenType == JsonToken.Date", span="378-378", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", color=green, community=0, file="StringEnumConverterTests.cs"];
m15_222 [label="reader.TokenType == JsonToken.Boolean", span="374-374", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_225 [label="DateTime d = (DateTime)reader.Value", span="380-380", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_227 [label="reader.TokenType == JsonToken.Null", span="383-383", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_208 [label="Dictionary<string, string> attributeNameValues = ReadAttributeElements(reader, manager)", span="342-342", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_209 [label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="344-344", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_210 [label="IXmlElement element = CreateElement(propertyName, document, elementPrefix, manager)", span="346-346", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_211 [label="currentNode.AppendChild(element)", span="348-348", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_214 [label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                               ? document.CreateAttribute(nameValue.Key, manager.LookupNamespace(attributePrefix), nameValue.Value)\r\n                               : document.CreateAttribute(nameValue.Key, nameValue.Value)", span="355-357", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_216 [label="reader.TokenType == JsonToken.String", span="362-362", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_217 [label="element.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="364-364", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_218 [label="reader.TokenType == JsonToken.Integer", span="366-366", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_219 [label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString((long)reader.Value)))", span="368-368", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_220 [label="reader.TokenType == JsonToken.Float", span="370-370", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_221 [label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString((double)reader.Value)))", span="372-372", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_223 [label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString((bool)reader.Value)))", span="376-376", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_226 [label="element.AppendChild(document.CreateTextNode(XmlConvert.ToString(d, DateTimeUtils.ToSerializationMode(d.Kind))))", span="381-381", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_228 [label="reader.TokenType != JsonToken.EndObject", span="390-390", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_229 [label="manager.PushScope()", span="392-392", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_230 [label="DeserializeNode(reader, document, manager, element)", span="394-394", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_231 [label="manager.PopScope()", span="396-396", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_212 [label=attributeNameValues, span="351-351", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_215 [label="element.SetAttributeNode(attribute)", span="359-359", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_213 [label="string attributePrefix = MiscellaneousUtils.GetPrefix(nameValue.Key)", span="353-353", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_232 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", span="340-340", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, IXmlDocument, IXmlNode, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_92 [label="XmlElement constructorValueElement = node.ChildNodes.OfType<XmlElement>().Where(x => x.Name.StartsWith(''-'')).First()", span="188-188", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_38 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_43 [label="JProperty p = new JProperty(''TestProperty'', null)", span="107-107", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.IListAdd()", file="StringEnumConverterTests.cs"];
m15_61 [label="JProperty p = new JProperty(''TestProperty'', null)", span="125-125", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.IListRemoveAt()", file="StringEnumConverterTests.cs"];
m15_67 [label="Exit lambda expression", span="128-128", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_39 [label="l.Clear()", span="101-101", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_42 [label="Entry Newtonsoft.Json.Tests.Linq.JPropertyTests.IListAdd()", span="105-105", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.IListAdd()", file="StringEnumConverterTests.cs"];
m15_44 [label="IList l = p", span="108-108", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.IListAdd()", file="StringEnumConverterTests.cs"];
m15_45 [label="ExceptionAssert.Throws<JsonException>(() => { l.Add(null); }, ''Newtonsoft.Json.Linq.JProperty cannot have multiple values.'')", span="110-110", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.IListAdd()", file="StringEnumConverterTests.cs"];
m15_47 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_60 [label="Entry Newtonsoft.Json.Tests.Linq.JPropertyTests.IListRemoveAt()", span="123-123", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.IListRemoveAt()", file="StringEnumConverterTests.cs"];
m15_50 [label="Entry System.Collections.IList.Add(object)", span="0-0", cluster="System.Collections.IList.Add(object)", file="StringEnumConverterTests.cs"];
m15_66 [label="l.RemoveAt(0)", span="128-128", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_65 [label="Entry lambda expression", span="128-128", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_40 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_41 [label="Entry System.Collections.IList.Clear()", span="0-0", cluster="System.Collections.IList.Clear()", file="StringEnumConverterTests.cs"];
m15_48 [label="l.Add(null)", span="110-110", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_46 [label="Exit Newtonsoft.Json.Tests.Linq.JPropertyTests.IListAdd()", span="105-105", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.IListAdd()", file="StringEnumConverterTests.cs"];
m15_63 [label="ExceptionAssert.Throws<JsonException>(() => { l.RemoveAt(0); }, ''Cannot add or remove items from Newtonsoft.Json.Linq.JProperty.'')", span="128-128", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.IListRemoveAt()", file="StringEnumConverterTests.cs"];
m15_64 [label="Exit Newtonsoft.Json.Tests.Linq.JPropertyTests.IListRemoveAt()", span="123-123", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.IListRemoveAt()", file="StringEnumConverterTests.cs"];
m15_69 [label="Entry Newtonsoft.Json.Tests.Linq.JPropertyTests.JPropertyLinq()", span="132-132", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.JPropertyLinq()", file="StringEnumConverterTests.cs"];
m15_62 [label="IList l = p", span="126-126", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.IListRemoveAt()", file="StringEnumConverterTests.cs"];
m15_59 [label="Entry System.Collections.IList.Remove(object)", span="0-0", cluster="System.Collections.IList.Remove(object)", file="StringEnumConverterTests.cs"];
m15_57 [label="l.Remove(p.Value)", span="119-119", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_58 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_49 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_56 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_70 [label="JProperty p = new JProperty(''TestProperty'', null)", span="134-134", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.JPropertyLinq()", file="StringEnumConverterTests.cs"];
m15_356 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="StringEnumConverterTests.cs"];
m15_175 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="StringEnumConverterTests.cs"];
m15_76 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="StringEnumConverterTests.cs"];
m15_201 [label="Entry Unk.AppendChild", span="", cluster="Unk.AppendChild", file="StringEnumConverterTests.cs"];
m15_240 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="23-23", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="StringEnumConverterTests.cs"];
m15_8 [label="Assert.AreEqual(p, p.Value.Parent)", span="60-60", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.NullValue()", file="StringEnumConverterTests.cs"];
m15_145 [label=p, span="", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="StringEnumConverterTests.cs"];
m15_143 [label=l, span="", cluster="Unk.WriteValue", file="StringEnumConverterTests.cs"];
m15_120 [label="return;", span="231-231", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_181 [label="Entry Unk.DeserializeNode", span="", cluster="Unk.DeserializeNode", file="StringEnumConverterTests.cs"];
m15_95 [label="int i = 0", span="193-193", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_96 [label="i < node.ChildNodes.Count", span="193-193", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_97 [label="SerializeNode(writer, node.ChildNodes[i], false)", span="195-195", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_98 [label="i++", span="193-193", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_99 [label="writer.WriteEndConstructor()", span="198-198", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_100 [label="writer.WriteStartObject()", span="202-202", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_148 [label=t, span="", cluster="Unk.Count", file="StringEnumConverterTests.cs"];
m15_153 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="271-271", cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="StringEnumConverterTests.cs"];
m15_91 [label="node.ChildNodes.OfType<XmlElement>().Where(x => x.Name.StartsWith(''-'')).Count() > 1", span="186-186", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_146 [label=l, span="", cluster="Unk.>", file="StringEnumConverterTests.cs"];
m15_318 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, XmlDocument, string, XmlNamespaceManager)", span="533-533", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, XmlDocument, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_319 [label="return (!string.IsNullOrEmpty(elementPrefix))\r\n               ? document.CreateElement(elementName, manager.LookupNamespace(elementPrefix))\r\n               : document.CreateElement(elementName);", span="535-537", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, XmlDocument, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_320 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, XmlDocument, string, XmlNamespaceManager)", span="533-533", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, XmlDocument, string, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_10 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", span="163-163", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_204 [label="Entry Unk.CreateSignificantWhitespace", span="", cluster="Unk.CreateSignificantWhitespace", file="StringEnumConverterTests.cs"];
m15_122 [label="writer.WritePropertyName(GetPropertyName(node))", span="235-235", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_0 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="60-60", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_1 [label="XmlNode node = value as XmlNode", span="62-62", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_2 [label="node == null", span="64-64", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_3 [label="throw new ArgumentException(''Value must be an XmlNode'', ''value'');", span="65-65", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_4 [label="writer.WriteStartObject()", span="67-67", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_5 [label="SerializeNode(writer, node, true)", span="68-68", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_6 [label="writer.WriteEndObject()", span="69-69", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_7 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="60-60", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_9 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="227-227", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="StringEnumConverterTests.cs"];
m15_162 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="275-275", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_169 [label="!string.IsNullOrEmpty(DeserializeRootElementName)", span="287-287", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_170 [label="ReadElement(reader, document, rootNode, DeserializeRootElementName, manager)", span="291-291", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_172 [label="DeserializeNode(reader, document, manager, rootNode)", span="296-296", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_164 [label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XmlDocuments'');", span="279-279", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_168 [label="throw new JsonSerializationException(''XmlNodeConverter can only convert JSON that begins with an object.'');", span="285-285", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_167 [label="reader.TokenType != JsonToken.StartObject", span="284-284", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_171 [label="reader.Read()", span="295-295", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_165 [label="XmlDocument document = new XmlDocument()", span="281-281", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_166 [label="XmlNamespaceManager manager = new XmlNamespaceManager(document.NameTable)", span="282-282", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_173 [label="return document;", span="299-299", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_163 [label="objectType != typeof(XmlDocument)", span="278-278", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_174 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="275-275", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="StringEnumConverterTests.cs"];
m15_234 [label="Entry Unk.GetPrefix", span="", cluster="Unk.GetPrefix", file="StringEnumConverterTests.cs"];
m15_141 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_242 [label="Entry Unk.PopScope", span="", cluster="Unk.PopScope", file="StringEnumConverterTests.cs"];
m15_102 [label="i < node.Attributes.Count", span="204-204", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_103 [label="SerializeNode(writer, node.Attributes[i], true)", span="206-206", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_104 [label="i++", span="204-204", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_105 [label="SerializeGroupedNodes(writer, node)", span="209-209", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_106 [label="writer.WriteEndObject()", span="211-211", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_107 [label="XmlNodeType.Comment", span="215-215", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_110 [label="XmlNodeType.Attribute", span="219-219", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_108 [label=writePropertyName, span="216-216", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_109 [label="writer.WriteComment(node.Value)", span="217-217", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_111 [label="XmlNodeType.Text", span="220-220", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_112 [label="XmlNodeType.CDATA", span="221-221", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_113 [label="XmlNodeType.ProcessingInstruction", span="222-222", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_114 [label="XmlNodeType.Whitespace", span="223-223", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_115 [label="XmlNodeType.SignificantWhitespace", span="224-224", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_118 [label="node.NamespaceURI == JsonNamespaceUri", span="228-228", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_116 [label="node.NamespaceURI == ''http://www.w3.org/2000/xmlns/'' && node.Value == JsonNamespaceUri", span="225-225", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_117 [label="return;", span="226-226", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_119 [label="node.LocalName == ''Array''", span="230-230", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_177 [label="Entry XmlNamespaceManager.cstr", span="", cluster="XmlNamespaceManager.cstr", file="StringEnumConverterTests.cs"];
m15_71 [label="IList l = p", span="135-135", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.JPropertyLinq()", file="StringEnumConverterTests.cs"];
m15_27 [label="return DeclarationName;", span="90-90", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_28 [label="XmlNodeType.SignificantWhitespace", span="91-91", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_29 [label="return SignificantWhitespaceName;", span="92-92", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_30 [label="XmlNodeType.Text", span="93-93", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_31 [label="return TextName;", span="94-94", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_12 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", span="72-72", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_101 [label="int i = 0", span="204-204", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_77 [label="Entry Newtonsoft.Json.Tests.Linq.JPropertyTests.JPropertyDeepEquals()", span="142-142", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.JPropertyDeepEquals()", file="StringEnumConverterTests.cs"];
m15_94 [label="writer.WriteStartConstructor(constructorName)", span="191-191", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_239 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="StringEnumConverterTests.cs"];
m15_290 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="592-592", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="StringEnumConverterTests.cs"];
m15_345 [label="attributeName.StartsWith(''xmlns'', StringComparison.Ordinal)", span="594-594", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="StringEnumConverterTests.cs"];
m15_346 [label="attributeName.Length == 5", span="596-596", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="StringEnumConverterTests.cs"];
m15_349 [label="attributeName[5] == ':'", span="601-601", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="StringEnumConverterTests.cs"];
m15_350 [label="prefix = attributeName.Substring(6, attributeName.Length - 6)", span="603-603", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="StringEnumConverterTests.cs"];
m15_352 [label="prefix = null", span="607-607", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="StringEnumConverterTests.cs"];
m15_348 [label="return true;", span="599-599", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="StringEnumConverterTests.cs"];
m15_351 [label="return true;", span="604-604", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="StringEnumConverterTests.cs"];
m15_353 [label="return false;", span="608-608", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="StringEnumConverterTests.cs"];
m15_347 [label="prefix = string.Empty", span="598-598", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="StringEnumConverterTests.cs"];
m15_354 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="592-592", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="StringEnumConverterTests.cs"];
m15_11 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="236-236", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="StringEnumConverterTests.cs"];
m15_79 [label="JProperty p2 = new JProperty(''TestProperty'', null)", span="145-145", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.JPropertyDeepEquals()", file="StringEnumConverterTests.cs"];
m15_206 [label="Entry Unk.ReadArrayElements", span="", cluster="Unk.ReadArrayElements", file="StringEnumConverterTests.cs"];
m15_367 [label="Entry lambda expression", span="623-623", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_24 [label="XmlNodeType.ProcessingInstruction", span="87-87", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_25 [label="return ''?'' + node.Name;", span="88-88", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_23 [label="return node.Name;", span="86-86", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_26 [label="XmlNodeType.XmlDeclaration", span="89-89", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(XmlNode)", file="StringEnumConverterTests.cs"];
m15_140 [label="Entry Unk.WritePropertyName", span="", cluster="Unk.WritePropertyName", file="StringEnumConverterTests.cs"];
m15_139 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", span="163-163", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_155 [label="Entry lambda expression", span="186-186", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_159 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_157 [label="Exit lambda expression", span="186-186", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_156 [label="x.Name.StartsWith(''-'')", span="186-186", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_161 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_160 [label="x.Name.StartsWith(''-'')", span="188-188", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_368 [label="a.NamespaceURI != JsonNamespaceUri", span="623-623", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_369 [label="Exit lambda expression", span="623-623", cluster="lambda expression", file="StringEnumConverterTests.cs"];
m15_178 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="StringEnumConverterTests.cs"];
m15_235 [label="Entry Unk.CreateElement", span="", cluster="Unk.CreateElement", file="StringEnumConverterTests.cs"];
m15_78 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="244-244", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="StringEnumConverterTests.cs"];
m15_80 [label="node.NodeType", span="165-165", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_81 [label="XmlNodeType.Document", span="167-167", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_72 [label="List<JToken> result = l.Cast<JToken>().ToList()", span="137-137", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.JPropertyLinq()", file="StringEnumConverterTests.cs"];
m15_121 [label=writePropertyName, span="234-234", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_73 [label="Assert.AreEqual(1, result.Count)", span="138-138", cluster="Newtonsoft.Json.Tests.Linq.JPropertyTests.JPropertyLinq()", file="StringEnumConverterTests.cs"];
m15_134 [label="!string.IsNullOrEmpty(declaration.Standalone)", span="253-253", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_293 [label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault()", file="StringEnumConverterTests.cs"];
m15_93 [label="string constructorName = constructorValueElement.Name.Substring(1)", span="189-189", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_123 [label="writer.WriteValue(node.Value)", span="236-236", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_364 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(XmlAttributeCollection)", span="621-621", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(XmlAttributeCollection)", file="StringEnumConverterTests.cs"];
m15_365 [label="return c.OfType<XmlAttribute>().Where(a => a.NamespaceURI != JsonNamespaceUri);", span="623-623", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(XmlAttributeCollection)", file="StringEnumConverterTests.cs"];
m15_366 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(XmlAttributeCollection)", span="621-621", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(XmlAttributeCollection)", file="StringEnumConverterTests.cs"];
m15_321 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", span="540-540", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_330 [label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="557-557", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_331 [label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="562-562", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_335 [label="DeserializeValue(reader, document, manager, ''-'' + constructorName, currentNode)", span="570-570", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_337 [label="currentNode.AppendChild(document.CreateComment((string)reader.Value))", span="574-574", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_326 [label="string propertyName = reader.Value.ToString()", span="550-550", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_333 [label="string constructorName = reader.Value.ToString()", span="566-566", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_341 [label="throw new JsonSerializationException(''Unexpected JsonToken when deserializing node: '' + reader.TokenType);", span="580-580", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_325 [label="throw new JsonSerializationException(''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'');", span="548-548", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_329 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="555-555", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_328 [label="reader.TokenType == JsonToken.StartArray", span="553-553", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_342 [label="reader.TokenType == JsonToken.PropertyName || reader.Read()", span="582-582", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_334 [label="reader.Read() && reader.TokenType != JsonToken.EndConstructor", span="568-568", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_336 [label="JsonToken.Comment", span="573-573", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_324 [label="currentNode.NodeType == XmlNodeType.Document && document.DocumentElement != null", span="547-547", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_327 [label="reader.Read()", span="551-551", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_332 [label="JsonToken.StartConstructor", span="565-565", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_322 [label="reader.TokenType", span="544-544", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_323 [label="JsonToken.PropertyName", span="546-546", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_338 [label="JsonToken.EndObject", span="576-576", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_340 [label="return;", span="578-578", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_339 [label="JsonToken.EndArray", span="577-577", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_343 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", span="540-540", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, XmlNode)", file="StringEnumConverterTests.cs"];
m15_202 [label="Entry Unk.CreateCDataSection", span="", cluster="Unk.CreateCDataSection", file="StringEnumConverterTests.cs"];
m15_151 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="262-262", cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="StringEnumConverterTests.cs"];
m15_205 [label="Entry Unk.CreateInstruction", span="", cluster="Unk.CreateInstruction", file="StringEnumConverterTests.cs"];
m15_317 [label="Entry Unk.CreateProcessingInstruction", span="", cluster="Unk.CreateProcessingInstruction", file="StringEnumConverterTests.cs"];
m15_182 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", span="302-302", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_193 [label="CreateInstruction(reader, document, currentNode, propertyName)", span="322-322", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_195 [label="ReadArrayElements(reader, document, propertyName, currentNode, manager)", span="328-328", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_197 [label="ReadElement(reader, document, currentNode, propertyName, manager)", span="334-334", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_185 [label="currentNode.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="307-307", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_187 [label="currentNode.AppendChild(document.CreateCDataSection(reader.Value.ToString()))", span="310-310", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_189 [label="currentNode.AppendChild(document.CreateWhitespace(reader.Value.ToString()))", span="313-313", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_191 [label="currentNode.AppendChild(document.CreateSignificantWhitespace(reader.Value.ToString()))", span="316-316", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_192 [label="!string.IsNullOrEmpty(propertyName) && propertyName[0] == '?'", span="320-320", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_194 [label="reader.TokenType == JsonToken.StartArray", span="326-326", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_196 [label="return;", span="329-329", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_184 [label=TextName, span="306-306", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_186 [label=CDataName, span="309-309", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_188 [label=WhitespaceName, span="312-312", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_190 [label=SignificantWhitespaceName, span="315-315", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_183 [label=propertyName, span="304-304", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_198 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", span="302-302", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, XmlDocument, XmlNamespaceManager, string, XmlNode)", file="StringEnumConverterTests.cs"];
m15_357 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", span="611-611", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="StringEnumConverterTests.cs"];
m15_361 [label="return qualifiedName.Substring(0, colonPosition);", span="618-618", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="StringEnumConverterTests.cs"];
m15_358 [label="int colonPosition = qualifiedName.IndexOf(':')", span="613-613", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="StringEnumConverterTests.cs"];
m15_359 [label="(colonPosition == -1 || colonPosition == 0) || (qualifiedName.Length - 1) == colonPosition", span="615-615", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="StringEnumConverterTests.cs"];
m15_360 [label="return string.Empty;", span="616-616", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="StringEnumConverterTests.cs"];
m15_362 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", span="611-611", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPrefix(string)", file="StringEnumConverterTests.cs"];
m15_243 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, IXmlDocument, string, IXmlNode, XmlNamespaceManager)", span="401-401", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, IXmlDocument, string, IXmlNode, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_245 [label="IXmlElement nestedArrayElement = CreateElement(propertyName, document, elementPrefix, manager)", span="405-405", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, IXmlDocument, string, IXmlNode, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_248 [label="DeserializeValue(reader, document, manager, propertyName, nestedArrayElement)", span="411-411", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, IXmlDocument, string, IXmlNode, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_244 [label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="403-403", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, IXmlDocument, string, IXmlNode, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_246 [label="currentNode.AppendChild(nestedArrayElement)", span="407-407", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, IXmlDocument, string, IXmlNode, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_247 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="409-409", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, IXmlDocument, string, IXmlNode, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_249 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, IXmlDocument, string, IXmlNode, XmlNamespaceManager)", span="401-401", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, IXmlDocument, string, IXmlNode, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_126 [label="writer.WritePropertyName(GetPropertyName(node))", span="240-240", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, XmlNode, bool)", file="StringEnumConverterTests.cs"];
m15_236 [label="Entry Unk.LookupNamespace", span="", cluster="Unk.LookupNamespace", file="StringEnumConverterTests.cs"];
m15_233 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="415-415", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_251 [label="Dictionary<string, string> attributeNameValues = new Dictionary<string, string>()", span="417-417", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_254 [label="reader.TokenType != JsonToken.String\r\n          && reader.TokenType != JsonToken.Null\r\n          && reader.TokenType != JsonToken.Boolean\r\n          && reader.TokenType != JsonToken.Integer\r\n          && reader.TokenType != JsonToken.Float\r\n          && reader.TokenType != JsonToken.Date\r\n          && reader.TokenType != JsonToken.StartConstructor", span="422-428", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_255 [label="!finishedAttributes && !finishedElement && reader.Read()", span="431-431", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_256 [label="reader.TokenType", span="433-433", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_258 [label="string attributeName = reader.Value.ToString()", span="436-436", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_264 [label="reader.Read()", span="444-444", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_265 [label="attributeValue = reader.Value.ToString()", span="445-445", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_269 [label="manager.AddNamespace(namespacePrefix, attributeValue)", span="451-451", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_272 [label="reader.Read()", span="456-456", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_273 [label="attributeValue = reader.Value.ToString()", span="457-457", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_274 [label="string jsonPrefix = manager.LookupPrefix(JsonNamespaceUri)", span="461-461", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_277 [label="manager.LookupNamespace(''json'' + i) != null", span="466-466", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_281 [label="manager.AddNamespace(jsonPrefix, JsonNamespaceUri)", span="473-473", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_286 [label="throw new JsonSerializationException(''Unexpected JsonToken: '' + reader.TokenType);", span="487-487", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_287 [label="return attributeNameValues;", span="492-492", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_252 [label="bool finishedAttributes = false", span="418-418", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_266 [label="attributeNameValues.Add(attributeName, attributeValue)", span="446-446", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_280 [label="attributeNameValues.Add(''xmlns:'' + jsonPrefix, JsonNamespaceUri)", span="472-472", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_282 [label="attributeNameValues.Add(jsonPrefix + '':'' + attributeName, attributeValue)", span="476-476", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_253 [label="bool finishedElement = false", span="419-419", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_283 [label="finishedAttributes = true", span="479-479", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_268 [label="IsNamespaceAttribute(attributeName, out namespacePrefix)", span="449-449", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_285 [label="finishedElement = true", span="484-484", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_257 [label="JsonToken.PropertyName", span="435-435", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_284 [label="JsonToken.EndObject", span="483-483", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_259 [label="string attributeValue", span="437-437", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_260 [label="char firstChar = attributeName[0]", span="438-438", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_263 [label="attributeName = attributeName.Substring(1)", span="443-443", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_271 [label="attributeName = attributeName.Substring(1)", span="455-455", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_275 [label="jsonPrefix == null", span="462-462", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_276 [label="int? i = null", span="465-465", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_278 [label="i = i.GetValueOrDefault() + 1", span="468-468", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_279 [label="jsonPrefix = ''json'' + i", span="470-470", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_267 [label="string namespacePrefix", span="448-448", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_261 [label=firstChar, span="440-440", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_262 [label="'@'", span="442-442", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_270 [label="'$'", span="454-454", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_288 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="415-415", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="StringEnumConverterTests.cs"];
m15_292 [label="Entry Unk.LookupPrefix", span="", cluster="Unk.LookupPrefix", file="StringEnumConverterTests.cs"];
m15_82 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="152-152", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="StringEnumConverterTests.cs"];
m15_241 [label="Entry Unk.PushScope", span="", cluster="Unk.PushScope", file="StringEnumConverterTests.cs"];
m15_374 [label="Newtonsoft.Json.Converters.XmlNodeConverter", span="", file="StringEnumConverterTests.cs"];
m16_12 [label="Entry char.ToLower(char, System.Globalization.CultureInfo)", span="0-0", cluster="char.ToLower(char, System.Globalization.CultureInfo)", file="TypeExtensions.cs"];
m16_13 [label="Entry char.ToString(System.IFormatProvider)", span="0-0", cluster="char.ToString(System.IFormatProvider)", file="TypeExtensions.cs"];
m16_14 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="TypeExtensions.cs"];
m16_61 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", span="566-566", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", file="TypeExtensions.cs"];
m16_62 [label="var methods = type.GetMethods().Where(method => method.Name == name)", span="568-568", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", file="TypeExtensions.cs"];
m16_64 [label="method.HasParameters(parameterTypes)", span="572-572", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", file="TypeExtensions.cs"];
m16_63 [label=methods, span="570-570", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", file="TypeExtensions.cs"];
m16_66 [label="return null;", span="576-576", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", file="TypeExtensions.cs"];
m16_65 [label="return method;", span="573-573", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", file="TypeExtensions.cs"];
m16_67 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", span="566-566", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", file="TypeExtensions.cs"];
m16_56 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", span="560-560", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="TypeExtensions.cs"];
m16_57 [label="Type match", span="562-562", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="TypeExtensions.cs"];
m16_58 [label="return type.AssignableToTypeName(fullTypeName, out match);", span="563-563", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="TypeExtensions.cs"];
m16_59 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", span="560-560", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="TypeExtensions.cs"];
m16_86 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="TypeExtensions.cs"];
m16_15 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="135-135", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="TypeExtensions.cs"];
m16_16 [label="return type.IsGenericTypeDefinition;", span="138-138", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="TypeExtensions.cs"];
m16_17 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="135-135", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="TypeExtensions.cs"];
m16_53 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="TypeExtensions.cs"];
m16_18 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="144-144", cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="TypeExtensions.cs"];
m16_19 [label="return type.BaseType;", span="147-147", cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="TypeExtensions.cs"];
m16_20 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="144-144", cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="TypeExtensions.cs"];
m16_33 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", span="514-514", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="TypeExtensions.cs"];
m16_34 [label="return type.IsVisible;", span="517-517", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="TypeExtensions.cs"];
m16_35 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", span="514-514", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="TypeExtensions.cs"];
m16_3 [label="!char.IsUpper(propertyName[0])", span="45-45", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.ResolvePropertyName(string)", file="TypeExtensions.cs"];
m16_4 [label="return propertyName;", span="46-46", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.ResolvePropertyName(string)", file="TypeExtensions.cs", color=green, community=0];
m16_5 [label="string camelCaseName = char.ToLower(propertyName[0], CultureInfo.InvariantCulture).ToString(CultureInfo.InvariantCulture)", span="48-48", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.ResolvePropertyName(string)", file="TypeExtensions.cs", color=green, community=0];
m16_68 [label="Entry System.Type.GetMethods()", span="0-0", cluster="System.Type.GetMethods()", file="TypeExtensions.cs"];
m16_30 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", span="505-505", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="TypeExtensions.cs"];
m16_31 [label="return type.IsAbstract;", span="508-508", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="TypeExtensions.cs"];
m16_32 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", span="505-505", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="TypeExtensions.cs"];
m16_93 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", span="593-593", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", file="TypeExtensions.cs"];
m16_94 [label="target.GetInterfaces()", span="595-595", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", file="TypeExtensions.cs"];
m16_95 [label="yield return i;", span="597-597", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", file="TypeExtensions.cs"];
m16_97 [label="yield return ci;", span="600-600", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", file="TypeExtensions.cs"];
m16_96 [label="i.GetInterfaces()", span="598-598", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", file="TypeExtensions.cs"];
m16_98 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", span="593-593", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", file="TypeExtensions.cs"];
m16_87 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="TypeExtensions.cs"];
m16_99 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.GetAllMethods(System.Type)", span="605-605", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllMethods(System.Type)", file="TypeExtensions.cs"];
m16_100 [label="var allTypes = target.GetAllInterfaces().ToList()", span="607-607", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllMethods(System.Type)", file="TypeExtensions.cs"];
m16_101 [label="allTypes.Add(target)", span="608-608", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllMethods(System.Type)", file="TypeExtensions.cs"];
m16_102 [label="return from type in allTypes\r\n                from method in type.GetMethods()\r\n                select method;", span="610-612", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllMethods(System.Type)", color=red, community=0, file="TypeExtensions.cs"];
m16_103 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.GetAllMethods(System.Type)", span="605-605", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllMethods(System.Type)", file="TypeExtensions.cs"];
m16_0 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="81-81", cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="TypeExtensions.cs"];
m16_1 [label="return d.Method;", span="84-84", cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", color=green, community=0, file="TypeExtensions.cs"];
m16_2 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="81-81", cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", color=green, community=0, file="TypeExtensions.cs"];
m16_6 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="108-108", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", color=green, community=0, file="TypeExtensions.cs"];
m16_7 [label="return type.ContainsGenericParameters;", span="111-111", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", color=green, community=0, file="TypeExtensions.cs"];
m16_8 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="108-108", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", color=green, community=0, file="TypeExtensions.cs"];
m16_9 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="117-117", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="TypeExtensions.cs"];
m16_24 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", span="162-162", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="TypeExtensions.cs"];
m16_25 [label="return type.IsClass;", span="165-165", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="TypeExtensions.cs"];
m16_26 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", span="162-162", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="TypeExtensions.cs"];
m16_85 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="TypeExtensions.cs"];
m16_89 [label="Entry System.Type.ToString()", span="0-0", cluster="System.Type.ToString()", file="TypeExtensions.cs"];
m16_106 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="TypeExtensions.cs"];
m16_36 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="523-523", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="TypeExtensions.cs"];
m16_37 [label="return type.IsValueType;", span="526-526", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="TypeExtensions.cs"];
m16_38 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="523-523", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="TypeExtensions.cs"];
m16_21 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="153-153", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="TypeExtensions.cs"];
m16_22 [label="return type.IsEnum;", span="156-156", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="TypeExtensions.cs"];
m16_23 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="153-153", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="TypeExtensions.cs"];
m16_55 [label="Entry System.Type.GetInterfaces()", span="0-0", cluster="System.Type.GetInterfaces()", file="TypeExtensions.cs"];
m16_70 [label="Entry Unk.HasParameters", span="", cluster="Unk.HasParameters", file="TypeExtensions.cs"];
m16_88 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="TypeExtensions.cs"];
m16_11 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="117-117", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="TypeExtensions.cs"];
m16_39 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", span="532-532", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs"];
m16_40 [label="Type current = type", span="534-534", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs"];
m16_42 [label="string.Equals(current.FullName, fullTypeName, StringComparison.Ordinal)", span="538-538", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs"];
m16_46 [label="type.GetInterfaces()", span="547-547", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs"];
m16_47 [label="string.Equals(i.Name, fullTypeName, StringComparison.Ordinal)", span="549-549", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs"];
m16_48 [label="match = type", span="551-551", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs"];
m16_41 [label="current != null", span="536-536", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs"];
m16_43 [label="match = current", span="540-540", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs"];
m16_45 [label="current = current.BaseType()", span="544-544", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs"];
m16_44 [label="return true;", span="541-541", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs"];
m16_50 [label="match = null", span="556-556", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs"];
m16_49 [label="return true;", span="552-552", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs"];
m16_51 [label="return false;", span="557-557", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs"];
m16_52 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", span="532-532", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="TypeExtensions.cs"];
m16_74 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", span="579-579", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="TypeExtensions.cs"];
m16_75 [label="var methodParameters = method.GetParameters().Select(parameter => parameter.ParameterType).ToArray()", span="581-581", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="TypeExtensions.cs"];
m16_76 [label="methodParameters.Length != parameterTypes.Length", span="583-583", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="TypeExtensions.cs"];
m16_80 [label="methodParameters[i].ToString() != parameterTypes[i].ToString()", span="587-587", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="TypeExtensions.cs"];
m16_79 [label="i < methodParameters.Length", span="586-586", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="TypeExtensions.cs"];
m16_77 [label="return false;", span="584-584", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="TypeExtensions.cs"];
m16_78 [label="int i = 0", span="586-586", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="TypeExtensions.cs"];
m16_82 [label="i++", span="586-586", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="TypeExtensions.cs"];
m16_83 [label="return true;", span="590-590", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="TypeExtensions.cs"];
m16_81 [label="return false;", span="588-588", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="TypeExtensions.cs"];
m16_84 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", span="579-579", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="TypeExtensions.cs"];
m16_10 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="TypeExtensions.cs"];
m16_104 [label="Entry System.Type.GetAllInterfaces()", span="593-593", cluster="System.Type.GetAllInterfaces()", file="TypeExtensions.cs"];
m16_27 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", span="171-171", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="TypeExtensions.cs"];
m16_28 [label="return type.IsSealed;", span="174-174", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="TypeExtensions.cs"];
m16_29 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", span="171-171", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="TypeExtensions.cs"];
m16_54 [label="Entry System.Type.BaseType()", span="144-144", cluster="System.Type.BaseType()", file="TypeExtensions.cs"];
m16_69 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="TypeExtensions.cs"];
m16_90 [label="Entry lambda expression", span="581-581", cluster="lambda expression", file="TypeExtensions.cs"];
m16_72 [label="method.Name == name", span="568-568", cluster="lambda expression", file="TypeExtensions.cs"];
m16_71 [label="Entry lambda expression", span="568-568", cluster="lambda expression", file="TypeExtensions.cs"];
m16_73 [label="Exit lambda expression", span="568-568", cluster="lambda expression", file="TypeExtensions.cs"];
m16_91 [label="parameter.ParameterType", span="581-581", cluster="lambda expression", file="TypeExtensions.cs"];
m16_92 [label="Exit lambda expression", span="581-581", cluster="lambda expression", file="TypeExtensions.cs"];
m16_60 [label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="532-532", cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="TypeExtensions.cs"];
m16_105 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="TypeExtensions.cs"];
m16_107 [label=string, span="", file="TypeExtensions.cs"];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_3 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_12  [key=2, style=dotted];
m0_4 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_4 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_6 -> m0_11  [key=0, style=solid];
m0_6 -> m0_13  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_20  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_7 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_14  [key=2, style=dotted];
m0_8 -> m0_15  [key=2, style=dotted];
m0_8 -> m0_16  [key=2, style=dotted];
m0_8 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_17  [key=2, style=dotted];
m0_9 -> m0_18  [key=2, style=dotted];
m0_9 -> m0_19  [key=2, style=dotted];
m0_11 -> m0_3  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=2, style=dotted];
m0_26 -> m0_24  [key=0, style=bold, color=blue];
m0_32 -> m0_33  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_21  [key=0, style=bold, color=blue];
m0_33 -> m0_34  [key=0, style=solid];
m0_34 -> m0_32  [key=0, style=bold, color=blue];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=2, style=dotted];
m0_29 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_30 -> m0_28  [key=0, style=bold, color=blue];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_43  [key=2, style=dotted];
m0_36 -> m0_44  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_0  [key=2, style=dotted];
m0_37 -> m0_45  [key=2, style=dotted];
m0_37 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_46  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_0  [key=2, style=dotted];
m0_39 -> m0_47  [key=2, style=dotted];
m0_39 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=newEmployee];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_46  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_48  [key=2, style=dotted];
m0_42 -> m0_35  [key=0, style=bold, color=blue];
m0_49 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter"];
m0_49 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.CustomJsonConverter.KeysJsonConverter"];
m0_50 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m1_0 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_6 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorContext"];
m1_6 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorContext"];
m1_6 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorContext"];
m1_6 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorContext"];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_59  [key=1, style=dashed, color=red, label="System.Type"];
m2_56 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_56 -> m2_58  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanConvert"];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_59  [key=0, style=solid, color=red];
m2_57 -> m2_70  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid, color=red];
m2_59 -> m2_71  [key=2, style=dotted, color=red];
m2_59 -> m2_61  [key=1, style=dashed, color=red, label=attributes];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_15  [key=2, style=dotted];
m2_58 -> m2_69  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label=isFSharpType];
m2_60 -> m2_58  [key=3, color=darkorchid, style=bold, label="Local variable bool isFSharpType"];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_66  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_68  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_14  [key=2, style=dotted];
m2_62 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label=attributeType];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_61  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_72  [key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_67 -> m2_69  [key=0, style=solid];
m2_69 -> m2_56  [key=0, style=bold, color=blue];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_75  [key=1, style=dashed, color=red, label="System.Type"];
m2_72 -> m2_62  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type attributeType"];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_91  [key=0, style=solid];
m2_75 -> m2_76  [key=0, style=solid, color=red];
m2_75 -> m2_81  [key=1, style=dashed, color=red, label=fsharpCoreAssembly];
m2_75 -> m2_88  [key=1, style=dashed, color=red, label=fsharpCoreAssembly];
m2_74 -> m2_75  [key=0, style=solid, color=red];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_92  [key=2, style=dotted];
m2_76 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label=fsharpType];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_92  [key=2, style=dotted];
m2_81 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label=fsharpValue];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_92  [key=2, style=dotted];
m2_88 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_93  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_93  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_94  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_94  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_93  [key=2, style=dotted];
m2_82 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label=getUnionFieldsMethodInfo];
m2_82 -> m2_85  [key=1, style=dashed, color=darkseagreen4, label=getUnionFieldsMethodInfo];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_93  [key=2, style=dotted];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_94  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_95  [key=2, style=dotted];
m2_84 -> m2_96  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_95  [key=2, style=dotted];
m2_85 -> m2_96  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_94  [key=2, style=dotted];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_95  [key=2, style=dotted];
m2_89 -> m2_96  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_97  [key=2, style=dotted];
m2_90 -> m2_94  [key=2, style=dotted];
m2_91 -> m2_72  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_0 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_0 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_0 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_0 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_0 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_0 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_1 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_14  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_15  [key=2, style=dotted];
m2_3 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_17  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_18  [key=2, style=dotted];
m2_8 -> m2_19  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_20  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_18  [key=2, style=dotted];
m2_10 -> m2_19  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_21  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_22  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_16  [key=2, style=dotted];
m2_4 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=info];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_16  [key=2, style=dotted];
m2_5 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label=fields];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_16  [key=2, style=dotted];
m2_6 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m2_13 -> m2_0  [key=0, style=bold, color=blue];
m2_48 -> m2_103  [key=0, style=solid];
m2_48 -> m2_23  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m2_48 -> m2_47  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_105  [key=0, style=solid];
m2_103 -> m2_106  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_104 -> m2_50  [key=2, style=dotted];
m2_105 -> m2_48  [key=0, style=bold, color=blue];
m2_50 -> m2_50  [key=3, color=darkorchid, style=bold, label="Field variable string CasePropertyName"];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_23 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_23 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_23 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_23 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_23 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_23 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_23 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_23 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_23 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_23 -> m2_25  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_15  [key=2, style=dotted];
m2_26 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label=cases];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_47  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_48  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_49  [key=2, style=dotted];
m2_29 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m2_29 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_47  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_48  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_48  [key=2, style=dotted];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_53  [key=2, style=dotted];
m2_42 -> m2_54  [key=2, style=dotted];
m2_43 -> m2_41  [key=0, style=solid];
m2_43 -> m2_48  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_48  [key=2, style=dotted];
m2_25 -> m2_46  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_34  [key=0, style=solid];
m2_31 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label=c];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label=matchingCaseInfo];
m2_30 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=matchingCaseInfo];
m2_30 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=matchingCaseInfo];
m2_30 -> m2_25  [key=3, color=darkorchid, style=bold, label="Local variable object matchingCaseInfo"];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_31  [key=0, style=solid];
m2_32 -> m2_16  [key=2, style=dotted];
m2_35 -> m2_46  [key=0, style=solid];
m2_35 -> m2_50  [key=2, style=dotted];
m2_35 -> m2_51  [key=2, style=dotted];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_36  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_15  [key=2, style=dotted];
m2_39 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label=fieldProperties];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_55  [key=2, style=dotted];
m2_45 -> m2_15  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=matchingCaseInfo];
m2_33 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=matchingCaseInfo];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_52  [key=2, style=dotted];
m2_40 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label=fieldValues];
m2_40 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=fieldValues];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_44  [key=0, style=solid];
m2_46 -> m2_23  [key=0, style=bold, color=blue];
m2_47 -> m2_98  [key=0, style=solid];
m2_47 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_47 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_47 -> m2_23  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m2_47 -> m2_50  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_48  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_101  [key=0, style=solid];
m2_99 -> m2_49  [key=2, style=dotted];
m2_99 -> m2_102  [key=2, style=dotted];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_50  [key=2, style=dotted];
m2_100 -> m2_51  [key=2, style=dotted];
m2_101 -> m2_47  [key=0, style=bold, color=blue];
m4_99 -> m4_100  [key=0, style=solid];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_5  [key=2, style=dotted];
m4_100 -> m4_102  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_100 -> m4_103  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_100 -> m4_104  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_100 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_29  [key=2, style=dotted];
m4_101 -> m4_30  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_31  [key=2, style=dotted];
m4_102 -> m4_32  [key=2, style=dotted];
m4_102 -> m4_9  [key=2, style=dotted];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_31  [key=2, style=dotted];
m4_103 -> m4_108  [key=2, style=dotted];
m4_103 -> m4_106  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_109  [key=2, style=dotted];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_31  [key=2, style=dotted];
m4_105 -> m4_32  [key=2, style=dotted];
m4_105 -> m4_9  [key=2, style=dotted];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_9  [key=2, style=dotted];
m4_107 -> m4_99  [key=0, style=bold, color=blue];
m4_727 -> m4_728  [key=0, style=solid];
m4_728 -> m4_729  [key=0, style=solid];
m4_728 -> m4_5  [key=2, style=dotted];
m4_729 -> m4_730  [key=0, style=solid];
m4_729 -> m4_220  [key=2, style=dotted];
m4_730 -> m4_727  [key=0, style=bold, color=blue];
m4_135 -> m4_136  [key=0, style=solid];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_5  [key=2, style=dotted];
m4_136 -> m4_138  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_136 -> m4_139  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_136 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_136 -> m4_142  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_137 -> m4_138  [key=0, style=solid];
m4_137 -> m4_29  [key=2, style=dotted];
m4_137 -> m4_30  [key=2, style=dotted];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_29  [key=2, style=dotted];
m4_138 -> m4_30  [key=2, style=dotted];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_29  [key=2, style=dotted];
m4_139 -> m4_30  [key=2, style=dotted];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_31  [key=2, style=dotted];
m4_140 -> m4_32  [key=2, style=dotted];
m4_140 -> m4_9  [key=2, style=dotted];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_152  [key=2, style=dotted];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_143  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_141 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_141 -> m4_145  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_141 -> m4_146  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_141 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_141 -> m4_148  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_141 -> m4_149  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_141 -> m4_150  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_9  [key=2, style=dotted];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_9  [key=2, style=dotted];
m4_145 -> m4_146  [key=0, style=solid];
m4_145 -> m4_9  [key=2, style=dotted];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_9  [key=2, style=dotted];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_9  [key=2, style=dotted];
m4_148 -> m4_149  [key=0, style=solid];
m4_148 -> m4_9  [key=2, style=dotted];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_9  [key=2, style=dotted];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_9  [key=2, style=dotted];
m4_151 -> m4_135  [key=0, style=bold, color=blue];
m4_1001 -> m4_1002  [key=0, style=solid, color=red];
m4_1002 -> m4_1003  [key=0, style=solid, color=red];
m4_1002 -> m4_240  [key=2, style=dotted, color=red];
m4_1002 -> m4_1010  [key=1, style=dashed, color=red, label=o];
m4_1002 -> m4_1011  [key=1, style=dashed, color=red, label=o];
m4_1002 -> m4_1016  [key=1, style=dashed, color=red, label=o];
m4_1002 -> m4_1017  [key=1, style=dashed, color=red, label=o];
m4_1003 -> m4_1004  [key=0, style=solid];
m4_1003 -> m4_1002  [key=3, color=red, style=bold, label="Local variable System.ComponentModel.ICustomTypeDescriptor descriptor"];
m4_1010 -> m4_1011  [key=0, style=solid];
m4_1010 -> m4_1020  [key=2, style=dotted];
m4_1010 -> m4_9  [key=2, style=dotted];
m4_1011 -> m4_1012  [key=0, style=solid];
m4_1011 -> m4_1021  [key=2, style=dotted];
m4_1011 -> m4_9  [key=2, style=dotted];
m4_1016 -> m4_1017  [key=0, style=solid];
m4_1016 -> m4_1020  [key=2, style=dotted];
m4_1016 -> m4_9  [key=2, style=dotted];
m4_1017 -> m4_1018  [key=0, style=solid];
m4_1017 -> m4_1021  [key=2, style=dotted];
m4_1017 -> m4_9  [key=2, style=dotted];
m4_1004 -> m4_1005  [key=0, style=solid, color=red];
m4_1004 -> m4_1019  [key=2, style=dotted];
m4_1004 -> m4_1006  [key=1, style=dashed, color=darkseagreen4, label=properties];
m4_1004 -> m4_1012  [key=1, style=dashed, color=darkseagreen4, label=properties];
m4_1005 -> m4_1006  [key=0, style=solid, color=red];
m4_1005 -> m4_9  [key=2, style=dotted, color=red];
m4_1006 -> m4_1007  [key=0, style=solid];
m4_1006 -> m4_1008  [key=1, style=dashed, color=darkseagreen4, label=prop1];
m4_1006 -> m4_1009  [key=1, style=dashed, color=darkseagreen4, label=prop1];
m4_1006 -> m4_1010  [key=1, style=dashed, color=darkseagreen4, label=prop1];
m4_1006 -> m4_1011  [key=1, style=dashed, color=darkseagreen4, label=prop1];
m4_1012 -> m4_1013  [key=0, style=solid];
m4_1012 -> m4_1014  [key=1, style=dashed, color=darkseagreen4, label=prop2];
m4_1012 -> m4_1015  [key=1, style=dashed, color=darkseagreen4, label=prop2];
m4_1012 -> m4_1016  [key=1, style=dashed, color=darkseagreen4, label=prop2];
m4_1012 -> m4_1017  [key=1, style=dashed, color=darkseagreen4, label=prop2];
m4_1007 -> m4_1008  [key=0, style=solid];
m4_1007 -> m4_9  [key=2, style=dotted];
m4_1008 -> m4_1009  [key=0, style=solid];
m4_1008 -> m4_9  [key=2, style=dotted];
m4_1009 -> m4_1010  [key=0, style=solid];
m4_1009 -> m4_9  [key=2, style=dotted];
m4_1013 -> m4_1014  [key=0, style=solid];
m4_1013 -> m4_9  [key=2, style=dotted];
m4_1014 -> m4_1015  [key=0, style=solid];
m4_1014 -> m4_9  [key=2, style=dotted];
m4_1015 -> m4_1016  [key=0, style=solid];
m4_1015 -> m4_9  [key=2, style=dotted];
m4_1018 -> m4_1001  [key=0, style=bold, color=blue];
m4_775 -> m4_776  [key=0, style=solid];
m4_776 -> m4_777  [key=0, style=solid];
m4_776 -> m4_5  [key=2, style=dotted];
m4_777 -> m4_778  [key=0, style=solid];
m4_777 -> m4_9  [key=2, style=dotted];
m4_778 -> m4_775  [key=0, style=bold, color=blue];
m4_160 -> m4_161  [key=0, style=solid];
m4_161 -> m4_162  [key=0, style=solid];
m4_161 -> m4_78  [key=2, style=dotted];
m4_161 -> m4_163  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_162 -> m4_160  [key=0, style=bold, color=blue];
m4_273 -> m4_274  [key=0, style=solid];
m4_274 -> m4_275  [key=0, style=solid];
m4_274 -> m4_5  [key=2, style=dotted];
m4_274 -> m4_276  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_274 -> m4_277  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_29  [key=2, style=dotted];
m4_275 -> m4_30  [key=2, style=dotted];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_29  [key=2, style=dotted];
m4_276 -> m4_30  [key=2, style=dotted];
m4_277 -> m4_278  [key=0, style=solid];
m4_277 -> m4_279  [key=1, style=dashed, color=darkseagreen4, label=t];
m4_277 -> m4_274  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.JToken t"];
m4_278 -> m4_279  [key=0, style=solid];
m4_278 -> m4_280  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_278 -> m4_281  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_278 -> m4_282  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_278 -> m4_278  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_283  [key=0, style=solid];
m4_279 -> m4_281  [key=1, style=dashed, color=darkseagreen4, label=property];
m4_280 -> m4_281  [key=0, style=solid];
m4_280 -> m4_9  [key=2, style=dotted];
m4_281 -> m4_282  [key=0, style=solid];
m4_281 -> m4_9  [key=2, style=dotted];
m4_282 -> m4_279  [key=0, style=solid];
m4_282 -> m4_282  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_283 -> m4_273  [key=0, style=bold, color=blue];
m4_635 -> m4_636  [key=0, style=solid];
m4_636 -> m4_637  [key=0, style=solid];
m4_636 -> m4_376  [key=2, style=dotted];
m4_637 -> m4_638  [key=0, style=solid];
m4_637 -> m4_466  [key=2, style=dotted];
m4_637 -> m4_639  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_637 -> m4_640  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_638 -> m4_639  [key=0, style=solid];
m4_638 -> m4_9  [key=2, style=dotted];
m4_639 -> m4_640  [key=0, style=solid];
m4_639 -> m4_109  [key=2, style=dotted];
m4_640 -> m4_641  [key=0, style=solid];
m4_640 -> m4_9  [key=2, style=dotted];
m4_641 -> m4_635  [key=0, style=bold, color=blue];
m4_688 -> m4_689  [key=0, style=solid];
m4_689 -> m4_690  [key=0, style=solid];
m4_689 -> m4_376  [key=2, style=dotted];
m4_689 -> m4_691  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_689 -> m4_695  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_689 -> m4_697  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_690 -> m4_691  [key=0, style=solid];
m4_690 -> m4_376  [key=2, style=dotted];
m4_690 -> m4_698  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_690 -> m4_699  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_690 -> m4_701  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_690 -> m4_702  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_691 -> m4_692  [key=0, style=solid];
m4_691 -> m4_377  [key=2, style=dotted];
m4_691 -> m4_693  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_691 -> m4_694  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_691 -> m4_695  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_691 -> m4_696  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_691 -> m4_697  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_691 -> m4_698  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_691 -> m4_699  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_691 -> m4_700  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_691 -> m4_701  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_695 -> m4_696  [key=0, style=solid];
m4_695 -> m4_74  [key=2, style=dotted];
m4_695 -> m4_219  [key=2, style=dotted];
m4_697 -> m4_698  [key=0, style=solid];
m4_697 -> m4_126  [key=2, style=dotted];
m4_697 -> m4_220  [key=2, style=dotted];
m4_698 -> m4_699  [key=0, style=solid];
m4_698 -> m4_126  [key=2, style=dotted];
m4_698 -> m4_219  [key=2, style=dotted];
m4_699 -> m4_700  [key=0, style=solid];
m4_699 -> m4_74  [key=2, style=dotted];
m4_699 -> m4_219  [key=2, style=dotted];
m4_701 -> m4_702  [key=0, style=solid];
m4_701 -> m4_126  [key=2, style=dotted];
m4_701 -> m4_220  [key=2, style=dotted];
m4_702 -> m4_703  [key=0, style=solid];
m4_702 -> m4_9  [key=2, style=dotted];
m4_692 -> m4_693  [key=0, style=solid];
m4_692 -> m4_376  [key=2, style=dotted];
m4_693 -> m4_694  [key=0, style=solid];
m4_693 -> m4_74  [key=2, style=dotted];
m4_693 -> m4_220  [key=2, style=dotted];
m4_694 -> m4_695  [key=0, style=solid];
m4_694 -> m4_9  [key=2, style=dotted];
m4_696 -> m4_697  [key=0, style=solid];
m4_696 -> m4_9  [key=2, style=dotted];
m4_700 -> m4_701  [key=0, style=solid];
m4_700 -> m4_9  [key=2, style=dotted];
m4_703 -> m4_688  [key=0, style=bold, color=blue];
m4_914 -> m4_915  [key=0, style=solid];
m4_915 -> m4_916  [key=0, style=solid];
m4_915 -> m4_915  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_916 -> m4_917  [key=0, style=solid];
m4_916 -> m4_240  [key=2, style=dotted];
m4_917 -> m4_918  [key=0, style=solid];
m4_918 -> m4_919  [key=0, style=solid];
m4_918 -> m4_9  [key=2, style=dotted];
m4_919 -> m4_914  [key=0, style=bold, color=blue];
m4_127 -> m4_128  [key=0, style=solid];
m4_128 -> m4_129  [key=0, style=solid];
m4_128 -> m4_5  [key=2, style=dotted];
m4_128 -> m4_130  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_128 -> m4_131  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_29  [key=2, style=dotted];
m4_129 -> m4_30  [key=2, style=dotted];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_31  [key=2, style=dotted];
m4_130 -> m4_32  [key=2, style=dotted];
m4_130 -> m4_9  [key=2, style=dotted];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_134  [key=2, style=dotted];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_9  [key=2, style=dotted];
m4_133 -> m4_127  [key=0, style=bold, color=blue];
m4_751 -> m4_752  [key=0, style=solid];
m4_752 -> m4_753  [key=0, style=solid];
m4_752 -> m4_5  [key=2, style=dotted];
m4_753 -> m4_754  [key=0, style=solid];
m4_753 -> m4_9  [key=2, style=dotted];
m4_754 -> m4_751  [key=0, style=bold, color=blue];
m4_704 -> m4_705  [key=0, style=solid];
m4_705 -> m4_706  [key=0, style=solid];
m4_705 -> m4_376  [key=2, style=dotted];
m4_705 -> m4_707  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_705 -> m4_709  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_706 -> m4_707  [key=0, style=solid];
m4_706 -> m4_376  [key=2, style=dotted];
m4_706 -> m4_711  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_707 -> m4_708  [key=0, style=solid];
m4_707 -> m4_377  [key=2, style=dotted];
m4_707 -> m4_709  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_707 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_707 -> m4_711  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_707 -> m4_712  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_709 -> m4_710  [key=0, style=solid];
m4_709 -> m4_74  [key=2, style=dotted];
m4_711 -> m4_712  [key=0, style=solid];
m4_711 -> m4_74  [key=2, style=dotted];
m4_708 -> m4_709  [key=0, style=solid];
m4_708 -> m4_714  [key=2, style=dotted];
m4_710 -> m4_711  [key=0, style=solid];
m4_710 -> m4_9  [key=2, style=dotted];
m4_712 -> m4_713  [key=0, style=solid];
m4_712 -> m4_9  [key=2, style=dotted];
m4_713 -> m4_704  [key=0, style=bold, color=blue];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_5  [key=2, style=dotted];
m4_36 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_36 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_36 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_36 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_36 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_36 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_36 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_36 -> m4_48  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_29  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_31  [key=2, style=dotted];
m4_38 -> m4_32  [key=2, style=dotted];
m4_38 -> m4_9  [key=2, style=dotted];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_33  [key=2, style=dotted];
m4_40 -> m4_9  [key=2, style=dotted];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_29  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_31  [key=2, style=dotted];
m4_43 -> m4_32  [key=2, style=dotted];
m4_43 -> m4_9  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_33  [key=2, style=dotted];
m4_44 -> m4_9  [key=2, style=dotted];
m4_46 -> m4_47  [key=0, style=solid];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_31  [key=2, style=dotted];
m4_47 -> m4_32  [key=2, style=dotted];
m4_47 -> m4_9  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_33  [key=2, style=dotted];
m4_48 -> m4_9  [key=2, style=dotted];
m4_39 -> m4_40  [key=0, style=solid];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_29  [key=2, style=dotted];
m4_41 -> m4_34  [key=2, style=dotted];
m4_41 -> m4_9  [key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_29  [key=2, style=dotted];
m4_45 -> m4_34  [key=2, style=dotted];
m4_45 -> m4_9  [key=2, style=dotted];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_51  [key=2, style=dotted];
m4_49 -> m4_34  [key=2, style=dotted];
m4_49 -> m4_9  [key=2, style=dotted];
m4_50 -> m4_35  [key=0, style=bold, color=blue];
m4_17 -> m4_18  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_5  [key=2, style=dotted];
m4_18 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_18 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_18 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_18 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_29  [key=2, style=dotted];
m4_19 -> m4_30  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_31  [key=2, style=dotted];
m4_20 -> m4_32  [key=2, style=dotted];
m4_20 -> m4_9  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_33  [key=2, style=dotted];
m4_22 -> m4_9  [key=2, style=dotted];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_33  [key=2, style=dotted];
m4_24 -> m4_9  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_33  [key=2, style=dotted];
m4_26 -> m4_9  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_9  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_9  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_29  [key=2, style=dotted];
m4_27 -> m4_34  [key=2, style=dotted];
m4_27 -> m4_9  [key=2, style=dotted];
m4_28 -> m4_17  [key=0, style=bold, color=blue];
m4_571 -> m4_572  [key=0, style=solid];
m4_572 -> m4_573  [key=0, style=solid];
m4_572 -> m4_5  [key=2, style=dotted];
m4_573 -> m4_574  [key=0, style=solid];
m4_573 -> m4_220  [key=2, style=dotted];
m4_574 -> m4_571  [key=0, style=bold, color=blue];
m4_678 -> m4_679  [key=0, style=solid];
m4_679 -> m4_680  [key=0, style=solid];
m4_679 -> m4_78  [key=2, style=dotted];
m4_679 -> m4_681  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_680 -> m4_678  [key=0, style=bold, color=blue];
m4_575 -> m4_576  [key=0, style=solid];
m4_576 -> m4_577  [key=0, style=solid];
m4_576 -> m4_5  [key=2, style=dotted];
m4_577 -> m4_578  [key=0, style=solid];
m4_577 -> m4_220  [key=2, style=dotted];
m4_578 -> m4_575  [key=0, style=bold, color=blue];
m4_1022 -> m4_1023  [key=0, style=solid];
m4_1023 -> m4_1024  [key=0, style=solid];
m4_1023 -> m4_240  [key=2, style=dotted];
m4_1024 -> m4_1025  [key=0, style=solid];
m4_1024 -> m4_9  [key=2, style=dotted];
m4_1025 -> m4_1022  [key=0, style=bold, color=blue];
m4_804 -> m4_805  [key=0, style=solid];
m4_805 -> m4_806  [key=0, style=solid];
m4_805 -> m4_5  [key=2, style=dotted];
m4_806 -> m4_807  [key=0, style=solid];
m4_806 -> m4_808  [key=2, style=dotted];
m4_807 -> m4_804  [key=0, style=bold, color=blue];
m4_599 -> m4_600  [key=0, style=solid];
m4_600 -> m4_601  [key=0, style=solid];
m4_600 -> m4_78  [key=2, style=dotted];
m4_600 -> m4_602  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_601 -> m4_599  [key=0, style=bold, color=blue];
m4_759 -> m4_760  [key=0, style=solid];
m4_760 -> m4_761  [key=0, style=solid];
m4_760 -> m4_5  [key=2, style=dotted];
m4_761 -> m4_762  [key=0, style=solid];
m4_761 -> m4_9  [key=2, style=dotted];
m4_762 -> m4_759  [key=0, style=bold, color=blue];
m4_642 -> m4_643  [key=0, style=solid];
m4_643 -> m4_644  [key=0, style=solid];
m4_643 -> m4_376  [key=2, style=dotted];
m4_643 -> m4_645  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_643 -> m4_648  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_644 -> m4_645  [key=0, style=solid];
m4_644 -> m4_376  [key=2, style=dotted];
m4_644 -> m4_649  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_645 -> m4_646  [key=0, style=solid];
m4_645 -> m4_377  [key=2, style=dotted];
m4_645 -> m4_647  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_648 -> m4_649  [key=0, style=solid];
m4_648 -> m4_9  [key=2, style=dotted];
m4_649 -> m4_650  [key=0, style=solid];
m4_649 -> m4_9  [key=2, style=dotted];
m4_646 -> m4_647  [key=0, style=solid];
m4_646 -> m4_648  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_646 -> m4_649  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_647 -> m4_648  [key=0, style=solid];
m4_647 -> m4_152  [key=2, style=dotted];
m4_650 -> m4_642  [key=0, style=bold, color=blue];
m4_939 -> m4_940  [key=0, style=solid];
m4_940 -> m4_941  [key=0, style=solid];
m4_941 -> m4_942  [key=0, style=solid];
m4_941 -> m4_51  [key=2, style=dotted];
m4_941 -> m4_943  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_941 -> m4_945  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_942 -> m4_943  [key=0, style=solid];
m4_942 -> m4_9  [key=2, style=dotted];
m4_943 -> m4_944  [key=0, style=solid];
m4_943 -> m4_9  [key=2, style=dotted];
m4_945 -> m4_946  [key=0, style=solid];
m4_944 -> m4_945  [key=0, style=solid];
m4_944 -> m4_5  [key=2, style=dotted];
m4_944 -> m4_946  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_946 -> m4_947  [key=0, style=solid];
m4_946 -> m4_8  [key=2, style=dotted];
m4_947 -> m4_948  [key=0, style=solid];
m4_947 -> m4_9  [key=2, style=dotted];
m4_948 -> m4_939  [key=0, style=bold, color=blue];
m4_988 -> m4_989  [key=0, style=solid];
m4_989 -> m4_990  [key=0, style=solid];
m4_989 -> m4_78  [key=2, style=dotted];
m4_989 -> m4_991  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_989 -> m4_989  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m4_990 -> m4_988  [key=0, style=bold, color=blue];
m4_84 -> m4_85  [key=0, style=solid];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_5  [key=2, style=dotted];
m4_85 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_85 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_85 -> m4_89  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_85 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_29  [key=2, style=dotted];
m4_86 -> m4_30  [key=2, style=dotted];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_9  [key=2, style=dotted];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_30  [key=2, style=dotted];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_9  [key=2, style=dotted];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_31  [key=2, style=dotted];
m4_90 -> m4_32  [key=2, style=dotted];
m4_90 -> m4_9  [key=2, style=dotted];
m4_91 -> m4_84  [key=0, style=bold, color=blue];
m4_1069 -> m4_1070  [key=0, style=solid];
m4_1070 -> m4_1071  [key=0, style=solid];
m4_1070 -> m4_240  [key=2, style=dotted];
m4_1070 -> m4_1073  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1071 -> m4_1072  [key=0, style=solid];
m4_1071 -> m4_1081  [key=2, style=dotted];
m4_1073 -> m4_1074  [key=0, style=solid];
m4_1073 -> m4_1081  [key=2, style=dotted];
m4_1072 -> m4_1073  [key=0, style=solid];
m4_1072 -> m4_9  [key=2, style=dotted];
m4_1074 -> m4_1075  [key=0, style=solid];
m4_1074 -> m4_9  [key=2, style=dotted];
m4_1075 -> m4_1076  [key=0, style=solid];
m4_1075 -> m4_240  [key=2, style=dotted];
m4_1075 -> m4_1078  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1076 -> m4_1077  [key=0, style=solid];
m4_1076 -> m4_1081  [key=2, style=dotted];
m4_1078 -> m4_1079  [key=0, style=solid];
m4_1078 -> m4_1081  [key=2, style=dotted];
m4_1077 -> m4_1078  [key=0, style=solid];
m4_1077 -> m4_9  [key=2, style=dotted];
m4_1079 -> m4_1080  [key=0, style=solid];
m4_1079 -> m4_9  [key=2, style=dotted];
m4_1080 -> m4_1069  [key=0, style=bold, color=blue];
m4_849 -> m4_850  [key=0, style=solid];
m4_850 -> m4_851  [key=0, style=solid];
m4_850 -> m4_376  [key=2, style=dotted];
m4_850 -> m4_852  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_851 -> m4_852  [key=0, style=solid];
m4_851 -> m4_376  [key=2, style=dotted];
m4_852 -> m4_853  [key=0, style=solid];
m4_852 -> m4_377  [key=2, style=dotted];
m4_853 -> m4_854  [key=0, style=solid];
m4_853 -> m4_856  [key=2, style=dotted];
m4_854 -> m4_855  [key=0, style=solid];
m4_854 -> m4_857  [key=2, style=dotted];
m4_855 -> m4_849  [key=0, style=bold, color=blue];
m4_380 -> m4_381  [key=0, style=solid];
m4_381 -> m4_382  [key=0, style=solid];
m4_381 -> m4_76  [key=3, color=darkorchid, style=bold, label="Local variable object changing"];
m4_382 -> m4_383  [key=0, style=solid];
m4_382 -> m4_76  [key=3, color=darkorchid, style=bold, label="Local variable object changed"];
m4_383 -> m4_384  [key=0, style=solid];
m4_383 -> m4_386  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m4_383 -> m4_383  [key=3, color=darkorchid, style=bold, label="Local variable int changingCount"];
m4_384 -> m4_385  [key=0, style=solid];
m4_384 -> m4_387  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_384 -> m4_383  [key=3, color=darkorchid, style=bold, label="Local variable int changedCount"];
m4_386 -> m4_387  [key=0, style=solid];
m4_386 -> m4_386  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m4_386 -> m4_420  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_386 -> m4_421  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.PropertyChangingEventArgs"];
m4_386 -> m4_422  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m4_385 -> m4_386  [key=0, style=solid];
m4_385 -> m4_5  [key=2, style=dotted];
m4_385 -> m4_387  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_385 -> m4_388  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_385 -> m4_391  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_385 -> m4_394  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_385 -> m4_397  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_385 -> m4_400  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_385 -> m4_403  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_385 -> m4_406  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_385 -> m4_409  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_385 -> m4_412  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_385 -> m4_415  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_387 -> m4_388  [key=0, style=solid];
m4_387 -> m4_387  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_387 -> m4_425  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_387 -> m4_426  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.PropertyChangedEventArgs"];
m4_387 -> m4_427  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_388 -> m4_389  [key=0, style=solid];
m4_391 -> m4_392  [key=0, style=solid];
m4_391 -> m4_9  [key=2, style=dotted];
m4_394 -> m4_395  [key=0, style=solid];
m4_397 -> m4_398  [key=0, style=solid];
m4_400 -> m4_401  [key=0, style=solid];
m4_400 -> m4_9  [key=2, style=dotted];
m4_403 -> m4_404  [key=0, style=solid];
m4_406 -> m4_407  [key=0, style=solid];
m4_406 -> m4_9  [key=2, style=dotted];
m4_409 -> m4_410  [key=0, style=solid];
m4_412 -> m4_413  [key=0, style=solid];
m4_412 -> m4_51  [key=2, style=dotted];
m4_412 -> m4_9  [key=2, style=dotted];
m4_415 -> m4_416  [key=0, style=solid];
m4_389 -> m4_390  [key=0, style=solid];
m4_389 -> m4_9  [key=2, style=dotted];
m4_390 -> m4_391  [key=0, style=solid];
m4_390 -> m4_9  [key=2, style=dotted];
m4_392 -> m4_393  [key=0, style=solid];
m4_392 -> m4_9  [key=2, style=dotted];
m4_393 -> m4_394  [key=0, style=solid];
m4_393 -> m4_9  [key=2, style=dotted];
m4_395 -> m4_396  [key=0, style=solid];
m4_395 -> m4_9  [key=2, style=dotted];
m4_396 -> m4_397  [key=0, style=solid];
m4_396 -> m4_9  [key=2, style=dotted];
m4_398 -> m4_399  [key=0, style=solid];
m4_398 -> m4_9  [key=2, style=dotted];
m4_399 -> m4_400  [key=0, style=solid];
m4_399 -> m4_9  [key=2, style=dotted];
m4_401 -> m4_402  [key=0, style=solid];
m4_401 -> m4_9  [key=2, style=dotted];
m4_402 -> m4_403  [key=0, style=solid];
m4_402 -> m4_9  [key=2, style=dotted];
m4_404 -> m4_405  [key=0, style=solid];
m4_404 -> m4_9  [key=2, style=dotted];
m4_405 -> m4_406  [key=0, style=solid];
m4_405 -> m4_9  [key=2, style=dotted];
m4_407 -> m4_408  [key=0, style=solid];
m4_407 -> m4_9  [key=2, style=dotted];
m4_408 -> m4_409  [key=0, style=solid];
m4_408 -> m4_9  [key=2, style=dotted];
m4_410 -> m4_411  [key=0, style=solid];
m4_410 -> m4_9  [key=2, style=dotted];
m4_411 -> m4_412  [key=0, style=solid];
m4_411 -> m4_9  [key=2, style=dotted];
m4_413 -> m4_414  [key=0, style=solid];
m4_413 -> m4_9  [key=2, style=dotted];
m4_414 -> m4_415  [key=0, style=solid];
m4_414 -> m4_9  [key=2, style=dotted];
m4_416 -> m4_417  [key=0, style=solid];
m4_416 -> m4_9  [key=2, style=dotted];
m4_417 -> m4_418  [key=0, style=solid];
m4_417 -> m4_9  [key=2, style=dotted];
m4_418 -> m4_380  [key=0, style=bold, color=blue];
m4_241 -> m4_242  [key=0, style=solid];
m4_242 -> m4_243  [key=0, style=solid];
m4_242 -> m4_242  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_243 -> m4_244  [key=0, style=solid];
m4_243 -> m4_247  [key=2, style=dotted];
m4_244 -> m4_245  [key=0, style=solid];
m4_245 -> m4_246  [key=0, style=solid];
m4_245 -> m4_248  [key=2, style=dotted];
m4_245 -> m4_9  [key=2, style=dotted];
m4_246 -> m4_241  [key=0, style=bold, color=blue];
m4_1082 -> m4_1083  [key=0, style=solid];
m4_1083 -> m4_1084  [key=0, style=solid];
m4_1083 -> m4_5  [key=2, style=dotted];
m4_1083 -> m4_34  [key=2, style=dotted];
m4_1083 -> m4_219  [key=2, style=dotted];
m4_1084 -> m4_1085  [key=0, style=solid];
m4_1084 -> m4_5  [key=2, style=dotted];
m4_1084 -> m4_1088  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1084 -> m4_1089  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1085 -> m4_1086  [key=0, style=solid];
m4_1085 -> m4_5  [key=2, style=dotted];
m4_1085 -> m4_1087  [key=1, style=dashed, color=darkseagreen4, label=b];
m4_1085 -> m4_1088  [key=1, style=dashed, color=darkseagreen4, label=b];
m4_1085 -> m4_1089  [key=1, style=dashed, color=darkseagreen4, label=b];
m4_1088 -> m4_1089  [key=0, style=solid];
m4_1088 -> m4_34  [key=2, style=dotted];
m4_1088 -> m4_219  [key=2, style=dotted];
m4_1089 -> m4_1090  [key=0, style=solid];
m4_1089 -> m4_34  [key=2, style=dotted];
m4_1089 -> m4_219  [key=2, style=dotted];
m4_1086 -> m4_1087  [key=0, style=solid];
m4_1086 -> m4_30  [key=2, style=dotted];
m4_1087 -> m4_1088  [key=0, style=solid];
m4_1087 -> m4_61  [key=2, style=dotted];
m4_1090 -> m4_1082  [key=0, style=bold, color=blue];
m4_167 -> m4_168  [key=0, style=solid];
m4_168 -> m4_169  [key=0, style=solid];
m4_168 -> m4_78  [key=2, style=dotted];
m4_168 -> m4_170  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_169 -> m4_167  [key=0, style=bold, color=blue];
m4_669 -> m4_670  [key=0, style=solid];
m4_670 -> m4_671  [key=0, style=solid];
m4_670 -> m4_78  [key=2, style=dotted];
m4_670 -> m4_672  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_671 -> m4_669  [key=0, style=bold, color=blue];
m4_927 -> m4_928  [key=0, style=solid];
m4_928 -> m4_929  [key=0, style=solid];
m4_928 -> m4_930  [key=1, style=dashed, color=darkseagreen4, label=key];
m4_928 -> m4_931  [key=1, style=dashed, color=darkseagreen4, label=key];
m4_928 -> m4_928  [key=3, color=darkorchid, style=bold, label="Local variable object key"];
m4_929 -> m4_930  [key=0, style=solid];
m4_929 -> m4_5  [key=2, style=dotted];
m4_929 -> m4_931  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_930 -> m4_931  [key=0, style=solid];
m4_930 -> m4_29  [key=2, style=dotted];
m4_931 -> m4_932  [key=0, style=solid];
m4_931 -> m4_9  [key=2, style=dotted];
m4_932 -> m4_927  [key=0, style=bold, color=blue];
m4_779 -> m4_780  [key=0, style=solid];
m4_780 -> m4_781  [key=0, style=solid];
m4_780 -> m4_5  [key=2, style=dotted];
m4_781 -> m4_782  [key=0, style=solid];
m4_781 -> m4_9  [key=2, style=dotted];
m4_782 -> m4_779  [key=0, style=bold, color=blue];
m4_284 -> m4_285  [key=0, style=solid];
m4_285 -> m4_286  [key=0, style=solid];
m4_285 -> m4_5  [key=2, style=dotted];
m4_285 -> m4_287  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_285 -> m4_289  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_286 -> m4_287  [key=0, style=solid];
m4_286 -> m4_29  [key=2, style=dotted];
m4_286 -> m4_30  [key=2, style=dotted];
m4_287 -> m4_288  [key=0, style=solid];
m4_287 -> m4_29  [key=2, style=dotted];
m4_287 -> m4_30  [key=2, style=dotted];
m4_289 -> m4_290  [key=0, style=solid];
m4_289 -> m4_293  [key=0, style=solid];
m4_288 -> m4_289  [key=0, style=solid];
m4_288 -> m4_290  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_288 -> m4_291  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_288 -> m4_292  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_288 -> m4_278  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m4_290 -> m4_291  [key=0, style=solid];
m4_290 -> m4_9  [key=2, style=dotted];
m4_290 -> m4_290  [key=1, style=dashed, color=darkseagreen4, label=pair];
m4_291 -> m4_292  [key=0, style=solid];
m4_291 -> m4_9  [key=2, style=dotted];
m4_291 -> m4_291  [key=1, style=dashed, color=darkseagreen4, label=pair];
m4_292 -> m4_289  [key=0, style=solid];
m4_292 -> m4_292  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_293 -> m4_284  [key=0, style=bold, color=blue];
m4_763 -> m4_764  [key=0, style=solid];
m4_764 -> m4_765  [key=0, style=solid];
m4_764 -> m4_5  [key=2, style=dotted];
m4_765 -> m4_766  [key=0, style=solid];
m4_765 -> m4_9  [key=2, style=dotted];
m4_766 -> m4_763  [key=0, style=bold, color=blue];
m4_1137 -> m4_1138  [key=0, style=solid];
m4_1138 -> m4_1139  [key=0, style=solid];
m4_1138 -> m4_1140  [key=2, style=dotted];
m4_1139 -> m4_1137  [key=0, style=bold, color=blue];
m4_493 -> m4_494  [key=0, style=solid];
m4_494 -> m4_495  [key=0, style=solid];
m4_494 -> m4_376  [key=2, style=dotted];
m4_494 -> m4_496  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_495 -> m4_496  [key=0, style=solid];
m4_495 -> m4_376  [key=2, style=dotted];
m4_496 -> m4_497  [key=0, style=solid];
m4_496 -> m4_377  [key=2, style=dotted];
m4_496 -> m4_498  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_496 -> m4_499  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_496 -> m4_500  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_497 -> m4_498  [key=0, style=solid];
m4_497 -> m4_376  [key=2, style=dotted];
m4_497 -> m4_500  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_498 -> m4_499  [key=0, style=solid];
m4_498 -> m4_502  [key=2, style=dotted];
m4_499 -> m4_500  [key=0, style=solid];
m4_499 -> m4_9  [key=2, style=dotted];
m4_500 -> m4_501  [key=0, style=solid];
m4_500 -> m4_9  [key=2, style=dotted];
m4_501 -> m4_493  [key=0, style=bold, color=blue];
m4_616 -> m4_617  [key=0, style=solid];
m4_617 -> m4_618  [key=0, style=solid];
m4_617 -> m4_376  [key=2, style=dotted];
m4_617 -> m4_619  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_618 -> m4_619  [key=0, style=solid];
m4_618 -> m4_376  [key=2, style=dotted];
m4_619 -> m4_620  [key=0, style=solid];
m4_619 -> m4_377  [key=2, style=dotted];
m4_620 -> m4_621  [key=0, style=solid];
m4_620 -> m4_220  [key=2, style=dotted];
m4_621 -> m4_616  [key=0, style=bold, color=blue];
m4_842 -> m4_843  [key=0, style=solid];
m4_843 -> m4_844  [key=0, style=solid];
m4_843 -> m4_376  [key=2, style=dotted];
m4_843 -> m4_845  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_844 -> m4_845  [key=0, style=solid];
m4_844 -> m4_376  [key=2, style=dotted];
m4_845 -> m4_846  [key=0, style=solid];
m4_845 -> m4_377  [key=2, style=dotted];
m4_846 -> m4_847  [key=0, style=solid];
m4_846 -> m4_848  [key=2, style=dotted];
m4_846 -> m4_9  [key=2, style=dotted];
m4_847 -> m4_842  [key=0, style=bold, color=blue];
m4_559 -> m4_560  [key=0, style=solid];
m4_560 -> m4_561  [key=0, style=solid];
m4_560 -> m4_376  [key=2, style=dotted];
m4_560 -> m4_562  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_560 -> m4_566  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_561 -> m4_562  [key=0, style=solid];
m4_561 -> m4_376  [key=2, style=dotted];
m4_561 -> m4_568  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_562 -> m4_563  [key=0, style=solid];
m4_562 -> m4_377  [key=2, style=dotted];
m4_562 -> m4_564  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_562 -> m4_565  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_562 -> m4_566  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_562 -> m4_567  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_562 -> m4_568  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_566 -> m4_567  [key=0, style=solid];
m4_566 -> m4_9  [key=2, style=dotted];
m4_568 -> m4_569  [key=0, style=solid];
m4_568 -> m4_9  [key=2, style=dotted];
m4_563 -> m4_564  [key=0, style=solid];
m4_563 -> m4_376  [key=2, style=dotted];
m4_563 -> m4_565  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_563 -> m4_567  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_564 -> m4_565  [key=0, style=solid];
m4_564 -> m4_570  [key=2, style=dotted];
m4_565 -> m4_566  [key=0, style=solid];
m4_565 -> m4_9  [key=2, style=dotted];
m4_567 -> m4_568  [key=0, style=solid];
m4_567 -> m4_9  [key=2, style=dotted];
m4_569 -> m4_559  [key=0, style=bold, color=blue];
m4_755 -> m4_756  [key=0, style=solid];
m4_756 -> m4_757  [key=0, style=solid];
m4_756 -> m4_5  [key=2, style=dotted];
m4_757 -> m4_758  [key=0, style=solid];
m4_757 -> m4_9  [key=2, style=dotted];
m4_758 -> m4_755  [key=0, style=bold, color=blue];
m4_62 -> m4_63  [key=0, style=solid];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_29  [key=2, style=dotted];
m4_63 -> m4_65  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_63 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_5  [key=2, style=dotted];
m4_64 -> m4_66  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_64 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_64 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_64 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_64 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_64 -> m4_71  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_30  [key=2, style=dotted];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_73  [key=2, style=dotted];
m4_70 -> m4_74  [key=2, style=dotted];
m4_70 -> m4_9  [key=2, style=dotted];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_31  [key=2, style=dotted];
m4_66 -> m4_32  [key=2, style=dotted];
m4_66 -> m4_9  [key=2, style=dotted];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_73  [key=2, style=dotted];
m4_67 -> m4_29  [key=2, style=dotted];
m4_67 -> m4_74  [key=2, style=dotted];
m4_67 -> m4_9  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_73  [key=2, style=dotted];
m4_68 -> m4_29  [key=2, style=dotted];
m4_68 -> m4_74  [key=2, style=dotted];
m4_68 -> m4_9  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_73  [key=2, style=dotted];
m4_69 -> m4_29  [key=2, style=dotted];
m4_69 -> m4_74  [key=2, style=dotted];
m4_69 -> m4_9  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_31  [key=2, style=dotted];
m4_71 -> m4_32  [key=2, style=dotted];
m4_71 -> m4_9  [key=2, style=dotted];
m4_72 -> m4_62  [key=0, style=bold, color=blue];
m4_153 -> m4_154  [key=0, style=solid];
m4_154 -> m4_155  [key=0, style=solid];
m4_154 -> m4_78  [key=2, style=dotted];
m4_154 -> m4_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_155 -> m4_153  [key=0, style=bold, color=blue];
m4_1124 -> m4_1125  [key=0, style=solid];
m4_1124 -> m4_1129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_1124 -> m4_1130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_1125 -> m4_1126  [key=0, style=solid];
m4_1125 -> m4_231  [key=2, style=dotted];
m4_1125 -> m4_1132  [key=2, style=dotted];
m4_1125 -> m4_1133  [key=2, style=dotted];
m4_1125 -> m4_1127  [key=1, style=dashed, color=darkseagreen4, label=token];
m4_1125 -> m4_1130  [key=1, style=dashed, color=darkseagreen4, label=token];
m4_1129 -> m4_1131  [key=0, style=solid];
m4_1129 -> m4_1135  [key=2, style=dotted];
m4_1130 -> m4_1131  [key=0, style=solid];
m4_1130 -> m4_1136  [key=2, style=dotted];
m4_1126 -> m4_1127  [key=0, style=solid];
m4_1126 -> m4_1130  [key=0, style=solid];
m4_1127 -> m4_1128  [key=0, style=solid];
m4_1127 -> m4_1129  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1128 -> m4_1129  [key=0, style=solid];
m4_1128 -> m4_376  [key=2, style=dotted];
m4_1128 -> m4_1134  [key=2, style=dotted];
m4_1131 -> m4_1124  [key=0, style=bold, color=blue];
m4_1034 -> m4_1035  [key=0, style=solid];
m4_1035 -> m4_1036  [key=0, style=solid];
m4_1035 -> m4_1039  [key=2, style=dotted];
m4_1035 -> m4_1032  [key=2, style=dotted];
m4_1035 -> m4_1037  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_1036 -> m4_1037  [key=0, style=solid];
m4_1036 -> m4_1039  [key=2, style=dotted];
m4_1036 -> m4_9  [key=2, style=dotted];
m4_1037 -> m4_1038  [key=0, style=solid];
m4_1037 -> m4_1033  [key=2, style=dotted];
m4_1037 -> m4_9  [key=2, style=dotted];
m4_1038 -> m4_1034  [key=0, style=bold, color=blue];
m4_920 -> m4_921  [key=0, style=solid];
m4_921 -> m4_922  [key=0, style=solid];
m4_921 -> m4_78  [key=2, style=dotted];
m4_921 -> m4_923  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_922 -> m4_920  [key=0, style=bold, color=blue];
m4_588 -> m4_589  [key=0, style=solid];
m4_589 -> m4_590  [key=0, style=solid];
m4_589 -> m4_78  [key=2, style=dotted];
m4_589 -> m4_591  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_590 -> m4_588  [key=0, style=bold, color=blue];
m4_315 -> m4_316  [key=0, style=solid];
m4_316 -> m4_317  [key=0, style=solid];
m4_317 -> m4_318  [key=0, style=solid];
m4_317 -> m4_240  [key=2, style=dotted];
m4_318 -> m4_319  [key=0, style=solid];
m4_318 -> m4_327  [key=2, style=dotted];
m4_318 -> m4_328  [key=2, style=dotted];
m4_318 -> m4_320  [key=1, style=dashed, color=darkseagreen4, label=shortie];
m4_318 -> m4_321  [key=1, style=dashed, color=darkseagreen4, label=shortie];
m4_318 -> m4_322  [key=1, style=dashed, color=darkseagreen4, label=shortie];
m4_318 -> m4_323  [key=1, style=dashed, color=darkseagreen4, label=shortie];
m4_318 -> m4_324  [key=1, style=dashed, color=darkseagreen4, label=shortie];
m4_318 -> m4_325  [key=1, style=dashed, color=darkseagreen4, label=shortie];
m4_319 -> m4_320  [key=0, style=solid];
m4_319 -> m4_314  [key=2, style=dotted];
m4_320 -> m4_321  [key=0, style=solid];
m4_320 -> m4_314  [key=2, style=dotted];
m4_321 -> m4_322  [key=0, style=solid];
m4_321 -> m4_9  [key=2, style=dotted];
m4_322 -> m4_323  [key=0, style=solid];
m4_322 -> m4_9  [key=2, style=dotted];
m4_323 -> m4_324  [key=0, style=solid];
m4_323 -> m4_9  [key=2, style=dotted];
m4_324 -> m4_325  [key=0, style=solid];
m4_324 -> m4_9  [key=2, style=dotted];
m4_325 -> m4_326  [key=0, style=solid];
m4_325 -> m4_9  [key=2, style=dotted];
m4_326 -> m4_315  [key=0, style=bold, color=blue];
m4_483 -> m4_484  [key=0, style=solid];
m4_484 -> m4_485  [key=0, style=solid];
m4_484 -> m4_376  [key=2, style=dotted];
m4_484 -> m4_486  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_484 -> m4_489  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_485 -> m4_486  [key=0, style=solid];
m4_485 -> m4_376  [key=2, style=dotted];
m4_485 -> m4_490  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_486 -> m4_487  [key=0, style=solid];
m4_486 -> m4_377  [key=2, style=dotted];
m4_486 -> m4_488  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_489 -> m4_490  [key=0, style=solid];
m4_489 -> m4_9  [key=2, style=dotted];
m4_490 -> m4_491  [key=0, style=solid];
m4_490 -> m4_9  [key=2, style=dotted];
m4_487 -> m4_488  [key=0, style=solid];
m4_487 -> m4_489  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_487 -> m4_490  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_488 -> m4_489  [key=0, style=solid];
m4_488 -> m4_492  [key=2, style=dotted];
m4_491 -> m4_483  [key=0, style=bold, color=blue];
m4_184 -> m4_185  [key=0, style=solid];
m4_185 -> m4_186  [key=0, style=solid];
m4_185 -> m4_192  [key=2, style=dotted];
m4_185 -> m4_193  [key=2, style=dotted];
m4_186 -> m4_187  [key=0, style=solid];
m4_186 -> m4_194  [key=2, style=dotted];
m4_186 -> m4_188  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_186 -> m4_189  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_186 -> m4_190  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_187 -> m4_188  [key=0, style=solid];
m4_187 -> m4_9  [key=2, style=dotted];
m4_188 -> m4_189  [key=0, style=solid];
m4_188 -> m4_9  [key=2, style=dotted];
m4_189 -> m4_190  [key=0, style=solid];
m4_189 -> m4_9  [key=2, style=dotted];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_9  [key=2, style=dotted];
m4_191 -> m4_184  [key=0, style=bold, color=blue];
m4_75 -> m4_76  [key=0, style=solid];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_78  [key=2, style=dotted];
m4_76 -> m4_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_77 -> m4_75  [key=0, style=bold, color=blue];
m4_195 -> m4_196  [key=0, style=solid];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_192  [key=2, style=dotted];
m4_196 -> m4_193  [key=2, style=dotted];
m4_197 -> m4_198  [key=0, style=solid];
m4_197 -> m4_194  [key=2, style=dotted];
m4_198 -> m4_199  [key=0, style=solid];
m4_198 -> m4_217  [key=2, style=dotted];
m4_198 -> m4_200  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_198 -> m4_201  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_198 -> m4_202  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_198 -> m4_203  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_198 -> m4_204  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_198 -> m4_205  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_198 -> m4_206  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_198 -> m4_207  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_198 -> m4_208  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_198 -> m4_209  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_198 -> m4_210  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_198 -> m4_211  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_198 -> m4_212  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_198 -> m4_213  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_198 -> m4_214  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_198 -> m4_215  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_199 -> m4_200  [key=0, style=solid];
m4_199 -> m4_218  [key=2, style=dotted];
m4_199 -> m4_219  [key=2, style=dotted];
m4_200 -> m4_201  [key=0, style=solid];
m4_200 -> m4_9  [key=2, style=dotted];
m4_201 -> m4_202  [key=0, style=solid];
m4_201 -> m4_218  [key=2, style=dotted];
m4_201 -> m4_219  [key=2, style=dotted];
m4_202 -> m4_203  [key=0, style=solid];
m4_202 -> m4_9  [key=2, style=dotted];
m4_203 -> m4_204  [key=0, style=solid];
m4_203 -> m4_218  [key=2, style=dotted];
m4_203 -> m4_219  [key=2, style=dotted];
m4_204 -> m4_205  [key=0, style=solid];
m4_204 -> m4_9  [key=2, style=dotted];
m4_205 -> m4_206  [key=0, style=solid];
m4_205 -> m4_218  [key=2, style=dotted];
m4_205 -> m4_219  [key=2, style=dotted];
m4_206 -> m4_207  [key=0, style=solid];
m4_206 -> m4_9  [key=2, style=dotted];
m4_207 -> m4_208  [key=0, style=solid];
m4_207 -> m4_218  [key=2, style=dotted];
m4_207 -> m4_219  [key=2, style=dotted];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_9  [key=2, style=dotted];
m4_209 -> m4_210  [key=0, style=solid];
m4_209 -> m4_218  [key=2, style=dotted];
m4_209 -> m4_219  [key=2, style=dotted];
m4_210 -> m4_211  [key=0, style=solid];
m4_210 -> m4_9  [key=2, style=dotted];
m4_211 -> m4_212  [key=0, style=solid];
m4_211 -> m4_218  [key=2, style=dotted];
m4_211 -> m4_219  [key=2, style=dotted];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_9  [key=2, style=dotted];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_218  [key=2, style=dotted];
m4_213 -> m4_219  [key=2, style=dotted];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_9  [key=2, style=dotted];
m4_215 -> m4_216  [key=0, style=solid];
m4_215 -> m4_218  [key=2, style=dotted];
m4_215 -> m4_220  [key=2, style=dotted];
m4_216 -> m4_195  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_5  [key=2, style=dotted];
m4_1 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_6  [key=2, style=dotted];
m4_2 -> m4_7  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_8  [key=2, style=dotted];
m4_3 -> m4_9  [key=2, style=dotted];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m4_1046 -> m4_1047  [key=0, style=solid];
m4_1047 -> m4_1048  [key=0, style=solid];
m4_1047 -> m4_78  [key=2, style=dotted];
m4_1047 -> m4_1049  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_1047 -> m4_1047  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_1048 -> m4_1046  [key=0, style=bold, color=blue];
m4_886 -> m4_887  [key=0, style=solid];
m4_887 -> m4_888  [key=0, style=solid];
m4_887 -> m4_376  [key=2, style=dotted];
m4_887 -> m4_889  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_888 -> m4_889  [key=0, style=solid];
m4_888 -> m4_376  [key=2, style=dotted];
m4_889 -> m4_890  [key=0, style=solid];
m4_889 -> m4_377  [key=2, style=dotted];
m4_889 -> m4_892  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_889 -> m4_894  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_889 -> m4_897  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_889 -> m4_899  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_889 -> m4_902  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_889 -> m4_903  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_889 -> m4_904  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_889 -> m4_905  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_889 -> m4_908  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_890 -> m4_891  [key=0, style=solid];
m4_890 -> m4_76  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.Specialized.NotifyCollectionChangedAction? changedType"];
m4_892 -> m4_893  [key=0, style=solid];
m4_892 -> m4_911  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m4_892 -> m4_912  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m4_894 -> m4_895  [key=0, style=solid];
m4_894 -> m4_7  [key=2, style=dotted];
m4_897 -> m4_898  [key=0, style=solid];
m4_897 -> m4_9  [key=2, style=dotted];
m4_899 -> m4_900  [key=0, style=solid];
m4_902 -> m4_903  [key=0, style=solid];
m4_902 -> m4_9  [key=2, style=dotted];
m4_903 -> m4_904  [key=0, style=solid];
m4_903 -> m4_126  [key=2, style=dotted];
m4_903 -> m4_220  [key=2, style=dotted];
m4_904 -> m4_905  [key=0, style=solid];
m4_904 -> m4_126  [key=2, style=dotted];
m4_904 -> m4_219  [key=2, style=dotted];
m4_905 -> m4_906  [key=0, style=solid];
m4_908 -> m4_909  [key=0, style=solid];
m4_908 -> m4_9  [key=2, style=dotted];
m4_891 -> m4_892  [key=0, style=solid];
m4_891 -> m4_76  [key=3, color=darkorchid, style=bold, label="Local variable int? index"];
m4_893 -> m4_894  [key=0, style=solid];
m4_893 -> m4_376  [key=2, style=dotted];
m4_893 -> m4_897  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_893 -> m4_903  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_895 -> m4_896  [key=0, style=solid];
m4_895 -> m4_9  [key=2, style=dotted];
m4_896 -> m4_897  [key=0, style=solid];
m4_896 -> m4_9  [key=2, style=dotted];
m4_898 -> m4_899  [key=0, style=solid];
m4_898 -> m4_376  [key=2, style=dotted];
m4_898 -> m4_902  [key=1, style=dashed, color=darkseagreen4, label=p4];
m4_898 -> m4_904  [key=1, style=dashed, color=darkseagreen4, label=p4];
m4_900 -> m4_901  [key=0, style=solid];
m4_900 -> m4_9  [key=2, style=dotted];
m4_901 -> m4_902  [key=0, style=solid];
m4_901 -> m4_9  [key=2, style=dotted];
m4_906 -> m4_907  [key=0, style=solid];
m4_906 -> m4_9  [key=2, style=dotted];
m4_907 -> m4_908  [key=0, style=solid];
m4_907 -> m4_9  [key=2, style=dotted];
m4_909 -> m4_886  [key=0, style=bold, color=blue];
m4_174 -> m4_175  [key=0, style=solid];
m4_175 -> m4_176  [key=0, style=solid];
m4_175 -> m4_78  [key=2, style=dotted];
m4_175 -> m4_177  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_176 -> m4_174  [key=0, style=bold, color=blue];
m4_783 -> m4_784  [key=0, style=solid];
m4_784 -> m4_785  [key=0, style=solid];
m4_784 -> m4_5  [key=2, style=dotted];
m4_785 -> m4_786  [key=0, style=solid];
m4_785 -> m4_787  [key=2, style=dotted];
m4_786 -> m4_783  [key=0, style=bold, color=blue];
m4_512 -> m4_513  [key=0, style=solid];
m4_513 -> m4_514  [key=0, style=solid];
m4_513 -> m4_78  [key=2, style=dotted];
m4_513 -> m4_515  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_514 -> m4_512  [key=0, style=bold, color=blue];
m4_957 -> m4_958  [key=0, style=solid];
m4_958 -> m4_959  [key=0, style=solid];
m4_958 -> m4_78  [key=2, style=dotted];
m4_958 -> m4_960  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_958 -> m4_950  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_959 -> m4_957  [key=0, style=bold, color=blue];
m4_468 -> m4_469  [key=0, style=solid];
m4_469 -> m4_470  [key=0, style=solid];
m4_469 -> m4_376  [key=2, style=dotted];
m4_469 -> m4_471  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_470 -> m4_471  [key=0, style=solid];
m4_470 -> m4_466  [key=2, style=dotted];
m4_470 -> m4_472  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_471 -> m4_472  [key=0, style=solid];
m4_471 -> m4_474  [key=2, style=dotted];
m4_471 -> m4_9  [key=2, style=dotted];
m4_472 -> m4_473  [key=0, style=solid];
m4_472 -> m4_376  [key=2, style=dotted];
m4_472 -> m4_474  [key=2, style=dotted];
m4_472 -> m4_9  [key=2, style=dotted];
m4_473 -> m4_468  [key=0, style=bold, color=blue];
m4_767 -> m4_768  [key=0, style=solid];
m4_768 -> m4_769  [key=0, style=solid];
m4_768 -> m4_5  [key=2, style=dotted];
m4_769 -> m4_770  [key=0, style=solid];
m4_769 -> m4_9  [key=2, style=dotted];
m4_770 -> m4_767  [key=0, style=bold, color=blue];
m4_796 -> m4_797  [key=0, style=solid];
m4_797 -> m4_798  [key=0, style=solid];
m4_797 -> m4_78  [key=2, style=dotted];
m4_797 -> m4_799  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_798 -> m4_796  [key=0, style=bold, color=blue];
m4_521 -> m4_522  [key=0, style=solid];
m4_522 -> m4_523  [key=0, style=solid];
m4_522 -> m4_78  [key=2, style=dotted];
m4_522 -> m4_524  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_523 -> m4_521  [key=0, style=bold, color=blue];
m4_221 -> m4_222  [key=0, style=solid];
m4_222 -> m4_223  [key=0, style=solid];
m4_222 -> m4_192  [key=2, style=dotted];
m4_222 -> m4_193  [key=2, style=dotted];
m4_223 -> m4_224  [key=0, style=solid];
m4_223 -> m4_194  [key=2, style=dotted];
m4_224 -> m4_225  [key=0, style=solid];
m4_224 -> m4_217  [key=2, style=dotted];
m4_224 -> m4_226  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_225 -> m4_226  [key=0, style=solid];
m4_225 -> m4_231  [key=2, style=dotted];
m4_226 -> m4_227  [key=0, style=solid];
m4_226 -> m4_232  [key=2, style=dotted];
m4_226 -> m4_228  [key=1, style=dashed, color=darkseagreen4, label=raw];
m4_226 -> m4_229  [key=1, style=dashed, color=darkseagreen4, label=raw];
m4_227 -> m4_228  [key=0, style=solid];
m4_227 -> m4_9  [key=2, style=dotted];
m4_228 -> m4_229  [key=0, style=solid];
m4_228 -> m4_9  [key=2, style=dotted];
m4_229 -> m4_230  [key=0, style=solid];
m4_229 -> m4_9  [key=2, style=dotted];
m4_230 -> m4_221  [key=0, style=bold, color=blue];
m4_294 -> m4_295  [key=0, style=solid];
m4_295 -> m4_296  [key=0, style=solid];
m4_295 -> m4_76  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_304  [key=2, style=dotted];
m4_296 -> m4_298  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_296 -> m4_300  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_297 -> m4_298  [key=0, style=solid];
m4_297 -> m4_9  [key=2, style=dotted];
m4_298 -> m4_299  [key=0, style=solid];
m4_298 -> m4_9  [key=2, style=dotted];
m4_300 -> m4_301  [key=0, style=solid];
m4_299 -> m4_300  [key=0, style=solid];
m4_299 -> m4_5  [key=2, style=dotted];
m4_299 -> m4_301  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_301 -> m4_302  [key=0, style=solid];
m4_301 -> m4_8  [key=2, style=dotted];
m4_302 -> m4_303  [key=0, style=solid];
m4_302 -> m4_9  [key=2, style=dotted];
m4_303 -> m4_294  [key=0, style=bold, color=blue];
m4_329 -> m4_330  [key=0, style=solid];
m4_330 -> m4_331  [key=0, style=solid];
m4_330 -> m4_5  [key=2, style=dotted];
m4_330 -> m4_332  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_330 -> m4_333  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_330 -> m4_334  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_331 -> m4_332  [key=0, style=solid];
m4_331 -> m4_29  [key=2, style=dotted];
m4_332 -> m4_333  [key=0, style=solid];
m4_332 -> m4_304  [key=2, style=dotted];
m4_333 -> m4_334  [key=0, style=solid];
m4_333 -> m4_304  [key=2, style=dotted];
m4_334 -> m4_335  [key=0, style=solid];
m4_334 -> m4_8  [key=2, style=dotted];
m4_334 -> m4_9  [key=2, style=dotted];
m4_335 -> m4_329  [key=0, style=bold, color=blue];
m4_1099 -> m4_1100  [key=0, style=solid];
m4_1100 -> m4_1101  [key=0, style=solid];
m4_1100 -> m4_5  [key=2, style=dotted];
m4_1100 -> m4_1102  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1100 -> m4_1103  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1100 -> m4_1104  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1100 -> m4_1105  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1100 -> m4_1106  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1100 -> m4_1107  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1100 -> m4_1108  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1100 -> m4_1109  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1100 -> m4_1110  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1100 -> m4_1112  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1100 -> m4_1114  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1100 -> m4_1115  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1100 -> m4_1116  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1100 -> m4_1118  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1100 -> m4_1120  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_1101 -> m4_1102  [key=0, style=solid];
m4_1102 -> m4_1103  [key=0, style=solid];
m4_1103 -> m4_1104  [key=0, style=solid];
m4_1104 -> m4_1105  [key=0, style=solid];
m4_1104 -> m4_1098  [key=2, style=dotted];
m4_1104 -> m4_9  [key=2, style=dotted];
m4_1105 -> m4_1106  [key=0, style=solid];
m4_1105 -> m4_1122  [key=2, style=dotted];
m4_1105 -> m4_9  [key=2, style=dotted];
m4_1106 -> m4_1107  [key=0, style=solid];
m4_1106 -> m4_1122  [key=2, style=dotted];
m4_1106 -> m4_9  [key=2, style=dotted];
m4_1107 -> m4_1108  [key=0, style=solid];
m4_1107 -> m4_1098  [key=2, style=dotted];
m4_1107 -> m4_9  [key=2, style=dotted];
m4_1108 -> m4_1109  [key=0, style=solid];
m4_1108 -> m4_1098  [key=2, style=dotted];
m4_1108 -> m4_9  [key=2, style=dotted];
m4_1109 -> m4_1110  [key=0, style=solid];
m4_1109 -> m4_1098  [key=2, style=dotted];
m4_1109 -> m4_9  [key=2, style=dotted];
m4_1110 -> m4_1111  [key=0, style=solid];
m4_1110 -> m4_1122  [key=2, style=dotted];
m4_1110 -> m4_9  [key=2, style=dotted];
m4_1112 -> m4_1113  [key=0, style=solid];
m4_1112 -> m4_1123  [key=2, style=dotted];
m4_1112 -> m4_220  [key=2, style=dotted];
m4_1114 -> m4_1115  [key=0, style=solid];
m4_1114 -> m4_33  [key=2, style=dotted];
m4_1114 -> m4_220  [key=2, style=dotted];
m4_1115 -> m4_1116  [key=0, style=solid];
m4_1115 -> m4_33  [key=2, style=dotted];
m4_1115 -> m4_220  [key=2, style=dotted];
m4_1116 -> m4_1117  [key=0, style=solid];
m4_1116 -> m4_1123  [key=2, style=dotted];
m4_1116 -> m4_219  [key=2, style=dotted];
m4_1118 -> m4_1119  [key=0, style=solid];
m4_1118 -> m4_1123  [key=2, style=dotted];
m4_1118 -> m4_219  [key=2, style=dotted];
m4_1120 -> m4_1121  [key=0, style=solid];
m4_1120 -> m4_1123  [key=2, style=dotted];
m4_1120 -> m4_220  [key=2, style=dotted];
m4_1111 -> m4_1112  [key=0, style=solid];
m4_1113 -> m4_1114  [key=0, style=solid];
m4_1113 -> m4_9  [key=2, style=dotted];
m4_1117 -> m4_1118  [key=0, style=solid];
m4_1117 -> m4_9  [key=2, style=dotted];
m4_1119 -> m4_1120  [key=0, style=solid];
m4_1119 -> m4_9  [key=2, style=dotted];
m4_1121 -> m4_1099  [key=0, style=bold, color=blue];
m4_858 -> m4_859  [key=0, style=solid];
m4_859 -> m4_860  [key=0, style=solid];
m4_859 -> m4_376  [key=2, style=dotted];
m4_859 -> m4_861  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_860 -> m4_861  [key=0, style=solid];
m4_860 -> m4_376  [key=2, style=dotted];
m4_861 -> m4_862  [key=0, style=solid];
m4_861 -> m4_377  [key=2, style=dotted];
m4_861 -> m4_864  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_861 -> m4_866  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_861 -> m4_869  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_861 -> m4_871  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_861 -> m4_874  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_861 -> m4_875  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_861 -> m4_876  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_861 -> m4_877  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_861 -> m4_880  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_862 -> m4_863  [key=0, style=solid];
m4_862 -> m4_76  [key=3, color=darkorchid, style=bold, label="Local variable System.ComponentModel.ListChangedType? changedType"];
m4_864 -> m4_865  [key=0, style=solid];
m4_864 -> m4_883  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.ListChangedEventArgs"];
m4_864 -> m4_884  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.ListChangedEventArgs"];
m4_866 -> m4_867  [key=0, style=solid];
m4_866 -> m4_7  [key=2, style=dotted];
m4_869 -> m4_870  [key=0, style=solid];
m4_869 -> m4_9  [key=2, style=dotted];
m4_871 -> m4_872  [key=0, style=solid];
m4_874 -> m4_875  [key=0, style=solid];
m4_874 -> m4_9  [key=2, style=dotted];
m4_875 -> m4_876  [key=0, style=solid];
m4_875 -> m4_126  [key=2, style=dotted];
m4_875 -> m4_220  [key=2, style=dotted];
m4_876 -> m4_877  [key=0, style=solid];
m4_876 -> m4_126  [key=2, style=dotted];
m4_876 -> m4_219  [key=2, style=dotted];
m4_877 -> m4_878  [key=0, style=solid];
m4_880 -> m4_881  [key=0, style=solid];
m4_880 -> m4_9  [key=2, style=dotted];
m4_863 -> m4_864  [key=0, style=solid];
m4_863 -> m4_76  [key=3, color=darkorchid, style=bold, label="Local variable int? index"];
m4_865 -> m4_866  [key=0, style=solid];
m4_865 -> m4_376  [key=2, style=dotted];
m4_865 -> m4_869  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_865 -> m4_875  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_867 -> m4_868  [key=0, style=solid];
m4_867 -> m4_9  [key=2, style=dotted];
m4_868 -> m4_869  [key=0, style=solid];
m4_868 -> m4_9  [key=2, style=dotted];
m4_870 -> m4_871  [key=0, style=solid];
m4_870 -> m4_376  [key=2, style=dotted];
m4_870 -> m4_874  [key=1, style=dashed, color=darkseagreen4, label=p4];
m4_870 -> m4_876  [key=1, style=dashed, color=darkseagreen4, label=p4];
m4_872 -> m4_873  [key=0, style=solid];
m4_872 -> m4_9  [key=2, style=dotted];
m4_873 -> m4_874  [key=0, style=solid];
m4_873 -> m4_9  [key=2, style=dotted];
m4_878 -> m4_879  [key=0, style=solid];
m4_878 -> m4_9  [key=2, style=dotted];
m4_879 -> m4_880  [key=0, style=solid];
m4_879 -> m4_9  [key=2, style=dotted];
m4_881 -> m4_858  [key=0, style=bold, color=blue];
m4_1049 -> m4_1050  [key=0, style=solid];
m4_79 -> m4_80  [key=0, style=solid];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_5  [key=2, style=dotted];
m4_80 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_30  [key=2, style=dotted];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_30  [key=2, style=dotted];
m4_83 -> m4_79  [key=0, style=bold, color=blue];
m4_156 -> m4_157  [key=0, style=solid];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_5  [key=2, style=dotted];
m4_158 -> m4_159  [key=0, style=solid];
m4_158 -> m4_152  [key=2, style=dotted];
m4_159 -> m4_156  [key=0, style=bold, color=blue];
m4_163 -> m4_164  [key=0, style=solid];
m4_164 -> m4_165  [key=0, style=solid];
m4_164 -> m4_5  [key=2, style=dotted];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_152  [key=2, style=dotted];
m4_166 -> m4_163  [key=0, style=bold, color=blue];
m4_170 -> m4_171  [key=0, style=solid];
m4_171 -> m4_172  [key=0, style=solid];
m4_171 -> m4_5  [key=2, style=dotted];
m4_172 -> m4_173  [key=0, style=solid];
m4_172 -> m4_152  [key=2, style=dotted];
m4_173 -> m4_170  [key=0, style=bold, color=blue];
m4_177 -> m4_178  [key=0, style=solid];
m4_178 -> m4_179  [key=0, style=solid];
m4_178 -> m4_5  [key=2, style=dotted];
m4_178 -> m4_180  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_178 -> m4_181  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_178 -> m4_182  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_29  [key=2, style=dotted];
m4_179 -> m4_30  [key=2, style=dotted];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_29  [key=2, style=dotted];
m4_180 -> m4_30  [key=2, style=dotted];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_29  [key=2, style=dotted];
m4_181 -> m4_30  [key=2, style=dotted];
m4_182 -> m4_183  [key=0, style=solid];
m4_182 -> m4_152  [key=2, style=dotted];
m4_183 -> m4_177  [key=0, style=bold, color=blue];
m4_236 -> m4_237  [key=0, style=solid];
m4_237 -> m4_238  [key=0, style=solid];
m4_238 -> m4_239  [key=0, style=solid];
m4_238 -> m4_240  [key=2, style=dotted];
m4_239 -> m4_236  [key=0, style=bold, color=blue];
m4_263 -> m4_264  [key=0, style=solid];
m4_264 -> m4_265  [key=0, style=solid];
m4_264 -> m4_240  [key=2, style=dotted];
m4_265 -> m4_263  [key=0, style=bold, color=blue];
m4_420 -> m4_421  [key=0, style=solid];
m4_421 -> m4_422  [key=0, style=solid];
m4_421 -> m4_389  [key=1, style=dashed, color=darkseagreen4, label=changing];
m4_421 -> m4_398  [key=1, style=dashed, color=darkseagreen4, label=changing];
m4_421 -> m4_404  [key=1, style=dashed, color=darkseagreen4, label=changing];
m4_421 -> m4_410  [key=1, style=dashed, color=darkseagreen4, label=changing];
m4_421 -> m4_423  [key=1, style=dashed, color=darkseagreen4, label=changing];
m4_422 -> m4_423  [key=0, style=solid];
m4_422 -> m4_422  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m4_422 -> m4_392  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m4_422 -> m4_395  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m4_422 -> m4_401  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m4_422 -> m4_407  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m4_422 -> m4_413  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m4_422 -> m4_416  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m4_425 -> m4_426  [key=0, style=solid];
m4_426 -> m4_427  [key=0, style=solid];
m4_426 -> m4_390  [key=1, style=dashed, color=darkseagreen4, label=changed];
m4_426 -> m4_399  [key=1, style=dashed, color=darkseagreen4, label=changed];
m4_426 -> m4_405  [key=1, style=dashed, color=darkseagreen4, label=changed];
m4_426 -> m4_411  [key=1, style=dashed, color=darkseagreen4, label=changed];
m4_426 -> m4_428  [key=1, style=dashed, color=darkseagreen4, label=changed];
m4_427 -> m4_428  [key=0, style=solid];
m4_427 -> m4_427  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_427 -> m4_393  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_427 -> m4_396  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_427 -> m4_402  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_427 -> m4_408  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_427 -> m4_414  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_427 -> m4_417  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_419 -> m4_420  [key=0, style=solid];
m4_419 -> m4_421  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.PropertyChangingEventArgs"];
m4_423 -> m4_419  [key=0, style=bold, color=blue];
m4_424 -> m4_425  [key=0, style=solid];
m4_424 -> m4_426  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.PropertyChangedEventArgs"];
m4_428 -> m4_424  [key=0, style=bold, color=blue];
m4_456 -> m4_457  [key=0, style=solid];
m4_457 -> m4_458  [key=0, style=solid];
m4_457 -> m4_435  [key=1, style=dashed, color=darkseagreen4, label=changed];
m4_457 -> m4_441  [key=1, style=dashed, color=darkseagreen4, label=changed];
m4_457 -> m4_445  [key=1, style=dashed, color=darkseagreen4, label=changed];
m4_457 -> m4_449  [key=1, style=dashed, color=darkseagreen4, label=changed];
m4_457 -> m4_459  [key=1, style=dashed, color=darkseagreen4, label=changed];
m4_458 -> m4_459  [key=0, style=solid];
m4_458 -> m4_458  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_458 -> m4_437  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_458 -> m4_439  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_458 -> m4_443  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_458 -> m4_447  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_458 -> m4_451  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_458 -> m4_453  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_455 -> m4_456  [key=0, style=solid];
m4_455 -> m4_457  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.PropertyChangedEventArgs"];
m4_459 -> m4_455  [key=0, style=bold, color=blue];
m4_506 -> m4_507  [key=0, style=solid];
m4_507 -> m4_508  [key=0, style=solid];
m4_507 -> m4_376  [key=2, style=dotted];
m4_507 -> m4_509  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_508 -> m4_509  [key=0, style=solid];
m4_508 -> m4_376  [key=2, style=dotted];
m4_509 -> m4_510  [key=0, style=solid];
m4_509 -> m4_377  [key=2, style=dotted];
m4_510 -> m4_511  [key=0, style=solid];
m4_510 -> m4_304  [key=2, style=dotted];
m4_510 -> m4_502  [key=2, style=dotted];
m4_511 -> m4_506  [key=0, style=bold, color=blue];
m4_515 -> m4_516  [key=0, style=solid];
m4_516 -> m4_517  [key=0, style=solid];
m4_516 -> m4_376  [key=2, style=dotted];
m4_516 -> m4_518  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_517 -> m4_518  [key=0, style=solid];
m4_517 -> m4_376  [key=2, style=dotted];
m4_518 -> m4_519  [key=0, style=solid];
m4_518 -> m4_377  [key=2, style=dotted];
m4_519 -> m4_520  [key=0, style=solid];
m4_519 -> m4_502  [key=2, style=dotted];
m4_520 -> m4_515  [key=0, style=bold, color=blue];
m4_524 -> m4_525  [key=0, style=solid];
m4_525 -> m4_526  [key=0, style=solid];
m4_525 -> m4_376  [key=2, style=dotted];
m4_525 -> m4_527  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_526 -> m4_527  [key=0, style=solid];
m4_526 -> m4_376  [key=2, style=dotted];
m4_527 -> m4_528  [key=0, style=solid];
m4_527 -> m4_377  [key=2, style=dotted];
m4_527 -> m4_529  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_528 -> m4_529  [key=0, style=solid];
m4_528 -> m4_376  [key=2, style=dotted];
m4_529 -> m4_530  [key=0, style=solid];
m4_529 -> m4_502  [key=2, style=dotted];
m4_530 -> m4_524  [key=0, style=bold, color=blue];
m4_591 -> m4_592  [key=0, style=solid];
m4_592 -> m4_593  [key=0, style=solid];
m4_592 -> m4_376  [key=2, style=dotted];
m4_592 -> m4_594  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_593 -> m4_594  [key=0, style=solid];
m4_593 -> m4_376  [key=2, style=dotted];
m4_594 -> m4_595  [key=0, style=solid];
m4_594 -> m4_377  [key=2, style=dotted];
m4_594 -> m4_596  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_594 -> m4_597  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_595 -> m4_596  [key=0, style=solid];
m4_595 -> m4_376  [key=2, style=dotted];
m4_595 -> m4_597  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_596 -> m4_597  [key=0, style=solid];
m4_597 -> m4_598  [key=0, style=solid];
m4_598 -> m4_591  [key=0, style=bold, color=blue];
m4_602 -> m4_603  [key=0, style=solid];
m4_603 -> m4_604  [key=0, style=solid];
m4_603 -> m4_376  [key=2, style=dotted];
m4_603 -> m4_605  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_604 -> m4_605  [key=0, style=solid];
m4_604 -> m4_376  [key=2, style=dotted];
m4_605 -> m4_606  [key=0, style=solid];
m4_605 -> m4_377  [key=2, style=dotted];
m4_606 -> m4_607  [key=0, style=solid];
m4_606 -> m4_608  [key=2, style=dotted];
m4_607 -> m4_602  [key=0, style=bold, color=blue];
m4_663 -> m4_664  [key=0, style=solid];
m4_664 -> m4_665  [key=0, style=solid];
m4_664 -> m4_376  [key=2, style=dotted];
m4_664 -> m4_666  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_665 -> m4_666  [key=0, style=solid];
m4_665 -> m4_376  [key=2, style=dotted];
m4_666 -> m4_667  [key=0, style=solid];
m4_666 -> m4_377  [key=2, style=dotted];
m4_667 -> m4_668  [key=0, style=solid];
m4_667 -> m4_304  [key=2, style=dotted];
m4_667 -> m4_98  [key=2, style=dotted];
m4_668 -> m4_663  [key=0, style=bold, color=blue];
m4_672 -> m4_673  [key=0, style=solid];
m4_673 -> m4_674  [key=0, style=solid];
m4_673 -> m4_376  [key=2, style=dotted];
m4_673 -> m4_675  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_674 -> m4_675  [key=0, style=solid];
m4_674 -> m4_376  [key=2, style=dotted];
m4_675 -> m4_676  [key=0, style=solid];
m4_675 -> m4_377  [key=2, style=dotted];
m4_676 -> m4_677  [key=0, style=solid];
m4_676 -> m4_98  [key=2, style=dotted];
m4_677 -> m4_672  [key=0, style=bold, color=blue];
m4_681 -> m4_682  [key=0, style=solid];
m4_682 -> m4_683  [key=0, style=solid];
m4_682 -> m4_376  [key=2, style=dotted];
m4_682 -> m4_684  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_683 -> m4_684  [key=0, style=solid];
m4_683 -> m4_376  [key=2, style=dotted];
m4_684 -> m4_685  [key=0, style=solid];
m4_684 -> m4_377  [key=2, style=dotted];
m4_684 -> m4_686  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_685 -> m4_686  [key=0, style=solid];
m4_685 -> m4_376  [key=2, style=dotted];
m4_686 -> m4_687  [key=0, style=solid];
m4_686 -> m4_98  [key=2, style=dotted];
m4_687 -> m4_681  [key=0, style=bold, color=blue];
m4_743 -> m4_744  [key=0, style=solid];
m4_744 -> m4_745  [key=0, style=solid];
m4_744 -> m4_376  [key=2, style=dotted];
m4_744 -> m4_746  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_745 -> m4_746  [key=0, style=solid];
m4_745 -> m4_376  [key=2, style=dotted];
m4_746 -> m4_747  [key=0, style=solid];
m4_746 -> m4_377  [key=2, style=dotted];
m4_746 -> m4_748  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_746 -> m4_749  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_747 -> m4_748  [key=0, style=solid];
m4_747 -> m4_376  [key=2, style=dotted];
m4_747 -> m4_749  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_748 -> m4_749  [key=0, style=solid];
m4_749 -> m4_750  [key=0, style=solid];
m4_750 -> m4_743  [key=0, style=bold, color=blue];
m4_791 -> m4_792  [key=0, style=solid];
m4_792 -> m4_793  [key=0, style=solid];
m4_792 -> m4_5  [key=2, style=dotted];
m4_793 -> m4_794  [key=0, style=solid];
m4_793 -> m4_795  [key=2, style=dotted];
m4_794 -> m4_791  [key=0, style=bold, color=blue];
m4_799 -> m4_800  [key=0, style=solid];
m4_800 -> m4_801  [key=0, style=solid];
m4_800 -> m4_5  [key=2, style=dotted];
m4_801 -> m4_802  [key=0, style=solid];
m4_801 -> m4_803  [key=2, style=dotted];
m4_802 -> m4_799  [key=0, style=bold, color=blue];
m4_812 -> m4_813  [key=0, style=solid];
m4_813 -> m4_814  [key=0, style=solid];
m4_813 -> m4_5  [key=2, style=dotted];
m4_814 -> m4_815  [key=0, style=solid];
m4_814 -> m4_816  [key=2, style=dotted];
m4_815 -> m4_812  [key=0, style=bold, color=blue];
m4_824 -> m4_825  [key=0, style=solid];
m4_825 -> m4_826  [key=0, style=solid];
m4_825 -> m4_5  [key=2, style=dotted];
m4_826 -> m4_827  [key=0, style=solid];
m4_826 -> m4_828  [key=2, style=dotted];
m4_827 -> m4_824  [key=0, style=bold, color=blue];
m4_840 -> m4_841  [key=0, style=solid];
m4_840 -> m4_6  [key=2, style=dotted];
m4_839 -> m4_840  [key=0, style=solid];
m4_841 -> m4_839  [key=0, style=bold, color=blue];
m4_883 -> m4_884  [key=0, style=solid];
m4_883 -> m4_867  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m4_883 -> m4_872  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m4_883 -> m4_878  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m4_883 -> m4_885  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m4_884 -> m4_885  [key=0, style=solid];
m4_884 -> m4_868  [key=1, style=dashed, color=darkseagreen4, label=index];
m4_884 -> m4_869  [key=1, style=dashed, color=darkseagreen4, label=index];
m4_884 -> m4_871  [key=1, style=dashed, color=darkseagreen4, label=index];
m4_884 -> m4_873  [key=1, style=dashed, color=darkseagreen4, label=index];
m4_884 -> m4_874  [key=1, style=dashed, color=darkseagreen4, label=index];
m4_884 -> m4_879  [key=1, style=dashed, color=darkseagreen4, label=index];
m4_882 -> m4_883  [key=0, style=solid];
m4_882 -> m4_884  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.ListChangedEventArgs"];
m4_885 -> m4_882  [key=0, style=bold, color=blue];
m4_911 -> m4_912  [key=0, style=solid];
m4_911 -> m4_895  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m4_911 -> m4_900  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m4_911 -> m4_906  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m4_911 -> m4_913  [key=1, style=dashed, color=darkseagreen4, label=changedType];
m4_912 -> m4_913  [key=0, style=solid];
m4_912 -> m4_896  [key=1, style=dashed, color=darkseagreen4, label=index];
m4_912 -> m4_897  [key=1, style=dashed, color=darkseagreen4, label=index];
m4_912 -> m4_899  [key=1, style=dashed, color=darkseagreen4, label=index];
m4_912 -> m4_901  [key=1, style=dashed, color=darkseagreen4, label=index];
m4_912 -> m4_902  [key=1, style=dashed, color=darkseagreen4, label=index];
m4_912 -> m4_907  [key=1, style=dashed, color=darkseagreen4, label=index];
m4_910 -> m4_911  [key=0, style=solid];
m4_910 -> m4_912  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs"];
m4_913 -> m4_910  [key=0, style=bold, color=blue];
m4_923 -> m4_924  [key=0, style=solid];
m4_924 -> m4_925  [key=0, style=solid];
m4_924 -> m4_5  [key=2, style=dotted];
m4_925 -> m4_926  [key=0, style=solid];
m4_925 -> m4_29  [key=2, style=dotted];
m4_926 -> m4_923  [key=0, style=bold, color=blue];
m4_952 -> m4_953  [key=0, style=solid];
m4_953 -> m4_954  [key=0, style=solid];
m4_954 -> m4_955  [key=0, style=solid];
m4_954 -> m4_240  [key=2, style=dotted];
m4_955 -> m4_956  [key=0, style=solid];
m4_956 -> m4_952  [key=0, style=bold, color=blue];
m4_960 -> m4_961  [key=0, style=solid];
m4_961 -> m4_962  [key=0, style=solid];
m4_962 -> m4_963  [key=0, style=solid];
m4_962 -> m4_240  [key=2, style=dotted];
m4_963 -> m4_964  [key=0, style=solid];
m4_963 -> m4_965  [key=2, style=dotted];
m4_964 -> m4_960  [key=0, style=bold, color=blue];
m4_969 -> m4_970  [key=0, style=solid];
m4_970 -> m4_971  [key=0, style=solid];
m4_970 -> m4_240  [key=2, style=dotted];
m4_971 -> m4_969  [key=0, style=bold, color=blue];
m4_991 -> m4_992  [key=0, style=solid];
m4_992 -> m4_993  [key=0, style=solid];
m4_993 -> m4_994  [key=0, style=solid];
m4_993 -> m4_984  [key=2, style=dotted];
m4_993 -> m4_985  [key=2, style=dotted];
m4_993 -> m4_995  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_993 -> m4_996  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_993 -> m4_997  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_993 -> m4_998  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_993 -> m4_999  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_994 -> m4_995  [key=0, style=solid];
m4_994 -> m4_218  [key=2, style=dotted];
m4_995 -> m4_996  [key=0, style=solid];
m4_995 -> m4_218  [key=2, style=dotted];
m4_996 -> m4_997  [key=0, style=solid];
m4_996 -> m4_218  [key=2, style=dotted];
m4_997 -> m4_998  [key=0, style=solid];
m4_997 -> m4_218  [key=2, style=dotted];
m4_998 -> m4_999  [key=0, style=solid];
m4_998 -> m4_218  [key=2, style=dotted];
m4_999 -> m4_1000  [key=0, style=solid];
m4_999 -> m4_986  [key=2, style=dotted];
m4_1000 -> m4_991  [key=0, style=bold, color=blue];
m4_1050 -> m4_1051  [key=0, style=solid];
m4_1051 -> m4_1052  [key=0, style=solid];
m4_1051 -> m4_240  [key=2, style=dotted];
m4_1052 -> m4_1049  [key=0, style=bold, color=blue];
m4_460 -> m4_461  [key=0, style=solid];
m4_461 -> m4_462  [key=0, style=solid];
m4_461 -> m4_376  [key=2, style=dotted];
m4_461 -> m4_463  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_462 -> m4_463  [key=0, style=solid];
m4_462 -> m4_466  [key=2, style=dotted];
m4_462 -> m4_464  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_463 -> m4_464  [key=0, style=solid];
m4_463 -> m4_467  [key=2, style=dotted];
m4_463 -> m4_219  [key=2, style=dotted];
m4_464 -> m4_465  [key=0, style=solid];
m4_464 -> m4_376  [key=2, style=dotted];
m4_464 -> m4_467  [key=2, style=dotted];
m4_464 -> m4_220  [key=2, style=dotted];
m4_465 -> m4_460  [key=0, style=bold, color=blue];
m4_933 -> m4_934  [key=0, style=solid];
m4_934 -> m4_935  [key=0, style=solid];
m4_934 -> m4_934  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_935 -> m4_936  [key=0, style=solid];
m4_935 -> m4_240  [key=2, style=dotted];
m4_936 -> m4_937  [key=0, style=solid];
m4_937 -> m4_938  [key=0, style=solid];
m4_937 -> m4_9  [key=2, style=dotted];
m4_938 -> m4_933  [key=0, style=bold, color=blue];
m4_1091 -> m4_1092  [key=0, style=solid];
m4_1092 -> m4_1093  [key=0, style=solid];
m4_1092 -> m4_240  [key=2, style=dotted];
m4_1092 -> m4_1094  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_1093 -> m4_1094  [key=0, style=solid];
m4_1093 -> m4_1098  [key=2, style=dotted];
m4_1093 -> m4_1095  [key=1, style=dashed, color=darkseagreen4, label=exactMatch];
m4_1094 -> m4_1095  [key=0, style=solid];
m4_1094 -> m4_1098  [key=2, style=dotted];
m4_1094 -> m4_1096  [key=1, style=dashed, color=darkseagreen4, label=ignoreCase];
m4_1095 -> m4_1096  [key=0, style=solid];
m4_1095 -> m4_9  [key=2, style=dotted];
m4_1096 -> m4_1097  [key=0, style=solid];
m4_1096 -> m4_9  [key=2, style=dotted];
m4_1097 -> m4_1091  [key=0, style=bold, color=blue];
m4_715 -> m4_716  [key=0, style=solid];
m4_716 -> m4_717  [key=0, style=solid];
m4_716 -> m4_376  [key=2, style=dotted];
m4_716 -> m4_718  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_716 -> m4_722  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_717 -> m4_718  [key=0, style=solid];
m4_717 -> m4_376  [key=2, style=dotted];
m4_717 -> m4_724  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_718 -> m4_719  [key=0, style=solid];
m4_718 -> m4_377  [key=2, style=dotted];
m4_718 -> m4_720  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_718 -> m4_721  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_718 -> m4_722  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_718 -> m4_723  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_718 -> m4_724  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_722 -> m4_723  [key=0, style=solid];
m4_722 -> m4_9  [key=2, style=dotted];
m4_724 -> m4_725  [key=0, style=solid];
m4_724 -> m4_9  [key=2, style=dotted];
m4_719 -> m4_720  [key=0, style=solid];
m4_719 -> m4_376  [key=2, style=dotted];
m4_719 -> m4_721  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_719 -> m4_723  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_720 -> m4_721  [key=0, style=solid];
m4_720 -> m4_726  [key=2, style=dotted];
m4_721 -> m4_722  [key=0, style=solid];
m4_721 -> m4_9  [key=2, style=dotted];
m4_723 -> m4_724  [key=0, style=solid];
m4_723 -> m4_9  [key=2, style=dotted];
m4_725 -> m4_715  [key=0, style=bold, color=blue];
m4_972 -> m4_973  [key=0, style=solid];
m4_973 -> m4_974  [key=0, style=solid];
m4_973 -> m4_973  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m4_974 -> m4_975  [key=0, style=solid];
m4_974 -> m4_984  [key=2, style=dotted];
m4_974 -> m4_985  [key=2, style=dotted];
m4_974 -> m4_976  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_974 -> m4_977  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_974 -> m4_978  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_974 -> m4_979  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_974 -> m4_980  [key=1, style=dashed, color=darkseagreen4, label=reader];
m4_975 -> m4_976  [key=0, style=solid];
m4_975 -> m4_218  [key=2, style=dotted];
m4_976 -> m4_977  [key=0, style=solid];
m4_976 -> m4_218  [key=2, style=dotted];
m4_977 -> m4_978  [key=0, style=solid];
m4_977 -> m4_218  [key=2, style=dotted];
m4_978 -> m4_979  [key=0, style=solid];
m4_978 -> m4_218  [key=2, style=dotted];
m4_979 -> m4_980  [key=0, style=solid];
m4_979 -> m4_218  [key=2, style=dotted];
m4_980 -> m4_981  [key=0, style=solid];
m4_980 -> m4_986  [key=2, style=dotted];
m4_980 -> m4_982  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_981 -> m4_982  [key=0, style=solid];
m4_981 -> m4_615  [key=2, style=dotted];
m4_982 -> m4_983  [key=0, style=solid];
m4_982 -> m4_987  [key=2, style=dotted];
m4_982 -> m4_9  [key=2, style=dotted];
m4_983 -> m4_972  [key=0, style=bold, color=blue];
m4_809 -> m4_810  [key=0, style=solid];
m4_810 -> m4_811  [key=0, style=solid];
m4_810 -> m4_78  [key=2, style=dotted];
m4_810 -> m4_812  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_811 -> m4_809  [key=0, style=bold, color=blue];
m4_266 -> m4_267  [key=0, style=solid];
m4_267 -> m4_268  [key=0, style=solid];
m4_267 -> m4_5  [key=2, style=dotted];
m4_267 -> m4_269  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_267 -> m4_270  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_268 -> m4_269  [key=0, style=solid];
m4_268 -> m4_193  [key=2, style=dotted];
m4_269 -> m4_270  [key=0, style=solid];
m4_269 -> m4_193  [key=2, style=dotted];
m4_270 -> m4_271  [key=0, style=solid];
m4_270 -> m4_8  [key=2, style=dotted];
m4_271 -> m4_272  [key=0, style=solid];
m4_271 -> m4_9  [key=2, style=dotted];
m4_272 -> m4_266  [key=0, style=bold, color=blue];
m4_1040 -> m4_1041  [key=0, style=solid];
m4_1041 -> m4_1042  [key=0, style=solid];
m4_1041 -> m4_1045  [key=2, style=dotted];
m4_1041 -> m4_1032  [key=2, style=dotted];
m4_1041 -> m4_1043  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_1042 -> m4_1043  [key=0, style=solid];
m4_1042 -> m4_1045  [key=2, style=dotted];
m4_1042 -> m4_9  [key=2, style=dotted];
m4_1043 -> m4_1044  [key=0, style=solid];
m4_1043 -> m4_1033  [key=2, style=dotted];
m4_1043 -> m4_9  [key=2, style=dotted];
m4_1044 -> m4_1040  [key=0, style=bold, color=blue];
m4_92 -> m4_93  [key=0, style=solid];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_5  [key=2, style=dotted];
m4_93 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_93 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_73  [key=2, style=dotted];
m4_94 -> m4_29  [key=2, style=dotted];
m4_94 -> m4_98  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_9  [key=2, style=dotted];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_31  [key=2, style=dotted];
m4_96 -> m4_32  [key=2, style=dotted];
m4_96 -> m4_9  [key=2, style=dotted];
m4_97 -> m4_92  [key=0, style=bold, color=blue];
m4_660 -> m4_661  [key=0, style=solid];
m4_661 -> m4_662  [key=0, style=solid];
m4_661 -> m4_78  [key=2, style=dotted];
m4_661 -> m4_663  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_662 -> m4_660  [key=0, style=bold, color=blue];
m4_52 -> m4_53  [key=0, style=solid];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_5  [key=2, style=dotted];
m4_53 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_53 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_53 -> m4_57  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_53 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_53 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_29  [key=2, style=dotted];
m4_54 -> m4_30  [key=2, style=dotted];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_31  [key=2, style=dotted];
m4_55 -> m4_32  [key=2, style=dotted];
m4_55 -> m4_9  [key=2, style=dotted];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_61  [key=2, style=dotted];
m4_56 -> m4_9  [key=2, style=dotted];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_61  [key=2, style=dotted];
m4_57 -> m4_9  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_61  [key=2, style=dotted];
m4_58 -> m4_9  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_31  [key=2, style=dotted];
m4_59 -> m4_32  [key=2, style=dotted];
m4_59 -> m4_9  [key=2, style=dotted];
m4_60 -> m4_52  [key=0, style=bold, color=blue];
m4_503 -> m4_504  [key=0, style=solid];
m4_504 -> m4_505  [key=0, style=solid];
m4_504 -> m4_78  [key=2, style=dotted];
m4_504 -> m4_506  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_505 -> m4_503  [key=0, style=bold, color=blue];
m4_609 -> m4_610  [key=0, style=solid];
m4_610 -> m4_611  [key=0, style=solid];
m4_610 -> m4_376  [key=2, style=dotted];
m4_610 -> m4_612  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_611 -> m4_612  [key=0, style=solid];
m4_611 -> m4_376  [key=2, style=dotted];
m4_612 -> m4_613  [key=0, style=solid];
m4_612 -> m4_377  [key=2, style=dotted];
m4_613 -> m4_614  [key=0, style=solid];
m4_613 -> m4_615  [key=2, style=dotted];
m4_614 -> m4_609  [key=0, style=bold, color=blue];
m4_475 -> m4_476  [key=0, style=solid];
m4_476 -> m4_477  [key=0, style=solid];
m4_476 -> m4_376  [key=2, style=dotted];
m4_477 -> m4_478  [key=0, style=solid];
m4_477 -> m4_466  [key=2, style=dotted];
m4_477 -> m4_479  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_477 -> m4_480  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_478 -> m4_479  [key=0, style=solid];
m4_478 -> m4_9  [key=2, style=dotted];
m4_479 -> m4_480  [key=0, style=solid];
m4_479 -> m4_482  [key=2, style=dotted];
m4_480 -> m4_481  [key=0, style=solid];
m4_480 -> m4_9  [key=2, style=dotted];
m4_481 -> m4_475  [key=0, style=bold, color=blue];
m4_531 -> m4_532  [key=0, style=solid];
m4_532 -> m4_533  [key=0, style=solid];
m4_532 -> m4_376  [key=2, style=dotted];
m4_532 -> m4_534  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_532 -> m4_538  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_532 -> m4_540  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_533 -> m4_534  [key=0, style=solid];
m4_533 -> m4_376  [key=2, style=dotted];
m4_533 -> m4_541  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_533 -> m4_542  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_533 -> m4_544  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_533 -> m4_545  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_534 -> m4_535  [key=0, style=solid];
m4_534 -> m4_377  [key=2, style=dotted];
m4_534 -> m4_536  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_534 -> m4_537  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_534 -> m4_538  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_534 -> m4_539  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_534 -> m4_540  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_534 -> m4_541  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_534 -> m4_542  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_534 -> m4_543  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_534 -> m4_544  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_538 -> m4_539  [key=0, style=solid];
m4_538 -> m4_547  [key=2, style=dotted];
m4_540 -> m4_541  [key=0, style=solid];
m4_540 -> m4_467  [key=2, style=dotted];
m4_540 -> m4_220  [key=2, style=dotted];
m4_541 -> m4_542  [key=0, style=solid];
m4_541 -> m4_467  [key=2, style=dotted];
m4_541 -> m4_219  [key=2, style=dotted];
m4_542 -> m4_543  [key=0, style=solid];
m4_542 -> m4_547  [key=2, style=dotted];
m4_544 -> m4_545  [key=0, style=solid];
m4_544 -> m4_467  [key=2, style=dotted];
m4_544 -> m4_220  [key=2, style=dotted];
m4_545 -> m4_546  [key=0, style=solid];
m4_545 -> m4_9  [key=2, style=dotted];
m4_535 -> m4_536  [key=0, style=solid];
m4_535 -> m4_376  [key=2, style=dotted];
m4_536 -> m4_537  [key=0, style=solid];
m4_536 -> m4_547  [key=2, style=dotted];
m4_537 -> m4_538  [key=0, style=solid];
m4_537 -> m4_9  [key=2, style=dotted];
m4_539 -> m4_540  [key=0, style=solid];
m4_539 -> m4_9  [key=2, style=dotted];
m4_543 -> m4_544  [key=0, style=solid];
m4_543 -> m4_9  [key=2, style=dotted];
m4_546 -> m4_531  [key=0, style=bold, color=blue];
m4_628 -> m4_629  [key=0, style=solid];
m4_629 -> m4_630  [key=0, style=solid];
m4_629 -> m4_376  [key=2, style=dotted];
m4_629 -> m4_631  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_630 -> m4_631  [key=0, style=solid];
m4_630 -> m4_466  [key=2, style=dotted];
m4_630 -> m4_632  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_631 -> m4_632  [key=0, style=solid];
m4_631 -> m4_634  [key=2, style=dotted];
m4_631 -> m4_9  [key=2, style=dotted];
m4_632 -> m4_633  [key=0, style=solid];
m4_632 -> m4_376  [key=2, style=dotted];
m4_632 -> m4_634  [key=2, style=dotted];
m4_632 -> m4_9  [key=2, style=dotted];
m4_633 -> m4_628  [key=0, style=bold, color=blue];
m4_548 -> m4_549  [key=0, style=solid];
m4_549 -> m4_550  [key=0, style=solid];
m4_549 -> m4_376  [key=2, style=dotted];
m4_549 -> m4_551  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_549 -> m4_553  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_550 -> m4_551  [key=0, style=solid];
m4_550 -> m4_376  [key=2, style=dotted];
m4_550 -> m4_555  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_551 -> m4_552  [key=0, style=solid];
m4_551 -> m4_377  [key=2, style=dotted];
m4_551 -> m4_553  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_551 -> m4_554  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_551 -> m4_555  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_551 -> m4_556  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_553 -> m4_554  [key=0, style=solid];
m4_553 -> m4_547  [key=2, style=dotted];
m4_555 -> m4_556  [key=0, style=solid];
m4_555 -> m4_547  [key=2, style=dotted];
m4_552 -> m4_553  [key=0, style=solid];
m4_552 -> m4_558  [key=2, style=dotted];
m4_554 -> m4_555  [key=0, style=solid];
m4_554 -> m4_9  [key=2, style=dotted];
m4_556 -> m4_557  [key=0, style=solid];
m4_556 -> m4_9  [key=2, style=dotted];
m4_557 -> m4_548  [key=0, style=bold, color=blue];
m4_829 -> m4_830  [key=0, style=solid];
m4_830 -> m4_831  [key=0, style=solid];
m4_830 -> m4_5  [key=2, style=dotted];
m4_830 -> m4_832  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_830 -> m4_837  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_831 -> m4_832  [key=0, style=solid];
m4_831 -> m4_840  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.AddingNewEventArgs"];
m4_832 -> m4_833  [key=0, style=solid];
m4_832 -> m4_830  [key=3, color=darkorchid, style=bold, label="Local variable System.ComponentModel.IBindingList l"];
m4_837 -> m4_838  [key=0, style=solid];
m4_837 -> m4_9  [key=2, style=dotted];
m4_833 -> m4_834  [key=0, style=solid];
m4_833 -> m4_828  [key=2, style=dotted];
m4_833 -> m4_835  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m4_834 -> m4_835  [key=0, style=solid];
m4_834 -> m4_615  [key=2, style=dotted];
m4_835 -> m4_836  [key=0, style=solid];
m4_835 -> m4_837  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_836 -> m4_837  [key=0, style=solid];
m4_836 -> m4_9  [key=2, style=dotted];
m4_838 -> m4_829  [key=0, style=bold, color=blue];
m4_731 -> m4_732  [key=0, style=solid];
m4_732 -> m4_733  [key=0, style=solid];
m4_732 -> m4_376  [key=2, style=dotted];
m4_732 -> m4_734  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_733 -> m4_734  [key=0, style=solid];
m4_733 -> m4_376  [key=2, style=dotted];
m4_733 -> m4_738  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_734 -> m4_735  [key=0, style=solid];
m4_734 -> m4_377  [key=2, style=dotted];
m4_734 -> m4_736  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_734 -> m4_737  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_734 -> m4_738  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_738 -> m4_739  [key=0, style=solid];
m4_738 -> m4_9  [key=2, style=dotted];
m4_735 -> m4_736  [key=0, style=solid];
m4_735 -> m4_376  [key=2, style=dotted];
m4_735 -> m4_737  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_736 -> m4_737  [key=0, style=solid];
m4_737 -> m4_738  [key=0, style=solid];
m4_737 -> m4_9  [key=2, style=dotted];
m4_739 -> m4_731  [key=0, style=bold, color=blue];
m4_740 -> m4_741  [key=0, style=solid];
m4_741 -> m4_742  [key=0, style=solid];
m4_741 -> m4_78  [key=2, style=dotted];
m4_741 -> m4_743  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_742 -> m4_740  [key=0, style=bold, color=blue];
m4_788 -> m4_789  [key=0, style=solid];
m4_789 -> m4_790  [key=0, style=solid];
m4_789 -> m4_78  [key=2, style=dotted];
m4_789 -> m4_791  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_790 -> m4_788  [key=0, style=bold, color=blue];
m4_1026 -> m4_1027  [key=0, style=solid];
m4_1027 -> m4_1028  [key=0, style=solid];
m4_1027 -> m4_1031  [key=2, style=dotted];
m4_1027 -> m4_1032  [key=2, style=dotted];
m4_1027 -> m4_1029  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_1028 -> m4_1029  [key=0, style=solid];
m4_1028 -> m4_1031  [key=2, style=dotted];
m4_1028 -> m4_9  [key=2, style=dotted];
m4_1029 -> m4_1030  [key=0, style=solid];
m4_1029 -> m4_1033  [key=2, style=dotted];
m4_1029 -> m4_9  [key=2, style=dotted];
m4_1030 -> m4_1026  [key=0, style=bold, color=blue];
m4_1053 -> m4_1054  [key=0, style=solid];
m4_1054 -> m4_1055  [key=0, style=solid];
m4_1054 -> m4_377  [key=2, style=dotted];
m4_1054 -> m4_1066  [key=2, style=dotted];
m4_1054 -> m4_376  [key=2, style=dotted];
m4_1054 -> m4_1067  [key=2, style=dotted];
m4_1054 -> m4_1057  [key=1, style=dashed, color=darkseagreen4, label=o1];
m4_1054 -> m4_1059  [key=1, style=dashed, color=darkseagreen4, label=o1];
m4_1054 -> m4_1061  [key=1, style=dashed, color=darkseagreen4, label=o1];
m4_1054 -> m4_1063  [key=1, style=dashed, color=darkseagreen4, label=o1];
m4_1054 -> m4_1064  [key=1, style=dashed, color=darkseagreen4, label=o1];
m4_1055 -> m4_1056  [key=0, style=solid];
m4_1055 -> m4_1068  [key=2, style=dotted];
m4_1055 -> m4_219  [key=2, style=dotted];
m4_1057 -> m4_1058  [key=0, style=solid];
m4_1057 -> m4_1068  [key=2, style=dotted];
m4_1057 -> m4_219  [key=2, style=dotted];
m4_1059 -> m4_1060  [key=0, style=solid];
m4_1059 -> m4_1068  [key=2, style=dotted];
m4_1059 -> m4_220  [key=2, style=dotted];
m4_1061 -> m4_1062  [key=0, style=solid];
m4_1061 -> m4_1068  [key=2, style=dotted];
m4_1061 -> m4_220  [key=2, style=dotted];
m4_1063 -> m4_1064  [key=0, style=solid];
m4_1063 -> m4_1068  [key=2, style=dotted];
m4_1063 -> m4_220  [key=2, style=dotted];
m4_1064 -> m4_1065  [key=0, style=solid];
m4_1064 -> m4_1068  [key=2, style=dotted];
m4_1064 -> m4_220  [key=2, style=dotted];
m4_1056 -> m4_1057  [key=0, style=solid];
m4_1056 -> m4_377  [key=2, style=dotted];
m4_1056 -> m4_1066  [key=2, style=dotted];
m4_1056 -> m4_376  [key=2, style=dotted];
m4_1056 -> m4_1067  [key=2, style=dotted];
m4_1058 -> m4_1059  [key=0, style=solid];
m4_1058 -> m4_377  [key=2, style=dotted];
m4_1058 -> m4_1066  [key=2, style=dotted];
m4_1058 -> m4_376  [key=2, style=dotted];
m4_1058 -> m4_1067  [key=2, style=dotted];
m4_1060 -> m4_1061  [key=0, style=solid];
m4_1060 -> m4_377  [key=2, style=dotted];
m4_1060 -> m4_1066  [key=2, style=dotted];
m4_1060 -> m4_376  [key=2, style=dotted];
m4_1060 -> m4_1067  [key=2, style=dotted];
m4_1062 -> m4_1063  [key=0, style=solid];
m4_1062 -> m4_377  [key=2, style=dotted];
m4_1062 -> m4_1066  [key=2, style=dotted];
m4_1062 -> m4_376  [key=2, style=dotted];
m4_1065 -> m4_1053  [key=0, style=bold, color=blue];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_5  [key=2, style=dotted];
m4_11 -> m4_14  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_14 -> m4_15  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_9  [key=2, style=dotted];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_9  [key=2, style=dotted];
m4_16 -> m4_10  [key=0, style=bold, color=blue];
m4_1144 -> m4_1145  [key=0, style=solid];
m4_1145 -> m4_1146  [key=0, style=solid];
m4_1145 -> m4_1150  [key=2, style=dotted];
m4_1145 -> m4_1147  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_1146 -> m4_1147  [key=0, style=solid];
m4_1146 -> m4_1151  [key=2, style=dotted];
m4_1146 -> m4_1152  [key=2, style=dotted];
m4_1146 -> m4_1153  [key=2, style=dotted];
m4_1146 -> m4_1132  [key=2, style=dotted];
m4_1147 -> m4_1148  [key=0, style=solid];
m4_1147 -> m4_1154  [key=2, style=dotted];
m4_1148 -> m4_1149  [key=0, style=solid];
m4_1148 -> m4_9  [key=2, style=dotted];
m4_1149 -> m4_1144  [key=0, style=bold, color=blue];
m4_305 -> m4_306  [key=0, style=solid];
m4_306 -> m4_307  [key=0, style=solid];
m4_306 -> m4_306  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_307 -> m4_308  [key=0, style=solid];
m4_307 -> m4_240  [key=2, style=dotted];
m4_307 -> m4_309  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_308 -> m4_309  [key=0, style=solid];
m4_308 -> m4_311  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_309 -> m4_310  [key=0, style=solid];
m4_311 -> m4_312  [key=0, style=solid];
m4_311 -> m4_314  [key=2, style=dotted];
m4_310 -> m4_311  [key=0, style=solid];
m4_310 -> m4_312  [key=1, style=dashed, color=darkseagreen4, label=smallest];
m4_312 -> m4_313  [key=0, style=solid];
m4_312 -> m4_314  [key=2, style=dotted];
m4_313 -> m4_305  [key=0, style=bold, color=blue];
m4_579 -> m4_580  [key=0, style=solid];
m4_580 -> m4_581  [key=0, style=solid];
m4_580 -> m4_376  [key=2, style=dotted];
m4_580 -> m4_582  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_581 -> m4_582  [key=0, style=solid];
m4_581 -> m4_376  [key=2, style=dotted];
m4_581 -> m4_586  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_582 -> m4_583  [key=0, style=solid];
m4_582 -> m4_377  [key=2, style=dotted];
m4_582 -> m4_584  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_582 -> m4_585  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_582 -> m4_586  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_586 -> m4_587  [key=0, style=solid];
m4_586 -> m4_9  [key=2, style=dotted];
m4_583 -> m4_584  [key=0, style=solid];
m4_583 -> m4_376  [key=2, style=dotted];
m4_583 -> m4_585  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_584 -> m4_585  [key=0, style=solid];
m4_585 -> m4_586  [key=0, style=solid];
m4_585 -> m4_9  [key=2, style=dotted];
m4_587 -> m4_579  [key=0, style=bold, color=blue];
m4_771 -> m4_772  [key=0, style=solid];
m4_772 -> m4_773  [key=0, style=solid];
m4_772 -> m4_5  [key=2, style=dotted];
m4_773 -> m4_774  [key=0, style=solid];
m4_773 -> m4_9  [key=2, style=dotted];
m4_774 -> m4_771  [key=0, style=bold, color=blue];
m4_622 -> m4_623  [key=0, style=solid];
m4_623 -> m4_624  [key=0, style=solid];
m4_623 -> m4_376  [key=2, style=dotted];
m4_623 -> m4_625  [key=1, style=dashed, color=darkseagreen4, label=p];
m4_624 -> m4_625  [key=0, style=solid];
m4_624 -> m4_466  [key=2, style=dotted];
m4_624 -> m4_626  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_625 -> m4_626  [key=0, style=solid];
m4_625 -> m4_126  [key=2, style=dotted];
m4_625 -> m4_219  [key=2, style=dotted];
m4_626 -> m4_627  [key=0, style=solid];
m4_626 -> m4_376  [key=2, style=dotted];
m4_626 -> m4_126  [key=2, style=dotted];
m4_626 -> m4_220  [key=2, style=dotted];
m4_627 -> m4_622  [key=0, style=bold, color=blue];
m4_110 -> m4_111  [key=0, style=solid];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_29  [key=2, style=dotted];
m4_111 -> m4_113  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_111 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label=v];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_5  [key=2, style=dotted];
m4_112 -> m4_114  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_112 -> m4_115  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_112 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_112 -> m4_119  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_112 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_112 -> m4_123  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_30  [key=2, style=dotted];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_73  [key=2, style=dotted];
m4_117 -> m4_126  [key=2, style=dotted];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_31  [key=2, style=dotted];
m4_114 -> m4_32  [key=2, style=dotted];
m4_114 -> m4_9  [key=2, style=dotted];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_73  [key=2, style=dotted];
m4_115 -> m4_29  [key=2, style=dotted];
m4_115 -> m4_126  [key=2, style=dotted];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_73  [key=2, style=dotted];
m4_119 -> m4_29  [key=2, style=dotted];
m4_119 -> m4_126  [key=2, style=dotted];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_73  [key=2, style=dotted];
m4_121 -> m4_29  [key=2, style=dotted];
m4_121 -> m4_126  [key=2, style=dotted];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_126  [key=2, style=dotted];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_9  [key=2, style=dotted];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_9  [key=2, style=dotted];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_9  [key=2, style=dotted];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_9  [key=2, style=dotted];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_9  [key=2, style=dotted];
m4_125 -> m4_110  [key=0, style=bold, color=blue];
m4_260 -> m4_261  [key=0, style=solid];
m4_261 -> m4_262  [key=0, style=solid];
m4_261 -> m4_78  [key=2, style=dotted];
m4_261 -> m4_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_262 -> m4_260  [key=0, style=bold, color=blue];
m4_336 -> m4_337  [key=0, style=solid];
m4_337 -> m4_338  [key=0, style=solid];
m4_337 -> m4_5  [key=2, style=dotted];
m4_337 -> m4_339  [key=1, style=dashed, color=darkseagreen4, label=moss];
m4_337 -> m4_340  [key=1, style=dashed, color=darkseagreen4, label=moss];
m4_337 -> m4_341  [key=1, style=dashed, color=darkseagreen4, label=moss];
m4_337 -> m4_342  [key=1, style=dashed, color=darkseagreen4, label=moss];
m4_337 -> m4_343  [key=1, style=dashed, color=darkseagreen4, label=moss];
m4_338 -> m4_339  [key=0, style=solid];
m4_338 -> m4_304  [key=2, style=dotted];
m4_339 -> m4_340  [key=0, style=solid];
m4_339 -> m4_304  [key=2, style=dotted];
m4_340 -> m4_341  [key=0, style=solid];
m4_340 -> m4_352  [key=2, style=dotted];
m4_340 -> m4_353  [key=2, style=dotted];
m4_341 -> m4_342  [key=0, style=solid];
m4_341 -> m4_304  [key=2, style=dotted];
m4_342 -> m4_343  [key=0, style=solid];
m4_342 -> m4_304  [key=2, style=dotted];
m4_343 -> m4_344  [key=0, style=solid];
m4_343 -> m4_8  [key=2, style=dotted];
m4_343 -> m4_314  [key=2, style=dotted];
m4_344 -> m4_345  [key=0, style=solid];
m4_344 -> m4_5  [key=2, style=dotted];
m4_344 -> m4_346  [key=1, style=dashed, color=darkseagreen4, label=jen];
m4_344 -> m4_347  [key=1, style=dashed, color=darkseagreen4, label=jen];
m4_344 -> m4_348  [key=1, style=dashed, color=darkseagreen4, label=jen];
m4_344 -> m4_349  [key=1, style=dashed, color=darkseagreen4, label=jen];
m4_344 -> m4_350  [key=1, style=dashed, color=darkseagreen4, label=jen];
m4_345 -> m4_346  [key=0, style=solid];
m4_346 -> m4_347  [key=0, style=solid];
m4_347 -> m4_348  [key=0, style=solid];
m4_347 -> m4_353  [key=2, style=dotted];
m4_348 -> m4_349  [key=0, style=solid];
m4_349 -> m4_350  [key=0, style=solid];
m4_350 -> m4_351  [key=0, style=solid];
m4_350 -> m4_8  [key=2, style=dotted];
m4_350 -> m4_314  [key=2, style=dotted];
m4_351 -> m4_336  [key=0, style=bold, color=blue];
m4_354 -> m4_355  [key=0, style=solid];
m4_355 -> m4_356  [key=0, style=solid];
m4_355 -> m4_376  [key=2, style=dotted];
m4_355 -> m4_357  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_355 -> m4_359  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_355 -> m4_362  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_355 -> m4_363  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_356 -> m4_357  [key=0, style=solid];
m4_356 -> m4_376  [key=2, style=dotted];
m4_356 -> m4_360  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_356 -> m4_366  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_356 -> m4_370  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_356 -> m4_371  [key=1, style=dashed, color=darkseagreen4, label=p2];
m4_357 -> m4_358  [key=0, style=solid];
m4_357 -> m4_377  [key=2, style=dotted];
m4_357 -> m4_368  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_359 -> m4_360  [key=0, style=solid];
m4_359 -> m4_9  [key=2, style=dotted];
m4_362 -> m4_363  [key=0, style=solid];
m4_362 -> m4_378  [key=2, style=dotted];
m4_363 -> m4_364  [key=0, style=solid];
m4_363 -> m4_9  [key=2, style=dotted];
m4_360 -> m4_361  [key=0, style=solid];
m4_360 -> m4_9  [key=2, style=dotted];
m4_366 -> m4_367  [key=0, style=solid];
m4_366 -> m4_9  [key=2, style=dotted];
m4_370 -> m4_371  [key=0, style=solid];
m4_370 -> m4_378  [key=2, style=dotted];
m4_371 -> m4_372  [key=0, style=solid];
m4_371 -> m4_9  [key=2, style=dotted];
m4_358 -> m4_359  [key=0, style=solid];
m4_358 -> m4_360  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_358 -> m4_364  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_358 -> m4_365  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_358 -> m4_366  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_358 -> m4_367  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_358 -> m4_372  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_358 -> m4_373  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_358 -> m4_374  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_358 -> m4_357  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.IList l"];
m4_368 -> m4_369  [key=0, style=solid];
m4_368 -> m4_379  [key=2, style=dotted];
m4_368 -> m4_32  [key=2, style=dotted];
m4_368 -> m4_9  [key=2, style=dotted];
m4_364 -> m4_365  [key=0, style=solid];
m4_364 -> m4_9  [key=2, style=dotted];
m4_365 -> m4_366  [key=0, style=solid];
m4_365 -> m4_9  [key=2, style=dotted];
m4_367 -> m4_368  [key=0, style=solid];
m4_367 -> m4_9  [key=2, style=dotted];
m4_372 -> m4_373  [key=0, style=solid];
m4_372 -> m4_9  [key=2, style=dotted];
m4_373 -> m4_374  [key=0, style=solid];
m4_373 -> m4_9  [key=2, style=dotted];
m4_374 -> m4_375  [key=0, style=solid];
m4_374 -> m4_9  [key=2, style=dotted];
m4_361 -> m4_362  [key=0, style=solid];
m4_361 -> m4_376  [key=2, style=dotted];
m4_361 -> m4_364  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_361 -> m4_365  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_361 -> m4_373  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_369 -> m4_370  [key=0, style=solid];
m4_369 -> m4_376  [key=2, style=dotted];
m4_369 -> m4_372  [key=1, style=dashed, color=darkseagreen4, label=p4];
m4_369 -> m4_374  [key=1, style=dashed, color=darkseagreen4, label=p4];
m4_375 -> m4_354  [key=0, style=bold, color=blue];
m4_651 -> m4_652  [key=0, style=solid];
m4_652 -> m4_653  [key=0, style=solid];
m4_652 -> m4_376  [key=2, style=dotted];
m4_652 -> m4_654  [key=1, style=dashed, color=darkseagreen4, label=p1];
m4_653 -> m4_654  [key=0, style=solid];
m4_653 -> m4_376  [key=2, style=dotted];
m4_654 -> m4_655  [key=0, style=solid];
m4_654 -> m4_377  [key=2, style=dotted];
m4_654 -> m4_656  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_654 -> m4_657  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_654 -> m4_658  [key=1, style=dashed, color=darkseagreen4, label=l];
m4_655 -> m4_656  [key=0, style=solid];
m4_655 -> m4_376  [key=2, style=dotted];
m4_655 -> m4_658  [key=1, style=dashed, color=darkseagreen4, label=p3];
m4_656 -> m4_657  [key=0, style=solid];
m4_656 -> m4_98  [key=2, style=dotted];
m4_657 -> m4_658  [key=0, style=solid];
m4_657 -> m4_9  [key=2, style=dotted];
m4_658 -> m4_659  [key=0, style=solid];
m4_658 -> m4_9  [key=2, style=dotted];
m4_659 -> m4_651  [key=0, style=bold, color=blue];
m4_233 -> m4_234  [key=0, style=solid];
m4_234 -> m4_235  [key=0, style=solid];
m4_234 -> m4_78  [key=2, style=dotted];
m4_234 -> m4_236  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_234 -> m4_234  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_235 -> m4_233  [key=0, style=bold, color=blue];
m4_7 -> m4_7  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m4_1141 -> m4_1142  [key=0, style=solid];
m4_1142 -> m4_1143  [key=0, style=solid];
m4_1143 -> m4_1141  [key=0, style=bold, color=blue];
m4_966 -> m4_967  [key=0, style=solid];
m4_967 -> m4_968  [key=0, style=solid];
m4_967 -> m4_78  [key=2, style=dotted];
m4_967 -> m4_969  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_968 -> m4_966  [key=0, style=bold, color=blue];
m4_821 -> m4_822  [key=0, style=solid];
m4_822 -> m4_823  [key=0, style=solid];
m4_822 -> m4_78  [key=2, style=dotted];
m4_822 -> m4_824  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_823 -> m4_821  [key=0, style=bold, color=blue];
m4_817 -> m4_818  [key=0, style=solid];
m4_818 -> m4_819  [key=0, style=solid];
m4_818 -> m4_5  [key=2, style=dotted];
m4_819 -> m4_820  [key=0, style=solid];
m4_819 -> m4_9  [key=2, style=dotted];
m4_820 -> m4_817  [key=0, style=bold, color=blue];
m4_949 -> m4_950  [key=0, style=solid];
m4_950 -> m4_951  [key=0, style=solid];
m4_950 -> m4_78  [key=2, style=dotted];
m4_950 -> m4_952  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_950 -> m4_950  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_951 -> m4_949  [key=0, style=bold, color=blue];
m4_249 -> m4_250  [key=0, style=solid];
m4_250 -> m4_251  [key=0, style=solid];
m4_250 -> m4_250  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m4_251 -> m4_252  [key=0, style=solid];
m4_251 -> m4_247  [key=2, style=dotted];
m4_252 -> m4_253  [key=0, style=solid];
m4_252 -> m4_259  [key=2, style=dotted];
m4_253 -> m4_254  [key=0, style=solid];
m4_253 -> m4_9  [key=2, style=dotted];
m4_254 -> m4_255  [key=0, style=solid];
m4_255 -> m4_256  [key=0, style=solid];
m4_255 -> m4_247  [key=2, style=dotted];
m4_256 -> m4_257  [key=0, style=solid];
m4_256 -> m4_259  [key=2, style=dotted];
m4_257 -> m4_258  [key=0, style=solid];
m4_257 -> m4_9  [key=2, style=dotted];
m4_258 -> m4_249  [key=0, style=bold, color=blue];
m4_429 -> m4_430  [key=0, style=solid];
m4_430 -> m4_431  [key=0, style=solid];
m4_430 -> m4_76  [key=3, color=darkorchid, style=bold, label="Local variable object changed"];
m4_431 -> m4_432  [key=0, style=solid];
m4_431 -> m4_433  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_431 -> m4_383  [key=3, color=darkorchid, style=bold, label="Local variable int changedCount"];
m4_432 -> m4_433  [key=0, style=solid];
m4_432 -> m4_5  [key=2, style=dotted];
m4_432 -> m4_434  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_432 -> m4_436  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_432 -> m4_438  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_432 -> m4_440  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_432 -> m4_442  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_432 -> m4_444  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_432 -> m4_446  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_432 -> m4_448  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_432 -> m4_450  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_432 -> m4_452  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_433 -> m4_434  [key=0, style=solid];
m4_433 -> m4_433  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_433 -> m4_456  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_433 -> m4_457  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.PropertyChangedEventArgs"];
m4_433 -> m4_458  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_434 -> m4_435  [key=0, style=solid];
m4_436 -> m4_437  [key=0, style=solid];
m4_436 -> m4_9  [key=2, style=dotted];
m4_438 -> m4_439  [key=0, style=solid];
m4_440 -> m4_441  [key=0, style=solid];
m4_442 -> m4_443  [key=0, style=solid];
m4_442 -> m4_9  [key=2, style=dotted];
m4_444 -> m4_445  [key=0, style=solid];
m4_446 -> m4_447  [key=0, style=solid];
m4_446 -> m4_9  [key=2, style=dotted];
m4_448 -> m4_449  [key=0, style=solid];
m4_450 -> m4_451  [key=0, style=solid];
m4_450 -> m4_51  [key=2, style=dotted];
m4_450 -> m4_9  [key=2, style=dotted];
m4_452 -> m4_453  [key=0, style=solid];
m4_435 -> m4_436  [key=0, style=solid];
m4_435 -> m4_9  [key=2, style=dotted];
m4_437 -> m4_438  [key=0, style=solid];
m4_437 -> m4_9  [key=2, style=dotted];
m4_439 -> m4_440  [key=0, style=solid];
m4_439 -> m4_9  [key=2, style=dotted];
m4_441 -> m4_442  [key=0, style=solid];
m4_441 -> m4_9  [key=2, style=dotted];
m4_443 -> m4_444  [key=0, style=solid];
m4_443 -> m4_9  [key=2, style=dotted];
m4_445 -> m4_446  [key=0, style=solid];
m4_445 -> m4_9  [key=2, style=dotted];
m4_447 -> m4_448  [key=0, style=solid];
m4_447 -> m4_9  [key=2, style=dotted];
m4_449 -> m4_450  [key=0, style=solid];
m4_449 -> m4_9  [key=2, style=dotted];
m4_451 -> m4_452  [key=0, style=solid];
m4_451 -> m4_9  [key=2, style=dotted];
m4_453 -> m4_454  [key=0, style=solid];
m4_453 -> m4_9  [key=2, style=dotted];
m4_454 -> m4_429  [key=0, style=bold, color=blue];
m4_1155 -> m4_422  [key=1, style=dashed, color=darkseagreen4, label=changingCount];
m4_1156 -> m4_427  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m4_1157 -> m4_458  [key=1, style=dashed, color=darkseagreen4, label=changedCount];
m5_349 -> m5_352  [key=3, color=darkorchid, style=bold, label="method methodReturn T GetAttribute"];
m5_349 -> m5_350  [key=0, style=solid];
m5_350 -> m5_352  [key=2, style=dotted];
m5_350 -> m5_351  [key=0, style=solid];
m5_351 -> m5_349  [key=0, style=bold, color=blue];
m5_458 -> m5_310  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags bindingAttr"];
m5_458 -> m5_462  [key=0, style=solid];
m5_458 -> m5_463  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.BindingFlags"];
m5_458 -> m5_464  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_458 -> m5_467  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.MemberInfo>"];
m5_458 -> m5_469  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.MemberInfo>"];
m5_458 -> m5_470  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.MemberInfo>"];
m5_458 -> m5_453  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IList<System.Reflection.MemberInfo> initialProperties"];
m5_462 -> m5_471  [key=0, style=solid];
m5_462 -> m5_463  [key=0, style=solid];
m5_463 -> m5_464  [key=0, style=solid];
m5_463 -> m5_446  [key=2, style=dotted];
m5_463 -> m5_465  [key=1, style=dashed, color=darkseagreen4, label=nonPublicBindingAttr];
m5_464 -> m5_471  [key=0, style=solid];
m5_464 -> m5_464  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_464 -> m5_465  [key=0, style=solid];
m5_467 -> m5_468  [key=0, style=solid];
m5_467 -> m5_472  [key=2, style=dotted];
m5_467 -> m5_474  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_467 -> m5_470  [key=1, style=dashed, color=darkseagreen4, label=index];
m5_469 -> m5_465  [key=0, style=solid];
m5_469 -> m5_473  [key=2, style=dotted];
m5_470 -> m5_465  [key=0, style=solid];
m5_465 -> m5_464  [key=0, style=solid];
m5_465 -> m5_457  [key=2, style=dotted];
m5_465 -> m5_466  [key=0, style=solid];
m5_466 -> m5_467  [key=0, style=solid];
m5_466 -> m5_469  [key=1, style=dashed, color=darkseagreen4, label=nonPublicProperty];
m5_466 -> m5_470  [key=1, style=dashed, color=darkseagreen4, label=nonPublicProperty];
m5_466 -> m5_465  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.PropertyInfo nonPublicProperty"];
m5_466 -> m5_475  [key=1, style=dashed, color=darkseagreen4, label=nonPublicProperty];
m5_468 -> m5_469  [key=0, style=solid];
m5_468 -> m5_470  [key=0, style=solid];
m5_471 -> m5_458  [key=0, style=bold, color=blue];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_159  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_154 -> m5_168  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_154 -> m5_157  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_154 -> m5_164  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_154 -> m5_170  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type dictionaryType"];
m5_154 -> m5_176  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type dictionaryType"];
m5_154 -> m5_171  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type keyType"];
m5_154 -> m5_177  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type keyType"];
m5_154 -> m5_172  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type valueType"];
m5_154 -> m5_178  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type valueType"];
m5_155 -> m5_12  [key=2, style=dotted];
m5_155 -> m5_156  [key=0, style=solid];
m5_159 -> m5_61  [key=2, style=dotted];
m5_159 -> m5_169  [key=0, style=solid];
m5_159 -> m5_151  [key=2, style=dotted];
m5_168 -> m5_61  [key=2, style=dotted];
m5_168 -> m5_169  [key=0, style=solid];
m5_168 -> m5_151  [key=2, style=dotted];
m5_156 -> m5_157  [key=0, style=solid];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_160  [key=0, style=solid];
m5_164 -> m5_168  [key=0, style=solid];
m5_164 -> m5_165  [key=0, style=solid];
m5_164 -> m5_153  [key=2, style=dotted];
m5_157 -> m5_73  [key=2, style=dotted];
m5_157 -> m5_158  [key=0, style=solid];
m5_157 -> m5_164  [key=0, style=solid];
m5_157 -> m5_160  [key=1, style=dashed, color=darkseagreen4, label=genericDictionaryType];
m5_160 -> m5_161  [key=0, style=solid];
m5_160 -> m5_152  [key=2, style=dotted];
m5_160 -> m5_162  [key=1, style=dashed, color=darkseagreen4, label=dictionaryGenericArguments];
m5_161 -> m5_169  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m5_161 -> m5_162  [key=0, style=solid];
m5_162 -> m5_169  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m5_162 -> m5_163  [key=0, style=solid];
m5_163 -> m5_169  [key=0, style=solid];
m5_165 -> m5_169  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m5_165 -> m5_166  [key=0, style=solid];
m5_166 -> m5_169  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m5_166 -> m5_167  [key=0, style=solid];
m5_167 -> m5_169  [key=0, style=solid];
m5_169 -> m5_154  [key=0, style=bold, color=blue];
m5_251 -> m5_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanReadMemberValue"];
m5_251 -> m5_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanReadMemberValue"];
m5_251 -> m5_252  [key=0, style=solid];
m5_251 -> m5_254  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_251 -> m5_255  [key=1, style=dashed, color=darkseagreen4, label=bool];
m5_251 -> m5_261  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_251 -> m5_264  [key=1, style=dashed, color=darkseagreen4, label=bool];
m5_251 -> m5_266  [key=1, style=dashed, color=darkseagreen4, label=bool];
m5_252 -> m5_253  [key=0, style=solid];
m5_252 -> m5_260  [key=0, style=solid];
m5_252 -> m5_267  [key=0, style=solid];
m5_254 -> m5_255  [key=0, style=solid];
m5_254 -> m5_257  [key=1, style=dashed, color=darkseagreen4, label=fieldInfo];
m5_255 -> m5_256  [key=0, style=solid];
m5_255 -> m5_257  [key=0, style=solid];
m5_261 -> m5_262  [key=0, style=solid];
m5_261 -> m5_266  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m5_264 -> m5_265  [key=0, style=solid];
m5_264 -> m5_266  [key=0, style=solid];
m5_266 -> m5_268  [key=0, style=solid];
m5_266 -> m5_269  [key=2, style=dotted];
m5_267 -> m5_268  [key=0, style=solid];
m5_256 -> m5_268  [key=0, style=solid];
m5_258 -> m5_268  [key=0, style=solid];
m5_259 -> m5_268  [key=0, style=solid];
m5_263 -> m5_268  [key=0, style=solid];
m5_265 -> m5_268  [key=0, style=solid];
m5_253 -> m5_254  [key=0, style=solid];
m5_260 -> m5_261  [key=0, style=solid];
m5_257 -> m5_258  [key=0, style=solid];
m5_257 -> m5_259  [key=0, style=solid];
m5_262 -> m5_264  [key=0, style=solid];
m5_262 -> m5_263  [key=0, style=solid];
m5_268 -> m5_251  [key=0, style=bold, color=blue];
m5_379 -> m5_382  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateGeneric"];
m5_379 -> m5_380  [key=0, style=solid];
m5_379 -> m5_376  [key=3, color=darkorchid, style=bold, label="Parameter variable object[] args"];
m5_380 -> m5_382  [key=2, style=dotted];
m5_380 -> m5_381  [key=0, style=solid];
m5_380 -> m5_383  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_381 -> m5_379  [key=0, style=bold, color=blue];
m5_69 -> m5_73  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ImplementsGenericDefinition"];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_71 -> m5_73  [key=2, style=dotted];
m5_71 -> m5_72  [key=0, style=solid];
m5_70 -> m5_71  [key=0, style=solid];
m5_72 -> m5_69  [key=0, style=bold, color=blue];
m5_395 -> m5_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsCompatibleValue"];
m5_395 -> m5_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsCompatibleValue"];
m5_395 -> m5_32  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsCompatibleValue"];
m5_395 -> m5_396  [key=0, style=solid];
m5_395 -> m5_397  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_395 -> m5_398  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_397 -> m5_32  [key=2, style=dotted];
m5_397 -> m5_401  [key=0, style=solid];
m5_396 -> m5_397  [key=0, style=solid];
m5_396 -> m5_398  [key=0, style=solid];
m5_398 -> m5_3  [key=2, style=dotted];
m5_398 -> m5_399  [key=0, style=solid];
m5_398 -> m5_400  [key=0, style=solid];
m5_398 -> m5_153  [key=2, style=dotted];
m5_399 -> m5_401  [key=0, style=solid];
m5_400 -> m5_401  [key=0, style=solid];
m5_401 -> m5_395  [key=0, style=bold, color=blue];
m5_12 -> m5_32  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m5_137 -> m5_138  [key=0, style=solid];
m5_137 -> m5_144  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_137 -> m5_148  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_137 -> m5_140  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_137 -> m5_141  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_137 -> m5_142  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_137 -> m5_146  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_137 -> m5_55  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Type GetCollectionItemType"];
m5_138 -> m5_12  [key=2, style=dotted];
m5_138 -> m5_139  [key=0, style=solid];
m5_144 -> m5_61  [key=2, style=dotted];
m5_144 -> m5_149  [key=0, style=solid];
m5_144 -> m5_151  [key=2, style=dotted];
m5_148 -> m5_61  [key=2, style=dotted];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_151  [key=2, style=dotted];
m5_139 -> m5_140  [key=0, style=solid];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> m5_145  [key=0, style=solid];
m5_146 -> m5_148  [key=0, style=solid];
m5_146 -> m5_147  [key=0, style=solid];
m5_146 -> m5_153  [key=2, style=dotted];
m5_142 -> m5_73  [key=2, style=dotted];
m5_142 -> m5_143  [key=0, style=solid];
m5_142 -> m5_146  [key=0, style=solid];
m5_142 -> m5_145  [key=1, style=dashed, color=darkseagreen4, label=genericListType];
m5_140 -> m5_142  [key=0, style=solid];
m5_140 -> m5_141  [key=0, style=solid];
m5_141 -> m5_149  [key=0, style=solid];
m5_141 -> m5_150  [key=2, style=dotted];
m5_145 -> m5_149  [key=0, style=solid];
m5_145 -> m5_152  [key=2, style=dotted];
m5_147 -> m5_149  [key=0, style=solid];
m5_149 -> m5_137  [key=0, style=bold, color=blue];
m5_16 -> m5_7  [key=3, color=darkorchid, style=bold, label="Parameter variable bool nonPublic"];
m5_16 -> m5_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasDefaultConstructor"];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_16 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_16 -> m5_13  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m5_17 -> m5_12  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_20  [key=0, style=solid];
m5_20 -> m5_22  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_19 -> m5_21  [key=0, style=solid];
m5_21 -> m5_16  [key=0, style=bold, color=blue];
m5_294 -> m5_295  [key=0, style=solid, color=green];
m5_294 -> m5_296  [key=1, style=dashed, color=green, label="System.Type"];
m5_294 -> m5_297  [key=1, style=dashed, color=green, label="System.Type"];
m5_294 -> m5_291  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags bindingAttr"];
m5_294 -> m5_303  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.BindingFlags"];
m5_294 -> m5_327  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.BindingFlags"];
m5_294 -> m5_298  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.List<System.Reflection.MemberInfo> GetFieldsAndProperties"];
m5_295 -> m5_296  [key=0, style=solid, color=green];
m5_295 -> m5_307  [key=2, style=dotted, color=green];
m5_295 -> m5_297  [key=1, style=dashed, color=green, label=targetMembers];
m5_295 -> m5_298  [key=1, style=dashed, color=green, label=targetMembers];
m5_295 -> m5_299  [key=1, style=dashed, color=green, label=targetMembers];
m5_296 -> m5_297  [key=0, style=solid, color=green];
m5_296 -> m5_308  [key=2, style=dotted, color=green];
m5_296 -> m5_309  [key=2, style=dotted, color=green];
m5_297 -> m5_298  [key=0, style=solid, color=green];
m5_297 -> m5_310  [key=2, style=dotted, color=green];
m5_297 -> m5_309  [key=2, style=dotted, color=green];
m5_298 -> m5_299  [key=0, style=solid];
m5_298 -> m5_311  [key=2, style=dotted];
m5_298 -> m5_302  [key=1, style=dashed, color=darkseagreen4, label=distinctMembers];
m5_298 -> m5_304  [key=1, style=dashed, color=darkseagreen4, label=distinctMembers];
m5_298 -> m5_305  [key=1, style=dashed, color=darkseagreen4, label=distinctMembers];
m5_299 -> m5_300  [key=0, style=solid];
m5_299 -> m5_312  [key=2, style=dotted];
m5_299 -> m5_313  [key=2, style=dotted];
m5_299 -> m5_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_299 -> m5_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_303 -> m5_304  [key=0, style=solid];
m5_303 -> m5_316  [key=2, style=dotted];
m5_303 -> m5_326  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_302 -> m5_300  [key=0, style=solid];
m5_302 -> m5_314  [key=2, style=dotted];
m5_302 -> m5_315  [key=2, style=dotted];
m5_304 -> m5_300  [key=0, style=solid];
m5_304 -> m5_317  [key=2, style=dotted];
m5_305 -> m5_306  [key=0, style=solid];
m5_300 -> m5_303  [key=1, style=dashed, color=darkseagreen4, label=groupedMember];
m5_300 -> m5_302  [key=1, style=dashed, color=darkseagreen4, label=groupedMember];
m5_300 -> m5_305  [key=0, style=solid];
m5_300 -> m5_301  [key=0, style=solid];
m5_301 -> m5_303  [key=0, style=solid];
m5_301 -> m5_302  [key=0, style=solid];
m5_301 -> m5_304  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JsonPath.QueryOperator ParseOperator"];
m5_301 -> m5_305  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JsonPath.QueryOperator ParseOperator"];
m5_306 -> m5_294  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_40  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_39 -> m5_12  [key=2, style=dotted];
m5_39 -> m5_40  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_42  [key=2, style=dotted];
m5_41 -> m5_38  [key=0, style=bold, color=blue];
m5_110 -> m5_95  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AssignableToTypeName"];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_112  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_111 -> m5_112  [key=0, style=solid];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_114  [key=2, style=dotted];
m5_113 -> m5_110  [key=0, style=bold, color=blue];
m5_182 -> m5_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ItemsUnitializedValue"];
m5_182 -> m5_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ItemsUnitializedValue"];
m5_182 -> m5_183  [key=0, style=solid];
m5_182 -> m5_184  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<T>"];
m5_182 -> m5_188  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<T>"];
m5_182 -> m5_189  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<T>"];
m5_182 -> m5_194  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<T>"];
m5_182 -> m5_195  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<T>"];
m5_183 -> m5_12  [key=2, style=dotted];
m5_183 -> m5_184  [key=0, style=solid];
m5_199 -> m5_61  [key=2, style=dotted];
m5_199 -> m5_101  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.JsonPath.CompositeExpression parentExpression"];
m5_199 -> m5_201  [key=0, style=solid];
m5_199 -> m5_151  [key=2, style=dotted];
m5_184 -> m5_199  [key=1, style=dashed, color=darkseagreen4, label=elementType];
m5_184 -> m5_137  [key=2, style=dotted];
m5_184 -> m5_185  [key=0, style=solid];
m5_184 -> m5_3  [key=2, style=dotted];
m5_184 -> m5_186  [key=1, style=dashed, color=darkseagreen4, label=elementType];
m5_184 -> m5_192  [key=1, style=dashed, color=darkseagreen4, label=elementType];
m5_192 -> m5_199  [key=0, style=solid];
m5_192 -> m5_193  [key=0, style=solid];
m5_188 -> m5_188  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_188 -> m5_189  [key=0, style=solid];
m5_188 -> m5_200  [key=0, style=solid];
m5_189 -> m5_190  [key=0, style=solid];
m5_189 -> m5_191  [key=0, style=solid];
m5_189 -> m5_50  [key=2, style=dotted];
m5_194 -> m5_188  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_194 -> m5_195  [key=0, style=solid];
m5_194 -> m5_200  [key=0, style=solid];
m5_195 -> m5_196  [key=0, style=solid];
m5_186 -> m5_49  [key=2, style=dotted];
m5_186 -> m5_189  [key=1, style=dashed, color=darkseagreen4, label=unitializedValue];
m5_186 -> m5_187  [key=0, style=solid];
m5_185 -> m5_192  [key=0, style=solid];
m5_185 -> m5_186  [key=0, style=solid];
m5_193 -> m5_194  [key=0, style=solid];
m5_193 -> m5_195  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_193 -> m5_198  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_200 -> m5_201  [key=0, style=solid];
m5_190 -> m5_201  [key=0, style=solid];
m5_197 -> m5_201  [key=0, style=solid];
m5_187 -> m5_188  [key=0, style=solid];
m5_187 -> m5_189  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_187 -> m5_191  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_191 -> m5_188  [key=0, style=solid];
m5_191 -> m5_191  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_198 -> m5_194  [key=0, style=solid];
m5_198 -> m5_198  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_196 -> m5_197  [key=0, style=solid];
m5_196 -> m5_198  [key=0, style=solid];
m5_201 -> m5_182  [key=0, style=bold, color=blue];
m5_330 -> m5_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsOverridenGenericMember"];
m5_330 -> m5_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsOverridenGenericMember"];
m5_330 -> m5_339  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_330 -> m5_331  [key=0, style=solid];
m5_330 -> m5_333  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_343 -> m5_344  [key=0, style=solid, color=green];
m5_343 -> m5_345  [key=0, style=solid, color=green];
m5_342 -> m5_343  [key=0, style=solid, color=green];
m5_342 -> m5_202  [key=2, style=dotted];
m5_344 -> m5_346  [key=0, style=solid];
m5_345 -> m5_346  [key=0, style=solid, color=green];
m5_339 -> m5_342  [key=1, style=dashed, color=darkseagreen4, label=members];
m5_339 -> m5_340  [key=0, style=solid];
m5_339 -> m5_348  [key=2, style=dotted];
m5_340 -> m5_342  [key=0, style=solid];
m5_340 -> m5_341  [key=0, style=solid];
m5_332 -> m5_346  [key=0, style=solid];
m5_332 -> m5_347  [key=2, style=dotted];
m5_335 -> m5_346  [key=0, style=solid];
m5_338 -> m5_346  [key=0, style=solid];
m5_341 -> m5_346  [key=0, style=solid];
m5_336 -> m5_339  [key=1, style=dashed, color=darkseagreen4, label=genericTypeDefinition];
m5_336 -> m5_337  [key=0, style=solid];
m5_336 -> m5_42  [key=2, style=dotted];
m5_337 -> m5_339  [key=0, style=solid];
m5_337 -> m5_338  [key=0, style=solid];
m5_337 -> m5_1  [key=3, color=darkorchid, style=bold, label="Local variable int start"];
m5_331 -> m5_332  [key=0, style=solid];
m5_331 -> m5_333  [key=0, style=solid];
m5_334 -> m5_335  [key=0, style=solid];
m5_334 -> m5_336  [key=0, style=solid];
m5_333 -> m5_336  [key=1, style=dashed, color=darkseagreen4, label=declaringType];
m5_333 -> m5_334  [key=0, style=solid];
m5_346 -> m5_330  [key=0, style=bold, color=blue];
m5_270 -> m5_273  [key=1, style=dashed, color=green, label="System.Reflection.MemberInfo"];
m5_270 -> m5_276  [key=1, style=dashed, color=green, label=bool];
m5_270 -> m5_282  [key=1, style=dashed, color=green, label="System.Reflection.MemberInfo"];
m5_270 -> m5_285  [key=1, style=dashed, color=green, label=bool];
m5_270 -> m5_287  [key=1, style=dashed, color=green, label=bool];
m5_270 -> m5_271  [key=0, style=solid];
m5_270 -> m5_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanSetMemberValue"];
m5_270 -> m5_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanSetMemberValue"];
m5_273 -> m5_274  [key=0, style=solid, color=green];
m5_273 -> m5_278  [key=1, style=dashed, color=green, label=fieldInfo];
m5_272 -> m5_273  [key=0, style=solid, color=green];
m5_274 -> m5_276  [key=0, style=solid, color=green];
m5_274 -> m5_275  [key=0, style=solid, color=green];
m5_278 -> m5_279  [key=0, style=solid, color=green];
m5_278 -> m5_280  [key=0, style=solid, color=green];
m5_276 -> m5_277  [key=0, style=solid, color=green];
m5_276 -> m5_278  [key=0, style=solid, color=green];
m5_277 -> m5_289  [key=0, style=solid, color=green];
m5_282 -> m5_283  [key=0, style=solid, color=green];
m5_282 -> m5_287  [key=1, style=dashed, color=green, label=propertyInfo];
m5_281 -> m5_282  [key=0, style=solid, color=green];
m5_283 -> m5_285  [key=0, style=solid, color=green];
m5_283 -> m5_284  [key=0, style=solid, color=green];
m5_287 -> m5_289  [key=0, style=solid, color=green];
m5_287 -> m5_290  [key=2, style=dotted, color=green];
m5_285 -> m5_286  [key=0, style=solid, color=green];
m5_285 -> m5_287  [key=0, style=solid, color=green];
m5_286 -> m5_289  [key=0, style=solid, color=green];
m5_271 -> m5_272  [key=0, style=solid, color=green];
m5_271 -> m5_281  [key=0, style=solid, color=green];
m5_271 -> m5_288  [key=0, style=solid, color=green];
m5_288 -> m5_289  [key=0, style=solid, color=green];
m5_275 -> m5_289  [key=0, style=solid, color=green];
m5_279 -> m5_289  [key=0, style=solid, color=green];
m5_280 -> m5_289  [key=0, style=solid, color=green];
m5_284 -> m5_289  [key=0, style=solid, color=green];
m5_289 -> m5_270  [key=0, style=bold, color=blue];
m5_406 -> m5_407  [key=0, style=solid];
m5_406 -> m5_406  [key=3, color=darkorchid, style=bold, label="Parameter variable string typeName"];
m5_406 -> m5_409  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_406 -> m5_410  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_406 -> m5_411  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_407 -> m5_414  [key=2, style=dotted];
m5_407 -> m5_408  [key=0, style=solid];
m5_407 -> m5_409  [key=1, style=dashed, color=darkseagreen4, label=assemblyDelimiterIndex];
m5_407 -> m5_410  [key=1, style=dashed, color=darkseagreen4, label=assemblyDelimiterIndex];
m5_408 -> m5_409  [key=0, style=solid];
m5_408 -> m5_411  [key=0, style=solid];
m5_409 -> m5_410  [key=0, style=solid];
m5_409 -> m5_415  [key=2, style=dotted];
m5_409 -> m5_416  [key=2, style=dotted];
m5_409 -> m5_413  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m5_410 -> m5_413  [key=0, style=solid];
m5_410 -> m5_415  [key=2, style=dotted];
m5_410 -> m5_416  [key=2, style=dotted];
m5_411 -> m5_413  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m5_411 -> m5_412  [key=0, style=solid];
m5_412 -> m5_413  [key=0, style=solid];
m5_413 -> m5_406  [key=0, style=bold, color=blue];
m5_220 -> m5_221  [key=0, style=solid];
m5_220 -> m5_215  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.PropertyInfo property"];
m5_220 -> m5_222  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m5_221 -> m5_12  [key=2, style=dotted];
m5_221 -> m5_222  [key=0, style=solid];
m5_222 -> m5_223  [key=0, style=solid];
m5_222 -> m5_67  [key=2, style=dotted];
m5_223 -> m5_220  [key=0, style=bold, color=blue];
m5_382 -> m5_388  [key=0, style=solid];
m5_382 -> m5_390  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Type, System.Collections.Generic.IList<object>, object>"];
m5_382 -> m5_391  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_382 -> m5_389  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Type>"];
m5_382 -> m5_392  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Type, System.Collections.Generic.IList<object>, object>"];
m5_382 -> m5_379  [key=3, color=darkorchid, style=bold, label="Parameter variable object[] args"];
m5_382 -> m5_380  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<System.Type, System.Collections.Generic.IList<object>, object> instanceCreator"];
m5_388 -> m5_12  [key=2, style=dotted];
m5_388 -> m5_389  [key=0, style=solid];
m5_390 -> m5_12  [key=2, style=dotted];
m5_390 -> m5_391  [key=0, style=solid];
m5_391 -> m5_367  [key=2, style=dotted];
m5_391 -> m5_392  [key=0, style=solid];
m5_391 -> m5_386  [key=2, style=dotted];
m5_389 -> m5_373  [key=2, style=dotted];
m5_389 -> m5_390  [key=0, style=solid];
m5_392 -> m5_393  [key=0, style=solid];
m5_392 -> m5_394  [key=2, style=dotted];
m5_393 -> m5_382  [key=0, style=bold, color=blue];
m5_352 -> m5_353  [key=0, style=solid, color=green];
m5_352 -> m5_349  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.ICustomAttributeProvider attributeProvider"];
m5_352 -> m5_10  [key=3, color=darkorchid, style=bold, label="Parameter variable bool inherit"];
m5_353 -> m5_354  [key=0, style=solid, color=green];
m5_353 -> m5_356  [key=2, style=dotted, color=green];
m5_354 -> m5_355  [key=0, style=solid];
m5_354 -> m5_357  [key=2, style=dotted];
m5_355 -> m5_352  [key=0, style=bold, color=blue];
m5_414 -> m5_55  [key=3, color=darkorchid, style=bold, label="method methodReturn int? GetAssemblyDelimiterIndex"];
m5_414 -> m5_417  [key=0, style=solid];
m5_414 -> m5_419  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_414 -> m5_420  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_414 -> m5_406  [key=3, color=darkorchid, style=bold, label="Parameter variable string fullyQualifiedTypeName"];
m5_417 -> m5_188  [key=3, color=darkorchid, style=bold, label="Local variable int scope"];
m5_417 -> m5_418  [key=0, style=solid];
m5_417 -> m5_423  [key=1, style=dashed, color=darkseagreen4, label=scope];
m5_419 -> m5_188  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_419 -> m5_420  [key=0, style=solid];
m5_419 -> m5_430  [key=0, style=solid];
m5_418 -> m5_419  [key=0, style=solid];
m5_418 -> m5_420  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_418 -> m5_428  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_418 -> m5_429  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_423 -> m5_423  [key=1, style=dashed, color=darkseagreen4, label=scope];
m5_423 -> m5_429  [key=0, style=solid];
m5_423 -> m5_425  [key=1, style=dashed, color=darkseagreen4, label=scope];
m5_429 -> m5_419  [key=0, style=solid];
m5_429 -> m5_429  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_420 -> m5_421  [key=0, style=solid];
m5_430 -> m5_431  [key=0, style=solid];
m5_428 -> m5_431  [key=0, style=solid];
m5_422 -> m5_423  [key=0, style=solid];
m5_425 -> m5_429  [key=0, style=solid];
m5_425 -> m5_425  [key=1, style=dashed, color=darkseagreen4, label=scope];
m5_425 -> m5_427  [key=1, style=dashed, color=darkseagreen4, label=scope];
m5_427 -> m5_429  [key=0, style=solid];
m5_427 -> m5_428  [key=0, style=solid];
m5_421 -> m5_422  [key=0, style=solid];
m5_421 -> m5_424  [key=0, style=solid];
m5_421 -> m5_426  [key=0, style=solid];
m5_424 -> m5_425  [key=0, style=solid];
m5_426 -> m5_427  [key=0, style=solid];
m5_431 -> m5_414  [key=0, style=bold, color=blue];
m5_22 -> m5_7  [key=3, color=darkorchid, style=bold, label="Parameter variable bool nonPublic"];
m5_22 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_22 -> m5_16  [key=3, color=darkorchid, style=bold, label="Parameter variable bool nonPublic"];
m5_22 -> m5_26  [key=0, style=solid];
m5_22 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label=bool];
m5_22 -> m5_23  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m5_29 -> m5_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter> filters"];
m5_29 -> m5_203  [key=3, color=darkorchid, style=bold, label="Parameter variable bool query"];
m5_29 -> m5_10  [key=3, color=darkorchid, style=bold, label="Parameter variable int currentPartStartIndex"];
m5_29 -> m5_202  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter> filters"];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_31  [key=2, style=dotted];
m5_29 -> m5_1  [key=3, color=darkorchid, style=bold, label="Parameter variable int currentPartStartIndex"];
m5_29 -> m5_76  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParsePath"];
m5_26 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=accessModifier];
m5_26 -> m5_26  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.BindingFlags accessModifier"];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=accessModifier];
m5_27 -> m5_29  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=accessModifier];
m5_30 -> m5_22  [key=0, style=bold, color=blue];
m5_213 -> m5_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsIndexedProperty"];
m5_213 -> m5_214  [key=0, style=solid];
m5_213 -> m5_215  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_213 -> m5_220  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsIndexedProperty"];
m5_214 -> m5_12  [key=2, style=dotted];
m5_214 -> m5_215  [key=0, style=solid];
m5_215 -> m5_216  [key=0, style=solid];
m5_215 -> m5_217  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m5_216 -> m5_217  [key=0, style=solid];
m5_216 -> m5_218  [key=0, style=solid];
m5_217 -> m5_220  [key=2, style=dotted];
m5_217 -> m5_219  [key=0, style=solid];
m5_218 -> m5_219  [key=0, style=solid];
m5_219 -> m5_213  [key=0, style=bold, color=blue];
m5_43 -> m5_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsUnitializedValue"];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_43 -> m5_47  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_46  [key=0, style=solid];
m5_46 -> m5_49  [key=2, style=dotted];
m5_46 -> m5_3  [key=2, style=dotted];
m5_46 -> m5_47  [key=0, style=solid];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_50  [key=2, style=dotted];
m5_45 -> m5_48  [key=0, style=solid];
m5_48 -> m5_43  [key=0, style=bold, color=blue];
m5_291 -> m5_292  [key=0, style=solid, color=green];
m5_291 -> m5_294  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.List<System.Reflection.MemberInfo> GetFieldsAndProperties"];
m5_292 -> m5_293  [key=0, style=solid, color=green];
m5_292 -> m5_294  [key=2, style=dotted, color=green];
m5_293 -> m5_291  [key=0, style=bold, color=blue];
m5_308 -> m5_294  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags bindingAttr"];
m5_308 -> m5_432  [key=0, style=solid];
m5_308 -> m5_433  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_308 -> m5_434  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_432 -> m5_12  [key=2, style=dotted];
m5_432 -> m5_433  [key=0, style=solid];
m5_433 -> m5_434  [key=0, style=solid];
m5_433 -> m5_437  [key=2, style=dotted];
m5_433 -> m5_438  [key=2, style=dotted];
m5_433 -> m5_435  [key=1, style=dashed, color=darkseagreen4, label=fieldInfos];
m5_434 -> m5_439  [key=2, style=dotted];
m5_434 -> m5_435  [key=0, style=solid];
m5_435 -> m5_436  [key=0, style=solid];
m5_435 -> m5_325  [key=2, style=dotted];
m5_436 -> m5_308  [key=0, style=bold, color=blue];
m5_23 -> m5_22  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.ConstructorInfo GetDefaultConstructor"];
m5_23 -> m5_24  [key=0, style=solid];
m5_24 -> m5_22  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid];
m5_25 -> m5_23  [key=0, style=bold, color=blue];
m5_356 -> m5_358  [key=0, style=solid, color=green];
m5_356 -> m5_359  [key=1, style=dashed, color=green, label="System.Reflection.ICustomAttributeProvider"];
m5_356 -> m5_352  [key=3, color=darkorchid, style=bold, label="Parameter variable bool inherit"];
m5_358 -> m5_359  [key=0, style=solid, color=green];
m5_358 -> m5_12  [key=2, style=dotted, color=green];
m5_359 -> m5_360  [key=0, style=solid, color=green];
m5_359 -> m5_361  [key=2, style=dotted, color=green];
m5_360 -> m5_356  [key=0, style=bold, color=blue];
m5_446 -> m5_26  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags flag"];
m5_13 -> m5_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m5_13 -> m5_16  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasDefaultConstructor"];
m5_13 -> m5_14  [key=0, style=solid];
m5_14 -> m5_16  [key=2, style=dotted];
m5_14 -> m5_15  [key=0, style=solid];
m5_15 -> m5_13  [key=0, style=bold, color=blue];
m5_376 -> m5_379  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateGeneric"];
m5_376 -> m5_377  [key=0, style=solid];
m5_377 -> m5_379  [key=2, style=dotted];
m5_377 -> m5_378  [key=0, style=solid];
m5_378 -> m5_376  [key=0, style=bold, color=blue];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m5_64 -> m5_12  [key=2, style=dotted];
m5_64 -> m5_65  [key=0, style=solid];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_67  [key=2, style=dotted];
m5_65 -> m5_68  [key=2, style=dotted];
m5_66 -> m5_63  [key=0, style=bold, color=blue];
m5_126 -> m5_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool InheritsGenericDefinitionInternal"];
m5_126 -> m5_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool InheritsGenericDefinitionInternal"];
m5_126 -> m5_126  [key=3, color=darkorchid, style=bold, label="method methodReturn bool InheritsGenericDefinitionInternal"];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_128  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_126 -> m5_129  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_126 -> m5_130  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_126 -> m5_132  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_126 -> m5_135  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_126 -> m5_119  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m5_135 -> m5_126  [key=2, style=dotted];
m5_135 -> m5_136  [key=0, style=solid];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_132  [key=0, style=solid];
m5_128 -> m5_129  [key=0, style=solid];
m5_128 -> m5_42  [key=2, style=dotted];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> m5_132  [key=0, style=solid];
m5_130 -> m5_131  [key=0, style=solid];
m5_132 -> m5_135  [key=0, style=solid];
m5_132 -> m5_133  [key=0, style=solid];
m5_131 -> m5_136  [key=0, style=solid];
m5_134 -> m5_136  [key=0, style=solid];
m5_133 -> m5_134  [key=0, style=solid];
m5_136 -> m5_126  [key=0, style=bold, color=blue];
m5_119 -> m5_120  [key=0, style=solid];
m5_119 -> m5_121  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_119 -> m5_123  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_119 -> m5_126  [key=3, color=darkorchid, style=bold, label="method methodReturn bool InheritsGenericDefinition"];
m5_119 -> m5_122  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_119 -> m5_124  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_119 -> m5_115  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type genericClassDefinition"];
m5_119 -> m5_116  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m5_120 -> m5_12  [key=2, style=dotted];
m5_120 -> m5_121  [key=0, style=solid];
m5_121 -> m5_12  [key=2, style=dotted];
m5_121 -> m5_122  [key=0, style=solid];
m5_123 -> m5_61  [key=2, style=dotted];
m5_123 -> m5_125  [key=0, style=solid];
m5_123 -> m5_93  [key=2, style=dotted];
m5_122 -> m5_123  [key=0, style=solid];
m5_122 -> m5_124  [key=0, style=solid];
m5_124 -> m5_126  [key=2, style=dotted];
m5_124 -> m5_125  [key=0, style=solid];
m5_125 -> m5_119  [key=0, style=bold, color=blue];
m5_32 -> m5_12  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsNullable"];
m5_32 -> m5_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsNullable"];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_32 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_32 -> m5_395  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m5_33 -> m5_12  [key=2, style=dotted];
m5_33 -> m5_34  [key=0, style=solid];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_36  [key=0, style=solid];
m5_35 -> m5_37  [key=0, style=solid];
m5_35 -> m5_38  [key=2, style=dotted];
m5_36 -> m5_37  [key=0, style=solid];
m5_37 -> m5_32  [key=0, style=bold, color=blue];
m5_387 -> m5_402  [key=0, style=solid];
m5_387 -> m5_403  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_387 -> m5_380  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m5_402 -> m5_12  [key=2, style=dotted];
m5_402 -> m5_403  [key=0, style=solid];
m5_403 -> m5_404  [key=0, style=solid];
m5_403 -> m5_405  [key=2, style=dotted];
m5_404 -> m5_387  [key=0, style=bold, color=blue];
m5_73 -> m5_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ImplementsGenericDefinition"];
m5_73 -> m5_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ImplementsGenericDefinition"];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_75  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_73 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_73 -> m5_73  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m5_73 -> m5_76  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_73 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_73 -> m5_79  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_73 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_73 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_73 -> m5_82  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_73 -> m5_84  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_73 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_73 -> m5_69  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type genericInterfaceDefinition"];
m5_73 -> m5_137  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m5_73 -> m5_154  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m5_73 -> m5_70  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m5_73 -> m5_139  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m5_73 -> m5_156  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type implementingType"];
m5_74 -> m5_12  [key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_75 -> m5_12  [key=2, style=dotted];
m5_75 -> m5_76  [key=0, style=solid];
m5_77 -> m5_61  [key=2, style=dotted];
m5_77 -> m5_92  [key=0, style=solid];
m5_77 -> m5_93  [key=2, style=dotted];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_78  [key=0, style=solid];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_84  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_84  [key=0, style=solid];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_42  [key=2, style=dotted];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_84  [key=0, style=solid];
m5_82 -> m5_83  [key=0, style=solid];
m5_84 -> m5_94  [key=2, style=dotted];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_90  [key=0, style=solid];
m5_84 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_84 -> m5_88  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_87 -> m5_84  [key=0, style=solid];
m5_87 -> m5_88  [key=0, style=solid];
m5_83 -> m5_92  [key=0, style=solid];
m5_90 -> m5_92  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m5_90 -> m5_91  [key=0, style=solid];
m5_89 -> m5_92  [key=0, style=solid];
m5_91 -> m5_92  [key=0, style=solid];
m5_85 -> m5_84  [key=0, style=solid];
m5_85 -> m5_86  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_42  [key=2, style=dotted];
m5_88 -> m5_89  [key=0, style=solid];
m5_92 -> m5_73  [key=0, style=bold, color=blue];
m5_449 -> m5_450  [key=0, style=solid];
m5_327 -> m5_328  [key=0, style=solid];
m5_327 -> m5_329  [key=2, style=dotted];
m5_318 -> m5_319  [key=0, style=solid];
m5_321 -> m5_322  [key=0, style=solid];
m5_326 -> m5_327  [key=0, style=solid];
m5_328 -> m5_326  [key=0, style=bold, color=blue];
m5_320 -> m5_318  [key=0, style=bold, color=blue];
m5_319 -> m5_320  [key=0, style=solid];
m5_323 -> m5_321  [key=0, style=bold, color=blue];
m5_322 -> m5_323  [key=0, style=solid];
m5_322 -> m5_324  [key=2, style=dotted];
m5_322 -> m5_325  [key=2, style=dotted];
m5_474 -> m5_475  [key=0, style=solid];
m5_384 -> m5_387  [key=2, style=dotted];
m5_384 -> m5_386  [key=2, style=dotted];
m5_384 -> m5_385  [key=0, style=solid];
m5_383 -> m5_384  [key=0, style=solid];
m5_475 -> m5_476  [key=0, style=solid];
m5_476 -> m5_474  [key=0, style=bold, color=blue];
m5_385 -> m5_383  [key=0, style=bold, color=blue];
m5_450 -> m5_451  [key=0, style=solid];
m5_451 -> m5_449  [key=0, style=bold, color=blue];
m5_224 -> m5_225  [key=0, style=solid];
m5_224 -> m5_226  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_224 -> m5_233  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_224 -> m5_234  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_224 -> m5_227  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_224 -> m5_229  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_224 -> m5_231  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_225 -> m5_12  [key=2, style=dotted];
m5_225 -> m5_226  [key=0, style=solid];
m5_226 -> m5_12  [key=2, style=dotted];
m5_226 -> m5_227  [key=0, style=solid];
m5_233 -> m5_61  [key=2, style=dotted];
m5_233 -> m5_235  [key=0, style=solid];
m5_233 -> m5_238  [key=2, style=dotted];
m5_234 -> m5_61  [key=2, style=dotted];
m5_234 -> m5_60  [key=2, style=dotted];
m5_234 -> m5_235  [key=0, style=solid];
m5_227 -> m5_234  [key=0, style=solid];
m5_227 -> m5_228  [key=0, style=solid];
m5_227 -> m5_230  [key=0, style=solid];
m5_232 -> m5_233  [key=0, style=solid];
m5_229 -> m5_235  [key=0, style=solid];
m5_229 -> m5_236  [key=2, style=dotted];
m5_231 -> m5_235  [key=0, style=solid];
m5_231 -> m5_237  [key=2, style=dotted];
m5_228 -> m5_229  [key=0, style=solid];
m5_230 -> m5_231  [key=0, style=solid];
m5_235 -> m5_224  [key=0, style=bold, color=blue];
m5_115 -> m5_119  [key=3, color=darkorchid, style=bold, label="method methodReturn bool InheritsGenericDefinition"];
m5_115 -> m5_116  [key=0, style=solid];
m5_115 -> m5_117  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_117 -> m5_119  [key=2, style=dotted];
m5_117 -> m5_118  [key=0, style=solid];
m5_116 -> m5_117  [key=0, style=solid];
m5_118 -> m5_115  [key=0, style=bold, color=blue];
m5_439 -> m5_308  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags bindingAttr"];
m5_439 -> m5_440  [key=0, style=solid];
m5_439 -> m5_441  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.BindingFlags"];
m5_439 -> m5_442  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_439 -> m5_444  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<System.Reflection.MemberInfo>"];
m5_439 -> m5_433  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IList<System.Reflection.MemberInfo> initialFields"];
m5_440 -> m5_445  [key=0, style=solid];
m5_440 -> m5_441  [key=0, style=solid];
m5_441 -> m5_442  [key=0, style=solid];
m5_441 -> m5_446  [key=2, style=dotted];
m5_441 -> m5_443  [key=1, style=dashed, color=darkseagreen4, label=nonPublicBindingAttr];
m5_442 -> m5_445  [key=0, style=solid];
m5_442 -> m5_442  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_442 -> m5_443  [key=0, style=solid];
m5_444 -> m5_442  [key=0, style=solid];
m5_444 -> m5_448  [key=2, style=dotted];
m5_443 -> m5_316  [key=2, style=dotted];
m5_443 -> m5_444  [key=0, style=solid];
m5_443 -> m5_438  [key=2, style=dotted];
m5_443 -> m5_447  [key=2, style=dotted];
m5_443 -> m5_449  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_445 -> m5_439  [key=0, style=bold, color=blue];
m5_176 -> m5_179  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_176 -> m5_177  [key=0, style=solid];
m5_179 -> m5_154  [key=2, style=dotted];
m5_179 -> m5_180  [key=0, style=solid];
m5_177 -> m5_178  [key=0, style=solid];
m5_178 -> m5_179  [key=0, style=solid];
m5_180 -> m5_181  [key=0, style=solid];
m5_181 -> m5_176  [key=0, style=bold, color=blue];
m5_95 -> m5_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AssignableToTypeName"];
m5_95 -> m5_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AssignableToTypeName"];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_98  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_95 -> m5_102  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_95 -> m5_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_95 -> m5_95  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type match"];
m5_95 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_95 -> m5_111  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type match"];
m5_95 -> m5_110  [key=3, color=darkorchid, style=bold, label="Parameter variable string fullTypeName"];
m5_101 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label=current];
m5_101 -> m5_97  [key=0, style=solid];
m5_101 -> m5_1  [key=3, color=darkorchid, style=bold, label="Local variable int? end"];
m5_96 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label=current];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_98  [key=1, style=dashed, color=darkseagreen4, label=current];
m5_96 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label=current];
m5_96 -> m5_95  [key=3, color=darkorchid, style=bold, label="Local variable System.Type current"];
m5_98 -> m5_101  [key=0, style=solid];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_109  [key=2, style=dotted];
m5_102 -> m5_101  [key=3, color=darkorchid, style=bold, label="Local variable int? startIndex"];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_106  [key=0, style=solid];
m5_102 -> m5_94  [key=2, style=dotted];
m5_102 -> m5_156  [key=3, color=darkorchid, style=bold, label="Local variable int? startIndex"];
m5_103 -> m5_101  [key=3, color=darkorchid, style=bold, label="Local variable int? step"];
m5_103 -> m5_102  [key=0, style=solid];
m5_103 -> m5_104  [key=0, style=solid];
m5_103 -> m5_109  [key=2, style=dotted];
m5_103 -> m5_156  [key=3, color=darkorchid, style=bold, label="Local variable int? step"];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_102  [key=0, style=solid];
m5_99 -> m5_100  [key=0, style=solid];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_108  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m5_104 -> m5_105  [key=0, style=solid];
m5_100 -> m5_108  [key=0, style=solid];
m5_107 -> m5_108  [key=0, style=solid];
m5_105 -> m5_108  [key=0, style=solid];
m5_108 -> m5_95  [key=0, style=bold, color=blue];
m5_239 -> m5_242  [key=1, style=dashed, color=green, label="System.Reflection.MemberInfo"];
m5_239 -> m5_240  [key=0, style=solid];
m5_239 -> m5_241  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_239 -> m5_244  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_239 -> m5_246  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_239 -> m5_247  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_239 -> m5_270  [key=3, color=darkorchid, style=bold, label="method methodReturn object ParseValue"];
m5_239 -> m5_203  [key=3, color=darkorchid, style=bold, label="method methodReturn object ParseValue"];
m5_239 -> m5_101  [key=3, color=darkorchid, style=bold, label="method methodReturn object ParseValue"];
m5_242 -> m5_243  [key=0, style=solid, color=green];
m5_242 -> m5_245  [key=0, style=solid, color=green];
m5_242 -> m5_247  [key=0, style=solid, color=green];
m5_241 -> m5_242  [key=0, style=solid, color=green];
m5_241 -> m5_12  [key=2, style=dotted];
m5_243 -> m5_244  [key=0, style=solid];
m5_245 -> m5_246  [key=0, style=solid];
m5_247 -> m5_248  [key=0, style=solid];
m5_247 -> m5_60  [key=2, style=dotted];
m5_247 -> m5_61  [key=2, style=dotted];
m5_240 -> m5_241  [key=0, style=solid];
m5_240 -> m5_12  [key=2, style=dotted];
m5_244 -> m5_248  [key=0, style=solid];
m5_244 -> m5_249  [key=2, style=dotted];
m5_246 -> m5_248  [key=0, style=solid];
m5_246 -> m5_250  [key=2, style=dotted];
m5_248 -> m5_239  [key=0, style=bold, color=blue];
m5_170 -> m5_173  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_170 -> m5_171  [key=0, style=solid];
m5_170 -> m5_172  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Type GetDictionaryValueType"];
m5_173 -> m5_154  [key=2, style=dotted];
m5_173 -> m5_174  [key=0, style=solid];
m5_171 -> m5_172  [key=0, style=solid];
m5_172 -> m5_173  [key=0, style=solid];
m5_174 -> m5_175  [key=0, style=solid];
m5_175 -> m5_170  [key=0, style=bold, color=blue];
m5_367 -> m5_369  [key=1, style=dashed, color=green, label="params System.Type[]"];
m5_367 -> m5_370  [key=1, style=dashed, color=green, label="System.Type"];
m5_367 -> m5_371  [key=1, style=dashed, color=green, label="System.Type"];
m5_367 -> m5_368  [key=0, style=solid];
m5_367 -> m5_382  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type genericTypeDefinition"];
m5_369 -> m5_370  [key=0, style=solid, color=green];
m5_369 -> m5_373  [key=2, style=dotted, color=green];
m5_369 -> m5_0  [key=3, color=green, style=bold, label="Parameter variable System.Collections.Generic.List<Newtonsoft.Json.Linq.JsonPath.PathFilter> filters"];
m5_368 -> m5_369  [key=0, style=solid, color=green];
m5_368 -> m5_12  [key=2, style=dotted];
m5_370 -> m5_371  [key=0, style=solid, color=green];
m5_370 -> m5_61  [key=2, style=dotted, color=green];
m5_370 -> m5_374  [key=2, style=dotted, color=green];
m5_371 -> m5_372  [key=0, style=solid, color=green];
m5_371 -> m5_375  [key=2, style=dotted, color=green];
m5_372 -> m5_367  [key=0, style=bold, color=blue];
m5_310 -> m5_294  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.BindingFlags bindingAttr"];
m5_310 -> m5_452  [key=0, style=solid];
m5_310 -> m5_453  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_310 -> m5_454  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_452 -> m5_12  [key=2, style=dotted];
m5_452 -> m5_453  [key=0, style=solid];
m5_453 -> m5_454  [key=0, style=solid];
m5_453 -> m5_437  [key=2, style=dotted];
m5_453 -> m5_457  [key=2, style=dotted];
m5_453 -> m5_455  [key=1, style=dashed, color=darkseagreen4, label=propertyInfos];
m5_454 -> m5_458  [key=2, style=dotted];
m5_454 -> m5_455  [key=0, style=solid];
m5_455 -> m5_456  [key=0, style=solid];
m5_455 -> m5_325  [key=2, style=dotted];
m5_456 -> m5_310  [key=0, style=bold, color=blue];
m5_202 -> m5_208  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_202 -> m5_203  [key=0, style=solid];
m5_202 -> m5_204  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_202 -> m5_206  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_202 -> m5_210  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m5_208 -> m5_239  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m5_208 -> m5_212  [key=0, style=solid];
m5_208 -> m5_101  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m5_203 -> m5_12  [key=2, style=dotted];
m5_203 -> m5_204  [key=0, style=solid];
m5_207 -> m5_208  [key=0, style=solid];
m5_207 -> m5_301  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.JsonPath.QueryOperator op"];
m5_204 -> m5_207  [key=0, style=solid];
m5_204 -> m5_205  [key=0, style=solid];
m5_204 -> m5_209  [key=0, style=solid];
m5_204 -> m5_211  [key=0, style=solid];
m5_211 -> m5_60  [key=2, style=dotted];
m5_211 -> m5_212  [key=0, style=solid];
m5_206 -> m5_212  [key=0, style=solid];
m5_210 -> m5_212  [key=0, style=solid];
m5_205 -> m5_206  [key=0, style=solid];
m5_209 -> m5_210  [key=0, style=solid];
m5_212 -> m5_202  [key=0, style=bold, color=blue];
m5_362 -> m5_363  [key=0, style=solid, color=green];
m5_362 -> m5_364  [key=1, style=dashed, color=green, label="System.Type"];
m5_363 -> m5_364  [key=0, style=solid, color=green];
m5_363 -> m5_12  [key=2, style=dotted, color=green];
m5_364 -> m5_365  [key=0, style=solid, color=green];
m5_364 -> m5_366  [key=2, style=dotted, color=green];
m5_365 -> m5_362  [key=0, style=bold, color=blue];
m5_49 -> m5_51  [key=0, style=solid];
m5_49 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_49 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_49 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_49 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_49 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_49 -> m5_57  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_49 -> m5_55  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateUnitializedValue"];
m5_49 -> m5_184  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m5_51 -> m5_12  [key=2, style=dotted];
m5_51 -> m5_52  [key=0, style=solid];
m5_53 -> m5_61  [key=2, style=dotted];
m5_53 -> m5_60  [key=2, style=dotted];
m5_53 -> m5_59  [key=0, style=solid];
m5_58 -> m5_61  [key=2, style=dotted];
m5_58 -> m5_60  [key=2, style=dotted];
m5_58 -> m5_59  [key=0, style=solid];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_54  [key=0, style=solid];
m5_56 -> m5_58  [key=0, style=solid];
m5_56 -> m5_57  [key=0, style=solid];
m5_54 -> m5_56  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_57 -> m5_59  [key=0, style=solid];
m5_57 -> m5_62  [key=2, style=dotted];
m5_55 -> m5_59  [key=0, style=solid];
m5_59 -> m5_49  [key=0, style=bold, color=blue];
m5_4 -> m5_7  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsInstantiatableType"];
m5_4 -> m5_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsInstantiatableType"];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_4 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_7 -> m5_11  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_1  [key=3, color=darkorchid, style=bold, label="Local variable int currentPartStartIndex"];
m5_5 -> m5_12  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_8  [key=0, style=solid];
m5_8 -> m5_10  [key=0, style=solid];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_13  [key=2, style=dotted];
m5_9 -> m5_11  [key=0, style=solid];
m5_11 -> m5_4  [key=0, style=bold, color=blue];
m5_477 -> m5_327  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.BindingFlags"];
m5_478 -> m5_475  [key=1, style=dashed, color=darkseagreen4, label=nonPublicProperty];
m7_271 -> m7_272  [key=0, style=solid];
m7_272 -> m7_273  [key=0, style=solid];
m7_272 -> m7_276  [key=2, style=dotted];
m7_272 -> m7_277  [key=2, style=dotted];
m7_273 -> m7_274  [key=0, style=solid];
m7_273 -> m7_72  [key=2, style=dotted];
m7_273 -> m7_278  [key=2, style=dotted];
m7_273 -> m7_279  [key=2, style=dotted];
m7_274 -> m7_275  [key=0, style=solid];
m7_274 -> m7_280  [key=2, style=dotted];
m7_275 -> m7_271  [key=0, style=bold, color=blue];
m7_169 -> m7_170  [key=0, style=solid];
m7_170 -> m7_171  [key=0, style=solid];
m7_170 -> m7_163  [key=2, style=dotted];
m7_170 -> m7_72  [key=2, style=dotted];
m7_170 -> m7_164  [key=2, style=dotted];
m7_170 -> m7_165  [key=2, style=dotted];
m7_170 -> m7_172  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_171 -> m7_172  [key=0, style=solid];
m7_171 -> m7_45  [key=2, style=dotted];
m7_172 -> m7_173  [key=0, style=solid];
m7_172 -> m7_166  [key=2, style=dotted];
m7_172 -> m7_167  [key=2, style=dotted];
m7_172 -> m7_174  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_172 -> m7_175  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_173 -> m7_174  [key=0, style=solid];
m7_173 -> m7_168  [key=2, style=dotted];
m7_174 -> m7_175  [key=0, style=solid];
m7_174 -> m7_168  [key=2, style=dotted];
m7_175 -> m7_176  [key=0, style=solid];
m7_175 -> m7_45  [key=2, style=dotted];
m7_176 -> m7_169  [key=0, style=bold, color=blue];
m7_222 -> m7_223  [key=0, style=solid];
m7_223 -> m7_224  [key=0, style=solid];
m7_223 -> m7_54  [key=2, style=dotted];
m7_224 -> m7_225  [key=0, style=solid];
m7_224 -> m7_55  [key=2, style=dotted];
m7_225 -> m7_226  [key=0, style=solid];
m7_225 -> m7_227  [key=2, style=dotted];
m7_225 -> m7_69  [key=2, style=dotted];
m7_225 -> m7_228  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_226 -> m7_222  [key=0, style=bold, color=blue];
m7_3 -> m7_4  [key=0, style=solid];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_8  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_9  [key=2, style=dotted];
m7_5 -> m7_10  [key=2, style=dotted];
m7_5 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label=properties];
m7_5 -> m7_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_3  [key=0, style=bold, color=blue];
m7_289 -> m7_290  [key=0, style=solid];
m7_290 -> m7_291  [key=0, style=solid];
m7_290 -> m7_298  [key=2, style=dotted];
m7_290 -> m7_292  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m7_290 -> m7_295  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m7_291 -> m7_292  [key=0, style=solid];
m7_291 -> m7_54  [key=2, style=dotted];
m7_292 -> m7_293  [key=0, style=solid];
m7_292 -> m7_72  [key=2, style=dotted];
m7_292 -> m7_279  [key=2, style=dotted];
m7_295 -> m7_296  [key=0, style=solid];
m7_295 -> m7_72  [key=2, style=dotted];
m7_295 -> m7_279  [key=2, style=dotted];
m7_293 -> m7_294  [key=0, style=solid];
m7_293 -> m7_280  [key=2, style=dotted];
m7_294 -> m7_295  [key=0, style=solid];
m7_294 -> m7_54  [key=2, style=dotted];
m7_296 -> m7_297  [key=0, style=solid];
m7_296 -> m7_280  [key=2, style=dotted];
m7_297 -> m7_289  [key=0, style=bold, color=blue];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_23  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_23  [key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_25  [key=2, style=dotted];
m7_22 -> m7_23  [key=0, style=solid];
m7_24 -> m7_20  [key=0, style=bold, color=blue];
m7_16 -> m7_17  [key=0, style=solid];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_19  [key=2, style=dotted];
m7_18 -> m7_16  [key=0, style=bold, color=blue];
m7_81 -> m7_82  [key=0, style=solid];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_54  [key=2, style=dotted];
m7_82 -> m7_87  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m7_82 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m7_82 -> m7_89  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_55  [key=2, style=dotted];
m7_83 -> m7_85  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_83 -> m7_86  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_83 -> m7_88  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_71  [key=2, style=dotted];
m7_87 -> m7_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_72  [key=2, style=dotted];
m7_89 -> m7_73  [key=2, style=dotted];
m7_89 -> m7_91  [key=1, style=dashed, color=darkseagreen4, label=l];
m7_89 -> m7_92  [key=1, style=dashed, color=darkseagreen4, label=l];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_69  [key=2, style=dotted];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_70  [key=2, style=dotted];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_69  [key=2, style=dotted];
m7_88 -> m7_89  [key=0, style=solid];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_45  [key=2, style=dotted];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_45  [key=2, style=dotted];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_45  [key=2, style=dotted];
m7_93 -> m7_81  [key=0, style=bold, color=blue];
m7_119 -> m7_120  [key=0, style=solid];
m7_120 -> m7_121  [key=0, style=solid];
m7_120 -> m7_54  [key=2, style=dotted];
m7_120 -> m7_125  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m7_121 -> m7_122  [key=0, style=solid];
m7_121 -> m7_55  [key=2, style=dotted];
m7_121 -> m7_123  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_121 -> m7_124  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_125 -> m7_126  [key=0, style=solid];
m7_125 -> m7_72  [key=2, style=dotted];
m7_125 -> m7_73  [key=2, style=dotted];
m7_125 -> m7_127  [key=1, style=dashed, color=darkseagreen4, label=d];
m7_125 -> m7_128  [key=1, style=dashed, color=darkseagreen4, label=d];
m7_125 -> m7_129  [key=1, style=dashed, color=darkseagreen4, label=d];
m7_122 -> m7_123  [key=0, style=solid];
m7_122 -> m7_56  [key=2, style=dotted];
m7_123 -> m7_124  [key=0, style=solid];
m7_123 -> m7_57  [key=2, style=dotted];
m7_124 -> m7_125  [key=0, style=solid];
m7_126 -> m7_127  [key=0, style=solid];
m7_126 -> m7_114  [key=2, style=dotted];
m7_126 -> m7_45  [key=2, style=dotted];
m7_127 -> m7_128  [key=0, style=solid];
m7_127 -> m7_45  [key=2, style=dotted];
m7_128 -> m7_129  [key=0, style=solid];
m7_128 -> m7_45  [key=2, style=dotted];
m7_129 -> m7_130  [key=0, style=solid];
m7_129 -> m7_45  [key=2, style=dotted];
m7_130 -> m7_119  [key=0, style=bold, color=blue];
m7_101 -> m7_102  [key=0, style=solid];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_54  [key=2, style=dotted];
m7_102 -> m7_107  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_55  [key=2, style=dotted];
m7_103 -> m7_105  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_103 -> m7_106  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_72  [key=2, style=dotted];
m7_107 -> m7_73  [key=2, style=dotted];
m7_107 -> m7_109  [key=1, style=dashed, color=darkseagreen4, label=l];
m7_107 -> m7_110  [key=1, style=dashed, color=darkseagreen4, label=l];
m7_107 -> m7_111  [key=1, style=dashed, color=darkseagreen4, label=l];
m7_107 -> m7_112  [key=1, style=dashed, color=darkseagreen4, label=l];
m7_104 -> m7_105  [key=0, style=solid];
m7_104 -> m7_56  [key=2, style=dotted];
m7_105 -> m7_106  [key=0, style=solid];
m7_105 -> m7_57  [key=2, style=dotted];
m7_106 -> m7_107  [key=0, style=solid];
m7_108 -> m7_109  [key=0, style=solid];
m7_108 -> m7_114  [key=2, style=dotted];
m7_108 -> m7_45  [key=2, style=dotted];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_45  [key=2, style=dotted];
m7_110 -> m7_111  [key=0, style=solid];
m7_110 -> m7_45  [key=2, style=dotted];
m7_111 -> m7_112  [key=0, style=solid];
m7_111 -> m7_45  [key=2, style=dotted];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_45  [key=2, style=dotted];
m7_113 -> m7_101  [key=0, style=bold, color=blue];
m7_26 -> m7_27  [key=0, style=solid];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_43  [key=2, style=dotted];
m7_27 -> m7_29  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_27 -> m7_30  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_27 -> m7_31  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_27 -> m7_32  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_27 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_27 -> m7_34  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_27 -> m7_35  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_27 -> m7_36  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_27 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_27 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_27 -> m7_39  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_27 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_27 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label=p];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_44  [key=2, style=dotted];
m7_28 -> m7_45  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_45  [key=2, style=dotted];
m7_30 -> m7_31  [key=0, style=solid];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_44  [key=2, style=dotted];
m7_31 -> m7_45  [key=2, style=dotted];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_45  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_46  [key=2, style=dotted];
m7_34 -> m7_44  [key=2, style=dotted];
m7_34 -> m7_45  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_45  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_44  [key=2, style=dotted];
m7_37 -> m7_45  [key=2, style=dotted];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_45  [key=2, style=dotted];
m7_39 -> m7_40  [key=0, style=solid];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_44  [key=2, style=dotted];
m7_40 -> m7_45  [key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_45  [key=2, style=dotted];
m7_42 -> m7_26  [key=0, style=bold, color=blue];
m7_177 -> m7_178  [key=0, style=solid];
m7_178 -> m7_179  [key=0, style=solid];
m7_178 -> m7_43  [key=2, style=dotted];
m7_179 -> m7_180  [key=0, style=solid];
m7_179 -> m7_56  [key=2, style=dotted];
m7_180 -> m7_181  [key=0, style=solid];
m7_180 -> m7_43  [key=2, style=dotted];
m7_181 -> m7_182  [key=0, style=solid];
m7_181 -> m7_56  [key=2, style=dotted];
m7_182 -> m7_183  [key=0, style=solid];
m7_182 -> m7_43  [key=2, style=dotted];
m7_183 -> m7_184  [key=0, style=solid];
m7_183 -> m7_56  [key=2, style=dotted];
m7_184 -> m7_185  [key=0, style=solid];
m7_184 -> m7_43  [key=2, style=dotted];
m7_185 -> m7_186  [key=0, style=solid];
m7_185 -> m7_56  [key=2, style=dotted];
m7_186 -> m7_187  [key=0, style=solid];
m7_186 -> m7_43  [key=2, style=dotted];
m7_187 -> m7_188  [key=0, style=solid];
m7_187 -> m7_56  [key=2, style=dotted];
m7_188 -> m7_189  [key=0, style=solid];
m7_188 -> m7_43  [key=2, style=dotted];
m7_189 -> m7_190  [key=0, style=solid];
m7_189 -> m7_56  [key=2, style=dotted];
m7_190 -> m7_191  [key=0, style=solid];
m7_190 -> m7_43  [key=2, style=dotted];
m7_191 -> m7_192  [key=0, style=solid];
m7_191 -> m7_56  [key=2, style=dotted];
m7_192 -> m7_193  [key=0, style=solid];
m7_192 -> m7_43  [key=2, style=dotted];
m7_193 -> m7_194  [key=0, style=solid];
m7_193 -> m7_56  [key=2, style=dotted];
m7_194 -> m7_195  [key=0, style=solid];
m7_194 -> m7_43  [key=2, style=dotted];
m7_195 -> m7_196  [key=0, style=solid];
m7_195 -> m7_56  [key=2, style=dotted];
m7_196 -> m7_197  [key=0, style=solid];
m7_196 -> m7_43  [key=2, style=dotted];
m7_197 -> m7_198  [key=0, style=solid];
m7_197 -> m7_69  [key=2, style=dotted];
m7_198 -> m7_199  [key=0, style=solid];
m7_198 -> m7_43  [key=2, style=dotted];
m7_199 -> m7_200  [key=0, style=solid];
m7_199 -> m7_69  [key=2, style=dotted];
m7_200 -> m7_201  [key=0, style=solid];
m7_200 -> m7_43  [key=2, style=dotted];
m7_201 -> m7_202  [key=0, style=solid];
m7_201 -> m7_69  [key=2, style=dotted];
m7_202 -> m7_203  [key=0, style=solid];
m7_202 -> m7_43  [key=2, style=dotted];
m7_203 -> m7_204  [key=0, style=solid];
m7_203 -> m7_69  [key=2, style=dotted];
m7_204 -> m7_205  [key=0, style=solid];
m7_204 -> m7_43  [key=2, style=dotted];
m7_205 -> m7_206  [key=0, style=solid];
m7_205 -> m7_69  [key=2, style=dotted];
m7_206 -> m7_207  [key=0, style=solid];
m7_206 -> m7_43  [key=2, style=dotted];
m7_207 -> m7_208  [key=0, style=solid];
m7_207 -> m7_69  [key=2, style=dotted];
m7_208 -> m7_209  [key=0, style=solid];
m7_208 -> m7_43  [key=2, style=dotted];
m7_209 -> m7_210  [key=0, style=solid];
m7_209 -> m7_69  [key=2, style=dotted];
m7_210 -> m7_211  [key=0, style=solid];
m7_210 -> m7_43  [key=2, style=dotted];
m7_211 -> m7_212  [key=0, style=solid];
m7_211 -> m7_69  [key=2, style=dotted];
m7_212 -> m7_213  [key=0, style=solid];
m7_212 -> m7_43  [key=2, style=dotted];
m7_213 -> m7_214  [key=0, style=solid];
m7_213 -> m7_69  [key=2, style=dotted];
m7_214 -> m7_215  [key=0, style=solid];
m7_214 -> m7_43  [key=2, style=dotted];
m7_215 -> m7_216  [key=0, style=solid];
m7_215 -> m7_69  [key=2, style=dotted];
m7_216 -> m7_177  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_155 -> m7_156  [key=0, style=solid];
m7_156 -> m7_157  [key=0, style=solid];
m7_156 -> m7_163  [key=2, style=dotted];
m7_156 -> m7_72  [key=2, style=dotted];
m7_156 -> m7_164  [key=2, style=dotted];
m7_156 -> m7_165  [key=2, style=dotted];
m7_156 -> m7_158  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_157 -> m7_158  [key=0, style=solid];
m7_157 -> m7_45  [key=2, style=dotted];
m7_158 -> m7_159  [key=0, style=solid];
m7_158 -> m7_166  [key=2, style=dotted];
m7_158 -> m7_167  [key=2, style=dotted];
m7_158 -> m7_160  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_158 -> m7_161  [key=1, style=dashed, color=darkseagreen4, label=reader];
m7_159 -> m7_160  [key=0, style=solid];
m7_159 -> m7_168  [key=2, style=dotted];
m7_160 -> m7_161  [key=0, style=solid];
m7_160 -> m7_168  [key=2, style=dotted];
m7_161 -> m7_162  [key=0, style=solid];
m7_161 -> m7_45  [key=2, style=dotted];
m7_162 -> m7_155  [key=0, style=bold, color=blue];
m7_231 -> m7_232  [key=0, style=solid];
m7_232 -> m7_233  [key=0, style=solid];
m7_232 -> m7_54  [key=2, style=dotted];
m7_233 -> m7_234  [key=0, style=solid];
m7_233 -> m7_55  [key=2, style=dotted];
m7_233 -> m7_235  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_233 -> m7_236  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_233 -> m7_237  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_233 -> m7_238  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_233 -> m7_239  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_233 -> m7_240  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_234 -> m7_235  [key=0, style=solid];
m7_234 -> m7_70  [key=2, style=dotted];
m7_235 -> m7_236  [key=0, style=solid];
m7_235 -> m7_57  [key=2, style=dotted];
m7_236 -> m7_237  [key=0, style=solid];
m7_236 -> m7_242  [key=2, style=dotted];
m7_236 -> m7_45  [key=2, style=dotted];
m7_237 -> m7_238  [key=0, style=solid];
m7_237 -> m7_45  [key=2, style=dotted];
m7_238 -> m7_239  [key=0, style=solid];
m7_238 -> m7_45  [key=2, style=dotted];
m7_239 -> m7_240  [key=0, style=solid];
m7_240 -> m7_241  [key=0, style=solid];
m7_240 -> m7_70  [key=2, style=dotted];
m7_241 -> m7_231  [key=0, style=bold, color=blue];
m7_217 -> m7_218  [key=0, style=solid];
m7_218 -> m7_219  [key=0, style=solid];
m7_218 -> m7_54  [key=2, style=dotted];
m7_219 -> m7_220  [key=0, style=solid];
m7_219 -> m7_55  [key=2, style=dotted];
m7_220 -> m7_221  [key=0, style=solid];
m7_220 -> m7_45  [key=2, style=dotted];
m7_221 -> m7_217  [key=0, style=bold, color=blue];
m7_255 -> m7_256  [key=0, style=solid];
m7_256 -> m7_257  [key=0, style=solid];
m7_256 -> m7_54  [key=2, style=dotted];
m7_256 -> m7_261  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m7_257 -> m7_258  [key=0, style=solid];
m7_257 -> m7_55  [key=2, style=dotted];
m7_257 -> m7_259  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_257 -> m7_260  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_261 -> m7_262  [key=0, style=solid];
m7_261 -> m7_72  [key=2, style=dotted];
m7_261 -> m7_73  [key=2, style=dotted];
m7_261 -> m7_263  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_258 -> m7_259  [key=0, style=solid];
m7_259 -> m7_260  [key=0, style=solid];
m7_259 -> m7_268  [key=1, style=dashed, color=darkseagreen4, label="object[]"];
m7_260 -> m7_261  [key=0, style=solid];
m7_260 -> m7_70  [key=2, style=dotted];
m7_262 -> m7_263  [key=0, style=solid];
m7_262 -> m7_45  [key=2, style=dotted];
m7_263 -> m7_264  [key=0, style=solid];
m7_263 -> m7_45  [key=2, style=dotted];
m7_264 -> m7_265  [key=0, style=solid];
m7_264 -> m7_56  [key=2, style=dotted];
m7_265 -> m7_255  [key=0, style=bold, color=blue];
m7_266 -> m7_267  [key=0, style=solid];
m7_266 -> m7_268  [key=1, style=dashed, color=darkseagreen4, label="object[]"];
m7_11 -> m7_12  [key=0, style=solid];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_14  [key=2, style=dotted];
m7_12 -> m7_15  [key=2, style=dotted];
m7_13 -> m7_11  [key=0, style=bold, color=blue];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_72  [key=2, style=dotted];
m7_75 -> m7_73  [key=2, style=dotted];
m7_74 -> m7_75  [key=0, style=solid];
m7_76 -> m7_74  [key=0, style=bold, color=blue];
m7_77 -> m7_78  [key=0, style=solid];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_80  [key=2, style=dotted];
m7_79 -> m7_77  [key=0, style=bold, color=blue];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_72  [key=2, style=dotted];
m7_95 -> m7_73  [key=2, style=dotted];
m7_94 -> m7_95  [key=0, style=solid];
m7_96 -> m7_94  [key=0, style=bold, color=blue];
m7_97 -> m7_98  [key=0, style=solid];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_100  [key=2, style=dotted];
m7_99 -> m7_97  [key=0, style=bold, color=blue];
m7_115 -> m7_116  [key=0, style=solid];
m7_116 -> m7_117  [key=0, style=solid];
m7_116 -> m7_118  [key=2, style=dotted];
m7_117 -> m7_115  [key=0, style=bold, color=blue];
m7_131 -> m7_132  [key=0, style=solid];
m7_132 -> m7_133  [key=0, style=solid];
m7_132 -> m7_134  [key=2, style=dotted];
m7_133 -> m7_131  [key=0, style=bold, color=blue];
m7_149 -> m7_150  [key=0, style=solid];
m7_149 -> m7_72  [key=2, style=dotted];
m7_149 -> m7_73  [key=2, style=dotted];
m7_148 -> m7_149  [key=0, style=solid];
m7_150 -> m7_148  [key=0, style=bold, color=blue];
m7_151 -> m7_152  [key=0, style=solid];
m7_152 -> m7_153  [key=0, style=solid];
m7_152 -> m7_154  [key=2, style=dotted];
m7_153 -> m7_151  [key=0, style=bold, color=blue];
m7_228 -> m7_229  [key=0, style=solid];
m7_229 -> m7_230  [key=0, style=solid];
m7_230 -> m7_228  [key=0, style=bold, color=blue];
m7_268 -> m7_269  [key=0, style=solid];
m7_268 -> m7_270  [key=2, style=dotted];
m7_267 -> m7_268  [key=0, style=solid];
m7_267 -> m7_264  [key=1, style=dashed, color=darkseagreen4, label=ensureCustomCreatorCalled];
m7_267 -> m7_269  [key=1, style=dashed, color=darkseagreen4, label=ensureCustomCreatorCalled];
m7_269 -> m7_266  [key=0, style=bold, color=blue];
m7_47 -> m7_48  [key=0, style=solid];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_54  [key=2, style=dotted];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_55  [key=2, style=dotted];
m7_49 -> m7_51  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_49 -> m7_52  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_56  [key=2, style=dotted];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_45  [key=2, style=dotted];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_57  [key=2, style=dotted];
m7_53 -> m7_47  [key=0, style=bold, color=blue];
m7_135 -> m7_136  [key=0, style=solid];
m7_136 -> m7_137  [key=0, style=solid];
m7_136 -> m7_54  [key=2, style=dotted];
m7_136 -> m7_141  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m7_136 -> m7_149  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m7_136 -> m7_143  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m7_137 -> m7_138  [key=0, style=solid];
m7_137 -> m7_55  [key=2, style=dotted];
m7_137 -> m7_139  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_137 -> m7_140  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_137 -> m7_142  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_141 -> m7_142  [key=0, style=solid];
m7_141 -> m7_71  [key=2, style=dotted];
m7_141 -> m7_148  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_143 -> m7_144  [key=0, style=solid];
m7_143 -> m7_72  [key=2, style=dotted];
m7_143 -> m7_73  [key=2, style=dotted];
m7_143 -> m7_145  [key=1, style=dashed, color=darkseagreen4, label=d];
m7_143 -> m7_146  [key=1, style=dashed, color=darkseagreen4, label=d];
m7_138 -> m7_139  [key=0, style=solid];
m7_138 -> m7_69  [key=2, style=dotted];
m7_139 -> m7_140  [key=0, style=solid];
m7_139 -> m7_70  [key=2, style=dotted];
m7_140 -> m7_141  [key=0, style=solid];
m7_140 -> m7_69  [key=2, style=dotted];
m7_142 -> m7_143  [key=0, style=solid];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_45  [key=2, style=dotted];
m7_145 -> m7_146  [key=0, style=solid];
m7_145 -> m7_45  [key=2, style=dotted];
m7_146 -> m7_147  [key=0, style=solid];
m7_146 -> m7_45  [key=2, style=dotted];
m7_147 -> m7_135  [key=0, style=bold, color=blue];
m7_243 -> m7_244  [key=0, style=solid];
m7_244 -> m7_245  [key=0, style=solid];
m7_244 -> m7_54  [key=2, style=dotted];
m7_245 -> m7_246  [key=0, style=solid];
m7_245 -> m7_55  [key=2, style=dotted];
m7_245 -> m7_247  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_245 -> m7_248  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_245 -> m7_249  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_245 -> m7_250  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_245 -> m7_251  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_245 -> m7_252  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_245 -> m7_253  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_246 -> m7_247  [key=0, style=solid];
m7_246 -> m7_70  [key=2, style=dotted];
m7_247 -> m7_248  [key=0, style=solid];
m7_247 -> m7_57  [key=2, style=dotted];
m7_248 -> m7_249  [key=0, style=solid];
m7_248 -> m7_242  [key=2, style=dotted];
m7_248 -> m7_45  [key=2, style=dotted];
m7_249 -> m7_250  [key=0, style=solid];
m7_249 -> m7_45  [key=2, style=dotted];
m7_250 -> m7_251  [key=0, style=solid];
m7_250 -> m7_45  [key=2, style=dotted];
m7_251 -> m7_252  [key=0, style=solid];
m7_251 -> m7_45  [key=2, style=dotted];
m7_252 -> m7_253  [key=0, style=solid];
m7_253 -> m7_254  [key=0, style=solid];
m7_253 -> m7_70  [key=2, style=dotted];
m7_254 -> m7_243  [key=0, style=bold, color=blue];
m7_281 -> m7_282  [key=0, style=solid];
m7_282 -> m7_283  [key=0, style=solid];
m7_282 -> m7_288  [key=2, style=dotted];
m7_282 -> m7_284  [key=1, style=dashed, color=darkseagreen4, label=book];
m7_283 -> m7_284  [key=0, style=solid];
m7_283 -> m7_72  [key=2, style=dotted];
m7_283 -> m7_0  [key=2, style=dotted];
m7_283 -> m7_279  [key=2, style=dotted];
m7_283 -> m7_285  [key=1, style=dashed, color=darkseagreen4, label=startingWithA];
m7_284 -> m7_285  [key=0, style=solid];
m7_284 -> m7_72  [key=2, style=dotted];
m7_284 -> m7_0  [key=2, style=dotted];
m7_284 -> m7_279  [key=2, style=dotted];
m7_284 -> m7_286  [key=1, style=dashed, color=darkseagreen4, label=startingWithB];
m7_285 -> m7_286  [key=0, style=solid];
m7_285 -> m7_280  [key=2, style=dotted];
m7_286 -> m7_287  [key=0, style=solid];
m7_286 -> m7_280  [key=2, style=dotted];
m7_287 -> m7_281  [key=0, style=bold, color=blue];
m7_58 -> m7_59  [key=0, style=solid];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_54  [key=2, style=dotted];
m7_59 -> m7_64  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m7_59 -> m7_75  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m7_59 -> m7_66  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_55  [key=2, style=dotted];
m7_60 -> m7_62  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_60 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_60 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label=contract];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_71  [key=2, style=dotted];
m7_64 -> m7_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_72  [key=2, style=dotted];
m7_66 -> m7_73  [key=2, style=dotted];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_69  [key=2, style=dotted];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_70  [key=2, style=dotted];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_70  [key=2, style=dotted];
m7_65 -> m7_66  [key=0, style=solid];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_45  [key=2, style=dotted];
m7_68 -> m7_58  [key=0, style=bold, color=blue];
m7_299 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver"];
m7_299 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver"];
m7_299 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver"];
m7_299 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DynamicContractResolver"];
m7_300 -> m7_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.EscapedPropertiesContractResolver"];
m7_301 -> m7_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.IPersonContractResolver"];
m7_302 -> m7_75  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m7_303 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m7_304 -> m7_149  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m8_76 -> m8_77  [key=0, style=solid];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_84  [key=2, style=dotted];
m8_77 -> m8_85  [key=2, style=dotted];
m8_77 -> m8_79  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_77 -> m8_80  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_16  [key=2, style=dotted];
m8_78 -> m8_20  [key=2, style=dotted];
m8_78 -> m8_18  [key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_58  [key=2, style=dotted];
m8_79 -> m8_18  [key=2, style=dotted];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_86  [key=2, style=dotted];
m8_80 -> m8_87  [key=2, style=dotted];
m8_80 -> m8_88  [key=2, style=dotted];
m8_80 -> m8_82  [key=1, style=dashed, color=darkseagreen4, label=a];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_89  [key=2, style=dotted];
m8_81 -> m8_18  [key=2, style=dotted];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_58  [key=2, style=dotted];
m8_82 -> m8_18  [key=2, style=dotted];
m8_83 -> m8_76  [key=0, style=bold, color=blue];
m8_167 -> m8_168  [key=0, style=solid];
m8_168 -> m8_169  [key=0, style=solid];
m8_168 -> m8_90  [key=2, style=dotted];
m8_169 -> m8_170  [key=0, style=solid];
m8_169 -> m8_179  [key=2, style=dotted];
m8_169 -> m8_169  [key=1, style=dashed, color=darkseagreen4, label=p];
m8_169 -> m8_171  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_169 -> m8_172  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_169 -> m8_173  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_169 -> m8_174  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_170 -> m8_171  [key=0, style=solid];
m8_170 -> m8_58  [key=2, style=dotted];
m8_170 -> m8_108  [key=2, style=dotted];
m8_171 -> m8_172  [key=0, style=solid];
m8_171 -> m8_120  [key=2, style=dotted];
m8_172 -> m8_173  [key=0, style=solid];
m8_172 -> m8_120  [key=2, style=dotted];
m8_173 -> m8_174  [key=0, style=solid];
m8_173 -> m8_18  [key=2, style=dotted];
m8_174 -> m8_175  [key=0, style=solid];
m8_174 -> m8_44  [key=2, style=dotted];
m8_174 -> m8_20  [key=2, style=dotted];
m8_174 -> m8_18  [key=2, style=dotted];
m8_175 -> m8_176  [key=0, style=solid];
m8_175 -> m8_32  [key=2, style=dotted];
m8_175 -> m8_180  [key=2, style=dotted];
m8_175 -> m8_177  [key=1, style=dashed, color=darkseagreen4, label=a];
m8_176 -> m8_177  [key=0, style=solid];
m8_176 -> m8_120  [key=2, style=dotted];
m8_177 -> m8_178  [key=0, style=solid];
m8_177 -> m8_89  [key=2, style=dotted];
m8_177 -> m8_18  [key=2, style=dotted];
m8_178 -> m8_167  [key=0, style=bold, color=blue];
m8_94 -> m8_95  [key=0, style=solid];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_90  [key=2, style=dotted];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_105  [key=2, style=dotted];
m8_96 -> m8_85  [key=2, style=dotted];
m8_96 -> m8_84  [key=2, style=dotted];
m8_96 -> m8_106  [key=2, style=dotted];
m8_96 -> m8_107  [key=2, style=dotted];
m8_96 -> m8_96  [key=1, style=dashed, color=darkseagreen4, label=p];
m8_96 -> m8_98  [key=1, style=dashed, color=darkseagreen4, label=rss];
m8_96 -> m8_101  [key=1, style=dashed, color=darkseagreen4, label=rss];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_58  [key=2, style=dotted];
m8_97 -> m8_108  [key=2, style=dotted];
m8_98 -> m8_99  [key=0, style=solid];
m8_98 -> m8_44  [key=2, style=dotted];
m8_98 -> m8_59  [key=2, style=dotted];
m8_98 -> m8_98  [key=1, style=dashed, color=darkseagreen4, label=p];
m8_101 -> m8_102  [key=0, style=solid];
m8_101 -> m8_44  [key=2, style=dotted];
m8_101 -> m8_110  [key=2, style=dotted];
m8_101 -> m8_20  [key=2, style=dotted];
m8_101 -> m8_101  [key=1, style=dashed, color=darkseagreen4, label=c];
m8_99 -> m8_100  [key=0, style=solid];
m8_99 -> m8_101  [key=0, style=solid];
m8_100 -> m8_99  [key=0, style=solid];
m8_100 -> m8_109  [key=2, style=dotted];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_104  [key=0, style=solid];
m8_103 -> m8_102  [key=0, style=solid];
m8_103 -> m8_109  [key=2, style=dotted];
m8_104 -> m8_94  [key=0, style=bold, color=blue];
m8_126 -> m8_127  [key=0, style=solid];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_130  [key=2, style=dotted];
m8_128 -> m8_129  [key=0, style=solid];
m8_128 -> m8_18  [key=2, style=dotted];
m8_129 -> m8_126  [key=0, style=bold, color=blue];
m8_47 -> m8_48  [key=0, style=solid];
m8_48 -> m8_49  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_15  [key=2, style=dotted];
m8_49 -> m8_51  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_49 -> m8_53  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_49 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_58  [key=2, style=dotted];
m8_50 -> m8_18  [key=2, style=dotted];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_59  [key=2, style=dotted];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_60  [key=2, style=dotted];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_60  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_58  [key=2, style=dotted];
m8_52 -> m8_18  [key=2, style=dotted];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_58  [key=2, style=dotted];
m8_54 -> m8_18  [key=2, style=dotted];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_58  [key=2, style=dotted];
m8_56 -> m8_18  [key=2, style=dotted];
m8_57 -> m8_47  [key=0, style=bold, color=blue];
m8_121 -> m8_122  [key=0, style=solid];
m8_122 -> m8_123  [key=0, style=solid];
m8_122 -> m8_125  [key=2, style=dotted];
m8_123 -> m8_124  [key=0, style=solid];
m8_123 -> m8_18  [key=2, style=dotted];
m8_124 -> m8_121  [key=0, style=bold, color=blue];
m8_23 -> m8_24  [key=0, style=solid];
m8_24 -> m8_25  [key=0, style=solid];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_30  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_31  [key=2, style=dotted];
m8_26 -> m8_17  [key=2, style=dotted];
m8_26 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label=list];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_32  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_18  [key=2, style=dotted];
m8_29 -> m8_23  [key=0, style=bold, color=blue];
m8_131 -> m8_132  [key=0, style=solid];
m8_132 -> m8_133  [key=0, style=solid];
m8_132 -> m8_135  [key=2, style=dotted];
m8_133 -> m8_134  [key=0, style=solid];
m8_133 -> m8_18  [key=2, style=dotted];
m8_134 -> m8_131  [key=0, style=bold, color=blue];
m8_136 -> m8_137  [key=0, style=solid];
m8_137 -> m8_138  [key=0, style=solid];
m8_137 -> m8_84  [key=2, style=dotted];
m8_137 -> m8_85  [key=2, style=dotted];
m8_137 -> m8_87  [key=2, style=dotted];
m8_137 -> m8_147  [key=2, style=dotted];
m8_137 -> m8_148  [key=2, style=dotted];
m8_137 -> m8_143  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_138 -> m8_139  [key=0, style=solid];
m8_138 -> m8_149  [key=2, style=dotted];
m8_138 -> m8_143  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m8_143 -> m8_144  [key=0, style=solid];
m8_143 -> m8_154  [key=2, style=dotted];
m8_139 -> m8_140  [key=0, style=solid];
m8_139 -> m8_150  [key=2, style=dotted];
m8_139 -> m8_151  [key=2, style=dotted];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_152  [key=2, style=dotted];
m8_140 -> m8_144  [key=1, style=dashed, color=darkseagreen4, label=sw];
m8_141 -> m8_142  [key=0, style=solid];
m8_141 -> m8_153  [key=2, style=dotted];
m8_141 -> m8_143  [key=1, style=dashed, color=darkseagreen4, label=writer];
m8_144 -> m8_145  [key=0, style=solid];
m8_144 -> m8_155  [key=2, style=dotted];
m8_142 -> m8_143  [key=0, style=solid];
m8_145 -> m8_146  [key=0, style=solid];
m8_145 -> m8_18  [key=2, style=dotted];
m8_146 -> m8_136  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_15  [key=2, style=dotted];
m8_2 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_16  [key=2, style=dotted];
m8_3 -> m8_17  [key=2, style=dotted];
m8_3 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label=properties];
m8_3 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label=properties];
m8_3 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label=properties];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_16  [key=2, style=dotted];
m8_11 -> m8_22  [key=2, style=dotted];
m8_11 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label=p];
m8_11 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label=parameterValues];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_18  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_18  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_18  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label=list];
m8_7 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label=list];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_19  [key=2, style=dotted];
m8_8 -> m8_20  [key=2, style=dotted];
m8_8 -> m8_18  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_19  [key=2, style=dotted];
m8_9 -> m8_21  [key=2, style=dotted];
m8_9 -> m8_18  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_19  [key=2, style=dotted];
m8_10 -> m8_21  [key=2, style=dotted];
m8_10 -> m8_18  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_18  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_18  [key=2, style=dotted];
m8_14 -> m8_0  [key=0, style=bold, color=blue];
m8_61 -> m8_62  [key=0, style=solid];
m8_62 -> m8_63  [key=0, style=solid];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_15  [key=2, style=dotted];
m8_63 -> m8_65  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_63 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_63 -> m8_67  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_63 -> m8_68  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_63 -> m8_69  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_60  [key=2, style=dotted];
m8_64 -> m8_58  [key=2, style=dotted];
m8_64 -> m8_18  [key=2, style=dotted];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_60  [key=2, style=dotted];
m8_65 -> m8_58  [key=2, style=dotted];
m8_65 -> m8_18  [key=2, style=dotted];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_60  [key=2, style=dotted];
m8_66 -> m8_58  [key=2, style=dotted];
m8_66 -> m8_18  [key=2, style=dotted];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_60  [key=2, style=dotted];
m8_67 -> m8_58  [key=2, style=dotted];
m8_67 -> m8_18  [key=2, style=dotted];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_60  [key=2, style=dotted];
m8_68 -> m8_58  [key=2, style=dotted];
m8_68 -> m8_18  [key=2, style=dotted];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_60  [key=2, style=dotted];
m8_69 -> m8_58  [key=2, style=dotted];
m8_69 -> m8_18  [key=2, style=dotted];
m8_70 -> m8_71  [key=0, style=solid];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_30  [key=2, style=dotted];
m8_71 -> m8_73  [key=1, style=dashed, color=darkseagreen4, label=a];
m8_71 -> m8_74  [key=1, style=dashed, color=darkseagreen4, label=a];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_58  [key=2, style=dotted];
m8_72 -> m8_18  [key=2, style=dotted];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_19  [key=2, style=dotted];
m8_73 -> m8_21  [key=2, style=dotted];
m8_73 -> m8_58  [key=2, style=dotted];
m8_73 -> m8_18  [key=2, style=dotted];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_19  [key=2, style=dotted];
m8_74 -> m8_21  [key=2, style=dotted];
m8_74 -> m8_58  [key=2, style=dotted];
m8_74 -> m8_18  [key=2, style=dotted];
m8_75 -> m8_61  [key=0, style=bold, color=blue];
m8_33 -> m8_34  [key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_15  [key=2, style=dotted];
m8_35 -> m8_37  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_35 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_43  [key=2, style=dotted];
m8_36 -> m8_17  [key=2, style=dotted];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_44  [key=2, style=dotted];
m8_37 -> m8_45  [key=2, style=dotted];
m8_37 -> m8_17  [key=2, style=dotted];
m8_37 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label=resultUrls];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_46  [key=2, style=dotted];
m8_40 -> m8_17  [key=2, style=dotted];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_32  [key=2, style=dotted];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_18  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_18  [key=2, style=dotted];
m8_42 -> m8_33  [key=0, style=bold, color=blue];
m8_156 -> m8_157  [key=0, style=solid];
m8_157 -> m8_158  [key=0, style=solid];
m8_157 -> m8_32  [key=2, style=dotted];
m8_157 -> m8_164  [key=2, style=dotted];
m8_157 -> m8_87  [key=2, style=dotted];
m8_157 -> m8_147  [key=2, style=dotted];
m8_157 -> m8_165  [key=2, style=dotted];
m8_157 -> m8_161  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m8_158 -> m8_159  [key=0, style=solid];
m8_158 -> m8_149  [key=2, style=dotted];
m8_158 -> m8_161  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m8_161 -> m8_162  [key=0, style=solid];
m8_161 -> m8_154  [key=2, style=dotted];
m8_159 -> m8_160  [key=0, style=solid];
m8_160 -> m8_161  [key=0, style=solid];
m8_160 -> m8_166  [key=2, style=dotted];
m8_160 -> m8_162  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m8_162 -> m8_163  [key=0, style=solid];
m8_162 -> m8_19  [key=2, style=dotted];
m8_162 -> m8_20  [key=2, style=dotted];
m8_162 -> m8_18  [key=2, style=dotted];
m8_163 -> m8_156  [key=0, style=bold, color=blue];
m8_111 -> m8_112  [key=0, style=solid];
m8_112 -> m8_113  [key=0, style=solid];
m8_113 -> m8_114  [key=0, style=solid];
m8_113 -> m8_15  [key=2, style=dotted];
m8_113 -> m8_115  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_113 -> m8_116  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_113 -> m8_117  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_113 -> m8_118  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_114 -> m8_115  [key=0, style=solid];
m8_114 -> m8_18  [key=2, style=dotted];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_59  [key=2, style=dotted];
m8_115 -> m8_18  [key=2, style=dotted];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_120  [key=2, style=dotted];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_44  [key=2, style=dotted];
m8_117 -> m8_20  [key=2, style=dotted];
m8_117 -> m8_18  [key=2, style=dotted];
m8_118 -> m8_119  [key=0, style=solid];
m8_118 -> m8_44  [key=2, style=dotted];
m8_118 -> m8_20  [key=2, style=dotted];
m8_118 -> m8_18  [key=2, style=dotted];
m8_119 -> m8_111  [key=0, style=bold, color=blue];
m8_90 -> m8_91  [key=0, style=solid];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_32  [key=2, style=dotted];
m8_91 -> m8_93  [key=2, style=dotted];
m8_92 -> m8_90  [key=0, style=bold, color=blue];
m8_181 -> m8_95  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.LinqToJsonTest"];
m8_181 -> m8_168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.LinqToJsonTest"];
m11_32 -> m11_33  [key=0, style=solid];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_36  [key=2, style=dotted];
m11_33 -> m11_37  [key=2, style=dotted];
m11_33 -> m11_38  [key=2, style=dotted];
m11_33 -> m11_39  [key=2, style=dotted];
m11_33 -> m11_33  [key=1, style=dashed, color=darkseagreen4, label=t];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_40  [key=2, style=dotted];
m11_34 -> m11_41  [key=2, style=dotted];
m11_34 -> m11_42  [key=2, style=dotted];
m11_34 -> m11_43  [key=2, style=dotted];
m11_34 -> m11_14  [key=2, style=dotted];
m11_34 -> m11_34  [key=1, style=dashed, color=darkseagreen4, label=c];
m11_35 -> m11_32  [key=0, style=bold, color=blue];
m11_26 -> m11_27  [key=0, style=solid];
m11_27 -> m11_28  [key=0, style=solid];
m11_28 -> m11_26  [key=0, style=bold, color=blue];
m11_20 -> m11_21  [key=0, style=solid];
m11_21 -> m11_22  [key=0, style=solid];
m11_22 -> m11_20  [key=0, style=bold, color=blue];
m11_23 -> m11_24  [key=0, style=solid];
m11_24 -> m11_25  [key=0, style=solid];
m11_25 -> m11_23  [key=0, style=bold, color=blue];
m11_57 -> m11_58  [key=0, style=solid];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_32  [key=2, style=dotted];
m11_59 -> m11_57  [key=0, style=bold, color=blue];
m11_29 -> m11_30  [key=0, style=solid];
m11_30 -> m11_31  [key=0, style=solid];
m11_31 -> m11_29  [key=0, style=bold, color=blue];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_46  [key=1, style=dashed, color=darkseagreen4, label=object];
m11_44 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m11_45 -> m11_46  [key=0, style=solid];
m11_45 -> m11_49  [key=2, style=dotted];
m11_45 -> m11_32  [key=2, style=dotted];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_50  [key=2, style=dotted];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_51  [key=2, style=dotted];
m11_48 -> m11_44  [key=0, style=bold, color=blue];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_18  [key=1, style=dashed, color=darkseagreen4, label=object];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_18  [key=0, style=solid];
m11_18 -> m11_19  [key=0, style=solid];
m11_17 -> m11_19  [key=0, style=solid];
m11_19 -> m11_15  [key=0, style=bold, color=blue];
m11_5 -> m11_6  [key=0, style=solid];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_5  [key=0, style=bold, color=blue];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_4  [key=0, style=solid];
m11_4 -> m11_2  [key=0, style=bold, color=blue];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label=object];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_11  [key=0, style=solid];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_13  [key=2, style=dotted];
m11_11 -> m11_14  [key=2, style=dotted];
m11_11 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label=w];
m11_10 -> m11_12  [key=0, style=solid];
m11_12 -> m11_8  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [key=0, style=bold, color=blue];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_32  [key=2, style=dotted];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_13  [key=2, style=dotted];
m11_54 -> m11_56  [key=2, style=dotted];
m11_55 -> m11_52  [key=0, style=bold, color=blue];
m11_60 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.MyInterfaceConverter"];
m11_61 -> m11_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter"];
m11_62 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TraceWriter"];
m11_63 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter"];
m11_63 -> m11_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter"];
m11_63 -> m11_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter"];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_4  [key=0, style=bold, color=crimson];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_5  [key=0, style=solid];
m12_4 -> m12_2  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_1  [key=0, style=solid];
m12_2 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label=v];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_2  [key=0, style=solid];
m12_3 -> m12_6  [key=2, style=dotted];
m12_5 -> m12_0  [key=0, style=bold, color=blue];
m12_7 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonPath.QueryFilter"];
m13_0 -> m13_1  [key=0, style=solid, color=green];
m13_1 -> m13_2  [key=0, style=solid, color=green];
m13_1 -> m13_3  [key=1, style=dashed, color=green, label=xml];
m13_1 -> m13_5  [key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid, color=green];
m13_2 -> m13_6  [key=2, style=dotted, color=green];
m13_2 -> m13_4  [key=1, style=dashed, color=green, label=doc];
m13_3 -> m13_4  [key=0, style=solid, color=green];
m13_3 -> m13_7  [key=2, style=dotted, color=green];
m13_3 -> m13_8  [key=2, style=dotted];
m13_4 -> m13_5  [key=0, style=solid, color=green];
m13_4 -> m13_8  [key=2, style=dotted, color=green];
m13_4 -> m13_0  [key=0, style=bold, color=blue];
m13_5 -> m13_0  [key=0, style=bold, color=blue];
m13_14 -> m13_15  [key=0, style=solid];
m13_16 -> m13_6  [key=2, style=dotted];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_18  [key=1, style=dashed, color=darkseagreen4, label=doc];
m13_20 -> m13_6  [key=2, style=dotted];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_22  [key=1, style=dashed, color=darkseagreen4, label=doc];
m13_17 -> m13_7  [key=2, style=dotted];
m13_17 -> m13_18  [key=0, style=solid];
m13_21 -> m13_7  [key=2, style=dotted];
m13_21 -> m13_22  [key=0, style=solid];
m13_18 -> m13_8  [key=2, style=dotted];
m13_18 -> m13_19  [key=0, style=solid];
m13_22 -> m13_8  [key=2, style=dotted];
m13_22 -> m13_23  [key=0, style=solid];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_17  [key=1, style=dashed, color=darkseagreen4, label=xml];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_21  [key=1, style=dashed, color=darkseagreen4, label=xml];
m13_23 -> m13_14  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid, color=green];
m14_1 -> m14_2  [key=0, style=solid, color=green];
m14_1 -> m14_3  [key=2, style=dotted];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_40 -> m14_39  [key=0, style=bold, color=blue];
m14_56 -> m14_57  [key=0, style=solid];
m14_57 -> m14_56  [key=0, style=bold, color=blue];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_20  [key=1, style=dashed, color=darkseagreen4, label="System.Guid"];
m14_18 -> m14_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_18 -> m14_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_18 -> m14_23  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_26  [key=2, style=dotted];
m14_19 -> m14_21  [key=1, style=dashed, color=darkseagreen4, label=file];
m14_19 -> m14_22  [key=1, style=dashed, color=darkseagreen4, label=file];
m14_19 -> m14_23  [key=1, style=dashed, color=darkseagreen4, label=file];
m14_19 -> m14_24  [key=1, style=dashed, color=darkseagreen4, label=file];
m14_20 -> m14_21  [key=0, style=solid];
m14_21 -> m14_22  [key=0, style=solid];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m14_22 -> m14_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m14_22 -> m14_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m14_22 -> m14_24  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_22 -> m14_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m14_22 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m14_22 -> m14_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m14_22 -> m14_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m14_22 -> m14_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m14_22 -> m14_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m14_22 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m14_22 -> m14_28  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_40  [key=2, style=dotted];
m14_23 -> m14_31  [key=1, style=dashed, color=darkseagreen4, label=isNullable];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_35  [key=1, style=dashed, color=darkseagreen4, label=t];
m14_24 -> m14_41  [key=2, style=dotted];
m14_24 -> m14_31  [key=1, style=dashed, color=darkseagreen4, label=t];
m14_25 -> m14_18  [key=0, style=bold, color=blue];
m14_25 -> m14_29  [key=0, style=solid];
m14_25 -> m14_26  [key=0, style=solid];
m14_52 -> m14_53  [key=0, style=solid];
m14_52 -> m14_54  [key=2, style=dotted];
m14_53 -> m14_52  [key=0, style=bold, color=blue];
m14_53 -> m14_50  [key=0, style=bold, color=blue];
m14_41 -> m14_42  [key=0, style=solid];
m14_50 -> m14_51  [key=0, style=solid];
m14_50 -> m14_43  [key=0, style=bold, color=blue];
m14_51 -> m14_41  [key=2, style=dotted];
m14_51 -> m14_40  [key=2, style=dotted];
m14_51 -> m14_52  [key=0, style=solid];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_42  [key=2, style=dotted];
m14_27 -> m14_43  [key=2, style=dotted];
m14_27 -> m14_39  [key=0, style=solid];
m14_28 -> m14_27  [key=0, style=bold, color=blue];
m14_28 -> m14_39  [key=0, style=solid];
m14_45 -> m14_46  [key=0, style=solid];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_35  [key=0, style=solid];
m14_34 -> m14_33  [key=0, style=bold, color=blue];
m14_34 -> m14_38  [key=0, style=solid];
m14_34 -> m14_42  [key=2, style=dotted];
m14_34 -> m14_43  [key=2, style=dotted];
m14_7 -> m14_8  [key=0, style=solid];
m14_7 -> m14_11  [key=1, style=dashed, color=darkseagreen4, label=e];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_3  [key=2, style=dotted];
m14_8 -> m14_12  [key=1, style=dashed, color=darkseagreen4, label=enumName];
m14_8 -> m14_16  [key=2, style=dotted];
m14_9 -> m14_7  [key=0, style=bold, color=blue];
m14_9 -> m14_11  [key=0, style=solid];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_17  [key=2, style=dotted];
m14_17 -> m14_15  [key=0, style=bold, color=blue];
m14_49 -> m14_50  [key=0, style=solid];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_19  [key=2, style=dotted];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_14  [key=2, style=dotted];
m14_12 -> m14_20  [key=2, style=dotted];
m14_13 -> m14_11  [key=0, style=bold, color=blue];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_21  [key=2, style=dotted];
m14_44 -> m14_45  [key=0, style=solid];
m14_44 -> m14_51  [key=2, style=dotted];
m14_44 -> m14_46  [key=1, style=dashed, color=darkseagreen4, label=folder];
m14_44 -> m14_47  [key=1, style=dashed, color=darkseagreen4, label=folder];
m14_44 -> m14_48  [key=1, style=dashed, color=darkseagreen4, label=folder];
m14_44 -> m14_49  [key=1, style=dashed, color=darkseagreen4, label=folder];
m14_46 -> m14_47  [key=0, style=solid];
m14_54 -> m14_55  [key=0, style=solid];
m14_55 -> m14_54  [key=0, style=bold, color=blue];
m14_55 -> m14_1  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Converters.StringEnumConverter"];
m14_55 -> m14_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.StringEnumConverter"];
m14_55 -> m14_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.StringEnumConverter"];
m14_66 -> m14_67  [key=0, style=solid];
m14_67 -> m14_66  [key=0, style=bold, color=blue];
m14_3 -> m14_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m14_3 -> m14_7  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m14_3 -> m14_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m14_4 -> m14_7  [key=0, style=solid];
m14_4 -> m14_5  [key=0, style=solid];
m14_10 -> m14_14  [key=0, style=solid];
m14_10 -> m14_18  [key=2, style=dotted];
m14_10 -> m14_3  [key=0, style=bold, color=blue];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_15  [key=2, style=dotted];
m14_5 -> m14_3  [key=2, style=dotted];
m14_6 -> m14_14  [key=0, style=solid];
m14_6 -> m14_4  [key=0, style=bold, color=blue];
m14_14 -> m14_3  [key=0, style=bold, color=blue];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_39  [key=0, style=solid];
m14_35 -> m14_46  [key=2, style=dotted];
m14_36 -> m14_35  [key=0, style=bold, color=blue];
m14_36 -> m14_37  [key=0, style=solid];
m14_47 -> m14_48  [key=0, style=solid];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_39  [key=0, style=solid];
m14_31 -> m14_45  [key=2, style=dotted];
m14_32 -> m14_31  [key=0, style=bold, color=blue];
m14_32 -> m14_33  [key=0, style=solid];
m14_32 -> m14_36  [key=0, style=solid];
m14_32 -> m14_38  [key=0, style=solid];
m14_60 -> m14_61  [key=0, style=solid];
m14_61 -> m14_60  [key=0, style=bold, color=blue];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_39  [key=0, style=solid];
m14_37 -> m14_47  [key=2, style=dotted];
m14_37 -> m14_48  [key=2, style=dotted];
m14_37 -> m14_49  [key=2, style=dotted];
m14_38 -> m14_37  [key=0, style=bold, color=blue];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_42  [key=2, style=dotted];
m14_38 -> m14_43  [key=2, style=dotted];
m14_15 -> m14_16  [key=0, style=solid];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_14  [key=2, style=dotted];
m14_42 -> m14_41  [key=0, style=bold, color=blue];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_22  [key=0, style=bold, color=blue];
m14_64 -> m14_65  [key=0, style=solid];
m14_65 -> m14_64  [key=0, style=bold, color=blue];
m14_43 -> m14_44  [key=0, style=solid];
m14_43 -> m14_45  [key=1, style=dashed, color=darkseagreen4, label="System.Guid"];
m14_43 -> m14_46  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_43 -> m14_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_43 -> m14_48  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m14_48 -> m14_49  [key=0, style=solid];
m14_62 -> m14_63  [key=0, style=solid];
m14_63 -> m14_62  [key=0, style=bold, color=blue];
m14_58 -> m14_59  [key=0, style=solid];
m14_59 -> m14_58  [key=0, style=bold, color=blue];
m14_29 -> m14_32  [key=0, style=solid];
m14_29 -> m14_30  [key=0, style=solid];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_28  [key=0, style=solid];
m14_26 -> m14_40  [key=2, style=dotted];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_44  [key=2, style=dotted];
m14_30 -> m14_29  [key=0, style=bold, color=blue];
m14_68 -> m14_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities"];
m14_68 -> m14_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.DataServicesTestDatabaseEntities"];
m15_127 -> m15_128  [key=0, style=solid];
m15_127 -> m15_9  [key=2, style=dotted];
m15_128 -> m15_129  [key=0, style=solid];
m15_128 -> m15_92  [key=2, style=dotted];
m15_128 -> m15_134  [key=2, style=dotted];
m15_128 -> m15_144  [key=2, style=dotted];
m15_128 -> m15_131  [key=0, style=solid];
m15_129 -> m15_130  [key=0, style=solid];
m15_129 -> m15_131  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_129 -> m15_132  [key=1, style=dashed, color=darkseagreen4, label=a];
m15_129 -> m15_77  [key=2, style=dotted];
m15_130 -> m15_131  [key=0, style=solid];
m15_130 -> m15_12  [key=2, style=dotted];
m15_130 -> m15_143  [key=2, style=dotted];
m15_131 -> m15_132  [key=0, style=solid];
m15_131 -> m15_12  [key=2, style=dotted];
m15_131 -> m15_144  [key=2, style=dotted];
m15_131 -> m15_134  [key=0, style=solid];
m15_132 -> m15_133  [key=0, style=solid];
m15_132 -> m15_12  [key=2, style=dotted];
m15_132 -> m15_77  [key=2, style=dotted];
m15_133 -> m15_127  [key=0, style=bold, color=blue];
m15_133 -> m15_134  [key=0, style=solid];
m15_133 -> m15_143  [key=2, style=dotted];
m15_294 -> m15_312  [key=1, style=dashed, color=darkseagreen4, label=IXmlNode];
m15_294 -> m15_314  [key=1, style=dashed, color=darkseagreen4, label=IXmlNode];
m15_294 -> m15_300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_294 -> m15_303  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_294 -> m15_306  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_294 -> m15_309  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_294 -> m15_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_294 -> m15_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_294 -> m15_295  [key=0, style=solid];
m15_294 -> m15_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_294 -> m15_302  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_294 -> m15_305  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_294 -> m15_308  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_294 -> m15_311  [key=1, style=dashed, color=darkseagreen4, label=IXmlDocument];
m15_312 -> m15_201  [key=2, style=dotted];
m15_312 -> m15_315  [key=0, style=solid];
m15_314 -> m15_201  [key=2, style=dotted];
m15_314 -> m15_315  [key=0, style=solid];
m15_300 -> m15_199  [key=2, style=dotted];
m15_300 -> m15_301  [key=0, style=solid];
m15_300 -> m15_304  [key=0, style=solid];
m15_300 -> m15_307  [key=0, style=solid];
m15_300 -> m15_310  [key=0, style=solid];
m15_303 -> m15_199  [key=2, style=dotted];
m15_303 -> m15_299  [key=0, style=solid];
m15_303 -> m15_311  [key=1, style=dashed, color=darkseagreen4, label=version];
m15_306 -> m15_199  [key=2, style=dotted];
m15_306 -> m15_299  [key=0, style=solid];
m15_306 -> m15_311  [key=1, style=dashed, color=darkseagreen4, label=encoding];
m15_309 -> m15_199  [key=2, style=dotted];
m15_309 -> m15_299  [key=0, style=solid];
m15_309 -> m15_311  [key=1, style=dashed, color=darkseagreen4, label=standalone];
m15_313 -> m15_199  [key=2, style=dotted];
m15_313 -> m15_314  [key=0, style=solid];
m15_313 -> m15_289  [key=2, style=dotted];
m15_313 -> m15_317  [key=2, style=dotted];
m15_296 -> m15_276  [key=3, color=darkorchid, style=bold, label="Local variable string version"];
m15_296 -> m15_297  [key=0, style=solid];
m15_296 -> m15_311  [key=1, style=dashed, color=darkseagreen4, label=version];
m15_297 -> m15_276  [key=3, color=darkorchid, style=bold, label="Local variable string encoding"];
m15_297 -> m15_298  [key=0, style=solid];
m15_297 -> m15_311  [key=1, style=dashed, color=darkseagreen4, label=encoding];
m15_298 -> m15_276  [key=3, color=darkorchid, style=bold, label="Local variable string standalone"];
m15_298 -> m15_299  [key=0, style=solid];
m15_298 -> m15_311  [key=1, style=dashed, color=darkseagreen4, label=standalone];
m15_310 -> m15_175  [key=2, style=dotted];
m15_310 -> m15_315  [key=0, style=solid];
m15_311 -> m15_312  [key=0, style=solid];
m15_311 -> m15_316  [key=2, style=dotted];
m15_299 -> m15_300  [key=0, style=solid];
m15_299 -> m15_311  [key=0, style=solid];
m15_299 -> m15_122  [key=2, style=dotted];
m15_301 -> m15_302  [key=0, style=solid];
m15_304 -> m15_305  [key=0, style=solid];
m15_307 -> m15_308  [key=0, style=solid];
m15_302 -> m15_303  [key=0, style=solid];
m15_302 -> m15_122  [key=2, style=dotted];
m15_305 -> m15_306  [key=0, style=solid];
m15_305 -> m15_122  [key=2, style=dotted];
m15_308 -> m15_309  [key=0, style=solid];
m15_308 -> m15_122  [key=2, style=dotted];
m15_295 -> m15_313  [key=0, style=solid];
m15_295 -> m15_296  [key=0, style=solid];
m15_315 -> m15_294  [key=0, style=bold, color=blue];
m15_125 -> m15_126  [key=0, style=solid];
m15_125 -> m15_128  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m15_125 -> m15_130  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m15_125 -> m15_131  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m15_125 -> m15_133  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m15_125 -> m15_134  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m15_125 -> m15_136  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m15_135 -> m15_136  [key=0, style=solid];
m15_135 -> m15_77  [key=2, style=dotted];
m15_136 -> m15_137  [key=0, style=solid];
m15_136 -> m15_92  [key=2, style=dotted];
m15_136 -> m15_134  [key=2, style=dotted];
m15_136 -> m15_140  [key=1, style=dashed, color=darkseagreen4, label=t];
m15_136 -> m15_143  [key=2, style=dotted];
m15_137 -> m15_138  [key=0, style=solid];
m15_137 -> m15_37  [key=2, style=dotted];
m15_137 -> m15_139  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_137 -> m15_11  [key=2, style=dotted];
m15_138 -> m15_135  [key=0, style=bold, color=blue];
m15_138 -> m15_139  [key=0, style=solid];
m15_138 -> m15_37  [key=2, style=dotted];
m15_68 -> m15_66  [key=0, style=solid];
m15_68 -> m15_68  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_32 -> m15_33  [key=0, style=solid];
m15_33 -> m15_34  [key=0, style=solid];
m15_33 -> m15_10  [key=2, style=dotted];
m15_33 -> m15_35  [key=0, style=solid];
m15_34 -> m15_35  [key=0, style=solid];
m15_34 -> m15_39  [key=1, style=dashed, color=darkseagreen4, label=l];
m15_34 -> m15_33  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.IList l"];
m15_34 -> m15_37  [key=2, style=dotted];
m15_35 -> m15_36  [key=0, style=solid];
m15_35 -> m15_37  [key=2, style=dotted];
m15_35 -> m15_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_35 -> m15_12  [key=0, style=bold, color=blue];
m15_36 -> m15_32  [key=0, style=bold, color=blue];
m15_124 -> m15_125  [key=0, style=solid];
m15_51 -> m15_52  [key=0, style=solid];
m15_51 -> m15_61  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m15_51 -> m15_67  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m15_51 -> m15_51  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m15_51 -> m15_53  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m15_51 -> m15_54  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m15_51 -> m15_62  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m15_51 -> m15_66  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m15_52 -> m15_53  [key=0, style=solid];
m15_52 -> m15_10  [key=2, style=dotted];
m15_52 -> m15_54  [key=1, style=dashed, color=darkseagreen4, label=p];
m15_52 -> m15_57  [key=1, style=dashed, color=darkseagreen4, label=p];
m15_53 -> m15_54  [key=0, style=solid];
m15_53 -> m15_57  [key=1, style=dashed, color=darkseagreen4, label=l];
m15_53 -> m15_52  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.IList l"];
m15_53 -> m15_59  [key=0, style=solid];
m15_54 -> m15_55  [key=0, style=solid];
m15_54 -> m15_37  [key=2, style=dotted];
m15_54 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_55 -> m15_51  [key=0, style=bold, color=blue];
m15_55 -> m15_57  [key=1, style=dashed, color=darkseagreen4, label=jsonArrayAttribute];
m15_55 -> m15_56  [key=0, style=solid];
m15_147 -> m15_66  [key=1, style=dashed, color=darkseagreen4, label=l];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_18  [key=0, style=solid];
m15_13 -> m15_20  [key=0, style=solid];
m15_13 -> m15_22  [key=0, style=solid];
m15_13 -> m15_24  [key=0, style=solid];
m15_13 -> m15_26  [key=0, style=solid];
m15_13 -> m15_28  [key=0, style=solid];
m15_13 -> m15_30  [key=0, style=solid];
m15_13 -> m15_32  [key=0, style=solid];
m15_13 -> m15_34  [key=0, style=solid];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_10  [key=2, style=dotted];
m15_14 -> m15_19  [key=1, style=dashed, color=darkseagreen4, label=p];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_18  [key=1, style=dashed, color=darkseagreen4, label=l];
m15_15 -> m15_14  [key=3, color=darkorchid, style=bold, label="Local variable System.ComponentModel.IBindingList l"];
m15_15 -> m15_17  [key=0, style=solid];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_35  [key=0, style=solid];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_16  [key=3, color=darkorchid, style=bold, label="Local variable System.ComponentModel.ListChangedType? listChangedType"];
m15_16 -> m15_35  [key=0, style=solid];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_24  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.ListChangedEventArgs"];
m15_18 -> m15_25  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.ListChangedEventArgs"];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_16  [key=3, color=darkorchid, style=bold, label="Local variable int? index"];
m15_17 -> m15_35  [key=0, style=solid];
m15_17 -> m15_36  [key=2, style=dotted];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_12  [key=2, style=dotted];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_12  [key=2, style=dotted];
m15_21 -> m15_35  [key=0, style=solid];
m15_22 -> m15_13  [key=0, style=bold, color=blue];
m15_22 -> m15_23  [key=0, style=solid];
m15_83 -> m15_84  [key=0, style=solid];
m15_83 -> m15_139  [key=0, style=solid];
m15_83 -> m15_38  [key=2, style=dotted];
m15_84 -> m15_85  [key=0, style=solid];
m15_84 -> m15_91  [key=2, style=dotted];
m15_84 -> m15_87  [key=1, style=dashed, color=darkseagreen4, label=v];
m15_84 -> m15_89  [key=1, style=dashed, color=darkseagreen4, label=v];
m15_85 -> m15_86  [key=0, style=solid];
m15_85 -> m15_92  [key=2, style=dotted];
m15_85 -> m15_88  [key=1, style=dashed, color=darkseagreen4, label=p1];
m15_85 -> m15_87  [key=0, style=solid];
m15_87 -> m15_88  [key=0, style=solid];
m15_87 -> m15_93  [key=2, style=dotted];
m15_87 -> m15_12  [key=2, style=dotted];
m15_87 -> m15_89  [key=0, style=solid];
m15_87 -> m15_141  [key=2, style=dotted];
m15_87 -> m15_142  [key=2, style=dotted];
m15_89 -> m15_90  [key=0, style=solid];
m15_89 -> m15_94  [key=2, style=dotted];
m15_89 -> m15_12  [key=2, style=dotted];
m15_89 -> m15_91  [key=0, style=solid];
m15_89 -> m15_144  [key=2, style=dotted];
m15_86 -> m15_87  [key=0, style=solid];
m15_86 -> m15_85  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.IList l1"];
m15_86 -> m15_140  [key=2, style=dotted];
m15_88 -> m15_89  [key=0, style=solid];
m15_88 -> m15_85  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken> l2"];
m15_88 -> m15_139  [key=0, style=solid];
m15_88 -> m15_143  [key=2, style=dotted];
m15_90 -> m15_83  [key=0, style=bold, color=blue];
m15_90 -> m15_139  [key=0, style=solid];
m15_90 -> m15_145  [key=2, style=dotted];
m15_144 -> m15_48  [key=1, style=dashed, color=darkseagreen4, label=l];
m15_74 -> m15_69  [key=0, style=bold, color=blue];
m15_207 -> m15_224  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m15_207 -> m15_208  [key=0, style=solid];
m15_207 -> m15_209  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_207 -> m15_210  [key=1, style=dashed, color=darkseagreen4, label=IXmlDocument];
m15_207 -> m15_211  [key=1, style=dashed, color=darkseagreen4, label=IXmlNode];
m15_207 -> m15_214  [key=1, style=dashed, color=darkseagreen4, label=IXmlDocument];
m15_207 -> m15_216  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_207 -> m15_217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_207 -> m15_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_207 -> m15_219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_207 -> m15_220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_207 -> m15_221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_207 -> m15_222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_207 -> m15_223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_207 -> m15_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_207 -> m15_226  [key=1, style=dashed, color=darkseagreen4, label=IXmlDocument];
m15_207 -> m15_227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_207 -> m15_228  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_207 -> m15_229  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m15_207 -> m15_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_207 -> m15_231  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m15_224 -> m15_225  [key=0, style=solid, color=green];
m15_224 -> m15_227  [key=0, style=solid, color=green];
m15_222 -> m15_224  [key=0, style=solid, color=green];
m15_222 -> m15_223  [key=0, style=solid];
m15_225 -> m15_226  [key=0, style=solid];
m15_227 -> m15_228  [key=0, style=solid];
m15_227 -> m15_232  [key=0, style=solid];
m15_208 -> m15_233  [key=2, style=dotted];
m15_208 -> m15_209  [key=0, style=solid];
m15_208 -> m15_212  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m15_209 -> m15_210  [key=0, style=solid];
m15_209 -> m15_234  [key=2, style=dotted];
m15_210 -> m15_211  [key=0, style=solid];
m15_210 -> m15_235  [key=2, style=dotted];
m15_210 -> m15_215  [key=1, style=dashed, color=darkseagreen4, label=element];
m15_210 -> m15_217  [key=1, style=dashed, color=darkseagreen4, label=element];
m15_210 -> m15_219  [key=1, style=dashed, color=darkseagreen4, label=element];
m15_210 -> m15_221  [key=1, style=dashed, color=darkseagreen4, label=element];
m15_210 -> m15_223  [key=1, style=dashed, color=darkseagreen4, label=element];
m15_210 -> m15_226  [key=1, style=dashed, color=darkseagreen4, label=element];
m15_210 -> m15_230  [key=1, style=dashed, color=darkseagreen4, label=element];
m15_211 -> m15_212  [key=0, style=solid];
m15_211 -> m15_201  [key=2, style=dotted];
m15_214 -> m15_214  [key=1, style=dashed, color=darkseagreen4, label=nameValue];
m15_214 -> m15_215  [key=0, style=solid];
m15_214 -> m15_178  [key=2, style=dotted];
m15_214 -> m15_236  [key=2, style=dotted];
m15_214 -> m15_237  [key=2, style=dotted];
m15_216 -> m15_217  [key=0, style=solid];
m15_216 -> m15_218  [key=0, style=solid];
m15_217 -> m15_232  [key=0, style=solid];
m15_217 -> m15_199  [key=2, style=dotted];
m15_217 -> m15_200  [key=2, style=dotted];
m15_217 -> m15_201  [key=2, style=dotted];
m15_218 -> m15_219  [key=0, style=solid];
m15_218 -> m15_220  [key=0, style=solid];
m15_219 -> m15_232  [key=0, style=solid];
m15_219 -> m15_239  [key=2, style=dotted];
m15_219 -> m15_200  [key=2, style=dotted];
m15_219 -> m15_201  [key=2, style=dotted];
m15_220 -> m15_222  [key=0, style=solid];
m15_220 -> m15_221  [key=0, style=solid];
m15_221 -> m15_232  [key=0, style=solid];
m15_221 -> m15_239  [key=2, style=dotted];
m15_221 -> m15_200  [key=2, style=dotted];
m15_221 -> m15_201  [key=2, style=dotted];
m15_223 -> m15_232  [key=0, style=solid];
m15_223 -> m15_239  [key=2, style=dotted];
m15_223 -> m15_200  [key=2, style=dotted];
m15_223 -> m15_201  [key=2, style=dotted];
m15_226 -> m15_232  [key=0, style=solid];
m15_226 -> m15_240  [key=2, style=dotted];
m15_226 -> m15_239  [key=2, style=dotted];
m15_226 -> m15_200  [key=2, style=dotted];
m15_226 -> m15_201  [key=2, style=dotted];
m15_228 -> m15_232  [key=0, style=solid];
m15_228 -> m15_229  [key=0, style=solid];
m15_229 -> m15_230  [key=0, style=solid];
m15_229 -> m15_241  [key=2, style=dotted];
m15_230 -> m15_231  [key=0, style=solid];
m15_230 -> m15_181  [key=2, style=dotted];
m15_231 -> m15_232  [key=0, style=solid];
m15_231 -> m15_242  [key=2, style=dotted];
m15_212 -> m15_216  [key=0, style=solid];
m15_212 -> m15_213  [key=0, style=solid];
m15_215 -> m15_212  [key=0, style=solid];
m15_215 -> m15_238  [key=2, style=dotted];
m15_213 -> m15_214  [key=0, style=solid];
m15_213 -> m15_234  [key=2, style=dotted];
m15_213 -> m15_213  [key=1, style=dashed, color=darkseagreen4, label=nameValue];
m15_232 -> m15_207  [key=0, style=bold, color=blue];
m15_92 -> m15_93  [key=0, style=solid];
m15_92 -> m15_146  [key=2, style=dotted];
m15_92 -> m15_147  [key=2, style=dotted];
m15_92 -> m15_149  [key=2, style=dotted];
m15_92 -> m15_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_38 -> m15_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_38 -> m15_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_38 -> m15_39  [key=0, style=solid];
m15_38 -> m15_10  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m15_38 -> m15_42  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_38 -> m15_41  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_38 -> m15_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_38 -> m15_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_38 -> m15_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_43 -> m15_44  [key=0, style=solid];
m15_43 -> m15_12  [key=2, style=dotted];
m15_43 -> m15_45  [key=1, style=dashed, color=darkseagreen4, label=nodeName];
m15_43 -> m15_47  [key=1, style=dashed, color=darkseagreen4, label=nodeName];
m15_43 -> m15_10  [key=2, style=dotted];
m15_61 -> m15_50  [key=0, style=solid];
m15_61 -> m15_10  [key=2, style=dotted];
m15_61 -> m15_62  [key=0, style=solid];
m15_67 -> m15_68  [key=0, style=solid];
m15_67 -> m15_10  [key=2, style=dotted];
m15_67 -> m15_65  [key=0, style=bold, color=blue];
m15_39 -> m15_71  [key=2, style=dotted];
m15_39 -> m15_40  [key=0, style=solid];
m15_39 -> m15_45  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
m15_39 -> m15_47  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
m15_39 -> m15_50  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
m15_39 -> m15_41  [key=2, style=dotted];
m15_42 -> m15_43  [key=0, style=solid];
m15_42 -> m15_48  [key=1, style=dashed, color=darkseagreen4, label=childNode];
m15_44 -> m15_45  [key=0, style=solid];
m15_44 -> m15_48  [key=1, style=dashed, color=darkseagreen4, label=l];
m15_44 -> m15_43  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.IList l"];
m15_45 -> m15_46  [key=0, style=solid];
m15_45 -> m15_48  [key=0, style=solid];
m15_45 -> m15_72  [key=2, style=dotted];
m15_45 -> m15_37  [key=2, style=dotted];
m15_45 -> m15_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_47 -> m15_74  [key=2, style=dotted];
m15_47 -> m15_48  [key=0, style=solid];
m15_60 -> m15_61  [key=0, style=solid];
m15_60 -> m15_62  [key=0, style=solid];
m15_50 -> m15_51  [key=0, style=solid];
m15_50 -> m15_70  [key=0, style=solid];
m15_66 -> m15_67  [key=0, style=solid];
m15_66 -> m15_69  [key=0, style=solid];
m15_66 -> m15_41  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m15_66 -> m15_68  [key=2, style=dotted];
m15_65 -> m15_67  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_65 -> m15_66  [key=0, style=solid];
m15_65 -> m15_68  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_40 -> m15_42  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_40 -> m15_41  [key=0, style=solid];
m15_40 -> m15_49  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_40 -> m15_38  [key=0, style=bold, color=blue];
m15_41 -> m15_42  [key=0, style=solid];
m15_41 -> m15_50  [key=0, style=solid];
m15_41 -> m15_41  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m15_48 -> m15_49  [key=0, style=solid];
m15_48 -> m15_75  [key=2, style=dotted];
m15_48 -> m15_50  [key=2, style=dotted];
m15_46 -> m15_47  [key=0, style=solid];
m15_46 -> m15_48  [key=1, style=dashed, color=darkseagreen4, label=nodes];
m15_46 -> m15_73  [key=2, style=dotted];
m15_46 -> m15_42  [key=0, style=bold, color=blue];
m15_63 -> m15_77  [key=2, style=dotted];
m15_63 -> m15_64  [key=0, style=solid];
m15_63 -> m15_37  [key=2, style=dotted];
m15_63 -> m15_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_64 -> m15_65  [key=0, style=solid];
m15_64 -> m15_78  [key=2, style=dotted];
m15_64 -> m15_60  [key=0, style=bold, color=blue];
m15_69 -> m15_50  [key=0, style=solid];
m15_69 -> m15_79  [key=2, style=dotted];
m15_69 -> m15_70  [key=0, style=solid];
m15_62 -> m15_63  [key=0, style=solid];
m15_62 -> m15_62  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m15_62 -> m15_66  [key=1, style=dashed, color=darkseagreen4, label=l];
m15_62 -> m15_61  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.IList l"];
m15_59 -> m15_60  [key=0, style=solid];
m15_57 -> m15_60  [key=0, style=solid];
m15_57 -> m15_76  [key=2, style=dotted];
m15_57 -> m15_58  [key=0, style=solid];
m15_57 -> m15_59  [key=2, style=dotted];
m15_58 -> m15_60  [key=0, style=solid];
m15_58 -> m15_56  [key=0, style=bold, color=blue];
m15_49 -> m15_41  [key=0, style=solid];
m15_49 -> m15_49  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_49 -> m15_47  [key=0, style=bold, color=blue];
m15_56 -> m15_57  [key=0, style=solid];
m15_56 -> m15_58  [key=0, style=solid];
m15_70 -> m15_38  [key=0, style=bold, color=blue];
m15_70 -> m15_71  [key=0, style=solid];
m15_70 -> m15_10  [key=2, style=dotted];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_12  [key=2, style=dotted];
m15_145 -> m15_57  [key=1, style=dashed, color=darkseagreen4, label=p];
m15_143 -> m15_39  [key=1, style=dashed, color=darkseagreen4, label=l];
m15_120 -> m15_139  [key=0, style=solid];
m15_95 -> m15_96  [key=0, style=solid];
m15_95 -> m15_97  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_95 -> m15_98  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_96 -> m15_97  [key=0, style=solid];
m15_96 -> m15_91  [key=2, style=dotted];
m15_96 -> m15_98  [key=1, style=dashed, color=darkseagreen4, label=v];
m15_96 -> m15_99  [key=0, style=solid];
m15_96 -> m15_41  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m15_97 -> m15_98  [key=0, style=solid];
m15_97 -> m15_92  [key=2, style=dotted];
m15_97 -> m15_99  [key=1, style=dashed, color=darkseagreen4, label=p];
m15_97 -> m15_152  [key=2, style=dotted];
m15_98 -> m15_99  [key=0, style=solid];
m15_98 -> m15_101  [key=2, style=dotted];
m15_98 -> m15_12  [key=2, style=dotted];
m15_98 -> m15_96  [key=0, style=solid];
m15_98 -> m15_98  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_99 -> m15_100  [key=0, style=solid];
m15_99 -> m15_91  [key=2, style=dotted];
m15_99 -> m15_101  [key=2, style=dotted];
m15_99 -> m15_12  [key=2, style=dotted];
m15_99 -> m15_139  [key=0, style=solid];
m15_99 -> m15_153  [key=2, style=dotted];
m15_100 -> m15_95  [key=0, style=bold, color=blue];
m15_100 -> m15_101  [key=0, style=solid];
m15_100 -> m15_9  [key=2, style=dotted];
m15_148 -> m15_140  [key=1, style=dashed, color=darkseagreen4, label=t];
m15_91 -> m15_92  [key=0, style=solid];
m15_91 -> m15_100  [key=0, style=solid];
m15_91 -> m15_146  [key=2, style=dotted];
m15_91 -> m15_147  [key=2, style=dotted];
m15_91 -> m15_148  [key=2, style=dotted];
m15_91 -> m15_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_146 -> m15_57  [key=1, style=dashed, color=darkseagreen4, label=l];
m15_318 -> m15_319  [key=0, style=solid];
m15_319 -> m15_235  [key=2, style=dotted];
m15_319 -> m15_178  [key=2, style=dotted];
m15_319 -> m15_236  [key=2, style=dotted];
m15_319 -> m15_320  [key=0, style=solid];
m15_320 -> m15_318  [key=0, style=bold, color=blue];
m15_10 -> m15_5  [key=3, color=darkorchid, style=bold, label="Parameter variable bool writePropertyName"];
m15_10 -> m15_67  [key=3, color=darkorchid, style=bold, label="Parameter variable bool writePropertyName"];
m15_10 -> m15_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_87  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_10 -> m15_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_0  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonWriter writer"];
m15_10 -> m15_1  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m15_10 -> m15_80  [key=0, style=solid];
m15_10 -> m15_85  [key=1, style=dashed, color=darkseagreen4, label=bool];
m15_10 -> m15_86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_89  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_10 -> m15_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_91  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_10 -> m15_92  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_10 -> m15_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_96  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_10 -> m15_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_102  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_10 -> m15_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_108  [key=1, style=dashed, color=darkseagreen4, label=bool];
m15_10 -> m15_109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_116  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_10 -> m15_118  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_10 -> m15_119  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_10 -> m15_121  [key=1, style=dashed, color=darkseagreen4, label=bool];
m15_10 -> m15_123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_125  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_10 -> m15_127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_133  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_10 -> m15_138  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_10 -> m15_38  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonWriter writer"];
m15_122 -> m15_123  [key=0, style=solid];
m15_122 -> m15_12  [key=2, style=dotted];
m15_122 -> m15_77  [key=2, style=dotted];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_0 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_0 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_10  [key=2, style=dotted];
m15_1 -> m15_3  [key=1, style=dashed, color=darkseagreen4, label=p];
m15_1 -> m15_4  [key=1, style=dashed, color=darkseagreen4, label=p];
m15_1 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label=node];
m15_1 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label=p];
m15_1 -> m15_7  [key=1, style=dashed, color=darkseagreen4, label=p];
m15_1 -> m15_8  [key=1, style=dashed, color=darkseagreen4, label=p];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_11  [key=2, style=dotted];
m15_2 -> m15_4  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_12  [key=2, style=dotted];
m15_3 -> m15_7  [key=0, style=solid];
m15_3 -> m15_8  [key=2, style=dotted];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_12  [key=2, style=dotted];
m15_4 -> m15_9  [key=2, style=dotted];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_10  [key=2, style=dotted];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_11  [key=2, style=dotted];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_12  [key=2, style=dotted];
m15_7 -> m15_0  [key=0, style=bold, color=blue];
m15_9 -> m15_0  [key=0, style=bold, color=blue];
m15_162 -> m15_170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_162 -> m15_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_162 -> m15_167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_162 -> m15_171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_162 -> m15_163  [key=0, style=solid];
m15_162 -> m15_165  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m15_169 -> m15_178  [key=2, style=dotted];
m15_169 -> m15_170  [key=0, style=solid];
m15_169 -> m15_171  [key=0, style=solid];
m15_170 -> m15_173  [key=0, style=solid];
m15_170 -> m15_179  [key=2, style=dotted];
m15_172 -> m15_181  [key=2, style=dotted];
m15_172 -> m15_173  [key=0, style=solid];
m15_164 -> m15_175  [key=2, style=dotted];
m15_164 -> m15_174  [key=0, style=solid];
m15_168 -> m15_175  [key=2, style=dotted];
m15_168 -> m15_174  [key=0, style=solid];
m15_167 -> m15_169  [key=0, style=solid];
m15_167 -> m15_168  [key=0, style=solid];
m15_171 -> m15_172  [key=0, style=solid];
m15_171 -> m15_122  [key=2, style=dotted];
m15_165 -> m15_170  [key=1, style=dashed, color=darkseagreen4, label=document];
m15_165 -> m15_172  [key=1, style=dashed, color=darkseagreen4, label=document];
m15_165 -> m15_166  [key=0, style=solid];
m15_165 -> m15_176  [key=2, style=dotted];
m15_165 -> m15_173  [key=1, style=dashed, color=darkseagreen4, label=document];
m15_166 -> m15_170  [key=1, style=dashed, color=darkseagreen4, label=manager];
m15_166 -> m15_172  [key=1, style=dashed, color=darkseagreen4, label=manager];
m15_166 -> m15_167  [key=0, style=solid];
m15_166 -> m15_177  [key=2, style=dotted];
m15_173 -> m15_174  [key=0, style=solid];
m15_163 -> m15_164  [key=0, style=solid];
m15_163 -> m15_165  [key=0, style=solid];
m15_174 -> m15_162  [key=0, style=bold, color=blue];
m15_141 -> m15_139  [key=0, style=bold, color=blue];
m15_102 -> m15_103  [key=0, style=solid];
m15_102 -> m15_105  [key=0, style=solid];
m15_102 -> m15_41  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m15_103 -> m15_104  [key=0, style=solid];
m15_103 -> m15_120  [key=2, style=dotted];
m15_103 -> m15_121  [key=2, style=dotted];
m15_103 -> m15_105  [key=1, style=dashed, color=darkseagreen4, label=reader];
m15_103 -> m15_106  [key=1, style=dashed, color=darkseagreen4, label=reader];
m15_103 -> m15_107  [key=1, style=dashed, color=darkseagreen4, label=reader];
m15_103 -> m15_110  [key=1, style=dashed, color=darkseagreen4, label=reader];
m15_103 -> m15_152  [key=2, style=dotted];
m15_104 -> m15_105  [key=0, style=solid];
m15_104 -> m15_122  [key=2, style=dotted];
m15_104 -> m15_102  [key=0, style=solid];
m15_104 -> m15_104  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_105 -> m15_106  [key=0, style=solid];
m15_105 -> m15_12  [key=2, style=dotted];
m15_105 -> m15_38  [key=2, style=dotted];
m15_106 -> m15_107  [key=0, style=solid];
m15_106 -> m15_122  [key=2, style=dotted];
m15_106 -> m15_139  [key=0, style=solid];
m15_106 -> m15_11  [key=2, style=dotted];
m15_107 -> m15_108  [key=0, style=solid];
m15_107 -> m15_123  [key=2, style=dotted];
m15_107 -> m15_109  [key=1, style=dashed, color=darkseagreen4, label=property];
m15_110 -> m15_111  [key=0, style=solid];
m15_110 -> m15_12  [key=2, style=dotted];
m15_108 -> m15_109  [key=0, style=solid];
m15_108 -> m15_12  [key=2, style=dotted];
m15_108 -> m15_139  [key=0, style=solid];
m15_109 -> m15_110  [key=0, style=solid];
m15_109 -> m15_124  [key=2, style=dotted];
m15_109 -> m15_82  [key=2, style=dotted];
m15_109 -> m15_125  [key=2, style=dotted];
m15_109 -> m15_139  [key=0, style=solid];
m15_109 -> m15_154  [key=2, style=dotted];
m15_111 -> m15_112  [key=0, style=solid];
m15_111 -> m15_120  [key=2, style=dotted];
m15_111 -> m15_121  [key=2, style=dotted];
m15_111 -> m15_113  [key=1, style=dashed, color=darkseagreen4, label=reader];
m15_111 -> m15_114  [key=1, style=dashed, color=darkseagreen4, label=reader];
m15_111 -> m15_115  [key=1, style=dashed, color=darkseagreen4, label=reader];
m15_111 -> m15_118  [key=1, style=dashed, color=darkseagreen4, label=reader];
m15_112 -> m15_113  [key=0, style=solid];
m15_112 -> m15_122  [key=2, style=dotted];
m15_113 -> m15_114  [key=0, style=solid];
m15_113 -> m15_12  [key=2, style=dotted];
m15_114 -> m15_115  [key=0, style=solid];
m15_114 -> m15_122  [key=2, style=dotted];
m15_115 -> m15_116  [key=0, style=solid];
m15_115 -> m15_123  [key=2, style=dotted];
m15_115 -> m15_117  [key=1, style=dashed, color=darkseagreen4, label=property];
m15_118 -> m15_119  [key=0, style=solid];
m15_118 -> m15_12  [key=2, style=dotted];
m15_118 -> m15_121  [key=0, style=solid];
m15_116 -> m15_117  [key=0, style=solid];
m15_116 -> m15_12  [key=2, style=dotted];
m15_116 -> m15_118  [key=0, style=solid];
m15_117 -> m15_118  [key=0, style=solid];
m15_117 -> m15_126  [key=2, style=dotted];
m15_117 -> m15_82  [key=2, style=dotted];
m15_117 -> m15_125  [key=2, style=dotted];
m15_117 -> m15_139  [key=0, style=solid];
m15_119 -> m15_102  [key=0, style=bold, color=blue];
m15_119 -> m15_121  [key=0, style=solid];
m15_119 -> m15_120  [key=0, style=solid];
m15_71 -> m15_72  [key=0, style=solid];
m15_71 -> m15_70  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.IList l"];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_35  [key=0, style=solid];
m15_28 -> m15_29  [key=0, style=solid];
m15_28 -> m15_10  [key=2, style=dotted];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_28  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.IList l"];
m15_29 -> m15_35  [key=0, style=solid];
m15_30 -> m15_31  [key=0, style=solid];
m15_30 -> m15_12  [key=2, style=dotted];
m15_31 -> m15_27  [key=0, style=bold, color=blue];
m15_31 -> m15_35  [key=0, style=solid];
m15_12 -> m15_10  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m15_12 -> m15_42  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode node"];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_12 -> m15_16  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_12 -> m15_17  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_12 -> m15_23  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_12 -> m15_25  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_12 -> m15_34  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m15_101 -> m15_103  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_101 -> m15_102  [key=0, style=solid];
m15_101 -> m15_104  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_77 -> m15_78  [key=0, style=solid];
m15_94 -> m15_95  [key=0, style=solid];
m15_94 -> m15_151  [key=2, style=dotted];
m15_290 -> m15_258  [key=3, color=darkorchid, style=bold, label="Parameter variable string attributeName"];
m15_290 -> m15_345  [key=0, style=solid];
m15_290 -> m15_346  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_290 -> m15_349  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_290 -> m15_350  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_290 -> m15_267  [key=3, color=darkorchid, style=bold, label="Parameter variable string prefix"];
m15_290 -> m15_5  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsNamespaceAttribute"];
m15_290 -> m15_67  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsNamespaceAttribute"];
m15_345 -> m15_346  [key=0, style=solid];
m15_345 -> m15_352  [key=0, style=solid];
m15_345 -> m15_355  [key=2, style=dotted];
m15_346 -> m15_347  [key=0, style=solid];
m15_346 -> m15_349  [key=0, style=solid];
m15_349 -> m15_350  [key=0, style=solid];
m15_349 -> m15_352  [key=0, style=solid];
m15_350 -> m15_351  [key=0, style=solid];
m15_350 -> m15_356  [key=2, style=dotted];
m15_352 -> m15_354  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m15_352 -> m15_353  [key=0, style=solid];
m15_348 -> m15_354  [key=0, style=solid];
m15_351 -> m15_354  [key=0, style=solid];
m15_353 -> m15_354  [key=0, style=solid];
m15_347 -> m15_348  [key=0, style=solid];
m15_354 -> m15_290  [key=0, style=bold, color=blue];
m15_79 -> m15_80  [key=0, style=solid];
m15_79 -> m15_10  [key=2, style=dotted];
m15_367 -> m15_368  [key=0, style=solid];
m15_24 -> m15_25  [key=0, style=solid];
m15_24 -> m15_20  [key=1, style=dashed, color=darkseagreen4, label=listChangedType];
m15_24 -> m15_26  [key=1, style=dashed, color=darkseagreen4, label=listChangedType];
m15_25 -> m15_26  [key=0, style=solid];
m15_25 -> m15_21  [key=1, style=dashed, color=darkseagreen4, label=index];
m15_25 -> m15_35  [key=0, style=solid];
m15_23 -> m15_24  [key=0, style=solid];
m15_23 -> m15_25  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.ListChangedEventArgs"];
m15_23 -> m15_35  [key=0, style=solid];
m15_26 -> m15_23  [key=0, style=bold, color=blue];
m15_26 -> m15_27  [key=0, style=solid];
m15_140 -> m15_141  [key=0, style=solid];
m15_140 -> m15_142  [key=2, style=dotted];
m15_139 -> m15_140  [key=0, style=solid];
m15_139 -> m15_10  [key=0, style=bold, color=blue];
m15_155 -> m15_156  [key=0, style=solid];
m15_159 -> m15_160  [key=0, style=solid];
m15_157 -> m15_155  [key=0, style=bold, color=blue];
m15_156 -> m15_157  [key=0, style=solid];
m15_156 -> m15_158  [key=2, style=dotted];
m15_161 -> m15_159  [key=0, style=bold, color=blue];
m15_160 -> m15_161  [key=0, style=solid];
m15_160 -> m15_158  [key=2, style=dotted];
m15_368 -> m15_369  [key=0, style=solid];
m15_369 -> m15_367  [key=0, style=bold, color=blue];
m15_78 -> m15_79  [key=0, style=solid];
m15_78 -> m15_10  [key=2, style=dotted];
m15_78 -> m15_80  [key=1, style=dashed, color=darkseagreen4, label=p1];
m15_80 -> m15_81  [key=0, style=solid];
m15_80 -> m15_82  [key=2, style=dotted];
m15_80 -> m15_12  [key=2, style=dotted];
m15_80 -> m15_84  [key=0, style=solid];
m15_80 -> m15_107  [key=0, style=solid];
m15_80 -> m15_110  [key=0, style=solid];
m15_80 -> m15_124  [key=0, style=solid];
m15_80 -> m15_138  [key=0, style=solid];
m15_81 -> m15_77  [key=0, style=bold, color=blue];
m15_81 -> m15_82  [key=0, style=solid];
m15_72 -> m15_73  [key=0, style=solid];
m15_72 -> m15_75  [key=2, style=dotted];
m15_72 -> m15_76  [key=2, style=dotted];
m15_121 -> m15_122  [key=0, style=solid];
m15_121 -> m15_123  [key=0, style=solid];
m15_73 -> m15_74  [key=0, style=solid];
m15_73 -> m15_12  [key=2, style=dotted];
m15_134 -> m15_135  [key=0, style=solid];
m15_134 -> m15_137  [key=0, style=solid];
m15_134 -> m15_144  [key=2, style=dotted];
m15_93 -> m15_94  [key=0, style=solid];
m15_93 -> m15_150  [key=2, style=dotted];
m15_123 -> m15_139  [key=0, style=solid];
m15_123 -> m15_143  [key=2, style=dotted];
m15_364 -> m15_365  [key=0, style=solid];
m15_365 -> m15_146  [key=2, style=dotted];
m15_365 -> m15_147  [key=2, style=dotted];
m15_365 -> m15_366  [key=0, style=solid];
m15_365 -> m15_367  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_366 -> m15_364  [key=0, style=bold, color=blue];
m15_321 -> m15_330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_321 -> m15_331  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_321 -> m15_335  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_321 -> m15_337  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_321 -> m15_326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_321 -> m15_333  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_321 -> m15_341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_321 -> m15_322  [key=0, style=solid];
m15_321 -> m15_324  [key=1, style=dashed, color=darkseagreen4, label=XmlDocument];
m15_321 -> m15_327  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_321 -> m15_328  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_321 -> m15_329  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_321 -> m15_334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_321 -> m15_342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_330 -> m15_329  [key=0, style=solid];
m15_330 -> m15_182  [key=2, style=dotted];
m15_331 -> m15_342  [key=0, style=solid];
m15_331 -> m15_182  [key=2, style=dotted];
m15_335 -> m15_334  [key=0, style=solid];
m15_335 -> m15_182  [key=2, style=dotted];
m15_337 -> m15_201  [key=2, style=dotted];
m15_337 -> m15_342  [key=0, style=solid];
m15_337 -> m15_344  [key=2, style=dotted];
m15_326 -> m15_199  [key=2, style=dotted];
m15_326 -> m15_330  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m15_326 -> m15_331  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m15_326 -> m15_327  [key=0, style=solid];
m15_333 -> m15_199  [key=2, style=dotted];
m15_333 -> m15_335  [key=1, style=dashed, color=darkseagreen4, label=constructorName];
m15_333 -> m15_334  [key=0, style=solid];
m15_341 -> m15_175  [key=2, style=dotted];
m15_341 -> m15_343  [key=0, style=solid];
m15_325 -> m15_175  [key=2, style=dotted];
m15_325 -> m15_343  [key=0, style=solid];
m15_329 -> m15_330  [key=0, style=solid];
m15_329 -> m15_342  [key=0, style=solid];
m15_329 -> m15_122  [key=2, style=dotted];
m15_328 -> m15_331  [key=0, style=solid];
m15_328 -> m15_329  [key=0, style=solid];
m15_342 -> m15_321  [key=0, style=solid];
m15_342 -> m15_343  [key=0, style=solid];
m15_342 -> m15_122  [key=2, style=dotted];
m15_334 -> m15_335  [key=0, style=solid];
m15_334 -> m15_342  [key=0, style=solid];
m15_334 -> m15_122  [key=2, style=dotted];
m15_336 -> m15_337  [key=0, style=solid];
m15_324 -> m15_326  [key=0, style=solid];
m15_324 -> m15_325  [key=0, style=solid];
m15_327 -> m15_328  [key=0, style=solid];
m15_327 -> m15_122  [key=2, style=dotted];
m15_332 -> m15_333  [key=0, style=solid];
m15_322 -> m15_341  [key=0, style=solid];
m15_322 -> m15_336  [key=0, style=solid];
m15_322 -> m15_332  [key=0, style=solid];
m15_322 -> m15_323  [key=0, style=solid];
m15_322 -> m15_338  [key=0, style=solid];
m15_323 -> m15_324  [key=0, style=solid];
m15_338 -> m15_339  [key=0, style=solid];
m15_340 -> m15_343  [key=0, style=solid];
m15_339 -> m15_340  [key=0, style=solid];
m15_343 -> m15_321  [key=0, style=bold, color=blue];
m15_182 -> m15_193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_182 -> m15_195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_182 -> m15_197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_182 -> m15_185  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_182 -> m15_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_182 -> m15_189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_182 -> m15_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_182 -> m15_192  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_182 -> m15_326  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
m15_182 -> m15_183  [key=0, style=solid];
m15_182 -> m15_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_182 -> m15_321  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNode currentNode"];
m15_193 -> m15_198  [key=0, style=solid];
m15_193 -> m15_205  [key=2, style=dotted];
m15_195 -> m15_196  [key=0, style=solid];
m15_195 -> m15_206  [key=2, style=dotted];
m15_197 -> m15_198  [key=0, style=solid];
m15_197 -> m15_179  [key=2, style=dotted];
m15_185 -> m15_201  [key=2, style=dotted];
m15_185 -> m15_199  [key=2, style=dotted];
m15_185 -> m15_200  [key=2, style=dotted];
m15_185 -> m15_198  [key=0, style=solid];
m15_187 -> m15_201  [key=2, style=dotted];
m15_187 -> m15_199  [key=2, style=dotted];
m15_187 -> m15_198  [key=0, style=solid];
m15_187 -> m15_202  [key=2, style=dotted];
m15_189 -> m15_201  [key=2, style=dotted];
m15_189 -> m15_199  [key=2, style=dotted];
m15_189 -> m15_198  [key=0, style=solid];
m15_189 -> m15_203  [key=2, style=dotted];
m15_191 -> m15_201  [key=2, style=dotted];
m15_191 -> m15_199  [key=2, style=dotted];
m15_191 -> m15_198  [key=0, style=solid];
m15_191 -> m15_204  [key=2, style=dotted];
m15_192 -> m15_178  [key=2, style=dotted];
m15_192 -> m15_193  [key=0, style=solid];
m15_192 -> m15_194  [key=0, style=solid];
m15_194 -> m15_195  [key=0, style=solid];
m15_194 -> m15_197  [key=0, style=solid];
m15_196 -> m15_198  [key=0, style=solid];
m15_184 -> m15_185  [key=0, style=solid];
m15_186 -> m15_187  [key=0, style=solid];
m15_188 -> m15_189  [key=0, style=solid];
m15_190 -> m15_191  [key=0, style=solid];
m15_183 -> m15_192  [key=0, style=solid];
m15_183 -> m15_184  [key=0, style=solid];
m15_183 -> m15_186  [key=0, style=solid];
m15_183 -> m15_188  [key=0, style=solid];
m15_183 -> m15_190  [key=0, style=solid];
m15_198 -> m15_182  [key=0, style=bold, color=blue];
m15_357 -> m15_361  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_357 -> m15_358  [key=0, style=solid];
m15_357 -> m15_359  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_361 -> m15_356  [key=2, style=dotted];
m15_361 -> m15_362  [key=0, style=solid];
m15_358 -> m15_361  [key=1, style=dashed, color=darkseagreen4, label=colonPosition];
m15_358 -> m15_359  [key=0, style=solid];
m15_358 -> m15_363  [key=2, style=dotted];
m15_359 -> m15_361  [key=0, style=solid];
m15_359 -> m15_360  [key=0, style=solid];
m15_360 -> m15_362  [key=0, style=solid];
m15_362 -> m15_357  [key=0, style=bold, color=blue];
m15_243 -> m15_245  [key=1, style=dashed, color=darkseagreen4, label=IXmlDocument];
m15_243 -> m15_248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_243 -> m15_244  [key=0, style=solid];
m15_243 -> m15_246  [key=1, style=dashed, color=darkseagreen4, label=IXmlNode];
m15_243 -> m15_247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_245 -> m15_235  [key=2, style=dotted];
m15_245 -> m15_246  [key=0, style=solid];
m15_245 -> m15_248  [key=1, style=dashed, color=darkseagreen4, label=nestedArrayElement];
m15_248 -> m15_247  [key=0, style=solid];
m15_248 -> m15_250  [key=2, style=dotted];
m15_244 -> m15_234  [key=2, style=dotted];
m15_244 -> m15_245  [key=0, style=solid];
m15_246 -> m15_201  [key=2, style=dotted];
m15_246 -> m15_247  [key=0, style=solid];
m15_247 -> m15_248  [key=0, style=solid];
m15_247 -> m15_249  [key=0, style=solid];
m15_247 -> m15_122  [key=2, style=dotted];
m15_249 -> m15_243  [key=0, style=bold, color=blue];
m15_126 -> m15_127  [key=0, style=solid];
m15_126 -> m15_12  [key=2, style=dotted];
m15_126 -> m15_77  [key=2, style=dotted];
m15_233 -> m15_207  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
m15_233 -> m15_251  [key=0, style=solid];
m15_233 -> m15_254  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_233 -> m15_255  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_233 -> m15_256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_233 -> m15_258  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_233 -> m15_264  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_233 -> m15_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_233 -> m15_269  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m15_233 -> m15_272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_233 -> m15_273  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_233 -> m15_274  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m15_233 -> m15_277  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m15_233 -> m15_281  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m15_233 -> m15_286  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m15_251 -> m15_252  [key=0, style=solid];
m15_251 -> m15_71  [key=2, style=dotted];
m15_251 -> m15_266  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m15_251 -> m15_280  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m15_251 -> m15_282  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m15_251 -> m15_287  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m15_254 -> m15_255  [key=0, style=solid];
m15_254 -> m15_287  [key=0, style=solid];
m15_255 -> m15_256  [key=0, style=solid];
m15_255 -> m15_287  [key=0, style=solid];
m15_255 -> m15_122  [key=2, style=dotted];
m15_256 -> m15_257  [key=0, style=solid];
m15_256 -> m15_284  [key=0, style=solid];
m15_256 -> m15_286  [key=0, style=solid];
m15_258 -> m15_259  [key=0, style=solid];
m15_258 -> m15_199  [key=2, style=dotted];
m15_258 -> m15_260  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m15_258 -> m15_263  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m15_264 -> m15_265  [key=0, style=solid];
m15_264 -> m15_122  [key=2, style=dotted];
m15_265 -> m15_266  [key=0, style=solid];
m15_265 -> m15_199  [key=2, style=dotted];
m15_265 -> m15_269  [key=1, style=dashed, color=darkseagreen4, label=attributeValue];
m15_269 -> m15_255  [key=0, style=solid];
m15_269 -> m15_291  [key=2, style=dotted];
m15_272 -> m15_273  [key=0, style=solid];
m15_272 -> m15_122  [key=2, style=dotted];
m15_273 -> m15_274  [key=0, style=solid];
m15_273 -> m15_199  [key=2, style=dotted];
m15_273 -> m15_282  [key=1, style=dashed, color=darkseagreen4, label=attributeValue];
m15_274 -> m15_275  [key=0, style=solid];
m15_274 -> m15_292  [key=2, style=dotted];
m15_274 -> m15_282  [key=1, style=dashed, color=darkseagreen4, label=jsonPrefix];
m15_277 -> m15_278  [key=0, style=solid];
m15_277 -> m15_279  [key=0, style=solid];
m15_277 -> m15_236  [key=2, style=dotted];
m15_281 -> m15_282  [key=0, style=solid];
m15_281 -> m15_291  [key=2, style=dotted];
m15_286 -> m15_288  [key=0, style=solid];
m15_286 -> m15_175  [key=2, style=dotted];
m15_287 -> m15_288  [key=0, style=solid];
m15_252 -> m15_255  [key=1, style=dashed, color=darkseagreen4, label=finishedAttributes];
m15_252 -> m15_253  [key=0, style=solid];
m15_252 -> m15_67  [key=3, color=darkorchid, style=bold, label="Local variable bool finishedAttributes"];
m15_266 -> m15_267  [key=0, style=solid];
m15_266 -> m15_74  [key=2, style=dotted];
m15_280 -> m15_281  [key=0, style=solid];
m15_280 -> m15_74  [key=2, style=dotted];
m15_282 -> m15_255  [key=0, style=solid];
m15_282 -> m15_74  [key=2, style=dotted];
m15_253 -> m15_254  [key=0, style=solid];
m15_253 -> m15_255  [key=1, style=dashed, color=darkseagreen4, label=finishedElement];
m15_253 -> m15_67  [key=3, color=darkorchid, style=bold, label="Local variable bool finishedElement"];
m15_283 -> m15_255  [key=0, style=solid];
m15_268 -> m15_255  [key=0, style=solid];
m15_268 -> m15_269  [key=0, style=solid];
m15_268 -> m15_290  [key=2, style=dotted];
m15_285 -> m15_255  [key=0, style=solid];
m15_257 -> m15_258  [key=0, style=solid];
m15_284 -> m15_285  [key=0, style=solid];
m15_259 -> m15_260  [key=0, style=solid];
m15_260 -> m15_261  [key=0, style=solid];
m15_263 -> m15_264  [key=0, style=solid];
m15_263 -> m15_266  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m15_263 -> m15_268  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m15_263 -> m15_263  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m15_263 -> m15_289  [key=2, style=dotted];
m15_263 -> m15_271  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m15_271 -> m15_272  [key=0, style=solid];
m15_271 -> m15_282  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m15_271 -> m15_271  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m15_271 -> m15_289  [key=2, style=dotted];
m15_275 -> m15_282  [key=0, style=solid];
m15_275 -> m15_276  [key=0, style=solid];
m15_276 -> m15_277  [key=0, style=solid];
m15_276 -> m15_276  [key=3, color=darkorchid, style=bold, label="Local variable int? i"];
m15_276 -> m15_278  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_276 -> m15_279  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_278 -> m15_277  [key=0, style=solid];
m15_278 -> m15_278  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_278 -> m15_293  [key=2, style=dotted];
m15_278 -> m15_279  [key=1, style=dashed, color=darkseagreen4, label=i];
m15_279 -> m15_281  [key=1, style=dashed, color=darkseagreen4, label=jsonPrefix];
m15_279 -> m15_280  [key=0, style=solid];
m15_279 -> m15_282  [key=1, style=dashed, color=darkseagreen4, label=jsonPrefix];
m15_267 -> m15_268  [key=0, style=solid];
m15_261 -> m15_283  [key=0, style=solid];
m15_261 -> m15_262  [key=0, style=solid];
m15_261 -> m15_270  [key=0, style=solid];
m15_262 -> m15_263  [key=0, style=solid];
m15_270 -> m15_271  [key=0, style=solid];
m15_288 -> m15_233  [key=0, style=bold, color=blue];
m15_82 -> m15_83  [key=0, style=solid];
m15_374 -> m15_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_268  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_331  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m15_374 -> m15_335  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m16_12 -> m16_13  [key=0, style=solid];
m16_13 -> m16_14  [key=0, style=solid];
m16_14 -> m16_12  [key=0, style=bold, color=blue];
m16_61 -> m16_62  [key=0, style=solid];
m16_61 -> m16_72  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_61 -> m16_64  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m16_61 -> m16_63  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.MethodInfo GetGenericMethod"];
m16_61 -> m16_66  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.MethodInfo GetGenericMethod"];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_68  [key=2, style=dotted];
m16_62 -> m16_69  [key=2, style=dotted];
m16_62 -> m16_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_64 -> m16_65  [key=0, style=solid];
m16_64 -> m16_63  [key=0, style=solid];
m16_64 -> m16_70  [key=2, style=dotted];
m16_63 -> m16_64  [key=0, style=solid];
m16_63 -> m16_66  [key=0, style=solid];
m16_63 -> m16_65  [key=1, style=dashed, color=darkseagreen4, label=method];
m16_66 -> m16_67  [key=0, style=solid];
m16_65 -> m16_67  [key=0, style=solid];
m16_67 -> m16_61  [key=0, style=bold, color=blue];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_58  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m16_56 -> m16_39  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AssignableToTypeName"];
m16_57 -> m16_58  [key=0, style=solid];
m16_58 -> m16_59  [key=0, style=solid];
m16_58 -> m16_60  [key=2, style=dotted];
m16_59 -> m16_56  [key=0, style=bold, color=blue];
m16_15 -> m16_16  [key=0, style=solid];
m16_16 -> m16_17  [key=0, style=solid];
m16_17 -> m16_15  [key=0, style=bold, color=blue];
m16_18 -> m16_19  [key=0, style=solid];
m16_19 -> m16_20  [key=0, style=solid];
m16_20 -> m16_18  [key=0, style=bold, color=blue];
m16_33 -> m16_34  [key=0, style=solid];
m16_34 -> m16_35  [key=0, style=solid];
m16_35 -> m16_33  [key=0, style=bold, color=blue];
m16_3 -> m16_4  [key=0, style=solid, color=green];
m16_3 -> m16_5  [key=0, style=solid, color=green];
m16_3 -> m16_11  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_9  [key=0, style=solid, color=green];
m16_5 -> m16_3  [key=0, style=bold, color=blue];
m16_5 -> m16_6  [key=0, style=solid, color=green];
m16_5 -> m16_12  [key=2, style=dotted, color=green];
m16_5 -> m16_13  [key=2, style=dotted, color=green];
m16_5 -> m16_7  [key=1, style=dashed, color=green, label=camelCaseName];
m16_5 -> m16_8  [key=1, style=dashed, color=green, label=camelCaseName];
m16_30 -> m16_31  [key=0, style=solid];
m16_31 -> m16_32  [key=0, style=solid];
m16_32 -> m16_30  [key=0, style=bold, color=blue];
m16_93 -> m16_94  [key=0, style=solid];
m16_93 -> m16_95  [key=0, style=bold, color=crimson];
m16_93 -> m16_97  [key=0, style=bold, color=crimson];
m16_94 -> m16_95  [key=0, style=solid];
m16_94 -> m16_98  [key=0, style=solid];
m16_94 -> m16_55  [key=2, style=dotted];
m16_94 -> m16_96  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_95 -> m16_96  [key=0, style=solid];
m16_97 -> m16_96  [key=0, style=solid];
m16_96 -> m16_97  [key=0, style=solid];
m16_96 -> m16_94  [key=0, style=solid];
m16_96 -> m16_55  [key=2, style=dotted];
m16_98 -> m16_93  [key=0, style=bold, color=blue];
m16_99 -> m16_100  [key=0, style=solid];
m16_99 -> m16_101  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m16_100 -> m16_101  [key=0, style=solid];
m16_100 -> m16_104  [key=2, style=dotted];
m16_100 -> m16_105  [key=2, style=dotted];
m16_100 -> m16_102  [key=1, style=dashed, color=red, label=allTypes];
m16_101 -> m16_102  [key=0, style=solid, color=red];
m16_101 -> m16_106  [key=2, style=dotted];
m16_102 -> m16_103  [key=0, style=solid, color=red];
m16_102 -> m16_68  [key=2, style=dotted, color=red];
m16_102 -> m16_102  [key=1, style=dashed, color=red, label=type];
m16_103 -> m16_99  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid, color=green];
m16_0 -> m16_2  [key=1, style=dashed, color=green, label=string];
m16_0 -> m16_4  [key=1, style=dashed, color=green, label=string];
m16_0 -> m16_5  [key=1, style=dashed, color=green, label=string];
m16_0 -> m16_6  [key=1, style=dashed, color=green, label=string];
m16_0 -> m16_7  [key=1, style=dashed, color=green, label=string];
m16_0 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_1 -> m16_2  [key=0, style=solid, color=green];
m16_1 -> m16_3  [key=0, style=solid, color=green];
m16_1 -> m16_10  [key=2, style=dotted, color=green];
m16_2 -> m16_9  [key=0, style=solid, color=green];
m16_2 -> m16_0  [key=0, style=bold, color=blue];
m16_6 -> m16_7  [key=0, style=solid, color=green];
m16_6 -> m16_8  [key=0, style=solid, color=green];
m16_7 -> m16_7  [key=1, style=dashed, color=green, label=camelCaseName];
m16_7 -> m16_8  [key=0, style=solid, color=green];
m16_7 -> m16_14  [key=2, style=dotted, color=green];
m16_8 -> m16_9  [key=0, style=solid, color=green];
m16_8 -> m16_6  [key=0, style=bold, color=blue];
m16_9 -> m16_0  [key=0, style=bold, color=blue];
m16_9 -> m16_10  [key=0, style=solid];
m16_24 -> m16_25  [key=0, style=solid];
m16_25 -> m16_26  [key=0, style=solid];
m16_26 -> m16_24  [key=0, style=bold, color=blue];
m16_36 -> m16_37  [key=0, style=solid];
m16_37 -> m16_38  [key=0, style=solid];
m16_38 -> m16_36  [key=0, style=bold, color=blue];
m16_21 -> m16_22  [key=0, style=solid];
m16_22 -> m16_23  [key=0, style=solid];
m16_23 -> m16_21  [key=0, style=bold, color=blue];
m16_11 -> m16_9  [key=0, style=bold, color=blue];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_42  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_39 -> m16_46  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m16_39 -> m16_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_39 -> m16_48  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m16_39 -> m16_39  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type match"];
m16_39 -> m16_57  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type match"];
m16_39 -> m16_44  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AssignableToTypeName"];
m16_39 -> m16_51  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AssignableToTypeName"];
m16_39 -> m16_56  [key=3, color=darkorchid, style=bold, label="Parameter variable string fullTypeName"];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_42  [key=1, style=dashed, color=darkseagreen4, label=current];
m16_40 -> m16_43  [key=1, style=dashed, color=darkseagreen4, label=current];
m16_40 -> m16_45  [key=1, style=dashed, color=darkseagreen4, label=current];
m16_40 -> m16_39  [key=3, color=darkorchid, style=bold, label="Local variable System.Type current"];
m16_40 -> m16_18  [key=3, color=darkorchid, style=bold, label="Local variable System.Type current"];
m16_42 -> m16_43  [key=0, style=solid];
m16_42 -> m16_45  [key=0, style=solid];
m16_42 -> m16_53  [key=2, style=dotted];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_50  [key=0, style=solid];
m16_46 -> m16_55  [key=2, style=dotted];
m16_47 -> m16_48  [key=0, style=solid];
m16_47 -> m16_46  [key=0, style=solid];
m16_47 -> m16_53  [key=2, style=dotted];
m16_48 -> m16_49  [key=0, style=solid];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_46  [key=0, style=solid];
m16_43 -> m16_44  [key=0, style=solid];
m16_45 -> m16_41  [key=0, style=solid];
m16_45 -> m16_54  [key=2, style=dotted];
m16_45 -> m16_45  [key=1, style=dashed, color=darkseagreen4, label=current];
m16_44 -> m16_52  [key=0, style=solid];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> m16_52  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m16_49 -> m16_52  [key=0, style=solid];
m16_51 -> m16_52  [key=0, style=solid];
m16_52 -> m16_39  [key=0, style=bold, color=blue];
m16_74 -> m16_75  [key=0, style=solid];
m16_74 -> m16_76  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m16_74 -> m16_80  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m16_74 -> m16_51  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasParameters"];
m16_74 -> m16_44  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasParameters"];
m16_75 -> m16_76  [key=0, style=solid];
m16_75 -> m16_85  [key=2, style=dotted];
m16_75 -> m16_86  [key=2, style=dotted];
m16_75 -> m16_87  [key=2, style=dotted];
m16_75 -> m16_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_75 -> m16_79  [key=1, style=dashed, color=darkseagreen4, label=methodParameters];
m16_75 -> m16_80  [key=1, style=dashed, color=darkseagreen4, label=methodParameters];
m16_76 -> m16_77  [key=0, style=solid];
m16_76 -> m16_78  [key=0, style=solid];
m16_80 -> m16_81  [key=0, style=solid];
m16_80 -> m16_82  [key=0, style=solid];
m16_80 -> m16_88  [key=2, style=dotted];
m16_80 -> m16_89  [key=2, style=dotted];
m16_79 -> m16_80  [key=0, style=solid];
m16_79 -> m16_83  [key=0, style=solid];
m16_79 -> m16_79  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m16_77 -> m16_84  [key=0, style=solid];
m16_78 -> m16_79  [key=0, style=solid];
m16_78 -> m16_80  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_78 -> m16_82  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_82 -> m16_79  [key=0, style=solid];
m16_82 -> m16_82  [key=1, style=dashed, color=darkseagreen4, label=i];
m16_83 -> m16_84  [key=0, style=solid];
m16_81 -> m16_84  [key=0, style=solid];
m16_84 -> m16_74  [key=0, style=bold, color=blue];
m16_10 -> m16_11  [key=0, style=solid];
m16_27 -> m16_28  [key=0, style=solid];
m16_28 -> m16_29  [key=0, style=solid];
m16_29 -> m16_27  [key=0, style=bold, color=blue];
m16_90 -> m16_91  [key=0, style=solid];
m16_72 -> m16_73  [key=0, style=solid];
m16_71 -> m16_72  [key=0, style=solid];
m16_73 -> m16_71  [key=0, style=bold, color=blue];
m16_91 -> m16_92  [key=0, style=solid];
m16_92 -> m16_90  [key=0, style=bold, color=blue];
m16_107 -> m16_72  [key=1, style=dashed, color=darkseagreen4, label=string];
}
