digraph  {
n23 [label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website", span=""];
n0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website()", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website()", span="47-47"];
n1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website()", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website()", span="47-47"];
n2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)", span="51-51"];
n3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)", label="website == null", span="53-53"];
n5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)", label="Url = website.Url", span="56-56"];
n4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)", label="throw new ArgumentNullException(''website'');", span="54-54"];
n6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)", span="51-51"];
n7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", span="62-62"];
n9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", label="string json = @''{'Url':'http://www.google.com'}''", span="65-65"];
n10 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", label="JsonConvert.DeserializeObject<Website>(json)", span="69-69"];
n13 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", label="Website website = JsonConvert.DeserializeObject<Website>(json, new JsonSerializerSettings\r\n            {\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            })", span="78-81"];
n11 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", label=Exception, span="71-71"];
n17 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
n18 [cluster="System.Console.WriteLine(object)", label="Entry System.Console.WriteLine(object)", span="0-0"];
n14 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", label="Console.WriteLine(website.Url)", span="83-83"];
n19 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382"];
n20 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802"];
n15 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", label="Assert.AreEqual(''http://www.google.com'', website.Url)", span="87-87"];
n21 [cluster="System.Console.WriteLine(string)", label="Entry System.Console.WriteLine(string)", span="0-0"];
n16 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", span="62-62"];
n22 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
d12 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", color=green, community=0, label="Console.WriteLine(ex.Message)", prediction=0, span="73-73"];
m0_35 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JContainer.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359"];
m0_99 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicNoWriteExtensionDataAttributeTestClass.PublicNoWriteExtensionDataAttributeTestClass()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicNoWriteExtensionDataAttributeTestClass.PublicNoWriteExtensionDataAttributeTestClass()", span="298-298"];
m0_58 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JContainer.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m0_37 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", span="135-135"];
m0_38 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="JContainer.cs", label="string json = @''{\r\n              'HourlyRate': 150,\r\n              'Hours': 40,\r\n              'TaxRate': 0.125\r\n            }''", span="137-141"];
m0_39 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="JContainer.cs", label="var invoice = JsonConvert.DeserializeObject<CustomerInvoice>(json)", span="143-143"];
m0_40 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="JContainer.cs", label="invoice.TaxRate = 0.15m", span="146-146"];
m0_41 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="JContainer.cs", label="string result = JsonConvert.SerializeObject(invoice)", span="148-148"];
m0_42 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="JContainer.cs", label="Assert.AreEqual(@''{''''TaxRate'''':0.15,''''HourlyRate'''':150,''''Hours'''':40}'', result)", span="155-155"];
m0_43 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", span="135-135"];
m0_132 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", span="472-472"];
m0_133 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", color=green, community=0, file="JContainer.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Test'''': 1,\r\n  ''''Self'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n    ''''HourlyWage'''': 2.0,\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n    ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n  }\r\n}''", prediction=1, span="474-485"];
m0_135 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="JContainer.cs", label="Assert.AreEqual(''Name!'', c2.Name)", span="492-492"];
m0_136 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="JContainer.cs", label="WagePerson bizzaroC2 = (WagePerson)c2.ExtensionData[''Self'']", span="494-494"];
m0_137 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="JContainer.cs", label="Assert.AreEqual(2m, bizzaroC2.HourlyWage)", span="496-496"];
m0_138 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", span="472-472"];
m0_20 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", span="81-81"];
m0_21 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs", label="string json = @''{\r\n              'TaxRate': 0.125,\r\n              'a':null\r\n            }''", span="83-86"];
m0_22 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs", label="var invoice = JsonConvert.DeserializeObject<ExtendedObject>(json)", span="88-88"];
m0_23 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs", label="Assert.AreEqual(JTokenType.Null, invoice._additionalData[''a''].Type)", span="90-90"];
m0_24 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs", label="Assert.AreEqual(typeof(double), ((JValue)invoice._additionalData[''TaxRate'']).Value.GetType())", span="91-91"];
m0_25 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs", label="string result = JsonConvert.SerializeObject(invoice)", span="93-93"];
m0_26 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs", label="Assert.AreEqual(@''{''''TaxRate'''':0.125,''''a'''':null}'', result)", span="95-95"];
m0_27 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", span="81-81"];
m0_91 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", span="342-342"];
m0_92 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", file="JContainer.cs", label="string json = JsonConvert.SerializeObject(new PublicExtensionDataAttributeTestClass\r\n            {\r\n                Name = ''Name!''\r\n            })", span="344-347"];
m0_93 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", file="JContainer.cs", label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="349-349"];
m0_94 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", span="342-342"];
m0_59 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JContainer.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82"];
m0_125 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", span="444-444"];
m0_126 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", color=green, community=0, file="JContainer.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Test'''': 1,\r\n  ''''Self'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n    ''''HourlyWage'''': 2.0,\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n    ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n  }\r\n}''", prediction=2, span="446-457"];
m0_127 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", color=green, community=0, file="JContainer.cs", label="PublicExtensionDataAttributeTestClass c2 = JsonConvert.DeserializeObject<PublicExtensionDataAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", prediction=3, span="459-462"];
m0_128 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs", label="Assert.AreEqual(''Name!'', c2.Name)", span="464-464"];
m0_129 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs", label="WagePerson bizzaroC2 = (WagePerson)c2.ExtensionData[''Self'']", span="466-466"];
m0_131 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", span="444-444"];
m0_139 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", span="500-500"];
m0_140 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", color=green, community=0, file="JContainer.cs", label="PublicExtensionDataAttributeTestClass c = new PublicExtensionDataAttributeTestClass\r\n            {\r\n                Name = ''Name!'',\r\n                ExtensionData = new Dictionary<object, object>\r\n                {\r\n                    {\r\n                        ''Test'', new WagePerson\r\n                        {\r\n                            HourlyWage = 2.1m\r\n                        }\r\n                    }\r\n                }\r\n            }", prediction=4, span="502-514"];
m0_141 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs", label="string json = JsonConvert.SerializeObject(c, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="516-520"];
m0_142 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.ExtensionDataTests+PublicExtensionDataAttributeTestClass, Newtonsoft.Json.Tests'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Test'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n    ''''HourlyWage'''': 2.1,\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n    ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n  }\r\n}'', json)", span="522-532"];
m0_143 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", span="500-500"];
m0_95 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", span="353-353"];
m0_96 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", color=green, community=0, file="JContainer.cs", label="string json = JsonConvert.SerializeObject(new PublicNoWriteExtensionDataAttributeTestClass\r\n            {\r\n                Name = ''Name!'',\r\n                ExtensionData = new Dictionary<object, object>\r\n                {\r\n                    { ''Test'', 1 }\r\n                }\r\n            })", prediction=5, span="355-362"];
m0_97 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", file="JContainer.cs", label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="364-364"];
m0_98 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", span="353-353"];
m0_30 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", span="99-99"];
m0_31 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", file="JContainer.cs", label="string json = @''{\r\n              'TaxRate': 0.125,\r\n              'a':null\r\n            }''", span="101-104"];
m0_32 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", file="JContainer.cs", label="var invoice = JsonConvert.DeserializeObject<ExtendedObject>(json, new JsonSerializerSettings\r\n            {\r\n                FloatParseHandling = FloatParseHandling.Decimal\r\n            })", span="106-109"];
m0_33 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", file="JContainer.cs", label="Assert.AreEqual(typeof(decimal), ((JValue)invoice._additionalData[''TaxRate'']).Value.GetType())", span="111-111"];
m0_34 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", span="99-99"];
m0_47 [cluster="System.Collections.Generic.List<T>.List()", file="JContainer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_174 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", span="593-593"];
m0_175 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs", label="var c = JsonConvert.DeserializeObject<ExtensionDataAttributesInheritanceTestClass>(''{'first':1,'second':2}'')", span="595-595"];
m0_176 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs", label="Assert.AreEqual(null, c.ExtensionData1)", span="597-597"];
m0_177 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs", label="Assert.AreEqual(null, c.ExtensionData2)", span="598-598"];
m0_178 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs", label="Assert.AreEqual(2, c.ExtensionData0.Count)", span="599-599"];
m0_179 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs", label="Assert.AreEqual(1, (int)c.ExtensionData0[''first''])", span="600-600"];
m0_180 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs", label="Assert.AreEqual(2, (int)c.ExtensionData0[''second''])", span="601-601"];
m0_181 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", span="593-593"];
m0_61 [cluster="Unk.IsTrue", file="JContainer.cs", label="Entry Unk.IsTrue", span=""];
m0_48 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", span="196-196"];
m0_49 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs", label="JObjectExtensionDataTestClass c = new JObjectExtensionDataTestClass()", span="198-198"];
m0_50 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs", label="c.Name = ''Name!''", span="199-199"];
m0_51 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs", label="c.ExtensionData = new JObject\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', ''II'' },\r\n                { ''three'', new JArray(1, 1, 1) }\r\n            }", span="200-205"];
m0_52 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="207-207"];
m0_55 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs", label="Assert.IsTrue(JToken.DeepEquals(c.ExtensionData, c2.ExtensionData))", span="212-212"];
m0_53 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs", label="JObjectExtensionDataTestClass c2 = JsonConvert.DeserializeObject<JObjectExtensionDataTestClass>(json)", span="209-209"];
m0_54 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs", label="Assert.AreEqual(''Name!'', c2.Name)", span="211-211"];
m0_56 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", span="196-196"];
m0_144 [cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="27-27"];
m0_160 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTestClass.FieldExtensionDataAttributeTestClass()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTestClass.FieldExtensionDataAttributeTestClass()", span="263-263"];
m0_76 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor(string)", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor(string)", span="281-281"];
m0_77 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor(string)", file="JContainer.cs", label="Name = name", span="283-283"];
m0_78 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor(string)", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor(string)", span="281-281"];
m0_14 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JContainer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_18 [cluster="Unk.AreEqual", file="JContainer.cs", label="Entry Unk.AreEqual", span=""];
m0_155 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", span="559-559"];
m0_156 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", file="JContainer.cs", label="FieldExtensionDataAttributeTestClass c = new FieldExtensionDataAttributeTestClass\r\n            {\r\n                ExtensionData = new Dictionary<object, object>()\r\n            }", span="561-564"];
m0_157 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", file="JContainer.cs", label="string json = JsonConvert.SerializeObject(c)", span="566-566"];
m0_158 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", file="JContainer.cs", label="Assert.AreEqual(''{}'', json)", span="568-568"];
m0_159 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", span="559-559"];
m0_86 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", span="327-327"];
m0_87 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", file="JContainer.cs", label="string json = JsonConvert.SerializeObject(new PublicExtensionDataAttributeTestClass\r\n            {\r\n                Name = ''Name!'',\r\n                ExtensionData = new Dictionary<object, object>\r\n                {\r\n                    { ''Test'', 1 }\r\n                }\r\n            })", span="329-336"];
m0_88 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", file="JContainer.cs", label="Assert.AreEqual(@''{''''Name'''':''''Name!'''',''''Test'''':1}'', json)", span="338-338"];
m0_89 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", span="327-327"];
m0_15 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JContainer.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m0_100 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", span="368-368"];
m0_101 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", file="JContainer.cs", label="PublicNoReadExtensionDataAttributeTestClass c = JsonConvert.DeserializeObject<PublicNoReadExtensionDataAttributeTestClass>(@''{''''Name'''':''''Name!'''',''''Test'''':1}'')", span="370-370"];
m0_102 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", file="JContainer.cs", label="Assert.AreEqual(null, c.ExtensionData)", span="372-372"];
m0_103 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", span="368-368"];
m0_104 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", span="376-376"];
m0_105 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", color=green, community=0, file="JContainer.cs", label="var c = new PublicExtensionDataAttributeTestClass\r\n            {\r\n                Name = ''Name!'',\r\n                ExtensionData = new Dictionary<object, object>\r\n                {\r\n                    { ''Test'', 1 }\r\n                }\r\n            }", prediction=6, span="378-385"];
m0_106 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="JContainer.cs", label="c.ExtensionData[''Self''] = c", span="386-386"];
m0_108 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", color=green, community=0, file="JContainer.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Test'''': 1,\r\n  ''''Self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", prediction=7, span="394-401"];
m0_109 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", color=green, community=0, file="JContainer.cs", label="var c2 = JsonConvert.DeserializeObject<PublicExtensionDataAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All\r\n            })", prediction=8, span="403-406"];
m0_110 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", color=green, community=0, file="JContainer.cs", label="Assert.AreEqual(''Name!'', c2.Name)", prediction=9, span="408-408"];
m0_111 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", color=green, community=0, file="JContainer.cs", label="PublicExtensionDataAttributeTestClass bizzaroC2 = (PublicExtensionDataAttributeTestClass)c2.ExtensionData[''Self'']", prediction=10, span="410-410"];
m0_112 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="JContainer.cs", label="Assert.AreEqual(c2, bizzaroC2)", span="412-412"];
m0_113 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="JContainer.cs", label="Assert.AreEqual(1, (long)bizzaroC2.ExtensionData[''Test''])", span="413-413"];
m0_114 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", span="376-376"];
m0_29 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JContainer.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512"];
m0_57 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.JObjectExtensionDataTestClass.JObjectExtensionDataTestClass()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.JObjectExtensionDataTestClass.JObjectExtensionDataTestClass()", span="187-187"];
m0_17 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JContainer.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
m0_19 [cluster="Unk.IsNotNull", file="JContainer.cs", label="Entry Unk.IsNotNull", span=""];
m0_145 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", span="536-536"];
m0_146 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs", label="string json = @''{\r\n  'Name':'Name!',\r\n  'NoMatch':'NoMatch!',\r\n  'ExtensionData':{'HAI':true}\r\n}''", span="538-542"];
m0_147 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs", label="var c = JsonConvert.DeserializeObject<PublicExtensionDataAttributeTestClass>(json)", span="544-544"];
m0_148 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="546-546"];
m0_149 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs", label="Assert.AreEqual(2, c.ExtensionData.Count)", span="547-547"];
m0_150 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs", label="Assert.AreEqual(''NoMatch!'', (string)c.ExtensionData[''NoMatch''])", span="549-549"];
m0_151 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs", label="var o = (JObject)c.ExtensionData[''ExtensionData'']", span="553-553"];
m0_152 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs", label="Assert.AreEqual(1, o.Count)", span="554-554"];
m0_153 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject { { ''HAI'', true } }, o))", span="555-555"];
m0_154 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", span="536-536"];
m0_3 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", span="57-57"];
m0_4 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs", label="ExtensionDataDeserializeWithNonDefaultConstructor c = new ExtensionDataDeserializeWithNonDefaultConstructor(''Name!'')", span="59-59"];
m0_5 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs", label="c._extensionData = new Dictionary<string, JToken>\r\n            {\r\n                { ''Key!'', ''Value!'' }\r\n            }", span="60-63"];
m0_6 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="65-65"];
m0_7 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Key!'''': ''''Value!''''\r\n}'', json)", span="67-70"];
m0_8 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs", label="var c2 = JsonConvert.DeserializeObject<ExtensionDataDeserializeWithNonDefaultConstructor>(json)", span="72-72"];
m0_9 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs", label="Assert.AreEqual(''Name!'', c2.Name)", span="74-74"];
m0_10 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs", label="Assert.IsNotNull(c2._extensionData)", span="75-75"];
m0_11 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs", label="Assert.AreEqual(1, c2._extensionData.Count)", span="76-76"];
m0_12 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs", label="Assert.AreEqual(''Value!'', (string)c2._extensionData[''Key!''])", span="77-77"];
m0_13 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", span="57-57"];
m0_161 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", span="572-572"];
m0_162 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="JContainer.cs", label="var c = JsonConvert.DeserializeObject<FieldExtensionDataAttributeTestClass>(''{'first':1,'second':2}'')", span="574-574"];
m0_163 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="JContainer.cs", label="Assert.AreEqual(2, c.ExtensionData.Count)", span="576-576"];
m0_164 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="JContainer.cs", label="Assert.AreEqual(1, (long)c.ExtensionData[''first''])", span="577-577"];
m0_165 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="JContainer.cs", label="Assert.AreEqual(2, (long)c.ExtensionData[''second''])", span="578-578"];
m0_166 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", span="572-572"];
m0_0 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor.ExtensionDataDeserializeWithNonDefaultConstructor(string)", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor.ExtensionDataDeserializeWithNonDefaultConstructor(string)", span="45-45"];
m0_1 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor.ExtensionDataDeserializeWithNonDefaultConstructor(string)", file="JContainer.cs", label="Name = name", span="47-47"];
m0_2 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor.ExtensionDataDeserializeWithNonDefaultConstructor(string)", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor.ExtensionDataDeserializeWithNonDefaultConstructor(string)", span="45-45"];
m0_79 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", span="315-315"];
m0_80 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="JContainer.cs", label="string json = @''{'DisplayName':'John Smith', 'SAMAccountName':'contoso\\johns'}''", span="317-317"];
m0_81 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="JContainer.cs", label="DirectoryAccount account = JsonConvert.DeserializeObject<DirectoryAccount>(json)", span="319-319"];
m0_82 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="JContainer.cs", label="Assert.AreEqual(''John Smith'', account.DisplayName)", span="321-321"];
m0_83 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="JContainer.cs", label="Assert.AreEqual(''contoso'', account.Domain)", span="322-322"];
m0_84 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="JContainer.cs", label="Assert.AreEqual(''johns'', account.UserName)", span="323-323"];
m0_85 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", span="315-315"];
m0_167 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", span="582-582"];
m0_168 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="JContainer.cs", label="var c = JsonConvert.DeserializeObject<MultipleExtensionDataAttributesTestClass>(''{'first':[1],'second':[2]}'')", span="584-584"];
m0_169 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="JContainer.cs", label="Assert.AreEqual(null, c.ExtensionData1)", span="586-586"];
m0_170 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="JContainer.cs", label="Assert.AreEqual(2, c.ExtensionData2.Count)", span="587-587"];
m0_171 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="JContainer.cs", label="Assert.AreEqual(1, (int)((JArray)c.ExtensionData2[''first''])[0])", span="588-588"];
m0_172 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="JContainer.cs", label="Assert.AreEqual(2, (int)((JArray)c.ExtensionData2[''second''])[0])", span="589-589"];
m0_173 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", span="582-582"];
m0_36 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JContainer.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802"];
m0_62 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", span="216-216"];
m0_63 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs", label="string json = @''{\r\n  ''''Ints'''': [1,2,3],\r\n  ''''Ignored'''': [1,2,3],\r\n  ''''Readonly'''': ''''Readonly'''',\r\n  ''''Name'''': ''''Actually set!'''',\r\n  ''''CustomName'''': ''''Wrong name!'''',\r\n  ''''GetPrivate'''': true,\r\n  ''''GetOnly'''': true,\r\n  ''''NewValueSimple'''': true,\r\n  ''''NewValueComplex'''': [1,2,3]\r\n}''", span="218-228"];
m0_64 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", color=green, community=0, file="JContainer.cs", label="ExtensionDataTestClass c = JsonConvert.DeserializeObject<ExtensionDataTestClass>(json)", prediction=11, span="230-230"];
m0_65 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", color=green, community=0, file="JContainer.cs", label="Assert.AreEqual(''Actually set!'', c.Name)", prediction=12, span="232-232"];
m0_66 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", color=green, community=0, file="JContainer.cs", label="Assert.AreEqual(4, c.Ints.Count)", prediction=11, span="233-233"];
m0_67 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs", label="Assert.AreEqual(''Readonly'', (string)c.ExtensionData[''Readonly''])", span="235-235"];
m0_68 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs", label="Assert.AreEqual(''Wrong name!'', (string)c.ExtensionData[''CustomName''])", span="236-236"];
m0_69 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs", label="Assert.AreEqual(true, (bool)c.ExtensionData[''GetPrivate''])", span="237-237"];
m0_70 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs", label="Assert.AreEqual(true, (bool)c.ExtensionData[''GetOnly''])", span="238-238"];
m0_71 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs", label="Assert.AreEqual(true, (bool)c.ExtensionData[''NewValueSimple''])", span="239-239"];
m0_73 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), c.ExtensionData[''Ignored'']))", span="241-241"];
m0_74 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs", label="Assert.AreEqual(7, c.ExtensionData.Count)", span="243-243"];
m0_75 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", span="216-216"];
m0_16 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="184-184"];
m0_90 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClass.PublicExtensionDataAttributeTestClass()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClass.PublicExtensionDataAttributeTestClass()", span="269-269"];
m0_28 [cluster="object.GetType()", file="JContainer.cs", label="Entry object.GetType()", span="0-0"];
m0_116 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", span="417-417"];
m0_117 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", color=green, community=0, file="JContainer.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Test'''': 1,\r\n  ''''Self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}''", prediction=14, span="419-426"];
m0_118 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs", label="var c2 = JsonConvert.DeserializeObject<PublicJTokenExtensionDataAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All\r\n            })", span="428-431"];
m0_119 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs", label="Assert.AreEqual(''Name!'', c2.Name)", span="433-433"];
m0_120 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs", label="JObject bizzaroC2 = (JObject)c2.ExtensionData[''Self'']", span="435-435"];
m0_123 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs", label="Assert.AreEqual(1, (int)c2.ExtensionData[''Test''])", span="440-440"];
m0_121 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs", label="Assert.AreEqual(''Name!'', (string)bizzaroC2[''Name''])", span="437-437"];
m0_122 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs", label="Assert.AreEqual(1, (int)bizzaroC2[''Test''])", span="438-438"];
m0_124 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", span="417-417"];
m0_44 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTestClass.ExtensionDataTestClass()", file="JContainer.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTestClass.ExtensionDataTestClass()", span="181-181"];
m0_45 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTestClass.ExtensionDataTestClass()", file="JContainer.cs", label="Ints = new List<int> { 0 }", span="183-183"];
m0_46 [cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTestClass.ExtensionDataTestClass()", file="JContainer.cs", label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTestClass.ExtensionDataTestClass()", span="181-181"];
m0_115 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JContainer.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570"];
m0_60 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JContainer.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="152-152"];
m0_182 [file="JContainer.cs", label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor", span=""];
m0_183 [file="JContainer.cs", label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTestClass", span=""];
m0_184 [file="JContainer.cs", label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor", span=""];
m1_17 [cluster="System.IO.MemoryStream.MemoryStream()", file="SerializeWithJsonSerializerToFile.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m1_10 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.WriteAllText(string, string)", file="SerializeWithJsonSerializerToFile.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.WriteAllText(string, string)", span="70-70"];
m1_18 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.WriteAllText(string, string)", file="SerializeWithJsonSerializerToFile.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.WriteAllText(string, string)", span="70-70"];
m1_12 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="SerializeWithJsonSerializerToFile.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124"];
m1_13 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SerializeWithJsonSerializerToFile.cs", label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="403-403"];
m1_11 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", file="SerializeWithJsonSerializerToFile.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", span="65-65"];
m1_14 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", file="SerializeWithJsonSerializerToFile.cs", label="return new StreamWriter(new MemoryStream());", span="67-67"];
m1_15 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", file="SerializeWithJsonSerializerToFile.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", span="65-65"];
m1_8 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="SerializeWithJsonSerializerToFile.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293"];
m1_7 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="SerializeWithJsonSerializerToFile.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
m1_9 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="SerializeWithJsonSerializerToFile.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410"];
m1_16 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="SerializeWithJsonSerializerToFile.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m1_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="SerializeWithJsonSerializerToFile.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", span="44-44"];
m1_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="SerializeWithJsonSerializerToFile.cs", label="JObject videogameRatings = new JObject(\r\n                new JProperty(''Halo'', 9),\r\n                new JProperty(''Starcraft'', 9),\r\n                new JProperty(''Call of Duty'', 7.5))", span="47-50"];
m1_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="SerializeWithJsonSerializerToFile.cs", label="File.WriteAllText(@''c:\videogames.json'', videogameRatings.ToString())", span="52-52"];
m1_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="SerializeWithJsonSerializerToFile.cs", label="videogameRatings.WriteTo(writer)", span="58-58"];
m1_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="SerializeWithJsonSerializerToFile.cs", label="StreamWriter file = File.CreateText(@''c:\videogames.json'')", span="55-55"];
m1_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="SerializeWithJsonSerializerToFile.cs", label="JsonTextWriter writer = new JsonTextWriter(file)", span="56-56"];
m1_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="SerializeWithJsonSerializerToFile.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", span="44-44"];
m2_17 [cluster="System.IO.MemoryStream.MemoryStream()", file="WriteToJsonFile.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m2_13 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="WriteToJsonFile.cs", label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="403-403"];
m2_12 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="WriteToJsonFile.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124"];
m2_10 [cluster="Newtonsoft.Json.Tests.Documentation.File.WriteAllText(string, string)", file="WriteToJsonFile.cs", label="Entry Newtonsoft.Json.Tests.Documentation.File.WriteAllText(string, string)", span="68-68"];
m2_18 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.WriteAllText(string, string)", file="WriteToJsonFile.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.WriteAllText(string, string)", span="70-70"];
m2_11 [cluster="Newtonsoft.Json.Tests.Documentation.File.CreateText(string)", file="WriteToJsonFile.cs", label="Entry Newtonsoft.Json.Tests.Documentation.File.CreateText(string)", span="63-63"];
m2_14 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", color=green, community=0, file="WriteToJsonFile.cs", label="return new StreamWriter(new MemoryStream());", prediction=15, span="67-67"];
m2_15 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", file="WriteToJsonFile.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", span="65-65"];
m2_8 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="WriteToJsonFile.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293"];
m2_7 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="WriteToJsonFile.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
m2_9 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="WriteToJsonFile.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410"];
m2_16 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="WriteToJsonFile.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m2_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="WriteToJsonFile.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", span="44-44"];
m2_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="WriteToJsonFile.cs", label="JObject videogameRatings = new JObject(\r\n                new JProperty(''Halo'', 9),\r\n                new JProperty(''Starcraft'', 9),\r\n                new JProperty(''Call of Duty'', 7.5))", span="47-50"];
m2_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="WriteToJsonFile.cs", label="File.WriteAllText(@''c:\videogames.json'', videogameRatings.ToString())", span="52-52"];
m2_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="WriteToJsonFile.cs", label="videogameRatings.WriteTo(writer)", span="58-58"];
m2_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="WriteToJsonFile.cs", label="StreamWriter file = File.CreateText(@''c:\videogames.json'')", span="55-55"];
m2_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="WriteToJsonFile.cs", label="JsonTextWriter writer = new JsonTextWriter(file)", span="56-56"];
m2_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="WriteToJsonFile.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", span="44-44"];
n13 -> n15  [color=darkseagreen4, key=1, label=website, style=dashed];
m0_22 -> m0_24  [color=darkseagreen4, key=1, label=invoice, style=dashed];
m0_175 -> m0_177  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_175 -> m0_178  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_175 -> m0_179  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_175 -> m0_180  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_49 -> m0_55  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_53 -> m0_55  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_109 -> m0_112  [color=green, key=1, label=c2, style=dashed];
m0_111 -> m0_113  [color=green, key=1, label=bizzaroC2, style=dashed];
m0_147 -> m0_149  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_147 -> m0_150  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_151 -> m0_153  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_8 -> m0_10  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_8 -> m0_11  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_8 -> m0_12  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_162 -> m0_164  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_162 -> m0_165  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_81 -> m0_83  [color=darkseagreen4, key=1, label=account, style=dashed];
m0_81 -> m0_84  [color=darkseagreen4, key=1, label=account, style=dashed];
m0_168 -> m0_170  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_168 -> m0_171  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_168 -> m0_172  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_64 -> m0_66  [color=green, key=1, label=c, style=dashed];
m0_64 -> m0_67  [color=green, key=1, label=c, style=dashed];
m0_64 -> m0_68  [color=green, key=1, label=c, style=dashed];
m0_64 -> m0_69  [color=green, key=1, label=c, style=dashed];
m0_64 -> m0_70  [color=green, key=1, label=c, style=dashed];
m0_64 -> m0_71  [color=green, key=1, label=c, style=dashed];
m0_64 -> m0_73  [color=green, key=1, label=c, style=dashed];
m0_64 -> m0_74  [color=green, key=1, label=c, style=dashed];
m0_118 -> m0_123  [color=darkseagreen4, key=1, label=c2, style=dashed];
m0_120 -> m0_122  [color=darkseagreen4, key=1, label=bizzaroC2, style=dashed];
m1_1 -> m1_5  [color=darkseagreen4, key=1, label=videogameRatings, style=dashed];
m2_1 -> m2_5  [color=darkseagreen4, key=1, label=videogameRatings, style=dashed];
}
