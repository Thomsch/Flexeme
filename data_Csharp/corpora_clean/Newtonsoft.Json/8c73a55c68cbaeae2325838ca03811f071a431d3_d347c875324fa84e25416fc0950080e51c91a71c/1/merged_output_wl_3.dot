digraph  {
m0_95 [cluster="System.IO.BinaryReader.Close()", file="BsonReader.cs", label="Entry System.IO.BinaryReader.Close()", span="0-0"];
m0_128 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="819-819"];
m0_405 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs", label="MovePosition(4)", span="821-821"];
m0_406 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs", label="return _reader.ReadInt32();", span="822-822"];
m0_407 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="819-819"];
m0_370 [cluster="System.IO.EndOfStreamException.EndOfStreamException(string)", file="BsonReader.cs", label="Entry System.IO.EndOfStreamException.EndOfStreamException(string)", span="0-0"];
m0_285 [cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="BsonReader.cs", label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0"];
m0_408 [cluster="System.IO.BinaryReader.ReadInt32()", file="BsonReader.cs", label="Entry System.IO.BinaryReader.ReadInt32()", span="0-0"];
m0_291 [cluster="System.DateTime.ToLocalTime()", file="BsonReader.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m0_221 [cluster="System.IO.BinaryReader.ReadByte()", file="BsonReader.cs", label="Entry System.IO.BinaryReader.ReadByte()", span="0-0"];
m0_290 [cluster="System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", file="BsonReader.cs", label="Entry System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", span="0-0"];
m0_3 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
m0_4 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
m0_332 [cluster="System.Text.StringBuilder.Append(char[], int, int)", file="BsonReader.cs", label="Entry System.Text.StringBuilder.Append(char[], int, int)", span="0-0"];
m0_31 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", span="182-182"];
m0_32 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", file="BsonReader.cs", label="return ReadAsBytesInternal();", span="184-184"];
m0_33 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", span="182-182"];
m0_5 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", span="134-134"];
m0_6 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", span="134-134"];
m0_24 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadElement()", span="169-169"];
m0_25 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", file="BsonReader.cs", label="_currentElementType = ReadType()", span="171-171"];
m0_26 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", file="BsonReader.cs", label="string elementName = ReadString()", span="172-172"];
m0_27 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", file="BsonReader.cs", label="return elementName;", span="173-173"];
m0_28 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadElement()", span="169-169"];
m0_34 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="475-475"];
m0_29 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadType()", span="831-831"];
m0_413 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", file="BsonReader.cs", label="MovePosition(1)", span="833-833"];
m0_414 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", file="BsonReader.cs", label="return (BsonType)_reader.ReadSByte();", span="834-834"];
m0_415 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadType()", span="831-831"];
m0_412 [cluster="System.IO.BinaryReader.ReadInt64()", file="BsonReader.cs", label="Entry System.IO.BinaryReader.ReadInt64()", span="0-0"];
m0_127 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="824-824"];
m0_416 [cluster="System.IO.BinaryReader.ReadSByte()", file="BsonReader.cs", label="Entry System.IO.BinaryReader.ReadSByte()", span="0-0"];
m0_129 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", span="683-683"];
m0_335 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs", label="int length = ReadInt32()", span="685-685"];
m0_336 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs", label="MovePosition(length)", span="687-687"];
m0_337 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs", label="string s = GetString(length - 1)", span="689-689"];
m0_338 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs", label="_reader.ReadByte()", span="690-690"];
m0_339 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs", label="return s;", span="692-692"];
m0_340 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", span="683-683"];
m0_204 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", span="503-503"];
m0_222 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label=type, span="505-505"];
m0_282 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="throw new ArgumentOutOfRangeException(''type'', ''Unexpected BsonType value: '' + type);", span="600-600"];
m0_223 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Number", span="507-507"];
m0_228 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.String", span="515-515"];
m0_231 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Object", span="519-519"];
m0_236 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Array", span="528-528"];
m0_241 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Binary", span="537-537"];
m0_243 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", color=green, community=0, file="BsonReader.cs", label="0: BsonType.Undefined", span="540-540"];
m0_245 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", color=green, community=0, file="BsonReader.cs", label="0: BsonType.Oid", span="543-543"];
m0_248 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Boolean", span="547-547"];
m0_251 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Date", span="551-551"];
m0_262 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Null", span="571-571"];
m0_264 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Regex", span="574-574"];
m0_269 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Reference", span="581-581"];
m0_272 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Code", span="585-585"];
m0_274 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.CodeWScope", span="588-588"];
m0_277 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Integer", span="592-592"];
m0_279 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.TimeStamp", span="595-595"];
m0_224 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="double d = ReadDouble()", span="508-508"];
m0_225 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="510-510"];
m0_226 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Float, Convert.ToDecimal(d, CultureInfo.InvariantCulture))", span="511-511"];
m0_227 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Float, d)", span="513-513"];
m0_229 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Symbol", span="516-516"];
m0_230 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.String, ReadLengthString())", span="517-517"];
m0_232 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.StartObject)", span="521-521"];
m0_233 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="ContainerContext newContext = new ContainerContext(BsonType.Object)", span="523-523"];
m0_234 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="PushContext(newContext)", span="524-524"];
m0_235 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="newContext.Length = ReadInt32()", span="525-525"];
m0_237 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.StartArray)", span="530-530"];
m0_238 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="ContainerContext newContext = new ContainerContext(BsonType.Array)", span="532-532"];
m0_239 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="PushContext(newContext)", span="533-533"];
m0_240 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="newContext.Length = ReadInt32()", span="534-534"];
m0_242 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", color=green, community=0, file="BsonReader.cs", label="0: SetToken(JsonToken.Bytes, ReadBinary())", span="538-538"];
m0_244 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", color=green, community=0, file="BsonReader.cs", label="0: SetToken(JsonToken.Undefined)", span="541-541"];
m0_246 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", color=green, community=0, file="BsonReader.cs", label="0: byte[] oid = ReadBytes(12)", span="544-544"];
m0_247 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", color=green, community=0, file="BsonReader.cs", label="0: SetToken(JsonToken.Bytes, oid)", span="545-545"];
m0_249 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="bool b = Convert.ToBoolean(ReadByte())", span="548-548"];
m0_250 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Boolean, b)", span="549-549"];
m0_252 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="long ticks = ReadInt64()", span="552-552"];
m0_253 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="DateTime utcDateTime = DateTimeUtils.ConvertJavaScriptTicksToDateTime(ticks)", span="553-553"];
m0_254 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="DateTime dateTime", span="555-555"];
m0_257 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="dateTime = DateTime.SpecifyKind(utcDateTime, DateTimeKind.Unspecified)", span="559-559"];
m0_259 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="dateTime = utcDateTime.ToLocalTime()", span="562-562"];
m0_260 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="dateTime = utcDateTime", span="565-565"];
m0_255 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label=DateTimeKindHandling, span="556-556"];
m0_256 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="DateTimeKind.Unspecified", span="558-558"];
m0_258 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="DateTimeKind.Local", span="561-561"];
m0_261 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Date, dateTime)", span="569-569"];
m0_263 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Null)", span="572-572"];
m0_265 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="string expression = ReadString()", span="575-575"];
m0_266 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="string modifiers = ReadString()", span="576-576"];
m0_267 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="string regex = @''/'' + expression + @''/'' + modifiers", span="578-578"];
m0_268 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.String, regex)", span="579-579"];
m0_270 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.StartObject)", span="582-582"];
m0_271 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.ReferenceStart", span="583-583"];
m0_273 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.String, ReadLengthString())", span="586-586"];
m0_275 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.StartObject)", span="589-589"];
m0_276 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeStart", span="590-590"];
m0_278 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Integer, (long)ReadInt32())", span="593-593"];
m0_280 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="BsonType.Long", span="596-596"];
m0_281 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="SetToken(JsonToken.Integer, ReadInt64())", span="597-597"];
m0_283 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", span="503-503"];
m0_328 [cluster="System.Text.Encoding.GetChars(byte[], int, int, char[], int)", file="BsonReader.cs", label="Entry System.Text.Encoding.GetChars(byte[], int, int, char[], int)", span="0-0"];
m0_16 [cluster="System.Collections.Generic.List<T>.List()", file="BsonReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_213 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="BsonReader.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m0_88 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="814-814"];
m0_15 [cluster="System.IO.BinaryReader.BinaryReader(System.IO.Stream)", file="BsonReader.cs", label="Entry System.IO.BinaryReader.BinaryReader(System.IO.Stream)", span="0-0"];
m0_50 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", span="710-710"];
m0_383 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", span="791-791"];
m0_384 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="b <= SeqRange1[1]", span="793-793"];
m0_386 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="b >= SeqRange2[0] && b <= SeqRange2[1]", span="794-794"];
m0_388 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="b >= SeqRange3[0] && b <= SeqRange3[1]", span="795-795"];
m0_390 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="b >= SeqRange4[0] && b <= SeqRange4[1]", span="796-796"];
m0_385 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="return 1;", span="793-793"];
m0_387 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="return 2;", span="794-794"];
m0_389 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="return 3;", span="795-795"];
m0_391 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="return 4;", span="796-796"];
m0_392 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="return 0;", span="797-797"];
m0_393 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", span="791-791"];
m0_94 [cluster="Newtonsoft.Json.JsonReader.Close()", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Close()", span="1002-1002"];
m0_59 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInternal()", span="249-249"];
m0_60 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="bool success", span="253-253"];
m0_61 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label=_bsonReaderState, span="255-255"];
m0_62 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="BsonReaderState.Normal", span="257-257"];
m0_64 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="BsonReaderState.ReferenceStart", span="260-260"];
m0_68 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeStart", span="265-265"];
m0_74 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}''.FormatWith(CultureInfo.InvariantCulture, _bsonReaderState));", span="273-273"];
m0_63 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="success = ReadNormal()", span="258-258"];
m0_65 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="BsonReaderState.ReferenceRef", span="261-261"];
m0_66 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="BsonReaderState.ReferenceId", span="262-262"];
m0_67 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="success = ReadReference()", span="263-263"];
m0_69 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeCode", span="266-266"];
m0_70 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScope", span="267-267"];
m0_71 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScopeObject", span="268-268"];
m0_72 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScopeEnd", span="269-269"];
m0_73 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="success = ReadCodeWScope()", span="270-270"];
m0_75 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="!success", span="276-276"];
m0_76 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="SetToken(JsonToken.None)", span="278-278"];
m0_78 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="return true;", span="282-282"];
m0_77 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="return false;", span="279-279"];
m0_79 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label=EndOfStreamException, span="284-284"];
m0_80 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="SetToken(JsonToken.None)", span="286-286"];
m0_81 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="return false;", span="287-287"];
m0_82 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInternal()", span="249-249"];
m0_157 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="842-842"];
m0_419 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs", label="MovePosition(count)", span="844-844"];
m0_420 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs", label="return _reader.ReadBytes(count);", span="845-845"];
m0_421 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="842-842"];
m0_17 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", span="160-160"];
m0_18 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", file="BsonReader.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="162-162"];
m0_19 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", file="BsonReader.cs", label="_reader = reader", span="163-163"];
m0_21 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", file="BsonReader.cs", label="_readRootValueAsArray = readRootValueAsArray", span="165-165"];
m0_22 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", file="BsonReader.cs", label="_dateTimeKindHandling = dateTimeKindHandling", span="166-166"];
m0_20 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", file="BsonReader.cs", label="_stack = new List<ContainerContext>()", span="164-164"];
m0_23 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", span="160-160"];
m0_292 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="BsonReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m0_7 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", span="145-145"];
m0_8 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="ValidationUtils.ArgumentNotNull(stream, ''stream'')", span="147-147"];
m0_9 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="_reader = new BinaryReader(stream)", span="148-148"];
m0_11 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="_readRootValueAsArray = readRootValueAsArray", span="150-150"];
m0_12 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="_dateTimeKindHandling = dateTimeKindHandling", span="151-151"];
m0_10 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="_stack = new List<ContainerContext>()", span="149-149"];
m0_13 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", span="145-145"];
m0_207 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", span="837-837"];
m0_417 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", file="BsonReader.cs", label="_currentContext.Position += count", span="839-839"];
m0_418 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", span="837-837"];
m0_51 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", span="230-230"];
m0_52 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", file="BsonReader.cs", label="return ReadAsDateTimeOffsetInternal();", span="232-232"];
m0_53 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", span="230-230"];
m0_55 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.Read()", span="242-242"];
m0_56 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="_readType = Json.ReadType.Read", span="244-244"];
m0_57 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="return ReadInternal();", span="246-246"];
m0_58 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.Read()", span="242-242"];
m0_217 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BsonReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_327 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="800-800"];
m0_394 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="_byteBuffer == null", span="802-802"];
m0_395 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="_byteBuffer = new byte[MaxCharBytesSize]", span="804-804"];
m0_396 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="_charBuffer == null", span="806-806"];
m0_397 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="int charBufferSize = Encoding.UTF8.GetMaxCharCount(MaxCharBytesSize)", span="808-808"];
m0_398 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="_charBuffer = new char[charBufferSize]", span="809-809"];
m0_399 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="800-800"];
m0_131 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="BsonReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m0_35 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", span="191-191"];
m0_36 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", file="BsonReader.cs", label="return ReadAsDecimalInternal();", span="193-193"];
m0_37 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", span="191-191"];
m0_89 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.Close()", span="294-294"];
m0_90 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", file="BsonReader.cs", label="base.Close()", span="296-296"];
m0_91 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", file="BsonReader.cs", label="CloseInput && _reader != null", span="298-298"];
m0_92 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", file="BsonReader.cs", label="_reader.Close()", span="300-300"];
m0_93 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.Close()", span="294-294"];
m0_38 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", span="550-550"];
m0_83 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadNormal()", span="404-404"];
m0_158 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label=CurrentState, span="406-406"];
m0_159 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Start", span="408-408"];
m0_167 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Complete", span="419-419"];
m0_170 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Property", span="422-422"];
m0_173 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.ObjectStart", span="427-427"];
m0_197 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.ConstructorStart", span="467-467"];
m0_198 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Constructor", span="469-469"];
m0_199 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Error", span="471-471"];
m0_200 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Finished", span="473-473"];
m0_201 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="throw new ArgumentOutOfRangeException();", span="476-476"];
m0_160 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="JsonToken token = (!_readRootValueAsArray) ? JsonToken.StartObject : JsonToken.StartArray", span="410-410"];
m0_161 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="BsonType type = (!_readRootValueAsArray) ? BsonType.Object : BsonType.Array", span="411-411"];
m0_162 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="SetToken(token)", span="413-413"];
m0_163 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ContainerContext newContext = new ContainerContext(type)", span="414-414"];
m0_164 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="PushContext(newContext)", span="415-415"];
m0_165 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="newContext.Length = ReadInt32()", span="416-416"];
m0_166 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return true;", span="417-417"];
m0_168 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.Closed", span="420-420"];
m0_169 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return false;", span="421-421"];
m0_171 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ReadType(_currentElementType)", span="424-424"];
m0_172 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return true;", span="425-425"];
m0_174 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.ArrayStart", span="428-428"];
m0_175 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="State.PostValue", span="429-429"];
m0_176 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ContainerContext context = _currentContext", span="430-430"];
m0_177 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="context == null", span="431-431"];
m0_179 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="int lengthMinusEnd = context.Length - 1", span="434-434"];
m0_180 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="context.Position < lengthMinusEnd", span="436-436"];
m0_181 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="context.Type == BsonType.Array", span="438-438"];
m0_187 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="context.Position == lengthMinusEnd", span="450-450"];
m0_192 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="MovePosition(context.Length)", span="457-457"];
m0_193 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="JsonToken endToken = (context.Type == BsonType.Object) ? JsonToken.EndObject : JsonToken.EndArray", span="459-459"];
m0_178 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return false;", span="432-432"];
m0_182 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ReadElement()", span="440-440"];
m0_185 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="SetToken(JsonToken.PropertyName, ReadElement())", span="446-446"];
m0_183 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ReadType(_currentElementType)", span="441-441"];
m0_184 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return true;", span="442-442"];
m0_186 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return true;", span="447-447"];
m0_188 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="ReadByte() != 0", span="452-452"];
m0_196 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Read past end of current container context.'');", span="465-465"];
m0_189 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end of object byte value.'');", span="453-453"];
m0_190 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="PopContext()", span="455-455"];
m0_191 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="_currentContext != null", span="456-456"];
m0_194 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="SetToken(endToken)", span="460-460"];
m0_195 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return true;", span="461-461"];
m0_202 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="return false;", span="479-479"];
m0_203 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadNormal()", span="404-404"];
m0_288 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInt64()", span="825-825"];
m0_409 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="BsonReader.cs", label="MovePosition(8)", span="827-827"];
m0_410 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="BsonReader.cs", label="return _reader.ReadInt64();", span="828-828"];
m0_411 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInt64()", span="825-825"];
m0_47 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", span="218-218"];
m0_48 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", file="BsonReader.cs", label="return ReadAsDateTimeInternal();", span="220-220"];
m0_49 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", span="218-218"];
m0_43 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsString()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsString()", span="209-209"];
m0_44 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsString()", file="BsonReader.cs", label="return ReadAsStringInternal();", span="211-211"];
m0_45 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsString()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsString()", span="209-209"];
m0_284 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="813-813"];
m0_401 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs", label="MovePosition(8)", span="815-815"];
m0_402 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs", label="return _reader.ReadDouble();", span="816-816"];
m0_403 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="813-813"];
m0_329 [cluster="string.String(char[], int, int)", file="BsonReader.cs", label="Entry string.String(char[], int, int)", span="0-0"];
m0_404 [cluster="System.IO.BinaryReader.ReadDouble()", file="BsonReader.cs", label="Entry System.IO.BinaryReader.ReadDouble()", span="0-0"];
m0_130 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", span="491-491"];
m0_214 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="BsonReader.cs", label="_stack.Add(newContext)", span="493-493"];
m0_215 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="BsonReader.cs", label="_currentContext = newContext", span="494-494"];
m0_216 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", span="491-491"];
m0_0 [cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", span="80-80"];
m0_1 [cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="Type = type", span="82-82"];
m0_2 [cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", span="80-80"];
m0_42 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", span="607-607"];
m0_422 [cluster="System.IO.BinaryReader.ReadBytes(int)", file="BsonReader.cs", label="Entry System.IO.BinaryReader.ReadBytes(int)", span="0-0"];
m0_84 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadReference()", span="353-353"];
m0_132 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label=CurrentState, span="355-355"];
m0_133 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="State.ObjectStart", span="357-357"];
m0_137 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="State.Property", span="363-363"];
m0_145 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="State.PostValue", span="380-380"];
m0_155 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + CurrentState);", span="400-400"];
m0_134 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="SetToken(JsonToken.PropertyName, JsonTypeReflector.RefPropertyName)", span="359-359"];
m0_135 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.ReferenceRef", span="360-360"];
m0_136 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="return true;", span="361-361"];
m0_138 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="_bsonReaderState == BsonReaderState.ReferenceRef", span="365-365"];
m0_139 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="SetToken(JsonToken.String, ReadLengthString())", span="367-367"];
m0_141 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="_bsonReaderState == BsonReaderState.ReferenceId", span="370-370"];
m0_140 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="return true;", span="368-368"];
m0_142 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="SetToken(JsonToken.Bytes, ReadBytes(12))", span="372-372"];
m0_144 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + _bsonReaderState);", span="377-377"];
m0_143 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="return true;", span="373-373"];
m0_146 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="_bsonReaderState == BsonReaderState.ReferenceRef", span="382-382"];
m0_147 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="SetToken(JsonToken.PropertyName, JsonTypeReflector.IdPropertyName)", span="384-384"];
m0_150 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="_bsonReaderState == BsonReaderState.ReferenceId", span="388-388"];
m0_148 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.ReferenceId", span="385-385"];
m0_149 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="return true;", span="386-386"];
m0_151 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="SetToken(JsonToken.EndObject)", span="390-390"];
m0_154 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + _bsonReaderState);", span="396-396"];
m0_152 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.Normal", span="391-391"];
m0_153 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="return true;", span="392-392"];
m0_156 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadReference()", span="353-353"];
m0_39 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", span="200-200"];
m0_40 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", file="BsonReader.cs", label="return ReadAsInt32Internal();", span="202-202"];
m0_41 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", span="200-200"];
m0_287 [cluster="System.Convert.ToBoolean(byte)", file="BsonReader.cs", label="Entry System.Convert.ToBoolean(byte)", span="0-0"];
m0_85 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="306-306"];
m0_96 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label=_bsonReaderState, span="308-308"];
m0_97 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeStart", span="310-310"];
m0_101 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeCode", span="314-314"];
m0_106 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScope", span="321-321"];
m0_116 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScopeObject", span="338-338"];
m0_121 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="BsonReaderState.CodeWScopeScopeEnd", span="344-344"];
m0_125 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="throw new ArgumentOutOfRangeException();", span="349-349"];
m0_98 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="SetToken(JsonToken.PropertyName, ''$code'')", span="311-311"];
m0_99 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeCode", span="312-312"];
m0_100 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return true;", span="313-313"];
m0_102 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="ReadInt32()", span="316-316"];
m0_103 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="SetToken(JsonToken.String, ReadLengthString())", span="318-318"];
m0_104 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeScope", span="319-319"];
m0_105 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return true;", span="320-320"];
m0_107 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="CurrentState == State.PostValue", span="322-322"];
m0_108 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="SetToken(JsonToken.PropertyName, ''$scope'')", span="324-324"];
m0_110 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="SetToken(JsonToken.StartObject)", span="329-329"];
m0_109 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return true;", span="325-325"];
m0_111 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeScopeObject", span="330-330"];
m0_112 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="ContainerContext newContext = new ContainerContext(BsonType.Object)", span="332-332"];
m0_113 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="PushContext(newContext)", span="333-333"];
m0_114 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="newContext.Length = ReadInt32()", span="334-334"];
m0_115 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return true;", span="336-336"];
m0_117 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="bool result = ReadNormal()", span="339-339"];
m0_118 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="result && TokenType == JsonToken.EndObject", span="340-340"];
m0_120 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return result;", span="343-343"];
m0_119 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.CodeWScopeScopeEnd", span="341-341"];
m0_122 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="SetToken(JsonToken.EndObject)", span="345-345"];
m0_123 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="_bsonReaderState = BsonReaderState.Normal", span="346-346"];
m0_124 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="return true;", span="347-347"];
m0_126 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="306-306"];
m0_333 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="BsonReader.cs", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
m0_14 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52"];
m0_400 [cluster="System.Text.Encoding.GetMaxCharCount(int)", file="BsonReader.cs", label="Entry System.Text.Encoding.GetMaxCharCount(int)", span="0-0"];
m0_341 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.GetString(int)", span="695-695"];
m0_342 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="length == 0", span="697-697"];
m0_348 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int count = ((length - totalBytesRead) > MaxCharBytesSize - offset)\r\n                    ? MaxCharBytesSize - offset\r\n                    : length - totalBytesRead", span="710-712"];
m0_354 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="byteCount == length", span="725-725"];
m0_359 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="builder = new StringBuilder(length)", span="737-737"];
m0_366 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="totalBytesRead < length", span="753-753"];
m0_343 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="return string.Empty;", span="698-698"];
m0_344 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="EnsureBuffers()", span="700-700"];
m0_345 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="StringBuilder builder = null", span="702-702"];
m0_346 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int totalBytesRead = 0", span="704-704"];
m0_358 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="builder == null", span="736-736"];
m0_361 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="builder.Append(_charBuffer, 0, charCount)", span="740-740"];
m0_367 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="return builder.ToString();", span="755-755"];
m0_347 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int offset = 0", span="707-707"];
m0_352 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="totalBytesRead += byteCount", span="719-719"];
m0_349 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int byteCount = _reader.Read(_byteBuffer, offset, count)", span="714-714"];
m0_353 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="byteCount += offset", span="723-723"];
m0_350 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="byteCount == 0", span="716-716"];
m0_351 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="throw new EndOfStreamException(''Unable to read beyond the end of the stream.'');", span="717-717"];
m0_355 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, byteCount, _charBuffer, 0)", span="729-729"];
m0_357 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int lastFullCharStop = GetLastFullCharStop(byteCount - 1)", span="734-734"];
m0_362 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="lastFullCharStop < byteCount - 1", span="742-742"];
m0_363 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="offset = byteCount - lastFullCharStop - 1", span="744-744"];
m0_356 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="return new string(_charBuffer, 0, charCount);", span="730-730"];
m0_360 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, lastFullCharStop + 1, _charBuffer, 0)", span="739-739"];
m0_364 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="Array.Copy(_byteBuffer, lastFullCharStop + 1, _byteBuffer, 0, offset)", span="746-746"];
m0_365 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="offset = 0", span="750-750"];
m0_368 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.GetString(int)", span="695-695"];
m0_331 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="BsonReader.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m0_334 [cluster="System.Text.StringBuilder.ToString()", file="BsonReader.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_87 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m0_30 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadString()", span="621-621"];
m0_299 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="EnsureBuffers()", span="623-623"];
m0_300 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="StringBuilder builder = null", span="625-625"];
m0_301 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int totalBytesRead = 0", span="627-627"];
m0_309 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="count < MaxCharBytesSize && builder == null", span="641-641"];
m0_315 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="builder == null", span="657-657"];
m0_317 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="builder.Append(_charBuffer, 0, charCount)", span="660-660"];
m0_323 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="return builder.ToString();", span="674-674"];
m0_302 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int offset = 0", span="629-629"];
m0_308 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="totalBytesRead += byteCount", span="639-639"];
m0_303 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int count = offset", span="632-632"];
m0_307 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int byteCount = count - offset", span="638-638"];
m0_304 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="byte b", span="633-633"];
m0_305 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="count < MaxCharBytesSize && (b = _reader.ReadByte()) > 0", span="634-634"];
m0_306 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="_byteBuffer[count++] = b", span="636-636"];
m0_313 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int lastFullCharStop = GetLastFullCharStop(count - 1)", span="653-653"];
m0_321 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="count < MaxCharBytesSize", span="671-671"];
m0_310 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int length = Encoding.UTF8.GetChars(_byteBuffer, 0, byteCount, _charBuffer, 0)", span="645-645"];
m0_318 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="lastFullCharStop < byteCount - 1", span="662-662"];
m0_319 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="offset = byteCount - lastFullCharStop - 1", span="664-664"];
m0_311 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="MovePosition(totalBytesRead + 1)", span="647-647"];
m0_322 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="MovePosition(totalBytesRead + 1)", span="673-673"];
m0_312 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="return new string(_charBuffer, 0, length);", span="648-648"];
m0_314 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, lastFullCharStop + 1, _charBuffer, 0)", span="655-655"];
m0_320 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="Array.Copy(_byteBuffer, lastFullCharStop + 1, _byteBuffer, 0, offset)", span="666-666"];
m0_316 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="builder = new StringBuilder(MaxCharBytesSize * 2)", span="658-658"];
m0_324 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="offset = 0", span="677-677"];
m0_325 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label=true, span="680-680"];
m0_326 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadString()", span="621-621"];
m0_205 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="497-497"];
m0_218 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs", label="MovePosition(1)", span="499-499"];
m0_219 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs", label="return _reader.ReadByte();", span="500-500"];
m0_220 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="497-497"];
m0_289 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="181-181"];
m0_369 [cluster="System.IO.BinaryReader.Read(byte[], int, int)", file="BsonReader.cs", label="Entry System.IO.BinaryReader.Read(byte[], int, int)", span="0-0"];
m0_54 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="411-411"];
m0_206 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.PopContext()", span="482-482"];
m0_208 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs", label="_stack.RemoveAt(_stack.Count - 1)", span="484-484"];
m0_209 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs", label="_stack.Count == 0", span="485-485"];
m0_210 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs", label="_currentContext = null", span="486-486"];
m0_211 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs", label="_currentContext = _stack[_stack.Count - 1]", span="488-488"];
m0_212 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.PopContext()", span="482-482"];
m0_330 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", span="758-758"];
m0_371 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="int lookbackPos = start", span="760-760"];
m0_379 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="bis == start - lookbackPos", span="780-780"];
m0_380 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="return start;", span="783-783"];
m0_372 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="int bis = 0", span="761-761"];
m0_373 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="lookbackPos >= 0", span="762-762"];
m0_374 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="bis = BytesInSequence(_byteBuffer[lookbackPos])", span="764-764"];
m0_376 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="lookbackPos--", span="767-767"];
m0_378 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="lookbackPos--", span="776-776"];
m0_381 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="return lookbackPos;", span="787-787"];
m0_375 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="bis == 0", span="765-765"];
m0_377 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="bis == 1", span="770-770"];
m0_382 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", span="758-758"];
m0_286 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", file="BsonReader.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadBinary()", span="604-604"];
m0_293 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", file="BsonReader.cs", label="int dataLength = ReadInt32()", span="606-606"];
m0_294 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", color=red, community=0, file="BsonReader.cs", label="0: BsonBinaryType binaryType = (BsonBinaryType)ReadByte()", span="608-608"];
m0_297 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", file="BsonReader.cs", label="return ReadBytes(dataLength);", span="618-618"];
m0_295 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", file="BsonReader.cs", label="binaryType == BsonBinaryType.BinaryOld && !_jsonNet35BinaryCompatibility", span="612-612"];
m0_296 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", file="BsonReader.cs", label="dataLength = ReadInt32()", span="614-614"];
m0_298 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary()", file="BsonReader.cs", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadBinary()", span="604-604"];
m0_46 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsStringInternal()", span="664-664"];
m0_86 [cluster="string.FormatWith(System.IFormatProvider, object)", file="BsonReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m0_423 [file="BsonReader.cs", label="Newtonsoft.Json.Bson.BsonReader.ContainerContext", span=""];
m0_424 [file="BsonReader.cs", label="Newtonsoft.Json.Bson.BsonReader", span=""];
m2_20 [cluster="System.AppDomain.GetAssemblies()", file="DefaultSerializationBinder.cs", label="Entry System.AppDomain.GetAssemblies()", span="0-0"];
m2_25 [cluster="System.Type.GetType(string)", file="DefaultSerializationBinder.cs", label="Entry System.Type.GetType(string)", span="0-0"];
m2_45 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="50-50"];
m2_46 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", span="144-144"];
m2_47 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", file="DefaultSerializationBinder.cs", label="assemblyName = serializedType.Assembly.FullName", span="150-150"];
m2_48 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", file="DefaultSerializationBinder.cs", label="typeName = serializedType.FullName", span="151-151"];
m2_49 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", span="144-144"];
m2_33 [cluster="string.GetHashCode()", file="DefaultSerializationBinder.cs", label="Entry string.GetHashCode()", span="0-0"];
m2_0 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="42-42"];
m2_1 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="string assemblyName = typeNameKey.AssemblyName", span="44-44"];
m2_2 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="string typeName = typeNameKey.TypeName", span="45-45"];
m2_3 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="assemblyName != null", span="47-47"];
m2_5 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="assembly = Assembly.LoadWithPartialName(assemblyName)", span="55-55"];
m2_9 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="a.FullName == assemblyName", span="70-70"];
m2_12 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="throw new JsonSerializationException(''Could not load assembly '{0}'.''.FormatWith(CultureInfo.InvariantCulture, assemblyName));", span="80-80"];
m2_13 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Type type = assembly.GetType(typeName)", span="82-82"];
m2_15 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="throw new JsonSerializationException(''Could not find type '{0}' in assembly '{1}'.''.FormatWith(CultureInfo.InvariantCulture, typeName, assembly.FullName));", span="84-84"];
m2_17 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="return Type.GetType(typeName);", span="90-90"];
m2_4 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Assembly assembly", span="49-49"];
m2_6 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="assembly == null", span="64-64"];
m2_11 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="assembly == null", span="79-79"];
m2_7 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Assembly[] loadedAssemblies = AppDomain.CurrentDomain.GetAssemblies()", span="67-67"];
m2_8 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label=loadedAssemblies, span="68-68"];
m2_10 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="assembly = a", span="72-72"];
m2_14 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="type == null", span="83-83"];
m2_16 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="return type;", span="86-86"];
m2_18 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="42-42"];
m2_34 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", span="110-110"];
m2_35 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="DefaultSerializationBinder.cs", label="!(obj is TypeNameKey)", span="112-112"];
m2_37 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="DefaultSerializationBinder.cs", label="return Equals((TypeNameKey)obj);", span="115-115"];
m2_36 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="DefaultSerializationBinder.cs", label="return false;", span="113-113"];
m2_38 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", span="110-110"];
m2_30 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", span="105-105"];
m2_31 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", color=green, community=0, file="DefaultSerializationBinder.cs", label="0: return ((AssemblyName != null) ? AssemblyName.GetHashCode() : 0)\r\n                    ^ ((TypeName != null) ? TypeName.GetHashCode() : 0);", span="107-108"];
m2_32 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", span="105-105"];
m2_39 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="118-118"];
m2_40 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="return (AssemblyName == other.AssemblyName && TypeName == other.TypeName);", span="120-120"];
m2_41 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="118-118"];
m2_42 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", span="132-132"];
m2_43 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", file="DefaultSerializationBinder.cs", label="return _typeCache.Get(new TypeNameKey(assemblyName, typeName));", span="134-134"];
m2_44 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", span="132-132"];
m2_23 [cluster="System.Reflection.Assembly.GetType(string)", file="DefaultSerializationBinder.cs", label="Entry System.Reflection.Assembly.GetType(string)", span="0-0"];
m2_24 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="DefaultSerializationBinder.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m2_26 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", span="99-99"];
m2_27 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", file="DefaultSerializationBinder.cs", label="AssemblyName = assemblyName", span="101-101"];
m2_28 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", file="DefaultSerializationBinder.cs", label="TypeName = typeName", span="102-102"];
m2_29 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", span="99-99"];
m2_19 [cluster="System.Reflection.Assembly.LoadWithPartialName(string)", file="DefaultSerializationBinder.cs", label="Entry System.Reflection.Assembly.LoadWithPartialName(string)", span="0-0"];
m2_21 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m2_22 [cluster="string.FormatWith(System.IFormatProvider, object)", file="DefaultSerializationBinder.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m2_50 [file="DefaultSerializationBinder.cs", label="out Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", span=""];
m2_51 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", span=""];
m2_52 [file="DefaultSerializationBinder.cs", label="ref Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", span=""];
m2_53 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Serialization.DefaultSerializationBinder", span=""];
m3_0 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", file="DemoTests.cs", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", span="26-26"];
m3_1 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", color=green, community=0, file="DemoTests.cs", label="1: hasSpecifiedName && !OverrideSpecifiedNames", span="28-28"];
m3_2 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", color=green, community=0, file="DemoTests.cs", label="2: return name;", span="30-30"];
m3_3 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", color=green, community=0, file="DemoTests.cs", label="1: return ResolvePropertyName(name);", span="33-33"];
m3_4 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", file="DemoTests.cs", label="Exit Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", span="26-26"];
m3_6 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", file="DemoTests.cs", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", span="41-41"];
m3_7 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", color=green, community=0, file="DemoTests.cs", label="1: !ProcessDictionaryKeys", span="43-43"];
m3_8 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", color=green, community=0, file="DemoTests.cs", label="2: return key;", span="45-45"];
m3_9 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", color=green, community=0, file="DemoTests.cs", label="1: return ResolvePropertyName(key);", span="48-48"];
m3_10 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", file="DemoTests.cs", label="Exit Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", span="41-41"];
m3_5 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.ResolvePropertyName(string)", file="DemoTests.cs", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.ResolvePropertyName(string)", span="56-56"];
m3_11 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.ResolvePropertyName(string)", file="DemoTests.cs", label="Exit Newtonsoft.Json.Serialization.NamingStrategy.ResolvePropertyName(string)", span="56-56"];
m3_12 [file="DemoTests.cs", label="Newtonsoft.Json.Serialization.NamingStrategy", span=""];
m4_104 [cluster="byte.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry byte.ToString(string, System.IFormatProvider)", span="0-0"];
m4_125 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", span="379-379"];
m4_126 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", file="JsonConvert.cs", label="return ToString(value.ToString(), quoteChar);", span="381-381"];
m4_127 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan, char)", span="379-379"];
m4_365 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", span="1067-1067"];
m4_366 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="XmlNodeConverter converter = new XmlNodeConverter { OmitRootObject = omitRootObject }", span="1069-1069"];
m4_367 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="return SerializeObject(node, formatting, converter);", span="1071-1071"];
m4_368 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting, bool)", span="1067-1067"];
m4_262 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="715-715"];
m4_263 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonConvert.cs", label="return DeserializeObject(value, type, (JsonSerializerSettings)null);", span="717-717"];
m4_264 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="715-715"];
m4_30 [cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(char)", span="173-173"];
m4_31 [cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonConvert.cs", label="return ToString(char.ToString(value));", span="175-175"];
m4_32 [cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(char)", span="173-173"];
m4_359 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXNode(XObject)", span="1044-1044"];
m4_360 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject)", file="JsonConvert.cs", label="return SerializeXNode(node, Formatting.None);", span="1046-1046"];
m4_361 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeXNode(XObject)", span="1044-1044"];
m4_372 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", span="1090-1090"];
m4_373 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", file="JsonConvert.cs", label="return DeserializeXNode(value, deserializeRootElementName, false);", span="1092-1092"];
m4_374 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string)", span="1090-1090"];
m4_108 [cluster="sbyte.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry sbyte.ToString(string, System.IFormatProvider)", span="0-0"];
m4_72 [cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="268-268"];
m4_73 [cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="return EnsureFloatFormat(value, EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture)), floatFormatHandling, quoteChar, nullable);", span="270-270"];
m4_74 [cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="268-268"];
m4_51 [cluster="Newtonsoft.Json.JsonConvert.ToString(uint)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(uint)", span="225-225"];
m4_52 [cluster="Newtonsoft.Json.JsonConvert.ToString(uint)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="227-227"];
m4_53 [cluster="Newtonsoft.Json.JsonConvert.ToString(uint)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(uint)", span="225-225"];
m4_88 [cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="294-294"];
m4_89 [cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="return EnsureFloatFormat(value, EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture)), floatFormatHandling, quoteChar, nullable);", span="296-296"];
m4_90 [cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="294-294"];
m4_342 [cluster="Unk.SerializeObject", file="JsonConvert.cs", label="Entry Unk.SerializeObject", span=""];
m4_13 [cluster="System.IO.StringWriter.Write(char)", file="JsonConvert.cs", label="Entry System.IO.StringWriter.Write(char)", span="0-0"];
m4_95 [cluster="string.IndexOf(char)", file="JsonConvert.cs", label="Entry string.IndexOf(char)", span="0-0"];
m4_212 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="539-539"];
m4_213 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="JsonSerializerSettings settings = (converters != null && converters.Length > 0)\r\n                ? new JsonSerializerSettings { Converters = converters }\r\n                : null", span="541-543"];
m4_214 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="return SerializeObject(value, null, formatting, settings);", span="545-545"];
m4_215 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="539-539"];
m4_34 [cluster="Newtonsoft.Json.JsonConvert.ToString(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(string)", span="407-407"];
m4_138 [cluster="Newtonsoft.Json.JsonConvert.ToString(string)", file="JsonConvert.cs", label="return ToString(value, '''');", span="409-409"];
m4_139 [cluster="Newtonsoft.Json.JsonConvert.ToString(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(string)", span="407-407"];
m4_101 [cluster="Newtonsoft.Json.JsonConvert.ToString(byte)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(byte)", span="320-320"];
m4_102 [cluster="Newtonsoft.Json.JsonConvert.ToString(byte)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="322-322"];
m4_103 [cluster="Newtonsoft.Json.JsonConvert.ToString(byte)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(byte)", span="320-320"];
m4_87 [cluster="double.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry double.ToString(string, System.IFormatProvider)", span="0-0"];
m4_129 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(string, char)", span="418-418"];
m4_140 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonConvert.cs", label="delimiter != '''' && delimiter != '\''", span="420-420"];
m4_142 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonConvert.cs", label="return JavaScriptUtils.ToEscapedJavaScriptString(value, delimiter, true);", span="423-423"];
m4_141 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonConvert.cs", label="throw new ArgumentException(''Delimiter must be a single or double quote.'', ''delimiter'');", span="421-421"];
m4_143 [cluster="Newtonsoft.Json.JsonConvert.ToString(string, char)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(string, char)", span="418-418"];
m4_347 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="1001-1001"];
m4_348 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="JsonConvert.cs", label="return DeserializeXmlNode(value, null);", span="1003-1003"];
m4_349 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string)", span="1001-1001"];
m4_16 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", span="135-135"];
m4_17 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", file="JsonConvert.cs", label="return ToString(value, DateFormatHandling.IsoDateFormat);", span="137-137"];
m4_18 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset)", span="135-135"];
m4_75 [cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="273-273"];
m4_76 [cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="floatFormatHandling == FloatFormatHandling.Symbol || !(double.IsInfinity(value) || double.IsNaN(value))", span="275-275"];
m4_77 [cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="return text;", span="276-276"];
m4_78 [cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="floatFormatHandling == FloatFormatHandling.DefaultValue", span="278-278"];
m4_79 [cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="return (!nullable) ? ''0.0'' : Null;", span="279-279"];
m4_80 [cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="return quoteChar + text + quoteChar;", span="281-281"];
m4_81 [cluster="Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.EnsureFloatFormat(double, string, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="273-273"];
m4_246 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", span="660-660"];
m4_247 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="return SerializeObjectAsync(value, formatting, null);", span="662-662"];
m4_248 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", span="660-660"];
m4_269 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="742-742"];
m4_270 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonConvert.cs", label="return DeserializeObject<T>(value);", span="744-744"];
m4_271 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="742-742"];
m4_42 [cluster="int.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry int.ToString(string, System.IFormatProvider)", span="0-0"];
m4_224 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", span="621-621"];
m4_231 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="StringBuilder sb = new StringBuilder(256)", span="623-623"];
m4_234 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="jsonWriter.Formatting = jsonSerializer.Formatting", span="627-627"];
m4_235 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="jsonSerializer.Serialize(jsonWriter, value, type)", span="629-629"];
m4_232 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="StringWriter sw = new StringWriter(sb, CultureInfo.InvariantCulture)", span="624-624"];
m4_233 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="625-625"];
m4_236 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="return sw.ToString();", span="632-632"];
m4_237 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObjectInternal(object, System.Type, Newtonsoft.Json.JsonSerializer)", span="621-621"];
m4_15 [cluster="System.IO.StringWriter.ToString()", file="JsonConvert.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m4_291 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52"];
m4_278 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", span="801-801"];
m4_281 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="JsonSerializerSettings settings = (converters != null && converters.Length > 0)\r\n                ? new JsonSerializerSettings { Converters = converters }\r\n                : null", span="803-805"];
m4_282 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="return DeserializeObject(value, type, settings);", span="807-807"];
m4_283 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, params Newtonsoft.Json.JsonConverter[])", span="801-801"];
m4_245 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="677-677"];
m4_249 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return Task.Factory.StartNew(() => SerializeObject(value, formatting, settings));", span="679-679"];
m4_250 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="677-677"];
m4_295 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="670-670"];
m4_109 [cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(decimal)", span="341-341"];
m4_110 [cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonConvert.cs", label="return EnsureDecimalPlace(value.ToString(null, CultureInfo.InvariantCulture));", span="343-343"];
m4_111 [cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(decimal)", span="341-341"];
m4_35 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Enum)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Enum)", span="183-183"];
m4_36 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Enum)", file="JsonConvert.cs", label="return value.ToString(''D'');", span="185-185"];
m4_37 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Enum)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Enum)", span="183-183"];
m4_241 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="771-771"];
m4_223 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", span="511-511"];
m4_3 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", span="116-116"];
m4_4 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="DateTime updatedDateTime = DateTimeUtils.EnsureDateTime(value, timeZoneHandling)", span="118-118"];
m4_7 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="DateTimeUtils.WriteDateTimeString(writer, updatedDateTime, format, null, CultureInfo.InvariantCulture)", span="123-123"];
m4_5 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="StringWriter writer = StringUtils.CreateStringWriter(64)", span="120-120"];
m4_6 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="writer.Write('''')", span="122-122"];
m4_8 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="writer.Write('''')", span="124-124"];
m4_9 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="return writer.ToString();", span="125-125"];
m4_10 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", span="116-116"];
m4_211 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359"];
m4_255 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="690-690"];
m4_256 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonConvert.cs", label="return DeserializeObject(value, null, (JsonSerializerSettings)null);", span="692-692"];
m4_257 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="690-690"];
m4_46 [cluster="short.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry short.ToString(string, System.IFormatProvider)", span="0-0"];
m4_275 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="774-774"];
m4_276 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="return (T)DeserializeObject(value, typeof(T), converters);", span="776-776"];
m4_277 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="774-774"];
m4_327 [cluster="Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="952-952"];
m4_328 [cluster="Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return Task.Factory.StartNew(() => PopulateObject(value, target, settings));", span="954-954"];
m4_329 [cluster="Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="952-952"];
m4_324 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="615-615"];
m4_112 [cluster="decimal.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry decimal.ToString(string, System.IFormatProvider)", span="0-0"];
m4_55 [cluster="Newtonsoft.Json.JsonConvert.ToString(long)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(long)", span="235-235"];
m4_56 [cluster="Newtonsoft.Json.JsonConvert.ToString(long)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="237-237"];
m4_57 [cluster="Newtonsoft.Json.JsonConvert.ToString(long)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(long)", span="235-235"];
m4_113 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Guid)", span="351-351"];
m4_114 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid)", file="JsonConvert.cs", label="return ToString(value, '''');", span="353-353"];
m4_115 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Guid)", span="351-351"];
m4_317 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="925-925"];
m4_318 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="JsonSerializer jsonSerializer = JsonSerializer.CreateDefault(settings)", span="927-927"];
m4_319 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(value))", span="929-929"];
m4_320 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="jsonSerializer.Populate(jsonReader, target)", span="931-931"];
m4_321 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="jsonReader.Read() && jsonReader.TokenType != JsonToken.Comment", span="933-933"];
m4_322 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="throw new JsonSerializationException(''Additional text found in JSON string after finishing deserializing object.'');", span="934-934"];
m4_323 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="925-925"];
m4_369 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", span="1079-1079"];
m4_370 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", file="JsonConvert.cs", label="return DeserializeXNode(value, null);", span="1081-1081"];
m4_371 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXNode(string)", span="1079-1079"];
m4_259 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="704-704"];
m4_260 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return DeserializeObject(value, null, settings);", span="706-706"];
m4_261 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="704-704"];
m4_362 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", span="1055-1055"];
m4_363 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="return SerializeXNode(node, formatting, false);", span="1057-1057"];
m4_364 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", span="1055-1055"];
m4_258 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="820-820"];
m4_284 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="ValidationUtils.ArgumentNotNull(value, ''value'')", span="822-822"];
m4_285 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="JsonSerializer jsonSerializer = JsonSerializer.CreateDefault(settings)", span="824-824"];
m4_288 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="var reader = new JsonTextReader(new StringReader(value))", span="830-830"];
m4_289 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return jsonSerializer.Deserialize(reader, type);", span="832-832"];
m4_286 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="!jsonSerializer.IsCheckAdditionalContentSet()", span="827-827"];
m4_287 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="jsonSerializer.CheckAdditionalContent = true", span="828-828"];
m4_290 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="820-820"];
m4_195 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(object)", span="208-208"];
m4_146 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(object)", span="431-431"];
m4_147 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="value == null", span="433-433"];
m4_149 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(value)", span="436-436"];
m4_152 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((string)value);", span="441-441"];
m4_154 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((char)value);", span="443-443"];
m4_156 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((bool)value);", span="445-445"];
m4_158 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((sbyte)value);", span="447-447"];
m4_160 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((short)value);", span="449-449"];
m4_162 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((ushort)value);", span="451-451"];
m4_164 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((int)value);", span="453-453"];
m4_166 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((byte)value);", span="455-455"];
m4_168 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((uint)value);", span="457-457"];
m4_170 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((long)value);", span="459-459"];
m4_172 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((ulong)value);", span="461-461"];
m4_174 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((float)value);", span="463-463"];
m4_176 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((double)value);", span="465-465"];
m4_178 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((DateTime)value);", span="467-467"];
m4_180 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((decimal)value);", span="469-469"];
m4_184 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((DateTimeOffset)value);", span="476-476"];
m4_186 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((Guid)value);", span="479-479"];
m4_188 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((Uri)value);", span="481-481"];
m4_190 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToString((TimeSpan)value);", span="483-483"];
m4_192 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return ToStringInternal((BigInteger)value);", span="486-486"];
m4_194 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="throw new ArgumentException(''Unsupported type: {0}. Use the JsonSerializer class to get the object's JSON representation.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="490-490"];
m4_148 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return Null;", span="434-434"];
m4_150 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label=typeCode, span="438-438"];
m4_151 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.String", span="440-440"];
m4_153 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Char", span="442-442"];
m4_155 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Boolean", span="444-444"];
m4_157 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.SByte", span="446-446"];
m4_159 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Int16", span="448-448"];
m4_161 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.UInt16", span="450-450"];
m4_163 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Int32", span="452-452"];
m4_165 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Byte", span="454-454"];
m4_167 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.UInt32", span="456-456"];
m4_169 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Int64", span="458-458"];
m4_171 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.UInt64", span="460-460"];
m4_173 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Single", span="462-462"];
m4_175 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Double", span="464-464"];
m4_177 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.DateTime", span="466-466"];
m4_179 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Decimal", span="468-468"];
m4_181 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.DBNull", span="471-471"];
m4_183 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.DateTimeOffset", span="475-475"];
m4_185 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Guid", span="478-478"];
m4_187 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.Uri", span="480-480"];
m4_189 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.TimeSpan", span="482-482"];
m4_191 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="PrimitiveTypeCode.BigInteger", span="485-485"];
m4_182 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="return Null;", span="472-472"];
m4_193 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(object)", span="431-431"];
m4_314 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="911-911"];
m4_315 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonConvert.cs", label="PopulateObject(value, target, null)", span="913-913"];
m4_316 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="911-911"];
m4_343 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", span="989-989"];
m4_344 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="XmlNodeConverter converter = new XmlNodeConverter { OmitRootObject = omitRootObject }", span="991-991"];
m4_345 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="return SerializeObject(node, formatting, converter);", span="993-993"];
m4_346 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting, bool)", span="989-989"];
m4_63 [cluster="Newtonsoft.Json.JsonConvert.ToString(ulong)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(ulong)", span="253-253"];
m4_64 [cluster="Newtonsoft.Json.JsonConvert.ToString(ulong)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="255-255"];
m4_65 [cluster="Newtonsoft.Json.JsonConvert.ToString(ulong)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(ulong)", span="253-253"];
m4_326 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m4_54 [cluster="uint.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry uint.ToString(string, System.IFormatProvider)", span="0-0"];
m4_292 [cluster="Newtonsoft.Json.JsonSerializer.IsCheckAdditionalContentSet()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonSerializer.IsCheckAdditionalContentSet()", span="426-426"];
m4_341 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", span="870-870"];
m4_116 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", span="356-356"];
m4_117 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonConvert.cs", label="string text = null", span="358-358"];
m4_118 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonConvert.cs", label="text = value.ToString(''D'', CultureInfo.InvariantCulture)", span="361-361"];
m4_119 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonConvert.cs", label="return quoteChar + text + quoteChar;", span="366-366"];
m4_120 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Guid, char)", span="356-356"];
m4_144 [cluster="System.ArgumentException.ArgumentException(string, string)", file="JsonConvert.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m4_308 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="899-899"];
m4_309 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return Task.Factory.StartNew(() => DeserializeObject(value, type, settings));", span="901-901"];
m4_310 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="899-899"];
m4_58 [cluster="long.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry long.ToString(string, System.IFormatProvider)", span="0-0"];
m4_293 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m4_268 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="789-789"];
m4_279 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return (T)DeserializeObject(value, typeof(T), settings);", span="791-791"];
m4_280 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="789-789"];
m4_375 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", span="1106-1106"];
m4_376 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonConvert.cs", label="XmlNodeConverter converter = new XmlNodeConverter()", span="1108-1108"];
m4_377 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonConvert.cs", label="converter.DeserializeRootElementName = deserializeRootElementName", span="1109-1109"];
m4_378 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonConvert.cs", label="converter.WriteArrayAttribute = writeArrayAttribute", span="1110-1110"];
m4_379 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonConvert.cs", label="return (XDocument)DeserializeObject(value, typeof(XDocument), converter);", span="1112-1112"];
m4_380 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", span="1106-1106"];
m4_121 [cluster="System.Guid.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.Guid.ToString(string, System.IFormatProvider)", span="0-0"];
m4_251 [cluster="System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<TResult>)", file="JsonConvert.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<TResult>)", span="0-0"];
m4_202 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="576-576"];
m4_220 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="JsonSerializer jsonSerializer = JsonSerializer.CreateDefault(settings)", span="578-578"];
m4_221 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return SerializeObjectInternal(value, type, jsonSerializer);", span="580-580"];
m4_222 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="576-576"];
m4_217 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="557-557"];
m4_218 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return SerializeObject(value, null, settings);", span="559-559"];
m4_219 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="557-557"];
m4_43 [cluster="Newtonsoft.Json.JsonConvert.ToString(short)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(short)", span="203-203"];
m4_44 [cluster="Newtonsoft.Json.JsonConvert.ToString(short)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="205-205"];
m4_45 [cluster="Newtonsoft.Json.JsonConvert.ToString(short)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(short)", span="203-203"];
m4_198 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonConvert.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m4_337 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", span="975-975"];
m4_338 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="XmlNodeConverter converter = new XmlNodeConverter()", span="977-977"];
m4_339 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="return SerializeObject(node, formatting, converter);", span="979-979"];
m4_340 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", span="975-975"];
m4_206 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="593-593"];
m4_225 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return SerializeObject(value, null, formatting, settings);", span="595-595"];
m4_226 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="593-593"];
m4_325 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m4_82 [cluster="double.IsInfinity(double)", file="JsonConvert.cs", label="Entry double.IsInfinity(double)", span="0-0"];
m4_66 [cluster="ulong.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry ulong.ToString(string, System.IFormatProvider)", span="0-0"];
m4_242 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", span="645-645"];
m4_243 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", file="JsonConvert.cs", label="return SerializeObjectAsync(value, Formatting.None, null);", span="647-647"];
m4_244 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", span="645-645"];
m4_196 [cluster="System.ArgumentException.ArgumentException(string)", file="JsonConvert.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m4_71 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", span="299-299"];
m4_91 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonConvert.cs", label="double.IsNaN(value) || double.IsInfinity(value) || text.IndexOf('.') != -1 || text.IndexOf('E') != -1 || text.IndexOf('e') != -1", span="301-301"];
m4_92 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonConvert.cs", label="return text;", span="302-302"];
m4_93 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonConvert.cs", label="return text + ''.0'';", span="304-304"];
m4_94 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(double, string)", span="299-299"];
m4_296 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", span="847-847"];
m4_297 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", file="JsonConvert.cs", label="return DeserializeObjectAsync<T>(value, null);", span="849-849"];
m4_298 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", span="847-847"];
m4_33 [cluster="char.ToString(char)", file="JsonConvert.cs", label="Entry char.ToString(char)", span="0-0"];
m4_50 [cluster="ushort.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry ushort.ToString(string, System.IFormatProvider)", span="0-0"];
m4_135 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", span="397-397"];
m4_136 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", file="JsonConvert.cs", label="return ToString(value.OriginalString, quoteChar);", span="399-399"];
m4_137 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Uri, char)", span="397-397"];
m4_62 [cluster="Unk.ToString", file="JsonConvert.cs", label="Entry Unk.ToString", span=""];
m4_353 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", span="1028-1028"];
m4_354 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonConvert.cs", label="XmlNodeConverter converter = new XmlNodeConverter()", span="1030-1030"];
m4_355 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonConvert.cs", label="converter.DeserializeRootElementName = deserializeRootElementName", span="1031-1031"];
m4_356 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonConvert.cs", label="converter.WriteArrayAttribute = writeArrayAttribute", span="1032-1032"];
m4_357 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonConvert.cs", label="return (XmlDocument)DeserializeObject(value, typeof(XmlDocument), converter);", span="1034-1034"];
m4_358 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", span="1028-1028"];
m4_19 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", span="146-146"];
m4_20 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvert.cs", label="StringWriter writer = StringUtils.CreateStringWriter(64)", span="148-148"];
m4_22 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvert.cs", label="DateTimeUtils.WriteDateTimeOffsetString(writer, value, format, null, CultureInfo.InvariantCulture)", span="151-151"];
m4_21 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvert.cs", label="writer.Write('''')", span="150-150"];
m4_23 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvert.cs", label="writer.Write('''')", span="152-152"];
m4_24 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvert.cs", label="return writer.ToString();", span="153-153"];
m4_25 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", span="146-146"];
m4_216 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="613-613"];
m4_227 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="JsonSerializer jsonSerializer = JsonSerializer.CreateDefault(settings)", span="615-615"];
m4_228 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="jsonSerializer.Formatting = formatting", span="616-616"];
m4_229 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return SerializeObjectInternal(value, type, jsonSerializer);", span="618-618"];
m4_230 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="613-613"];
m4_39 [cluster="Newtonsoft.Json.JsonConvert.ToString(int)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(int)", span="193-193"];
m4_40 [cluster="Newtonsoft.Json.JsonConvert.ToString(int)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="195-195"];
m4_41 [cluster="Newtonsoft.Json.JsonConvert.ToString(int)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(int)", span="193-193"];
m4_130 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Uri)", span="389-389"];
m4_131 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="JsonConvert.cs", label="value == null", span="391-391"];
m4_133 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="JsonConvert.cs", label="return ToString(value, '''');", span="394-394"];
m4_132 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="JsonConvert.cs", label="return Null;", span="392-392"];
m4_134 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Uri)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.Uri)", span="389-389"];
m4_84 [cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(double)", span="289-289"];
m4_85 [cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonConvert.cs", label="return EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture));", span="291-291"];
m4_86 [cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(double)", span="289-289"];
m4_240 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116"];
m4_272 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="762-762"];
m4_273 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return DeserializeObject<T>(value, settings);", span="764-764"];
m4_274 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="762-762"];
m4_350 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", span="1012-1012"];
m4_351 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="JsonConvert.cs", label="return DeserializeXmlNode(value, deserializeRootElementName, false);", span="1014-1014"];
m4_352 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", span="1012-1012"];
m4_128 [cluster="System.TimeSpan.ToString()", file="JsonConvert.cs", label="Entry System.TimeSpan.ToString()", span="0-0"];
m4_331 [cluster="lambda expression", file="JsonConvert.cs", label="Entry lambda expression", span="954-954"];
m4_253 [cluster="lambda expression", file="JsonConvert.cs", label="SerializeObject(value, formatting, settings)", span="679-679"];
m4_252 [cluster="lambda expression", file="JsonConvert.cs", label="Entry lambda expression", span="679-679"];
m4_254 [cluster="lambda expression", file="JsonConvert.cs", label="Exit lambda expression", span="679-679"];
m4_303 [cluster="lambda expression", file="JsonConvert.cs", label="DeserializeObject<T>(value, settings)", span="868-868"];
m4_302 [cluster="lambda expression", file="JsonConvert.cs", label="Entry lambda expression", span="868-868"];
m4_304 [cluster="lambda expression", file="JsonConvert.cs", label="Exit lambda expression", span="868-868"];
m4_312 [cluster="lambda expression", file="JsonConvert.cs", label="DeserializeObject(value, type, settings)", span="901-901"];
m4_311 [cluster="lambda expression", file="JsonConvert.cs", label="Entry lambda expression", span="901-901"];
m4_313 [cluster="lambda expression", file="JsonConvert.cs", label="Exit lambda expression", span="901-901"];
m4_332 [cluster="lambda expression", file="JsonConvert.cs", label="PopulateObject(value, target, settings)", span="954-954"];
m4_333 [cluster="lambda expression", file="JsonConvert.cs", label="Exit lambda expression", span="954-954"];
m4_197 [cluster="object.GetType()", file="JsonConvert.cs", label="Entry object.GetType()", span="0-0"];
m4_105 [cluster="Newtonsoft.Json.JsonConvert.ToString(sbyte)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(sbyte)", span="331-331"];
m4_106 [cluster="Newtonsoft.Json.JsonConvert.ToString(sbyte)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="333-333"];
m4_107 [cluster="Newtonsoft.Json.JsonConvert.ToString(sbyte)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(sbyte)", span="331-331"];
m4_305 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", span="880-880"];
m4_306 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", file="JsonConvert.cs", label="return DeserializeObjectAsync(value, null, null);", span="882-882"];
m4_307 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", span="880-880"];
m4_96 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", span="307-307"];
m4_97 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonConvert.cs", label="text.IndexOf('.') != -1", span="309-309"];
m4_98 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonConvert.cs", label="return text;", span="310-310"];
m4_99 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonConvert.cs", label="return text + ''.0'';", span="312-312"];
m4_100 [cluster="Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.EnsureDecimalPlace(string)", span="307-307"];
m4_11 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="76-76"];
m4_67 [cluster="Newtonsoft.Json.JsonConvert.ToString(float)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(float)", span="263-263"];
m4_68 [cluster="Newtonsoft.Json.JsonConvert.ToString(float)", file="JsonConvert.cs", label="return EnsureDecimalPlace(value, value.ToString(''R'', CultureInfo.InvariantCulture));", span="265-265"];
m4_69 [cluster="Newtonsoft.Json.JsonConvert.ToString(float)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(float)", span="263-263"];
m4_47 [cluster="Newtonsoft.Json.JsonConvert.ToString(ushort)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(ushort)", span="214-214"];
m4_48 [cluster="Newtonsoft.Json.JsonConvert.ToString(ushort)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="216-216"];
m4_49 [cluster="Newtonsoft.Json.JsonConvert.ToString(ushort)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(ushort)", span="214-214"];
m4_294 [cluster="System.IO.StringReader.StringReader(string)", file="JsonConvert.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m4_330 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action)", file="JsonConvert.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action)", span="0-0"];
m4_70 [cluster="float.ToString(string, System.IFormatProvider)", file="JsonConvert.cs", label="Entry float.ToString(string, System.IFormatProvider)", span="0-0"];
m4_27 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(bool)", span="163-163"];
m4_28 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonConvert.cs", label="return (value) ? True : False;", span="165-165"];
m4_29 [cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(bool)", span="163-163"];
m4_59 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", span="241-241"];
m4_60 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", file="JsonConvert.cs", label="return value.ToString(null, CultureInfo.InvariantCulture);", span="243-243"];
m4_61 [cluster="Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToStringInternal(BigInteger)", span="241-241"];
m4_0 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", span="104-104"];
m4_1 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="JsonConvert.cs", label="return ToString(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.RoundtripKind);", span="106-106"];
m4_2 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.DateTime)", span="104-104"];
m4_239 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", file="JsonConvert.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", span="0-0"];
m4_12 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="103-103"];
m4_122 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", span="374-374"];
m4_123 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", file="JsonConvert.cs", label="return ToString(value, '''');", span="376-376"];
m4_124 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.ToString(System.TimeSpan)", span="374-374"];
m4_83 [cluster="double.IsNaN(double)", file="JsonConvert.cs", label="Entry double.IsNaN(double)", span="0-0"];
m4_145 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", span="211-211"];
m4_14 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="413-413"];
m4_299 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="866-866"];
m4_300 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="return Task.Factory.StartNew(() => DeserializeObject<T>(value, settings));", span="868-868"];
m4_301 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="866-866"];
m4_203 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="512-512"];
m4_204 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="return SerializeObject(value, formatting, (JsonSerializerSettings)null);", span="514-514"];
m4_205 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="512-512"];
m4_199 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="499-499"];
m4_200 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonConvert.cs", label="return SerializeObject(value, null, (JsonSerializerSettings)null);", span="501-501"];
m4_201 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="499-499"];
m4_265 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="726-726"];
m4_266 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConvert.cs", label="return DeserializeObject<T>(value, (JsonSerializerSettings)null);", span="728-728"];
m4_267 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="726-726"];
m4_207 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="523-523"];
m4_208 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="JsonSerializerSettings settings = (converters != null && converters.Length > 0)\r\n                ? new JsonSerializerSettings { Converters = converters }\r\n                : null", span="525-527"];
m4_209 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="return SerializeObject(value, null, settings);", span="529-529"];
m4_210 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="523-523"];
m4_26 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="545-545"];
m4_238 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="JsonConvert.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m4_334 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", span="964-964"];
m4_335 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="JsonConvert.cs", label="return SerializeXmlNode(node, Formatting.None);", span="966-966"];
m4_336 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", file="JsonConvert.cs", label="Exit Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode)", span="964-964"];
m4_38 [cluster="System.Enum.ToString(string)", file="JsonConvert.cs", label="Entry System.Enum.ToString(string)", span="0-0"];
m4_381 [file="JsonConvert.cs", label=object, span=""];
m4_382 [file="JsonConvert.cs", label="Newtonsoft.Json.Formatting", span=""];
m4_383 [file="JsonConvert.cs", label="Newtonsoft.Json.JsonSerializerSettings", span=""];
m4_384 [file="JsonConvert.cs", label=string, span=""];
m4_385 [file="JsonConvert.cs", label="Newtonsoft.Json.JsonSerializerSettings", span=""];
m4_386 [file="JsonConvert.cs", label=string, span=""];
m4_387 [file="JsonConvert.cs", label="System.Type", span=""];
m4_388 [file="JsonConvert.cs", label="Newtonsoft.Json.JsonSerializerSettings", span=""];
m4_389 [file="JsonConvert.cs", label=string, span=""];
m4_390 [file="JsonConvert.cs", label=object, span=""];
m4_391 [file="JsonConvert.cs", label="Newtonsoft.Json.JsonSerializerSettings", span=""];
m5_25 [cluster="Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", span="48-48"];
m5_176 [cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0"];
m5_207 [cluster="int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", file="JsonReader.cs", label="Entry int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", span="0-0"];
m5_0 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetPosition(int)", span="291-291"];
m5_1 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="depth < _stack.Count", span="293-293"];
m5_2 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="return _stack[depth];", span="294-294"];
m5_3 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="return _currentPosition;", span="296-296"];
m5_4 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.GetPosition(int)", span="291-291"];
m5_48 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="371-371"];
m5_49 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsInt32()", span="371-371"];
m5_103 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="475-475"];
m5_104 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="_readType = ReadType.ReadAsBytes", span="477-477"];
m5_105 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="JsonToken t", span="479-479"];
m5_106 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="!ReadInternal()", span="483-483"];
m5_110 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.Comment", span="492-492"];
m5_116 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.String", span="503-503"];
m5_121 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.Null", span="511-511"];
m5_123 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.Bytes", span="514-514"];
m5_125 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", color=green, community=0, file="JsonReader.cs", label="0: byte[] data = ((Guid)Value).ToByteArray()", span="518-518"];
m5_139 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.EndArray", span="544-544"];
m5_141 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="547-547"];
m5_107 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="485-485"];
m5_109 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t = TokenType", span="490-490"];
m5_108 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return null;", span="486-486"];
m5_111 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="IsWrappedInTypeObject()", span="494-494"];
m5_112 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="byte[] data = ReadAsBytes()", span="496-496"];
m5_113 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="ReadInternal()", span="497-497"];
m5_114 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="498-498"];
m5_115 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return data;", span="499-499"];
m5_117 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="string s = (string)Value", span="505-505"];
m5_118 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="byte[] data = (s.Length == 0) ? new byte[0] : Convert.FromBase64String(s)", span="506-506"];
m5_119 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="507-507"];
m5_120 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return data;", span="508-508"];
m5_122 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return null;", span="512-512"];
m5_124 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", color=green, community=0, file="JsonReader.cs", label="0: ValueType == typeof(Guid)", span="516-516"];
m5_126 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", color=green, community=0, file="JsonReader.cs", label="0: SetToken(JsonToken.Bytes, data, false)", span="519-519"];
m5_127 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", color=green, community=0, file="JsonReader.cs", label="0: return data;", span="520-520"];
m5_131 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="data.Add(Convert.ToByte(Value, CultureInfo.InvariantCulture))", span="527-527"];
m5_133 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="byte[] d = data.ToArray()", span="530-530"];
m5_128 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return (byte[])Value;", span="523-523"];
m5_138 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end when reading bytes.'');", span="541-541"];
m5_129 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label=t, span="524-524"];
m5_137 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected token when reading bytes: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="537-537"];
m5_130 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="JsonToken.Integer", span="526-526"];
m5_132 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="JsonToken.EndArray", span="529-529"];
m5_136 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="JsonToken.Comment", span="533-533"];
m5_134 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, d, false)", span="531-531"];
m5_135 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return d;", span="532-532"];
m5_140 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return null;", span="545-545"];
m5_142 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="475-475"];
m5_144 [cluster="System.Convert.FromBase64String(string)", file="JsonReader.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m5_292 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="824-824"];
m5_293 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs", label="SetToken(newToken, value, true)", span="826-826"];
m5_294 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="824-824"];
m5_13 [cluster="System.Collections.Generic.List<T>.List(int)", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m5_102 [cluster="System.DateTimeOffset.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)", file="JsonReader.cs", label="Entry System.DateTimeOffset.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)", span="0-0"];
m5_46 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m5_47 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m5_145 [cluster="System.Collections.Generic.List<T>.List()", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_42 [cluster="Newtonsoft.Json.JsonPosition.JsonPosition()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonPosition.JsonPosition()", span="41-41"];
m5_267 [cluster="System.DateTime.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="JsonReader.cs", label="Entry System.DateTime.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m5_41 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m5_5 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.JsonReader()", span="302-302"];
m5_6 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_currentState = State.Start", span="304-304"];
m5_7 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_stack = new List<JsonPosition>(4)", span="305-305"];
m5_8 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_dateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind", span="306-306"];
m5_9 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_dateParseHandling = DateParseHandling.DateTime", span="307-307"];
m5_10 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_floatParseHandling = FloatParseHandling.Double", span="308-308"];
m5_11 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="CloseInput = true", span="310-310"];
m5_12 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.JsonReader()", span="302-302"];
m5_97 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="814-814"];
m5_290 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="SetToken(newToken, null, true)", span="816-816"];
m5_291 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="814-814"];
m5_343 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="966-966"];
m5_381 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label=token, span="968-968"];
m5_388 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Not a valid close JsonToken: {0}''.FormatWith(CultureInfo.InvariantCulture, token));", span="977-977"];
m5_382 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndObject", span="970-970"];
m5_384 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndArray", span="972-972"];
m5_386 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndConstructor", span="974-974"];
m5_383 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Object;", span="971-971"];
m5_385 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Array;", span="973-973"];
m5_387 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Constructor;", span="975-975"];
m5_389 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="966-966"];
m5_98 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m5_235 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", span="710-710"];
m5_236 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="_readType = ReadType.ReadAsDateTime", span="712-712"];
m5_237 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="!ReadInternal()", span="716-716"];
m5_238 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="718-718"];
m5_240 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="TokenType == JsonToken.Comment", span="721-721"];
m5_239 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="return null;", span="719-719"];
m5_241 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="TokenType == JsonToken.Date", span="723-723"];
m5_242 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="return (DateTime)Value;", span="724-724"];
m5_243 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="TokenType == JsonToken.Null", span="726-726"];
m5_244 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="return null;", span="727-727"];
m5_245 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="DateTime dt", span="729-729"];
m5_246 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="TokenType == JsonToken.String", span="730-730"];
m5_247 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="string s = (string)Value", span="732-732"];
m5_262 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="TokenType == JsonToken.EndArray", span="758-758"];
m5_248 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="733-733"];
m5_252 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="DateTimeUtils.TryParseDateTime(s, DateParseHandling.DateTime, DateTimeZoneHandling, _dateFormatString, Culture, out temp)", span="740-740"];
m5_257 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="DateTime.TryParse(s, Culture, DateTimeStyles.RoundtripKind, out dt)", span="748-748"];
m5_249 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Null)", span="735-735"];
m5_251 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="object temp", span="739-739"];
m5_250 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="return null;", span="736-736"];
m5_253 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="dt = (DateTime)temp", span="742-742"];
m5_254 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="dt = DateTimeUtils.EnsureDateTime(dt, DateTimeZoneHandling)", span="743-743"];
m5_255 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="744-744"];
m5_256 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="return dt;", span="745-745"];
m5_258 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="dt = DateTimeUtils.EnsureDateTime(dt, DateTimeZoneHandling)", span="750-750"];
m5_261 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to DateTime: {0}.''.FormatWith(CultureInfo.InvariantCulture, Value));", span="755-755"];
m5_259 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="751-751"];
m5_260 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="return dt;", span="752-752"];
m5_263 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="return null;", span="759-759"];
m5_264 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading date. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="761-761"];
m5_265 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", span="710-710"];
m5_43 [cluster="Newtonsoft.Json.JsonReader.Peek()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Peek()", span="356-356"];
m5_44 [cluster="Newtonsoft.Json.JsonReader.Peek()", file="JsonReader.cs", label="return _currentPosition.Type;", span="358-358"];
m5_45 [cluster="Newtonsoft.Json.JsonReader.Peek()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Peek()", span="356-356"];
m5_397 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Close()", span="1002-1002"];
m5_398 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="_currentState = State.Closed", span="1004-1004"];
m5_399 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="_tokenType = JsonToken.None", span="1005-1005"];
m5_400 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="_value = null", span="1006-1006"];
m5_401 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Close()", span="1002-1002"];
m5_232 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="935-935"];
m5_362 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label=token, span="937-937"];
m5_363 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.Integer", span="939-939"];
m5_372 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return false;", span="949-949"];
m5_364 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.Float", span="940-940"];
m5_365 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.String", span="941-941"];
m5_366 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.Boolean", span="942-942"];
m5_367 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.Undefined", span="943-943"];
m5_368 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.Null", span="944-944"];
m5_369 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.Date", span="945-945"];
m5_370 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.Bytes", span="946-946"];
m5_371 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return true;", span="947-947"];
m5_373 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="935-935"];
m5_54 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="389-389"];
m5_55 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="389-389"];
m5_331 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", span="888-888"];
m5_336 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonContainerType currentObject = Pop()", span="890-890"];
m5_337 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="GetTypeForCloseToken(endToken) != currentObject", span="892-892"];
m5_338 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''JsonToken {0} is not valid for closing JsonType {1}.''.FormatWith(CultureInfo.InvariantCulture, endToken, currentObject));", span="893-893"];
m5_339 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Peek() != JsonContainerType.None", span="895-895"];
m5_340 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="_currentState = State.PostValue", span="896-896"];
m5_341 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="SetFinished()", span="898-898"];
m5_342 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", span="888-888"];
m5_26 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_332 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetFinished()", span="927-927"];
m5_358 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label=SupportMultipleContent, span="929-929"];
m5_359 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="_currentState = State.Start", span="930-930"];
m5_360 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="_currentState = State.Finished", span="932-932"];
m5_361 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetFinished()", span="927-927"];
m5_234 [cluster="object.ToString()", file="JsonReader.cs", label="Entry object.ToString()", span="0-0"];
m5_52 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="383-383"];
m5_53 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsBytes()", span="383-383"];
m5_60 [cluster="Newtonsoft.Json.JsonReader.ReadInternal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadInternal()", span="405-405"];
m5_61 [cluster="Newtonsoft.Json.JsonReader.ReadInternal()", file="JsonReader.cs", label="throw new NotImplementedException();", span="407-407"];
m5_62 [cluster="Newtonsoft.Json.JsonReader.ReadInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadInternal()", span="405-405"];
m5_148 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", span="550-550"];
m5_149 [cluster="System.Guid.ToByteArray()", file="JsonReader.cs", label="Entry System.Guid.ToByteArray()", span="0-0"];
m5_150 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="JsonToken t", span="554-554"];
m5_151 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="!ReadInternal()", span="558-558"];
m5_155 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="t == JsonToken.Comment", span="567-567"];
m5_156 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="t == JsonToken.Integer || t == JsonToken.Float", span="569-569"];
m5_160 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="t == JsonToken.Null", span="577-577"];
m5_163 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="t == JsonToken.String", span="581-581"];
m5_172 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="t == JsonToken.EndArray", span="601-601"];
m5_174 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading decimal. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="604-604"];
m5_152 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="560-560"];
m5_154 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="t = TokenType", span="565-565"];
m5_153 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="return null;", span="561-561"];
m5_157 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="!(Value is decimal)", span="571-571"];
m5_158 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Float, Convert.ToDecimal(Value, CultureInfo.InvariantCulture), false)", span="572-572"];
m5_159 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="return (decimal)Value;", span="574-574"];
m5_161 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="return null;", span="578-578"];
m5_162 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="decimal d", span="580-580"];
m5_164 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="string s = (string)Value", span="583-583"];
m5_165 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="584-584"];
m5_168 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="decimal.TryParse(s, NumberStyles.Number, Culture, out d)", span="590-590"];
m5_166 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Null)", span="586-586"];
m5_167 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="return null;", span="587-587"];
m5_169 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Float, d, false)", span="592-592"];
m5_171 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to decimal: {0}.''.FormatWith(CultureInfo.InvariantCulture, Value));", span="597-597"];
m5_170 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="return d;", span="593-593"];
m5_173 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="return null;", span="602-602"];
m5_175 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", span="550-550"];
m5_393 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Dispose(bool)", span="993-993"];
m5_394 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="_currentState != State.Closed && disposing", span="995-995"];
m5_395 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="Close()", span="996-996"];
m5_396 [cluster="Newtonsoft.Json.JsonReader.Dispose(bool)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Dispose(bool)", span="993-993"];
m5_143 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", span="764-764"];
m5_268 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="_readType = ReadType.Read", span="766-766"];
m5_269 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="TokenType == JsonToken.StartObject", span="768-768"];
m5_270 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="!ReadInternal()", span="770-770"];
m5_279 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="return false;", span="789-789"];
m5_271 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end when reading bytes.'');", span="771-771"];
m5_272 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="Value.ToString() == JsonTypeReflector.TypePropertyName", span="773-773"];
m5_273 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="ReadInternal()", span="775-775"];
m5_278 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, JsonToken.StartObject));", span="786-786"];
m5_274 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="Value != null && Value.ToString().StartsWith(''System.Byte[]'')", span="776-776"];
m5_275 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="ReadInternal()", span="778-778"];
m5_276 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="Value.ToString() == JsonTypeReflector.ValuePropertyName", span="779-779"];
m5_277 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="return true;", span="781-781"];
m5_280 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", span="764-764"];
m5_390 [cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", span="984-984"];
m5_391 [cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs", label="Dispose(true)", span="986-986"];
m5_392 [cluster="Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.System.IDisposable.Dispose()", span="984-984"];
m5_147 [cluster="System.Collections.Generic.List<T>.ToArray()", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m5_58 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="402-402"];
m5_59 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="402-402"];
m5_29 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Pop()", span="335-335"];
m5_30 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="JsonPosition oldPosition", span="337-337"];
m5_31 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_stack.Count > 0", span="338-338"];
m5_32 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="oldPosition = _currentPosition", span="340-340"];
m5_35 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="oldPosition = _currentPosition", span="346-346"];
m5_33 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_currentPosition = _stack[_stack.Count - 1]", span="341-341"];
m5_39 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="return oldPosition.Type;", span="353-353"];
m5_34 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_stack.RemoveAt(_stack.Count - 1)", span="342-342"];
m5_36 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_currentPosition = new JsonPosition()", span="347-347"];
m5_37 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_maxDepth != null && Depth <= _maxDepth", span="350-350"];
m5_38 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_hasExceededMaxDepth = false", span="351-351"];
m5_40 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Pop()", span="335-335"];
m5_206 [cluster="System.Convert.ToInt32(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToInt32(object, System.IFormatProvider)", span="0-0"];
m5_345 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="904-904"];
m5_346 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType currentObject = Peek()", span="906-906"];
m5_347 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label=currentObject, span="908-908"];
m5_356 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''While setting the reader state back to current object an unexpected JsonType was encountered: {0}''.FormatWith(CultureInfo.InvariantCulture, currentObject));", span="923-923"];
m5_348 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Object", span="910-910"];
m5_350 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Array", span="913-913"];
m5_352 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Constructor", span="916-916"];
m5_354 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.None", span="919-919"];
m5_349 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Object", span="911-911"];
m5_351 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Array", span="914-914"];
m5_353 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Constructor", span="917-917"];
m5_355 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="SetFinished()", span="920-920"];
m5_357 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="904-904"];
m5_178 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", span="607-607"];
m5_179 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="_readType = ReadType.ReadAsInt32", span="609-609"];
m5_180 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="JsonToken t", span="611-611"];
m5_181 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="!ReadInternal()", span="615-615"];
m5_185 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="t == JsonToken.Comment", span="624-624"];
m5_186 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="t == JsonToken.Integer || t == JsonToken.Float", span="626-626"];
m5_190 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="t == JsonToken.Null", span="634-634"];
m5_193 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="t == JsonToken.String", span="638-638"];
m5_202 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="t == JsonToken.EndArray", span="658-658"];
m5_182 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="617-617"];
m5_184 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="t = TokenType", span="622-622"];
m5_183 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="return null;", span="618-618"];
m5_187 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="!(Value is int)", span="628-628"];
m5_188 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="SetToken(JsonToken.Integer, Convert.ToInt32(Value, CultureInfo.InvariantCulture), false)", span="629-629"];
m5_189 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="return (int)Value;", span="631-631"];
m5_191 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="return null;", span="635-635"];
m5_192 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="int i", span="637-637"];
m5_194 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="string s = (string)Value", span="640-640"];
m5_195 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="641-641"];
m5_198 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="int.TryParse(s, NumberStyles.Integer, Culture, out i)", span="647-647"];
m5_196 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="SetToken(JsonToken.Null)", span="643-643"];
m5_197 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="return null;", span="644-644"];
m5_199 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="SetToken(JsonToken.Integer, i, false)", span="649-649"];
m5_201 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to integer: {0}.''.FormatWith(CultureInfo.InvariantCulture, Value));", span="654-654"];
m5_200 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="return i;", span="650-650"];
m5_203 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="return null;", span="659-659"];
m5_204 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading integer. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="661-661"];
m5_205 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", span="607-607"];
m5_63 [cluster="System.NotImplementedException.NotImplementedException()", file="JsonReader.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m5_99 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="829-829"];
m5_295 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_tokenType = newToken", span="831-831"];
m5_296 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_value = value", span="832-832"];
m5_297 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label=newToken, span="834-834"];
m5_315 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentPosition.PropertyName = (string)value", span="860-860"];
m5_328 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label=updateIndex, span="876-876"];
m5_298 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartObject", span="836-836"];
m5_301 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartArray", span="840-840"];
m5_304 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartConstructor", span="844-844"];
m5_307 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndObject", span="848-848"];
m5_309 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndArray", span="851-851"];
m5_311 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndConstructor", span="854-854"];
m5_313 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.PropertyName", span="857-857"];
m5_316 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Undefined", span="862-862"];
m5_299 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ObjectStart", span="837-837"];
m5_300 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Object)", span="838-838"];
m5_302 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ArrayStart", span="841-841"];
m5_303 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Array)", span="842-842"];
m5_305 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ConstructorStart", span="845-845"];
m5_306 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Constructor)", span="846-846"];
m5_308 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndObject)", span="849-849"];
m5_310 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndArray)", span="852-852"];
m5_312 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndConstructor)", span="855-855"];
m5_314 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.Property", span="858-858"];
m5_317 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Integer", span="863-863"];
m5_318 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Float", span="864-864"];
m5_319 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Boolean", span="865-865"];
m5_320 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Null", span="866-866"];
m5_321 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Date", span="867-867"];
m5_322 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.String", span="868-868"];
m5_323 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Raw", span="869-869"];
m5_324 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Bytes", span="870-870"];
m5_325 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Peek() != JsonContainerType.None", span="871-871"];
m5_326 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.PostValue", span="872-872"];
m5_327 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="SetFinished()", span="874-874"];
m5_329 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="UpdateScopeWithFinishedValue()", span="877-877"];
m5_330 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="829-829"];
m5_50 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsString()", span="377-377"];
m5_51 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsString()", span="377-377"];
m5_14 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", span="313-313"];
m5_15 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="UpdateScopeWithFinishedValue()", span="315-315"];
m5_17 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition = new JsonPosition(value)", span="319-319"];
m5_19 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition = new JsonPosition(value)", span="324-324"];
m5_16 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition.Type == JsonContainerType.None", span="317-317"];
m5_18 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_stack.Add(_currentPosition)", span="323-323"];
m5_20 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_maxDepth != null && Depth + 1 > _maxDepth && !_hasExceededMaxDepth", span="327-327"];
m5_21 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_hasExceededMaxDepth = true", span="329-329"];
m5_22 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''The reader's MaxDepth of {0} has been exceeded.''.FormatWith(CultureInfo.InvariantCulture, _maxDepth));", span="330-330"];
m5_23 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", span="313-313"];
m5_101 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out object)", span="286-286"];
m5_289 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", span="953-953"];
m5_374 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label=token, span="955-955"];
m5_375 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.StartObject", span="957-957"];
m5_379 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return false;", span="962-962"];
m5_376 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.StartArray", span="958-958"];
m5_377 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.StartConstructor", span="959-959"];
m5_378 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return true;", span="960-960"];
m5_380 [cluster="Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.IsStartToken(Newtonsoft.Json.JsonToken)", span="953-953"];
m5_282 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Skip()", span="795-795"];
m5_283 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="TokenType == JsonToken.PropertyName", span="797-797"];
m5_284 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Read()", span="798-798"];
m5_285 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="IsStartToken(TokenType)", span="800-800"];
m5_286 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="int depth = Depth", span="802-802"];
m5_287 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Read() && (depth < Depth)", span="804-804"];
m5_288 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Skip()", span="795-795"];
m5_28 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m5_24 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", span="882-882"];
m5_333 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="_currentPosition.HasIndex", span="884-884"];
m5_334 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="_currentPosition.Position++", span="885-885"];
m5_335 [cluster="Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.UpdateScopeWithFinishedValue()", span="882-882"];
m5_281 [cluster="string.StartsWith(string)", file="JsonReader.cs", label="Entry string.StartsWith(string)", span="0-0"];
m5_177 [cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="JsonReader.cs", label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0"];
m5_56 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="395-395"];
m5_57 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="395-395"];
m5_64 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="411-411"];
m5_65 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="_readType = ReadType.ReadAsDateTimeOffset", span="413-413"];
m5_66 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="JsonToken t", span="415-415"];
m5_67 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="!ReadInternal()", span="419-419"];
m5_71 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t == JsonToken.Comment", span="428-428"];
m5_72 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t == JsonToken.Date", span="430-430"];
m5_76 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t == JsonToken.Null", span="438-438"];
m5_79 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t == JsonToken.String", span="442-442"];
m5_93 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t == JsonToken.EndArray", span="468-468"];
m5_95 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading date. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="471-471"];
m5_68 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="421-421"];
m5_70 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t = TokenType", span="426-426"];
m5_69 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return null;", span="422-422"];
m5_73 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="Value is DateTime", span="432-432"];
m5_74 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Date, new DateTimeOffset((DateTime)Value), false)", span="433-433"];
m5_75 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return (DateTimeOffset)Value;", span="435-435"];
m5_77 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return null;", span="439-439"];
m5_78 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="DateTimeOffset dt", span="441-441"];
m5_80 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="string s = (string)Value", span="444-444"];
m5_81 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="445-445"];
m5_85 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="DateTimeUtils.TryParseDateTime(s, DateParseHandling.DateTimeOffset, DateTimeZoneHandling, _dateFormatString, Culture, out temp)", span="452-452"];
m5_89 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="DateTimeOffset.TryParse(s, Culture, DateTimeStyles.RoundtripKind, out dt)", span="459-459"];
m5_82 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Null)", span="447-447"];
m5_84 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="object temp", span="451-451"];
m5_83 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return null;", span="448-448"];
m5_86 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="dt = (DateTimeOffset)temp", span="454-454"];
m5_87 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="455-455"];
m5_88 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return dt;", span="456-456"];
m5_90 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="461-461"];
m5_92 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to DateTimeOffset: {0}.''.FormatWith(CultureInfo.InvariantCulture, Value));", span="465-465"];
m5_91 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return dt;", span="462-462"];
m5_94 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return null;", span="469-469"];
m5_96 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="411-411"];
m5_100 [cluster="string.IsNullOrEmpty(string)", file="JsonReader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m5_344 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m5_146 [cluster="System.Convert.ToByte(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToByte(object, System.IFormatProvider)", span="0-0"];
m5_208 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsStringInternal()", span="664-664"];
m5_209 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="_readType = ReadType.ReadAsString", span="666-666"];
m5_210 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="JsonToken t", span="668-668"];
m5_211 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="!ReadInternal()", span="672-672"];
m5_215 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="t == JsonToken.Comment", span="681-681"];
m5_216 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="t == JsonToken.String", span="683-683"];
m5_218 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="t == JsonToken.Null", span="686-686"];
m5_220 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="IsPrimitiveToken(t)", span="689-689"];
m5_228 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="t == JsonToken.EndArray", span="704-704"];
m5_230 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading string. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="707-707"];
m5_212 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="674-674"];
m5_214 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="t = TokenType", span="679-679"];
m5_213 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="return null;", span="675-675"];
m5_217 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="return (string)Value;", span="684-684"];
m5_219 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="return null;", span="687-687"];
m5_221 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="Value != null", span="691-691"];
m5_222 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="string s", span="693-693"];
m5_223 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="Value is IFormattable", span="694-694"];
m5_224 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="s = ((IFormattable)Value).ToString(null, Culture)", span="695-695"];
m5_225 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="s = Value.ToString()", span="697-697"];
m5_226 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="699-699"];
m5_227 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="return s;", span="700-700"];
m5_229 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="return null;", span="705-705"];
m5_231 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsStringInternal()", span="664-664"];
m5_233 [cluster="System.IFormattable.ToString(string, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.IFormattable.ToString(string, System.IFormatProvider)", span="0-0"];
m5_266 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="76-76"];
m5_27 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m5_402 [file="JsonReader.cs", label="Newtonsoft.Json.JsonReader", span=""];
m6_7 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="XmlNodeConverter.cs", label="ser.CheckAdditionalContent = false", span="119-119"];
m6_2371 [cluster="XmlDocument.cstr", file="XmlNodeConverter.cs", label="Entry XmlDocument.cstr", span=""];
m6_494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, serializer.EqualityComparer)", span="1205-1205"];
m6_1480 [cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27"];
m6_3885 [cluster="Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", span="35-35"];
m6_2129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4763-4763"];
m6_2130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="XmlNodeConverter.cs", label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="4765-4765"];
m6_2131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4763-4763"];
m6_684 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="''@system''", span="1645-1645"];
m6_685 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="1646-1646"];
m6_686 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="systemId = reader.Value.ToString()", span="1647-1647"];
m6_687 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="''@internalSubset''", span="1649-1649"];
m6_688 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="1650-1650"];
m6_689 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="internalSubset = reader.Value.ToString()", span="1651-1651"];
m6_690 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1654-1654"];
m6_757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XDeclarationWrapper", span=""];
m6_763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlNodeConverter", span=""];
m6_764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.IXmlNode", span=""];
m6_759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XDocumentWrapper", span=""];
m6_762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XElementWrapper", span=""];
m6_765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="XmlNodeConverter.cs", label=string, span=""];
m6_758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XDocumentTypeWrapper", span=""];
m6_760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XContainerWrapper", span=""];
m6_761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XObjectWrapper", span=""];
m6_766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="XmlNodeConverter.cs", label=propertyName, span=""];
m6_237 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="835-835"];
m6_242 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="return Element.GetPrefixOfNamespace(namespaceUri);", span="856-856"];
m6_246 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="910-910"];
m6_241 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="854-854"];
m6_243 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="854-854"];
m6_245 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="IXmlNode node = WrapXml(value)", span="908-908"];
m6_240 [cluster="XAttributeWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XAttributeWrapper.cstr", span=""];
m6_244 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="906-906"];
m6_239 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="835-835"];
m6_238 [cluster="lambda expression", file="XmlNodeConverter.cs", label="new XAttributeWrapper(a)", span="835-835"];
m6_247 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="PushParentNamespaces(node, manager)", span="911-911"];
m6_554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), settings.Context)", span="1286-1286"];
m6_556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="settings.ContractResolver = resolver", span="1290-1290"];
m6_557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(resolver, settings.ContractResolver)", span="1291-1291"];
m6_558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="settings.Converters.Add(new StringEnumConverter())", span="1293-1293"];
m6_559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, settings.Converters.Count)", span="1294-1294"];
m6_560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="settings.Culture = new CultureInfo(''en-nz'')", span="1296-1296"];
m6_561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''en-NZ'', settings.Culture.ToString())", span="1297-1297"];
m6_562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="settings.EqualityComparer = EqualityComparer<object>.Default", span="1299-1299"];
m6_563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, settings.EqualityComparer)", span="1300-1300"];
m6_564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="settings.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1302-1302"];
m6_565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, settings.DateFormatHandling)", span="1303-1303"];
m6_566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="settings.DateFormatString = ''yyyy''", span="1305-1305"];
m6_567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''yyyy'', settings.DateFormatString)", span="1306-1306"];
m6_568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="settings.DateParseHandling = DateParseHandling.None", span="1308-1308"];
m6_569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(DateParseHandling.None, settings.DateParseHandling)", span="1309-1309"];
m6_570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="settings.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1311-1311"];
m6_571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, settings.DateTimeZoneHandling)", span="1312-1312"];
m6_573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, settings.DefaultValueHandling)", span="1315-1315"];
m6_575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, settings.FloatFormatHandling)", span="1318-1318"];
m6_572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="settings.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1314-1314"];
m6_574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="settings.FloatFormatHandling = FloatFormatHandling.Symbol", span="1317-1317"];
m6_576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="settings.FloatParseHandling = FloatParseHandling.Decimal", span="1320-1320"];
m6_790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", span="1653-1653"];
m6_2086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="4618-4618"];
m6_18 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="70-70"];
m6_1149 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m6_1643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3529-3529"];
m6_1644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="XmlNodeConverter.cs", label="_name = name", span="3531-3531"];
m6_1645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="XmlNodeConverter.cs", label="Age = age", span="3532-3532"];
m6_1646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="XmlNodeConverter.cs", label="Rank = rank", span="3533-3533"];
m6_1647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="XmlNodeConverter.cs", label="Title = title", span="3534-3534"];
m6_1648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3529-3529"];
m6_15 [cluster="Unk.CreateCDataSection", file="XmlNodeConverter.cs", label="Entry Unk.CreateCDataSection", span=""];
m6_2372 [cluster="Unk.LoadXml", file="XmlNodeConverter.cs", label="Entry Unk.LoadXml", span=""];
m6_448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="XmlNodeConverter.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="1138-1138"];
m6_541 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Null", span="1390-1390"];
m6_840 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="775-775"];
m6_833 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="522-522"];
m6_3875 [cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35"];
m6_2216 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0"];
m6_798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1706-1706"];
m6_802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="XmlNodeConverter.cs", label="Assert.AreEqual(expectedJson, json)", span="1711-1711"];
m6_800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="XmlNodeConverter.cs", label="var json = JsonConvert.SerializeObject(original)", span="1709-1709"];
m6_801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="XmlNodeConverter.cs", label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1710-1710"];
m6_799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="XmlNodeConverter.cs", label="var original = new Foo1<Bar1> { foo = new Bar1 { bar = ''value'' }, foo2 = new Bar1 { bar = ''value2'' } }", span="1708-1708"];
m6_803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1706-1706"];
m6_1287 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32"];
m6_1730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3763-3763"];
m6_1733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="3769-3769"];
m6_1734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Admin'', r.RoleName)", span="3770-3770"];
m6_1735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="3771-3771"];
m6_1732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="XmlNodeConverter.cs", label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="3767-3767"];
m6_1731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="XmlNodeConverter.cs", label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="3765-3765"];
m6_1736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3763-3763"];
m6_95 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(true, l[i++])", span="319-319"];
m6_96 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(false, l[i++])", span="320-320"];
m6_467 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XDocument or XElement.'');", span="1249-1249"];
m6_1234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2660-2660"];
m6_1237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''''''2001-04-04T00:00:00Z'''''', json)", span="2665-2665"];
m6_1236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(date)", span="2664-2664"];
m6_1235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="XmlNodeConverter.cs", label="var date = new DateTime(2001, 4, 4, 0, 0, 0, DateTimeKind.Utc)", span="2662-2662"];
m6_1238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2660-2660"];
m6_109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(true, l[i++])", span="353-353"];
m6_110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(true, l[i++])", span="354-354"];
m6_917 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="XmlNodeConverter.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m6_542 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType != JsonToken.EndObject", span="1397-1397"];
m6_953 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m6_2426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5453-5453"];
m6_2427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                //Additional text found in JSON string after finishing deserializing object.\r\n                //Test 1\r\n                var reference = new Dictionary<string, object>();\r\n                reference.Add(''$ref'', 1);\r\n                reference.Add(''$id'', 1);\r\n\r\n                var child = new Dictionary<string, object>();\r\n                child.Add(''_id'', 2);\r\n                child.Add(''Name'', ''Isabell'');\r\n                child.Add(''Father'', reference);\r\n\r\n                var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n                JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n            }, ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 13.'')", span="5455-5470"];
m6_2428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5453-5453"];
m6_2033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4445-4445"];
m6_2035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="XmlNodeConverter.cs", label="Add(pair.Key, pair.Value)", span="4449-4449"];
m6_2034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="XmlNodeConverter.cs", label=initial, span="4447-4447"];
m6_2036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4445-4445"];
m6_890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="1868-1868"];
m6_719 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.EndObject", span="1715-1715"];
m6_730 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="prefix = string.Empty", span="1737-1737"];
m6_731 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="return true;", span="1738-1738"];
m6_732 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="attributeName[5] == ':'", span="1740-1740"];
m6_733 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="prefix = attributeName.Substring(6, attributeName.Length - 6)", span="1742-1742"];
m6_734 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="return true;", span="1743-1743"];
m6_735 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="prefix = null", span="1746-1746"];
m6_736 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="return false;", span="1747-1747"];
m6_737 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1731-1731"];
m6_738 [cluster="string.Substring(int, int)", file="XmlNodeConverter.cs", label="Entry string.Substring(int, int)", span="0-0"];
m6_724 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1671-1671"];
m6_729 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="attributeName.Length == 5", span="1735-1735"];
m6_720 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.EndArray", span="1716-1716"];
m6_721 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return;", span="1717-1717"];
m6_723 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.PropertyName || reader.Read()", span="1721-1721"];
m6_725 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="1695-1695"];
m6_727 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="1695-1695"];
m6_728 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="attributeName.StartsWith(''xmlns'', StringComparison.Ordinal)", span="1733-1733"];
m6_726 [cluster="lambda expression", file="XmlNodeConverter.cs", label="n.LocalName == propertyName", span="1695-1695"];
m6_722 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected JsonToken when deserializing node: '' + reader.TokenType);", span="1719-1719"];
m6_739 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="XmlNodeConverter.cs", label="return c.Where(a => a.NamespaceUri != JsonNamespaceUri);", span="1752-1752"];
m6_1138 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="770-770"];
m6_1865 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="195-195"];
m6_117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", span="325-325"];
m6_118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="365-365"];
m6_159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", span="430-430"];
m6_1326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2817-2817"];
m6_1332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="XmlNodeConverter.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2830-2830"];
m6_1333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="XmlNodeConverter.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2831-2831"];
m6_1330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2826-2826"];
m6_1327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="XmlNodeConverter.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2819-2819"];
m6_1331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="XmlNodeConverter.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2828-2828"];
m6_1329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n            })", span="2822-2825"];
m6_1328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="XmlNodeConverter.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2820-2820"];
m6_1334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2817-2817"];
m6_1769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3826-3826"];
m6_1771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, l.Count)", span="3829-3829"];
m6_1772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3.3m, l[0])", span="3831-3831"];
m6_1773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, l[1])", span="3832-3832"];
m6_1774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1.1m, l[2])", span="3833-3833"];
m6_1770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="XmlNodeConverter.cs", label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="3828-3828"];
m6_1775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3826-3826"];
m6_3053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6980-6980"];
m6_3057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="XmlNodeConverter.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="6988-6988"];
m6_3058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="XmlNodeConverter.cs", label="Assert.AreEqual(d1[0], d2[0])", span="6989-6989"];
m6_3054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="XmlNodeConverter.cs", label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="6982-6982"];
m6_3056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="XmlNodeConverter.cs", label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="6986-6986"];
m6_3055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(d1)", span="6984-6984"];
m6_3059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6980-6980"];
m6_1710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3695-3695"];
m6_1713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="3704-3704"];
m6_1712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(value)", span="3702-3702"];
m6_1711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="XmlNodeConverter.cs", label="var value = new\r\n            {\r\n                bar = new JObject(new JProperty(''baz'', 13))\r\n            }", span="3697-3700"];
m6_1714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3695-3695"];
m6_2576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5778-5778"];
m6_2578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5781-5781"];
m6_2577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="XmlNodeConverter.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="5780-5780"];
m6_2579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5778-5778"];
m6_1481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="3114-3114"];
m6_1491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(json, after)", span="3129-3129"];
m6_1484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="3120-3120"];
m6_1485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''After!'', aa.After)", span="3121-3121"];
m6_1486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(4, aa.Coordinates.Length)", span="3122-3122"];
m6_1487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="3123-3123"];
m6_1488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="3124-3124"];
m6_1489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="3125-3125"];
m6_1482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="XmlNodeConverter.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="3116-3116"];
m6_1490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="XmlNodeConverter.cs", label="string after = JsonConvert.SerializeObject(aa)", span="3127-3127"];
m6_1483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="XmlNodeConverter.cs", label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="3118-3118"];
m6_1492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="3114-3114"];
m6_1749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3798-3798"];
m6_1751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<TestObjects.Event>(json); }, @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'')", span="3802-3802"];
m6_1750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="XmlNodeConverter.cs", label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="3800-3800"];
m6_1752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3798-3798"];
m6_3310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="7531-7531"];
m6_4101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", span="9515-9515"];
m6_429 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.DocumentType", span="1193-1193"];
m6_3188 [cluster="Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", span="27-27"];
m6_1351 [cluster="System.Convert.ToDateTime(string)", file="XmlNodeConverter.cs", label="Entry System.Convert.ToDateTime(string)", span="0-0"];
m6_69 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="268-268"];
m6_70 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", span="273-273"];
m6_71 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['pie']''),\r\n                @''Could not convert string to boolean: pie. Path '[0]', line 1, position 6.'')", span="275-277"];
m6_185 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="551-551"];
m6_186 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="XDeclarationWrapper declarationWrapper = newChild as XDeclarationWrapper", span="553-553"];
m6_190 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return base.AppendChild(newChild);", span="561-561"];
m6_187 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="declarationWrapper != null", span="554-554"];
m6_188 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Document.Declaration = declarationWrapper.Declaration", span="556-556"];
m6_189 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return declarationWrapper;", span="557-557"];
m6_191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="495-495"];
m6_1708 [cluster="System.Uri.Uri(string)", file="XmlNodeConverter.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m6_1041 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="357-357"];
m6_2745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="6157-6157"];
m6_2748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="XmlNodeConverter.cs", label="Assert.AreEqual(40, p.Age)", span="6167-6167"];
m6_2749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="XmlNodeConverter.cs", label="Assert.AreEqual(44.4, p.Height)", span="6168-6168"];
m6_2750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="XmlNodeConverter.cs", label="Assert.AreEqual(4m, p.Price)", span="6169-6169"];
m6_2747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="XmlNodeConverter.cs", label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="6166-6166"];
m6_2746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="6159-6164"];
m6_2751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="6157-6157"];
m6_2650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="5909-5909"];
m6_741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1600-1600"];
m6_2440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5474-5474"];
m6_2450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''_id'''':2,''''Name'''':''''Isabell'''',''''Father'''':{''''$ref'''':null,''''$id'''':null,''''blah'''':''''blah!''''}}'', json)", span="5488-5488"];
m6_2452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, result.Count)", span="5492-5492"];
m6_2453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="5493-5493"];
m6_2454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="5494-5494"];
m6_2449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(child)", span="5486-5486"];
m6_2451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5490-5490"];
m6_2448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="child.Add(''Father'', reference)", span="5484-5484"];
m6_2445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="var child = new Dictionary<string, object>()", span="5481-5481"];
m6_2441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="var reference = new Dictionary<string, object>()", span="5476-5476"];
m6_2447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="child.Add(''Name'', ''Isabell'')", span="5483-5483"];
m6_2444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="reference.Add(''blah'', ''blah!'')", span="5479-5479"];
m6_2446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="child.Add(''_id'', 2)", span="5482-5482"];
m6_2442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="reference.Add(''$ref'', null)", span="5477-5477"];
m6_2443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="reference.Add(''$id'', null)", span="5478-5478"];
m6_2455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5474-5474"];
m6_2217 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0"];
m6_224 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,'')", span="547-547"];
m6_1156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2514-2514"];
m6_1158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''null'', json)", span="2517-2517"];
m6_1157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(null)", span="2516-2516"];
m6_1159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2514-2514"];
m6_3946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="9147-9147"];
m6_3949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Id'''': ''''1'''',\r\n  ''''X'''': 2\r\n}'', s)", span="9151-9154"];
m6_3948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="XmlNodeConverter.cs", label="var s = JsonConvert.SerializeObject(c, Formatting.Indented)", span="9150-9150"];
m6_3947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="XmlNodeConverter.cs", label="var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }, X = 2 }", span="9149-9149"];
m6_3950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="9147-9147"];
m6_3295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7473-7473"];
m6_3301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(product)", span="7481-7481"];
m6_3298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="XmlNodeConverter.cs", label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="7477-7477"];
m6_3302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="XmlNodeConverter.cs", label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7489-7494"];
m6_3305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="XmlNodeConverter.cs", label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7514-7519"];
m6_3296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="XmlNodeConverter.cs", label="Product product = new Product()", span="7475-7475"];
m6_3300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="XmlNodeConverter.cs", label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="7479-7479"];
m6_3303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="7495-7504"];
m6_3306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="7521-7528"];
m6_3297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="XmlNodeConverter.cs", label="product.Name = ''Apple''", span="7476-7476"];
m6_3299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="XmlNodeConverter.cs", label="product.Price = 3.99M", span="7478-7478"];
m6_3304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="XmlNodeConverter.cs", label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="7512-7512"];
m6_3307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7473-7473"];
m6_357 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i < groupedNodes.Count", span="1070-1070"];
m6_359 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i++", span="1070-1070"];
m6_360 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndArray()", span="1075-1075"];
m6_358 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeNode(writer, groupedNodes[i], manager, false)", span="1072-1072"];
m6_361 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1021-1021"];
m6_1472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="3101-3101"];
m6_1478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="3110-3110"];
m6_1477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(aa)", span="3108-3108"];
m6_1473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="XmlNodeConverter.cs", label="JaggedArray aa = new JaggedArray()", span="3103-3103"];
m6_1476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="XmlNodeConverter.cs", label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="3106-3106"];
m6_1474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="XmlNodeConverter.cs", label="aa.Before = ''Before!''", span="3104-3104"];
m6_1475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="XmlNodeConverter.cs", label="aa.After = ''After!''", span="3105-3105"];
m6_1479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="3101-3101"];
m6_3953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="9159-9159"];
m6_3957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1408188593, time)", span="9165-9165"];
m6_3956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="XmlNodeConverter.cs", label="int time = (int)o[''result''][''time'']", span="9163-9163"];
m6_3955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="XmlNodeConverter.cs", label="JObject o = JsonConvert.DeserializeObject<JObject>(content)", span="9162-9162"];
m6_3954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="XmlNodeConverter.cs", label="string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}''", span="9161-9161"];
m6_3958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="9159-9159"];
m6_2480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5554-5554"];
m6_2487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, newDictionary.Count)", span="5571-5571"];
m6_2486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="XmlNodeConverter.cs", label="Dictionary<DictionaryKey, string> newDictionary =\r\n                JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="5568-5569"];
m6_2484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="5561-5561"];
m6_2485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="5563-5566"];
m6_2481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="XmlNodeConverter.cs", label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="5556-5556"];
m6_2483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="XmlNodeConverter.cs", label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="5559-5559"];
m6_2482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="XmlNodeConverter.cs", label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="5558-5558"];
m6_2488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5554-5554"];
m6_769 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88"];
m6_2974 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="483-483"];
m6_599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, settings.StringEscapeHandling)", span="1355-1355"];
m6_2018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4419-4419"];
m6_2021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, dic.Count)", span="4425-4425"];
m6_2022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''value1'', dic[''key1''])", span="4426-4426"];
m6_2023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''value2'', dic[''key2''])", span="4427-4427"];
m6_2024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''value3'', dic[''key3''])", span="4428-4428"];
m6_2020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="XmlNodeConverter.cs", label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="4423-4423"];
m6_2019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="XmlNodeConverter.cs", label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="4421-4421"];
m6_2025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4419-4419"];
m6_1352 [cluster="System.DateTime.ToUniversalTime()", file="XmlNodeConverter.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m6_287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="697-700"];
m6_2984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6830-6830"];
m6_2989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="XmlNodeConverter.cs", label="Assert.AreEqual(uri, output)", span="6837-6837"];
m6_2986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="XmlNodeConverter.cs", label="Uri uri = new Uri(input)", span="6833-6833"];
m6_2988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="XmlNodeConverter.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6835-6835"];
m6_2987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(uri)", span="6834-6834"];
m6_2985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="XmlNodeConverter.cs", label="string input = @''http://tes/?a=b\\c&d=e\''", span="6832-6832"];
m6_2990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6830-6830"];
m6_374 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeGroupedNodes(writer, node, manager, false)", span="1091-1091"];
m6_1233 [cluster="Unk.AreNotEqual", file="XmlNodeConverter.cs", label="Entry Unk.AreNotEqual", span=""];
m6_2897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6622-6622"];
m6_2898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="XmlNodeConverter.cs", label="return _readonlyString;", span="6624-6624"];
m6_2899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6622-6622"];
m6_2137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4773-4773"];
m6_2138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="XmlNodeConverter.cs", label="return _innerDictionary.TryGetValue(key, out value);", span="4775-4775"];
m6_2139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4773-4773"];
m6_2220 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0"];
m6_258 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m6_259 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1080-1080"];
m6_260 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m6_4176 [cluster="System.Text.Encoding.GetEncoding(string)", file="XmlNodeConverter.cs", label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0"];
m6_3067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="7006-7006"];
m6_3071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="7014-7014"];
m6_3072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(d1[0], d2[0])", span="7015-7015"];
m6_3068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="XmlNodeConverter.cs", label="IList<byte[]> d1 = new List<byte[]> { null }", span="7008-7008"];
m6_3070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="XmlNodeConverter.cs", label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="7012-7012"];
m6_3069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(d1)", span="7010-7010"];
m6_3073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="7006-7006"];
m6_4055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9406-9406"];
m6_4059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<ConstantTestClass>(json)", span="9416-9416"];
m6_4058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MY_CONSTANT'''': ''''.''''\r\n}'', json)", span="9412-9414"];
m6_4057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="9410-9410"];
m6_4056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="XmlNodeConverter.cs", label="ConstantTestClass c1 = new ConstantTestClass()", span="9408-9408"];
m6_4060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9406-9406"];
m6_549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="settings.CheckAdditionalContent = true", span="1278-1278"];
m6_28 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", span="157-157"];
m6_3688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8485-8485"];
m6_3691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''Item1'''':500,''''Item2'''':20}'', json)", span="8489-8489"];
m6_3693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="XmlNodeConverter.cs", label="Assert.AreEqual(500, tuple2.Item1)", span="8492-8492"];
m6_3694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="XmlNodeConverter.cs", label="Assert.AreEqual(20, tuple2.Item2)", span="8493-8493"];
m6_3690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(tuple)", span="8488-8488"];
m6_3692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="XmlNodeConverter.cs", label="Tuple<int, int> tuple2 = JsonConvert.DeserializeObject<Tuple<int, int>>(json)", span="8491-8491"];
m6_3689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="XmlNodeConverter.cs", label="Tuple<int, int> tuple = Tuple.Create(500, 20)", span="8487-8487"];
m6_3695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8485-8485"];
m6_579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(Formatting.Indented, settings.Formatting)", span="1324-1324"];
m6_1991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4324-4324"];
m6_1992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="XmlNodeConverter.cs", label="_dict1.Add(item.Key, item)", span="4326-4326"];
m6_1993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4324-4324"];
m6_2606 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="XmlNodeConverter.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m6_832 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="XmlNodeConverter.cs", label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="949-949"];
m6_2714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="6096-6096"];
m6_2716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="6099-6099"];
m6_2715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="XmlNodeConverter.cs", label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="6098-6098"];
m6_2717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="6096-6096"];
m6_3641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8319-8319"];
m6_3642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="XmlNodeConverter.cs", label="IgnoreSerializableAttribute = false", span="8321-8321"];
m6_3643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8319-8319"];
m6_3457 [cluster="Unk.IsFalse", file="XmlNodeConverter.cs", label="Entry Unk.IsFalse", span=""];
m6_2062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4581-4581"];
m6_2064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="XmlNodeConverter.cs", label="C2 = c2", span="4583-4583"];
m6_2065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4581-4581"];
m6_335 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i < node.ChildNodes.Count", span="1026-1026"];
m6_338 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="List<IXmlNode> nodes", span="1031-1031"];
m6_339 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!nodesGroupedByName.TryGetValue(nodeName, out nodes)", span="1032-1032"];
m6_340 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="nodes = new List<IXmlNode>()", span="1034-1034"];
m6_336 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IXmlNode childNode = node.ChildNodes[i]", span="1028-1028"];
m6_337 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="string nodeName = GetPropertyName(childNode, manager)", span="1029-1029"];
m6_341 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="nodesGroupedByName.Add(nodeName, nodes)", span="1035-1035"];
m6_342 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="nodes.Add(childNode)", span="1038-1038"];
m6_283 [cluster="System.Collections.Generic.List<T>.List()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_1715 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="326-326"];
m6_2616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5864-5864"];
m6_2620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="XmlNodeConverter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5870-5870"];
m6_2622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="XmlNodeConverter.cs", label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="5873-5873"];
m6_2619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="XmlNodeConverter.cs", label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5868-5868"];
m6_2621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="XmlNodeConverter.cs", label="Invoice i = serializer.Deserialize<Invoice>(reader)", span="5872-5872"];
m6_2618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="XmlNodeConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5867-5867"];
m6_2617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="XmlNodeConverter.cs", label="string json = ''{Amount:123456789876543.21}''", span="5866-5866"];
m6_2623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5864-5864"];
m6_2550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5729-5729"];
m6_2555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="XmlNodeConverter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5741-5741"];
m6_2552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="5736-5736"];
m6_2557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="XmlNodeConverter.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5745-5745"];
m6_2558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5746-5746"];
m6_2554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="XmlNodeConverter.cs", label="reader.DateParseHandling = DateParseHandling.None", span="5739-5739"];
m6_2556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="XmlNodeConverter.cs", label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5743-5743"];
m6_2551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="XmlNodeConverter.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            })", span="5731-5734"];
m6_2553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="XmlNodeConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5738-5738"];
m6_2559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5729-5729"];
m6_2788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6289-6289"];
m6_2789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="6291-6291"];
m6_2790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="6292-6292"];
m6_2791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6289-6289"];
m6_2096 [cluster="Unk.nameof", file="XmlNodeConverter.cs", label="Entry Unk.nameof", span=""];
m6_860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1892-1892"];
m6_867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1909-1916"];
m6_866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1907-1907"];
m6_861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1894-1900"];
m6_865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1905-1905"];
m6_862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1902-1902"];
m6_863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.Virtual = ''Virtual2!''", span="1903-1903"];
m6_864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1904-1904"];
m6_868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1892-1892"];
m6_492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''en-NZ'', serializer.Culture.ToString())", span="1202-1202"];
m6_2651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="5897-5897"];
m6_499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.DateParseHandling = DateParseHandling.None", span="1213-1213"];
m6_500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(DateParseHandling.None, serializer.DateParseHandling)", span="1214-1214"];
m6_502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializer.DateTimeZoneHandling)", span="1217-1217"];
m6_504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializer.DefaultValueHandling)", span="1220-1220"];
m6_506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, serializer.FloatFormatHandling)", span="1223-1223"];
m6_508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, serializer.FloatParseHandling)", span="1226-1226"];
m6_509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.Formatting = Formatting.Indented", span="1228-1228"];
m6_510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(Formatting.Indented, serializer.Formatting)", span="1229-1229"];
m6_511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.MaxDepth = 9001", span="1231-1231"];
m6_512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(9001, serializer.MaxDepth)", span="1232-1232"];
m6_513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.MissingMemberHandling = MissingMemberHandling.Error", span="1234-1234"];
m6_514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(MissingMemberHandling.Error, serializer.MissingMemberHandling)", span="1235-1235"];
m6_516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(NullValueHandling.Ignore, serializer.NullValueHandling)", span="1238-1238"];
m6_501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1216-1216"];
m6_503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1219-1219"];
m6_505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.FloatFormatHandling = FloatFormatHandling.Symbol", span="1222-1222"];
m6_507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.FloatParseHandling = FloatParseHandling.Decimal", span="1225-1225"];
m6_515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.NullValueHandling = NullValueHandling.Ignore", span="1237-1237"];
m6_517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1240-1240"];
m6_3722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8555-8555"];
m6_3725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="XmlNodeConverter.cs", label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="8561-8561"];
m6_3724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="XmlNodeConverter.cs", label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="8559-8559"];
m6_3726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<IList<long>>(json), ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'')", span="8563-8563"];
m6_3723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="XmlNodeConverter.cs", label="string json = @''[999999999999999999999999999999999999999999999999]''", span="8557-8557"];
m6_3727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8555-8555"];
m6_777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", span="1648-1648"];
m6_612 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType != JsonToken.String\r\n                && reader.TokenType != JsonToken.Null\r\n                && reader.TokenType != JsonToken.Boolean\r\n                && reader.TokenType != JsonToken.Integer\r\n                && reader.TokenType != JsonToken.Float\r\n                && reader.TokenType != JsonToken.Date\r\n                && reader.TokenType != JsonToken.StartConstructor", span="1506-1512"];
m6_613 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="!finishedAttributes && !finishedElement && reader.Read()", span="1515-1515"];
m6_616 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributeName = reader.Value.ToString()", span="1520-1520"];
m6_618 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="char firstChar = attributeName[0]", span="1524-1524"];
m6_620 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label=firstChar, span="1527-1527"];
m6_622 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeName = attributeName.Substring(1)", span="1530-1530"];
m6_625 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeNameValues.Add(attributeName, attributeValue)", span="1533-1533"];
m6_627 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IsNamespaceAttribute(attributeName, out namespacePrefix)", span="1536-1536"];
m6_629 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="'$'", span="1541-1541"];
m6_631 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.Read()", span="1543-1543"];
m6_633 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string jsonPrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1548-1548"];
m6_635 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="int? i = null", span="1552-1552"];
m6_637 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="i = i.GetValueOrDefault() + 1", span="1555-1555"];
m6_639 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeNameValues.Add(''xmlns:'' + jsonPrefix, JsonNamespaceUri)", span="1559-1559"];
m6_641 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeNameValues.Add(jsonPrefix + '':'' + attributeName, attributeValue)", span="1563-1563"];
m6_643 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="finishedAttributes = true", span="1573-1573"];
m6_645 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="finishedElement = true", span="1578-1578"];
m6_647 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return attributeNameValues;", span="1586-1586"];
m6_649 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1731-1731"];
m6_651 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="propertyName == DeclarationName", span="1591-1591"];
m6_653 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="string encoding = null", span="1594-1594"];
m6_655 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1596-1596"];
m6_657 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="''@version''", span="1600-1600"];
m6_659 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="version = reader.Value.ToString()", span="1602-1602"];
m6_662 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="encoding = reader.Value.ToString()", span="1606-1606"];
m6_664 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read()", span="1609-1609"];
m6_667 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="IXmlNode declaration = document.CreateXmlDeclaration(version, encoding, standalone)", span="1617-1617"];
m6_669 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="IXmlNode instruction = document.CreateProcessingInstruction(propertyName.Substring(1), reader.Value.ToString())", span="1622-1622"];
m6_671 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1589-1589"];
m6_614 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType", span="1517-1517"];
m6_615 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonToken.PropertyName", span="1519-1519"];
m6_617 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(attributeName)", span="1522-1522"];
m6_619 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributeValue", span="1525-1525"];
m6_621 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="'@'", span="1529-1529"];
m6_624 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeValue = ConvertTokenToXmlValue(reader)", span="1532-1532"];
m6_626 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string namespacePrefix", span="1535-1535"];
m6_628 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.AddNamespace(namespacePrefix, attributeValue)", span="1538-1538"];
m6_630 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeName = attributeName.Substring(1)", span="1542-1542"];
m6_632 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeValue = reader.Value.ToString()", span="1544-1544"];
m6_634 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="jsonPrefix == null", span="1549-1549"];
m6_636 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.LookupNamespace(''json'' + i) != null", span="1553-1553"];
m6_638 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="jsonPrefix = ''json'' + i", span="1557-1557"];
m6_640 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.AddNamespace(jsonPrefix, JsonNamespaceUri)", span="1560-1560"];
m6_642 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="finishedAttributes = true", span="1566-1566"];
m6_644 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonToken.EndObject", span="1577-1577"];
m6_646 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected JsonToken: '' + reader.TokenType);", span="1581-1581"];
m6_648 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1499-1499"];
m6_650 [cluster="System.Nullable<T>.GetValueOrDefault()", file="XmlNodeConverter.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m6_652 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="string version = null", span="1593-1593"];
m6_654 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="string standalone = null", span="1595-1595"];
m6_656 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Value.ToString()", span="1598-1598"];
m6_658 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read()", span="1601-1601"];
m6_661 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read()", span="1605-1605"];
m6_663 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="''@standalone''", span="1608-1608"];
m6_666 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1613-1613"];
m6_668 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(declaration)", span="1618-1618"];
m6_670 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(instruction)", span="1623-1623"];
m6_623 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.Read()", span="1531-1531"];
m6_660 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="''@encoding''", span="1604-1604"];
m6_665 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="standalone = reader.Value.ToString()", span="1610-1610"];
m6_672 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string name = null", span="1629-1629"];
m6_3111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="7121-7121"];
m6_3114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="7132-7136"];
m6_3113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="7130-7130"];
m6_3112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="XmlNodeConverter.cs", label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n            {\r\n                Integer = new ConvertibleInt(1),\r\n                NullableInteger1 = new ConvertibleInt(2),\r\n                NullableInteger2 = null\r\n            }", span="7123-7128"];
m6_3115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="7121-7121"];
m6_1204 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35"];
m6_94 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(true, l[i++])", span="318-318"];
m6_3131 [cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", span="27-27"];
m6_2762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="6187-6187"];
m6_2765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{}'', json)", span="6193-6193"];
m6_2764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="6191-6191"];
m6_2763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="XmlNodeConverter.cs", label="MultiIndexSuper e = new MultiIndexSuper()", span="6189-6189"];
m6_2766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="6187-6187"];
m6_2089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4671-4671"];
m6_2093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="XmlNodeConverter.cs", label="_innerDictionary.Add(entry.Key, entry.Value)", span="4680-4680"];
m6_2092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="XmlNodeConverter.cs", label=dictionary, span="4678-4678"];
m6_2090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="XmlNodeConverter.cs", label="dictionary == null", span="4673-4673"];
m6_2091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="XmlNodeConverter.cs", label="throw new ArgumentNullException(nameof(dictionary));", span="4675-4675"];
m6_2094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4671-4671"];
m6_288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!''''\r\n}'', json)", span="702-704"];
m6_289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="XmlNodeConverter.cs", label="string deserializeJson = @''{\r\n  ''''IgnoredList'''': [\r\n    {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  ],\r\n  ''''IgnoredDictionary'''': {\r\n    ''''Value'''': {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  },\r\n  ''''Name'''': ''''Name!''''\r\n}''", span="706-728"];
m6_291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Name!'', c2.Name)", span="735-735"];
m6_292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="679-679"];
m6_290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="XmlNodeConverter.cs", label="IgnoredPropertiesTestClass c2 = JsonConvert.DeserializeObject<IgnoredPropertiesTestClass>(deserializeJson, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="730-733"];
m6_293 [cluster="System.Version.Version(int, int, int, int)", file="XmlNodeConverter.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m6_321 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="980-980"];
m6_3735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8588-8588"];
m6_3738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8594-8594"];
m6_3742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8605-8605"];
m6_3737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(p)", span="8592-8592"];
m6_3739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="XmlNodeConverter.cs", label="DefaultContractResolver r = new DefaultContractResolver()", span="8597-8597"];
m6_3741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="XmlNodeConverter.cs", label="json = JsonConvert.SerializeObject(p, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = r\r\n            })", span="8600-8603"];
m6_3736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="XmlNodeConverter.cs", label="Pair<string, int> p = new Pair<string, int>(''One'', 2)", span="8590-8590"];
m6_3740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="XmlNodeConverter.cs", label="r.IgnoreSerializableAttribute = false", span="8598-8598"];
m6_3743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8588-8588"];
m6_1443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="3028-3028"];
m6_1446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="3039-3039"];
m6_1447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, c.MiddleName)", span="3040-3040"];
m6_1448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, c.LastName)", span="3041-3041"];
m6_1445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="XmlNodeConverter.cs", label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3037-3037"];
m6_1444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="3030-3035"];
m6_1449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="3028-3028"];
m6_3418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7732-7732"];
m6_3423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, dic2.Count)", span="7749-7749"];
m6_3424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7750-7750"];
m6_3425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7751-7751"];
m6_3422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="XmlNodeConverter.cs", label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="7747-7747"];
m6_3419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="XmlNodeConverter.cs", label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7734-7738"];
m6_3420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7740-7740"];
m6_3421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="7742-7745"];
m6_3426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7732-7732"];
m6_3318 [cluster="Unk.WriteValue", file="XmlNodeConverter.cs", label="Entry Unk.WriteValue", span=""];
m6_3583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="8145-8145"];
m6_3584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="XmlNodeConverter.cs", label="string json =\r\n                JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="8147-8151"];
m6_3585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="8153-8156"];
m6_3586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="8145-8145"];
m6_3563 [cluster="System.Uri.Uri(string, System.UriKind)", file="XmlNodeConverter.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m6_1927 [cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27"];
m6_1457 [cluster="string.StartsWith(string)", file="XmlNodeConverter.cs", label="Entry string.StartsWith(string)", span="0-0"];
m6_449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, o.Count)", span="1139-1139"];
m6_740 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", span="30-30"];
m6_3500 [cluster="Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", span="31-31"];
m6_285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="XmlNodeConverter.cs", label="Version v = new Version(1, 2, 3, 4)", span="681-681"];
m6_1804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3880-3880"];
m6_1806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeObject<DynamicDictionary>(json); },\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3884-3888"];
m6_1805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="XmlNodeConverter.cs", label="string json = @''[]''", span="3882-3882"];
m6_1807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3880-3880"];
m6_1295 [cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27"];
m6_880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="1859-1859"];
m6_323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="837-837"];
m6_324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="XmlNodeConverter.cs", label="FaqItemProxy c = new FaqItemProxy()", span="839-839"];
m6_325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="XmlNodeConverter.cs", label="c.FaqId = 1", span="840-840"];
m6_326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="XmlNodeConverter.cs", label="c.Sections.Add(new FaqSection())", span="841-841"];
m6_2106 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m6_2154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4821-4821"];
m6_2159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="XmlNodeConverter.cs", label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="4827-4827"];
m6_2158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="XmlNodeConverter.cs", label="_personValue = personValue", span="4826-4826"];
m6_2155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="XmlNodeConverter.cs", label="_stringValue = stringValue", span="4823-4823"];
m6_2156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="XmlNodeConverter.cs", label="_intValue = intValue", span="4824-4824"];
m6_2157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="XmlNodeConverter.cs", label="_dateTimeOffsetValue = dateTimeOffset", span="4825-4825"];
m6_2160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4821-4821"];
m6_791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1697-1697"];
m6_795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1702-1702"];
m6_793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="XmlNodeConverter.cs", label="var deserialized = JsonConvert.DeserializeObject<FooBar1>(json)", span="1700-1700"];
m6_794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(deserialized.foo)", span="1701-1701"];
m6_792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="XmlNodeConverter.cs", label="var json = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1699-1699"];
m6_796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1697-1697"];
m6_919 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="253-253"];
m6_160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="XmlNodeConverter.cs", label="IgnoredProperty p = JsonConvert.DeserializeObject<IgnoredProperty>(''{'StringProp1':[1,2,3],'StringProp2':{}}'')", span="432-432"];
m6_161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="XmlNodeConverter.cs", label="Assert.IsNull(p.StringProp1)", span="433-433"];
m6_162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="XmlNodeConverter.cs", label="Assert.IsNull(p.StringProp2)", span="434-434"];
m6_2467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5524-5524"];
m6_2470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="XmlNodeConverter.cs", label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="5534-5534"];
m6_2471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="XmlNodeConverter.cs", label="Assert.AreEqual(9.9m, dic[''value''])", span="5535-5535"];
m6_2469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="XmlNodeConverter.cs", label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n                json, new JsonSerializerSettings\r\n                {\r\n                    FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="5528-5532"];
m6_2468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="XmlNodeConverter.cs", label="string json = @''{'value':9.9}''", span="5526-5526"];
m6_2472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5524-5524"];
m6_2608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5850-5850"];
m6_2610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="XmlNodeConverter.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="5853-5853"];
m6_2609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="XmlNodeConverter.cs", label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="5852-5852"];
m6_2611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5850-5850"];
m6_2097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4715-4715"];
m6_2098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="XmlNodeConverter.cs", label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="4717-4717"];
m6_2099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4715-4715"];
m6_2814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="6364-6364"];
m6_198 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="659-659"];
m6_2344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5297-5297"];
m6_2352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="5319-5319"];
m6_2353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="5320-5320"];
m6_2345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="XmlNodeConverter.cs", label="XNodeTestObject testObject = new XNodeTestObject()", span="5299-5299"];
m6_2351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="XmlNodeConverter.cs", label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="5318-5318"];
m6_2354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="XmlNodeConverter.cs", label="Assert.IsNull(newTestObject.Element.Parent)", span="5322-5322"];
m6_2346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="XmlNodeConverter.cs", label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="5300-5300"];
m6_2347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="XmlNodeConverter.cs", label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="5301-5301"];
m6_2348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5303-5303"];
m6_2350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(expected, json)", span="5316-5316"];
m6_2349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="XmlNodeConverter.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="5304-5315"];
m6_2355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5297-5297"];
m6_555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1289-1289"];
m6_999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="2161-2161"];
m6_1002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="2167-2167"];
m6_1001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="XmlNodeConverter.cs", label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="2165-2165"];
m6_1003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="2168-2170"];
m6_1000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="XmlNodeConverter.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="2163-2163"];
m6_1004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="2161-2161"];
m6_2103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4725-4725"];
m6_2104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="XmlNodeConverter.cs", label="_innerDictionary.Clear()", span="4727-4727"];
m6_2105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4725-4725"];
m6_804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", span="1658-1658"];
m6_990 [cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27"];
m6_2767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="6196-6196"];
m6_2807 [cluster="DataContractSerializer.cstr", file="XmlNodeConverter.cs", label="Entry DataContractSerializer.cstr", span=""];
m6_1353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2869-2869"];
m6_1358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="2876-2876"];
m6_1360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="2880-2880"];
m6_1361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="2881-2881"];
m6_1357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2875-2875"];
m6_1359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="XmlNodeConverter.cs", label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2878-2878"];
m6_1354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="XmlNodeConverter.cs", label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="2871-2871"];
m6_1356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="XmlNodeConverter.cs", label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="2873-2873"];
m6_1355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="XmlNodeConverter.cs", label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="2872-2872"];
m6_1362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2869-2869"];
m6_3339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7590-7590"];
m6_3349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="7607-7607"];
m6_3348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="XmlNodeConverter.cs", label="JValue v = (JValue)a[0]", span="7605-7605"];
m6_3350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000-01-02T03:04:05+06:00''''\r\n]'', a.ToString())", span="7608-7610"];
m6_3347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="XmlNodeConverter.cs", label="JArray a = (JArray)JArray.ReadFrom(reader)", span="7604-7604"];
m6_3346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="XmlNodeConverter.cs", label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n            {\r\n                ReadRootValueAsArray = true\r\n            }", span="7599-7602"];
m6_3345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="XmlNodeConverter.cs", label="byte[] data = ms.ToArray()", span="7598-7598"];
m6_3340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="XmlNodeConverter.cs", label="MemoryStream ms = new MemoryStream()", span="7592-7592"];
m6_3344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="XmlNodeConverter.cs", label="writer.WriteEndArray()", span="7596-7596"];
m6_3341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="XmlNodeConverter.cs", label="BsonWriter writer = new BsonWriter(ms)", span="7593-7593"];
m6_3343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="XmlNodeConverter.cs", label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="7595-7595"];
m6_3342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="XmlNodeConverter.cs", label="writer.WriteStartArray()", span="7594-7594"];
m6_3351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7590-7590"];
m6_1866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3983-3983"];
m6_1867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3985-3996"];
m6_1868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3983-3983"];
m6_2286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5264-5264"];
m6_2333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="XmlNodeConverter.cs", label="BB_field1 = g", span="5267-5267"];
m6_2334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="XmlNodeConverter.cs", label="BB_field2 = g", span="5268-5268"];
m6_2335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="XmlNodeConverter.cs", label="BB_property1 = g", span="5269-5269"];
m6_2336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="XmlNodeConverter.cs", label="BB_property2 = g", span="5270-5270"];
m6_2337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="XmlNodeConverter.cs", label="BB_property3 = g", span="5271-5271"];
m6_2338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="XmlNodeConverter.cs", label="BB_property4 = g", span="5272-5272"];
m6_2339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="XmlNodeConverter.cs", label="BB_property5 = g", span="5273-5273"];
m6_2340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="XmlNodeConverter.cs", label="BB_property6 = g", span="5274-5274"];
m6_2341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="XmlNodeConverter.cs", label="BB_property7 = g", span="5275-5275"];
m6_2342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="XmlNodeConverter.cs", label="BB_property8 = g", span="5276-5276"];
m6_2343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5264-5264"];
m6_454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="XmlNodeConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1145-1145"];
m6_848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1767-1767"];
m6_850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="XmlNodeConverter.cs", label="return new DictionaryKeyCast(strings[0], Convert.ToInt32(strings[1]));", span="1770-1770"];
m6_849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="XmlNodeConverter.cs", label="var strings = dictionaryKey.Split(' ')", span="1769-1769"];
m6_851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1767-1767"];
m6_1377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2902-2902"];
m6_1380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''null'', json)", span="2907-2907"];
m6_1382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''1'', json)", span="2910-2910"];
m6_1379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="XmlNodeConverter.cs", label="json = JsonConvert.SerializeObject((int?)null)", span="2906-2906"];
m6_1381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="XmlNodeConverter.cs", label="json = JsonConvert.SerializeObject((int?)1)", span="2909-2909"];
m6_1378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="XmlNodeConverter.cs", label="string json", span="2904-2904"];
m6_1383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2902-2902"];
m6_455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="XmlNodeConverter.cs", label="json = @''{/* Test */}''", span="1147-1147"];
m6_3087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", span="7063-7063"];
m6_3089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="XmlNodeConverter.cs", label="HasByteArray value = JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="7073-7076"];
m6_3090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(value.EncryptedPassword)", span="7078-7078"];
m6_3091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="XmlNodeConverter.cs", label="CollectionAssert.AreEquivalent(Convert.FromBase64String(''cGFzc3dvcmQ=''), value.EncryptedPassword)", span="7079-7079"];
m6_3088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  },\r\n  ''''Pie'''': null\r\n}''", span="7065-7072"];
m6_3092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", span="7063-7063"];
m6_1716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3708-3708"];
m6_1717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="XmlNodeConverter.cs", label="Content content = new Content\r\n            {\r\n                Text = ''Blah, blah, blah'',\r\n                Children = new List<Content>\r\n                {\r\n                    new Content { Text = ''First'' },\r\n                    new Content { Text = ''Second'' }\r\n                }\r\n            }", span="3710-3718"];
m6_1719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="3722-3734"];
m6_1718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="3720-3720"];
m6_1720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3708-3708"];
m6_310 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.DocumentType", span="997-997"];
m6_2010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="4318-4318"];
m6_3354 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="269-269"];
m6_2186 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0"];
m6_3801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8767-8767"];
m6_3804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''my value'', foo.Bar)", span="8771-8771"];
m6_3803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="XmlNodeConverter.cs", label="var foo = JsonConvert.DeserializeObject<FooConstructor>(json)", span="8770-8770"];
m6_3802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="XmlNodeConverter.cs", label="string json = @''{''''something_else'''':''''my value''''}''", span="8769-8769"];
m6_3805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8767-8767"];
m6_2225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4956-4956"];
m6_2240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="5003-5003"];
m6_2238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="5001-5001"];
m6_2239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="5002-5002"];
m6_2241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="5004-5004"];
m6_2242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="5005-5005"];
m6_2243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="5006-5006"];
m6_2231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4964-4964"];
m6_2237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="5000-5000"];
m6_2227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4959-4959"];
m6_2230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="person.Name = ''Name!''", span="4962-4962"];
m6_2232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="string dateTimeOffsetText", span="4965-4965"];
m6_2234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4972-4972"];
m6_2236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4975-4998"];
m6_2235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="4974-4974"];
m6_2226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="Person person = new Person()", span="4958-4958"];
m6_2228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="person.LastModified = person.BirthDate", span="4960-4960"];
m6_2229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="person.Department = ''Department!''", span="4961-4961"];
m6_2233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="4967-4967"];
m6_2244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4956-4956"];
m6_163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", span="430-430"];
m6_197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", span="477-477"];
m6_146 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}'')", span="403-403"];
m6_147 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="403-403"];
m6_148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="407-407"];
m6_1434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="3002-3002"];
m6_1439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Bob'', c2.FirstName)", span="3023-3023"];
m6_1440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="3024-3024"];
m6_1438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="XmlNodeConverter.cs", label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3021-3021"];
m6_1436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3012-3012"];
m6_1437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="3014-3019"];
m6_1435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="XmlNodeConverter.cs", label="RequiredMembersClass c = new RequiredMembersClass()\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                FirstName = ''Bob'',\r\n                LastName = ''Smith'',\r\n                MiddleName = ''Cosmo''\r\n            }", span="3004-3010"];
m6_1441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="3002-3002"];
m6_3093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="7083-7083"];
m6_3099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="7092-7092"];
m6_3101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(true, b2.no)", span="7096-7096"];
m6_3098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(b)", span="7090-7090"];
m6_3100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="XmlNodeConverter.cs", label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="7094-7094"];
m6_3094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="XmlNodeConverter.cs", label="Bb b = new Bb()", span="7085-7085"];
m6_3097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="XmlNodeConverter.cs", label="a.no = int.MaxValue", span="7088-7088"];
m6_3095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="XmlNodeConverter.cs", label="b.no = true", span="7086-7086"];
m6_3096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="XmlNodeConverter.cs", label="Aa a = b", span="7087-7087"];
m6_3102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="7083-7083"];
m6_2827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6441-6441"];
m6_2829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="XmlNodeConverter.cs", label="Categories = new List<string>()", span="6444-6444"];
m6_2828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="XmlNodeConverter.cs", label="Title = title", span="6443-6443"];
m6_2830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6441-6441"];
m6_915 [cluster="Unk.WriteObject", file="XmlNodeConverter.cs", label="Entry Unk.WriteObject", span=""];
m6_1376 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27"];
m6_2975 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="167-167"];
m6_3353 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143"];
m6_111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(true, l[i++])", span="355-355"];
m6_112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(true, l[i++])", span="356-356"];
m6_411 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="return;", span="1163-1163"];
m6_2037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4489-4489"];
m6_2040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="4494-4499"];
m6_2039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="4492-4492"];
m6_2038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="XmlNodeConverter.cs", label="B value = new B()", span="4491-4491"];
m6_2041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4489-4489"];
m6_1608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3429-3429"];
m6_1610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n                o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n                JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n            }, ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'')", span="3433-3439"];
m6_1609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="XmlNodeConverter.cs", label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="3431-3431"];
m6_1611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3429-3429"];
m6_1450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="3045-3045"];
m6_1452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3056-3056"];
m6_1455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="XmlNodeConverter.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'FirstName' expects a value but got null. Path ''''))", span="3061-3061"];
m6_1453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="XmlNodeConverter.cs", label="Assert.Fail()", span="3057-3057"];
m6_1451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="3049-3054"];
m6_1454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="XmlNodeConverter.cs", label=JsonSerializationException, span="3059-3059"];
m6_1456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="3045-3045"];
m6_2381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="5379-5379"];
m6_3660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8403-8403"];
m6_3661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="XmlNodeConverter.cs", label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="8405-8405"];
m6_3662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="XmlNodeConverter.cs", label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="8406-8406"];
m6_3663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="XmlNodeConverter.cs", label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="8407-8407"];
m6_3665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture\r\n            })", span="8415-8419"];
m6_3664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="XmlNodeConverter.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8409-8413"];
m6_3666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8421-8424"];
m6_3667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8403-8403"];
m6_42 [cluster="Unk.CreateElement", file="XmlNodeConverter.cs", label="Entry Unk.CreateElement", span=""];
m6_171 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="525-525"];
m6_173 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="523-523"];
m6_172 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="return new XElementWrapper(new XElement(XName.Get(localName, namespaceUri)));", span="526-526"];
m6_174 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", span="103-103"];
m6_56 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="113-113"];
m6_2100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4720-4720"];
m6_2101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="XmlNodeConverter.cs", label="_innerDictionary.Add(key, value)", span="4722-4722"];
m6_2102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4720-4720"];
m6_608 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1483-1483"];
m6_835 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="XmlNodeConverter.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m6_845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1762-1762"];
m6_846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="XmlNodeConverter.cs", label="return _name + '' '' + _number;", span="1764-1764"];
m6_847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1762-1762"];
m6_2140 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m6_363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="XmlNodeConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[''''2000-01-01T01:01:01+00:00'''']''))", span="948-948"];
m6_1913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="4089-4089"];
m6_1921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, newFoo.Bars.Count)", span="4106-4106"];
m6_1922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="4107-4107"];
m6_1923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="4108-4108"];
m6_1924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="4109-4109"];
m6_1920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="XmlNodeConverter.cs", label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="4105-4105"];
m6_1918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="4096-4096"];
m6_1919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="4097-4103"];
m6_1914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="XmlNodeConverter.cs", label="Foo f = new Foo()", span="4091-4091"];
m6_1917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="XmlNodeConverter.cs", label="f.Bars.Add(new Bar { Id = 2 })", span="4094-4094"];
m6_1915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="XmlNodeConverter.cs", label="f.Bars.Add(new Bar { Id = 0 })", span="4092-4092"];
m6_1916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="XmlNodeConverter.cs", label="f.Bars.Add(new Bar { Id = 1 })", span="4093-4093"];
m6_1925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="4089-4089"];
m6_2193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4853-4853"];
m6_2194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''stringValue'', _stringValue)", span="4855-4855"];
m6_2195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''intValue'', _intValue)", span="4856-4856"];
m6_2196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="4857-4857"];
m6_2197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''personValue'', _personValue)", span="4858-4858"];
m6_2198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="4859-4859"];
m6_2200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''booleanValue'', _booleanValue)", span="4862-4862"];
m6_2201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''byteValue'', _byteValue)", span="4863-4863"];
m6_2202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''charValue'', _charValue)", span="4864-4864"];
m6_2203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="4865-4865"];
m6_2204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''decimalValue'', _decimalValue)", span="4866-4866"];
m6_2205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''shortValue'', _shortValue)", span="4867-4867"];
m6_2206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''longValue'', _longValue)", span="4868-4868"];
m6_2207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''sbyteValue'', _sbyteValue)", span="4869-4869"];
m6_2208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''floatValue'', _floatValue)", span="4870-4870"];
m6_2209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''ushortValue'', _ushortValue)", span="4871-4871"];
m6_2210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''uintValue'', _uintValue)", span="4872-4872"];
m6_2211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''ulongValue'', _ulongValue)", span="4873-4873"];
m6_2199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''nullableInt'', null)", span="4860-4860"];
m6_2212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4853-4853"];
m6_2921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6718-6718"];
m6_2922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="XmlNodeConverter.cs", label="Exceptions = new List<Exception>()", span="6720-6720"];
m6_2923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6718-6718"];
m6_1419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2980-2980"];
m6_1423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="2986-2986"];
m6_1425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="2989-2989"];
m6_1429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="2995-2995"];
m6_1431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="2998-2998"];
m6_1420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="XmlNodeConverter.cs", label="string boolRef = typeof(bool).AssemblyQualifiedName", span="2982-2982"];
m6_1422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(typeClass)", span="2985-2985"];
m6_1424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="XmlNodeConverter.cs", label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2988-2988"];
m6_1426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="XmlNodeConverter.cs", label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="2991-2991"];
m6_1428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="XmlNodeConverter.cs", label="json = JsonConvert.SerializeObject(typeClass)", span="2994-2994"];
m6_1430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="XmlNodeConverter.cs", label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2997-2997"];
m6_1421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="XmlNodeConverter.cs", label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="2983-2983"];
m6_1427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="XmlNodeConverter.cs", label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="2992-2992"];
m6_1432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2980-2980"];
m6_3356 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
m6_76 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="XmlNodeConverter.cs", label="_node = node", span="232-232"];
m6_77 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="230-230"];
m6_78 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="263-263"];
m6_3934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="9119-9119"];
m6_3935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="XmlNodeConverter.cs", label="throw new InvalidCastException();", span="9121-9121"];
m6_3936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="9119-9119"];
m6_3673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8448-8448"];
m6_3683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="XmlNodeConverter.cs", label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="8472-8472"];
m6_3684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="XmlNodeConverter.cs", label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="8473-8473"];
m6_3674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="XmlNodeConverter.cs", label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="8450-8450"];
m6_3679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="XmlNodeConverter.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8461-8461"];
m6_3682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="XmlNodeConverter.cs", label="Assert.IsNull(jsonWriter.DateFormatString)", span="8471-8471"];
m6_3685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="XmlNodeConverter.cs", label="string json = sw.ToString()", span="8475-8475"];
m6_3675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="XmlNodeConverter.cs", label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="8451-8451"];
m6_3676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="XmlNodeConverter.cs", label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="8452-8452"];
m6_3680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="XmlNodeConverter.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture,\r\n                Formatting = Formatting.Indented\r\n            })", span="8463-8468"];
m6_3677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="XmlNodeConverter.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8454-8458"];
m6_3678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="XmlNodeConverter.cs", label="StringWriter sw = new StringWriter()", span="8460-8460"];
m6_3681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="XmlNodeConverter.cs", label="serializer.Serialize(jsonWriter, dates)", span="8469-8469"];
m6_3686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8477-8480"];
m6_3687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8448-8448"];
m6_600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1357-1357"];
m6_1783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3847-3847"];
m6_1785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, string>>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3851-3853"];
m6_1784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="XmlNodeConverter.cs", label="string json = @''[]''", span="3849-3849"];
m6_1786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3847-3847"];
m6_134 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(new XComment(text));", span="480-480"];
m6_27 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", span="174-174"];
m6_536 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributePrefix = MiscellaneousUtils.GetPrefix(nameValue.Key)", span="1373-1373"];
m6_199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="524-524"];
m6_366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="XmlNodeConverter.cs", label="serializer.DateParseHandling = DateParseHandling.DateTimeOffset", span="952-952"];
m6_2847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6484-6484"];
m6_2854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="6500-6500"];
m6_2855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6501-6501"];
m6_2856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, c2.Categories[''one''])", span="6502-6502"];
m6_2857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, c2.Categories[''two''])", span="6503-6503"];
m6_2848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="XmlNodeConverter.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="6486-6486"];
m6_2853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="XmlNodeConverter.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="6499-6499"];
m6_2849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="XmlNodeConverter.cs", label="c1.Categories.Add(''one'', 1)", span="6487-6487"];
m6_2850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="XmlNodeConverter.cs", label="c1.Categories.Add(''two'', 2)", span="6488-6488"];
m6_2851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6490-6490"];
m6_2852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="6491-6497"];
m6_2858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6484-6484"];
m6_65 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['2000-12-20T10:55:55Z']''),\r\n                ''Could not convert string to boolean: 2000-12-20T10:55:55Z. Path '[0]', line 1, position 23.'')", span="267-269"];
m6_66 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", span="265-265"];
m6_67 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="268-268"];
m6_543 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.PushScope()", span="1399-1399"];
m6_17 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateWhitespace(text));", span="72-72"];
m6_295 [cluster="string.IsNullOrEmpty(string)", file="XmlNodeConverter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_38 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="XmlNodeConverter.cs", label="var strJsonMainClass = JsonConvert.SerializeObject(myMainClass, Formatting.Indented)", span="213-213"];
m6_39 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 567,\r\n  ''''Name'''': ''''XYZ'''',\r\n  ''''Subclass'''': {\r\n    ''''ID'''': 123,\r\n    ''''Name'''': ''''ABC'''',\r\n    ''''P1'''': true,\r\n    ''''P2'''': 44\r\n  }\r\n}'', strJsonMainClass)", span="215-224"];
m6_40 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="197-197"];
m6_256 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}'')", span="607-607"];
m6_2287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="5127-5127"];
m6_2289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5141-5141"];
m6_2290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5142-5142"];
m6_2291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5143-5143"];
m6_2292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5144-5144"];
m6_2293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5145-5145"];
m6_2294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5146-5146"];
m6_2295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5147-5147"];
m6_2296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5148-5148"];
m6_2298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5172-5172"];
m6_2299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5173-5173"];
m6_2300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5174-5174"];
m6_2301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5175-5175"];
m6_2302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5176-5176"];
m6_2303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5177-5177"];
m6_2304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5178-5178"];
m6_2305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5179-5179"];
m6_2306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(4, myB.BB_field1)", span="5181-5181"];
m6_2307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(4, myB.BB_field2)", span="5182-5182"];
m6_2308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, myB.BB_property1)", span="5183-5183"];
m6_2309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, myB.BB_property2)", span="5184-5184"];
m6_2310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5185-5185"];
m6_2311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5186-5186"];
m6_2312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(0, myB.BB_property5)", span="5187-5187"];
m6_2313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5188-5188"];
m6_2314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5189-5189"];
m6_2315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5190-5190"];
m6_2288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n                @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="5129-5139"];
m6_2297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n                @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="5150-5170"];
m6_2316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="5127-5127"];
m6_37 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 123,\r\n  ''''Name'''': ''''ABC'''',\r\n  ''''P1'''': true,\r\n  ''''P2'''': 44\r\n}'', strJsonSubclass)", span="205-210"];
m6_742 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="1752-1752"];
m6_744 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="1752-1752"];
m6_743 [cluster="lambda expression", file="XmlNodeConverter.cs", label="a.NamespaceUri != JsonNamespaceUri", span="1752-1752"];
m6_745 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1763-1763"];
m6_101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="XmlNodeConverter.cs", label="int i = 0", span="345-345"];
m6_102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(true, l[i++])", span="346-346"];
m6_41 [cluster="XmlElementWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XmlElementWrapper.cstr", span=""];
m6_3309 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", span="30-30"];
m6_3922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="9099-9099"];
m6_3923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="XmlNodeConverter.cs", label="return Value;", span="9101-9101"];
m6_3924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="9099-9099"];
m6_1538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3267-3267"];
m6_1542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''firstName'', o.firstName)", span="3279-3279"];
m6_1543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''FirstName'', o.FirstName)", span="3280-3280"];
m6_1544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''LastName'', o.LastName)", span="3281-3281"];
m6_1545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''lastName'', o.lastName)", span="3282-3282"];
m6_1540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="XmlNodeConverter.cs", label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="3276-3276"];
m6_1541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(o)", span="3277-3277"];
m6_1539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="3269-3274"];
m6_1546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3267-3267"];
m6_1344 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m6_1180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2549-2549"];
m6_1182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="XmlNodeConverter.cs", label="JsonSerializer s = new JsonSerializer()", span="2553-2553"];
m6_1185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2558-2558"];
m6_1186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, wibble.Bar.Count)", span="2560-2560"];
m6_1181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="XmlNodeConverter.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2551-2551"];
m6_1183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="XmlNodeConverter.cs", label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="2554-2554"];
m6_1184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="XmlNodeConverter.cs", label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="2556-2556"];
m6_1187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2549-2549"];
m6_1588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3388-3388"];
m6_1596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="3407-3407"];
m6_1595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="3398-3405"];
m6_1597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="3409-3413"];
m6_1594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3396-3396"];
m6_1589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3390-3390"];
m6_1593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="3394-3394"];
m6_1590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="3391-3391"];
m6_1591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="3392-3392"];
m6_1592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="3393-3393"];
m6_1598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3388-3388"];
m6_183 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="return new XAttributeWrapper(new XAttribute(XName.Get(localName, namespaceUri), value));", span="537-537"];
m6_2219 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0"];
m6_1296 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="551-551"];
m6_153 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="return new XDeclarationWrapper(new XDeclaration(version, encoding, standalone));", span="505-505"];
m6_154 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="503-503"];
m6_155 [cluster="XDeclaration.cstr", file="XmlNodeConverter.cs", label="Entry XDeclaration.cstr", span=""];
m6_3842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="8932-8932"];
m6_3845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, people.Count)", span="8958-8958"];
m6_3848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="XmlNodeConverter.cs", label="Assert.AreEqual(john, jane.Spouse)", span="8963-8963"];
m6_3849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="XmlNodeConverter.cs", label="Assert.AreEqual(jane, john.Spouse)", span="8964-8964"];
m6_3844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="XmlNodeConverter.cs", label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolverProvider = () => new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8951-8956"];
m6_3846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="XmlNodeConverter.cs", label="PersonReference john = people[0]", span="8960-8960"];
m6_3847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="XmlNodeConverter.cs", label="PersonReference jane = people[1]", span="8961-8961"];
m6_3843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="XmlNodeConverter.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8934-8949"];
m6_3850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="8932-8932"];
m6_1102 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="XmlNodeConverter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m6_3550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="8083-8083"];
m6_3552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, uris.Count)", span="8086-8086"];
m6_3553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="8087-8087"];
m6_3558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="XmlNodeConverter.cs", label="Assert.AreEqual(i1, i2)", span="8094-8094"];
m6_3561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="8098-8098"];
m6_3551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="XmlNodeConverter.cs", label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="8085-8085"];
m6_3554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="XmlNodeConverter.cs", label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="8089-8089"];
m6_3556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="XmlNodeConverter.cs", label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="8092-8092"];
m6_3557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="XmlNodeConverter.cs", label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="8093-8093"];
m6_3559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="XmlNodeConverter.cs", label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="8096-8096"];
m6_3560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(uri)", span="8097-8097"];
m6_3555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(uri)", span="8090-8090"];
m6_3562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="8083-8083"];
m6_1125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2457-2457"];
m6_1128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="2470-2470"];
m6_1130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="2473-2473"];
m6_1131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="2474-2474"];
m6_1132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="2475-2475"];
m6_1133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="2476-2476"];
m6_1134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="2477-2477"];
m6_1135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="2478-2478"];
m6_1136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="2479-2479"];
m6_1127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(anonymous)", span="2469-2469"];
m6_1129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="XmlNodeConverter.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="2472-2472"];
m6_1126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="XmlNodeConverter.cs", label="var anonymous =\r\n                new\r\n                {\r\n                    StringValue = ''I am a string'',\r\n                    IntValue = int.MaxValue,\r\n                    NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n                    NestedArray = new[] { 1, 2 },\r\n                    Product = new Product() { Name = ''TestProduct'' }\r\n                }", span="2459-2467"];
m6_1137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2457-2457"];
m6_2460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5513-5513"];
m6_2463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''First'', cc.First)", span="5518-5518"];
m6_2464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, cc.Second)", span="5519-5519"];
m6_2465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, cc.Ignored)", span="5520-5520"];
m6_2462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="XmlNodeConverter.cs", label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="5517-5517"];
m6_2461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="XmlNodeConverter.cs", label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="5515-5515"];
m6_2466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5513-5513"];
m6_402 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Text", span="1152-1152"];
m6_257 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="607-607"];
m6_268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="XmlNodeConverter.cs", label="RequiredPropertyConstructorTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{''''Name'''':''''Name!''''}'')", span="645-645"];
m6_269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Name!'', c3.Name)", span="647-647"];
m6_278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="XmlNodeConverter.cs", label="type == typeof(Version)", span="669-669"];
m6_281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="667-667"];
m6_272 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.SerializeObject(c1)", span="632-632"];
m6_274 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="642-642"];
m6_275 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}'')", span="642-642"];
m6_276 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="642-642"];
m6_277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="667-667"];
m6_270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="627-627"];
m6_271 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="632-632"];
m6_273 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="632-632"];
m6_279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="XmlNodeConverter.cs", label="throw new Exception(''Error!'');", span="671-671"];
m6_280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="XmlNodeConverter.cs", label="return base.ResolveContract(type);", span="674-674"];
m6_282 [cluster="System.Exception.Exception(string)", file="XmlNodeConverter.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m6_839 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="XmlNodeConverter.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m6_142 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="488-488"];
m6_143 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(new XCData(data));", span="490-490"];
m6_144 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="488-488"];
m6_552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, settings.ConstructorHandling)", span="1282-1282"];
m6_2924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6726-6726"];
m6_2931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6739-6739"];
m6_2934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6744-6744"];
m6_2930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="XmlNodeConverter.cs", label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6738-6738"];
m6_2932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="XmlNodeConverter.cs", label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="6741-6741"];
m6_2933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="XmlNodeConverter.cs", label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6743-6743"];
m6_2929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="XmlNodeConverter.cs", label="string sex = JsonConvert.SerializeObject(classWithException)", span="6737-6737"];
m6_2925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="XmlNodeConverter.cs", label="ClassWithException classWithException = new ClassWithException()", span="6728-6728"];
m6_2928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="XmlNodeConverter.cs", label="classWithException.Exceptions.Add(ex)", span="6735-6735"];
m6_2926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="XmlNodeConverter.cs", label="throw new Exception(''Test Exception'');", span="6731-6731"];
m6_2927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="XmlNodeConverter.cs", label=Exception, span="6733-6733"];
m6_2935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6726-6726"];
m6_200 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="688-688"];
m6_201 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XDocument", span="690-690"];
m6_202 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XDocumentWrapper((XDocument)node);", span="691-691"];
m6_203 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XElement", span="692-692"];
m6_204 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XElementWrapper((XElement)node);", span="693-693"];
m6_205 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XContainer", span="694-694"];
m6_206 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XContainerWrapper((XContainer)node);", span="695-695"];
m6_207 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XProcessingInstruction", span="696-696"];
m6_2915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6696-6696"];
m6_2918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="6701-6710"];
m6_2917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="6699-6699"];
m6_2916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="XmlNodeConverter.cs", label="DerivedType d = new DerivedType()", span="6698-6698"];
m6_2919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6696-6696"];
m6_3696 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="XmlNodeConverter.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m6_3501 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="190-190"];
m6_2382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="5406-5406"];
m6_2537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="5655-5655"];
m6_294 [cluster="Unk.LookupPrefix", file="XmlNodeConverter.cs", label="Entry Unk.LookupPrefix", span=""];
m6_2359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5328-5328"];
m6_2368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="5344-5344"];
m6_2360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="XmlNodeConverter.cs", label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="5330-5330"];
m6_2367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="XmlNodeConverter.cs", label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="5343-5343"];
m6_2361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="XmlNodeConverter.cs", label="XmlDocument document = new XmlDocument()", span="5331-5331"];
m6_2363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="XmlNodeConverter.cs", label="testObject.Document = document", span="5333-5333"];
m6_2364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5335-5335"];
m6_2366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(expected, json)", span="5341-5341"];
m6_2362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="XmlNodeConverter.cs", label="document.LoadXml(''<root>hehe, root</root>'')", span="5332-5332"];
m6_2365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="XmlNodeConverter.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="5336-5340"];
m6_2369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5328-5328"];
m6_60 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="143-143"];
m6_497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.DateFormatString = ''yyyy''", span="1210-1210"];
m6_698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''person2'', _person2, typeof(PersonReference))", span="1509-1509"];
m6_700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''parent'', _parent, typeof(PreserveReferencesCallbackTestObject))", span="1511-1511"];
m6_702 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m6_703 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0"];
m6_704 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", span="0-0"];
m6_706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_serializationInfo == null", span="1517-1517"];
m6_707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="return;", span="1519-1519"];
m6_710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_person1 = (PersonReference)_serializationInfo.GetValue(''person1'', typeof(PersonReference))", span="1524-1524"];
m6_711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_person2 = (PersonReference)_serializationInfo.GetValue(''person2'', typeof(PersonReference))", span="1525-1525"];
m6_712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_person3 = (PersonReference)_serializationInfo.GetValue(''person3'', typeof(PersonReference))", span="1526-1526"];
m6_714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_serializationInfo = null", span="1529-1529"];
m6_715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1515-1515"];
m6_716 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m6_718 [cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0"];
m6_699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''person3'', _person3, typeof(PersonReference))", span="1510-1510"];
m6_713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_parent = (PreserveReferencesCallbackTestObject)_serializationInfo.GetValue(''parent'', typeof(PreserveReferencesCallbackTestObject))", span="1527-1527"];
m6_717 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0"];
m6_701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1504-1504"];
m6_705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1515-1515"];
m6_708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_stringValue = _serializationInfo.GetString(''stringValue'')", span="1522-1522"];
m6_709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_intValue = _serializationInfo.GetInt32(''intValue'')", span="1523-1523"];
m6_2119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4745-4745"];
m6_2120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="XmlNodeConverter.cs", label="return _innerDictionary.GetEnumerator();", span="4747-4747"];
m6_2121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4745-4745"];
m6_286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="XmlNodeConverter.cs", label="IgnoredPropertiesTestClass c1 = new IgnoredPropertiesTestClass\r\n            {\r\n                IgnoredProperty = v,\r\n                IgnoredList = new List<Version>\r\n                {\r\n                    v\r\n                },\r\n                IgnoredDictionary = new Dictionary<string, Version>\r\n                {\r\n                    { ''Value'', v }\r\n                },\r\n                Name = ''Name!''\r\n            }", span="683-695"];
m6_3478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7876-7876"];
m6_3479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="XmlNodeConverter.cs", label="var json = Serialize(obj)", span="7879-7879"];
m6_3480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="XmlNodeConverter.cs", label="return Deserialize<T>(json);", span="7880-7880"];
m6_3481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7876-7876"];
m6_2641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5915-5915"];
m6_2646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, obj.Position.X)", span="5924-5924"];
m6_2647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, obj.Position.Y)", span="5925-5925"];
m6_2648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, obj.Position.Z)", span="5926-5926"];
m6_2645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="XmlNodeConverter.cs", label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="5922-5922"];
m6_2644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="XmlNodeConverter.cs", label="string str = JsonConvert.SerializeObject(obj)", span="5920-5920"];
m6_2642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="XmlNodeConverter.cs", label="VectorParent obj = new VectorParent()", span="5917-5917"];
m6_2643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="XmlNodeConverter.cs", label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="5918-5918"];
m6_2649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5915-5915"];
m6_1652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3559-3559"];
m6_1658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="3573-3573"];
m6_1657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="XmlNodeConverter.cs", label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="3572-3572"];
m6_1655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3563-3563"];
m6_1656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="3565-3570"];
m6_1653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="XmlNodeConverter.cs", label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="3561-3561"];
m6_1654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="XmlNodeConverter.cs", label="c.NotIncluded = ''Hi''", span="3562-3562"];
m6_1659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3559-3559"];
m6_3220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7342-7342"];
m6_3221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(''''); }, ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'')", span="7344-7344"];
m6_3222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7342-7342"];
m6_1246 [cluster="System.Guid.Guid(string)", file="XmlNodeConverter.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m6_3272 [cluster="System.DateTime.ToLocalTime()", file="XmlNodeConverter.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m6_2889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6601-6601"];
m6_2890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="XmlNodeConverter.cs", label="_privateString = privateString", span="6603-6603"];
m6_2891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="XmlNodeConverter.cs", label="_readonlyString = readonlyString", span="6604-6604"];
m6_2892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="XmlNodeConverter.cs", label="_internalString = internalString", span="6605-6605"];
m6_2893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6601-6601"];
m6_2798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="6306-6306"];
m6_2043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4511-4511"];
m6_2047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c.DateTimeOffsetValue, cISO.DateTimeOffsetValue)", span="4529-4529"];
m6_2045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="XmlNodeConverter.cs", label="DateTimeOffsetWrapper cISO = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset,\r\n                Converters =\r\n                {\r\n                    new IsoDateTimeConverter()\r\n                }\r\n            })", span="4516-4523"];
m6_2046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="XmlNodeConverter.cs", label="DateTimeOffsetWrapper c = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="4524-4527"];
m6_2044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="XmlNodeConverter.cs", label="string jsonIsoText =\r\n                @''{''''DateTimeOffsetValue'''':''''2012-02-25T19:55:50.6095676+00:00'''', ''''DateTimeValue'''':''''2012-02-25T19:55:50.6095676+00:00''''}''", span="4513-4514"];
m6_2048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4511-4511"];
m6_3644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8351-8351"];
m6_3649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="XmlNodeConverter.cs", label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="8361-8361"];
m6_3650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="8362-8362"];
m6_3648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="XmlNodeConverter.cs", label="var dateTimeOffset = (DateTimeOffset)((JValue)obj[''startDateTime'']).Value", span="8359-8359"];
m6_3647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="XmlNodeConverter.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="8357-8357"];
m6_3646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="XmlNodeConverter.cs", label="var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }", span="8355-8355"];
m6_3645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="XmlNodeConverter.cs", label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="8353-8353"];
m6_3651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8351-8351"];
m6_3028 [cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="9856-9856"];
m6_1225 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m6_853 [cluster="System.Convert.ToInt32(string)", file="XmlNodeConverter.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m6_1280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2737-2737"];
m6_1283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2742-2742"];
m6_1285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2746-2746"];
m6_1282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c1)", span="2741-2741"];
m6_1284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="XmlNodeConverter.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="2744-2744"];
m6_1281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="XmlNodeConverter.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2739-2739"];
m6_1286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2737-2737"];
m6_3273 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="XmlNodeConverter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m6_1600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3417-3417"];
m6_1603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="3422-3422"];
m6_1604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="3423-3423"];
m6_1605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="3424-3424"];
m6_1606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="3425-3425"];
m6_1602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="3421-3421"];
m6_1601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="string json = ''{}''", span="3419-3419"];
m6_1607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3417-3417"];
m6_22 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="75-75"];
m6_133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="384-384"];
m6_135 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m6_935 [cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49"];
m6_3294 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", span="33-33"];
m6_3482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7883-7883"];
m6_3485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="XmlNodeConverter.cs", label="var serializer = new JsonSerializer()", span="7887-7887"];
m6_3484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="XmlNodeConverter.cs", label="var stringWriter = new StringWriter()", span="7886-7886"];
m6_3486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="XmlNodeConverter.cs", label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7888-7891"];
m6_3487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="XmlNodeConverter.cs", label="serializer.Serialize(stringWriter, obj)", span="7892-7892"];
m6_3488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="XmlNodeConverter.cs", label="return stringWriter.ToString();", span="7894-7894"];
m6_3489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7883-7883"];
m6_57 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="137-137"];
m6_58 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="XmlNodeConverter.cs", label="_element = element", span="140-140"];
m6_59 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="137-137"];
m6_2704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="6062-6062"];
m6_3161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="7215-7215"];
m6_3166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="7243-7243"];
m6_3167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="7244-7244"];
m6_3165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="XmlNodeConverter.cs", label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="7241-7241"];
m6_3168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="XmlNodeConverter.cs", label="byte[] bytes = (byte[])actual.Payload", span="7245-7245"];
m6_3162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="XmlNodeConverter.cs", label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="7217-7225"];
m6_3163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="XmlNodeConverter.cs", label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="7227-7227"];
m6_3164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="7229-7239"];
m6_3169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="XmlNodeConverter.cs", label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="7246-7246"];
m6_3170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="7215-7215"];
m6_394 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i++", span="1133-1133"];
m6_398 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Comment", span="1147-1147"];
m6_399 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="1148-1148"];
m6_400 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteComment(node.Value)", span="1149-1149"];
m6_395 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeGroupedNodes(writer, node, manager, true)", span="1138-1138"];
m6_397 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="manager.PopScope()", span="1143-1143"];
m6_396 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="1140-1140"];
m6_401 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Attribute", span="1151-1151"];
m6_3517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="8010-8010"];
m6_3523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, o[''one''])", span="8019-8019"];
m6_3521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="XmlNodeConverter.cs", label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8016-8016"];
m6_3522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(o)", span="8018-8018"];
m6_3524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="XmlNodeConverter.cs", label="settings.CheckAdditionalContent = true", span="8021-8021"];
m6_3518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="XmlNodeConverter.cs", label="string json = ''{one:1}{}''", span="8012-8012"];
m6_3520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="XmlNodeConverter.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="8015-8015"];
m6_3519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="XmlNodeConverter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="8014-8014"];
m6_3525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="XmlNodeConverter.cs", label="s = JsonSerializer.Create(settings)", span="8022-8022"];
m6_3526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'')", span="8023-8023"];
m6_3527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="8010-8010"];
m6_2277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="5094-5094"];
m6_2280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="5098-5104"];
m6_2283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="5108-5122"];
m6_2279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="5097-5097"];
m6_2282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="5107-5107"];
m6_2281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="BB myB = new BB(3, 4)", span="5106-5106"];
m6_2278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="AA myA = new AA(2)", span="5096-5096"];
m6_2284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="5094-5094"];
m6_3790 [cluster="Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", span="46-46"];
m6_3916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="9089-9089"];
m6_3917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="XmlNodeConverter.cs", label="throw new InvalidCastException();", span="9091-9091"];
m6_3918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="9089-9089"];
m6_998 [cluster="object.ToString()", file="XmlNodeConverter.cs", label="Entry object.ToString()", span="0-0"];
m6_518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, serializer.ObjectCreationHandling)", span="1241-1241"];
m6_170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", span="443-443"];
m6_789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", span="1665-1665"];
m6_2859 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_2694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="6050-6050"];
m6_2695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="XmlNodeConverter.cs", label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n                serStr,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    MissingMemberHandling = MissingMemberHandling.Ignore\r\n                });", span="6052-6058"];
m6_2696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="6050-6050"];
m6_3232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7354-7354"];
m6_3233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<int>(''''); }, ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'')", span="7356-7356"];
m6_3234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7354-7354"];
m6_1493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="3133-3133"];
m6_1495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="XmlNodeConverter.cs", label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="3172-3172"];
m6_1494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="3135-3170"];
m6_1496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="3133-3133"];
m6_3815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="8826-8826"];
m6_3816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="XmlNodeConverter.cs", label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="8828-8832"];
m6_3817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="XmlNodeConverter.cs", label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="8834-8838"];
m6_3821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = null,\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8849-8856"];
m6_3820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="XmlNodeConverter.cs", label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="8843-8847"];
m6_3822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]'', json)", span="8858-8873"];
m6_3818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="XmlNodeConverter.cs", label="john.Spouse = jane", span="8840-8840"];
m6_3819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="XmlNodeConverter.cs", label="jane.Spouse = john", span="8841-8841"];
m6_3823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="8826-8826"];
m6_1979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4289-4289"];
m6_1983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="XmlNodeConverter.cs", label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="4295-4295"];
m6_1984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="XmlNodeConverter.cs", label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="4296-4296"];
m6_1985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, d.Dictionary.Count)", span="4297-4297"];
m6_1986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="4298-4298"];
m6_1987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="4299-4299"];
m6_1988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, d.List.Count)", span="4300-4300"];
m6_1989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''existing'', d.List[0])", span="4301-4301"];
m6_1980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="XmlNodeConverter.cs", label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="4291-4291"];
m6_1982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(d.Dictionary)", span="4294-4294"];
m6_1981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(d)", span="4293-4293"];
m6_1990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4289-4289"];
m6_2224 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0"];
m6_322 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m6_962 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="XmlNodeConverter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m6_446 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected XmlNodeType when serializing nodes: '' + node.NodeType);", span="1222-1222"];
m6_450 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m6_451 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810"];
m6_452 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50"];
m6_453 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="772-772"];
m6_457 [cluster="lambda expression", file="XmlNodeConverter.cs", label="n.LocalName == node.LocalName", span="1089-1089"];
m6_461 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return null;", span="1239-1239"];
m6_462 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="1241-1241"];
m6_456 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="1089-1089"];
m6_458 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="1089-1089"];
m6_460 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Null", span="1238-1238"];
m6_463 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="IXmlDocument document = null", span="1242-1242"];
m6_447 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1080-1080"];
m6_459 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1236-1236"];
m6_464 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="IXmlNode rootNode = null", span="1243-1243"];
m6_149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="XmlNodeConverter.cs", label="Binding_DisallowNull o = JsonConvert.DeserializeObject<Binding_DisallowNull>(''{}'')", span="409-409"];
m6_150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="XmlNodeConverter.cs", label="Assert.IsNull(o.RequiredProperty)", span="410-410"];
m6_151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="407-407"];
m6_1811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3893-3893"];
m6_1813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<InvalidCastException>(\r\n                () => { JsonConvert.DeserializeObject<JObject>(json); },\r\n                new[]\r\n                {\r\n                    ''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n                    ''Cannot cast from source type to destination type.'' // mono\r\n                })", span="3897-3903"];
m6_1812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="XmlNodeConverter.cs", label="string json = @''[]''", span="3895-3895"];
m6_1814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3893-3893"];
m6_2705 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="105-105"];
m6_3352 [cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65"];
m6_11 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="XmlNodeConverter.cs", label="Assert.IsTrue(s.Position > 0)", span="128-128"];
m6_938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="2045-2045"];
m6_946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="2068-2068"];
m6_947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="2069-2069"];
m6_948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="2070-2070"];
m6_949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="2071-2071"];
m6_950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="2072-2072"];
m6_951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="2073-2073"];
m6_945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="2066-2066"];
m6_944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="XmlNodeConverter.cs", label="string output = JsonConvert.SerializeObject(product)", span="2054-2054"];
m6_941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="XmlNodeConverter.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="2050-2050"];
m6_939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Product product = new Product()", span="2047-2047"];
m6_943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="XmlNodeConverter.cs", label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="2052-2052"];
m6_940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="XmlNodeConverter.cs", label="product.Name = ''Apple''", span="2049-2049"];
m6_942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="XmlNodeConverter.cs", label="product.Price = 3.99M", span="2051-2051"];
m6_952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="2045-2045"];
m6_79 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="284-284"];
m6_81 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="284-284"];
m6_83 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="XmlNodeConverter.cs", label="IList<bool> l = JsonConvert.DeserializeObject<IList<bool>>(@''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE'\r\n]'')", span="292-306"];
m6_85 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(true, l[i++])", span="309-309"];
m6_86 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(false, l[i++])", span="310-310"];
m6_80 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<IList<bool>>(@''['']'')", span="284-284"];
m6_82 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", span="290-290"];
m6_84 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="XmlNodeConverter.cs", label="int i = 0", span="308-308"];
m6_87 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(true, l[i++])", span="311-311"];
m6_3889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="9043-9043"];
m6_3897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="XmlNodeConverter.cs", label="return Value.ToString(CultureInfo.InvariantCulture);", span="9059-9059"];
m6_3896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="XmlNodeConverter.cs", label="conversionType == typeof(string)", span="9057-9057"];
m6_3891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="XmlNodeConverter.cs", label="return this;", span="9047-9047"];
m6_3893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="XmlNodeConverter.cs", label="return (int)Value;", span="9051-9051"];
m6_3895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="XmlNodeConverter.cs", label="return (long)Value;", span="9055-9055"];
m6_3894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="XmlNodeConverter.cs", label="conversionType == typeof(long)", span="9053-9053"];
m6_3898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="XmlNodeConverter.cs", label="throw new InvalidCastException();", span="9061-9061"];
m6_3890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="XmlNodeConverter.cs", label="conversionType == typeof(object)", span="9045-9045"];
m6_3892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="XmlNodeConverter.cs", label="conversionType == typeof(int)", span="9049-9049"];
m6_3899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="9043-9043"];
m6_2585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5811-5811"];
m6_2596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="5833-5833"];
m6_2598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="5836-5836"];
m6_2602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="5842-5842"];
m6_2604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="5845-5845"];
m6_2586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="dynamic expando = new ExpandoObject()", span="5813-5813"];
m6_2594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="5830-5830"];
m6_2595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="5832-5832"];
m6_2597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="5835-5835"];
m6_2599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="5838-5838"];
m6_2600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="5839-5839"];
m6_2601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="5841-5841"];
m6_2603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="5844-5844"];
m6_2591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="5818-5818"];
m6_2587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="expando.Int = 1", span="5814-5814"];
m6_2588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="expando.Decimal = 99.9d", span="5815-5815"];
m6_2589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="expando.Complex = new ExpandoObject()", span="5816-5816"];
m6_2590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="expando.Complex.String = ''I am a string''", span="5817-5817"];
m6_2592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="5820-5820"];
m6_2593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="5821-5828"];
m6_2605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5811-5811"];
m6_691 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="IXmlNode documentType = document.CreateXmlDocumentType(name, publicId, systemId, internalSubset)", span="1658-1658"];
m6_692 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(documentType)", span="1659-1659"];
m6_693 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", span="1627-1627"];
m6_3904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="9069-9069"];
m6_3905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="XmlNodeConverter.cs", label="throw new InvalidCastException();", span="9071-9071"];
m6_3906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="9069-9069"];
m6_581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(9001, settings.MaxDepth)", span="1327-1327"];
m6_1391 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48"];
m6_1854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3957-3957"];
m6_1857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="XmlNodeConverter.cs", label="Assert.AreEqual('''', p.Name)", span="3962-3962"];
m6_1856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="XmlNodeConverter.cs", label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="3961-3961"];
m6_1855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="XmlNodeConverter.cs", label="string json = @''{''''Name'''':''''''''}''", span="3959-3959"];
m6_1858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3957-3957"];
m6_3516 [cluster="Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="30-30"];
m6_3952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", span="9034-9034"];
m6_2738 [cluster="Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", span="9830-9830"];
m6_194 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="573-573"];
m6_193 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="573-573"];
m6_192 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="710-710"];
m6_195 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="603-603"];
m6_521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1246-1246"];
m6_676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="XmlNodeConverter.cs", label="Ratio ratio = new Ratio(2, 1)", span="1469-1469"];
m6_677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(ratio)", span="1470-1470"];
m6_679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="XmlNodeConverter.cs", label="Ratio ratio2 = JsonConvert.DeserializeObject<Ratio>(json)", span="1474-1474"];
m6_680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="XmlNodeConverter.cs", label="Assert.AreEqual(ratio.Denominator, ratio2.Denominator)", span="1476-1476"];
m6_682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1467-1467"];
m6_683 [cluster="Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", span="37-37"];
m6_673 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="225-225"];
m6_674 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="60-60"];
m6_675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1467-1467"];
m6_678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''n'''':2,''''d'''':1}'', json)", span="1472-1472"];
m6_681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="XmlNodeConverter.cs", label="Assert.AreEqual(ratio.Numerator, ratio2.Numerator)", span="1477-1477"];
m6_3538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="8065-8065"];
m6_3539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = ''[{},1]'';\r\n\r\n                JsonSerializer serializer = new JsonSerializer();\r\n                serializer.CheckAdditionalContent = true;\r\n\r\n                var reader = new JsonTextReader(new StringReader(json));\r\n                reader.Read();\r\n                reader.Read();\r\n\r\n                serializer.Deserialize(reader, typeof(MyType));\r\n            }, ''Additional text found in JSON string after finishing deserializing object.'')", span="8067-8079"];
m6_3540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="8065-8065"];
m6_3477 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", span="33-33"];
m6_50 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="105-105"];
m6_53 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(qualifiedName, namespaceUri))", span="115-115"];
m6_54 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="attribute.Value = value", span="116-116"];
m6_52 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="113-113"];
m6_51 [cluster="Unk.CreateAttribute", file="XmlNodeConverter.cs", label="Entry Unk.CreateAttribute", span=""];
m6_55 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="return attribute;", span="118-118"];
m6_4014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9291-9291"];
m6_4021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9313-9313"];
m6_4015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="XmlNodeConverter.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9293-9293"];
m6_4020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="XmlNodeConverter.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9311-9311"];
m6_4016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="XmlNodeConverter.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9294-9294"];
m6_4018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9302-9305"];
m6_4017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="XmlNodeConverter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9295-9300"];
m6_4019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9307-9309"];
m6_4022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9291-9291"];
m6_1902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="4062-4062"];
m6_1907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="XmlNodeConverter.cs", label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="4082-4082"];
m6_1908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="XmlNodeConverter.cs", label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="4083-4083"];
m6_1909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="XmlNodeConverter.cs", label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="4084-4084"];
m6_1910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="XmlNodeConverter.cs", label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="4085-4085"];
m6_1903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="XmlNodeConverter.cs", label="StructTest structTest = new StructTest\r\n            {\r\n                StringProperty = ''StringProperty!'',\r\n                StringField = ''StringField'',\r\n                IntProperty = 5,\r\n                IntField = 10\r\n            }", span="4064-4070"];
m6_1906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="XmlNodeConverter.cs", label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="4081-4081"];
m6_1904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="4072-4072"];
m6_1905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="4074-4079"];
m6_1911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="4062-4062"];
m6_305 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return CommentName;", span="992-992"];
m6_3139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="7175-7175"];
m6_3140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            }, ''Unexpected character encountered while parsing value: t. Path 'PreProperty', line 2, position 18.'')", span="7177-7185"];
m6_3141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="7175-7175"];
m6_236 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="827-827"];
m6_2693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="5983-5983"];
m6_3874 [cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", span="89-89"];
m6_2110 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m6_3515 [cluster="Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="31-31"];
m6_3079 [cluster="System.Convert.FromBase64String(string)", file="XmlNodeConverter.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m6_2190 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0"];
m6_1089 [cluster="JavaScriptSerializer.cstr", file="XmlNodeConverter.cs", label="Entry JavaScriptSerializer.cstr", span=""];
m6_4032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9343-9343"];
m6_4039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9365-9365"];
m6_4033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="XmlNodeConverter.cs", label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9345-9345"];
m6_4038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="XmlNodeConverter.cs", label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9363-9363"];
m6_4034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="XmlNodeConverter.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9346-9346"];
m6_4036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9354-9357"];
m6_4035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="XmlNodeConverter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9347-9352"];
m6_4037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9359-9361"];
m6_4040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9343-9343"];
m6_25 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="return new XmlDeclarationWrapper(_document.CreateXmlDeclaration(version, encoding, standalone));", span="82-82"];
m6_26 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="80-80"];
m6_1060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2340-2340"];
m6_1062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { JsonConvert.DeserializeObject<List<string>>(json); }, @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'')", span="2344-2344"];
m6_1061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="XmlNodeConverter.cs", label="string json = @''[''''vvv\jvvv'''']''", span="2342-2342"];
m6_1063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2340-2340"];
m6_3195 [cluster="Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", span="27-27"];
m6_1307 [cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30"];
m6_1569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3348-3348"];
m6_1573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3354-3354"];
m6_1576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3359-3359"];
m6_1572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(i)", span="3353-3353"];
m6_1574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="XmlNodeConverter.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="3356-3356"];
m6_1575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="XmlNodeConverter.cs", label="string newJson = JsonConvert.SerializeObject(ii)", span="3358-3358"];
m6_1570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="XmlNodeConverter.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="3350-3350"];
m6_1571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="XmlNodeConverter.cs", label="i.SuperProp = ''overrided superprop''", span="3351-3351"];
m6_1577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3348-3348"];
m6_3458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7833-7833"];
m6_3463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, dic2.Count)", span="7853-7853"];
m6_3464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7854-7854"];
m6_3465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7855-7855"];
m6_3462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="XmlNodeConverter.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7851-7851"];
m6_3459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="XmlNodeConverter.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7835-7839"];
m6_3460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7841-7844"];
m6_3461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="7846-7849"];
m6_3466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7833-7833"];
m6_783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1688-1688"];
m6_787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="XmlNodeConverter.cs", label="Assert.AreEqual(expectedJson, json)", span="1693-1693"];
m6_785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="XmlNodeConverter.cs", label="var json = JsonConvert.SerializeObject(original)", span="1691-1691"];
m6_786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="XmlNodeConverter.cs", label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1692-1692"];
m6_784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="XmlNodeConverter.cs", label="var original = new FooBar1 { foo = new Bar1 { bar = ''value'' } }", span="1690-1690"];
m6_788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1688-1688"];
m6_1109 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="XmlNodeConverter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m6_113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(false, l[i++])", span="357-357"];
m6_114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(false, l[i++])", span="358-358"];
m6_2937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6749-6749"];
m6_2942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6763-6763"];
m6_2943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6764-6764"];
m6_2944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6765-6765"];
m6_2945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6766-6766"];
m6_2946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6767-6767"];
m6_2938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="XmlNodeConverter.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="6751-6751"];
m6_2941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="XmlNodeConverter.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6762-6762"];
m6_2939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6752-6752"];
m6_2940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="6754-6760"];
m6_2947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6749-6749"];
m6_3833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8894-8894"];
m6_3836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, people.Count)", span="8922-8922"];
m6_3839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="Assert.AreEqual(john, jane.Spouse)", span="8927-8927"];
m6_3840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="Assert.AreEqual(jane, john.Spouse)", span="8928-8928"];
m6_3835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8913-8920"];
m6_3837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="PersonReference john = people[0]", span="8924-8924"];
m6_3838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="PersonReference jane = people[1]", span="8925-8925"];
m6_3834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8896-8911"];
m6_3841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8894-8894"];
m6_1790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3858-3858"];
m6_1792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Exception>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3862-3864"];
m6_1791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="XmlNodeConverter.cs", label="string json = @''[]''", span="3860-3860"];
m6_1793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3858-3858"];
m6_1011 [cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27"];
m6_3614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="8243-8243"];
m6_3617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, l[0])", span="8252-8252"];
m6_3618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, l[1])", span="8253-8253"];
m6_3616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="XmlNodeConverter.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="8250-8250"];
m6_3615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="XmlNodeConverter.cs", label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="8245-8248"];
m6_3619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="8243-8243"];
m6_4134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9627-9627"];
m6_4135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="var messageJObject = serializer.Deserialize<JObject>(reader)", span="9629-9629"];
m6_4136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="messageJObject == null", span="9630-9630"];
m6_4138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="var address = messageJObject.GetValue(''Address'', StringComparison.OrdinalIgnoreCase).ToObject<string>()", span="9635-9635"];
m6_4141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="messageJObject.TryGetValue(''DisplayName'', StringComparison.OrdinalIgnoreCase, out displayNameToken)\r\n                    && !string.IsNullOrEmpty(displayName = displayNameToken.ToObject<string>())", span="9639-9640"];
m6_4137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return null;", span="9632-9632"];
m6_4139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="JToken displayNameToken", span="9637-9637"];
m6_4142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return new System.Net.Mail.MailAddress(address, displayName);", span="9642-9642"];
m6_4143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return new System.Net.Mail.MailAddress(address);", span="9645-9645"];
m6_4140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="string displayName", span="9638-9638"];
m6_4144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9627-9627"];
m6_1832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3923-3923"];
m6_1834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3929-3929"];
m6_1837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="XmlNodeConverter.cs", label="Assert.IsTrue(ex.Message.StartsWith(@''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.'' + Environment.NewLine +\r\n                                                    @''To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine +\r\n                                                    @''Path ''''))", span="3934-3936"];
m6_1835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="XmlNodeConverter.cs", label="Assert.Fail()", span="3930-3930"];
m6_1833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="XmlNodeConverter.cs", label="string json = @''{}''", span="3925-3925"];
m6_1836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="XmlNodeConverter.cs", label=JsonSerializationException, span="3932-3932"];
m6_1838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3923-3923"];
m6_544 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="DeserializeNode(reader, document, manager, element)", span="1400-1400"];
m6_548 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1499-1499"];
m6_550 [cluster="string.StartsWith(string, System.StringComparison)", file="XmlNodeConverter.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m6_577 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m6_583 [cluster="string.FormatWith(System.IFormatProvider, object)", file="XmlNodeConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m6_585 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1458-1458"];
m6_587 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(nestedArrayElement)", span="1462-1462"];
m6_589 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1465-1465"];
m6_591 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="count++", span="1468-1468"];
m6_594 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="count == 1 && WriteArrayAttribute", span="1476-1476"];
m6_595 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlElement arrayElement = nestedArrayElement.ChildNodes.OfType<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1478-1478"];
m6_597 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1456-1456"];
m6_602 [cluster="lambda expression", file="XmlNodeConverter.cs", label="n.LocalName == propertyName", span="1478-1478"];
m6_604 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element.SetAttributeNode(document.CreateAttribute(''json:Array'', JsonNamespaceUri, ''true''))", span="1485-1485"];
m6_606 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element.GetPrefixOfNamespace(JsonNamespaceUri) == null", span="1491-1491"];
m6_546 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.RemoveNamespace(string.Empty, manager.DefaultNamespace)", span="1404-1404"];
m6_553 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1662-1662"];
m6_545 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.PopScope()", span="1401-1401"];
m6_547 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1342-1342"];
m6_551 [cluster="string.Substring(int)", file="XmlNodeConverter.cs", label="Entry string.Substring(int)", span="0-0"];
m6_578 [cluster="Unk.ToString", file="XmlNodeConverter.cs", label="Entry Unk.ToString", span=""];
m6_580 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m6_582 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="60-60"];
m6_584 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m6_586 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlElement nestedArrayElement = CreateElement(propertyName, document, elementPrefix, manager)", span="1460-1460"];
m6_588 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="int count = 0", span="1464-1464"];
m6_590 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, propertyName, nestedArrayElement)", span="1467-1467"];
m6_592 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label=WriteArrayAttribute, span="1471-1471"];
m6_593 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="AddJsonArrayAttribute(nestedArrayElement, document)", span="1473-1473"];
m6_596 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="AddJsonArrayAttribute(arrayElement, document)", span="1479-1479"];
m6_598 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1483-1483"];
m6_601 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="1478-1478"];
m6_603 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="1478-1478"];
m6_605 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element is XElementWrapper", span="1489-1489"];
m6_607 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element.SetAttributeNode(document.CreateAttribute(''xmlns:json'', ''http://www.w3.org/2000/xmlns/'', JsonNamespaceUri))", span="1493-1493"];
m6_830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1756-1756"];
m6_842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="XmlNodeConverter.cs", label="_name = name", span="1758-1758"];
m6_843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="XmlNodeConverter.cs", label="_number = number", span="1759-1759"];
m6_844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1756-1756"];
m6_2662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5963-5963"];
m6_2667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="5977-5977"];
m6_2668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="5978-5978"];
m6_2666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="XmlNodeConverter.cs", label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="5975-5975"];
m6_2664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="XmlNodeConverter.cs", label="var settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            }", span="5967-5971"];
m6_2665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="5973-5973"];
m6_2663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="XmlNodeConverter.cs", label="var derived = new Derived(''meh'', ''woo'')", span="5965-5965"];
m6_2669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5963-5963"];
m6_1818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3907-3907"];
m6_1820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 16.'')", span="3911-3911"];
m6_1819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="XmlNodeConverter.cs", label="string json = @''new Constructor(123)''", span="3909-3909"];
m6_1821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3907-3907"];
m6_2191 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0"];
m6_403 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.CDATA", span="1153-1153"];
m6_407 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && node.Value == JsonNamespaceUri", span="1157-1157"];
m6_408 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="return;", span="1158-1158"];
m6_409 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.NamespaceUri == JsonNamespaceUri", span="1160-1160"];
m6_404 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.ProcessingInstruction", span="1154-1154"];
m6_406 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.SignificantWhitespace", span="1156-1156"];
m6_405 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Whitespace", span="1155-1155"];
m6_410 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.LocalName == ''Array''", span="1162-1162"];
m6_20 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="787-787"];
m6_21 [cluster="Unk.Fail", file="XmlNodeConverter.cs", label="Entry Unk.Fail", span=""];
m6_1363 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27"];
m6_4162 [cluster="System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", file="XmlNodeConverter.cs", label="Entry System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", span="0-0"];
m6_834 [cluster="System.IO.MemoryStream.MemoryStream()", file="XmlNodeConverter.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m6_3796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8755-8755"];
m6_3798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="XmlNodeConverter.cs", label="throw new ArgumentNullException(nameof(bar));", span="8759-8759"];
m6_3797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="XmlNodeConverter.cs", label="bar == null", span="8757-8757"];
m6_3799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="XmlNodeConverter.cs", label="Bar = bar", span="8762-8762"];
m6_3800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8755-8755"];
m6_3456 [cluster="string.Contains(string)", file="XmlNodeConverter.cs", label="Entry string.Contains(string)", span="0-0"];
m6_3910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="9079-9079"];
m6_3911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="XmlNodeConverter.cs", label="throw new InvalidCastException();", span="9081-9081"];
m6_3912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="9079-9079"];
m6_3588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="8164-8164"];
m6_3589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="XmlNodeConverter.cs", label="m_Item1 = item1", span="8166-8166"];
m6_3590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="8164-8164"];
m6_2888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="6521-6521"];
m6_2843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6476-6476"];
m6_2845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="XmlNodeConverter.cs", label="Categories = new Dictionary<string, int>()", span="6479-6479"];
m6_2844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="XmlNodeConverter.cs", label="Title = title", span="6478-6478"];
m6_2846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6476-6476"];
m6_168 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.SerializeObject(new Binding_DisallowNull())", span="452-452"];
m6_232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="XmlNodeConverter.cs", label="var e2 = JsonConvert.DeserializeObject<EnumA>('''value_a''', new StringEnumConverter())", span="573-573"];
m6_3659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="8365-8365"];
m6_2629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5885-5885"];
m6_2633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="XmlNodeConverter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5891-5891"];
m6_2635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="XmlNodeConverter.cs", label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="5894-5894"];
m6_2632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="XmlNodeConverter.cs", label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5889-5889"];
m6_2634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="XmlNodeConverter.cs", label="IDictionary<string, decimal> d = serializer.Deserialize<IDictionary<string, decimal>>(reader)", span="5893-5893"];
m6_2631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="XmlNodeConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5888-5888"];
m6_2630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="XmlNodeConverter.cs", label="string json = ''{'Value':123456789876543.21}''", span="5887-5887"];
m6_2636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5885-5885"];
m6_267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="641-643"];
m6_2894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6608-6608"];
m6_2895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="XmlNodeConverter.cs", label="_readonlyString = ''default!''", span="6610-6610"];
m6_2896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6608-6608"];
m6_838 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="XmlNodeConverter.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m6_128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="384-384"];
m6_129 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="527-527"];
m6_130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="XmlNodeConverter.cs", label="Bars = new List<string>()", span="386-386"];
m6_2184 [cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0"];
m6_1059 [cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27"];
m6_1254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2696-2696"];
m6_1259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(ts, c.TimeSpanField)", span="2706-2706"];
m6_1255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="XmlNodeConverter.cs", label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="2698-2698"];
m6_1258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="XmlNodeConverter.cs", label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="2705-2705"];
m6_1256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="2700-2700"];
m6_1257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="2701-2703"];
m6_1260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2696-2696"];
m6_755 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper", span=""];
m6_3620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="8258-8258"];
m6_3623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8262-8262"];
m6_3627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="Assert.AreEqual(500, obj.Item1)", span="8270-8270"];
m6_3622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="var json = JsonConvert.SerializeObject(tuple)", span="8261-8261"];
m6_3624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="MyTuple<int> obj = null", span="8264-8264"];
m6_3626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="doStuff()", span="8269-8269"];
m6_3621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="var tuple = new MyTuple<int>(500)", span="8260-8260"];
m6_3625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="Action doStuff = () => { obj = JsonConvert.DeserializeObject<MyTuple<int>>(json); }", span="8266-8266"];
m6_3628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="8258-8258"];
m6_103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(false, l[i++])", span="347-347"];
m6_104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(true, l[i++])", span="348-348"];
m6_2161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4830-4830"];
m6_2162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_stringValue = info.GetString(''stringValue'')", span="4832-4832"];
m6_2163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_intValue = info.GetInt32(''intValue'')", span="4833-4833"];
m6_2164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="4834-4834"];
m6_2165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="4835-4835"];
m6_2166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="4836-4836"];
m6_2167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="4837-4837"];
m6_2168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_booleanValue = info.GetBoolean(''booleanValue'')", span="4839-4839"];
m6_2169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_byteValue = info.GetByte(''byteValue'')", span="4840-4840"];
m6_2170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_charValue = info.GetChar(''charValue'')", span="4841-4841"];
m6_2171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="4842-4842"];
m6_2172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_decimalValue = info.GetDecimal(''decimalValue'')", span="4843-4843"];
m6_2173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_shortValue = info.GetInt16(''shortValue'')", span="4844-4844"];
m6_2174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_longValue = info.GetInt64(''longValue'')", span="4845-4845"];
m6_2175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="4846-4846"];
m6_2176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_floatValue = info.GetSingle(''floatValue'')", span="4847-4847"];
m6_2177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_ushortValue = info.GetUInt16(''ushortValue'')", span="4848-4848"];
m6_2178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_uintValue = info.GetUInt32(''uintValue'')", span="4849-4849"];
m6_2179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_ulongValue = info.GetUInt64(''ulongValue'')", span="4850-4850"];
m6_2180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4830-4830"];
m6_3172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="7250-7250"];
m6_3175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="XmlNodeConverter.cs", label="Assert.AreEqual('''', dict[''k1''])", span="7255-7255"];
m6_3176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''v2'', dict[''k2''])", span="7256-7256"];
m6_3174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="XmlNodeConverter.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="7253-7253"];
m6_3173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="XmlNodeConverter.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="7252-7252"];
m6_3177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="7250-7250"];
m6_220 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="543-543"];
m6_222 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="543-543"];
m6_221 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1'')", span="543-543"];
m6_223 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="547-547"];
m6_3467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7859-7859"];
m6_3468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="XmlNodeConverter.cs", label="string s = (string)new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="7861-7861"];
m6_3469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="XmlNodeConverter.cs", label="Assert.AreEqual('''', s)", span="7862-7862"];
m6_3470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7859-7859"];
m6_3578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="8133-8133"];
m6_3580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(123, result.Key)", span="8140-8140"];
m6_3581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''test value'', result.Value)", span="8141-8141"];
m6_3579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="XmlNodeConverter.cs", label="KeyValuePair<int, string> result =\r\n                JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n                    ''{key: 123, \''VALUE\'': \''test value\''}''\r\n                    )", span="8135-8138"];
m6_3582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="8133-8133"];
m6_1224 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m6_2087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4667-4667"];
m6_2088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4667-4667"];
m6_23 [cluster="System.IO.FileStream.Seek(long, System.IO.SeekOrigin)", file="XmlNodeConverter.cs", label="Entry System.IO.FileStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m6_2960 [cluster="System.TimeSpan.FromDays(double)", file="XmlNodeConverter.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m6_296 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817"];
m6_297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="752-752"];
m6_299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="XmlNodeConverter.cs", label="c.UpdatedBy_Id = Guid.NewGuid()", span="755-755"];
m6_300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c)", span="757-757"];
m6_301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''{}'', json)", span="759-759"];
m6_307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="769-769"];
m6_309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="769-769"];
m6_311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="813-813"];
m6_320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="813-813"];
m6_298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="XmlNodeConverter.cs", label="CustomerWithMetadataType c = new CustomerWithMetadataType()", span="754-754"];
m6_302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="XmlNodeConverter.cs", label="CustomerWithMetadataType c2 = JsonConvert.DeserializeObject<CustomerWithMetadataType>(''{'UpdatedBy_Id':'F6E0666D-13C7-4745-B486-800812C8F6DE'}'')", span="761-761"];
m6_304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="752-752"];
m6_306 [cluster="System.Guid.NewGuid()", file="XmlNodeConverter.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m6_308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="XmlNodeConverter.cs", label="this.Sections = new HashSet<FaqSection>()", span="771-771"];
m6_312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="XmlNodeConverter.cs", label="FaqItem c = new FaqItem()", span="815-815"];
m6_314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="XmlNodeConverter.cs", label="c.Sections.Add(new FaqSection())", span="817-817"];
m6_316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="821-828"];
m6_318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, c2.FaqId)", span="832-832"];
m6_303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="XmlNodeConverter.cs", label="Assert.AreEqual(Guid.Empty, c2.UpdatedBy_Id)", span="763-763"];
m6_313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="XmlNodeConverter.cs", label="c.FaqId = 1", span="816-816"];
m6_315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="819-819"];
m6_317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="XmlNodeConverter.cs", label="FaqItem c2 = JsonConvert.DeserializeObject<FaqItem>(json)", span="830-830"];
m6_319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, c2.Sections.Count)", span="833-833"];
m6_955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="2095-2095"];
m6_958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Orange'', p.Name)", span="2101-2101"];
m6_959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="2102-2102"];
m6_960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3.99m, p.Price)", span="2103-2103"];
m6_957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="XmlNodeConverter.cs", label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="2099-2099"];
m6_956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="XmlNodeConverter.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="2097-2097"];
m6_961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="2095-2095"];
m6_1508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3185-3185"];
m6_1509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="XmlNodeConverter.cs", label="Person person = new Person\r\n            {\r\n                Name = ''Mike Manager'',\r\n                BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="3187-3193"];
m6_1510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="XmlNodeConverter.cs", label="return person;", span="3194-3194"];
m6_1511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3185-3185"];
m6_770 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422"];
m6_1017 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27"];
m6_3831 [cluster="Size.cstr", file="XmlNodeConverter.cs", label="Entry Size.cstr", span=""];
m6_1562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3332-3332"];
m6_1564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<ConstructorAndRequiredTestClass>(json)", span="3337-3337"];
m6_1567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="XmlNodeConverter.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'TestProperty2' not found in JSON. Path ''''))", span="3343-3343"];
m6_1565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="XmlNodeConverter.cs", label="Assert.Fail()", span="3339-3339"];
m6_1563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="XmlNodeConverter.cs", label="string json = ''{ 'testProperty1': 'value' }''", span="3336-3336"];
m6_1566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="XmlNodeConverter.cs", label=JsonSerializationException, span="3341-3341"];
m6_1568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3332-3332"];
m6_3008 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="991-991"];
m6_420 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@version'')", span="1177-1177"];
m6_1465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="3083-3083"];
m6_1467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3091-3091"];
m6_1470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="XmlNodeConverter.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'LastName' not found in JSON. Path ''''))", span="3096-3096"];
m6_1468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="XmlNodeConverter.cs", label="Assert.Fail()", span="3092-3092"];
m6_1466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="3087-3089"];
m6_1469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="XmlNodeConverter.cs", label=JsonSerializationException, span="3094-3094"];
m6_1471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="3083-3083"];
m6_4145 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="493-493"];
m6_1458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="3066-3066"];
m6_1459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                };\r\n\r\n                string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n            }, ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'')", span="3068-3079"];
m6_1460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="3066-3066"];
m6_767 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m6_2673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5999-5999"];
m6_2674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''Name'', _name)", span="6001-6001"];
m6_2675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5999-5999"];
m6_255 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="607-607"];
m6_1892 [cluster="System.Collections.Generic.List<T>.Add(T)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="679-679"];
m6_3940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="9129-9129"];
m6_3941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="XmlNodeConverter.cs", label="throw new InvalidCastException();", span="9131-9131"];
m6_3942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="9129-9129"];
m6_2379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="5367-5367"];
m6_937 [cluster="System.Console.WriteLine(string)", file="XmlNodeConverter.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m6_3629 [cluster="System.Action.Invoke()", file="XmlNodeConverter.cs", label="Entry System.Action.Invoke()", span="0-0"];
m6_3900 [cluster="System.InvalidCastException.InvalidCastException()", file="XmlNodeConverter.cs", label="Entry System.InvalidCastException.InvalidCastException()", span="0-0"];
m6_3286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7458-7458"];
m6_3292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="7467-7467"];
m6_3287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="XmlNodeConverter.cs", label="var person = PersonWithPrivateConstructor.CreatePerson()", span="7460-7460"];
m6_3291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="XmlNodeConverter.cs", label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="7465-7465"];
m6_3290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="XmlNodeConverter.cs", label="var serializedPerson = JsonConvert.SerializeObject(person)", span="7464-7464"];
m6_3288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="XmlNodeConverter.cs", label="person.Name = ''John Doe''", span="7461-7461"];
m6_3289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="XmlNodeConverter.cs", label="person.Age = 25", span="7462-7462"];
m6_3293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7458-7458"];
m6_365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="XmlNodeConverter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="951-951"];
m6_1682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3634-3634"];
m6_1685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="3649-3649"];
m6_1686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="3650-3650"];
m6_1687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="3651-3651"];
m6_1688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="3652-3652"];
m6_1689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="3653-3653"];
m6_1690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="3654-3654"];
m6_1684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="XmlNodeConverter.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="3647-3647"];
m6_1683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="XmlNodeConverter.cs", label="string json = @''/*comment1*/ { /*comment2*/\r\n        ''''Name'''': /*comment3*/ ''''Apple'''' /*comment4*/, /*comment5*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment6*/ [ /*comment7*/\r\n          ''''Small'''', /*comment8*/\r\n          ''''Medium'''' /*comment9*/,\r\n          /*comment10*/ ''''Large''''\r\n        /*comment11*/ ] /*comment12*/\r\n      } /*comment13*/''", span="3636-3645"];
m6_1691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3634-3634"];
m6_927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="2030-2030"];
m6_931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="2038-2038"];
m6_932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="2039-2039"];
m6_928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Store store = new Store()", span="2032-2032"];
m6_930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="2036-2036"];
m6_933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Console.WriteLine(jsonText)", span="2041-2041"];
m6_929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="XmlNodeConverter.cs", label="string jsonText = JsonConvert.SerializeObject(store)", span="2034-2034"];
m6_934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="2030-2030"];
m6_2358 [cluster="Unk.ToString", file="XmlNodeConverter.cs", label="Entry Unk.ToString", span=""];
m6_3495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7912-7912"];
m6_3496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="XmlNodeConverter.cs", label="Event1 e = new Event1\r\n            {\r\n                EventName = ''Blackadder III'',\r\n                Venue = ''Gryphon Theatre'',\r\n                Performances = new List<DateTime>\r\n                {\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n                }\r\n            }", span="7914-7924"];
m6_3498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="7937-7951"];
m6_3497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="7926-7926"];
m6_3499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7912-7912"];
m6_1188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2564-2564"];
m6_1196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="2574-2574"];
m6_1197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="2576-2576"];
m6_1198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="2577-2577"];
m6_1199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="2578-2578"];
m6_1200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="2579-2579"];
m6_1201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="2580-2580"];
m6_1202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="2581-2581"];
m6_1195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2573-2573"];
m6_1194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(wibble)", span="2571-2571"];
m6_1191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="wibble.Bar.Add(1)", span="2568-2568"];
m6_1192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="wibble.Bar.Add(2)", span="2569-2569"];
m6_1193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="wibble.Bar.Add(3)", span="2570-2570"];
m6_1189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="ClassWithArray wibble = new ClassWithArray()", span="2566-2566"];
m6_1190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="wibble.Foo = ''hello''", span="2567-2567"];
m6_1203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2564-2564"];
m6_2245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="5010-5010"];
m6_2260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="5060-5060"];
m6_2258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="5058-5058"];
m6_2259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="5059-5059"];
m6_2261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="5061-5061"];
m6_2262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="5062-5062"];
m6_2263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="5063-5063"];
m6_2251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="5018-5018"];
m6_2257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="5057-5057"];
m6_2247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="5013-5013"];
m6_2250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="person.Name = ''Name!''", span="5016-5016"];
m6_2252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="string dateTimeOffsetText", span="5019-5019"];
m6_2254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="5026-5026"];
m6_2256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="5032-5055"];
m6_2255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="5028-5031"];
m6_2246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="Person person = new Person()", span="5012-5012"];
m6_2248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="person.LastModified = person.BirthDate", span="5014-5014"];
m6_2249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="person.Department = ''Department!''", span="5015-5015"];
m6_2253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="5021-5021"];
m6_2264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="5010-5010"];
m6_3654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8376-8376"];
m6_3656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n            })", span="8387-8390"];
m6_3657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="8392-8399"];
m6_3655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="XmlNodeConverter.cs", label="NullableFloats floats = new NullableFloats\r\n            {\r\n                Object = double.NaN,\r\n                ObjectNull = null,\r\n                Float = float.NaN,\r\n                NullableDouble = double.NaN,\r\n                NullableFloat = null\r\n            }", span="8378-8385"];
m6_3658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8376-8376"];
m6_1335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2835-2835"];
m6_1341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2845-2845"];
m6_1342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2846-2846"];
m6_1339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2841-2841"];
m6_1336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2837-2837"];
m6_1340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="2843-2843"];
m6_1338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="2840-2840"];
m6_1337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2838-2838"];
m6_1343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2835-2835"];
m6_3153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="7201-7201"];
m6_3156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, c.Id)", span="7206-7206"];
m6_3159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="7211-7211"];
m6_3155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="XmlNodeConverter.cs", label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="7204-7204"];
m6_3157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="XmlNodeConverter.cs", label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="7208-7208"];
m6_3158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="XmlNodeConverter.cs", label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="7209-7209"];
m6_3154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="XmlNodeConverter.cs", label="string json = @''{''''Id'''':null}''", span="7203-7203"];
m6_3160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="7201-7201"];
m6_1578 [cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="31-31"];
m6_2972 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148"];
m6_1722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3738-3738"];
m6_1725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="3756-3756"];
m6_1726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, content.Children.Count)", span="3757-3757"];
m6_1727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''First'', content.Children[0].Text)", span="3758-3758"];
m6_1728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="3759-3759"];
m6_1724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="XmlNodeConverter.cs", label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="3754-3754"];
m6_1723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="3740-3752"];
m6_1729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3738-3738"];
m6_138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="395-395"];
m6_139 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="397-397"];
m6_140 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}'')", span="397-397"];
m6_920 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m6_1994 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="4337-4337"];
m6_329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''IsProxy'''': true,\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="846-854"];
m6_330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="XmlNodeConverter.cs", label="FaqItemProxy c2 = JsonConvert.DeserializeObject<FaqItemProxy>(json)", span="856-856"];
m6_331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, c2.FaqId)", span="858-858"];
m6_3543 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="8071-8071"];
m6_3542 [cluster="lambda expression", file="XmlNodeConverter.cs", label="string json = ''[{},1]''", span="8069-8069"];
m6_3544 [cluster="lambda expression", file="XmlNodeConverter.cs", label="serializer.CheckAdditionalContent = true", span="8072-8072"];
m6_3548 [cluster="lambda expression", file="XmlNodeConverter.cs", label="serializer.Deserialize(reader, typeof(MyType))", span="8078-8078"];
m6_3631 [cluster="lambda expression", file="XmlNodeConverter.cs", label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="8266-8266"];
m6_3529 [cluster="lambda expression", file="XmlNodeConverter.cs", label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8023-8023"];
m6_3545 [cluster="lambda expression", file="XmlNodeConverter.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="8074-8074"];
m6_3541 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="8067-8079"];
m6_3547 [cluster="lambda expression", file="XmlNodeConverter.cs", label="reader.Read()", span="8076-8076"];
m6_3549 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="8067-8079"];
m6_3852 [cluster="lambda expression", file="XmlNodeConverter.cs", label="new IdReferenceResolver()", span="8953-8953"];
m6_252 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="919-919"];
m6_349 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writeArray = true", span="1054-1054"];
m6_181 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="534-534"];
m6_250 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="SerializeNode(writer, node, manager, !OmitRootObject)", span="916-916"];
m6_1057 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="2336-2336"];
m6_1369 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.SerializeObject(c)", span="2890-2890"];
m6_1463 [cluster="lambda expression", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="3078-3078"];
m6_4099 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.SerializeObject(new ErroringTestClass())", span="9522-9522"];
m6_610 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="bool finishedAttributes = false", span="1502-1502"];
m6_921 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="2010-2010"];
m6_924 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="2013-2013"];
m6_1462 [cluster="lambda expression", file="XmlNodeConverter.cs", label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                }", span="3070-3076"];
m6_3371 [cluster="lambda expression", file="XmlNodeConverter.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7621-7621"];
m6_3386 [cluster="lambda expression", file="XmlNodeConverter.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7646-7646"];
m6_3401 [cluster="lambda expression", file="XmlNodeConverter.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7669-7669"];
m6_3630 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="8266-8266"];
m6_3632 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="8266-8266"];
m6_3728 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="8563-8563"];
m6_3546 [cluster="lambda expression", file="XmlNodeConverter.cs", label="reader.Read()", span="8075-8075"];
m6_3528 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="8023-8023"];
m6_3530 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="8023-8023"];
m6_1863 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3970-3978"];
m6_1870 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3987-3995"];
m6_1876 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4004-4012"];
m6_1882 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4021-4029"];
m6_4126 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                    JsonMessage,\r\n                    new MailAddressReadConverter(),\r\n                    new AttachmentReadConverter(),\r\n                    new EncodingReadConverter())", span="9611-9615"];
m6_3851 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="8953-8953"];
m6_3853 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="8953-8953"];
m6_62 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="_element.SetAttributeNode((XmlAttribute)xmlAttributeWrapper.WrappedNode)", span="147-147"];
m6_68 [cluster="Unk.GetPrefixOfNamespace", file="XmlNodeConverter.cs", label="Entry Unk.GetPrefixOfNamespace", span=""];
m6_74 [cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", span="193-193"];
m6_157 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="return new XDocumentTypeWrapper(new XDocumentType(name, publicId, systemId, internalSubset));", span="510-510"];
m6_209 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XText", span="698-698"];
m6_212 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XCommentWrapper((XComment)node);", span="701-701"];
m6_215 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XDocumentType", span="704-704"];
m6_218 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="688-688"];
m6_227 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="764-764"];
m6_253 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="906-906"];
m6_444 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(documentType.InternalSubset)", span="1216-1216"];
m6_1065 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<List<string>>(json)", span="2344-2344"];
m6_1754 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<TestObjects.Event>(json)", span="3802-3802"];
m6_1781 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="3841-3841"];
m6_1788 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3851-3851"];
m6_1795 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<Exception>(json)", span="3862-3862"];
m6_1802 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<double>(json)", span="3874-3874"];
m6_1809 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="3885-3885"];
m6_1816 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<JObject>(json)", span="3898-3898"];
m6_1823 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="3911-3911"];
m6_1830 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3919-3919"];
m6_2424 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5449-5449"];
m6_2438 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5469-5469"];
m6_2540 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5689-5689"];
m6_3109 [cluster="lambda expression", file="XmlNodeConverter.cs", label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="7109-7109"];
m6_3123 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="7148-7148"];
m6_3144 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="7184-7184"];
m6_3151 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="7196-7196"];
m6_3224 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<double>('''')", span="7344-7344"];
m6_3230 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<StringComparison>('''')", span="7350-7350"];
m6_3236 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<int>('''')", span="7356-7356"];
m6_3246 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<double>(null)", span="7370-7370"];
m6_3712 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]'')", span="8534-8534"];
m6_3720 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}'')", span="8549-8549"];
m6_3729 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<IList<long>>(json)", span="8563-8563"];
m6_4106 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<string>(''020474068'')", span="9528-9528"];
m6_1615 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="3438-3438"];
m6_2031 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="4436-4440"];
m6_3085 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                })", span="7055-7058"];
m6_254 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="922-922"];
m6_348 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writeArray = IsArray(groupedNodes[0])", span="1050-1050"];
m6_350 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!writeArray", span="1057-1057"];
m6_1852 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.PopulateObject(json, new List<Person>())", span="3953-3953"];
m6_167 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="518-518"];
m6_169 [cluster="XElement.cstr", file="XmlNodeConverter.cs", label="Entry XElement.cstr", span=""];
m6_180 [cluster="XAttribute.cstr", file="XmlNodeConverter.cs", label="Entry XAttribute.cstr", span=""];
m6_182 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="536-536"];
m6_249 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="914-914"];
m6_251 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="!OmitRootObject", span="918-918"];
m6_1056 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="2336-2336"];
m6_1058 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="2336-2336"];
m6_1368 [cluster="lambda expression", file="XmlNodeConverter.cs", label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="2889-2889"];
m6_1370 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="2887-2891"];
m6_1464 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3068-3079"];
m6_1506 [cluster="lambda expression", file="XmlNodeConverter.cs", label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="3182-3182"];
m6_4098 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="9522-9522"];
m6_4100 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="9522-9522"];
m6_3252 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject(null)", span="7382-7382"];
m6_609 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Dictionary<string, string> attributeNameValues = new Dictionary<string, string>()", span="1501-1501"];
m6_611 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="bool finishedElement = false", span="1503-1503"];
m6_923 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="2010-2010"];
m6_922 [cluster="lambda expression", file="XmlNodeConverter.cs", label="p.Name", span="2010-2010"];
m6_926 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="2013-2013"];
m6_925 [cluster="lambda expression", file="XmlNodeConverter.cs", label="p.Name", span="2013-2013"];
m6_2756 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="6175-6175"];
m6_2430 [cluster="lambda expression", file="XmlNodeConverter.cs", label="var reference = new Dictionary<string, object>()", span="5459-5459"];
m6_2433 [cluster="lambda expression", file="XmlNodeConverter.cs", label="var child = new Dictionary<string, object>()", span="5463-5463"];
m6_1461 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3068-3079"];
m6_2437 [cluster="lambda expression", file="XmlNodeConverter.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5468-5468"];
m6_2539 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="5689-5689"];
m6_3372 [cluster="lambda expression", file="XmlNodeConverter.cs", label="e.ErrorContext.Handled = true", span="7622-7622"];
m6_3370 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="7619-7623"];
m6_3387 [cluster="lambda expression", file="XmlNodeConverter.cs", label="e.ErrorContext.Handled = true", span="7647-7647"];
m6_3385 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="7644-7648"];
m6_3402 [cluster="lambda expression", file="XmlNodeConverter.cs", label="e.ErrorContext.Handled = true", span="7670-7670"];
m6_3400 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="7667-7671"];
m6_3730 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="8563-8563"];
m6_1862 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3968-3979"];
m6_1864 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3968-3979"];
m6_1869 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3985-3996"];
m6_1871 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3985-3996"];
m6_1875 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="4002-4013"];
m6_1877 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="4002-4013"];
m6_1881 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="4019-4030"];
m6_1883 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="4019-4030"];
m6_4125 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="9609-9616"];
m6_4127 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="9609-9616"];
m6_61 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="XmlNodeWrapper xmlAttributeWrapper = (XmlNodeWrapper)attribute", span="145-145"];
m6_63 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="143-143"];
m6_73 [cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", file="XmlNodeConverter.cs", label="_documentType = documentType", span="196-196"];
m6_75 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="230-230"];
m6_141 [cluster="XText.cstr", file="XmlNodeConverter.cs", label="Entry XText.cstr", span=""];
m6_145 [cluster="XCData.cstr", file="XmlNodeConverter.cs", label="Entry XCData.cstr", span=""];
m6_156 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="508-508"];
m6_158 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="508-508"];
m6_208 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XProcessingInstructionWrapper((XProcessingInstruction)node);", span="697-697"];
m6_210 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XTextWrapper((XText)node);", span="699-699"];
m6_211 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XComment", span="700-700"];
m6_213 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XAttribute", span="702-702"];
m6_214 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XAttributeWrapper((XAttribute)node);", span="703-703"];
m6_216 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XDocumentTypeWrapper((XDocumentType)node);", span="705-705"];
m6_217 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(node);", span="707-707"];
m6_219 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="723-723"];
m6_225 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="XmlNodeConverter.cs", label="_xmlObject = xmlObject", span="725-725"];
m6_226 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="723-723"];
m6_228 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="throw new InvalidOperationException();", span="766-766"];
m6_443 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@internalSubset'')", span="1215-1215"];
m6_445 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="1219-1219"];
m6_1064 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="2344-2344"];
m6_1066 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="2344-2344"];
m6_1753 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3802-3802"];
m6_1755 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3802-3802"];
m6_1780 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3841-3841"];
m6_1782 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3841-3841"];
m6_1787 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3851-3851"];
m6_1789 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3851-3851"];
m6_1794 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3862-3862"];
m6_1796 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3862-3862"];
m6_1801 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3874-3874"];
m6_1803 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3874-3874"];
m6_1808 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3885-3885"];
m6_1810 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3885-3885"];
m6_1815 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3898-3898"];
m6_1817 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3898-3898"];
m6_1822 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3911-3911"];
m6_1824 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3911-3911"];
m6_1829 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3919-3919"];
m6_1831 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3919-3919"];
m6_2423 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="5449-5449"];
m6_2425 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="5449-5449"];
m6_2439 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="5455-5470"];
m6_2541 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="5689-5689"];
m6_3108 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="7109-7109"];
m6_3110 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="7109-7109"];
m6_3122 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="7148-7148"];
m6_3124 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="7148-7148"];
m6_3143 [cluster="lambda expression", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="7179-7182"];
m6_3145 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="7177-7185"];
m6_3150 [cluster="lambda expression", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''PreProperty'''': ''", span="7193-7194"];
m6_3152 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="7191-7197"];
m6_3223 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="7344-7344"];
m6_3225 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="7344-7344"];
m6_3229 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="7350-7350"];
m6_3231 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="7350-7350"];
m6_3235 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="7356-7356"];
m6_3237 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="7356-7356"];
m6_3245 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="7370-7370"];
m6_3247 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="7370-7370"];
m6_3711 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="8534-8534"];
m6_3713 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="8534-8534"];
m6_3719 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="8549-8549"];
m6_3721 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="8549-8549"];
m6_4105 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="9528-9528"];
m6_4107 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="9528-9528"];
m6_1613 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3435-3435"];
m6_1614 [cluster="lambda expression", file="XmlNodeConverter.cs", label="o.ReferenceLoopHandlingErrorProperty = o", span="3436-3436"];
m6_1616 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3433-3439"];
m6_2030 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="4436-4440"];
m6_2032 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="4436-4440"];
m6_3084 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="7053-7059"];
m6_3086 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="7053-7059"];
m6_1367 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="2887-2891"];
m6_1505 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3182-3182"];
m6_1612 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3433-3439"];
m6_1843 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3945-3945"];
m6_1851 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="3953-3953"];
m6_2429 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="5455-5470"];
m6_2755 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="6175-6175"];
m6_3142 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="7177-7185"];
m6_3149 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="7191-7197"];
m6_3251 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="7382-7382"];
m6_1853 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3953-3953"];
m6_1507 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3182-3182"];
m6_3253 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="7382-7382"];
m6_2757 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="6175-6175"];
m6_2431 [cluster="lambda expression", file="XmlNodeConverter.cs", label="reference.Add(''$ref'', 1)", span="5460-5460"];
m6_2432 [cluster="lambda expression", file="XmlNodeConverter.cs", label="reference.Add(''$id'', 1)", span="5461-5461"];
m6_2436 [cluster="lambda expression", file="XmlNodeConverter.cs", label="child.Add(''Father'', reference)", span="5466-5466"];
m6_2434 [cluster="lambda expression", file="XmlNodeConverter.cs", label="child.Add(''_id'', 2)", span="5464-5464"];
m6_2435 [cluster="lambda expression", file="XmlNodeConverter.cs", label="child.Add(''Name'', ''Isabell'')", span="5465-5465"];
m6_1844 [cluster="lambda expression", file="XmlNodeConverter.cs", label="JsonConvert.PopulateObject(json, new Person())", span="3945-3945"];
m6_3373 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="7619-7623"];
m6_3388 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="7644-7648"];
m6_3403 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="7667-7671"];
m6_1845 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="3945-3945"];
m6_1995 [cluster="lambda expression", file="XmlNodeConverter.cs", label="x.Id == id", span="4337-4337"];
m6_1996 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="4337-4337"];
m6_375 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="manager.PushScope()", span="1095-1095"];
m6_914 [cluster="DataContractJsonSerializer.cstr", file="XmlNodeConverter.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m6_3594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="8192-8192"];
m6_3600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="8206-8206"];
m6_3599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="XmlNodeConverter.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.DefaultValue })", span="8203-8203"];
m6_3597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="XmlNodeConverter.cs", label="json = JsonConvert.SerializeObject(d)", span="8197-8197"];
m6_3596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="XmlNodeConverter.cs", label="IList<double> d = new List<double> { 1.1, double.NaN, double.PositiveInfinity }", span="8195-8195"];
m6_3598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="XmlNodeConverter.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="8200-8200"];
m6_3595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="XmlNodeConverter.cs", label="string json", span="8194-8194"];
m6_3601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="8192-8192"];
m6_3959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="9169-9169"];
m6_3964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="XmlNodeConverter.cs", label="Assert.AreEqual(originalUri, uriWithPlus2.OriginalString)", span="9179-9179"];
m6_3960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="XmlNodeConverter.cs", label="string originalUri = ''https://test.com?m=a%2bb''", span="9171-9171"];
m6_3963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="XmlNodeConverter.cs", label="Uri uriWithPlus2 = JsonConvert.DeserializeObject<Uri>(jsonWithPlus)", span="9177-9177"];
m6_3962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="XmlNodeConverter.cs", label="string jsonWithPlus = JsonConvert.SerializeObject(uriWithPlus)", span="9175-9175"];
m6_3961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="XmlNodeConverter.cs", label="Uri uriWithPlus = new Uri(originalUri)", span="9173-9173"];
m6_3965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="9169-9169"];
m6_3716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8547-8547"];
m6_3717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}''), ''Cannot deserialize readonly or fixed size dictionary: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyDictionary`2[System.Int32,System.Int32]. Path '1', line 1, position 5.'')", span="8549-8549"];
m6_3718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8547-8547"];
m6_123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="XmlNodeConverter.cs", label="Assert.AreEqual(foo1.Bars.Count, foo2.Bars.Count)", span="373-373"];
m6_124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="XmlNodeConverter.cs", label="Assert.AreEqual(foo1.Bars[0], foo2.Bars[0])", span="374-374"];
m6_235 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Element.Add(wrapper.WrappedNode)", span="830-830"];
m6_430 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IXmlDocumentType documentType = (IXmlDocumentType)node", span="1194-1194"];
m6_29 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="185-185"];
m6_30 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="XmlNodeConverter.cs", label="return new MainClass\r\n                {\r\n                    ID = 567,\r\n                    Name = ''XYZ'',\r\n                    Subclass = InstantiateSubclass()\r\n                };", span="187-192"];
m6_31 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="185-185"];
m6_1872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="4000-4000"];
m6_1873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'')", span="4002-4013"];
m6_1874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="4000-4000"];
m6_121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{''''Bars'''':[''''A'''',''''B'''',''''C'''']}'', json)", span="370-370"];
m6_122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="XmlNodeConverter.cs", label="FooRequired foo2 = JsonConvert.DeserializeObject<FooRequired>(json)", span="372-372"];
m6_343 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i++", span="1026-1026"];
m6_346 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="bool writeArray", span="1046-1046"];
m6_345 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="List<IXmlNode> groupedNodes = nodeNameGroup.Value", span="1045-1045"];
m6_344 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=nodesGroupedByName, span="1043-1043"];
m6_347 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="groupedNodes.Count == 1", span="1048-1048"];
m6_1345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2850-2850"];
m6_1349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultConverter'''': ''''1970-01-01T00:00:00Z'''',\r\n  ''''MemberConverter'''': ''''1970-01-01T00:00:00Z''''\r\n}'', json)", span="2862-2865"];
m6_1348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2860-2860"];
m6_1347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="XmlNodeConverter.cs", label="MemberConverterClass c = new MemberConverterClass\r\n            {\r\n                DefaultConverter = date,\r\n                MemberConverter = date\r\n            }", span="2854-2858"];
m6_1346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="XmlNodeConverter.cs", label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="2852-2852"];
m6_1350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2850-2850"];
m6_351 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeNode(writer, groupedNodes[0], manager, writePropertyName)", span="1059-1059"];
m6_353 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="1065-1065"];
m6_354 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(elementNames)", span="1066-1066"];
m6_355 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartArray()", span="1068-1068"];
m6_352 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="string elementNames = nodeNameGroup.Key", span="1063-1063"];
m6_356 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="int i = 0", span="1070-1070"];
m6_1949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="4162-4162"];
m6_1957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, searchResults.Count)", span="4237-4237"];
m6_1958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="4238-4238"];
m6_1959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="4239-4239"];
m6_1953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="XmlNodeConverter.cs", label="IList<SearchResult> searchResults = new List<SearchResult>()", span="4222-4222"];
m6_1954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="XmlNodeConverter.cs", label=results, span="4223-4223"];
m6_1952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="XmlNodeConverter.cs", label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="4219-4219"];
m6_1956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="XmlNodeConverter.cs", label="searchResults.Add(searchResult)", span="4226-4226"];
m6_1955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="XmlNodeConverter.cs", label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="4225-4225"];
m6_1951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="XmlNodeConverter.cs", label="JObject googleSearch = JObject.Parse(googleSearchText)", span="4216-4216"];
m6_1950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="XmlNodeConverter.cs", label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="4164-4214"];
m6_1960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="4162-4162"];
m6_2269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="5080-5080"];
m6_2271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, kvPairs.Count)", span="5086-5086"];
m6_2272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="5087-5087"];
m6_2273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="5088-5088"];
m6_2274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="5089-5089"];
m6_2275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="5090-5090"];
m6_2270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="XmlNodeConverter.cs", label="List<KVPair<string, string>> kvPairs =\r\n                JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n                    ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="5082-5084"];
m6_2276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="5080-5080"];
m6_3574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="8126-8126"];
m6_3576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="8129-8129"];
m6_3575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="XmlNodeConverter.cs", label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="8128-8128"];
m6_3577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="8126-8126"];
m6_230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="XmlNodeConverter.cs", label="var e1 = JsonConvert.DeserializeObject<EnumA>('''ValueA''')", span="570-570"];
m6_1497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="3176-3176"];
m6_1500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="XmlNodeConverter.cs", label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="3180-3180"];
m6_1501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass)); }, @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'')", span="3182-3182"];
m6_1498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="XmlNodeConverter.cs", label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="3178-3178"];
m6_1499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="XmlNodeConverter.cs", label="testClass.co = new Co()", span="3179-3179"];
m6_1502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="3176-3176"];
m6_813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1727-1727"];
m6_827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="var deserialize = jsonSerializer.Deserialize(new StreamReader(ms), typeof(Dictionary<DictionaryKeyCast, int>))", span="1746-1746"];
m6_823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="jsonSerializer.Serialize(streamWriter, dictStore)", span="1740-1740"];
m6_819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="var settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="1735-1735"];
m6_814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="var dictStore = new Dictionary<DictionaryKeyCast, int>()", span="1730-1730"];
m6_820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="var jsonSerializer = JsonSerializer.Create(settings)", span="1736-1736"];
m6_821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="var ms = new MemoryStream()", span="1737-1737"];
m6_826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="var stopWatch = Stopwatch.StartNew()", span="1745-1745"];
m6_828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="stopWatch.Stop()", span="1747-1747"];
m6_822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="var streamWriter = new StreamWriter(ms)", span="1739-1739"];
m6_824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="streamWriter.Flush()", span="1741-1741"];
m6_816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="i < 800", span="1731-1731"];
m6_817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="dictStore.Add(new DictionaryKeyCast(i.ToString(CultureInfo.InvariantCulture), i), i)", span="1733-1733"];
m6_815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="var i = 0", span="1731-1731"];
m6_825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="1743-1743"];
m6_818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="i++", span="1731-1731"];
m6_829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1727-1727"];
m6_2118 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m6_3919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="9094-9094"];
m6_3920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="XmlNodeConverter.cs", label="return (short)Value;", span="9096-9096"];
m6_3921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="9094-9094"];
m6_2063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4592-4592"];
m6_2066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="XmlNodeConverter.cs", label="C1 = c1", span="4594-4594"];
m6_2067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4592-4592"];
m6_756 [cluster="System.Text.RegularExpressions.Regex.ToString()", file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlNodeWrapper", span=""];
m6_3242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7367-7367"];
m6_3243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject<double>(null); },\r\n                new[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7369-7375"];
m6_3244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7367-7367"];
m6_33 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="197-197"];
m6_1935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="4127-4127"];
m6_1940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="4135-4138"];
m6_1936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="XmlNodeConverter.cs", label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="4129-4129"];
m6_1939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4133-4133"];
m6_1937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="XmlNodeConverter.cs", label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="4130-4130"];
m6_1938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="XmlNodeConverter.cs", label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="4131-4131"];
m6_1941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="4127-4127"];
m6_1926 [cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31"];
m6_2223 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0"];
m6_469 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="document = new XDocumentWrapper(d)", span="1252-1252"];
m6_471 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="typeof(XmlNode).IsAssignableFrom(objectType)", span="1257-1257"];
m6_473 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XmlDocuments'');", span="1260-1260"];
m6_470 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="rootNode = document", span="1253-1253"];
m6_472 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="objectType != typeof(XmlDocument)", span="1259-1259"];
m6_474 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XmlDocument d = new XmlDocument()", span="1262-1262"];
m6_1248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2681-2681"];
m6_1250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''1'', json)", span="2684-2684"];
m6_1252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="2687-2687"];
m6_1249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="2683-2683"];
m6_1251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="XmlNodeConverter.cs", label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="2686-2686"];
m6_1253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2681-2681"];
m6_3204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7312-7312"];
m6_3205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="object v = JsonConvert.DeserializeObject<double?>('''')", span="7314-7314"];
m6_3207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="v = JsonConvert.DeserializeObject<char?>('''')", span="7317-7317"];
m6_3209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="v = JsonConvert.DeserializeObject<int?>('''')", span="7320-7320"];
m6_3211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="7323-7323"];
m6_3213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="7326-7326"];
m6_3215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="7329-7329"];
m6_3217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="7332-7332"];
m6_3206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="Assert.IsNull(v)", span="7315-7315"];
m6_3208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="Assert.IsNull(v)", span="7318-7318"];
m6_3210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="Assert.IsNull(v)", span="7321-7321"];
m6_3212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="Assert.IsNull(v)", span="7324-7324"];
m6_3214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="Assert.IsNull(v)", span="7327-7327"];
m6_3216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="Assert.IsNull(v)", span="7330-7330"];
m6_3218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="Assert.IsNull(v)", span="7333-7333"];
m6_3219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7312-7312"];
m6_248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", span="578-578"];
m6_1901 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32"];
m6_3761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8664-8664"];
m6_3763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="XmlNodeConverter.cs", label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="8674-8674"];
m6_3764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="XmlNodeConverter.cs", label="Assert.IsNull(c2.MyNullableBool)", span="8675-8675"];
m6_3765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="XmlNodeConverter.cs", label="Assert.IsNull(c2.MyNullableInteger)", span="8676-8676"];
m6_3766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="XmlNodeConverter.cs", label="Assert.IsNull(c2.MyNullableDateTime)", span="8677-8677"];
m6_3767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="XmlNodeConverter.cs", label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="8678-8678"];
m6_3768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="XmlNodeConverter.cs", label="Assert.IsNull(c2.MyNullableDecimal)", span="8679-8679"];
m6_3762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="8666-8672"];
m6_3769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8664-8664"];
m6_3125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="7153-7153"];
m6_3128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="7159-7159"];
m6_3127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(widget)", span="7157-7157"];
m6_3126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="XmlNodeConverter.cs", label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="7155-7155"];
m6_3129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="7153-7153"];
m6_1216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2636-2636"];
m6_1222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''[3,2,1]'', json)", span="2644-2644"];
m6_1221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(s)", span="2643-2643"];
m6_1217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="XmlNodeConverter.cs", label="Stack<object> s = new Stack<object>()", span="2638-2638"];
m6_1220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="XmlNodeConverter.cs", label="s.Push(3)", span="2641-2641"];
m6_1218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="XmlNodeConverter.cs", label="s.Push(1)", span="2639-2639"];
m6_1219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="XmlNodeConverter.cs", label="s.Push(2)", span="2640-2640"];
m6_1223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2636-2636"];
m6_261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="627-627"];
m6_262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="XmlNodeConverter.cs", label="RequiredPropertyConstructorTestClass c1 = new RequiredPropertyConstructorTestClass(null)", span="629-629"];
m6_263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="631-633"];
m6_264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="XmlNodeConverter.cs", label="RequiredPropertyConstructorTestClass c2 = new RequiredPropertyConstructorTestClass(''Name!'')", span="635-635"];
m6_265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c2)", span="637-637"];
m6_266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="639-639"];
m6_1091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2385-2385"];
m6_1100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(expected, result)", span="2406-2406"];
m6_1099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="XmlNodeConverter.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2405-2405"];
m6_1098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="XmlNodeConverter.cs", label="string expected = sr.ReadToEnd()", span="2403-2403"];
m6_1092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="XmlNodeConverter.cs", label="List<DateTime> testDates = new List<DateTime>\r\n            {\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n            }", span="2387-2395"];
m6_1097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="XmlNodeConverter.cs", label="StreamReader sr = new StreamReader(ms)", span="2401-2401"];
m6_1093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="XmlNodeConverter.cs", label="MemoryStream ms = new MemoryStream()", span="2397-2397"];
m6_1095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="XmlNodeConverter.cs", label="s.WriteObject(ms, testDates)", span="2399-2399"];
m6_1096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="XmlNodeConverter.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="2400-2400"];
m6_1094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="XmlNodeConverter.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="2398-2398"];
m6_1101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2385-2385"];
m6_1442 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29"];
m6_1649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3552-3552"];
m6_1650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="XmlNodeConverter.cs", label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="3554-3554"];
m6_1651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3552-3552"];
m6_2991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6841-6841"];
m6_2993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="6845-6845"];
m6_3004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Test'', newObject.Name)", span="6864-6864"];
m6_2992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="6843-6843"];
m6_2994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="6846-6846"];
m6_2998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="serializer.Serialize(jsonWriter, test)", span="6852-6852"];
m6_3003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="TestObject newObject = (TestObject)serializer.Deserialize(jsonReader)", span="6862-6862"];
m6_3005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="6865-6865"];
m6_2995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="byte[] objectBytes", span="6848-6848"];
m6_2997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="JsonWriter jsonWriter = new JsonTextWriter(new StreamWriter(stream))", span="6850-6850"];
m6_2999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="jsonWriter.Flush()", span="6853-6853"];
m6_3002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="JsonReader jsonReader = new JsonTextReader(new StreamReader(stream))", span="6859-6859"];
m6_2996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="MemoryStream stream = new MemoryStream()", span="6849-6849"];
m6_3000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="objectBytes = stream.ToArray()", span="6855-6855"];
m6_3001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="MemoryStream stream = new MemoryStream(objectBytes)", span="6858-6858"];
m6_3006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6841-6841"];
m6_1077 [cluster="Unk.ReadObject", file="XmlNodeConverter.cs", label="Entry Unk.ReadObject", span=""];
m6_694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1504-1504"];
m6_695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''stringValue'', _stringValue)", span="1506-1506"];
m6_696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''intValue'', _intValue)", span="1507-1507"];
m6_697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="info.AddValue(''person1'', _person1, typeof(PersonReference))", span="1508-1508"];
m6_2356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="5281-5281"];
m6_1504 [cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27"];
m6_2107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4730-4730"];
m6_2108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="XmlNodeConverter.cs", label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="4732-4732"];
m6_2109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4730-4730"];
m6_1012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2186-2186"];
m6_1015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="2192-2192"];
m6_1014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="XmlNodeConverter.cs", label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="2190-2190"];
m6_1013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="XmlNodeConverter.cs", label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="2188-2188"];
m6_1016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2186-2186"];
m6_49 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="return attribute;", span="110-110"];
m6_2011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="4311-4311"];
m6_3358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7614-7614"];
m6_3364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="XmlNodeConverter.cs", label="Assert.AreEqual(4, errors.Count)", span="7631-7631"];
m6_3360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="XmlNodeConverter.cs", label="IList<string> errors = new List<string>()", span="7617-7617"];
m6_3363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(o)", span="7630-7630"];
m6_3365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="XmlNodeConverter.cs", label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' not found in JSON. Path ''''))", span="7632-7632"];
m6_3359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="XmlNodeConverter.cs", label="string json = ''{}''", span="7616-7616"];
m6_3361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="XmlNodeConverter.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7619-7623"];
m6_3366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="XmlNodeConverter.cs", label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' not found in JSON. Path ''''))", span="7633-7633"];
m6_3367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="XmlNodeConverter.cs", label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AllowNullProperty' not found in JSON. Path ''''))", span="7634-7634"];
m6_3368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="XmlNodeConverter.cs", label="Assert.IsTrue(errors[3].StartsWith(''Required property 'AlwaysProperty' not found in JSON. Path ''''))", span="7635-7635"];
m6_3362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="XmlNodeConverter.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7625-7628"];
m6_3369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7614-7614"];
m6_3876 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", span="125-125"];
m6_3029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6915-6915"];
m6_3037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="XmlNodeConverter.cs", label="Assert.AreEqual(-1, c2.x)", span="6946-6946"];
m6_3038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="XmlNodeConverter.cs", label="Assert.AreEqual(-2, StaticTestClass.y)", span="6947-6947"];
m6_3039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="XmlNodeConverter.cs", label="Assert.AreEqual(-3, StaticTestClass.z)", span="6948-6948"];
m6_3036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="XmlNodeConverter.cs", label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6936-6944"];
m6_3030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="XmlNodeConverter.cs", label="ReflectionContractResolver contractResolver = new ReflectionContractResolver()", span="6917-6917"];
m6_3035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6930-6934"];
m6_3034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6925-6928"];
m6_3031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="XmlNodeConverter.cs", label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6919-6922"];
m6_3033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="XmlNodeConverter.cs", label="StaticTestClass.z = 3", span="6924-6924"];
m6_3032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="XmlNodeConverter.cs", label="StaticTestClass.y = 2", span="6923-6923"];
m6_3040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6915-6915"];
m6_4120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", span="9559-9559"];
m6_3196 [cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", span="28-28"];
m6_3308 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="30-30"];
m6_3951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", span="9140-9140"];
m6_1399 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="912-912"];
m6_1522 [cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29"];
m6_869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="1845-1845"];
m6_1317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2796-2796"];
m6_1321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2805-2805"];
m6_1323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.DefaultConverter)", span="2812-2812"];
m6_1324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.MemberConverter)", span="2813-2813"];
m6_1320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n            })", span="2801-2804"];
m6_1322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="XmlNodeConverter.cs", label="var m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            })", span="2807-2810"];
m6_1319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="XmlNodeConverter.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2799-2799"];
m6_1318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="XmlNodeConverter.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2798-2798"];
m6_1325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2796-2796"];
m6_3744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8610-8610"];
m6_3747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="XmlNodeConverter.cs", label="Assert.AreEqual(float.NaN, floats[0])", span="8619-8619"];
m6_3748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="XmlNodeConverter.cs", label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="8620-8620"];
m6_3749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="XmlNodeConverter.cs", label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="8621-8621"];
m6_3751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="XmlNodeConverter.cs", label="Assert.AreEqual(float.NaN, doubles[0])", span="8624-8624"];
m6_3752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="XmlNodeConverter.cs", label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="8625-8625"];
m6_3753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="XmlNodeConverter.cs", label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="8626-8626"];
m6_3746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="XmlNodeConverter.cs", label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="8618-8618"];
m6_3750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="XmlNodeConverter.cs", label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="8623-8623"];
m6_3745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="XmlNodeConverter.cs", label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="8612-8616"];
m6_3754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8610-8610"];
m6_2133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4768-4768"];
m6_2134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="XmlNodeConverter.cs", label="return _innerDictionary.Remove(key);", span="4770-4770"];
m6_2135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4768-4768"];
m6_468 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XDocument d = new XDocument()", span="1251-1251"];
m6_2739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="6145-6145"];
m6_2742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="6151-6153"];
m6_2741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="6149-6149"];
m6_2740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="XmlNodeConverter.cs", label="ComplexItem i = new ComplexItem()", span="6147-6147"];
m6_2743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="6145-6145"];
m6_1797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3869-3869"];
m6_1799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { JsonConvert.DeserializeObject<double>(json); },\r\n                @''Unexpected character encountered while parsing value: [. Path '', line 1, position 1.'')", span="3873-3875"];
m6_1798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="XmlNodeConverter.cs", label="string json = @''[]''", span="3871-3871"];
m6_1800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3869-3869"];
m6_3274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7432-7432"];
m6_3276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7442-7442"];
m6_3277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7443-7443"];
m6_3278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="7444-7444"];
m6_3279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="7445-7445"];
m6_3281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, c2.DateTimeField)", span="7451-7451"];
m6_3282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="7452-7452"];
m6_3283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="7453-7453"];
m6_3284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="7454-7454"];
m6_3275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="XmlNodeConverter.cs", label="NullableDateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7434-7440"];
m6_3280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="XmlNodeConverter.cs", label="NullableDateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="7447-7449"];
m6_3285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7432-7432"];
m6_837 [cluster="System.IO.StreamWriter.Flush()", file="XmlNodeConverter.cs", label="Entry System.IO.StreamWriter.Flush()", span="0-0"];
m6_362 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_371 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeGroupedNodes(writer, node, manager, writePropertyName)", span="1086-1086"];
m6_369 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Document", span="1084-1084"];
m6_370 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.DocumentFragment", span="1085-1085"];
m6_368 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.NodeType", span="1082-1082"];
m6_367 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m6_372 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Element", span="1088-1088"];
m6_1025 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27"];
m6_2084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="4629-4629"];
m6_4095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9520-9520"];
m6_4096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.SerializeObject(new ErroringTestClass()), ''Error creating 'Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+ErroringJsonConverter'.'')", span="9522-9522"];
m6_4097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9520-9520"];
m6_152 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="503-503"];
m6_520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, serializer.PreserveReferencesHandling)", span="1244-1244"];
m6_3171 [cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29"];
m6_1297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2763-2763"];
m6_1303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="XmlNodeConverter.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2773-2773"];
m6_1304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="XmlNodeConverter.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2774-2774"];
m6_1301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2769-2769"];
m6_1298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="XmlNodeConverter.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2765-2765"];
m6_1302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="XmlNodeConverter.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2771-2771"];
m6_1300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(m1)", span="2768-2768"];
m6_1299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="XmlNodeConverter.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2766-2766"];
m6_1305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2763-2763"];
m6_3943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="9134-9134"];
m6_3944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="XmlNodeConverter.cs", label="throw new InvalidCastException();", span="9136-9136"];
m6_3945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="9134-9134"];
m6_2111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4735-4735"];
m6_2112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="XmlNodeConverter.cs", label="return _innerDictionary.ContainsKey(key);", span="4737-4737"];
m6_2113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4735-4735"];
m6_540 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="element.AppendChild(document.CreateTextNode(ConvertTokenToXmlValue(reader)))", span="1388-1388"];
m6_3116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="7113-7113"];
m6_3322 [cluster="System.Enum.Parse(System.Type, string)", file="XmlNodeConverter.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m6_538 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="element.SetAttributeNode(attribute)", span="1379-1379"];
m6_3117 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1722-1722"];
m6_1776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3837-3837"];
m6_1778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3841-3843"];
m6_1777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="XmlNodeConverter.cs", label="string json = @''[]''", span="3839-3839"];
m6_1779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3837-3837"];
m6_3374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7639-7639"];
m6_3380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, errors.Count)", span="7656-7656"];
m6_3376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="XmlNodeConverter.cs", label="IList<string> errors = new List<string>()", span="7642-7642"];
m6_3379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(o)", span="7655-7655"];
m6_3381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="XmlNodeConverter.cs", label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' expects a value but got null. Path ''''))", span="7657-7657"];
m6_3375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="XmlNodeConverter.cs", label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="7641-7641"];
m6_3377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="XmlNodeConverter.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7644-7648"];
m6_3382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="XmlNodeConverter.cs", label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' expects a value but got null. Path ''''))", span="7658-7658"];
m6_3383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="XmlNodeConverter.cs", label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AlwaysProperty' expects a value but got null. Path ''''))", span="7659-7659"];
m6_3378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="XmlNodeConverter.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7650-7653"];
m6_3384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7639-7639"];
m6_377 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/''", span="1099-1099"];
m6_378 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="string namespacePrefix = (attribute.LocalName != ''xmlns'')\r\n                                    ? attribute.LocalName\r\n                                    : string.Empty", span="1101-1103"];
m6_380 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="manager.AddNamespace(namespacePrefix, namespaceUri)", span="1106-1106"];
m6_379 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="string namespaceUri = attribute.Value", span="1104-1104"];
m6_381 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="1110-1110"];
m6_2538 [cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="XmlNodeConverter.cs", label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0"];
m6_495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1207-1207"];
m6_523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1249-1249"];
m6_525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(referenceResolver, serializer.ReferenceResolver)", span="1251-1251"];
m6_526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1253-1253"];
m6_527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializer.StringEscapeHandling)", span="1254-1254"];
m6_528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1256-1256"];
m6_529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.TraceWriter = traceWriter", span="1257-1257"];
m6_531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1261-1261"];
m6_532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializer.TypeNameAssemblyFormat)", span="1262-1262"];
m6_533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", color=green, community=0, file="XmlNodeConverter.cs", label="0: serializer.TypeNameHandling = TypeNameHandling.All", span="1265-1265"];
m6_534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(TypeNameHandling.All, serializer.TypeNameHandling)", span="1266-1266"];
m6_537 [cluster="System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", span="0-0"];
m6_539 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="XmlNodeConverter.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m6_524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="serializer.ReferenceResolver = referenceResolver", span="1250-1250"];
m6_535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="1175-1175"];
m6_530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(traceWriter, serializer.TraceWriter)", span="1258-1258"];
m6_1103 [cluster="System.IO.StreamReader.ReadToEnd()", file="XmlNodeConverter.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m6_3471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7867-7867"];
m6_3474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="XmlNodeConverter.cs", label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="7872-7872"];
m6_3475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="XmlNodeConverter.cs", label="Assert.AreEqual(0, objDeserialized.Age)", span="7873-7873"];
m6_3472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="XmlNodeConverter.cs", label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="7869-7869"];
m6_3473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="XmlNodeConverter.cs", label="var objDeserialized = SerializeAndDeserialize<PersonSerializable>(testObj)", span="7870-7870"];
m6_3476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7867-7867"];
m6_1764 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="36-36"];
m6_1975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4275-4275"];
m6_1977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="XmlNodeConverter.cs", label="List = new List<string>\r\n                {\r\n                    ''existing''\r\n                }", span="4281-4284"];
m6_1976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="XmlNodeConverter.cs", label="Dictionary = new Dictionary<string, string>\r\n                {\r\n                    { ''existing'', ''yup'' }\r\n                }", span="4277-4280"];
m6_1978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4275-4275"];
m6_2729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="6120-6120"];
m6_2734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="6139-6139"];
m6_2735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="6140-6140"];
m6_2736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="6141-6141"];
m6_2733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="XmlNodeConverter.cs", label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="6137-6137"];
m6_2731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6127-6127"];
m6_2732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="6129-6135"];
m6_2730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="XmlNodeConverter.cs", label="EnumerableClass c = new EnumerableClass\r\n            {\r\n                Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n            }", span="6122-6125"];
m6_2737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="6120-6120"];
m6_3132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="7163-7163"];
m6_3135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="7169-7169"];
m6_3136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="7170-7170"];
m6_3137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="7171-7171"];
m6_3134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="XmlNodeConverter.cs", label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="7167-7167"];
m6_3133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="XmlNodeConverter.cs", label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="7165-7165"];
m6_3138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="7163-7163"];
m6_3103 [cluster="Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", span="27-27"];
m6_2976 [cluster="System.IO.StringWriter.ToString()", file="XmlNodeConverter.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m6_1308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2778-2778"];
m6_1314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="XmlNodeConverter.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2791-2791"];
m6_1315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="XmlNodeConverter.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2792-2792"];
m6_1312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2787-2787"];
m6_1309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="XmlNodeConverter.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2780-2780"];
m6_1313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="XmlNodeConverter.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2789-2789"];
m6_1311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="2783-2786"];
m6_1310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="XmlNodeConverter.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2781-2781"];
m6_1316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2778-2778"];
m6_3197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7300-7300"];
m6_3202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="7308-7308"];
m6_3199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="XmlNodeConverter.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="7303-7303"];
m6_3201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="XmlNodeConverter.cs", label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="7306-7306"];
m6_3200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="XmlNodeConverter.cs", label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="7305-7305"];
m6_3198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="XmlNodeConverter.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="7302-7302"];
m6_3203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7300-7300"];
m6_2479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="5538-5538"];
m6_918 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="114-114"];
m6_64 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", span="265-265"];
m6_870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="2002-2002"];
m6_909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="XmlNodeConverter.cs", label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="2019-2019"];
m6_906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="XmlNodeConverter.cs", label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="2010-2010"];
m6_908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="XmlNodeConverter.cs", label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="2013-2013"];
m6_910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="XmlNodeConverter.cs", label=dataContractJson, span="2020-2020"];
m6_902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="XmlNodeConverter.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="2005-2005"];
m6_907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="XmlNodeConverter.cs", label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="2012-2012"];
m6_905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="XmlNodeConverter.cs", label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="2009-2009"];
m6_911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="XmlNodeConverter.cs", label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="2022-2022"];
m6_912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="XmlNodeConverter.cs", label="return jsonNetJson.ToString();", span="2025-2025"];
m6_901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="XmlNodeConverter.cs", label="MemoryStream ms = new MemoryStream()", span="2004-2004"];
m6_903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="XmlNodeConverter.cs", label="s.WriteObject(ms, o)", span="2006-2006"];
m6_904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="XmlNodeConverter.cs", label="var data = ms.ToArray()", span="2008-2008"];
m6_913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="2002-2002"];
m6_4023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9318-9318"];
m6_4030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9339-9339"];
m6_4024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="XmlNodeConverter.cs", label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9320-9320"];
m6_4029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="XmlNodeConverter.cs", label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9337-9337"];
m6_4025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="XmlNodeConverter.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9321-9321"];
m6_4027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9328-9331"];
m6_4026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="XmlNodeConverter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9322-9326"];
m6_4028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9333-9335"];
m6_4031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9318-9318"];
m6_3389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7663-7663"];
m6_3394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, errors.Count)", span="7684-7684"];
m6_3395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="7685-7685"];
m6_3396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="7686-7686"];
m6_3397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="7687-7687"];
m6_3390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="XmlNodeConverter.cs", label="IList<string> errors = new List<string>()", span="7665-7665"];
m6_3393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="7679-7682"];
m6_3391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="XmlNodeConverter.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7667-7671"];
m6_3392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n            {\r\n                Error = error,\r\n                Formatting = Formatting.Indented\r\n            })", span="7673-7677"];
m6_3398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7663-7663"];
m6_1160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2521-2521"];
m6_1163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2525-2525"];
m6_1164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="2527-2527"];
m6_1165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2528-2528"];
m6_1166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="2529-2529"];
m6_1167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="2530-2530"];
m6_1168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="2531-2531"];
m6_1162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="XmlNodeConverter.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2524-2524"];
m6_1161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="XmlNodeConverter.cs", label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="2523-2523"];
m6_1169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2521-2521"];
m6_2524 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="799-799"];
m6_1371 [cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30"];
m6_841 [cluster="System.Diagnostics.Stopwatch.Stop()", file="XmlNodeConverter.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m6_3640 [cluster="System.Tuple.Create<T1>(T1)", file="XmlNodeConverter.cs", label="Entry System.Tuple.Create<T1>(T1)", span="0-0"];
m6_382 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1111-1111"];
m6_175 [cluster="Unk.Get", file="XmlNodeConverter.cs", label="Entry Unk.Get", span=""];
m6_2183 [cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0"];
m6_2221 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0"];
m6_1116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2441-2441"];
m6_1123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="XmlNodeConverter.cs", label="CollectionAssert.AreEqual(values, newValues)", span="2453-2453"];
m6_1121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="2449-2449"];
m6_1117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="XmlNodeConverter.cs", label="Dictionary<int, int> values = new Dictionary<int, int>()", span="2443-2443"];
m6_1122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="XmlNodeConverter.cs", label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="2451-2451"];
m6_1120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(values)", span="2447-2447"];
m6_1118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="XmlNodeConverter.cs", label="values.Add(-5, 6)", span="2444-2444"];
m6_1119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="XmlNodeConverter.cs", label="values.Add(int.MinValue, int.MaxValue)", span="2445-2445"];
m6_1124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2441-2441"];
m6_2509 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m6_3506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="7955-7955"];
m6_3854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8969-8969"];
m6_3858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''''''Console Writer'''''', text1)", span="8985-8985"];
m6_3860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredWriter.PrintTest())", span="8988-8988"];
m6_3866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredObject.First().Key.PrintTest())", span="9003-9003"];
m6_3872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredDict2.First().Value.PrintTest())", span="9018-9018"];
m6_3857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="var text1 = JsonConvert.SerializeObject(consoleWriter, Formatting.Indented, options)", span="8984-8984"];
m6_3859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="var restoredWriter = JsonConvert.DeserializeObject<IMyInterface>(text1, options)", span="8987-8987"];
m6_3861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="var dict2 = new Dictionary<IMyInterface, string>()", span="8994-8994"];
m6_3865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="var restoredObject = JsonConvert.DeserializeObject<Dictionary<IMyInterface, string>>(text2, options)", span="9002-9002"];
m6_3867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="var dict3 = new Dictionary<string, IMyInterface>()", span="9009-9009"];
m6_3871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="var restoredDict2 = JsonConvert.DeserializeObject<Dictionary<string, IMyInterface>>(text3, options)", span="9017-9017"];
m6_3855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="var consoleWriter = new ConsoleWriter()", span="8971-8971"];
m6_3856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="var options = new JsonSerializerSettings\r\n            {\r\n                Converters = new JsonConverterCollection { new TypeConverterJsonConverter() },\r\n                //TypeNameHandling = TypeNameHandling.All\r\n            }", span="8974-8978"];
m6_3862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="dict2.Add(consoleWriter, ''Console'')", span="8995-8995"];
m6_3863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="var text2 = JsonConvert.SerializeObject(dict2, Formatting.Indented, options)", span="8997-8997"];
m6_3864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Console Writer'''': ''''Console''''\r\n}'', text2)", span="8998-9000"];
m6_3868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="dict3.Add(''Console'', consoleWriter)", span="9010-9010"];
m6_3869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="var text3 = JsonConvert.SerializeObject(dict3, Formatting.Indented, options)", span="9012-9012"];
m6_3870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Console'''': ''''Console Writer''''\r\n}'', text3)", span="9013-9015"];
m6_3873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8969-8969"];
m6_164 [cluster="XProcessingInstruction.cstr", file="XmlNodeConverter.cs", label="Entry XProcessingInstruction.cstr", span=""];
m6_165 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="518-518"];
m6_166 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="return new XElementWrapper(new XElement(elementName));", span="520-520"];
m6_1961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4243-4243"];
m6_1972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="XmlNodeConverter.cs", label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="4267-4267"];
m6_1963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="XmlNodeConverter.cs", label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="4246-4246"];
m6_1971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="XmlNodeConverter.cs", label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="4266-4266"];
m6_1964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="XmlNodeConverter.cs", label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4248-4248"];
m6_1967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="XmlNodeConverter.cs", label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4251-4251"];
m6_1962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="XmlNodeConverter.cs", label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="4245-4245"];
m6_1965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="XmlNodeConverter.cs", label="wagePerson.Department = ''McDees''", span="4249-4249"];
m6_1966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="XmlNodeConverter.cs", label="wagePerson.HourlyWage = 12.50m", span="4250-4250"];
m6_1968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="XmlNodeConverter.cs", label="wagePerson.Name = ''Jim Bob''", span="4252-4252"];
m6_1969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="4254-4254"];
m6_1970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(\r\n                @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n                json)", span="4255-4264"];
m6_1973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4243-4243"];
m6_1536 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29"];
m6_1364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2885-2885"];
m6_1365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n                JsonConvert.SerializeObject(c);\r\n            }, ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'')", span="2887-2891"];
m6_1366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2885-2885"];
m6_2026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4432-4432"];
m6_2028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            }), ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'')", span="4436-4440"];
m6_2027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="XmlNodeConverter.cs", label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="4434-4434"];
m6_2029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4432-4432"];
m6_19 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="478-478"];
m6_1032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2295-2295"];
m6_1035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(4, o.Children().Count())", span="2309-2309"];
m6_1038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="2313-2313"];
m6_1034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="XmlNodeConverter.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="2308-2308"];
m6_1036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="XmlNodeConverter.cs", label="JToken torrentsArray = (JToken)o[''torrents'']", span="2311-2311"];
m6_1037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="XmlNodeConverter.cs", label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="2312-2312"];
m6_1033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="XmlNodeConverter.cs", label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="2297-2306"];
m6_1039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2295-2295"];
m6_3652 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="732-732"];
m6_421 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(declaration.Version)", span="1178-1178"];
m6_425 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(declaration.Standalone)", span="1185-1185"];
m6_426 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@standalone'')", span="1187-1187"];
m6_427 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(declaration.Standalone)", span="1188-1188"];
m6_422 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(declaration.Encoding)", span="1180-1180"];
m6_424 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(declaration.Encoding)", span="1183-1183"];
m6_423 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@encoding'')", span="1182-1182"];
m6_428 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="1191-1191"];
m6_2136 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m6_2713 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="9739-9739"];
m6_4182 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="XmlNodeConverter.cs", label="Value = val", span="9741-9741"];
m6_4183 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="9739-9739"];
m6_1579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3363-3363"];
m6_1583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3373-3373"];
m6_1586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3384-3384"];
m6_1582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3368-3371"];
m6_1584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="XmlNodeConverter.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3375-3378"];
m6_1585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="XmlNodeConverter.cs", label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3380-3383"];
m6_1580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="XmlNodeConverter.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="3365-3365"];
m6_1581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="XmlNodeConverter.cs", label="i.SuperProp = ''overrided superprop''", span="3366-3366"];
m6_1587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3363-3363"];
m6_3602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="8212-8212"];
m6_3606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="XmlNodeConverter.cs", label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="8223-8223"];
m6_3605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="XmlNodeConverter.cs", label="BigInteger nineQuindecillion = l[0]", span="8220-8220"];
m6_3604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="XmlNodeConverter.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="8218-8218"];
m6_3603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="XmlNodeConverter.cs", label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="8214-8216"];
m6_3607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="8212-8212"];
m6_2187 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0"];
m6_3254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7391-7391"];
m6_3257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="7397-7397"];
m6_3256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="XmlNodeConverter.cs", label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="7396-7396"];
m6_3255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="XmlNodeConverter.cs", label="string jsonIsoText =\r\n                @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="7393-7394"];
m6_3258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7391-7391"];
m6_72 [cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", span="193-193"];
m6_3399 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", span="28-28"];
m6_475 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="document = new XmlDocumentWrapper(d)", span="1263-1263"];
m6_476 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="rootNode = document", span="1264-1264"];
m6_477 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="document == null || rootNode == null", span="1268-1268"];
m6_478 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected type when converting XML: '' + objectType);", span="1269-1269"];
m6_479 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="reader.TokenType != JsonToken.StartObject", span="1271-1271"];
m6_480 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter can only convert JSON that begins with an object.'');", span="1272-1272"];
m6_481 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(DeserializeRootElementName)", span="1274-1274"];
m6_482 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="ReadElement(reader, document, rootNode, DeserializeRootElementName, manager)", span="1278-1278"];
m6_483 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="reader.Read()", span="1282-1282"];
m6_484 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="DeserializeNode(reader, document, manager, rootNode)", span="1283-1283"];
m6_485 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="objectType == typeof(XElement)", span="1287-1287"];
m6_487 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="element.Remove()", span="1290-1290"];
m6_488 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return element;", span="1292-1292"];
m6_489 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return document.WrappedNode;", span="1296-1296"];
m6_490 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1236-1236"];
m6_491 [cluster="System.Type.IsAssignableFrom(System.Type)", file="XmlNodeConverter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m6_493 [cluster="XDocument.cstr", file="XmlNodeConverter.cs", label="Entry XDocument.cstr", span=""];
m6_496 [cluster="Newtonsoft.Json.JsonReader.Read()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m6_498 [cluster="Unk.Remove", file="XmlNodeConverter.cs", label="Entry Unk.Remove", span=""];
m6_519 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1589-1589"];
m6_522 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1456-1456"];
m6_486 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XElement element = (XElement)document.DocumentElement.WrappedNode", span="1289-1289"];
m6_2697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="6069-6069"];
m6_2701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="6081-6081"];
m6_2700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="XmlNodeConverter.cs", label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="6079-6079"];
m6_2702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="XmlNodeConverter.cs", label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="6082-6082"];
m6_2699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="6077-6077"];
m6_2698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="XmlNodeConverter.cs", label="Response response = new Response\r\n            {\r\n                Name = ''Success'',\r\n                Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n            }", span="6071-6075"];
m6_2703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="6069-6069"];
m6_2744 [cluster="Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", span="9842-9842"];
m6_2670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5987-5987"];
m6_2671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="_name = info.GetString(''Name'')", span="5989-5989"];
m6_2672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5987-5987"];
m6_3668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8428-8428"];
m6_3669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="XmlNodeConverter.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8430-8434"];
m6_3670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n            })", span="8436-8439"];
m6_3671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="8441-8444"];
m6_3672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8428-8428"];
m6_1942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="4142-4142"];
m6_1944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="XmlNodeConverter.cs", label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="4152-4152"];
m6_1947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="XmlNodeConverter.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path '['Newtonsoft.Json.Tests.TestObjects.Person']'''))", span="4157-4157"];
m6_1945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="XmlNodeConverter.cs", label="Assert.Fail()", span="4153-4153"];
m6_1943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="XmlNodeConverter.cs", label="string json =\r\n                    @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="4146-4150"];
m6_1946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="XmlNodeConverter.cs", label=JsonSerializationException, span="4155-4155"];
m6_1948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="4142-4142"];
m6_2718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="6103-6103"];
m6_2720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Public Parameterized'', c.Constructor)", span="6106-6106"];
m6_2721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''value!'', c.Value)", span="6107-6107"];
m6_2719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="XmlNodeConverter.cs", label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="6105-6105"];
m6_2722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="6103-6103"];
m6_3913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="9084-9084"];
m6_3914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="XmlNodeConverter.cs", label="throw new InvalidCastException();", span="9086-9086"];
m6_3915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="9084-9084"];
m6_4102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9526-9526"];
m6_4103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => JsonConvert.DeserializeObject<string>(''020474068''), ''Input string '020474068' is not a valid number. Path '', line 1, position 9.'')", span="9528-9528"];
m6_4104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9526-9526"];
m6_1067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2349-2349"];
m6_1073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2359-2359"];
m6_1072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="2358-2358"];
m6_1070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="XmlNodeConverter.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2354-2354"];
m6_1071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="XmlNodeConverter.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2356-2356"];
m6_1068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="XmlNodeConverter.cs", label="string json = @''[''''PRE\u003cPOST'''']''", span="2351-2351"];
m6_1069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="XmlNodeConverter.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2353-2353"];
m6_1074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2349-2349"];
m6_1155 [cluster="object.Object()", file="XmlNodeConverter.cs", label="Entry object.Object()", span="0-0"];
m6_2189 [cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0"];
m6_2821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6420-6420"];
m6_2822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="XmlNodeConverter.cs", label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n            {\r\n                InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n                NewMember = ''NewMember!''\r\n            }", span="6422-6426"];
m6_2824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="6430-6433"];
m6_2823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="XmlNodeConverter.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6428-6428"];
m6_2825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6420-6420"];
m6_3016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6878-6878"];
m6_3024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="XmlNodeConverter.cs", label="Assert.AreEqual(-1, c2.x)", span="6909-6909"];
m6_3025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="XmlNodeConverter.cs", label="Assert.AreEqual(-2, StaticTestClass.y)", span="6910-6910"];
m6_3026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="XmlNodeConverter.cs", label="Assert.AreEqual(-3, StaticTestClass.z)", span="6911-6911"];
m6_3023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="XmlNodeConverter.cs", label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6899-6907"];
m6_3017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="XmlNodeConverter.cs", label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="6880-6880"];
m6_3022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6893-6897"];
m6_3021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6888-6891"];
m6_3018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="XmlNodeConverter.cs", label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6882-6885"];
m6_3020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="XmlNodeConverter.cs", label="StaticTestClass.z = 3", span="6887-6887"];
m6_3019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="XmlNodeConverter.cs", label="StaticTestClass.y = 2", span="6886-6886"];
m6_3027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6878-6878"];
m6_16 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="70-70"];
m6_131 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="460-460"];
m6_132 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="460-460"];
m6_854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1797-1797"];
m6_857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="1807-1807"];
m6_856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="XmlNodeConverter.cs", label="string result = JsonConvert.SerializeObject(cc)", span="1806-1806"];
m6_855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="XmlNodeConverter.cs", label="var cc = new ChildDataContractWithHidden\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!'',\r\n                NewMember = ''NewMember!''\r\n            }", span="1799-1804"];
m6_858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1797-1797"];
m6_963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="2107-2107"];
m6_975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dateValue, deserializedDate)", span="2127-2127"];
m6_964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="XmlNodeConverter.cs", label="DateTime dateValue = new DateTime(2010, 3, 30)", span="2109-2109"];
m6_974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="XmlNodeConverter.cs", label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="2125-2125"];
m6_967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="XmlNodeConverter.cs", label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="2113-2113"];
m6_965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="XmlNodeConverter.cs", label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="2110-2110"];
m6_966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="XmlNodeConverter.cs", label="testDictionary[''date''] = dateValue", span="2111-2111"];
m6_973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="XmlNodeConverter.cs", label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="2124-2124"];
m6_968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="XmlNodeConverter.cs", label="MemoryStream ms = new MemoryStream()", span="2116-2116"];
m6_970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="XmlNodeConverter.cs", label="serializer.WriteObject(ms, testDictionary)", span="2118-2118"];
m6_972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="XmlNodeConverter.cs", label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="2121-2121"];
m6_971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="XmlNodeConverter.cs", label="byte[] data = ms.ToArray()", span="2120-2120"];
m6_969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="XmlNodeConverter.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="2117-2117"];
m6_976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="2107-2107"];
m6_4069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyObservableObject.MyObservableObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyObservableObject.MyObservableObject()", span="9438-9438"];
m6_2122 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m6_992 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="320-320"];
m6_991 [cluster="Unk.AreNotSame", file="XmlNodeConverter.cs", label="Entry Unk.AreNotSame", span=""];
m6_2141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4778-4778"];
m6_2142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="XmlNodeConverter.cs", label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="4780-4780"];
m6_2143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4778-4778"];
m6_4070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9456-9456"];
m6_4075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Base'', clonedObject.BaseProperty)", span="9465-9465"];
m6_4076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Derived'', clonedObject.DerivedProperty)", span="9466-9466"];
m6_4074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="XmlNodeConverter.cs", label="var clonedObject = JsonConvert.DeserializeObject<DerivedConstructorType>(jsonCopy, serializerSettings)", span="9463-9463"];
m6_4072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="XmlNodeConverter.cs", label="var serializerSettings = new JsonSerializerSettings()", span="9460-9460"];
m6_4073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="XmlNodeConverter.cs", label="var jsonCopy = JsonConvert.SerializeObject(original, serializerSettings)", span="9461-9461"];
m6_4071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="XmlNodeConverter.cs", label="var original = new DerivedConstructorType(''Base'', ''Derived'')", span="9458-9458"];
m6_4077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9456-9456"];
m6_176 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="529-529"];
m6_1667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3597-3597"];
m6_1670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="3621-3621"];
m6_1671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, c.Dictionary.Count)", span="3622-3622"];
m6_1672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3623-3623"];
m6_1673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="3624-3624"];
m6_1674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(4, c.Collection.Count)", span="3625-3625"];
m6_1675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="3626-3626"];
m6_1676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="3627-3627"];
m6_1677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="3628-3628"];
m6_1678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="3629-3629"];
m6_1669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="XmlNodeConverter.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="3618-3619"];
m6_1679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(c.Random)", span="3630-3630"];
m6_1668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="3599-3616"];
m6_1680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3597-3597"];
m6_1384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2914-2914"];
m6_1388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="2926-2926"];
m6_1387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="XmlNodeConverter.cs", label="json = JsonConvert.SerializeObject(personRaw)", span="2925-2925"];
m6_1385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="XmlNodeConverter.cs", label="PersonRaw personRaw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="2916-2921"];
m6_1386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="XmlNodeConverter.cs", label="string json", span="2923-2923"];
m6_1389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2914-2914"];
m6_1090 [cluster="Unk.>", file="XmlNodeConverter.cs", label="Entry Unk.>", span=""];
m6_2213 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0"];
m6_891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1976-1976"];
m6_898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="1993-1999"];
m6_897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1991-1991"];
m6_892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1978-1984"];
m6_896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1989-1989"];
m6_893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1986-1986"];
m6_894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.Virtual = ''Virtual2!''", span="1987-1987"];
m6_895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1988-1988"];
m6_899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1976-1976"];
m6_2115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4740-4740"];
m6_2116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="XmlNodeConverter.cs", label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="4742-4742"];
m6_2117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4740-4740"];
m6_4146 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1921-1921"];
m6_1599 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29"];
m6_3507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7971-7971"];
m6_3510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7988-7991"];
m6_3513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="8002-8005"];
m6_3509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="7987-7987"];
m6_3512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="XmlNodeConverter.cs", label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="8001-8001"];
m6_3511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="XmlNodeConverter.cs", label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7993-7999"];
m6_3508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="XmlNodeConverter.cs", label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7973-7979"];
m6_3514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7971-7971"];
m6_4170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9696-9696"];
m6_4171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="var encodingName = serializer.Deserialize<string>(reader)", span="9698-9698"];
m6_4172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="encodingName == null", span="9699-9699"];
m6_4174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return Encoding.GetEncoding(encodingName);", span="9704-9704"];
m6_4173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return null;", span="9701-9701"];
m6_4175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9696-9696"];
m6_881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1946-1946"];
m6_888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1963-1972"];
m6_887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1961-1961"];
m6_882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1948-1954"];
m6_886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1959-1959"];
m6_883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1956-1956"];
m6_884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.Virtual = ''Virtual2!''", span="1957-1957"];
m6_885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1958-1958"];
m6_889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1946-1946"];
m6_465 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="718-718"];
m6_466 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m6_2562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5750-5750"];
m6_2564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5753-5753"];
m6_2563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="XmlNodeConverter.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="5752-5752"];
m6_2565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5750-5750"];
m6_2768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6223-6223"];
m6_2771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(true, commentTestClass.Indexed)", span="6238-6238"];
m6_2772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="6239-6239"];
m6_2773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="6240-6240"];
m6_2770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="XmlNodeConverter.cs", label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="6236-6236"];
m6_2769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="XmlNodeConverter.cs", label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="6225-6234"];
m6_2774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6223-6223"];
m6_2973 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1875-1875"];
m6_1744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3788-3788"];
m6_1747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, c.DateTimeField)", span="3793-3793"];
m6_1746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="XmlNodeConverter.cs", label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="3792-3792"];
m6_1745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="XmlNodeConverter.cs", label="string json = @''{''''DateTimeField'''':''''''''}''", span="3790-3790"];
m6_1748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3788-3788"];
m6_768 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="435-435"];
m6_177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="472-472"];
m6_178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new DictionaryWithNoNull()); }, ''Cannot write a null value for property 'Name'. Property requires a non-null value. Path ''.'')", span="474-474"];
m6_1104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2410-2410"];
m6_1107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="2421-2421"];
m6_1106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="XmlNodeConverter.cs", label="string result = JsonConvert.SerializeObject(testDates)", span="2420-2420"];
m6_1105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="XmlNodeConverter.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2412-2418"];
m6_1108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2410-2410"];
m6_196 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="603-603"];
m6_2723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", span="6111-6111"];
m6_2725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Public Parameterized 2'', c.Constructor)", span="6114-6114"];
m6_2726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''value!'', c.Value)", span="6115-6115"];
m6_2727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, c.Age)", span="6116-6116"];
m6_2724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="XmlNodeConverter.cs", label="MultipleParametrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParametrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="6113-6113"];
m6_2728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", span="6111-6111"];
m6_3226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7348-7348"];
m6_3227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringComparison>(''''); }, ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'')", span="7350-7350"];
m6_3228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7348-7348"];
m6_3483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7897-7897"];
m6_3491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="XmlNodeConverter.cs", label="var serializer = new JsonSerializer()", span="7901-7901"];
m6_3490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="XmlNodeConverter.cs", label="var jsonReader = new JsonTextReader(new StringReader(json))", span="7900-7900"];
m6_3492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="XmlNodeConverter.cs", label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7902-7905"];
m6_3493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="XmlNodeConverter.cs", label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="7907-7907"];
m6_3494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7897-7897"];
m6_24 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="80-80"];
m6_3178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7260-7260"];
m6_3180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="7268-7268"];
m6_3182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, e.NullableEnum)", span="7272-7272"];
m6_3184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="7280-7280"];
m6_3186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="XmlNodeConverter.cs", label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="7284-7284"];
m6_3179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = null\r\n            })", span="7262-7266"];
m6_3181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="XmlNodeConverter.cs", label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7270-7270"];
m6_3183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="XmlNodeConverter.cs", label="json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = MyEnum.Value2\r\n            })", span="7274-7278"];
m6_3185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="XmlNodeConverter.cs", label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7282-7282"];
m6_3187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7260-7260"];
m6_1111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2425-2425"];
m6_1114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="2436-2436"];
m6_1113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="XmlNodeConverter.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2435-2435"];
m6_1112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="XmlNodeConverter.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2427-2433"];
m6_1115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2425-2425"];
m6_119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="XmlNodeConverter.cs", label="FooRequired foo1 = new FooRequired(new[] { ''A'', ''B'', ''C'' })", span="367-367"];
m6_120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(foo1)", span="368-368"];
m6_136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="395-395"];
m6_3878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="9023-9023"];
m6_3882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''pa_info'''':{''''s'''':''''d''''}}'', json)", span="9029-9029"];
m6_3881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(product)", span="9027-9027"];
m6_3883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="XmlNodeConverter.cs", label="ParticipantEntity deserializedProduct = JsonConvert.DeserializeObject<ParticipantEntity>(json)", span="9030-9030"];
m6_3879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="XmlNodeConverter.cs", label="ParticipantEntity product = new ParticipantEntity()", span="9025-9025"];
m6_3880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="XmlNodeConverter.cs", label="product.Properties = new Dictionary<string, string> { { ''s'', ''d'' } }", span="9026-9026"];
m6_3884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="9023-9023"];
m6_3011 [cluster="Unk.AreEquivalent", file="XmlNodeConverter.cs", label="Entry Unk.AreEquivalent", span=""];
m6_2319 [cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="XmlNodeConverter.cs", label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0"];
m6_797 [cluster="Unk.IsNotNull", file="XmlNodeConverter.cs", label="Entry Unk.IsNotNull", span=""];
m6_1226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2648-2648"];
m6_1228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="XmlNodeConverter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="2652-2652"];
m6_1229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="XmlNodeConverter.cs", label="string indented = JsonConvert.SerializeObject(obj, settings)", span="2653-2653"];
m6_1230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="XmlNodeConverter.cs", label="string none = JsonConvert.SerializeObject(obj, Formatting.None, settings)", span="2655-2655"];
m6_1227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="XmlNodeConverter.cs", label="var obj = new { Formatting = ''test'' }", span="2650-2650"];
m6_1231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="XmlNodeConverter.cs", label="Assert.AreNotEqual(indented, none)", span="2656-2656"];
m6_1232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2648-2648"];
m6_3786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8714-8714"];
m6_3787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="XmlNodeConverter.cs", label="string json =\r\n                JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n                        IgnoreSerializableAttribute = false\r\n                    }\r\n                })", span="8716-8723"];
m6_3788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="8725-8732"];
m6_3789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8714-8714"];
m6_1052 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27"];
m6_3146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="7189-7189"];
m6_3147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            })", span="7191-7197"];
m6_3148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="7189-7189"];
m6_2145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4785-4785"];
m6_2149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="4792-4792"];
m6_2151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="4795-4795"];
m6_2152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="4796-4796"];
m6_2148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="4790-4790"];
m6_2150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="XmlNodeConverter.cs", label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="4794-4794"];
m6_2146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="XmlNodeConverter.cs", label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="4787-4787"];
m6_2147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="XmlNodeConverter.cs", label="modelStateDictionary.Add(''key'', ''value'')", span="4788-4788"];
m6_2153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4785-4785"];
m6_2752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="6173-6173"];
m6_2753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject(''null'', typeof(DateTime)); }, ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'')", span="6175-6175"];
m6_2754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="6173-6173"];
m6_4078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9471-9471"];
m6_4079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="XmlNodeConverter.cs", label="DerivedProperty = derivedProperty", span="9474-9474"];
m6_4080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9471-9471"];
m6_2318 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507"];
m6_3357 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2085-2085"];
m6_2799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6335-6335"];
m6_2805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''<JsonSerializerTest.ChildDataContract xmlns=''''http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Serialization'''' xmlns:i=''''http://www.w3.org/2001/XMLSchema-instance''''><nonVirtualMember>NonVirtualMember!</nonVirtualMember><virtualMember>VirtualMember!</virtualMember><NewMember i:nil=''''true''''/></JsonSerializerTest.ChildDataContract>'', xml)", span="6350-6350"];
m6_2804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="XmlNodeConverter.cs", label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="6348-6348"];
m6_2803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="XmlNodeConverter.cs", label="serializer.WriteObject(ms, cc)", span="6346-6346"];
m6_2802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="XmlNodeConverter.cs", label="MemoryStream ms = new MemoryStream()", span="6345-6345"];
m6_2800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="XmlNodeConverter.cs", label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6337-6341"];
m6_2801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="XmlNodeConverter.cs", label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="6343-6343"];
m6_2806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6335-6335"];
m6_1262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="2690-2690"];
m6_2808 [cluster="System.Convert.ToInt32(long)", file="XmlNodeConverter.cs", label="Entry System.Convert.ToInt32(long)", span="0-0"];
m6_2809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6377-6377"];
m6_2812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6386-6386"];
m6_2811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="XmlNodeConverter.cs", label="string result = JsonConvert.SerializeObject(cc)", span="6385-6385"];
m6_2810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="XmlNodeConverter.cs", label="ChildObject cc = new ChildObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6379-6383"];
m6_2813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6377-6377"];
m6_1261 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="XmlNodeConverter.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m6_3985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="9222-9222"];
m6_3993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dt, dt1)", span="9240-9240"];
m6_3998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dt, (DateTime)v.Value)", span="9251-9251"];
m6_3991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''''''2000-pie-Ara-Cuma-22'''''', json)", span="9236-9236"];
m6_3996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9249-9249"];
m6_3997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="9250-9250"];
m6_4001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="9260-9260"];
m6_4002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="9261-9261"];
m6_4003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''2000-pie-Dec-Friday-22'', v.Value)", span="9262-9262"];
m6_3986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="CultureInfo culture = new CultureInfo(''tr-TR'')", span="9224-9224"];
m6_3987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9226-9226"];
m6_3992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="9238-9238"];
m6_3994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9242-9246"];
m6_3995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9247-9247"];
m6_3999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="reader = new JsonTextReader(new StringReader(@''''''2000-pie-Dec-Friday-22''''''))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9253-9257"];
m6_3990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="9234-9234"];
m6_4000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="v = (JValue)JToken.ReadFrom(reader)", span="9258-9258"];
m6_3989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9228-9232"];
m6_3988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9227-9227"];
m6_4004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="9222-9222"];
m6_4121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9567-9567"];
m6_4123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                    JsonMessage,\r\n                    new MailAddressReadConverter(),\r\n                    new AttachmentReadConverter(),\r\n                    new EncodingReadConverter());\r\n            },\r\n                ''Cannot populate list type System.Net.Mime.HeaderCollection. Path 'Headers', line 26, position 14.'')", span="9609-9617"];
m6_4122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="XmlNodeConverter.cs", label="string JsonMessage = @''{\r\n  ''''From'''': {\r\n    ''''Address'''': ''''askywalker@theEmpire.gov'''',\r\n    ''''DisplayName'''': ''''Darth Vader''''\r\n  },\r\n  ''''Sender'''': null,\r\n  ''''ReplyTo'''': null,\r\n  ''''ReplyToList'''': [],\r\n  ''''To'''': [\r\n    {\r\n      ''''Address'''': ''''lskywalker@theRebellion.org'''',\r\n      ''''DisplayName'''': ''''Luke Skywalker''''\r\n    }\r\n  ],\r\n  ''''Bcc'''': [],\r\n  ''''CC'''': [\r\n    {\r\n      ''''Address'''': ''''lorgana@alderaan.gov'''',\r\n      ''''DisplayName'''': ''''Princess Leia''''\r\n    }\r\n  ],\r\n  ''''Priority'''': 0,\r\n  ''''DeliveryNotificationOptions'''': 0,\r\n  ''''Subject'''': ''''Family tree'''',\r\n  ''''SubjectEncoding'''': null,\r\n  ''''Headers'''': [],\r\n  ''''HeadersEncoding'''': null,\r\n  ''''Body'''': ''''<strong>I am your father!</strong>'''',\r\n  ''''BodyEncoding'''': ''''US-ASCII'''',\r\n  ''''BodyTransferEncoding'''': -1,\r\n  ''''IsBodyHtml'''': true,\r\n  ''''Attachments'''': [\r\n    {\r\n      ''''FileName'''': ''''skywalker family tree.jpg'''',\r\n      ''''ContentBase64'''': ''''AQIDBAU=''''\r\n    }\r\n  ],\r\n  ''''AlternateViews'''': []\r\n}''", span="9569-9607"];
m6_4124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9567-9567"];
m6_746 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="typeof(XObject).IsAssignableFrom(valueType)", span="1766-1766"];
m6_1884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="4034-4034"];
m6_1890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="4043-4043"];
m6_1889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(strings)", span="4042-4042"];
m6_1885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="XmlNodeConverter.cs", label="List<String> strings = new List<String>()", span="4036-4036"];
m6_1888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="XmlNodeConverter.cs", label="strings.Add(''str_3'')", span="4040-4040"];
m6_1886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="XmlNodeConverter.cs", label="strings.Add(''str_1'')", span="4038-4038"];
m6_1887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="XmlNodeConverter.cs", label="strings.Add(''str_2'')", span="4039-4039"];
m6_1891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="4034-4034"];
m6_1893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="4047-4047"];
m6_1898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''String!'', c2.A)", span="4057-4057"];
m6_1899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(int.MaxValue, c2.B)", span="4058-4058"];
m6_1897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="XmlNodeConverter.cs", label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="4056-4056"];
m6_1895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="4050-4050"];
m6_1896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="4051-4054"];
m6_1894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="XmlNodeConverter.cs", label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="4049-4049"];
m6_1900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="4047-4047"];
m6_3189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7288-7288"];
m6_3191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="7292-7292"];
m6_3193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="7296-7296"];
m6_3190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="7290-7290"];
m6_3192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="XmlNodeConverter.cs", label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="7294-7294"];
m6_3194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7288-7288"];
m6_3404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7691-7691"];
m6_3408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="7707-7707"];
m6_3409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''one'', c2.Data[0])", span="7708-7708"];
m6_3410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''two'', c2.Data[1])", span="7709-7709"];
m6_3406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="XmlNodeConverter.cs", label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="7704-7704"];
m6_3407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(c2)", span="7706-7706"];
m6_3405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="XmlNodeConverter.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data =\r\n                    new[]\r\n                    {\r\n                        ''one'',\r\n                        ''two'',\r\n                        ''three''\r\n                    }\r\n            }", span="7693-7702"];
m6_3411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7691-7691"];
m6_373 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IsArray(node) && node.ChildNodes.All(n => n.LocalName == node.LocalName) && node.ChildNodes.Count > 0", span="1089-1089"];
m6_36 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="90-90"];
m6_34 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="90-90"];
m6_35 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateProcessingInstruction(target, data));", span="92-92"];
m6_334 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="int i = 0", span="1026-1026"];
m6_32 [cluster="XmlDocumentTypeWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XmlDocumentTypeWrapper.cstr", span=""];
m6_3259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7402-7402"];
m6_3261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7412-7412"];
m6_3262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7413-7413"];
m6_3263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="7414-7414"];
m6_3264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="7415-7415"];
m6_3266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="7425-7425"];
m6_3267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="7426-7426"];
m6_3268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="7427-7427"];
m6_3269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="7428-7428"];
m6_3260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="XmlNodeConverter.cs", label="DateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7404-7410"];
m6_3265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="XmlNodeConverter.cs", label="DateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7417-7423"];
m6_3270 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7402-7402"];
m6_2561 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="XmlNodeConverter.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m6_1263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2710-2710"];
m6_1265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="2714-2714"];
m6_1267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="2718-2718"];
m6_1268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(99, c.Field)", span="2719-2719"];
m6_1264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="2712-2712"];
m6_1266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="XmlNodeConverter.cs", label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="2716-2716"];
m6_1269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2710-2710"];
m6_2881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6573-6573"];
m6_2883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6582-6585"];
m6_2885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6593-6596"];
m6_2882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                DerivedClassValue = ''DerivedClassValue!'',\r\n                NonSerialized = ''NonSerialized!''\r\n            }, Formatting.Indented)", span="6575-6580"];
m6_2884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="XmlNodeConverter.cs", label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n            }, Formatting.Indented)", span="6587-6591"];
m6_2886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6573-6573"];
m6_125 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="388-388"];
m6_126 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="XmlNodeConverter.cs", label="Declaration = declaration", span="391-391"];
m6_127 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="388-388"];
m6_1839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3941-3941"];
m6_1841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new Person()); }, @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 1.'')", span="3945-3945"];
m6_1840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="XmlNodeConverter.cs", label="string json = @''[]''", span="3943-3943"];
m6_1842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3941-3941"];
m6_2215 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0"];
m6_3436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7782-7782"];
m6_3441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, dic2.Count)", span="7799-7799"];
m6_3442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7800-7800"];
m6_3443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7801-7801"];
m6_3440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="XmlNodeConverter.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7797-7797"];
m6_3437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="XmlNodeConverter.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7784-7788"];
m6_3438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7790-7790"];
m6_3439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="7792-7795"];
m6_3444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7782-7782"];
m6_1737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3775-3775"];
m6_1740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, values.Count)", span="3781-3781"];
m6_1741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''value1'', values[''key1''])", span="3782-3782"];
m6_1742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''value2'', values[''key2''])", span="3783-3783"];
m6_1739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="XmlNodeConverter.cs", label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3779-3779"];
m6_1738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="XmlNodeConverter.cs", label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="3777-3777"];
m6_1743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3775-3775"];
m6_1997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4353-4353"];
m6_1998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="XmlNodeConverter.cs", label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="4355-4355"];
m6_1999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4353-4353"];
m6_2971 [cluster="System.IO.StringWriter.StringWriter()", file="XmlNodeConverter.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m6_3966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="9183-9183"];
m6_3973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dt, dt1)", span="9198-9198"];
m6_3978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dt, (DateTime)v.Value)", span="9208-9208"];
m6_3971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="9194-9194"];
m6_3976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9206-9206"];
m6_3977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="9207-9207"];
m6_3981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="9216-9216"];
m6_3982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="9217-9217"];
m6_3983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''abc'', v.Value)", span="9218-9218"];
m6_3967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9185-9185"];
m6_3972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="9196-9196"];
m6_3974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9200-9203"];
m6_3975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9204-9204"];
m6_3979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="reader = new JsonTextReader(new StringReader(@''''''abc''''''))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9210-9213"];
m6_3970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="9192-9192"];
m6_3980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="v = (JValue)JToken.ReadFrom(reader)", span="9214-9214"];
m6_3968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9186-9186"];
m6_3969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9187-9190"];
m6_3984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="9183-9183"];
m6_2624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5877-5877"];
m6_2627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="XmlNodeConverter.cs", label="Assert.AreEqual(123456789876543.21m, a[0])", span="5881-5881"];
m6_2626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="XmlNodeConverter.cs", label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5880-5880"];
m6_2625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="XmlNodeConverter.cs", label="string json = ''[123456789876543.21]''", span="5879-5879"];
m6_2628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5877-5877"];
m6_1765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3818-3818"];
m6_1767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="XmlNodeConverter.cs", label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="3822-3822"];
m6_1766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="XmlNodeConverter.cs", label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="3820-3820"];
m6_1768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3818-3818"];
m6_1974 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="31-31"];
m6_1288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2750-2750"];
m6_1291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2755-2755"];
m6_1293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2759-2759"];
m6_1290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2754-2754"];
m6_1292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2757-2757"];
m6_1289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2752-2752"];
m6_1294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2750-2750"];
m6_115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, l[i++])", span="359-359"];
m6_116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, l[i++])", span="360-360"];
m6_3633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8301-8301"];
m6_3636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8308-8308"];
m6_3638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="Assert.AreEqual(500, obj.Item1)", span="8314-8314"];
m6_3635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="8304-8307"];
m6_3637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="8310-8313"];
m6_3634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="var tuple = Tuple.Create(500)", span="8303-8303"];
m6_3639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8301-8301"];
m6_2222 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0"];
m6_1400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2942-2942"];
m6_1403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="2957-2957"];
m6_1405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="2961-2961"];
m6_1406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="2962-2962"];
m6_1407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="2963-2963"];
m6_1408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="2964-2964"];
m6_1409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="2965-2965"];
m6_1410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="2966-2966"];
m6_1411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="XmlNodeConverter.cs", label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="2967-2967"];
m6_1402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(userNullablle)", span="2955-2955"];
m6_1404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="XmlNodeConverter.cs", label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="2959-2959"];
m6_1401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="XmlNodeConverter.cs", label="UserNullable userNullablle = new UserNullable\r\n            {\r\n                Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                FName = ''FirstValue'',\r\n                LName = ''LastValue'',\r\n                RoleId = 5,\r\n                NullableRoleId = 6,\r\n                NullRoleId = null,\r\n                Active = true\r\n            }", span="2944-2953"];
m6_1412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2942-2942"];
m6_1270 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28"];
m6_1878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="4017-4017"];
m6_1879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'')", span="4019-4030"];
m6_1880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="4017-4017"];
m6_2900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6629-6629"];
m6_2905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="6641-6641"];
m6_2904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="XmlNodeConverter.cs", label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="6640-6640"];
m6_2902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6633-6633"];
m6_2903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="6634-6638"];
m6_2901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="XmlNodeConverter.cs", label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="6631-6631"];
m6_2906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6629-6629"];
m6_3697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8503-8503"];
m6_3702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="XmlNodeConverter.cs", label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="8515-8515"];
m6_3699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="XmlNodeConverter.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8506-8506"];
m6_3701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="XmlNodeConverter.cs", label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="8513-8513"];
m6_3703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="XmlNodeConverter.cs", label="string json = sw.ToString()", span="8517-8517"];
m6_3698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="XmlNodeConverter.cs", label="StringWriter sw = new StringWriter()", span="8505-8505"];
m6_3700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="XmlNodeConverter.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n                Formatting = Formatting.Indented\r\n            })", span="8508-8512"];
m6_3704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="8519-8521"];
m6_3705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8503-8503"];
m6_179 [cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="782-782"];
m6_2584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="5791-5791"];
m6_2218 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0"];
m6_1912 [cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27"];
m6_1825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3915-3915"];
m6_1827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Person>>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]', line 1, position 17.'')", span="3919-3919"];
m6_1826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="XmlNodeConverter.cs", label="string json = @''[new Constructor(123)]''", span="3917-3917"];
m6_1828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3915-3915"];
m6_3271 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="XmlNodeConverter.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m6_748 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="typeof(XmlNode).IsAssignableFrom(valueType)", span="1770-1770"];
m6_752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlDocumentWrapper", span=""];
m6_753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlElementWrapper", span=""];
m6_751 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1763-1763"];
m6_750 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="return false;", span="1774-1774"];
m6_749 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="return true;", span="1771-1771"];
m6_754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", span=""];
m6_1628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3496-3496"];
m6_1636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(26, newOptInClass.Age)", span="3515-3515"];
m6_1637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="3516-3516"];
m6_1638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="3517-3517"];
m6_1635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="XmlNodeConverter.cs", label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="3510-3514"];
m6_1634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="3505-3508"];
m6_1633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="3503-3503"];
m6_1629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="XmlNodeConverter.cs", label="OptInClass optInClass = new OptInClass()", span="3498-3498"];
m6_1632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="XmlNodeConverter.cs", label="optInClass.NotIncluded = ''Poor me :(''", span="3501-3501"];
m6_1630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="XmlNodeConverter.cs", label="optInClass.Age = 26", span="3499-3499"];
m6_1631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="XmlNodeConverter.cs", label="optInClass.Name = ''James NK''", span="3500-3500"];
m6_1639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3496-3496"];
m6_1076 [cluster="System.Text.Encoding.GetBytes(string)", file="XmlNodeConverter.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m6_1513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3198-3198"];
m6_1518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', defaultJson)", span="3215-3215"];
m6_1519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', isoJson)", span="3216-3216"];
m6_1520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':new Date(1234656000000)}'', javascriptJson)", span="3217-3217"];
m6_1515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="XmlNodeConverter.cs", label="string defaultJson = JsonConvert.SerializeObject(entry)", span="3206-3206"];
m6_1517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="XmlNodeConverter.cs", label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="3212-3212"];
m6_1516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="XmlNodeConverter.cs", label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="3209-3209"];
m6_1514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="XmlNodeConverter.cs", label="LogEntry entry = new LogEntry\r\n            {\r\n                LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                Details = ''Application started.''\r\n            }", span="3200-3204"];
m6_1521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3198-3198"];
m6_977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="2131-2131"];
m6_985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="2143-2143"];
m6_986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="2144-2144"];
m6_988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="2146-2146"];
m6_984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="XmlNodeConverter.cs", label="Assert.AreNotSame(executorObject, executorObject2)", span="2142-2142"];
m6_983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="XmlNodeConverter.cs", label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="2140-2140"];
m6_987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="XmlNodeConverter.cs", label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="2145-2145"];
m6_982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="XmlNodeConverter.cs", label="string output = JsonConvert.SerializeObject(executorObject)", span="2138-2138"];
m6_978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="XmlNodeConverter.cs", label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="2133-2133"];
m6_981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="XmlNodeConverter.cs", label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="2136-2136"];
m6_979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="XmlNodeConverter.cs", label="executorObject.serverClassName = ''BanSubs''", span="2134-2134"];
m6_980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="XmlNodeConverter.cs", label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="2135-2135"];
m6_989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="2131-2131"];
m6_327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="XmlNodeConverter.cs", label="c.IsProxy = true", span="842-842"];
m6_137 [cluster="XComment.cstr", file="XmlNodeConverter.cs", label="Entry XComment.cstr", span=""];
m6_1215 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30"];
m6_2887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="6513-6513"];
m6_2185 [cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0"];
m6_778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1680-1680"];
m6_781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''value'', deserialized.foo)", span="1684-1684"];
m6_780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="XmlNodeConverter.cs", label="var deserialized = JsonConvert.DeserializeObject<Foo1>(json)", span="1683-1683"];
m6_779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="XmlNodeConverter.cs", label="var json = @''{''''foo'''':''''value''''}''", span="1682-1682"];
m6_782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1680-1680"];
m6_916 [cluster="System.IO.MemoryStream.ToArray()", file="XmlNodeConverter.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m6_3311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7533-7533"];
m6_3314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="7538-7538"];
m6_3313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="7536-7536"];
m6_3312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Color color = (Color)value", span="7535-7535"];
m6_3315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7533-7533"];
m6_2948 [cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29"];
m6_3937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="9124-9124"];
m6_3938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="XmlNodeConverter.cs", label="throw new InvalidCastException();", span="9126-9126"];
m6_3939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="9124-9124"];
m6_2542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5704-5704"];
m6_2547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="XmlNodeConverter.cs", label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="5719-5719"];
m6_2546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="XmlNodeConverter.cs", label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="5717-5717"];
m6_2544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="5711-5711"];
m6_2545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="5713-5715"];
m6_2543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="XmlNodeConverter.cs", label="StructWithAttribute testStruct = new StructWithAttribute\r\n            {\r\n                MyInt = int.MaxValue\r\n            }", span="5706-5709"];
m6_2548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5704-5704"];
m6_99 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="332-332"];
m6_105 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="335-335"];
m6_106 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="335-335"];
m6_107 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", span="336-336"];
m6_108 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", span="336-336"];
m6_100 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="332-332"];
m6_1550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3299-3299"];
m6_1553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''value'', c.TestProperty1)", span="3307-3307"];
m6_1554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(21, c.TestProperty2)", span="3308-3308"];
m6_1556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''value'', c.TestProperty1)", span="3314-3314"];
m6_1557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(21, c.TestProperty2)", span="3315-3315"];
m6_1552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="XmlNodeConverter.cs", label="ConstructorAndDefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="3303-3306"];
m6_1555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="XmlNodeConverter.cs", label="c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="3310-3313"];
m6_1551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="XmlNodeConverter.cs", label="string json = ''{ 'testProperty1': 'value' }''", span="3301-3301"];
m6_1558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3299-3299"];
m6_936 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="743-743"];
m6_1512 [cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="36-36"];
m6_3832 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m6_2370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="5289-5289"];
m6_2192 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0"];
m6_2706 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="133-133"];
m6_3502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7962-7962"];
m6_3504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{}'', json)", span="7965-7965"];
m6_3503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="7964-7964"];
m6_3505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7962-7962"];
m6_3060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6993-6993"];
m6_3064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="XmlNodeConverter.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="7001-7001"];
m6_3065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="XmlNodeConverter.cs", label="Assert.AreEqual(d1[0], d2[0])", span="7002-7002"];
m6_3061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="XmlNodeConverter.cs", label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="6995-6995"];
m6_3063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="XmlNodeConverter.cs", label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="6999-6999"];
m6_3062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(d1)", span="6997-6997"];
m6_3066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6993-6993"];
m6_3708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8532-8532"];
m6_3709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]''), ''Cannot deserialize readonly or fixed size list: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyCollection`1[System.Int32]. Path '', line 1, position 1.'')", span="8534-8534"];
m6_3710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8532-8532"];
m6_2758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="6179-6179"];
m6_2760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="XmlNodeConverter.cs", label="Assert.IsNull(dateTime)", span="6183-6183"];
m6_2759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="XmlNodeConverter.cs", label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="6181-6181"];
m6_2761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="6179-6179"];
m6_2188 [cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0"];
m6_3608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="8228-8228"];
m6_3612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="XmlNodeConverter.cs", label="Assert.AreEqual(900, i)", span="8239-8239"];
m6_3611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="XmlNodeConverter.cs", label="int i = l[0]", span="8236-8236"];
m6_3610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="XmlNodeConverter.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="8234-8234"];
m6_3609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="XmlNodeConverter.cs", label="string json = @''[\r\n        900\r\n      ]''", span="8230-8232"];
m6_3613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="8228-8228"];
m6_771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1671-1671"];
m6_775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="XmlNodeConverter.cs", label="Assert.AreEqual(expectedJson, json)", span="1676-1676"];
m6_773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="XmlNodeConverter.cs", label="var json = JsonConvert.SerializeObject(original)", span="1674-1674"];
m6_774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="XmlNodeConverter.cs", label="var expectedJson = @''{''''foo'''':''''value''''}''", span="1675-1675"];
m6_772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="XmlNodeConverter.cs", label="var original = new Foo1 { foo = ''value'' }", span="1673-1673"];
m6_776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1671-1671"];
m6_2566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5757-5757"];
m6_2570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="XmlNodeConverter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5768-5768"];
m6_2568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="5764-5764"];
m6_2573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="XmlNodeConverter.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5773-5773"];
m6_2574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5774-5774"];
m6_2569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="XmlNodeConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5766-5766"];
m6_2571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="XmlNodeConverter.cs", label="serializer.DateParseHandling = DateParseHandling.None", span="5769-5769"];
m6_2572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="XmlNodeConverter.cs", label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5771-5771"];
m6_2567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="XmlNodeConverter.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="5759-5762"];
m6_2575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5757-5757"];
m6_1392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2930-2930"];
m6_1395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="2936-2936"];
m6_1396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="2937-2937"];
m6_1397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="2938-2938"];
m6_1394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="XmlNodeConverter.cs", label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="2934-2934"];
m6_1393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="XmlNodeConverter.cs", label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="2932-2932"];
m6_1398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2930-2930"];
m6_2607 [cluster="Unk.SerializeObject", file="XmlNodeConverter.cs", label="Entry Unk.SerializeObject", span=""];
m6_2285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5220-5220"];
m6_2322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="XmlNodeConverter.cs", label="AA_field1 = f", span="5222-5222"];
m6_2323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="XmlNodeConverter.cs", label="AA_field2 = f", span="5223-5223"];
m6_2324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="XmlNodeConverter.cs", label="AA_property1 = f", span="5224-5224"];
m6_2325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="XmlNodeConverter.cs", label="AA_property2 = f", span="5225-5225"];
m6_2326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="XmlNodeConverter.cs", label="AA_property3 = f", span="5226-5226"];
m6_2327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="XmlNodeConverter.cs", label="AA_property4 = f", span="5227-5227"];
m6_2328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="XmlNodeConverter.cs", label="AA_property5 = f", span="5228-5228"];
m6_2329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="XmlNodeConverter.cs", label="AA_property6 = f", span="5229-5229"];
m6_2330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5220-5220"];
m6_2489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5575-5575"];
m6_2491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="5579-5583"];
m6_2490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="XmlNodeConverter.cs", label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="5577-5577"];
m6_2492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5575-5575"];
m6_2114 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_3412 [cluster="Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", span="29-29"];
m6_1271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2723-2723"];
m6_1275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''param1'', deserialized.param1)", span="2731-2731"];
m6_1276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="2732-2732"];
m6_1277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="2733-2733"];
m6_1274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="XmlNodeConverter.cs", label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="2729-2729"];
m6_1273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c)", span="2727-2727"];
m6_1272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="XmlNodeConverter.cs", label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="2725-2725"];
m6_1278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2723-2723"];
m6_88 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="310-310"];
m6_89 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="XmlNodeWrapper xmlNodeWrapper = (XmlNodeWrapper) newChild", span="312-312"];
m6_90 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="_node.AppendChild(xmlNodeWrapper._node)", span="313-313"];
m6_91 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="_childNodes = null", span="314-314"];
m6_92 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return newChild;", span="316-316"];
m6_93 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="310-310"];
m6_97 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="331-331"];
m6_98 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="331-331"];
m6_439 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(documentType.System)", span="1208-1208"];
m6_441 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(documentType.System)", span="1211-1211"];
m6_440 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@system'')", span="1210-1210"];
m6_442 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(documentType.InternalSubset)", span="1213-1213"];
m6_2525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5661-5661"];
m6_2531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, d.StringDictionaryProperty.Count)", span="5682-5682"];
m6_2532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''One'', d.StringDictionaryProperty[''1''])", span="5683-5683"];
m6_2533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''II'', d.StringDictionaryProperty[''2''])", span="5684-5684"];
m6_2534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''3'', d.StringDictionaryProperty[''3''])", span="5685-5685"];
m6_2530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="XmlNodeConverter.cs", label="StringDictionaryTestClass d = JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5680-5680"];
m6_2528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="5675-5675"];
m6_2529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="XmlNodeConverter.cs", label="s1.StringDictionaryProperty is IDictionary<string, string>", span="5678-5678"];
m6_2535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringDictionaryTestClass>(json); }, ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 31.'')", span="5689-5689"];
m6_2527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="XmlNodeConverter.cs", label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n            {\r\n                StringDictionaryProperty = new StringDictionary()\r\n                {\r\n                    { ''1'', ''One'' },\r\n                    { ''2'', ''II'' },\r\n                    { ''3'', ''3'' }\r\n                }\r\n            }", span="5665-5673"];
m6_2526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="XmlNodeConverter.cs", label="string classRef = typeof(StringDictionary).FullName", span="5663-5663"];
m6_2536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5661-5661"];
m6_2049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4534-4534"];
m6_2057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Value!'', newC1.StringProperty)", span="4570-4570"];
m6_2058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, newC1.C2.IntProperty)", span="4571-4571"];
m6_2059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, newC1.C2.C1.StringProperty)", span="4572-4572"];
m6_2060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, newC1.C2.C1.C2)", span="4573-4573"];
m6_2056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="XmlNodeConverter.cs", label="CircularConstructor1 newC1 = JsonConvert.DeserializeObject<CircularConstructor1>(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1,\r\n    ''''C1'''': {}\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'')", span="4562-4568"];
m6_2055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'', json)", span="4555-4560"];
m6_2054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c1, new JsonSerializerSettings\r\n            {\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            })", span="4549-4553"];
m6_2050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="XmlNodeConverter.cs", label="CircularConstructor1 c1 = new CircularConstructor1(null)\r\n            {\r\n                StringProperty = ''Value!''\r\n            }", span="4536-4539"];
m6_2053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="XmlNodeConverter.cs", label="c2.C1 = c1", span="4547-4547"];
m6_2051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="XmlNodeConverter.cs", label="CircularConstructor2 c2 = new CircularConstructor2(null)\r\n            {\r\n                IntProperty = 1\r\n            }", span="4541-4544"];
m6_2052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="XmlNodeConverter.cs", label="c1.C2 = c2", span="4546-4546"];
m6_2061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4534-4534"];
m6_1239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2669-2669"];
m6_1244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(guid, c.GuidField)", span="2677-2677"];
m6_1242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="2674-2674"];
m6_1240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="XmlNodeConverter.cs", label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="2671-2671"];
m6_1243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="XmlNodeConverter.cs", label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="2676-2676"];
m6_1241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="2673-2673"];
m6_1245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2669-2669"];
m6_3074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", span="7024-7024"];
m6_3076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="XmlNodeConverter.cs", label="HasByteArray value = JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="7033-7036"];
m6_3077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="XmlNodeConverter.cs", label="CollectionAssert.AreEquivalent(Convert.FromBase64String(''cGFzc3dvcmQ=''), value.EncryptedPassword)", span="7038-7038"];
m6_3075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  }\r\n}''", span="7026-7032"];
m6_3078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", span="7024-7024"];
m6_4130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", span="9689-9689"];
m6_2654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5939-5939"];
m6_2655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="XmlNodeConverter.cs", label="IDoWork = doWork", span="5942-5942"];
m6_2656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5939-5939"];
m6_3248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7379-7379"];
m6_3249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject(null); },\r\n                new[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7381-7387"];
m6_3250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7379-7379"];
m6_2820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="6370-6370"];
m6_3130 [cluster="Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", span="27-27"];
m6_1151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2507-2507"];
m6_1153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''{}'', json)", span="2510-2510"];
m6_1152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new object())", span="2509-2509"];
m6_1154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2507-2507"];
m6_2357 [cluster="Unk.Parse", file="XmlNodeConverter.cs", label="Entry Unk.Parse", span=""];
m6_1640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="3476-3476"];
m6_1306 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="XmlNodeConverter.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m6_231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="XmlNodeConverter.cs", label="Assert.AreEqual(EnumA.ValueA, e1)", span="571-571"];
m6_2476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5547-5547"];
m6_2477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="XmlNodeConverter.cs", label="return new DictionaryKey() { Value = value };", span="5549-5549"];
m6_2478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5547-5547"];
m6_2793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6313-6313"];
m6_2796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''VirtualMember!'''',\r\n  ''''nonVirtualMember'''': ''''NonVirtualMember!''''\r\n}'', result)", span="6328-6331"];
m6_2795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="XmlNodeConverter.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6321-6321"];
m6_2794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="XmlNodeConverter.cs", label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6315-6319"];
m6_2797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6313-6313"];
m6_2792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="6276-6276"];
m6_3009 [cluster="Newtonsoft.Json.JsonWriter.Flush()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="393-393"];
m6_332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, c2.Sections.Count)", span="859-859"];
m6_333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="837-837"];
m6_1721 [cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31"];
m6_2085 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="XmlNodeConverter.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m6_2317 [cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="XmlNodeConverter.cs", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0"];
m6_1205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2585-2585"];
m6_1211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''string'', c.String)", span="2628-2628"];
m6_1212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="XmlNodeConverter.cs", label="Assert.AreEqual(double.MaxValue, c.Double)", span="2629-2629"];
m6_1213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="XmlNodeConverter.cs", label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="2631-2631"];
m6_1210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="XmlNodeConverter.cs", label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="2627-2627"];
m6_1206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="2587-2587"];
m6_1209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(expected, json)", span="2625-2625"];
m6_1207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="XmlNodeConverter.cs", label="string expected = null", span="2589-2589"];
m6_1208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="XmlNodeConverter.cs", label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="2591-2606"];
m6_1214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2585-2585"];
m6_2513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5638-5638"];
m6_2514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="XmlNodeConverter.cs", label="JsonSerializer serializer1 = new JsonSerializer()", span="5640-5640"];
m6_2520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, z.Length)", span="5649-5649"];
m6_2521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(0, z[0].Prop1.Length)", span="5650-5650"];
m6_2522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(0, z[1].Prop1.Length)", span="5651-5651"];
m6_2515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="XmlNodeConverter.cs", label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="5641-5641"];
m6_2516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="XmlNodeConverter.cs", label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="5642-5642"];
m6_2519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="XmlNodeConverter.cs", label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="5648-5648"];
m6_2517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="XmlNodeConverter.cs", label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="5644-5644"];
m6_2518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="XmlNodeConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5646-5646"];
m6_2523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5638-5638"];
m6_1692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3658-3658"];
m6_1697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="3677-3677"];
m6_1698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="3678-3678"];
m6_1699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="XmlNodeConverter.cs", label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="3679-3679"];
m6_1695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="XmlNodeConverter.cs", label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="3674-3674"];
m6_1696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(s)", span="3675-3675"];
m6_1694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="XmlNodeConverter.cs", label="JObject o = JObject.Parse(json)", span="3672-3672"];
m6_1693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="3660-3670"];
m6_1700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3658-3658"];
m6_328 [cluster="Unk.ToBoolean", file="XmlNodeConverter.cs", label="Entry Unk.ToBoolean", span=""];
m6_3042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6953-6953"];
m6_3049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1.5m, c.Quantity)", span="6968-6968"];
m6_3050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="6969-6969"];
m6_3048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="XmlNodeConverter.cs", label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="6966-6966"];
m6_3047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="XmlNodeConverter.cs", label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="6964-6964"];
m6_3046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="XmlNodeConverter.cs", label="Thread.CurrentThread.CurrentUICulture = testCulture", span="6962-6962"];
m6_3043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="XmlNodeConverter.cs", label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="6955-6955"];
m6_3044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="XmlNodeConverter.cs", label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="6959-6959"];
m6_3045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="XmlNodeConverter.cs", label="Thread.CurrentThread.CurrentCulture = testCulture", span="6961-6961"];
m6_3051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6953-6953"];
m6_1523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3220-3220"];
m6_1532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="XmlNodeConverter.cs", label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="3261-3261"];
m6_1533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="XmlNodeConverter.cs", label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="3262-3262"];
m6_1534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="XmlNodeConverter.cs", label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="3263-3263"];
m6_1529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="3240-3256"];
m6_1524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="XmlNodeConverter.cs", label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="3222-3222"];
m6_1530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="XmlNodeConverter.cs", label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="3258-3258"];
m6_1531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(deserializedObject)", span="3259-3259"];
m6_1528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3238-3238"];
m6_1525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="XmlNodeConverter.cs", label="o.IDictionaryProperty = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 },\r\n                { ''three'', 3 }\r\n            }", span="3223-3228"];
m6_1526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="XmlNodeConverter.cs", label="o.IListProperty = new List<int>\r\n            {\r\n                1, 2, 3\r\n            }", span="3229-3232"];
m6_1527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="XmlNodeConverter.cs", label="o.IEnumerableProperty = new List<int>\r\n            {\r\n                4, 5, 6\r\n            }", span="3233-3236"];
m6_1535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3220-3220"];
m6_2977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6819-6819"];
m6_2982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="XmlNodeConverter.cs", label="Assert.AreEqual(uri, output)", span="6826-6826"];
m6_2979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="XmlNodeConverter.cs", label="Uri uri = new Uri(input)", span="6822-6822"];
m6_2981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="XmlNodeConverter.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6824-6824"];
m6_2980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(uri)", span="6823-6823"];
m6_2978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="XmlNodeConverter.cs", label="string input = ''http://test.com/%22foo+bar%22''", span="6821-6821"];
m6_2983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6819-6819"];
m6_184 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="534-534"];
m6_4129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", span="9654-9654"];
m6_3925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="9104-9104"];
m6_3926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="XmlNodeConverter.cs", label="return (long)Value;", span="9106-9106"];
m6_3927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="9104-9104"];
m6_2380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="5373-5373"];
m6_1617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3443-3443"];
m6_1620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="3464-3464"];
m6_1622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="3467-3467"];
m6_1623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="3468-3468"];
m6_1624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(8, n.FidOrder.Count)", span="3469-3469"];
m6_1625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''id'', n.FidOrder[0])", span="3470-3470"];
m6_1626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="3471-3471"];
m6_1619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="XmlNodeConverter.cs", label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="3463-3463"];
m6_1621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="XmlNodeConverter.cs", label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="3466-3466"];
m6_1618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="XmlNodeConverter.cs", label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="3445-3461"];
m6_1627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3443-3443"];
m6_2676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="6027-6027"];
m6_2685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="6040-6040"];
m6_2686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="6041-6041"];
m6_2689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="6046-6046"];
m6_2690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="Assert.AreEqual(deserialized.Foo2, null)", span="6047-6047"];
m6_2684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="NullableStructPropertyClass deserialized = deserialize(s)", span="6039-6039"];
m6_2687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="s = JsonConvert.SerializeObject(barWithNull)", span="6044-6044"];
m6_2688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="deserialized = deserialize(s)", span="6045-6045"];
m6_2683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="6038-6038"];
m6_2680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="6033-6033"];
m6_2677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="6029-6029"];
m6_2682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="barWithNull.Foo2 = null", span="6035-6035"];
m6_2679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="6031-6031"];
m6_2681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="6034-6034"];
m6_2678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="6030-6030"];
m6_2691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="6027-6027"];
m6_3824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8878-8878"];
m6_3826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="8884-8884"];
m6_3828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new Size(1, 2), d.Keys.First())", span="8888-8888"];
m6_3829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="XmlNodeConverter.cs", label="Assert.AreEqual(new Size(3, 4), d.Values.First())", span="8889-8889"];
m6_3825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<Size, Size> { { new Size(1, 2), new Size(3, 4) } }\r\n                )", span="8880-8882"];
m6_3827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="XmlNodeConverter.cs", label="Dictionary<Size, Size> d = JsonConvert.DeserializeObject<Dictionary<Size, Size>>(json)", span="8886-8886"];
m6_3830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8878-8878"];
m6_1433 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29"];
m6_1414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2971-2971"];
m6_1417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, c.Height)", span="2976-2976"];
m6_1416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="XmlNodeConverter.cs", label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="2975-2975"];
m6_1415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="XmlNodeConverter.cs", label="string json = @''{''''Height'''':1}''", span="2973-2973"];
m6_1418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2971-2971"];
m6_3445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7805-7805"];
m6_3452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, dic2.Count)", span="7827-7827"];
m6_3453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7828-7828"];
m6_3454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7829-7829"];
m6_3451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="XmlNodeConverter.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n            })", span="7822-7825"];
m6_3446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="XmlNodeConverter.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7807-7811"];
m6_3449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="XmlNodeConverter.cs", label="Assert.IsFalse(o.Properties().ElementAt(0).Name.Contains(''Z''))", span="7819-7819"];
m6_3450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="XmlNodeConverter.cs", label="Assert.IsFalse(o.Properties().ElementAt(1).Name.Contains(''Z''))", span="7820-7820"];
m6_3447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n            })", span="7813-7816"];
m6_3448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="XmlNodeConverter.cs", label="JObject o = JObject.Parse(json)", span="7818-7818"];
m6_3455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7805-7805"];
m6_4108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9532-9532"];
m6_4111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''base'', d.BaseProperty)", span="9541-9541"];
m6_4112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''derived'', d.DerivedProperty)", span="9542-9542"];
m6_4110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="XmlNodeConverter.cs", label="var d = JsonConvert.DeserializeObject<DerivedWithPrivate>(json)", span="9539-9539"];
m6_4109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''DerivedProperty'''': ''''derived'''',\r\n  ''''BaseProperty'''': ''''base''''\r\n}''", span="9534-9537"];
m6_4113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9532-9532"];
m6_229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="568-568"];
m6_0 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="49-49"];
m6_6 [cluster="XmlNodeWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XmlNodeWrapper.cstr", span=""];
m6_13 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateCDataSection(data));", span="67-67"];
m6_5 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="55-55"];
m6_8 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="60-60"];
m6_1 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="XmlNodeConverter.cs", label="_document = document", span="52-52"];
m6_12 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="65-65"];
m6_2 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="49-49"];
m6_4 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateComment(data));", span="57-57"];
m6_9 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateTextNode(text));", span="62-62"];
m6_3 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="55-55"];
m6_10 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="60-60"];
m6_14 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="65-65"];
m6_2373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5349-5349"];
m6_2376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="5358-5358"];
m6_2375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="5357-5357"];
m6_2374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="XmlNodeConverter.cs", label="ClientMap source = new ClientMap()\r\n            {\r\n                position = new Pos() { X = 100, Y = 200 },\r\n                center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n            }", span="5351-5355"];
m6_2377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5349-5349"];
m6_2707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="6086-6086"];
m6_2711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="XmlNodeConverter.cs", label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="6092-6092"];
m6_2710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="XmlNodeConverter.cs", label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json, new JsonSerializerSettings { MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="6090-6090"];
m6_2709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="XmlNodeConverter.cs", label="var json = JsonConvert.SerializeObject(data)", span="6089-6089"];
m6_2708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="XmlNodeConverter.cs", label="var data = new DecimalTest(decimal.MinValue)", span="6088-6088"];
m6_2712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="6086-6086"];
m6_2095 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="XmlNodeConverter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_2961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6800-6800"];
m6_2969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="6814-6814"];
m6_2968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="XmlNodeConverter.cs", label="string result = sw.ToString()", span="6813-6813"];
m6_2964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="XmlNodeConverter.cs", label="var sw = new StringWriter()", span="6807-6807"];
m6_2967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="XmlNodeConverter.cs", label="jw.Flush()", span="6811-6811"];
m6_2963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="XmlNodeConverter.cs", label="var json = JObject.FromObject(o)", span="6805-6805"];
m6_2965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="XmlNodeConverter.cs", label="var jw = new JsonTextWriter(sw)", span="6808-6808"];
m6_2966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="XmlNodeConverter.cs", label="jw.WriteToken(json.CreateReader())", span="6810-6810"];
m6_2962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="XmlNodeConverter.cs", label="object o = new { p = 1 }", span="6803-6803"];
m6_2970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6800-6800"];
m6_3316 [cluster="Unk.ToKnownColor", file="XmlNodeConverter.cs", label="Entry Unk.ToKnownColor", span=""];
m6_2378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="5361-5361"];
m6_1537 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m6_4128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", span="9620-9620"];
m6_4061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", span="9399-9399"];
m6_4150 [cluster="System.Net.Mail.MailAddress.MailAddress(string)", file="XmlNodeConverter.cs", label="Entry System.Net.Mail.MailAddress.MailAddress(string)", span="0-0"];
m6_2181 [cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0"];
m6_3080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", span="7042-7042"];
m6_3082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                });\r\n            }, ''Error reading bytes. Unexpected token: PropertyName. Path 'EncryptedPassword.$value', line 6, position 13.'')", span="7053-7059"];
m6_3081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ='''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  }\r\n}''", span="7044-7051"];
m6_3083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", span="7042-7042"];
m6_859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="1787-1787"];
m6_2132 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m6_2123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4750-4750"];
m6_2127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="XmlNodeConverter.cs", label="this[entry.Key] = entry.Value", span="4759-4759"];
m6_2126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="XmlNodeConverter.cs", label=dictionary, span="4757-4757"];
m6_2124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="XmlNodeConverter.cs", label="dictionary == null", span="4752-4752"];
m6_2125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="XmlNodeConverter.cs", label="return;", span="4754-4754"];
m6_2128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4750-4750"];
m6_2580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5800-5800"];
m6_2582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="5804-5806"];
m6_2581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="5802-5802"];
m6_2583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5800-5800"];
m6_1846 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="942-942"];
m6_4147 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="531-531"];
m6_1170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2535-2535"];
m6_1173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2539-2539"];
m6_1174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="2541-2541"];
m6_1175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2542-2542"];
m6_1176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="2543-2543"];
m6_1177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="2544-2544"];
m6_1178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="2545-2545"];
m6_1172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="XmlNodeConverter.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2538-2538"];
m6_1171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="XmlNodeConverter.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2537-2537"];
m6_1179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2535-2535"];
m6_1018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2196-2196"];
m6_1020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="2200-2200"];
m6_1022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="2204-2204"];
m6_1023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(99, c.Field)", span="2205-2205"];
m6_1019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="2198-2198"];
m6_1021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="XmlNodeConverter.cs", label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="2202-2202"];
m6_1024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2196-2196"];
m6_1709 [cluster="System.Uri.ToString()", file="XmlNodeConverter.cs", label="Entry System.Uri.ToString()", span="0-0"];
m6_2493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5587-5587"];
m6_2495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, d.Length)", span="5595-5595"];
m6_2496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2.4, d[0])", span="5596-5596"];
m6_2497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(4.3, d[1])", span="5597-5597"];
m6_2498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="XmlNodeConverter.cs", label="Assert.AreEqual(null, d[2])", span="5598-5598"];
m6_2494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="XmlNodeConverter.cs", label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="5589-5593"];
m6_2499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5587-5587"];
m6_805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1715-1715"];
m6_809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''value2'', deserialized.foo2.bar)", span="1720-1720"];
m6_811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1722-1722"];
m6_807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="XmlNodeConverter.cs", label="var deserialized = JsonConvert.DeserializeObject<Foo1<Bar1>>(json)", span="1718-1718"];
m6_808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(deserialized.foo2)", span="1719-1719"];
m6_810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(deserialized.foo)", span="1721-1721"];
m6_806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="XmlNodeConverter.cs", label="var json = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1717-1717"];
m6_812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1715-1715"];
m6_1078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2363-2363"];
m6_1087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="XmlNodeConverter.cs", label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="2380-2380"];
m6_1086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2378-2378"];
m6_1085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="2377-2377"];
m6_1081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="XmlNodeConverter.cs", label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="2369-2369"];
m6_1084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="XmlNodeConverter.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2375-2375"];
m6_1083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="XmlNodeConverter.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2373-2373"];
m6_1079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="XmlNodeConverter.cs", label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="2365-2365"];
m6_1080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="XmlNodeConverter.cs", label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="2368-2368"];
m6_1082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="XmlNodeConverter.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2372-2372"];
m6_1088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2363-2363"];
m6_2549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="5695-5695"];
m6_1681 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m6_2692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="6006-6006"];
m6_3931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="9114-9114"];
m6_3932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="XmlNodeConverter.cs", label="throw new InvalidCastException();", span="9116-9116"];
m6_3933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="9114-9114"];
m6_1053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2334-2334"];
m6_1054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new BadJsonPropertyClass()); }, @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'')", span="2336-2336"];
m6_1055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2334-2334"];
m6_1279 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33"];
m6_836 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="948-948"];
m6_1247 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29"];
m6_3319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7541-7541"];
m6_3320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="7543-7543"];
m6_3321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7541-7541"];
m6_4062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", span="9421-9421"];
m6_4067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Test string'', o2.TestString)", span="9435-9435"];
m6_4066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="XmlNodeConverter.cs", label="MyObservableObject o2 = JsonConvert.DeserializeObject<MyObservableObject>(json)", span="9434-9434"];
m6_4064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="9428-9428"];
m6_4065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''PropertyChanged'''': null,\r\n  ''''TestString'''': ''''Test string''''\r\n}'', json)", span="9429-9432"];
m6_4063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="XmlNodeConverter.cs", label="MyObservableObject o = new MyObservableObject\r\n            {\r\n                TestString = ''Test string''\r\n            }", span="9423-9426"];
m6_4068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", span="9421-9421"];
m6_871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1920-1920"];
m6_878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="1937-1942"];
m6_877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="1935-1935"];
m6_872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1922-1928"];
m6_876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1933-1933"];
m6_873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1930-1930"];
m6_874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.Virtual = ''Virtual2!''", span="1931-1931"];
m6_875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1932-1932"];
m6_879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1920-1920"];
m6_431 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1195-1195"];
m6_434 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@name'')", span="1200-1200"];
m6_435 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(documentType.Name)", span="1201-1201"];
m6_436 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(documentType.Public)", span="1203-1203"];
m6_437 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@public'')", span="1205-1205"];
m6_433 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(documentType.Name)", span="1198-1198"];
m6_432 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="1196-1196"];
m6_438 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(documentType.Public)", span="1206-1206"];
m6_4041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9369-9369"];
m6_4048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dt, dt1)", span="9384-9384"];
m6_4053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dt, (DateTimeOffset)v.Value)", span="9395-9395"];
m6_4046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="9380-9380"];
m6_4051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="XmlNodeConverter.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9393-9393"];
m6_4052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="XmlNodeConverter.cs", label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="9394-9394"];
m6_4042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="XmlNodeConverter.cs", label="DateTimeOffset dt = new DateTimeOffset(new DateTime(2000, 12, 22))", span="9371-9371"];
m6_4047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="XmlNodeConverter.cs", label="DateTimeOffset dt1 = JsonConvert.DeserializeObject<DateTimeOffset>(json, settings)", span="9382-9382"];
m6_4049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="XmlNodeConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            }", span="9386-9390"];
m6_4050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="XmlNodeConverter.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9391-9391"];
m6_4045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="9378-9378"];
m6_4043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="XmlNodeConverter.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9372-9372"];
m6_4044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="XmlNodeConverter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9373-9376"];
m6_4054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9369-9369"];
m6_3007 [cluster="Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", span="33-33"];
m6_3731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8573-8573"];
m6_3732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="XmlNodeConverter.cs", label="this.First = first", span="8576-8576"];
m6_3733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="XmlNodeConverter.cs", label="this.Second = second", span="8577-8577"];
m6_3734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8573-8573"];
m6_4157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9661-9661"];
m6_4158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="var info = serializer.Deserialize<AttachmentInfo>(reader)", span="9663-9663"];
m6_4159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="var attachment = info != null\r\n                    ? new System.Net.Mail.Attachment(new MemoryStream(Convert.FromBase64String(info.ContentBase64)), ''application/octet-stream'')\r\n                    {\r\n                        ContentDisposition = { FileName = info.FileName }\r\n                    }\r\n                    : null", span="9665-9670"];
m6_4160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return attachment;", span="9671-9671"];
m6_4161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9661-9661"];
m6_2949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6771-6771"];
m6_2954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6792-6792"];
m6_2955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6793-6793"];
m6_2956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6794-6794"];
m6_2957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6795-6795"];
m6_2958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6796-6796"];
m6_2950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="XmlNodeConverter.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="6773-6780"];
m6_2953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="XmlNodeConverter.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6791-6791"];
m6_2951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6781-6781"];
m6_2952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', json)", span="6783-6789"];
m6_2959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6771-6771"];
m6_233 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="827-827"];
m6_234 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="XObjectWrapper wrapper = (XObjectWrapper)attribute", span="829-829"];
m6_2182 [cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0"];
m6_831 [cluster="int.ToString(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m6_2831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6449-6449"];
m6_2838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="6465-6465"];
m6_2839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6466-6466"];
m6_2840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''one'', c2.Categories[0])", span="6467-6467"];
m6_2841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''two'', c2.Categories[1])", span="6468-6468"];
m6_2832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="XmlNodeConverter.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="6451-6451"];
m6_2837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="XmlNodeConverter.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="6464-6464"];
m6_2833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="XmlNodeConverter.cs", label="c1.Categories.Add(''one'')", span="6452-6452"];
m6_2834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="XmlNodeConverter.cs", label="c1.Categories.Add(''two'')", span="6453-6453"];
m6_2835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6455-6455"];
m6_2836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="6456-6462"];
m6_2842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6449-6449"];
m6_2936 [cluster="System.Exception.ToString()", file="XmlNodeConverter.cs", label="Entry System.Exception.ToString()", span="0-0"];
m6_1660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3578-3578"];
m6_1663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="3591-3591"];
m6_1664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, c.Dictionary.Count)", span="3592-3592"];
m6_1665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="XmlNodeConverter.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3593-3593"];
m6_1662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="XmlNodeConverter.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n                json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="3587-3589"];
m6_1661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="3580-3585"];
m6_1666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3578-3578"];
m6_1756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3806-3806"];
m6_1760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(5, a.Count)", span="3812-3812"];
m6_1761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, (int)a[0])", span="3813-3813"];
m6_1762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="3814-3814"];
m6_1759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="XmlNodeConverter.cs", label="JArray a = (JArray)setOnly.GetValue()", span="3811-3811"];
m6_1758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="XmlNodeConverter.cs", label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="3810-3810"];
m6_1757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="XmlNodeConverter.cs", label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="3808-3808"];
m6_1763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3806-3806"];
m6_3806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8775-8775"];
m6_3812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8798-8805"];
m6_3807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="8777-8781"];
m6_3808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="8783-8787"];
m6_3811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="8792-8796"];
m6_3813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]'', json)", span="8807-8822"];
m6_3809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="john.Spouse = jane", span="8789-8789"];
m6_3810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="jane.Spouse = john", span="8790-8790"];
m6_3814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8775-8775"];
m6_2068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4605-4605"];
m6_2071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(123L, item.Value)", span="4610-4610"];
m6_2070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="XmlNodeConverter.cs", label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="4608-4608"];
m6_2069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="XmlNodeConverter.cs", label="var json = ''{ Key: 'abc', Value: 123 }''", span="4607-4607"];
m6_2072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4605-4605"];
m6_3778 [cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m6_1847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3949-3949"];
m6_1849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new List<Person>()); }, @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path '', line 1, position 2.'')", span="3953-3953"];
m6_1848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="XmlNodeConverter.cs", label="string json = @''{}''", span="3951-3951"];
m6_1850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3949-3949"];
m6_4114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9547-9547"];
m6_4118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="XmlNodeConverter.cs", label="Assert.AreEqual(ulong.MaxValue, result.Value)", span="9556-9556"];
m6_4117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="XmlNodeConverter.cs", label="NullableLongTestClass result = JsonConvert.DeserializeObject<NullableLongTestClass>(output)", span="9554-9554"];
m6_4116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="XmlNodeConverter.cs", label="string output = JsonConvert.SerializeObject(instance)", span="9553-9553"];
m6_4115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="XmlNodeConverter.cs", label="NullableLongTestClass instance = new NullableLongTestClass\r\n            {\r\n                Value = ulong.MaxValue\r\n            }", span="9549-9552"];
m6_4119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9547-9547"];
m6_43 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="100-100"];
m6_45 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="100-100"];
m6_47 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(name))", span="107-107"];
m6_44 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="return new XmlElementWrapper(_document.CreateElement(qualifiedName, namespaceUri));", span="102-102"];
m6_46 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="105-105"];
m6_48 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="attribute.Value = value", span="108-108"];
m6_3052 [cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="XmlNodeConverter.cs", label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0"];
m6_852 [cluster="string.Split(params char[])", file="XmlNodeConverter.cs", label="Entry string.Split(params char[])", span="0-0"];
m6_3653 [cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0"];
m6_3901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="9064-9064"];
m6_3902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="XmlNodeConverter.cs", label="throw new InvalidCastException();", span="9066-9066"];
m6_3903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="9064-9064"];
m6_2073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4637-4637"];
m6_2076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="XmlNodeConverter.cs", label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="4641-4641"];
m6_2074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="XmlNodeConverter.cs", label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="4639-4639"];
m6_2075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="XmlNodeConverter.cs", label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="4640-4640"];
m6_2077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="XmlNodeConverter.cs", label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="4642-4642"];
m6_2081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="XmlNodeConverter.cs", label="byte[] jsonBytes = ms.ToArray()", span="4650-4650"];
m6_2082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="XmlNodeConverter.cs", label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="4651-4651"];
m6_2079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="XmlNodeConverter.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n                typeof(DataContractJsonSerializerTestClass),\r\n                new Type[] { typeof(Human) })", span="4645-4647"];
m6_2080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="XmlNodeConverter.cs", label="serializer.WriteObject(ms, c)", span="4648-4648"];
m6_2078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="XmlNodeConverter.cs", label="MemoryStream ms = new MemoryStream()", span="4644-4644"];
m6_2083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4637-4637"];
m6_3779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8702-8702"];
m6_3784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1234567890.123456m, d)", span="8709-8709"];
m6_3783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="XmlNodeConverter.cs", label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="8707-8707"];
m6_3780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="XmlNodeConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="8704-8704"];
m6_3782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="XmlNodeConverter.cs", label="var serialiser = JsonSerializer.Create(settings)", span="8706-8706"];
m6_3781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="XmlNodeConverter.cs", label="var settings = new JsonSerializerSettings()", span="8705-8705"];
m6_3785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8702-8702"];
m6_954 [cluster="System.DateTime.DateTime(int, int, int)", file="XmlNodeConverter.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m6_2920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="6671-6671"];
m6_993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="2151-2151"];
m6_996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="2157-2157"];
m6_995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="XmlNodeConverter.cs", label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="2155-2155"];
m6_994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="XmlNodeConverter.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="2153-2153"];
m6_997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="2151-2151"];
m6_1928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="4113-4113"];
m6_1930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="XmlNodeConverter.cs", label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="4116-4116"];
m6_1931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="XmlNodeConverter.cs", label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="4117-4117"];
m6_1933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="4120-4123"];
m6_1929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="XmlNodeConverter.cs", label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="4115-4115"];
m6_1932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4119-4119"];
m6_1934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="4113-4113"];
m6_2612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5857-5857"];
m6_2614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="XmlNodeConverter.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="5860-5860"];
m6_2613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="XmlNodeConverter.cs", label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="5859-5859"];
m6_2615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5857-5857"];
m6_4005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9266-9266"];
m6_4012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="XmlNodeConverter.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9287-9287"];
m6_4006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="XmlNodeConverter.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9268-9268"];
m6_4011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="XmlNodeConverter.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9285-9285"];
m6_4007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="XmlNodeConverter.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9269-9269"];
m6_4009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9276-9279"];
m6_4008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="XmlNodeConverter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9270-9274"];
m6_4010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9281-9283"];
m6_4013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9266-9266"];
m6_747 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="171-171"];
m6_2214 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="XmlNodeConverter.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0"];
m6_2500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5603-5603"];
m6_2504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, d.Count)", span="5620-5620"];
m6_2503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="XmlNodeConverter.cs", label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="5618-5618"];
m6_2505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="XmlNodeConverter.cs", label="Assert.IsTrue(d.Contains(''One''))", span="5621-5621"];
m6_2501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="XmlNodeConverter.cs", label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n            {\r\n                ''One'',\r\n                ''2'',\r\n                ''III''\r\n            }, Formatting.Indented)", span="5605-5610"];
m6_2502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="5612-5616"];
m6_2506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="XmlNodeConverter.cs", label="Assert.IsTrue(d.Contains(''2''))", span="5622-5622"];
m6_2507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="XmlNodeConverter.cs", label="Assert.IsTrue(d.Contains(''III''))", span="5623-5623"];
m6_2508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5603-5603"];
m6_376 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.Attributes", span="1097-1097"];
m6_1150 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="790-790"];
m6_1040 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="268-268"];
m6_1701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3683-3683"];
m6_1704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="3688-3688"];
m6_1706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="XmlNodeConverter.cs", label="Assert.AreEqual(uri, newUri)", span="3691-3691"];
m6_1702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="XmlNodeConverter.cs", label="Uri uri = new Uri(''http://codeplex.com'')", span="3685-3685"];
m6_1703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(uri)", span="3686-3686"];
m6_1705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="XmlNodeConverter.cs", label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="3690-3690"];
m6_1707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3683-3683"];
m6_2412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5434-5434"];
m6_2421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, object>>(json); }, ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 10.'')", span="5449-5449"];
m6_2413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="XmlNodeConverter.cs", label="var reference = new Dictionary<string, object>()", span="5438-5438"];
m6_2416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="XmlNodeConverter.cs", label="var child = new Dictionary<string, object>()", span="5442-5442"];
m6_2420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="XmlNodeConverter.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5447-5447"];
m6_2414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="XmlNodeConverter.cs", label="reference.Add(''$ref'', ''Persons'')", span="5439-5439"];
m6_2415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="XmlNodeConverter.cs", label="reference.Add(''$id'', 1)", span="5440-5440"];
m6_2419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="XmlNodeConverter.cs", label="child.Add(''Father'', reference)", span="5445-5445"];
m6_2417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="XmlNodeConverter.cs", label="child.Add(''_id'', 2)", span="5443-5443"];
m6_2418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="XmlNodeConverter.cs", label="child.Add(''Name'', ''Isabell'')", span="5444-5444"];
m6_2422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5434-5434"];
m6_4148 [cluster="string.IsNullOrEmpty(string)", file="XmlNodeConverter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_3413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7713-7713"];
m6_3416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="7727-7727"];
m6_3415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(c)", span="7725-7725"];
m6_3414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="XmlNodeConverter.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data = new[]\r\n                {\r\n                    ''one'',\r\n                    ''two'',\r\n                    ''three''\r\n                }\r\n            }", span="7715-7723"];
m6_3417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7713-7713"];
m6_388 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteNull()", span="1125-1125"];
m6_3104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="7100-7100"];
m6_3106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json); }, ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 6.'')", span="7109-7109"];
m6_3105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="XmlNodeConverter.cs", label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="7102-7107"];
m6_3107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="7100-7100"];
m6_3907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="9074-9074"];
m6_3908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="XmlNodeConverter.cs", label="throw new InvalidCastException();", span="9076-9076"];
m6_3909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="9074-9074"];
m6_1413 [cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29"];
m6_1503 [cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46"];
m6_3770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8685-8685"];
m6_3774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="XmlNodeConverter.cs", label="Assert.AreEqual(s1.Count, s2.Count)", span="8693-8693"];
m6_3771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="XmlNodeConverter.cs", label="ISet<string> s1 = new HashSet<string>(new[] { ''1'', ''two'', ''III'' })", span="8687-8687"];
m6_3773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="XmlNodeConverter.cs", label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="8691-8691"];
m6_3775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="XmlNodeConverter.cs", label=s1, span="8694-8694"];
m6_3772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(s1)", span="8689-8689"];
m6_3776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="XmlNodeConverter.cs", label="Assert.IsTrue(s2.Contains(s))", span="8696-8696"];
m6_3777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8685-8685"];
m6_2042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="4471-4471"];
m6_1110 [cluster="System.TimeSpan.FromHours(double)", file="XmlNodeConverter.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m6_1026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2209-2209"];
m6_1028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="object o = JsonConvert.DeserializeObject(json)", span="2289-2289"];
m6_1027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="2211-2288"];
m6_1029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="string s = string.Empty", span="2290-2290"];
m6_1030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="s += s", span="2291-2291"];
m6_1031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2209-2209"];
m6_3928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="9109-9109"];
m6_3929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="XmlNodeConverter.cs", label="throw new InvalidCastException();", span="9111-9111"];
m6_3930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="9109-9109"];
m6_2560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="5722-5722"];
m6_3317 [cluster="Unk.ToUpper", file="XmlNodeConverter.cs", label="Entry Unk.ToUpper", span=""];
m6_3041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", span="6869-6869"];
m6_2012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4409-4409"];
m6_2014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="4412-4412"];
m6_2016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="4415-4415"];
m6_2013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="XmlNodeConverter.cs", label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="4411-4411"];
m6_2015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="XmlNodeConverter.cs", label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="4414-4414"];
m6_2017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4409-4409"];
m6_3755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8630-8630"];
m6_3759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="XmlNodeConverter.cs", label="Assert.AreEqual(expected, actual)", span="8649-8649"];
m6_3757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="XmlNodeConverter.cs", label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="8642-8642"];
m6_3758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="XmlNodeConverter.cs", label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n            })", span="8644-8647"];
m6_3756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="XmlNodeConverter.cs", label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n            {\r\n                { ''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified) },\r\n                { ''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc) },\r\n                { ''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local) },\r\n                { ''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero) },\r\n                { ''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1)) },\r\n                { ''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5)) }\r\n            }", span="8632-8640"];
m6_3760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8630-8630"];
m6_3427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7755-7755"];
m6_3432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, dic2.Count)", span="7775-7775"];
m6_3433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="XmlNodeConverter.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7776-7776"];
m6_3434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7777-7777"];
m6_3431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="XmlNodeConverter.cs", label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="7773-7773"];
m6_3428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="XmlNodeConverter.cs", label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7757-7761"];
m6_3429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7763-7766"];
m6_3430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="7768-7771"];
m6_3435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7755-7755"];
m6_2826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="6410-6410"];
m6_3326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7559-7559"];
m6_3332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="XmlNodeConverter.cs", label="JsonSerializer serializer = new JsonSerializer()", span="7573-7573"];
m6_3335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="XmlNodeConverter.cs", label="Assert.AreEqual(2, values.Count)", span="7579-7579"];
m6_3336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''bar'', values[0].Name)", span="7580-7580"];
m6_3337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''baz'', values[1].Name)", span="7581-7581"];
m6_3331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="XmlNodeConverter.cs", label="!reader.Read()", span="7568-7568"];
m6_3333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="XmlNodeConverter.cs", label="MultipleItemsClass foo = serializer.Deserialize<MultipleItemsClass>(reader)", span="7574-7574"];
m6_3327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="XmlNodeConverter.cs", label="IList<MultipleItemsClass> values = new List<MultipleItemsClass>()", span="7561-7561"];
m6_3330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="XmlNodeConverter.cs", label=true, span="7566-7566"];
m6_3328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="XmlNodeConverter.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{ ''''name'''': ''''bar'''' }{ ''''name'''': ''''baz'''' }''))", span="7563-7563"];
m6_3334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="XmlNodeConverter.cs", label="values.Add(foo)", span="7576-7576"];
m6_3329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="XmlNodeConverter.cs", label="reader.SupportMultipleContent = true", span="7564-7564"];
m6_3338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7559-7559"];
m6_3010 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="763-763"];
m6_1005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="2175-2175"];
m6_1008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="2181-2181"];
m6_1009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="2182-2182"];
m6_1007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="XmlNodeConverter.cs", label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="2179-2179"];
m6_1006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="XmlNodeConverter.cs", label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="2177-2177"];
m6_1010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="2175-2175"];
m6_1139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2483-2483"];
m6_1147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="XmlNodeConverter.cs", label="Assert.AreEqual(d, anonymous.DateValue)", span="2503-2503"];
m6_1145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="2500-2500"];
m6_1140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="XmlNodeConverter.cs", label="DateTime d = new DateTime(2000, 1, 1)", span="2485-2485"];
m6_1146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="XmlNodeConverter.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="2502-2502"];
m6_1144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="2499-2499"];
m6_1141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="XmlNodeConverter.cs", label="var anonymous =\r\n                new\r\n                {\r\n                    DateValue = d\r\n                }", span="2487-2491"];
m6_1142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="XmlNodeConverter.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="2493-2493"];
m6_1143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="XmlNodeConverter.cs", label="settings.Converters.Add(new IsoDateTimeConverter\r\n            {\r\n                DateTimeFormat = ''yyyy''\r\n            })", span="2494-2497"];
m6_1148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2483-2483"];
m6_2782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6267-6267"];
m6_2786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="XmlNodeConverter.cs", label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="6273-6273"];
m6_2784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="XmlNodeConverter.cs", label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="6271-6271"];
m6_2785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="XmlNodeConverter.cs", label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="6272-6272"];
m6_2783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="XmlNodeConverter.cs", label="string json = @''{A:''''Test''''}''", span="6269-6269"];
m6_2787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6267-6267"];
m6_900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="1884-1884"];
m6_3531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="8028-8028"];
m6_3536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="8060-8060"];
m6_3533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="XmlNodeConverter.cs", label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="8056-8056"];
m6_3535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="XmlNodeConverter.cs", label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="8058-8058"];
m6_3532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="XmlNodeConverter.cs", label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="8030-8054"];
m6_3534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(exception)", span="8057-8057"];
m6_3537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="8028-8028"];
m6_3587 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m6_412 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="1166-1166"];
m6_416 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IXmlDeclaration declaration = (IXmlDeclaration)node", span="1171-1171"];
m6_417 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1172-1172"];
m6_418 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="1173-1173"];
m6_413 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1167-1167"];
m6_415 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.XmlDeclaration", span="1170-1170"];
m6_414 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(node.Value)", span="1168-1168"];
m6_419 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(declaration.Version)", span="1175-1175"];
m6_2000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4372-4372"];
m6_2008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="XmlNodeConverter.cs", label="Assert.AreEqual(''some value'', gen.MyProperty)", span="4400-4400"];
m6_2007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="XmlNodeConverter.cs", label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="4399-4399"];
m6_2005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="XmlNodeConverter.cs", label="string json = g.ToJson()", span="4381-4381"];
m6_2006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="4383-4397"];
m6_2001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="XmlNodeConverter.cs", label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="4374-4374"];
m6_2004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="XmlNodeConverter.cs", label="g.MyProperty = ''some value''", span="4379-4379"];
m6_2002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="XmlNodeConverter.cs", label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="4376-4376"];
m6_2003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="XmlNodeConverter.cs", label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="4377-4377"];
m6_2009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4372-4372"];
m6_1390 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30"];
m6_4149 [cluster="System.Net.Mail.MailAddress.MailAddress(string, string)", file="XmlNodeConverter.cs", label="Entry System.Net.Mail.MailAddress.MailAddress(string, string)", span="0-0"];
m6_1372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2895-2895"];
m6_1374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="2898-2898"];
m6_1373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="2897-2897"];
m6_1375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2895-2895"];
m6_3791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8738-8738"];
m6_3792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="XmlNodeConverter.cs", label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="8740-8740"];
m6_3794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="XmlNodeConverter.cs", label="StringAssert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="8744-8746"];
m6_3793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="XmlNodeConverter.cs", label="string json = JsonConvert.SerializeObject(new[] { i }, Formatting.Indented)", span="8742-8742"];
m6_3795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8738-8738"];
m6_383 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!ValueAttributes(node.Attributes).Any() && node.ChildNodes.Count == 1\r\n                            && node.ChildNodes[0].NodeType == XmlNodeType.Text", span="1113-1114"];
m6_384 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(node.ChildNodes[0].Value)", span="1117-1117"];
m6_386 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IXmlElement element = (IXmlElement)node", span="1121-1121"];
m6_385 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.ChildNodes.Count == 0 && CollectionUtils.IsNullOrEmpty(node.Attributes)", span="1119-1119"];
m6_387 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="element.IsEmpty", span="1124-1124"];
m6_1859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3966-3966"];
m6_1860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3968-3979"];
m6_1861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3966-3966"];
m6_2144 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="XmlNodeConverter.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m6_1042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2317-2317"];
m6_1049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(test.Pie, test2.Pie)", span="2329-2329"];
m6_1050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="2330-2330"];
m6_1047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="2325-2325"];
m6_1043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="XmlNodeConverter.cs", label="JsonPropertyClass test = new JsonPropertyClass()", span="2319-2319"];
m6_1048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="XmlNodeConverter.cs", label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="2327-2327"];
m6_1046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="XmlNodeConverter.cs", label="string jsonText = JsonConvert.SerializeObject(test)", span="2323-2323"];
m6_1044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="XmlNodeConverter.cs", label="test.Pie = ''Delicious''", span="2320-2320"];
m6_1045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="XmlNodeConverter.cs", label="test.SweetCakesCount = int.MaxValue", span="2321-2321"];
m6_1051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2317-2317"];
m6_389 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(string.Empty)", span="1127-1127"];
m6_390 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="1131-1131"];
m6_392 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i < node.Attributes.Count", span="1133-1133"];
m6_393 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeNode(writer, node.Attributes[i], manager, true)", span="1135-1135"];
m6_391 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="int i = 0", span="1133-1133"];
m6_2815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6390-6390"];
m6_2818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="XmlNodeConverter.cs", label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6399-6399"];
m6_2817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="XmlNodeConverter.cs", label="string result = JsonConvert.SerializeObject(cc)", span="6398-6398"];
m6_2816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="XmlNodeConverter.cs", label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6392-6396"];
m6_2819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6390-6390"];
m6_3238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7360-7360"];
m6_3239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="XmlNodeConverter.cs", label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="7362-7362"];
m6_3240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="XmlNodeConverter.cs", label="Assert.IsNull(b)", span="7363-7363"];
m6_3241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7360-7360"];
m6_3118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="7140-7140"];
m6_3120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="XmlNodeConverter.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json), ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 14.'')", span="7148-7148"];
m6_3119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="XmlNodeConverter.cs", label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="7142-7146"];
m6_3121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="7140-7140"];
m6_1075 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="XmlNodeConverter.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m6_3877 [cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="46-46"];
m6_2907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6651-6651"];
m6_2909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="6655-6655"];
m6_2910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="XmlNodeConverter.cs", label="Assert.AreEqual(3, r.Departures.Count())", span="6656-6656"];
m6_2908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="XmlNodeConverter.cs", label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="6653-6653"];
m6_2911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="6657-6657"];
m6_2912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="XmlNodeConverter.cs", label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="6658-6658"];
m6_2913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="XmlNodeConverter.cs", label="Assert.IsNull(r.Departures.ElementAt(2))", span="6659-6659"];
m6_2914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6651-6651"];
m6_4221 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span=""];
m6_4275 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4271 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4272 [file="XmlNodeConverter.cs", label=s, span=""];
m6_4211 [file="XmlNodeConverter.cs", label=c1, span=""];
m6_4213 [file="XmlNodeConverter.cs", label=c1, span=""];
m6_4218 [file="XmlNodeConverter.cs", label=referenceResolver, span=""];
m6_4226 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span=""];
m6_4263 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span=""];
m6_4268 [file="XmlNodeConverter.cs", label=errors, span=""];
m6_4269 [file="XmlNodeConverter.cs", label=errors, span=""];
m6_4270 [file="XmlNodeConverter.cs", label=errors, span=""];
m6_4282 [file="XmlNodeConverter.cs", label=JsonMessage, span=""];
m6_4244 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span=""];
m6_4217 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4222 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4227 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4228 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4229 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4230 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4231 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4232 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4233 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4234 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4235 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4249 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4253 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4266 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4267 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4277 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4210 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", span=""];
m6_4240 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4265 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4237 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4238 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span=""];
m6_4261 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span=""];
m6_4264 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span=""];
m6_4223 [file="XmlNodeConverter.cs", label=strFromTest, span=""];
m6_4219 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", span=""];
m6_4262 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span=""];
m6_4245 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span=""];
m6_4239 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span=""];
m6_4276 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", span=""];
m6_4212 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass", span=""];
m6_4241 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span=""];
m6_4236 [file="XmlNodeConverter.cs", label=json, span=""];
m6_4215 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", span=""];
m6_4273 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span=""];
m6_4283 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.DecimalTest", span=""];
m6_4242 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1", span=""];
m6_4255 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span=""];
m6_4280 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType", span=""];
m6_4248 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span=""];
m6_4220 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", span=""];
m6_4279 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", span=""];
m6_4247 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span=""];
m6_4243 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2", span=""];
m6_4214 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver", span=""];
m6_4258 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m6_4257 [file="XmlNodeConverter.cs", label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m6_4278 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor", span=""];
m7_111 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteToken(reader, initialDepth, writeChildren, writeDateConstructorAsDate)", span="460-460"];
m7_356 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", span="968-968"];
m7_357 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", file="XmlNodeConverterTest.cs", label="InternalWriteValue(JsonToken.String)", span="970-970"];
m7_358 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", span="968-968"];
m7_361 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="XmlNodeConverterTest.cs", label="WriteNull()", span="980-980"];
m7_359 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="977-977"];
m7_360 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="XmlNodeConverterTest.cs", label="value == null", span="979-979"];
m7_363 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="977-977"];
m7_362 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="XmlNodeConverterTest.cs", label="WriteValue(value.Value)", span="982-982"];
m7_364 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="990-990"];
m7_365 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="XmlNodeConverterTest.cs", label="value == null", span="992-992"];
m7_45 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m7_529 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((value == null) ? (DateTime?)null : (DateTime)value)", span="1341-1341"];
m7_255 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="int i = 0", span="674-674"];
m7_204 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="XDocument doc2 = XDocument.Parse(xml)", span="493-493"];
m7_528 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.DateTimeNullable", span="1340-1340"];
m7_531 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((DateTimeOffset)value)", span="1345-1345"];
m7_534 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.Decimal", span="1351-1351"];
m7_538 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.Guid", span="1357-1357"];
m7_532 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.DateTimeOffsetNullable", span="1347-1347"];
m7_533 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((value == null) ? (DateTimeOffset?)null : (DateTimeOffset)value)", span="1348-1348"];
m7_535 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((decimal)value)", span="1352-1352"];
m7_536 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.DecimalNullable", span="1354-1354"];
m7_539 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((Guid)value)", span="1358-1358"];
m7_537 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((value == null) ? (decimal?)null : (decimal)value)", span="1355-1355"];
m7_540 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.GuidNullable", span="1360-1360"];
m7_220 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label=type, span="608-608"];
m7_46 [cluster="System.IO.StringReader.StringReader(string)", file="XmlNodeConverterTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m7_47 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299"];
m7_48 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.XmlNodeConverter()", span="870-870"];
m7_49 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="435-435"];
m7_50 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1236-1236"];
m7_51 [cluster="Unk.ToString", file="XmlNodeConverterTest.cs", label="Entry Unk.ToString", span=""];
m7_52 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", span="124-124"];
m7_53 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="decimal d = (decimal)Math.PI + 1000000000m", span="126-126"];
m7_374 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="string newJson = JsonConvert.SerializeXmlNode(newDoc, Formatting.Indented, true)", span="1020-1020"];
m7_376 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", span="966-966"];
m7_377 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", span="1028-1028"];
m7_375 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(json, newJson)", span="1021-1021"];
m7_378 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXNode(string, string, bool)", span="1106-1106"];
m7_355 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", span="959-959"];
m7_82 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="396-396"];
m7_458 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="XmlNodeConverterTest.cs", label="WriteValue(this, ConvertUtils.GetTypeCode(value), value)", span="1227-1227"];
m7_460 [cluster="Newtonsoft.Json.JsonWriter.CreateUnsupportedTypeException(Newtonsoft.Json.JsonWriter, object)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.CreateUnsupportedTypeException(Newtonsoft.Json.JsonWriter, object)", span="1420-1420"];
m7_461 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(object)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(object)", span="207-207"];
m7_462 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", span="1261-1261"];
m7_463 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="XmlNodeConverterTest.cs", label="InternalWriteComment()", span="1238-1238"];
m7_464 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1236-1236"];
m7_465 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteComment()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteComment()", span="1516-1516"];
m7_466 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="1245-1245"];
m7_467 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="XmlNodeConverterTest.cs", label="InternalWriteWhitespace(ws)", span="1247-1247"];
m7_468 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="1245-1245"];
m7_470 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="1434-1434"];
m7_471 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="XmlReader reader = XmlReader.Create(new StringReader(xml))", span="1436-1436"];
m7_472 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="StringWriter sw = new StringWriter()", span="1438-1438"];
m7_169 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="element.AppendChild(instruction)", span="367-367"];
m7_308 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="string json = SerializeXmlNode(newDoc)", span="771-771"];
m7_613 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteRaw()", file="XmlNodeConverterTest.cs", label=json, span=""];
m7_61 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(x.Number, x2.Number)", span="144-144"];
m7_62 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", span="124-124"];
m7_63 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DecimalContainer.DecimalContainer()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DecimalContainer.DecimalContainer()", span="118-118"];
m7_112 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool)", span="449-449"];
m7_448 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="product.Price = 3.99M", span="1359-1359"];
m7_450 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="string output = JsonConvert.SerializeObject(product, new IsoDateTimeConverter())", span="1362-1362"];
m7_451 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="XmlDocument xmlProduct = JsonConvert.DeserializeXmlNode(output, ''product'', true)", span="1364-1364"];
m7_449 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="product.Sizes = new string[] { ''Small'' }", span="1360-1360"];
m7_452 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<product>\r\n  <Name>Apple</Name>\r\n  <ExpiryDate>2008-12-28T00:00:00Z</ExpiryDate>\r\n  <Price>3.99</Price>\r\n  <Sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>Small</Sizes>\r\n</product>'', IndentXml(xmlProduct.InnerXml))", span="1366-1371"];
m7_338 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="JsonConvert.DeserializeXmlNode(json)", span="875-875"];
m7_339 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="875-875"];
m7_340 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", span="880-880"];
m7_187 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="string jsonText = JsonConvert.SerializeXmlNode(fragement)", span="394-394"];
m7_309 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''r'''': {\r\n      ''''Date'''': [\r\n        ''''34343'''',\r\n        ''''55''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="772-781"];
m7_310 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, json)", span="783-783"];
m7_311 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="761-761"];
m7_312 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="787-787"];
m7_515 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((ulong)value)", span="1320-1320"];
m7_567 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string expectedXaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2052-2083"];
m7_83 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="XmlNodeConverterTest.cs", label="InternalWriteEnd(JsonContainerType.Constructor)", span="398-398"];
m7_123 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="writeDateConstructorAsDate && string.Equals(constructorName, ''Date'', StringComparison.Ordinal)", span="481-481"];
m7_67 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteStartObject()", span="355-355"];
m7_530 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.DateTimeOffset", span="1344-1344"];
m7_175 [cluster="Unk.Element", file="XmlNodeConverterTest.cs", label="Entry Unk.Element", span=""];
m7_347 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="891-891"];
m7_348 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="string json = @''{''''count'''': 773840,''''photos'''': 773840}''", span="893-893"];
m7_429 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, xml)", span="1246-1246"];
m7_431 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string expectedXmlJson = @''{\r\n  ''''root'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''other'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''blah'''': null\r\n    },\r\n    ''''self'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n}''", span="1249-1260"];
m7_432 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expectedXmlJson, xmlJson)", span="1262-1262"];
m7_430 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string xmlJson = SerializeXmlNode(node)", span="1248-1248"];
m7_433 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", span="1216-1216"];
m7_412 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="XmlNodeConverterTest.cs", label="WriteValue(value.Value)", span="1105-1105"];
m7_40 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="d.Declaration != null", span="108-108"];
m7_41 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="linqXmlText = d.Declaration + linqXmlText", span="109-109"];
m7_42 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(xmlText, linqXmlText)", span="111-111"];
m7_43 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="return node;", span="114-114"];
m7_44 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", span="88-88"];
m7_124 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", color=green, community=0, file="XmlNodeConverterTest.cs", label="0: WriteConstructorDate(reader)", span="482-482"];
m7_125 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteStartConstructor(reader.Value.ToString())", span="484-484"];
m7_126 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.PropertyName", span="486-486"];
m7_127 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WritePropertyName(reader.Value.ToString())", span="487-487"];
m7_128 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.Comment", span="489-489"];
m7_129 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteComment((reader.Value != null) ? reader.Value.ToString() : null)", span="490-490"];
m7_130 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.Integer", span="492-492"];
m7_132 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteValue((BigInteger)reader.Value)", span="496-496"];
m7_131 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="reader.Value is BigInteger", span="494-494"];
m7_133 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteValue(Convert.ToInt64(reader.Value, CultureInfo.InvariantCulture))", span="501-501"];
m7_134 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.Float", span="504-504"];
m7_177 [cluster="Unk.CreateProcessingInstruction", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateProcessingInstruction", span=""];
m7_326 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc = new XmlDocument()", span="851-851"];
m7_327 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc.LoadXml(arrayXml)", span="852-852"];
m7_0 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", span="53-53"];
m7_15 [cluster="Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXmlNode(XmlNode, Newtonsoft.Json.Formatting)", span="975-975"];
m7_16 [cluster="XmlNodeReader.cstr", file="XmlNodeConverterTest.cs", label="Entry XmlNodeReader.cstr", span=""];
m7_1 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXmlNode(node, Formatting.Indented)", span="55-55"];
m7_3 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="XObject xNode", span="59-59"];
m7_14 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", span="53-53"];
m7_4 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="node is XmlDocument", span="60-60"];
m7_2 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="XmlNodeReader reader = new XmlNodeReader(node)", span="56-56"];
m7_6 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="node is XmlAttribute", span="64-64"];
m7_5 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="xNode = XDocument.Load(reader)", span="62-62"];
m7_17 [cluster="Unk.Load", file="XmlNodeConverterTest.cs", label="Entry Unk.Load", span=""];
m7_13 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="return json;", span="80-80"];
m7_7 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="XmlAttribute attribute = (XmlAttribute)node", span="66-66"];
m7_12 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(json, linqJson)", span="77-77"];
m7_8 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="xNode = new XAttribute(XName.Get(attribute.LocalName, attribute.NamespaceURI), attribute.Value)", span="67-67"];
m7_11 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="string linqJson = JsonConvert.SerializeXNode(xNode, Formatting.Indented)", span="75-75"];
m7_9 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="reader.MoveToContent()", span="71-71"];
m7_10 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="xNode = XNode.ReadFrom(reader)", span="72-72"];
m7_18 [cluster="XAttribute.cstr", file="XmlNodeConverterTest.cs", label="Entry XAttribute.cstr", span=""];
m7_456 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="XmlNodeConverterTest.cs", label="value is BigInteger", span="1223-1223"];
m7_544 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.TimeSpanNullable", span="1366-1366"];
m7_545 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((value == null) ? (TimeSpan?)null : (TimeSpan)value)", span="1367-1367"];
m7_546 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.BigInteger", span="1370-1370"];
m7_547 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((BigInteger)value)", span="1372-1372"];
m7_548 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.BigIntegerNullable", span="1374-1374"];
m7_549 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((value == null) ? (BigInteger?)null : (BigInteger)value)", span="1376-1376"];
m7_550 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.Uri", span="1379-1379"];
m7_551 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((Uri)value)", span="1380-1380"];
m7_552 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.String", span="1382-1382"];
m7_553 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((string)value)", span="1383-1383"];
m7_168 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="element.SetAttributeNode(aa)", span="365-365"];
m7_518 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.Single", span="1325-1325"];
m7_519 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((float)value)", span="1326-1326"];
m7_520 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.SingleNullable", span="1328-1328"];
m7_521 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((value == null) ? (float?)null : (float)value)", span="1329-1329"];
m7_522 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.Double", span="1331-1331"];
m7_523 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((double)value)", span="1332-1332"];
m7_524 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.DoubleNullable", span="1334-1334"];
m7_210 [cluster="Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="return true;", span="587-587"];
m7_394 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="1074-1074"];
m7_396 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="string jsonText = SerializeXmlNode(doc)", span="1077-1077"];
m7_397 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="string expected = @''{\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/'''',\r\n      ''''#text'''': ''''Text''''\r\n    }/* Hi! */\r\n  }\r\n}''", span="1079-1088"];
m7_395 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="1075-1075"];
m7_398 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, jsonText)", span="1090-1090"];
m7_278 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="721-721"];
m7_279 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="string jsonText = SerializeXmlNode(doc)", span="723-723"];
m7_114 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", span="463-463"];
m7_115 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="reader.TokenType", span="467-467"];
m7_116 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.None", span="469-469"];
m7_117 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.StartObject", span="472-472"];
m7_119 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.StartArray", span="475-475"];
m7_118 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteStartObject()", span="473-473"];
m7_120 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteStartArray()", span="476-476"];
m7_121 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.StartConstructor", span="478-478"];
m7_595 [cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="XmlNodeConverterTest.cs", label="JsonToken.Null", span="1461-1461"];
m7_596 [cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="XmlNodeConverterTest.cs", label="JsonToken.Undefined", span="1462-1462"];
m7_597 [cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="XmlNodeConverterTest.cs", label="InternalWriteValue(token)", span="1463-1463"];
m7_598 [cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="XmlNodeConverterTest.cs", label="JsonToken.EndObject", span="1465-1465"];
m7_600 [cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="XmlNodeConverterTest.cs", label="JsonToken.EndArray", span="1468-1468"];
m7_599 [cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="XmlNodeConverterTest.cs", label="InternalWriteEnd(JsonContainerType.Object)", span="1466-1466"];
m7_601 [cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="XmlNodeConverterTest.cs", label="InternalWriteEnd(JsonContainerType.Array)", span="1469-1469"];
m7_602 [cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="XmlNodeConverterTest.cs", label="JsonToken.EndConstructor", span="1471-1471"];
m7_180 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="XmlNodeConverterTest.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m7_92 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="423-423"];
m7_22 [cluster="Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeXNode(XObject, Newtonsoft.Json.Formatting)", span="1055-1055"];
m7_392 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="XmlNodeConverterTest.cs", label="WriteValue(value.Value)", span="1056-1056"];
m7_393 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="1051-1051"];
m7_399 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="1076-1076"];
m7_400 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="XmlNodeConverterTest.cs", label="value == null", span="1078-1078"];
m7_401 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="XmlNodeConverterTest.cs", label="WriteNull()", span="1079-1079"];
m7_223 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="JsonContainerType.Array", span="613-613"];
m7_266 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="JsonContainerType.Object", span="693-693"];
m7_265 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label=currentLevelType, span="691-691"];
m7_104 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="XDocument doc1 = XDocument.Parse(''<root />'')", span="207-207"];
m7_181 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="874-874"];
m7_185 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="XmlDocumentFragment fragement = doc.CreateDocumentFragment()", span="390-390"];
m7_489 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((value == null) ? (sbyte?)null : (sbyte)value)", span="1281-1281"];
m7_490 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.Int16", span="1283-1283"];
m7_491 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((short)value)", span="1284-1284"];
m7_492 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.Int16Nullable", span="1286-1286"];
m7_493 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((value == null) ? (short?)null : (short)value)", span="1287-1287"];
m7_494 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.UInt16", span="1289-1289"];
m7_495 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((ushort)value)", span="1290-1290"];
m7_496 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.UInt16Nullable", span="1292-1292"];
m7_497 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((value == null) ? (ushort?)null : (ushort)value)", span="1293-1293"];
m7_517 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((value == null) ? (ulong?)null : (ulong)value)", span="1323-1323"];
m7_341 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="XmlNodeConverterTest.cs", label="string json = @''{''''count'''': 773840,''''photos'''': null}''", span="882-882"];
m7_342 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'',\r\n                () => { JsonConvert.DeserializeXNode(json); })", span="884-886"];
m7_343 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", span="880-880"];
m7_569 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", span="1840-1840"];
m7_570 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", span="2089-2089"];
m7_174 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="300-300"];
m7_321 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc.LoadXml(arrayXml)", span="825-825"];
m7_322 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="827-827"];
m7_323 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin1'''',\r\n        ''''Admin2''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="828-840"];
m7_324 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, arrayJsonText)", span="841-841"];
m7_325 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''false''''>Admin1</role>\r\n			  </person>\r\n			</root>''", span="843-849"];
m7_299 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="753-753"];
m7_318 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, arrayJsonText)", span="813-813"];
m7_319 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin1</role>\r\n				  <role json:Array=''''true''''>Admin2</role>\r\n			  </person>\r\n			</root>''", span="815-822"];
m7_320 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc = new XmlDocument()", span="824-824"];
m7_469 [cluster="System.Collections.Generic.List<T>.List()", file="XmlNodeConverterTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_623 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="XmlNodeConverterTest.cs", label="throw JsonWriterException.Create(this, ''Only white space characters should be used.'', null);", span="1512-1512"];
m7_622 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="XmlNodeConverterTest.cs", label="!StringUtils.IsWhiteSpace(ws)", span="1511-1511"];
m7_621 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="XmlNodeConverterTest.cs", label="ws != null", span="1509-1509"];
m7_624 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", span="1507-1507"];
m7_122 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="string constructorName = reader.Value.ToString()", span="479-479"];
m7_173 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''xs:Choice'''': {\r\n    ''''@msdata:IsDataSet'''': '''''''',\r\n    ''''@xmlns:xs'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n    ''''#cdata-section'''': ''''<Kiwi>true</Kiwi>''''\r\n  }\r\n}'', jsonText)", span="374-382"];
m7_65 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="355-355"];
m7_96 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="195-195"];
m7_97 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(''<root />'')", span="196-196"];
m7_98 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXmlNode(doc, Formatting.Indented, true)", span="198-198"];
m7_113 [cluster="Newtonsoft.Json.JsonWriter.IsStartToken(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.IsStartToken(Newtonsoft.Json.JsonToken)", span="593-593"];
m7_35 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="string xmlText = node.OuterXml", span="101-101"];
m7_297 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", span="740-740"];
m7_298 [cluster="System.Enum.ToString()", file="XmlNodeConverterTest.cs", label="Entry System.Enum.ToString()", span="0-0"];
m7_94 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteEnd()", span="423-423"];
m7_479 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((char)value)", span="1266-1266"];
m7_275 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="i++", span="674-674"];
m7_276 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", span="647-647"];
m7_277 [cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteIndent()", span="722-722"];
m7_282 [cluster="Newtonsoft.Json.JsonWriter.WriteValueDelimiter()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValueDelimiter()", span="729-729"];
m7_280 [cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteIndent()", span="722-722"];
m7_281 [cluster="Newtonsoft.Json.JsonWriter.WriteValueDelimiter()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValueDelimiter()", span="729-729"];
m7_283 [cluster="Newtonsoft.Json.JsonWriter.WriteIndentSpace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteIndentSpace()", span="736-736"];
m7_213 [cluster="Newtonsoft.Json.JsonWriter.IsStartToken(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label=token, span="595-595"];
m7_214 [cluster="Newtonsoft.Json.JsonWriter.IsStartToken(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="JsonToken.StartObject", span="597-597"];
m7_409 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1160-1160"];
m7_411 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", span="1097-1097"];
m7_410 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="1162-1162"];
m7_413 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="402-402"];
m7_419 [cluster="string.Replace(string, string)", file="XmlNodeConverterTest.cs", label="Entry string.Replace(string, string)", span="0-0"];
m7_421 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="PreserveReferencesHandlingTests.CircularDictionary circularDictionary = new PreserveReferencesHandlingTests.CircularDictionary()", span="1218-1218"];
m7_422 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="circularDictionary.Add(''other'', new PreserveReferencesHandlingTests.CircularDictionary { { ''blah'', null } })", span="1219-1219"];
m7_420 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", span="1216-1216"];
m7_423 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="circularDictionary.Add(''self'', circularDictionary)", span="1220-1220"];
m7_184 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="388-388"];
m7_351 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="900-900"];
m7_352 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<myRoot><count>773840</count><photos>773840</photos></myRoot>'', newXDoc.ToString(SaveOptions.DisableFormatting))", span="902-902"];
m7_95 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", span="193-193"];
m7_222 [cluster="Unk.Create", file="XmlNodeConverterTest.cs", label="Entry Unk.Create", span=""];
m7_224 [cluster="System.Text.StringBuilder.ToString()", file="XmlNodeConverterTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m7_226 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs", label="var writer = XmlWriter.Create(new Utf8StringWriter(builder), new XmlWriterSettings { Indent = indent })", span="529-529"];
m7_227 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs", label="doc.Save(writer)", span="531-531"];
m7_221 [cluster="XmlWriterSettings.cstr", file="XmlNodeConverterTest.cs", label="Entry XmlWriterSettings.cstr", span=""];
m7_225 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs", label="StringBuilder builder = new StringBuilder()", span="528-528"];
m7_228 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XmlDocument, bool)", file="XmlNodeConverterTest.cs", label="return builder.ToString();", span="533-533"];
m7_54 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="var x = new DecimalContainer { Number = d }", span="127-127"];
m7_55 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(x, Formatting.Indented)", span="129-129"];
m7_178 [cluster="Unk.CreateCDataSection", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateCDataSection", span=""];
m7_435 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="XmlNodeConverterTest.cs", label="value == null", span="1165-1165"];
m7_24 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="XmlNodeConverterTest.cs", label="StateArray = BuildStateArray()", span="110-110"];
m7_25 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.JsonWriter()", span="108-108"];
m7_26 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", span="83-83"];
m7_195 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="throw JsonWriterException.Create(this, ''Unexpected token when reading date constructor. Expected Integer, got '' + reader.TokenType, null);", span="567-567"];
m7_196 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", color=red, community=0, file="XmlNodeConverterTest.cs", label="0: long ticks = (long)reader.Value", span="569-569"];
m7_197 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", color=red, community=0, file="XmlNodeConverterTest.cs", label="0: DateTime date = DateTimeUtils.ConvertJavaScriptTicksToDateTime(ticks)", span="570-570"];
m7_199 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="throw JsonWriterException.Create(this, ''Unexpected end when reading date constructor.'', null);", span="573-573"];
m7_203 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", span="562-562"];
m7_208 [cluster="Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="JsonToken.EndArray", span="585-585"];
m7_198 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="!reader.Read()", span="572-572"];
m7_201 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="throw JsonWriterException.Create(this, ''Unexpected token when reading date constructor. Expected EndConstructor, got '' + reader.TokenType, null);", span="575-575"];
m7_206 [cluster="Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label=token, span="582-582"];
m7_200 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="reader.TokenType != JsonToken.EndConstructor", span="574-574"];
m7_202 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="WriteValue(date)", span="577-577"];
m7_205 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="183-183"];
m7_207 [cluster="Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="JsonToken.EndObject", span="584-584"];
m7_209 [cluster="Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="JsonToken.EndConstructor", span="586-586"];
m7_302 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="757-757"];
m7_618 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="UpdateScopeWithFinishedValue()", span="1503-1503"];
m7_619 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="AutoComplete(token)", span="1504-1504"];
m7_620 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", span="1501-1501"];
m7_256 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="i < levelsToComplete", span="674-674"];
m7_257 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="JsonToken token = GetCloseTokenForType(Pop())", span="676-676"];
m7_261 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="_currentState != State.ObjectStart && _currentState != State.ArrayStart", span="683-683"];
m7_258 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="_currentState == State.Property", span="678-678"];
m7_259 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="WriteNull()", span="679-679"];
m7_260 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="_formatting == Formatting.Indented", span="681-681"];
m7_262 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="WriteIndent()", span="684-684"];
m7_263 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="WriteEnd(token)", span="687-687"];
m7_543 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((TimeSpan)value)", span="1364-1364"];
m7_211 [cluster="Newtonsoft.Json.JsonWriter.IsEndToken(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="return false;", span="589-589"];
m7_229 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteAll()", file="XmlNodeConverterTest.cs", label="Top > 0", span="626-626"];
m7_386 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="XmlNodeConverterTest.cs", label="WriteNull()", span="1042-1042"];
m7_387 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="XmlNodeConverterTest.cs", label="WriteValue(value.Value)", span="1044-1044"];
m7_388 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="1039-1039"];
m7_389 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="1051-1051"];
m7_390 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="XmlNodeConverterTest.cs", label="value == null", span="1053-1053"];
m7_391 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="XmlNodeConverterTest.cs", label="WriteNull()", span="1054-1054"];
m7_527 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((DateTime)value)", span="1338-1338"];
m7_444 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="XmlNodeConverterTest.cs", label="value == null", span="1189-1189"];
m7_445 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="XmlNodeConverterTest.cs", label="WriteNull()", span="1190-1190"];
m7_446 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="XmlNodeConverterTest.cs", label="InternalWriteValue(JsonToken.Bytes)", span="1192-1192"];
m7_447 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1187-1187"];
m7_453 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1212-1212"];
m7_454 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="XmlNodeConverterTest.cs", label="value == null", span="1214-1214"];
m7_455 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="XmlNodeConverterTest.cs", label="WriteNull()", span="1216-1216"];
m7_182 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="771-771"];
m7_99 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''null'', json)", span="199-199"];
m7_105 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="json = JsonConvert.SerializeXNode(doc1, Formatting.Indented, true)", span="209-209"];
m7_109 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@'''''''''''', json)", span="215-215"];
m7_110 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", span="193-193"];
m7_107 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="doc1 = XDocument.Parse(''<root></root>'')", span="212-212"];
m7_106 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''null'', json)", span="210-210"];
m7_108 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="json = JsonConvert.SerializeXNode(doc1, Formatting.Indented, true)", span="214-214"];
m7_20 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="107-107"];
m7_606 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="xml.LoadXml(xmlString)", span="2175-2175"];
m7_300 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="757-757"];
m7_301 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''{Prop1:1,Prop2:2}'')", span="757-757"];
m7_172 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="jsonText = JsonConvert.SerializeXmlNode(element, Formatting.Indented)", span="372-372"];
m7_267 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="_currentState = State.Object", span="694-694"];
m7_268 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="JsonContainerType.Array", span="696-696"];
m7_269 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="_currentState = State.Array", span="697-697"];
m7_270 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="JsonContainerType.Constructor", span="699-699"];
m7_271 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="_currentState = State.Array", span="700-700"];
m7_273 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="_currentState = State.Start", span="703-703"];
m7_272 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="JsonContainerType.None", span="702-702"];
m7_274 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="throw JsonWriterException.Create(this, ''Unknown JsonType: '' + currentLevelType, null);", span="706-706"];
m7_313 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="XmlNodeConverterTest.cs", label="InternalWriteValue(JsonToken.String)", span="811-811"];
m7_314 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(string)", span="809-809"];
m7_315 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="818-818"];
m7_316 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="XmlNodeConverterTest.cs", label="InternalWriteValue(JsonToken.Integer)", span="820-820"];
m7_317 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(int)", span="818-818"];
m7_328 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="XmlNodeConverterTest.cs", label="InternalWriteValue(JsonToken.Float)", span="867-867"];
m7_329 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(double)", span="865-865"];
m7_330 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="XmlNodeConverterTest.cs", label="InternalWriteValue(JsonToken.Boolean)", span="876-876"];
m7_331 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="874-874"];
m7_369 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'', true)", span="984-984"];
m7_371 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'', true)", span="1001-1001"];
m7_372 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(IndentXml(newXDoc.ToString(SaveOptions.DisableFormatting)))", span="1003-1003"];
m7_370 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<myRoot>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes json:Array=''''true''''>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newDoc.InnerXml))", span="986-998"];
m7_373 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<myRoot>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes json:Array=''''true''''>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newXDoc.ToString(SaveOptions.DisableFormatting)))", span="1005-1017"];
m7_367 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="XmlNodeConverterTest.cs", label="WriteValue(value.Value)", span="995-995"];
m7_368 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="990-990"];
m7_66 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="XmlNodeConverterTest.cs", label="InternalWriteStart(JsonToken.StartObject, JsonContainerType.Object)", span="357-357"];
m7_437 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="XmlNodeConverterTest.cs", label="WriteValue(value.Value)", span="1168-1168"];
m7_438 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1163-1163"];
m7_439 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", span="1175-1175"];
m7_440 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="XmlNodeConverterTest.cs", label="value == null", span="1177-1177"];
m7_402 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="XmlNodeConverterTest.cs", label="WriteValue(value.Value)", span="1081-1081"];
m7_403 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="1076-1076"];
m7_404 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char?)", span="1088-1088"];
m7_405 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="XmlNodeConverterTest.cs", label="value == null", span="1090-1090"];
m7_406 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="XmlNodeConverterTest.cs", label="WriteNull()", span="1091-1091"];
m7_407 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="XmlNodeConverterTest.cs", label="WriteValue(value.Value)", span="1093-1093"];
m7_408 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(char?)", span="1088-1088"];
m7_554 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.Bytes", span="1385-1385"];
m7_555 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteValue((byte[])value)", span="1386-1386"];
m7_556 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode.DBNull", span="1389-1389"];
m7_557 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="writer.WriteNull()", span="1390-1390"];
m7_558 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="value is IConvertible", span="1395-1395"];
m7_559 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="IConvertible convertable = (IConvertible)value", span="1399-1399"];
m7_560 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="TypeInformation typeInformation = ConvertUtils.GetTypeInformation(convertable)", span="1401-1401"];
m7_561 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="PrimitiveTypeCode resolvedTypeCode = (typeInformation.TypeCode == PrimitiveTypeCode.Object) ? PrimitiveTypeCode.String : typeInformation.TypeCode", span="1404-1404"];
m7_562 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="Type resolvedType = (typeInformation.TypeCode == PrimitiveTypeCode.Object) ? typeof(string) : typeInformation.Type", span="1405-1405"];
m7_564 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="WriteValue(writer, resolvedTypeCode, convertedValue)", span="1409-1409"];
m7_563 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="object convertedValue = convertable.ToType(resolvedType, CultureInfo.InvariantCulture)", span="1407-1407"];
m7_566 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", span="1261-1261"];
m7_565 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="XmlNodeConverterTest.cs", label="throw CreateUnsupportedTypeException(writer, value);", span="1415-1415"];
m7_568 [cluster="System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="XmlNodeConverterTest.cs", label="Entry System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="0-0"];
m7_473 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="XmlWriter writer = XmlWriter.Create(sw, new XmlWriterSettings { Indent = true, OmitXmlDeclaration = true })", span="1439-1439"];
m7_474 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1441-1441"];
m7_475 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="writer.WriteNode(reader, false)", span="1443-1443"];
m7_476 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="writer.Flush()", span="1446-1446"];
m7_100 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="doc = new XmlDocument()", span="201-201"];
m7_102 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="json = JsonConvert.SerializeXmlNode(doc, Formatting.Indented, true)", span="204-204"];
m7_101 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(''<root></root>'')", span="202-202"];
m7_103 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@'''''''''''', json)", span="205-205"];
m7_414 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="1113-1113"];
m7_415 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="XmlNodeConverterTest.cs", label="value == null", span="1115-1115"];
m7_416 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="XmlNodeConverterTest.cs", label="WriteNull()", span="1116-1116"];
m7_417 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="XmlNodeConverterTest.cs", label="WriteValue(value.Value)", span="1118-1118"];
m7_418 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="1113-1113"];
m7_84 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeOffsetContainer.DateTimeOffsetContainer()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeOffsetContainer.DateTimeOffsetContainer()", span="147-147"];
m7_593 [cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="XmlNodeConverterTest.cs", label="JsonToken.Date", span="1459-1459"];
m7_379 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="1025-1025"];
m7_381 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="1044-1044"];
m7_382 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes><available_sizes>113</available_sizes><available_sizes>150</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>189</available_sizes><available_sizes>250</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>341</available_sizes><available_sizes>450</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-450x450.jpg</available_sizes></available_sizes></myRoot>'', newDoc.InnerXml)", span="1046-1046"];
m7_380 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      [113, 150],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      [189, 250],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      [341, 450],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-450x450.jpg''''\r\n    ]\r\n  ]\r\n}''", span="1027-1042"];
m7_383 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1049-1049"];
m7_511 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<root><Int16>1</Int16><Float>2</Float><Int32>3</Int32></root>'', value.InnerXml)", span="1566-1566"];
m7_483 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="string xml = @''<test>\r\n  <Name>Hi</Name>\r\n  <Name>Hi</Name>\r\n  <Products json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <Name>First</Name>\r\n    <ExpiryDate>2000-01-01T00:00:00Z</ExpiryDate>\r\n    <Price>0</Price>\r\n    <Sizes />\r\n  </Products>\r\n</test>''", span="1454-1463"];
m7_499 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="string xml = @''<root>\r\n<Reports d1p1:Array=''''true'''' xmlns:d1p1=''''http://james.newtonking.com/projects/json'''' />\r\n</root>''", span="1538-1540"];
m7_507 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="var obj = JObject.FromObject(dict)", span="1560-1560"];
m7_503 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''root'''': {\r\n    ''''Reports'''': [\r\n      {}\r\n    ]\r\n  }\r\n}'', json)", span="1547-1553"];
m7_487 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': [\r\n    ''''Hi'''',\r\n    ''''Hi''''\r\n  ],\r\n  ''''Products'''': [\r\n    {\r\n      ''''Name'''': ''''First'''',\r\n      ''''ExpiryDate'''': ''''2000-01-01T00:00:00Z'''',\r\n      ''''Price'''': ''''0'''',\r\n      ''''Sizes'''': null\r\n    }\r\n  ]\r\n}'', output)", span="1470-1483"];
m7_501 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="d.LoadXml(xml)", span="1543-1543"];
m7_509 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="var reader = obj.CreateReader()", span="1562-1562"];
m7_513 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="XmlNodeConverterTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m7_525 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="XmlNodeConverterTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m7_485 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="d.LoadXml(xml)", span="1466-1466"];
m7_481 [cluster="Unk.Flush", file="XmlNodeConverterTest.cs", label="Entry Unk.Flush", span=""];
m7_505 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", span="1557-1557"];
m7_541 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="XmlNodeConverterTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m7_477 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="return sw.ToString();", span="1448-1448"];
m7_510 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="var value = (XmlDocument)serializer.Deserialize(reader, typeof(XmlDocument))", span="1564-1564"];
m7_482 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", span="1452-1452"];
m7_526 [cluster="System.Text.Encoding.GetBytes(string)", file="XmlNodeConverterTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m7_498 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", span="1536-1536"];
m7_506 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="var dict = new Dictionary<string, object> { { ''Int16'', (short)1 }, { ''Float'', 2f }, { ''Int32'', 3 } }", span="1559-1559"];
m7_514 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="343-343"];
m7_478 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="1434-1434"];
m7_502 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXmlNode(d, Formatting.Indented)", span="1545-1545"];
m7_486 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="string output = JsonConvert.SerializeXmlNode(d, Formatting.Indented, true)", span="1468-1468"];
m7_542 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="XmlNodeConverterTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m7_500 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="XmlDocument d = new XmlDocument()", span="1542-1542"];
m7_508 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings { Converters = { new XmlNodeConverter() { DeserializeRootElementName = ''root'' } } })", span="1561-1561"];
m7_512 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", span="1557-1557"];
m7_516 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1641-1641"];
m7_484 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="XmlDocument d = new XmlDocument()", span="1465-1465"];
m7_480 [cluster="Unk.WriteNode", file="XmlNodeConverterTest.cs", label="Entry Unk.WriteNode", span=""];
m7_504 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", span="1536-1536"];
m7_488 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", span="1452-1452"];
m7_137 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteValue((decimal)value)", span="508-508"];
m7_138 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="value is double", span="509-509"];
m7_139 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteValue((double)value)", span="510-510"];
m7_153 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.EndArray", span="531-531"];
m7_157 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.Date", span="537-537"];
m7_161 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.Raw", span="545-545"];
m7_162 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteRawValue((reader.Value != null) ? reader.Value.ToString() : null)", span="546-546"];
m7_163 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.Bytes", span="548-548"];
m7_166 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="initialDepth - 1 < reader.Depth - (IsEndToken(reader.TokenType) ? 1 : 0)\r\n        && writeChildren\r\n        && reader.Read()", span="557-559"];
m7_171 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1236-1236"];
m7_140 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="value is float", span="511-511"];
m7_141 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteValue((float)value)", span="512-512"];
m7_142 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteValue(Convert.ToDouble(value, CultureInfo.InvariantCulture))", span="514-514"];
m7_143 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.String", span="516-516"];
m7_149 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.Undefined", span="525-525"];
m7_144 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteValue(reader.Value.ToString())", span="517-517"];
m7_145 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.Boolean", span="519-519"];
m7_146 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteValue(Convert.ToBoolean(reader.Value, CultureInfo.InvariantCulture))", span="520-520"];
m7_147 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.Null", span="522-522"];
m7_148 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteNull()", span="523-523"];
m7_150 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteUndefined()", span="526-526"];
m7_151 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.EndObject", span="528-528"];
m7_152 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteEndObject()", span="529-529"];
m7_154 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteEndArray()", span="532-532"];
m7_155 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="JsonToken.EndConstructor", span="534-534"];
m7_156 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteEndConstructor()", span="535-535"];
m7_158 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="reader.Value is DateTimeOffset", span="539-539"];
m7_170 [cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", span="562-562"];
m7_159 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteValue((DateTimeOffset)reader.Value)", span="540-540"];
m7_160 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteValue(Convert.ToDateTime(reader.Value, CultureInfo.InvariantCulture))", span="543-543"];
m7_165 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''TokenType'', reader.TokenType, ''Unexpected token type.'');", span="552-552"];
m7_164 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="WriteValue((byte[])reader.Value)", span="549-549"];
m7_167 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", span="463-463"];
m7_69 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="363-363"];
m7_70 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="XmlNodeConverterTest.cs", label="InternalWriteEnd(JsonContainerType.Object)", span="365-365"];
m7_71 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteEndObject()", span="363-363"];
m7_72 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteEnd(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteEnd(Newtonsoft.Json.JsonContainerType)", span="1479-1479"];
m7_78 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteEndArray()", span="379-379"];
m7_73 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="371-371"];
m7_74 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="XmlNodeConverterTest.cs", label="InternalWriteStart(JsonToken.StartArray, JsonContainerType.Array)", span="373-373"];
m7_76 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="379-379"];
m7_75 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteStartArray()", span="371-371"];
m7_77 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="XmlNodeConverterTest.cs", label="InternalWriteEnd(JsonContainerType.Array)", span="381-381"];
m7_79 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="388-388"];
m7_572 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs", label="XmlDocument xmldoc = JsonConvert.DeserializeXmlNode(json)", span="2093-2093"];
m7_21 [cluster="System.Collections.Generic.List<T>.Add(T)", file="XmlNodeConverterTest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m7_293 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="WriteIndentSpace()", span="756-756"];
m7_284 [cluster="Newtonsoft.Json.JsonWriter.WriteIndentSpace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteIndentSpace()", span="736-736"];
m7_285 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", span="740-740"];
m7_286 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="State newState = StateArray[(int)tokenBeingWritten][(int)_currentState]", span="743-743"];
m7_287 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="newState == State.Error", span="745-745"];
m7_288 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="throw JsonWriterException.Create(this, ''Token {0} in state {1} would result in an invalid JSON object.''.FormatWith(CultureInfo.InvariantCulture, tokenBeingWritten.ToString(), _currentState.ToString()), null);", span="746-746"];
m7_289 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="(_currentState == State.Object || _currentState == State.Array || _currentState == State.Constructor) && tokenBeingWritten != JsonToken.Comment", span="748-748"];
m7_93 [cluster="Unk.SerializeXNode", file="XmlNodeConverterTest.cs", label="Entry Unk.SerializeXNode", span=""];
m7_436 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="XmlNodeConverterTest.cs", label="WriteNull()", span="1166-1166"];
m7_573 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<item action=''''update'''' itemid=''''1'''' description=''''temp''''><elements action=''''none'''' id=''''2'''' /><elements action=''''none'''' id=''''3'''' /></item>'', xmldoc.InnerXml)", span="2095-2095"];
m7_576 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="var xmlString = @''<root xmlns=''''http://www.example.com/ns''''>\r\n  <a/>\r\n  <bns:b xmlns:bns=''''http://www.example.com/ns''''/>\r\n  <c/>\r\n</root>''", span="2101-2105"];
m7_578 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="var json1 = JsonConvert.SerializeObject(xml)", span="2110-2110"];
m7_580 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="var xml1 = new XmlDocument()", span="2115-2115"];
m7_584 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", span="2099-2099"];
m7_586 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="var xml = new NullableXml { Name = ''test'', notNull = XElement.Parse(''<root>test</root>'') }", span="2135-2135"];
m7_588 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="var w2 = JsonConvert.DeserializeObject<NullableXml>(json)", span="2138-2138"];
m7_603 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2166-2166"];
m7_575 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", span="2099-2099"];
m7_577 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="var xml = XElement.Parse(xmlString)", span="2108-2108"];
m7_579 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''root'''':{''''@xmlns'''':''''http://www.example.com/ns'''',''''a'''':null,''''bns:b'''':{''''@xmlns:bns'''':''''http://www.example.com/ns''''},''''c'''':null}}'', json1)", span="2112-2112"];
m7_582 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="var json2 = JsonConvert.SerializeObject(xml1)", span="2118-2118"];
m7_585 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", span="2133-2133"];
m7_587 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(xml)", span="2136-2136"];
m7_574 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", span="2089-2089"];
m7_604 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'>Asd</b>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="2168-2172"];
m7_583 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''root'''':{''''@xmlns'''':''''http://www.example.com/ns'''',''''a'''':null,''''bns:b'''':{''''@xmlns:bns'''':''''http://www.example.com/ns''''},''''c'''':null}}'', json2)", span="2120-2120"];
m7_581 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="xml1.LoadXml(xmlString)", span="2116-2116"];
m7_589 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(xml.Name, w2.Name)", span="2139-2139"];
m7_594 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="499-499"];
m7_590 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(xml.isNull, w2.isNull)", span="2140-2140"];
m7_591 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(xml.notNull.ToString(), w2.notNull.ToString())", span="2141-2141"];
m7_592 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", span="2133-2133"];
m7_605 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="XmlDocument xml = new XmlDocument()", span="2174-2174"];
m7_290 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="WriteValueDelimiter()", span="750-750"];
m7_291 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="_formatting == Formatting.Indented", span="753-753"];
m7_292 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="_currentState == State.Property", span="755-755"];
m7_89 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="XDocument doc = JsonConvert.DeserializeXNode(json)", span="185-185"];
m7_90 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<root>\r\n  <p>Text1 Text2<span>Span1</span><span>Span2</span></p>\r\n</root>'', doc.ToString())", span="187-189"];
m7_91 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", span="177-177"];
m7_191 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(jsonText)", span="401-401"];
m7_353 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="891-891"];
m7_354 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string)", span="1012-1012"];
m7_218 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="return builder.ToString();", span="522-522"];
m7_217 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="doc.Save(writer)", span="520-520"];
m7_216 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="var writer = XmlWriter.Create(new Utf8StringWriter(builder), new XmlWriterSettings { Indent = indent })", span="518-518"];
m7_215 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="StringBuilder builder = new StringBuilder()", span="517-517"];
m7_219 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", span="515-515"];
m7_189 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, jsonText)", span="398-398"];
m7_349 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="XmlNodeConverterTest.cs", label="InternalWriteValue(JsonToken.Date)", span="941-941"];
m7_350 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="939-939"];
m7_183 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="386-386"];
m7_303 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="761-761"];
m7_304 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="string jsonText = @''{root:{r:new Date(34343, 55)}}''", span="763-763"];
m7_135 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool)", file="XmlNodeConverterTest.cs", label="object value = reader.Value", span="505-505"];
m7_179 [cluster="Unk.CreateElement", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateElement", span=""];
m7_136 [cluster="System.Console.WriteLine()", file="XmlNodeConverterTest.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m7_23 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.JsonWriter()", span="108-108"];
m7_186 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="fragement.InnerXml = ''<Item>widget</Item><Item>widget</Item>''", span="392-392"];
m7_188 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="string expected = @''{''''Item'''':[''''widget'''',''''widget'''']}''", span="396-396"];
m7_85 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", span="177-177"];
m7_86 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="string xml = ''<root><p>Text1<span>Span1</span> <span>Span2</span> Text2</p></root>''", span="179-179"];
m7_87 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXNode(XElement.Parse(xml))", span="181-181"];
m7_88 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''root'''':{''''p'''':{''''#text'''':[''''Text1'''','''' Text2''''],''''span'''':[''''Span1'''',''''Span2'''']}}}'', json)", span="183-183"];
m7_610 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2166-2166"];
m7_611 [cluster="Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", file="XmlNodeConverterTest.cs", label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", span=""];
m7_612 [cluster="Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", file="XmlNodeConverterTest.cs", label=json, span=""];
m7_335 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="869-869"];
m7_336 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175"];
m7_337 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="875-875"];
m7_244 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="_currentPosition.Type == type", span="652-652"];
m7_366 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="XmlNodeConverterTest.cs", label="WriteNull()", span="993-993"];
m7_80 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="XmlNodeConverterTest.cs", label="InternalWriteStart(JsonToken.StartConstructor, JsonContainerType.Constructor)", span="390-390"];
m7_305 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="765-765"];
m7_306 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="string expected = @''<root><r><Date>34343</Date><Date>55</Date></r></root>''", span="767-767"];
m7_307 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, newDoc.InnerXml)", span="769-769"];
m7_424 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n                new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="1222-1223"];
m7_426 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="XmlNode node = DeserializeXmlNode(json, ''root'')", span="1236-1236"];
m7_427 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string xml = GetIndentedInnerXml(node)", span="1237-1237"];
m7_425 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="1225-1234"];
m7_428 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string expected = @''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <other json:id=''''2''''>\r\n    <blah />\r\n  </other>\r\n  <self json:ref=''''1'''' />\r\n</root>''", span="1238-1244"];
m7_608 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var xmlBack = JsonConvert.DeserializeObject<XmlDocument>(json1)", span="2178-2178"];
m7_609 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<root><b xmlns=''''http://www.example.com/ns''''>Asd</b><c>AAA</c><test>adad</test></root>'', xmlBack.OuterXml)", span="2180-2180"];
m7_441 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="XmlNodeConverterTest.cs", label="WriteNull()", span="1178-1178"];
m7_294 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="(_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.Constructor || _currentState == State.ConstructorStart)\r\n          || (tokenBeingWritten == JsonToken.PropertyName && _currentState != State.Start)", span="759-760"];
m7_295 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="WriteIndent()", span="761-761"];
m7_296 [cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="XmlNodeConverterTest.cs", label="_currentState = newState", span="764-764"];
m7_345 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", file="XmlNodeConverterTest.cs", label="InternalWriteValue(JsonToken.Integer)", span="923-923"];
m7_344 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", span="921-921"];
m7_346 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", span="921-921"];
m7_442 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="XmlNodeConverterTest.cs", label="WriteValue(value.Value)", span="1180-1180"];
m7_443 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", span="1175-1175"];
m7_571 [cluster="object.GetType()", file="XmlNodeConverterTest.cs", label="Entry object.GetType()", span="0-0"];
m7_64 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="512-512"];
m7_230 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="537-537"];
m7_231 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n		<xs:complexType>\r\n			<xs:choice maxOccurs=''''unbounded''''>\r\n				<xs:element name=''''customers'''' >\r\n					<xs:complexType >\r\n						<xs:sequence>\r\n							<xs:element name=''''CustomerID'''' type=''''xs:integer'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''CompanyName'''' type=''''xs:string'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''Phone'''' type=''''xs:string'''' />\r\n						</xs:sequence>\r\n					</xs:complexType>\r\n				</xs:element>\r\n			</xs:choice>\r\n		</xs:complexType>\r\n	</xs:element>\r\n</xs:schema>''", span="539-561"];
m7_27 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", span="88-88"];
m7_28 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.JsonWriter()", span="293-293"];
m7_29 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="XmlNodeConverterTest.cs", label="_stack = new List<JsonPosition>(4)", span="295-295"];
m7_32 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="XmlNodeConverterTest.cs", label="_dateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind", span="298-298"];
m7_33 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="XmlNodeConverterTest.cs", label="CloseOutput = true", span="300-300"];
m7_36 [cluster="Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", span="303-303"];
m7_30 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="XmlNodeConverterTest.cs", label="_currentState = State.Start", span="296-296"];
m7_34 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.JsonWriter()", span="293-293"];
m7_31 [cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="XmlNodeConverterTest.cs", label="_formatting = Formatting.None", span="297-297"];
m7_38 [cluster="Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", file="XmlNodeConverterTest.cs", label="_currentPosition.Position++", span="306-306"];
m7_37 [cluster="Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", file="XmlNodeConverterTest.cs", label="_currentPosition.HasIndex", span="305-305"];
m7_39 [cluster="Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", span="303-303"];
m7_434 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1163-1163"];
m7_19 [cluster="Unk.Get", file="XmlNodeConverterTest.cs", label="Entry Unk.Get", span=""];
m7_384 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="1039-1039"];
m7_385 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="XmlNodeConverterTest.cs", label="value == null", span="1041-1041"];
m7_190 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DocumentFragmentSerialize'')", span="400-400"];
m7_212 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", span="515-515"];
m7_626 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteComment()", file="XmlNodeConverterTest.cs", label="AutoComplete(JsonToken.Comment)", span="1518-1518"];
m7_627 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteComment()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.InternalWriteComment()", span="1516-1516"];
m7_81 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="388-388"];
m7_607 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="XmlNodeConverterTest.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m7_264 [cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="JsonContainerType currentLevelType = Peek()", span="689-689"];
m7_193 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="386-386"];
m7_192 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine()", span="402-402"];
m7_194 [cluster="Unk.CreateDocumentFragment", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateDocumentFragment", span=""];
m7_176 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="865-865"];
m7_242 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine()", span="622-622"];
m7_246 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="string jsonText = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''span'''': {\r\n        ''''@class'''': ''''summary'''',\r\n        ''''#text'''': ''''Web 2.0 Conference'''',\r\n        ''''#cdata-section'''': ''''my escaped text''''\r\n      },\r\n      ''''@href'''': ''''http://www.web2con.com/''''\r\n    }\r\n  }\r\n}''", span="628-645"];
m7_250 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DocumentDeserialize'')", span="658-658"];
m7_254 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="626-626"];
m7_243 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="537-537"];
m7_245 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="626-626"];
m7_247 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(jsonText)", span="647-647"];
m7_249 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="string formattedXml = GetIndentedInnerXml(doc)", span="656-656"];
m7_251 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(formattedXml)", span="659-659"];
m7_252 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine()", span="660-660"];
m7_253 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, formattedXml)", span="662-662"];
m7_248 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>\r\n    <span class=''''summary''''>Web 2.0 Conference<![CDATA[my escaped text]]></span>\r\n  </a>\r\n</span>''", span="649-654"];
m7_56 [cluster="Newtonsoft.Json.JsonWriter.Peek()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.Peek()", span="334-334"];
m7_57 [cluster="Newtonsoft.Json.JsonWriter.Peek()", file="XmlNodeConverterTest.cs", label="return _currentPosition.Type;", span="336-336"];
m7_59 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="string json2 = JsonConvert.SerializeObject(doc1, Formatting.Indented)", span="140-140"];
m7_58 [cluster="Newtonsoft.Json.JsonWriter.Peek()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.Peek()", span="334-334"];
m7_60 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="DecimalContainer x2 = JsonConvert.DeserializeObject<DecimalContainer>(json2)", span="142-142"];
m7_332 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="869-869"];
m7_333 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs", label="string json = @''{''''count'''': 773840,''''photos'''': null}''", span="871-871"];
m7_334 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'',\r\n                () => { JsonConvert.DeserializeXmlNode(json); })", span="873-875"];
m7_68 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", span="1494-1494"];
m7_457 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="XmlNodeConverterTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m7_459 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="523-523"];
m7_232 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="563-563"];
m7_240 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(jsonText)", span="620-620"];
m7_233 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="564-564"];
m7_235 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''xs:schema'''': {\r\n    ''''@xs:id'''': ''''SomeID'''',\r\n    ''''@xmlns'''': '''''''',\r\n    ''''@xmlns:xs'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''xs:element'''': {\r\n      ''''@name'''': ''''MyDataSet'''',\r\n      ''''@msdata:IsDataSet'''': ''''true'''',\r\n      ''''xs:complexType'''': {\r\n        ''''xs:choice'''': {\r\n          ''''@maxOccurs'''': ''''unbounded'''',\r\n          ''''xs:element'''': {\r\n            ''''@name'''': ''''customers'''',\r\n            ''''xs:complexType'''': {\r\n              ''''xs:sequence'''': {\r\n                ''''xs:element'''': [\r\n                  {\r\n                    ''''@name'''': ''''CustomerID'''',\r\n                    ''''@type'''': ''''xs:integer'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''CompanyName'''',\r\n                    ''''@type'''': ''''xs:string'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''Phone'''',\r\n                    ''''@type'''': ''''xs:string''''\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="568-611"];
m7_237 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="XmlDocument deserializedDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="615-615"];
m7_239 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''NamespaceSerializeDeserialize'')", span="619-619"];
m7_234 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="string jsonText = SerializeXmlNode(doc)", span="566-566"];
m7_236 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, jsonText)", span="613-613"];
m7_238 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(doc.InnerXml, deserializedDoc.InnerXml)", span="617-617"];
m7_241 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(deserializedDoc.InnerXml)", span="621-621"];
m7_614 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label=json, span=""];
m7_615 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="AutoComplete(token)", span="1497-1497"];
m7_616 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="Push(container)", span="1498-1498"];
m7_617 [cluster="Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", span="1494-1494"];
m7_625 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", span="76-76"];
m7_628 [file="XmlNodeConverterTest.cs", label="Newtonsoft.Json.JsonWriter", span=""];
m0_128 -> m0_405  [key=0, style=solid];
m0_405 -> m0_406  [key=0, style=solid];
m0_405 -> m0_207  [key=2, style=dotted];
m0_406 -> m0_407  [key=0, style=solid];
m0_406 -> m0_408  [key=2, style=dotted];
m0_407 -> m0_128  [color=blue, key=0, style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_3  [color=blue, key=0, style=bold];
m0_31 -> m0_32  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [key=2, style=dotted];
m0_33 -> m0_31  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_5  [color=blue, key=0, style=bold];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [color=darkorchid, key=3, label="method methodReturn string ReadElement", style=bold];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_29  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_30  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_28 -> m0_24  [color=blue, key=0, style=bold];
m0_29 -> m0_413  [key=0, style=solid];
m0_413 -> m0_414  [key=0, style=solid];
m0_413 -> m0_207  [key=2, style=dotted];
m0_414 -> m0_415  [key=0, style=solid];
m0_414 -> m0_416  [key=2, style=dotted];
m0_415 -> m0_29  [color=blue, key=0, style=bold];
m0_129 -> m0_335  [key=0, style=solid];
m0_129 -> m0_337  [color=darkorchid, key=3, label="method methodReturn string ReadLengthString", style=bold];
m0_335 -> m0_336  [key=0, style=solid];
m0_335 -> m0_128  [key=2, style=dotted];
m0_335 -> m0_337  [color=darkseagreen4, key=1, label=length, style=dashed];
m0_336 -> m0_337  [key=0, style=solid];
m0_336 -> m0_207  [key=2, style=dotted];
m0_337 -> m0_338  [key=0, style=solid];
m0_337 -> m0_341  [key=2, style=dotted];
m0_337 -> m0_339  [color=darkseagreen4, key=1, label=s, style=dashed];
m0_338 -> m0_339  [key=0, style=solid];
m0_338 -> m0_221  [key=2, style=dotted];
m0_339 -> m0_340  [key=0, style=solid];
m0_340 -> m0_129  [color=blue, key=0, style=bold];
m0_204 -> m0_222  [key=0, style=solid];
m0_204 -> m0_282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonType", style=dashed];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_228  [key=0, style=solid];
m0_222 -> m0_231  [key=0, style=solid];
m0_222 -> m0_236  [key=0, style=solid];
m0_222 -> m0_241  [key=0, style=solid];
m0_222 -> m0_243  [color=green, key=0, style=solid];
m0_222 -> m0_245  [color=green, key=0, style=solid];
m0_222 -> m0_248  [key=0, style=solid];
m0_222 -> m0_251  [key=0, style=solid];
m0_222 -> m0_262  [key=0, style=solid];
m0_222 -> m0_264  [key=0, style=solid];
m0_222 -> m0_269  [key=0, style=solid];
m0_222 -> m0_272  [key=0, style=solid];
m0_222 -> m0_274  [key=0, style=solid];
m0_222 -> m0_277  [key=0, style=solid];
m0_222 -> m0_279  [key=0, style=solid];
m0_222 -> m0_282  [key=0, style=solid];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_292  [key=2, style=dotted];
m0_223 -> m0_224  [key=0, style=solid];
m0_228 -> m0_229  [key=0, style=solid];
m0_231 -> m0_232  [key=0, style=solid];
m0_236 -> m0_237  [key=0, style=solid];
m0_241 -> m0_242  [color=green, key=0, style=solid];
m0_243 -> m0_244  [color=green, key=0, style=solid];
m0_245 -> m0_246  [color=green, key=0, style=solid];
m0_248 -> m0_249  [key=0, style=solid];
m0_251 -> m0_252  [key=0, style=solid];
m0_262 -> m0_263  [key=0, style=solid];
m0_264 -> m0_265  [key=0, style=solid];
m0_269 -> m0_270  [key=0, style=solid];
m0_272 -> m0_273  [key=0, style=solid];
m0_274 -> m0_275  [key=0, style=solid];
m0_277 -> m0_278  [key=0, style=solid];
m0_279 -> m0_280  [key=0, style=solid];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_284  [key=2, style=dotted];
m0_224 -> m0_226  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_224 -> m0_227  [color=darkseagreen4, key=1, label=d, style=dashed];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_227  [key=0, style=solid];
m0_226 -> m0_283  [key=0, style=solid];
m0_226 -> m0_285  [key=2, style=dotted];
m0_226 -> m0_127  [key=2, style=dotted];
m0_227 -> m0_283  [key=0, style=solid];
m0_227 -> m0_127  [key=2, style=dotted];
m0_229 -> m0_230  [key=0, style=solid];
m0_230 -> m0_283  [key=0, style=solid];
m0_230 -> m0_129  [key=2, style=dotted];
m0_230 -> m0_127  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_88  [key=2, style=dotted];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_0  [key=2, style=dotted];
m0_233 -> m0_235  [color=darkseagreen4, key=1, label=newContext, style=dashed];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_130  [key=2, style=dotted];
m0_235 -> m0_283  [key=0, style=solid];
m0_235 -> m0_128  [key=2, style=dotted];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_88  [key=2, style=dotted];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_0  [key=2, style=dotted];
m0_238 -> m0_240  [color=darkseagreen4, key=1, label=newContext, style=dashed];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_130  [key=2, style=dotted];
m0_240 -> m0_283  [key=0, style=solid];
m0_240 -> m0_128  [key=2, style=dotted];
m0_242 -> m0_283  [color=green, key=0, style=solid];
m0_242 -> m0_286  [color=green, key=2, style=dotted];
m0_242 -> m0_127  [color=green, key=2, style=dotted];
m0_244 -> m0_283  [color=green, key=0, style=solid];
m0_244 -> m0_88  [color=green, key=2, style=dotted];
m0_246 -> m0_247  [color=green, key=0, style=solid];
m0_246 -> m0_157  [color=green, key=2, style=dotted];
m0_247 -> m0_283  [color=green, key=0, style=solid];
m0_247 -> m0_127  [color=green, key=2, style=dotted];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_205  [key=2, style=dotted];
m0_249 -> m0_287  [key=2, style=dotted];
m0_250 -> m0_283  [key=0, style=solid];
m0_250 -> m0_127  [key=2, style=dotted];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_288  [key=2, style=dotted];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_289  [key=2, style=dotted];
m0_253 -> m0_257  [color=darkseagreen4, key=1, label=utcDateTime, style=dashed];
m0_253 -> m0_259  [color=darkseagreen4, key=1, label=utcDateTime, style=dashed];
m0_253 -> m0_260  [color=darkseagreen4, key=1, label=utcDateTime, style=dashed];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_253  [color=darkorchid, key=3, label="Local variable System.DateTime dateTime", style=bold];
m0_257 -> m0_261  [key=0, style=solid];
m0_257 -> m0_290  [key=2, style=dotted];
m0_259 -> m0_261  [key=0, style=solid];
m0_259 -> m0_291  [key=2, style=dotted];
m0_260 -> m0_261  [key=0, style=solid];
m0_255 -> m0_256  [key=0, style=solid];
m0_255 -> m0_258  [key=0, style=solid];
m0_255 -> m0_260  [key=0, style=solid];
m0_256 -> m0_257  [key=0, style=solid];
m0_258 -> m0_259  [key=0, style=solid];
m0_261 -> m0_283  [key=0, style=solid];
m0_261 -> m0_127  [key=2, style=dotted];
m0_263 -> m0_283  [key=0, style=solid];
m0_263 -> m0_88  [key=2, style=dotted];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_30  [key=2, style=dotted];
m0_265 -> m0_267  [color=darkseagreen4, key=1, label=expression, style=dashed];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_30  [key=2, style=dotted];
m0_267 -> m0_268  [key=0, style=solid];
m0_268 -> m0_283  [key=0, style=solid];
m0_268 -> m0_127  [key=2, style=dotted];
m0_270 -> m0_271  [key=0, style=solid];
m0_270 -> m0_88  [key=2, style=dotted];
m0_271 -> m0_283  [key=0, style=solid];
m0_273 -> m0_283  [key=0, style=solid];
m0_273 -> m0_129  [key=2, style=dotted];
m0_273 -> m0_127  [key=2, style=dotted];
m0_275 -> m0_276  [key=0, style=solid];
m0_275 -> m0_88  [key=2, style=dotted];
m0_276 -> m0_283  [key=0, style=solid];
m0_278 -> m0_283  [key=0, style=solid];
m0_278 -> m0_128  [key=2, style=dotted];
m0_278 -> m0_127  [key=2, style=dotted];
m0_280 -> m0_281  [key=0, style=solid];
m0_281 -> m0_283  [key=0, style=solid];
m0_281 -> m0_288  [key=2, style=dotted];
m0_281 -> m0_127  [key=2, style=dotted];
m0_283 -> m0_204  [color=blue, key=0, style=bold];
m0_383 -> m0_384  [key=0, style=solid];
m0_383 -> m0_386  [color=darkseagreen4, key=1, label=byte, style=dashed];
m0_383 -> m0_388  [color=darkseagreen4, key=1, label=byte, style=dashed];
m0_383 -> m0_390  [color=darkseagreen4, key=1, label=byte, style=dashed];
m0_383 -> m0_110  [color=darkorchid, key=3, label="method methodReturn int BytesInSequence", style=bold];
m0_383 -> m0_237  [color=darkorchid, key=3, label="method methodReturn int BytesInSequence", style=bold];
m0_383 -> m0_98  [color=darkorchid, key=3, label="method methodReturn int BytesInSequence", style=bold];
m0_383 -> m0_76  [color=darkorchid, key=3, label="method methodReturn int BytesInSequence", style=bold];
m0_384 -> m0_385  [key=0, style=solid];
m0_384 -> m0_386  [key=0, style=solid];
m0_386 -> m0_387  [key=0, style=solid];
m0_386 -> m0_388  [key=0, style=solid];
m0_388 -> m0_389  [key=0, style=solid];
m0_388 -> m0_390  [key=0, style=solid];
m0_390 -> m0_391  [key=0, style=solid];
m0_390 -> m0_392  [key=0, style=solid];
m0_385 -> m0_393  [key=0, style=solid];
m0_387 -> m0_393  [key=0, style=solid];
m0_389 -> m0_393  [key=0, style=solid];
m0_391 -> m0_393  [key=0, style=solid];
m0_392 -> m0_393  [key=0, style=solid];
m0_393 -> m0_383  [color=blue, key=0, style=bold];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_77  [color=darkorchid, key=3, label="method methodReturn bool ReadInternal", style=bold];
m0_59 -> m0_78  [color=darkorchid, key=3, label="method methodReturn bool ReadInternal", style=bold];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_83  [color=darkorchid, key=3, label="Local variable bool success", style=bold];
m0_60 -> m0_84  [color=darkorchid, key=3, label="Local variable bool success", style=bold];
m0_60 -> m0_85  [color=darkorchid, key=3, label="Local variable bool success", style=bold];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_64  [key=0, style=solid];
m0_61 -> m0_68  [key=0, style=solid];
m0_61 -> m0_74  [key=0, style=solid];
m0_61 -> m0_40  [color=green, key=3, label="Parameter variable string resolvedEnumName", style=bold];
m0_61 -> m0_67  [color=green, key=3, label="method methodReturn bool TryResolvedEnumName", style=bold];
m0_62 -> m0_63  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_74 -> m0_82  [key=0, style=solid];
m0_74 -> m0_86  [key=2, style=dotted];
m0_74 -> m0_87  [key=2, style=dotted];
m0_63 -> m0_75  [key=0, style=solid];
m0_63 -> m0_83  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_67 -> m0_75  [key=0, style=solid];
m0_67 -> m0_84  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_70 -> m0_71  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid];
m0_72 -> m0_73  [key=0, style=solid];
m0_73 -> m0_75  [key=0, style=solid];
m0_73 -> m0_85  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_78  [key=0, style=solid];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_88  [key=2, style=dotted];
m0_78 -> m0_82  [key=0, style=solid];
m0_77 -> m0_82  [key=0, style=solid];
m0_79 -> m0_80  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_88  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_82 -> m0_59  [color=blue, key=0, style=bold];
m0_157 -> m0_419  [key=0, style=solid];
m0_157 -> m0_420  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_157 -> m0_244  [color=green, key=3, label="Parameter variable int count", style=bold];
m0_157 -> m0_293  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_419 -> m0_420  [key=0, style=solid];
m0_419 -> m0_207  [key=2, style=dotted];
m0_420 -> m0_421  [key=0, style=solid];
m0_420 -> m0_422  [key=2, style=dotted];
m0_421 -> m0_157  [color=blue, key=0, style=bold];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [color=darkseagreen4, key=1, label="System.IO.BinaryReader", style=dashed];
m0_17 -> m0_21  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_17 -> m0_22  [color=darkseagreen4, key=1, label="System.DateTimeKind", style=dashed];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_14  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_16  [key=2, style=dotted];
m0_23 -> m0_17  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m0_7 -> m0_11  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_7 -> m0_12  [color=darkseagreen4, key=1, label="System.DateTimeKind", style=dashed];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_14  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_15  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_16  [key=2, style=dotted];
m0_13 -> m0_7  [color=blue, key=0, style=bold];
m0_207 -> m0_417  [key=0, style=solid];
m0_207 -> m0_110  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_207 -> m0_335  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_207 -> m0_226  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_207 -> m0_98  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_207 -> m0_157  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
m0_417 -> m0_418  [key=0, style=solid];
m0_418 -> m0_207  [color=blue, key=0, style=bold];
m0_51 -> m0_52  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_54  [key=2, style=dotted];
m0_53 -> m0_51  [color=blue, key=0, style=bold];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_59  [color=darkorchid, key=3, label="method methodReturn bool Read", style=bold];
m0_56 -> m0_57  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_59  [key=2, style=dotted];
m0_58 -> m0_55  [color=blue, key=0, style=bold];
m0_327 -> m0_394  [key=0, style=solid];
m0_394 -> m0_395  [key=0, style=solid];
m0_394 -> m0_396  [key=0, style=solid];
m0_395 -> m0_396  [key=0, style=solid];
m0_396 -> m0_397  [key=0, style=solid];
m0_396 -> m0_399  [key=0, style=solid];
m0_397 -> m0_398  [key=0, style=solid];
m0_397 -> m0_400  [key=2, style=dotted];
m0_398 -> m0_399  [key=0, style=solid];
m0_399 -> m0_327  [color=blue, key=0, style=bold];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_38  [key=2, style=dotted];
m0_37 -> m0_35  [color=blue, key=0, style=bold];
m0_89 -> m0_90  [key=0, style=solid];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_94  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_93  [key=0, style=solid];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_95  [key=2, style=dotted];
m0_93 -> m0_89  [color=blue, key=0, style=bold];
m0_83 -> m0_158  [key=0, style=solid];
m0_83 -> m0_78  [color=darkorchid, key=3, label="method methodReturn bool ReadNormal", style=bold];
m0_83 -> m0_77  [color=darkorchid, key=3, label="method methodReturn bool ReadNormal", style=bold];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_167  [key=0, style=solid];
m0_158 -> m0_170  [key=0, style=solid];
m0_158 -> m0_173  [key=0, style=solid];
m0_158 -> m0_197  [key=0, style=solid];
m0_158 -> m0_198  [key=0, style=solid];
m0_158 -> m0_199  [key=0, style=solid];
m0_158 -> m0_200  [key=0, style=solid];
m0_158 -> m0_201  [key=0, style=solid];
m0_159 -> m0_160  [key=0, style=solid];
m0_167 -> m0_168  [key=0, style=solid];
m0_170 -> m0_171  [key=0, style=solid];
m0_173 -> m0_174  [key=0, style=solid];
m0_197 -> m0_202  [key=0, style=solid];
m0_198 -> m0_202  [key=0, style=solid];
m0_199 -> m0_202  [key=0, style=solid];
m0_200 -> m0_202  [key=0, style=solid];
m0_201 -> m0_203  [key=0, style=solid];
m0_201 -> m0_131  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_162  [color=darkseagreen4, key=1, label=token, style=dashed];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_163  [color=darkseagreen4, key=1, label=type, style=dashed];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_88  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_0  [key=2, style=dotted];
m0_163 -> m0_165  [color=darkseagreen4, key=1, label=newContext, style=dashed];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_130  [key=2, style=dotted];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_128  [key=2, style=dotted];
m0_166 -> m0_203  [key=0, style=solid];
m0_168 -> m0_169  [key=0, style=solid];
m0_169 -> m0_203  [key=0, style=solid];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_204  [key=2, style=dotted];
m0_172 -> m0_203  [key=0, style=solid];
m0_174 -> m0_175  [key=0, style=solid];
m0_175 -> m0_176  [key=0, style=solid];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_179  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_176 -> m0_180  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_176 -> m0_181  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_176 -> m0_187  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_176 -> m0_192  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_176 -> m0_193  [color=darkseagreen4, key=1, label=context, style=dashed];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_179  [key=0, style=solid];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_187  [color=darkseagreen4, key=1, label=lengthMinusEnd, style=dashed];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_187  [key=0, style=solid];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_185  [key=0, style=solid];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_196  [key=0, style=solid];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_207  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_178 -> m0_203  [key=0, style=solid];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_24  [key=2, style=dotted];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_24  [key=2, style=dotted];
m0_185 -> m0_127  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_204  [key=2, style=dotted];
m0_184 -> m0_203  [key=0, style=solid];
m0_186 -> m0_203  [key=0, style=solid];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_190  [key=0, style=solid];
m0_188 -> m0_205  [key=2, style=dotted];
m0_196 -> m0_203  [key=0, style=solid];
m0_196 -> m0_87  [key=2, style=dotted];
m0_189 -> m0_203  [key=0, style=solid];
m0_189 -> m0_87  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_206  [key=2, style=dotted];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_193  [key=0, style=solid];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_88  [key=2, style=dotted];
m0_195 -> m0_203  [key=0, style=solid];
m0_202 -> m0_203  [key=0, style=solid];
m0_203 -> m0_83  [color=blue, key=0, style=bold];
m0_288 -> m0_409  [key=0, style=solid];
m0_409 -> m0_410  [key=0, style=solid];
m0_409 -> m0_207  [key=2, style=dotted];
m0_410 -> m0_411  [key=0, style=solid];
m0_410 -> m0_412  [key=2, style=dotted];
m0_411 -> m0_288  [color=blue, key=0, style=bold];
m0_47 -> m0_48  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_50  [key=2, style=dotted];
m0_49 -> m0_47  [color=blue, key=0, style=bold];
m0_43 -> m0_44  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_46  [key=2, style=dotted];
m0_45 -> m0_43  [color=blue, key=0, style=bold];
m0_284 -> m0_401  [key=0, style=solid];
m0_401 -> m0_402  [key=0, style=solid];
m0_401 -> m0_207  [key=2, style=dotted];
m0_402 -> m0_403  [key=0, style=solid];
m0_402 -> m0_404  [key=2, style=dotted];
m0_403 -> m0_284  [color=blue, key=0, style=bold];
m0_130 -> m0_214  [key=0, style=solid];
m0_130 -> m0_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader.ContainerContext", style=dashed];
m0_130 -> m0_112  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext", style=bold];
m0_130 -> m0_163  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext", style=bold];
m0_130 -> m0_233  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext", style=bold];
m0_130 -> m0_238  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext", style=bold];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_217  [key=2, style=dotted];
m0_215 -> m0_216  [key=0, style=solid];
m0_216 -> m0_130  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_84 -> m0_132  [key=0, style=solid];
m0_84 -> m0_78  [color=darkorchid, key=3, label="method methodReturn bool ReadReference", style=bold];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_137  [key=0, style=solid];
m0_132 -> m0_145  [key=0, style=solid];
m0_132 -> m0_155  [key=0, style=solid];
m0_133 -> m0_134  [key=0, style=solid];
m0_137 -> m0_138  [key=0, style=solid];
m0_145 -> m0_146  [key=0, style=solid];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_87  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_127  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_136 -> m0_156  [key=0, style=solid];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_141  [key=0, style=solid];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_129  [key=2, style=dotted];
m0_139 -> m0_127  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_144  [key=0, style=solid];
m0_140 -> m0_156  [key=0, style=solid];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_157  [key=2, style=dotted];
m0_142 -> m0_127  [key=2, style=dotted];
m0_144 -> m0_156  [key=0, style=solid];
m0_144 -> m0_87  [key=2, style=dotted];
m0_143 -> m0_156  [key=0, style=solid];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_150  [key=0, style=solid];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_127  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_154  [key=0, style=solid];
m0_148 -> m0_149  [key=0, style=solid];
m0_149 -> m0_156  [key=0, style=solid];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_88  [key=2, style=dotted];
m0_154 -> m0_156  [key=0, style=solid];
m0_154 -> m0_87  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_153 -> m0_156  [key=0, style=solid];
m0_156 -> m0_84  [color=blue, key=0, style=bold];
m0_39 -> m0_40  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=2, style=dotted];
m0_41 -> m0_39  [color=blue, key=0, style=bold];
m0_85 -> m0_96  [key=0, style=solid];
m0_85 -> m0_78  [color=darkorchid, key=3, label="method methodReturn bool ReadCodeWScope", style=bold];
m0_85 -> m0_117  [color=darkorchid, key=3, label="method methodReturn bool ReadCodeWScope", style=bold];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_101  [key=0, style=solid];
m0_96 -> m0_106  [key=0, style=solid];
m0_96 -> m0_116  [key=0, style=solid];
m0_96 -> m0_121  [key=0, style=solid];
m0_96 -> m0_125  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_106 -> m0_107  [key=0, style=solid];
m0_116 -> m0_117  [key=0, style=solid];
m0_121 -> m0_122  [key=0, style=solid];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_131  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_127  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_100 -> m0_126  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_128  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_129  [key=2, style=dotted];
m0_103 -> m0_127  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_105 -> m0_126  [key=0, style=solid];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_110  [key=0, style=solid];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_127  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_88  [key=2, style=dotted];
m0_109 -> m0_126  [key=0, style=solid];
m0_111 -> m0_112  [key=0, style=solid];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_0  [key=2, style=dotted];
m0_112 -> m0_114  [color=darkseagreen4, key=1, label=newContext, style=dashed];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_130  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_128  [key=2, style=dotted];
m0_115 -> m0_126  [key=0, style=solid];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_83  [key=2, style=dotted];
m0_117 -> m0_120  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_120  [key=0, style=solid];
m0_120 -> m0_126  [key=0, style=solid];
m0_119 -> m0_120  [key=0, style=solid];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_88  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_124 -> m0_126  [key=0, style=solid];
m0_126 -> m0_85  [color=blue, key=0, style=bold];
m0_341 -> m0_342  [key=0, style=solid];
m0_341 -> m0_348  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_341 -> m0_354  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_341 -> m0_359  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_341 -> m0_366  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_342 -> m0_343  [key=0, style=solid];
m0_342 -> m0_344  [key=0, style=solid];
m0_348 -> m0_349  [key=0, style=solid];
m0_354 -> m0_355  [key=0, style=solid];
m0_354 -> m0_357  [key=0, style=solid];
m0_359 -> m0_360  [key=0, style=solid];
m0_359 -> m0_331  [key=2, style=dotted];
m0_359 -> m0_361  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_359 -> m0_367  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_366 -> m0_347  [key=0, style=solid];
m0_366 -> m0_367  [key=0, style=solid];
m0_343 -> m0_368  [key=0, style=solid];
m0_344 -> m0_345  [key=0, style=solid];
m0_344 -> m0_327  [key=2, style=dotted];
m0_345 -> m0_346  [key=0, style=solid];
m0_345 -> m0_358  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_345 -> m0_361  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_345 -> m0_367  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_345 -> m0_300  [color=darkorchid, key=3, label="Local variable System.Text.StringBuilder builder", style=bold];
m0_346 -> m0_347  [key=0, style=solid];
m0_346 -> m0_348  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_346 -> m0_352  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_346 -> m0_76  [color=darkorchid, key=3, label="Local variable int totalBytesRead", style=bold];
m0_346 -> m0_349  [color=darkorchid, key=3, label="Local variable int totalBytesRead", style=bold];
m0_358 -> m0_359  [key=0, style=solid];
m0_358 -> m0_360  [key=0, style=solid];
m0_361 -> m0_362  [key=0, style=solid];
m0_361 -> m0_332  [key=2, style=dotted];
m0_367 -> m0_368  [key=0, style=solid];
m0_367 -> m0_334  [key=2, style=dotted];
m0_347 -> m0_348  [key=0, style=solid];
m0_347 -> m0_349  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_347 -> m0_353  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_347 -> m0_76  [color=darkorchid, key=3, label="Local variable int offset", style=bold];
m0_352 -> m0_353  [key=0, style=solid];
m0_352 -> m0_352  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_352 -> m0_366  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_349 -> m0_350  [key=0, style=solid];
m0_349 -> m0_369  [key=2, style=dotted];
m0_349 -> m0_352  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_349 -> m0_353  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_349 -> m0_347  [color=darkorchid, key=3, label="Local variable int byteCount", style=bold];
m0_353 -> m0_354  [key=0, style=solid];
m0_353 -> m0_353  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_353 -> m0_355  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_353 -> m0_357  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_353 -> m0_362  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_353 -> m0_363  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_350 -> m0_351  [key=0, style=solid];
m0_350 -> m0_352  [key=0, style=solid];
m0_351 -> m0_368  [key=0, style=solid];
m0_351 -> m0_370  [key=2, style=dotted];
m0_355 -> m0_356  [key=0, style=solid];
m0_355 -> m0_328  [key=2, style=dotted];
m0_357 -> m0_358  [key=0, style=solid];
m0_357 -> m0_330  [key=2, style=dotted];
m0_357 -> m0_360  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m0_357 -> m0_362  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m0_357 -> m0_363  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m0_357 -> m0_364  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m0_362 -> m0_363  [key=0, style=solid];
m0_362 -> m0_365  [key=0, style=solid];
m0_363 -> m0_364  [key=0, style=solid];
m0_356 -> m0_368  [key=0, style=solid];
m0_356 -> m0_329  [key=2, style=dotted];
m0_360 -> m0_361  [key=0, style=solid];
m0_360 -> m0_328  [key=2, style=dotted];
m0_364 -> m0_366  [key=0, style=solid];
m0_364 -> m0_333  [key=2, style=dotted];
m0_365 -> m0_366  [key=0, style=solid];
m0_368 -> m0_341  [color=blue, key=0, style=bold];
m0_30 -> m0_299  [key=0, style=solid];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_327  [key=2, style=dotted];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_309  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_300 -> m0_315  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_300 -> m0_317  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_300 -> m0_323  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_300 -> m0_300  [color=darkorchid, key=3, label="Local variable System.Text.StringBuilder builder", style=bold];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_308  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_301 -> m0_76  [color=darkorchid, key=3, label="Local variable int totalBytesRead", style=bold];
m0_301 -> m0_307  [color=darkorchid, key=3, label="Local variable int totalBytesRead", style=bold];
m0_309 -> m0_310  [key=0, style=solid];
m0_309 -> m0_313  [key=0, style=solid];
m0_315 -> m0_316  [key=0, style=solid];
m0_315 -> m0_317  [key=0, style=solid];
m0_317 -> m0_318  [key=0, style=solid];
m0_317 -> m0_332  [key=2, style=dotted];
m0_323 -> m0_326  [key=0, style=solid];
m0_323 -> m0_334  [key=2, style=dotted];
m0_302 -> m0_303  [key=0, style=solid];
m0_302 -> m0_307  [color=darkseagreen4, key=1, label=offset, style=dashed];
m0_302 -> m0_76  [color=darkorchid, key=3, label="Local variable int offset", style=bold];
m0_308 -> m0_309  [key=0, style=solid];
m0_308 -> m0_308  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_308 -> m0_311  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_308 -> m0_322  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
m0_303 -> m0_304  [key=0, style=solid];
m0_303 -> m0_305  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_303 -> m0_306  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_303 -> m0_307  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_303 -> m0_309  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_303 -> m0_313  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_303 -> m0_321  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_303 -> m0_302  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_310  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_307 -> m0_318  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_307 -> m0_319  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
m0_304 -> m0_305  [key=0, style=solid];
m0_305 -> m0_306  [key=0, style=solid];
m0_305 -> m0_307  [key=0, style=solid];
m0_305 -> m0_221  [key=2, style=dotted];
m0_306 -> m0_305  [key=0, style=solid];
m0_306 -> m0_306  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_306 -> m0_307  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_306 -> m0_309  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_306 -> m0_313  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_306 -> m0_321  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_313 -> m0_314  [key=0, style=solid];
m0_313 -> m0_330  [key=2, style=dotted];
m0_313 -> m0_318  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m0_313 -> m0_319  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m0_313 -> m0_320  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
m0_321 -> m0_322  [key=0, style=solid];
m0_321 -> m0_324  [key=0, style=solid];
m0_310 -> m0_311  [key=0, style=solid];
m0_310 -> m0_328  [key=2, style=dotted];
m0_310 -> m0_312  [color=darkseagreen4, key=1, label=length, style=dashed];
m0_318 -> m0_319  [key=0, style=solid];
m0_318 -> m0_321  [key=0, style=solid];
m0_319 -> m0_320  [key=0, style=solid];
m0_311 -> m0_312  [key=0, style=solid];
m0_311 -> m0_207  [key=2, style=dotted];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_207  [key=2, style=dotted];
m0_312 -> m0_326  [key=0, style=solid];
m0_312 -> m0_329  [key=2, style=dotted];
m0_314 -> m0_315  [key=0, style=solid];
m0_314 -> m0_328  [key=2, style=dotted];
m0_314 -> m0_317  [color=darkseagreen4, key=1, label=charCount, style=dashed];
m0_320 -> m0_325  [key=0, style=solid];
m0_320 -> m0_333  [key=2, style=dotted];
m0_316 -> m0_317  [key=0, style=solid];
m0_316 -> m0_331  [key=2, style=dotted];
m0_316 -> m0_323  [color=darkseagreen4, key=1, label=builder, style=dashed];
m0_324 -> m0_325  [key=0, style=solid];
m0_325 -> m0_302  [key=0, style=solid];
m0_325 -> m0_326  [key=0, style=solid];
m0_326 -> m0_30  [color=blue, key=0, style=bold];
m0_205 -> m0_218  [key=0, style=solid];
m0_218 -> m0_219  [key=0, style=solid];
m0_218 -> m0_207  [key=2, style=dotted];
m0_219 -> m0_220  [key=0, style=solid];
m0_219 -> m0_221  [key=2, style=dotted];
m0_220 -> m0_205  [color=blue, key=0, style=bold];
m0_206 -> m0_208  [key=0, style=solid];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_213  [key=2, style=dotted];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_211  [key=0, style=solid];
m0_210 -> m0_212  [key=0, style=solid];
m0_211 -> m0_212  [key=0, style=solid];
m0_212 -> m0_206  [color=blue, key=0, style=bold];
m0_330 -> m0_371  [key=0, style=solid];
m0_330 -> m0_379  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_330 -> m0_380  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_330 -> m0_330  [color=darkorchid, key=3, label="method methodReturn int GetLastFullCharStop", style=bold];
m0_371 -> m0_372  [key=0, style=solid];
m0_371 -> m0_373  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_371 -> m0_374  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_371 -> m0_376  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_371 -> m0_378  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_371 -> m0_379  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_371 -> m0_381  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_371 -> m0_330  [color=darkorchid, key=3, label="Local variable int lookbackPos", style=bold];
m0_379 -> m0_380  [key=0, style=solid];
m0_379 -> m0_381  [key=0, style=solid];
m0_380 -> m0_382  [key=0, style=solid];
m0_372 -> m0_373  [key=0, style=solid];
m0_372 -> m0_379  [color=darkseagreen4, key=1, label=bis, style=dashed];
m0_372 -> m0_76  [color=darkorchid, key=3, label="Local variable int bis", style=bold];
m0_372 -> m0_383  [color=darkorchid, key=3, label="Local variable int bis", style=bold];
m0_373 -> m0_374  [key=0, style=solid];
m0_373 -> m0_379  [key=0, style=solid];
m0_374 -> m0_375  [key=0, style=solid];
m0_374 -> m0_383  [key=2, style=dotted];
m0_374 -> m0_377  [color=darkseagreen4, key=1, label=bis, style=dashed];
m0_374 -> m0_379  [color=darkseagreen4, key=1, label=bis, style=dashed];
m0_376 -> m0_373  [key=0, style=solid];
m0_376 -> m0_376  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_376 -> m0_379  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_376 -> m0_381  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_378 -> m0_379  [key=0, style=solid];
m0_378 -> m0_378  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_378 -> m0_381  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
m0_381 -> m0_382  [key=0, style=solid];
m0_375 -> m0_376  [key=0, style=solid];
m0_375 -> m0_377  [key=0, style=solid];
m0_377 -> m0_378  [key=0, style=solid];
m0_377 -> m0_379  [key=0, style=solid];
m0_382 -> m0_330  [color=blue, key=0, style=bold];
m0_286 -> m0_293  [key=0, style=solid];
m0_286 -> m0_157  [color=darkorchid, key=3, label="method methodReturn byte[] ReadBinary", style=bold];
m0_293 -> m0_294  [color=red, key=0, style=solid];
m0_293 -> m0_128  [key=2, style=dotted];
m0_293 -> m0_297  [color=darkseagreen4, key=1, label=dataLength, style=dashed];
m0_294 -> m0_295  [color=red, key=0, style=solid];
m0_294 -> m0_205  [color=red, key=2, style=dotted];
m0_297 -> m0_298  [key=0, style=solid];
m0_297 -> m0_157  [key=2, style=dotted];
m0_295 -> m0_296  [key=0, style=solid];
m0_295 -> m0_297  [key=0, style=solid];
m0_296 -> m0_297  [key=0, style=solid];
m0_296 -> m0_128  [key=2, style=dotted];
m0_298 -> m0_286  [color=blue, key=0, style=bold];
m0_86 -> m0_17  [color=darkorchid, key=3, label="Field variable System.IO.BinaryReader _reader", style=bold];
m0_423 -> m0_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader.ContainerContext", style=dashed];
m0_424 -> m0_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_185  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_242  [color=green, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_244  [color=green, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_246  [color=green, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_247  [color=green, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m0_424 -> m0_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_48  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_49  [color=darkseagreen4, key=1, label="out string", style=dashed];
m2_48 -> m2_49  [key=0, style=solid];
m2_49 -> m2_46  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_0 -> m2_13  [color=darkorchid, key=3, label="method methodReturn System.Type GetTypeFromTypeNameKey", style=bold];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [color=darkseagreen4, key=1, label=assemblyName, style=dashed];
m2_1 -> m2_5  [color=darkseagreen4, key=1, label=assemblyName, style=dashed];
m2_1 -> m2_9  [color=darkseagreen4, key=1, label=assemblyName, style=dashed];
m2_1 -> m2_12  [color=darkseagreen4, key=1, label=assemblyName, style=dashed];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_13  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m2_2 -> m2_15  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m2_2 -> m2_17  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_17  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_19  [key=2, style=dotted];
m2_5 -> m2_11  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m2_5 -> m2_13  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m2_5 -> m2_15  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_8  [key=0, style=solid];
m2_12 -> m2_18  [key=0, style=solid];
m2_12 -> m2_21  [key=2, style=dotted];
m2_12 -> m2_22  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_23  [key=2, style=dotted];
m2_13 -> m2_16  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_15 -> m2_18  [key=0, style=solid];
m2_15 -> m2_21  [key=2, style=dotted];
m2_15 -> m2_24  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_25  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_8  [color=darkorchid, key=3, label="Local variable System.Reflection.Assembly assembly", style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_20  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_11  [key=0, style=solid];
m2_8 -> m2_10  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_13  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m2_10 -> m2_15  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=0, style=solid];
m2_16 -> m2_18  [key=0, style=solid];
m2_18 -> m2_0  [color=blue, key=0, style=bold];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_37  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_34 -> m2_36  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m2_34 -> m2_39  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_37  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=2, style=dotted];
m2_37 -> m2_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_36 -> m2_38  [key=0, style=solid];
m2_38 -> m2_34  [color=blue, key=0, style=bold];
m2_30 -> m2_31  [color=green, key=0, style=solid];
m2_31 -> m2_32  [color=green, key=0, style=solid];
m2_31 -> m2_33  [color=green, key=2, style=dotted];
m2_32 -> m2_30  [color=blue, key=0, style=bold];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_34  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey other", style=bold];
m2_40 -> m2_41  [key=0, style=solid];
m2_41 -> m2_39  [color=blue, key=0, style=bold];
m2_42 -> m2_43  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_26  [key=2, style=dotted];
m2_43 -> m2_45  [key=2, style=dotted];
m2_44 -> m2_42  [color=blue, key=0, style=bold];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_29 -> m2_26  [color=blue, key=0, style=bold];
m2_51 -> m2_31  [color=green, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_51 -> m2_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_51 -> m2_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_52 -> m2_38  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_53 -> m2_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder", style=dashed];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_0 -> m3_2  [color=green, key=1, label=string, style=dashed];
m3_0 -> m3_3  [color=green, key=1, label=string, style=dashed];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_4  [color=green, key=0, style=solid];
m3_3 -> m3_4  [color=green, key=0, style=solid];
m3_3 -> m3_5  [color=green, key=2, style=dotted];
m3_4 -> m3_0  [color=blue, key=0, style=bold];
m3_6 -> m3_7  [color=green, key=0, style=solid];
m3_6 -> m3_8  [color=green, key=1, label=string, style=dashed];
m3_6 -> m3_9  [color=green, key=1, label=string, style=dashed];
m3_7 -> m3_8  [color=green, key=0, style=solid];
m3_7 -> m3_9  [color=green, key=0, style=solid];
m3_8 -> m3_10  [color=green, key=0, style=solid];
m3_9 -> m3_10  [color=green, key=0, style=solid];
m3_9 -> m3_5  [color=green, key=2, style=dotted];
m3_10 -> m3_6  [color=blue, key=0, style=bold];
m3_5 -> m3_11  [key=0, style=solid];
m3_11 -> m3_5  [color=blue, key=0, style=bold];
m3_12 -> m3_1  [color=green, key=1, label="Newtonsoft.Json.Serialization.NamingStrategy", style=dashed];
m3_12 -> m3_3  [color=green, key=1, label="Newtonsoft.Json.Serialization.NamingStrategy", style=dashed];
m3_12 -> m3_7  [color=green, key=1, label="Newtonsoft.Json.Serialization.NamingStrategy", style=dashed];
m3_12 -> m3_9  [color=green, key=1, label="Newtonsoft.Json.Serialization.NamingStrategy", style=dashed];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_122  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan value", style=bold];
m4_125 -> m4_114  [color=darkorchid, key=3, label="Parameter variable char quoteChar", style=bold];
m4_125 -> m4_129  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_128  [key=2, style=dotted];
m4_126 -> m4_129  [key=2, style=dotted];
m4_126 -> m4_126  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m4_127 -> m4_125  [color=blue, key=0, style=bold];
m4_365 -> m4_366  [key=0, style=solid];
m4_365 -> m4_367  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m4_365 -> m4_362  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Formatting formatting", style=bold];
m4_365 -> m4_351  [color=darkorchid, key=3, label="Parameter variable bool omitRootObject", style=bold];
m4_366 -> m4_367  [key=0, style=solid];
m4_366 -> m4_341  [key=2, style=dotted];
m4_367 -> m4_368  [key=0, style=solid];
m4_367 -> m4_342  [key=2, style=dotted];
m4_368 -> m4_365  [color=blue, key=0, style=bold];
m4_262 -> m4_263  [key=0, style=solid];
m4_262 -> m4_258  [color=darkorchid, key=3, label="method methodReturn object DeserializeObject", style=bold];
m4_263 -> m4_264  [key=0, style=solid];
m4_263 -> m4_258  [key=2, style=dotted];
m4_264 -> m4_262  [color=blue, key=0, style=bold];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_34  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_30 -> m4_146  [color=darkorchid, key=3, label="Parameter variable char value", style=bold];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_33  [key=2, style=dotted];
m4_31 -> m4_34  [key=2, style=dotted];
m4_32 -> m4_30  [color=blue, key=0, style=bold];
m4_359 -> m4_360  [key=0, style=solid];
m4_359 -> m4_362  [color=darkorchid, key=3, label="method methodReturn string SerializeXNode", style=bold];
m4_360 -> m4_361  [key=0, style=solid];
m4_360 -> m4_362  [key=2, style=dotted];
m4_361 -> m4_359  [color=blue, key=0, style=bold];
m4_372 -> m4_373  [key=0, style=solid];
m4_372 -> m4_369  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m4_372 -> m4_7  [color=darkorchid, key=3, label="Parameter variable string deserializeRootElementName", style=bold];
m4_372 -> m4_375  [color=darkorchid, key=3, label="method methodReturn XDocument DeserializeXNode", style=bold];
m4_373 -> m4_374  [key=0, style=solid];
m4_373 -> m4_375  [key=2, style=dotted];
m4_374 -> m4_372  [color=blue, key=0, style=bold];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_75  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_70  [key=2, style=dotted];
m4_73 -> m4_71  [key=2, style=dotted];
m4_73 -> m4_75  [key=2, style=dotted];
m4_74 -> m4_72  [color=blue, key=0, style=bold];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_146  [color=darkorchid, key=3, label="Parameter variable uint value", style=bold];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_54  [key=2, style=dotted];
m4_53 -> m4_51  [color=blue, key=0, style=bold];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_75  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_87  [key=2, style=dotted];
m4_89 -> m4_71  [key=2, style=dotted];
m4_89 -> m4_75  [key=2, style=dotted];
m4_90 -> m4_88  [color=blue, key=0, style=bold];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_214  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_212 -> m4_216  [color=darkorchid, key=3, label="method methodReturn string SerializeObject", style=bold];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_211  [key=2, style=dotted];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_216  [key=2, style=dotted];
m4_215 -> m4_212  [color=blue, key=0, style=bold];
m4_34 -> m4_138  [key=0, style=solid];
m4_34 -> m4_129  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_34 -> m4_146  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_129  [key=2, style=dotted];
m4_139 -> m4_34  [color=blue, key=0, style=bold];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_146  [color=darkorchid, key=3, label="Parameter variable byte value", style=bold];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_104  [key=2, style=dotted];
m4_103 -> m4_101  [color=blue, key=0, style=bold];
m4_129 -> m4_140  [key=0, style=solid];
m4_129 -> m4_142  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_129 -> m4_125  [color=darkorchid, key=3, label="Parameter variable char delimiter", style=bold];
m4_129 -> m4_135  [color=darkorchid, key=3, label="Parameter variable char delimiter", style=bold];
m4_129 -> m4_114  [color=darkorchid, key=3, label="Parameter variable char delimiter", style=bold];
m4_129 -> m4_34  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_142  [key=0, style=solid];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_145  [key=2, style=dotted];
m4_141 -> m4_143  [key=0, style=solid];
m4_141 -> m4_144  [key=2, style=dotted];
m4_143 -> m4_129  [color=blue, key=0, style=bold];
m4_347 -> m4_348  [key=0, style=solid];
m4_347 -> m4_350  [color=darkorchid, key=3, label="method methodReturn XmlDocument DeserializeXmlNode", style=bold];
m4_348 -> m4_349  [key=0, style=solid];
m4_348 -> m4_350  [key=2, style=dotted];
m4_349 -> m4_347  [color=blue, key=0, style=bold];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_19  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_16 -> m4_146  [color=darkorchid, key=3, label="Parameter variable System.DateTimeOffset value", style=bold];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_19  [key=2, style=dotted];
m4_18 -> m4_16  [color=blue, key=0, style=bold];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_77  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_75 -> m4_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.FloatFormatHandling", style=dashed];
m4_75 -> m4_79  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_75 -> m4_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_75 -> m4_72  [color=darkorchid, key=3, label="Parameter variable bool nullable", style=bold];
m4_75 -> m4_88  [color=darkorchid, key=3, label="Parameter variable bool nullable", style=bold];
m4_75 -> m4_71  [color=darkorchid, key=3, label="Parameter variable string text", style=bold];
m4_75 -> m4_75  [color=darkorchid, key=3, label="method methodReturn string EnsureFloatFormat", style=bold];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_78  [key=0, style=solid];
m4_76 -> m4_82  [key=2, style=dotted];
m4_76 -> m4_83  [key=2, style=dotted];
m4_77 -> m4_81  [key=0, style=solid];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_80  [key=0, style=solid];
m4_79 -> m4_81  [key=0, style=solid];
m4_80 -> m4_81  [key=0, style=solid];
m4_81 -> m4_75  [color=blue, key=0, style=bold];
m4_246 -> m4_247  [key=0, style=solid];
m4_246 -> m4_245  [color=darkorchid, key=3, label="method methodReturn System.Threading.Tasks.Task<string> SerializeObjectAsync", style=bold];
m4_247 -> m4_248  [key=0, style=solid];
m4_247 -> m4_245  [key=2, style=dotted];
m4_248 -> m4_246  [color=blue, key=0, style=bold];
m4_269 -> m4_270  [key=0, style=solid];
m4_269 -> m4_265  [color=darkorchid, key=3, label="method methodReturn T DeserializeAnonymousType", style=bold];
m4_270 -> m4_271  [key=0, style=solid];
m4_270 -> m4_265  [key=2, style=dotted];
m4_271 -> m4_269  [color=blue, key=0, style=bold];
m4_224 -> m4_231  [key=0, style=solid];
m4_224 -> m4_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m4_224 -> m4_235  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_224 -> m4_202  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m4_224 -> m4_216  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m4_224 -> m4_220  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializer jsonSerializer", style=bold];
m4_224 -> m4_227  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializer jsonSerializer", style=bold];
m4_231 -> m4_232  [key=0, style=solid];
m4_231 -> m4_238  [key=2, style=dotted];
m4_234 -> m4_235  [key=0, style=solid];
m4_235 -> m4_236  [key=0, style=solid];
m4_235 -> m4_241  [key=2, style=dotted];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_239  [key=2, style=dotted];
m4_232 -> m4_236  [color=darkseagreen4, key=1, label=sw, style=dashed];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_240  [key=2, style=dotted];
m4_233 -> m4_235  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_236 -> m4_237  [key=0, style=solid];
m4_236 -> m4_15  [key=2, style=dotted];
m4_237 -> m4_224  [color=blue, key=0, style=bold];
m4_278 -> m4_281  [key=0, style=solid];
m4_278 -> m4_282  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_278 -> m4_275  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter[] converters", style=bold];
m4_278 -> m4_353  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m4_278 -> m4_375  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m4_278 -> m4_354  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter[] converters", style=bold];
m4_278 -> m4_376  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter[] converters", style=bold];
m4_278 -> m4_258  [color=darkorchid, key=3, label="method methodReturn object DeserializeObject", style=bold];
m4_281 -> m4_282  [key=0, style=solid];
m4_281 -> m4_211  [key=2, style=dotted];
m4_282 -> m4_283  [key=0, style=solid];
m4_282 -> m4_258  [key=2, style=dotted];
m4_283 -> m4_278  [color=blue, key=0, style=bold];
m4_245 -> m4_249  [key=0, style=solid];
m4_245 -> m4_253  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_245 -> m4_242  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m4_245 -> m4_246  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Formatting formatting", style=bold];
m4_245 -> m4_1  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Formatting formatting", style=bold];
m4_245 -> m4_7  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_249 -> m4_250  [key=0, style=solid];
m4_249 -> m4_251  [key=2, style=dotted];
m4_249 -> m4_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_250 -> m4_245  [color=blue, key=0, style=bold];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_96  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_109 -> m4_146  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_112  [key=2, style=dotted];
m4_110 -> m4_96  [key=2, style=dotted];
m4_111 -> m4_109  [color=blue, key=0, style=bold];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_38  [key=2, style=dotted];
m4_37 -> m4_35  [color=blue, key=0, style=bold];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateFormatHandling", style=dashed];
m4_3 -> m4_0  [color=darkorchid, key=3, label="Parameter variable System.DateTime value", style=bold];
m4_3 -> m4_1  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling", style=bold];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_11  [key=2, style=dotted];
m4_4 -> m4_7  [color=darkseagreen4, key=1, label=updatedDateTime, style=dashed];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_14  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_12  [key=2, style=dotted];
m4_5 -> m4_7  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_5 -> m4_8  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_5 -> m4_9  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_13  [key=2, style=dotted];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_13  [key=2, style=dotted];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_15  [key=2, style=dotted];
m4_10 -> m4_3  [color=blue, key=0, style=bold];
m4_255 -> m4_256  [key=0, style=solid];
m4_255 -> m4_258  [color=darkorchid, key=3, label="method methodReturn object DeserializeObject", style=bold];
m4_256 -> m4_257  [key=0, style=solid];
m4_256 -> m4_258  [key=2, style=dotted];
m4_257 -> m4_255  [color=blue, key=0, style=bold];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_278  [color=darkorchid, key=3, label="method methodReturn T DeserializeObject", style=bold];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_278  [key=2, style=dotted];
m4_277 -> m4_275  [color=blue, key=0, style=bold];
m4_327 -> m4_328  [key=0, style=solid];
m4_327 -> m4_332  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_328 -> m4_329  [key=0, style=solid];
m4_328 -> m4_330  [key=2, style=dotted];
m4_328 -> m4_331  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_329 -> m4_327  [color=blue, key=0, style=bold];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_146  [color=darkorchid, key=3, label="Parameter variable long value", style=bold];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_58  [key=2, style=dotted];
m4_57 -> m4_55  [color=blue, key=0, style=bold];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_116  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_113 -> m4_146  [color=darkorchid, key=3, label="Parameter variable System.Guid value", style=bold];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_116  [key=2, style=dotted];
m4_115 -> m4_113  [color=blue, key=0, style=bold];
m4_317 -> m4_318  [key=0, style=solid];
m4_317 -> m4_319  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_317 -> m4_320  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_317 -> m4_314  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m4_317 -> m4_327  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_317 -> m4_7  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_318 -> m4_319  [key=0, style=solid];
m4_318 -> m4_223  [key=2, style=dotted];
m4_318 -> m4_320  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m4_319 -> m4_320  [key=0, style=solid];
m4_319 -> m4_293  [key=2, style=dotted];
m4_319 -> m4_294  [key=2, style=dotted];
m4_319 -> m4_321  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m4_320 -> m4_321  [key=0, style=solid];
m4_320 -> m4_324  [key=2, style=dotted];
m4_321 -> m4_322  [key=0, style=solid];
m4_321 -> m4_323  [key=0, style=solid];
m4_321 -> m4_325  [key=2, style=dotted];
m4_322 -> m4_323  [key=0, style=solid];
m4_322 -> m4_326  [key=2, style=dotted];
m4_323 -> m4_317  [color=blue, key=0, style=bold];
m4_369 -> m4_370  [key=0, style=solid];
m4_369 -> m4_372  [color=darkorchid, key=3, label="method methodReturn XDocument DeserializeXNode", style=bold];
m4_370 -> m4_371  [key=0, style=solid];
m4_370 -> m4_372  [key=2, style=dotted];
m4_371 -> m4_369  [color=blue, key=0, style=bold];
m4_259 -> m4_260  [key=0, style=solid];
m4_259 -> m4_258  [color=darkorchid, key=3, label="method methodReturn object DeserializeObject", style=bold];
m4_260 -> m4_261  [key=0, style=solid];
m4_260 -> m4_258  [key=2, style=dotted];
m4_261 -> m4_259  [color=blue, key=0, style=bold];
m4_362 -> m4_363  [key=0, style=solid];
m4_362 -> m4_359  [color=darkorchid, key=3, label="Parameter variable XObject node", style=bold];
m4_362 -> m4_1  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Formatting formatting", style=bold];
m4_362 -> m4_365  [color=darkorchid, key=3, label="method methodReturn string SerializeXNode", style=bold];
m4_363 -> m4_364  [key=0, style=solid];
m4_363 -> m4_365  [key=2, style=dotted];
m4_364 -> m4_362  [color=blue, key=0, style=bold];
m4_258 -> m4_284  [key=0, style=solid];
m4_258 -> m4_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m4_258 -> m4_288  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_258 -> m4_289  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_258 -> m4_255  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m4_258 -> m4_259  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_258 -> m4_262  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m4_258 -> m4_268  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_258 -> m4_278  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m4_258 -> m4_308  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_258 -> m4_7  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_258 -> m4_281  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_284 -> m4_285  [key=0, style=solid];
m4_284 -> m4_291  [key=2, style=dotted];
m4_285 -> m4_286  [key=0, style=solid];
m4_285 -> m4_223  [key=2, style=dotted];
m4_285 -> m4_287  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m4_285 -> m4_289  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m4_288 -> m4_289  [key=0, style=solid];
m4_288 -> m4_293  [key=2, style=dotted];
m4_288 -> m4_294  [key=2, style=dotted];
m4_289 -> m4_290  [key=0, style=solid];
m4_289 -> m4_295  [key=2, style=dotted];
m4_286 -> m4_287  [key=0, style=solid];
m4_286 -> m4_288  [key=0, style=solid];
m4_286 -> m4_292  [key=2, style=dotted];
m4_287 -> m4_288  [key=0, style=solid];
m4_290 -> m4_258  [color=blue, key=0, style=bold];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_149  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_152  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_154  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_156  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_158  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_160  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_162  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_164  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_166  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_168  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_170  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_172  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_174  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_176  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_178  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_180  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_184  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_186  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_188  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_190  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_192  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_194  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_146 -> m4_34  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_30  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_27  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_105  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_43  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_47  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_39  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_101  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_51  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_55  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_63  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_67  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_84  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_0  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_109  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_16  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_113  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_130  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_122  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_146 -> m4_59  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_147 -> m4_148  [key=0, style=solid];
m4_147 -> m4_149  [key=0, style=solid];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_195  [key=2, style=dotted];
m4_152 -> m4_193  [key=0, style=solid];
m4_152 -> m4_34  [key=2, style=dotted];
m4_154 -> m4_193  [key=0, style=solid];
m4_154 -> m4_30  [key=2, style=dotted];
m4_156 -> m4_193  [key=0, style=solid];
m4_156 -> m4_27  [key=2, style=dotted];
m4_158 -> m4_193  [key=0, style=solid];
m4_158 -> m4_105  [key=2, style=dotted];
m4_160 -> m4_193  [key=0, style=solid];
m4_160 -> m4_43  [key=2, style=dotted];
m4_162 -> m4_193  [key=0, style=solid];
m4_162 -> m4_47  [key=2, style=dotted];
m4_164 -> m4_193  [key=0, style=solid];
m4_164 -> m4_39  [key=2, style=dotted];
m4_166 -> m4_193  [key=0, style=solid];
m4_166 -> m4_101  [key=2, style=dotted];
m4_168 -> m4_193  [key=0, style=solid];
m4_168 -> m4_51  [key=2, style=dotted];
m4_170 -> m4_193  [key=0, style=solid];
m4_170 -> m4_55  [key=2, style=dotted];
m4_172 -> m4_193  [key=0, style=solid];
m4_172 -> m4_63  [key=2, style=dotted];
m4_174 -> m4_193  [key=0, style=solid];
m4_174 -> m4_67  [key=2, style=dotted];
m4_176 -> m4_193  [key=0, style=solid];
m4_176 -> m4_84  [key=2, style=dotted];
m4_178 -> m4_193  [key=0, style=solid];
m4_178 -> m4_0  [key=2, style=dotted];
m4_180 -> m4_193  [key=0, style=solid];
m4_180 -> m4_109  [key=2, style=dotted];
m4_184 -> m4_193  [key=0, style=solid];
m4_184 -> m4_16  [key=2, style=dotted];
m4_186 -> m4_193  [key=0, style=solid];
m4_186 -> m4_113  [key=2, style=dotted];
m4_188 -> m4_193  [key=0, style=solid];
m4_188 -> m4_130  [key=2, style=dotted];
m4_190 -> m4_193  [key=0, style=solid];
m4_190 -> m4_122  [key=2, style=dotted];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_59  [key=2, style=dotted];
m4_194 -> m4_193  [key=0, style=solid];
m4_194 -> m4_196  [key=2, style=dotted];
m4_194 -> m4_197  [key=2, style=dotted];
m4_194 -> m4_198  [key=2, style=dotted];
m4_148 -> m4_193  [key=0, style=solid];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_153  [key=0, style=solid];
m4_150 -> m4_155  [key=0, style=solid];
m4_150 -> m4_157  [key=0, style=solid];
m4_150 -> m4_159  [key=0, style=solid];
m4_150 -> m4_161  [key=0, style=solid];
m4_150 -> m4_163  [key=0, style=solid];
m4_150 -> m4_165  [key=0, style=solid];
m4_150 -> m4_167  [key=0, style=solid];
m4_150 -> m4_169  [key=0, style=solid];
m4_150 -> m4_171  [key=0, style=solid];
m4_150 -> m4_173  [key=0, style=solid];
m4_150 -> m4_175  [key=0, style=solid];
m4_150 -> m4_177  [key=0, style=solid];
m4_150 -> m4_179  [key=0, style=solid];
m4_150 -> m4_181  [key=0, style=solid];
m4_150 -> m4_183  [key=0, style=solid];
m4_150 -> m4_185  [key=0, style=solid];
m4_150 -> m4_187  [key=0, style=solid];
m4_150 -> m4_189  [key=0, style=solid];
m4_150 -> m4_191  [key=0, style=solid];
m4_151 -> m4_152  [key=0, style=solid];
m4_153 -> m4_154  [key=0, style=solid];
m4_155 -> m4_156  [key=0, style=solid];
m4_157 -> m4_158  [key=0, style=solid];
m4_159 -> m4_160  [key=0, style=solid];
m4_161 -> m4_162  [key=0, style=solid];
m4_163 -> m4_164  [key=0, style=solid];
m4_165 -> m4_166  [key=0, style=solid];
m4_167 -> m4_168  [key=0, style=solid];
m4_169 -> m4_170  [key=0, style=solid];
m4_171 -> m4_172  [key=0, style=solid];
m4_173 -> m4_174  [key=0, style=solid];
m4_175 -> m4_176  [key=0, style=solid];
m4_177 -> m4_178  [key=0, style=solid];
m4_179 -> m4_180  [key=0, style=solid];
m4_181 -> m4_182  [key=0, style=solid];
m4_183 -> m4_184  [key=0, style=solid];
m4_185 -> m4_186  [key=0, style=solid];
m4_187 -> m4_188  [key=0, style=solid];
m4_189 -> m4_190  [key=0, style=solid];
m4_191 -> m4_192  [key=0, style=solid];
m4_182 -> m4_193  [key=0, style=solid];
m4_193 -> m4_146  [color=blue, key=0, style=bold];
m4_314 -> m4_315  [key=0, style=solid];
m4_315 -> m4_316  [key=0, style=solid];
m4_315 -> m4_317  [key=2, style=dotted];
m4_316 -> m4_314  [color=blue, key=0, style=bold];
m4_343 -> m4_344  [key=0, style=solid];
m4_343 -> m4_345  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m4_344 -> m4_345  [key=0, style=solid];
m4_344 -> m4_341  [key=2, style=dotted];
m4_345 -> m4_346  [key=0, style=solid];
m4_345 -> m4_342  [key=2, style=dotted];
m4_346 -> m4_343  [color=blue, key=0, style=bold];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_146  [color=darkorchid, key=3, label="Parameter variable ulong value", style=bold];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_66  [key=2, style=dotted];
m4_65 -> m4_63  [color=blue, key=0, style=bold];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_118  [color=darkseagreen4, key=1, label="System.Guid", style=dashed];
m4_116 -> m4_119  [color=darkseagreen4, key=1, label=char, style=dashed];
m4_116 -> m4_113  [color=darkorchid, key=3, label="Parameter variable System.Guid value", style=bold];
m4_116 -> m4_114  [color=darkorchid, key=3, label="Parameter variable char quoteChar", style=bold];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_7  [color=darkorchid, key=3, label="Local variable string text", style=bold];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_121  [key=2, style=dotted];
m4_118 -> m4_118  [color=darkseagreen4, key=1, label="System.Guid", style=dashed];
m4_119 -> m4_120  [key=0, style=solid];
m4_120 -> m4_116  [color=blue, key=0, style=bold];
m4_308 -> m4_309  [key=0, style=solid];
m4_308 -> m4_312  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_308 -> m4_305  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m4_308 -> m4_7  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_309 -> m4_310  [key=0, style=solid];
m4_309 -> m4_251  [key=2, style=dotted];
m4_309 -> m4_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_310 -> m4_308  [color=blue, key=0, style=bold];
m4_268 -> m4_279  [key=0, style=solid];
m4_268 -> m4_265  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m4_268 -> m4_272  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_268 -> m4_299  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_268 -> m4_7  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_268 -> m4_258  [color=darkorchid, key=3, label="method methodReturn T DeserializeObject", style=bold];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_258  [key=2, style=dotted];
m4_280 -> m4_268  [color=blue, key=0, style=bold];
m4_375 -> m4_376  [key=0, style=solid];
m4_375 -> m4_377  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_375 -> m4_378  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_375 -> m4_379  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_375 -> m4_372  [color=darkorchid, key=3, label="Parameter variable string deserializeRootElementName", style=bold];
m4_375 -> m4_351  [color=darkorchid, key=3, label="Parameter variable bool writeArrayAttribute", style=bold];
m4_375 -> m4_278  [color=darkorchid, key=3, label="method methodReturn XDocument DeserializeXNode", style=bold];
m4_376 -> m4_377  [key=0, style=solid];
m4_376 -> m4_341  [key=2, style=dotted];
m4_376 -> m4_378  [color=darkseagreen4, key=1, label=converter, style=dashed];
m4_376 -> m4_379  [color=darkseagreen4, key=1, label=converter, style=dashed];
m4_377 -> m4_378  [key=0, style=solid];
m4_378 -> m4_379  [key=0, style=solid];
m4_379 -> m4_380  [key=0, style=solid];
m4_379 -> m4_278  [key=2, style=dotted];
m4_380 -> m4_375  [color=blue, key=0, style=bold];
m4_202 -> m4_220  [key=0, style=solid];
m4_202 -> m4_221  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_202 -> m4_199  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m4_202 -> m4_207  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m4_202 -> m4_217  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_202 -> m4_7  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_202 -> m4_208  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_202 -> m4_224  [color=darkorchid, key=3, label="method methodReturn string SerializeObject", style=bold];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_223  [key=2, style=dotted];
m4_221 -> m4_222  [key=0, style=solid];
m4_221 -> m4_224  [key=2, style=dotted];
m4_222 -> m4_202  [color=blue, key=0, style=bold];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_202  [color=darkorchid, key=3, label="method methodReturn string SerializeObject", style=bold];
m4_218 -> m4_219  [key=0, style=solid];
m4_218 -> m4_202  [key=2, style=dotted];
m4_219 -> m4_217  [color=blue, key=0, style=bold];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_146  [color=darkorchid, key=3, label="Parameter variable short value", style=bold];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_46  [key=2, style=dotted];
m4_45 -> m4_43  [color=blue, key=0, style=bold];
m4_337 -> m4_338  [key=0, style=solid];
m4_337 -> m4_339  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m4_337 -> m4_334  [color=darkorchid, key=3, label="Parameter variable XmlNode node", style=bold];
m4_337 -> m4_1  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Formatting formatting", style=bold];
m4_338 -> m4_339  [key=0, style=solid];
m4_338 -> m4_341  [key=2, style=dotted];
m4_339 -> m4_340  [key=0, style=solid];
m4_339 -> m4_342  [key=2, style=dotted];
m4_340 -> m4_337  [color=blue, key=0, style=bold];
m4_206 -> m4_225  [key=0, style=solid];
m4_206 -> m4_203  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Formatting formatting", style=bold];
m4_206 -> m4_245  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_206 -> m4_7  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_206 -> m4_216  [color=darkorchid, key=3, label="method methodReturn string SerializeObject", style=bold];
m4_225 -> m4_226  [key=0, style=solid];
m4_225 -> m4_216  [key=2, style=dotted];
m4_226 -> m4_206  [color=blue, key=0, style=bold];
m4_242 -> m4_243  [key=0, style=solid];
m4_242 -> m4_245  [color=darkorchid, key=3, label="method methodReturn System.Threading.Tasks.Task<string> SerializeObjectAsync", style=bold];
m4_243 -> m4_244  [key=0, style=solid];
m4_243 -> m4_245  [key=2, style=dotted];
m4_244 -> m4_242  [color=blue, key=0, style=bold];
m4_71 -> m4_91  [key=0, style=solid];
m4_71 -> m4_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_71 -> m4_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_71 -> m4_67  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m4_71 -> m4_72  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m4_71 -> m4_84  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m4_71 -> m4_88  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m4_71 -> m4_71  [color=darkorchid, key=3, label="method methodReturn string EnsureDecimalPlace", style=bold];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_93  [key=0, style=solid];
m4_91 -> m4_83  [key=2, style=dotted];
m4_91 -> m4_82  [key=2, style=dotted];
m4_91 -> m4_95  [key=2, style=dotted];
m4_92 -> m4_94  [key=0, style=solid];
m4_93 -> m4_94  [key=0, style=solid];
m4_94 -> m4_71  [color=blue, key=0, style=bold];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_299  [color=darkorchid, key=3, label="method methodReturn System.Threading.Tasks.Task<T> DeserializeObjectAsync", style=bold];
m4_297 -> m4_298  [key=0, style=solid];
m4_297 -> m4_299  [key=2, style=dotted];
m4_298 -> m4_296  [color=blue, key=0, style=bold];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_130  [color=darkorchid, key=3, label="Parameter variable System.Uri value", style=bold];
m4_135 -> m4_114  [color=darkorchid, key=3, label="Parameter variable char quoteChar", style=bold];
m4_135 -> m4_129  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_129  [key=2, style=dotted];
m4_137 -> m4_135  [color=blue, key=0, style=bold];
m4_353 -> m4_354  [key=0, style=solid];
m4_353 -> m4_355  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_353 -> m4_356  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_353 -> m4_357  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_353 -> m4_350  [color=darkorchid, key=3, label="Parameter variable string deserializeRootElementName", style=bold];
m4_353 -> m4_351  [color=darkorchid, key=3, label="Parameter variable bool writeArrayAttribute", style=bold];
m4_353 -> m4_278  [color=darkorchid, key=3, label="method methodReturn XmlDocument DeserializeXmlNode", style=bold];
m4_354 -> m4_355  [key=0, style=solid];
m4_354 -> m4_341  [key=2, style=dotted];
m4_354 -> m4_356  [color=darkseagreen4, key=1, label=converter, style=dashed];
m4_354 -> m4_357  [color=darkseagreen4, key=1, label=converter, style=dashed];
m4_355 -> m4_356  [key=0, style=solid];
m4_356 -> m4_357  [key=0, style=solid];
m4_357 -> m4_358  [key=0, style=solid];
m4_357 -> m4_278  [key=2, style=dotted];
m4_358 -> m4_353  [color=blue, key=0, style=bold];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_22  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m4_19 -> m4_16  [color=darkorchid, key=3, label="Parameter variable System.DateTimeOffset value", style=bold];
m4_19 -> m4_1  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.DateFormatHandling format", style=bold];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_12  [key=2, style=dotted];
m4_20 -> m4_22  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_20 -> m4_23  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_20 -> m4_24  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_26  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_13  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_13  [key=2, style=dotted];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_15  [key=2, style=dotted];
m4_25 -> m4_19  [color=blue, key=0, style=bold];
m4_216 -> m4_227  [key=0, style=solid];
m4_216 -> m4_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Formatting", style=dashed];
m4_216 -> m4_229  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_216 -> m4_212  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Formatting formatting", style=bold];
m4_216 -> m4_206  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_216 -> m4_7  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m4_216 -> m4_213  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_216 -> m4_224  [color=darkorchid, key=3, label="method methodReturn string SerializeObject", style=bold];
m4_227 -> m4_228  [key=0, style=solid];
m4_227 -> m4_223  [key=2, style=dotted];
m4_227 -> m4_229  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m4_228 -> m4_229  [key=0, style=solid];
m4_229 -> m4_230  [key=0, style=solid];
m4_229 -> m4_224  [key=2, style=dotted];
m4_230 -> m4_216  [color=blue, key=0, style=bold];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_146  [color=darkorchid, key=3, label="Parameter variable int value", style=bold];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_42  [key=2, style=dotted];
m4_41 -> m4_39  [color=blue, key=0, style=bold];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_133  [color=darkseagreen4, key=1, label="System.Uri", style=dashed];
m4_130 -> m4_135  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_130 -> m4_146  [color=darkorchid, key=3, label="Parameter variable System.Uri value", style=bold];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_133  [key=0, style=solid];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_135  [key=2, style=dotted];
m4_132 -> m4_134  [key=0, style=solid];
m4_134 -> m4_130  [color=blue, key=0, style=bold];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_71  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_84 -> m4_146  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_87  [key=2, style=dotted];
m4_85 -> m4_71  [key=2, style=dotted];
m4_86 -> m4_84  [color=blue, key=0, style=bold];
m4_272 -> m4_273  [key=0, style=solid];
m4_272 -> m4_268  [color=darkorchid, key=3, label="method methodReturn T DeserializeAnonymousType", style=bold];
m4_273 -> m4_274  [key=0, style=solid];
m4_273 -> m4_268  [key=2, style=dotted];
m4_274 -> m4_272  [color=blue, key=0, style=bold];
m4_350 -> m4_351  [key=0, style=solid];
m4_350 -> m4_347  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m4_350 -> m4_7  [color=darkorchid, key=3, label="Parameter variable string deserializeRootElementName", style=bold];
m4_350 -> m4_353  [color=darkorchid, key=3, label="method methodReturn XmlDocument DeserializeXmlNode", style=bold];
m4_351 -> m4_352  [key=0, style=solid];
m4_351 -> m4_353  [key=2, style=dotted];
m4_352 -> m4_350  [color=blue, key=0, style=bold];
m4_331 -> m4_332  [key=0, style=solid];
m4_253 -> m4_254  [key=0, style=solid];
m4_253 -> m4_206  [key=2, style=dotted];
m4_252 -> m4_253  [key=0, style=solid];
m4_254 -> m4_252  [color=blue, key=0, style=bold];
m4_303 -> m4_304  [key=0, style=solid];
m4_303 -> m4_268  [key=2, style=dotted];
m4_302 -> m4_303  [key=0, style=solid];
m4_304 -> m4_302  [color=blue, key=0, style=bold];
m4_312 -> m4_313  [key=0, style=solid];
m4_312 -> m4_258  [key=2, style=dotted];
m4_311 -> m4_312  [key=0, style=solid];
m4_313 -> m4_311  [color=blue, key=0, style=bold];
m4_332 -> m4_333  [key=0, style=solid];
m4_332 -> m4_317  [key=2, style=dotted];
m4_333 -> m4_331  [color=blue, key=0, style=bold];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_146  [color=darkorchid, key=3, label="Parameter variable sbyte value", style=bold];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_108  [key=2, style=dotted];
m4_107 -> m4_105  [color=blue, key=0, style=bold];
m4_305 -> m4_306  [key=0, style=solid];
m4_305 -> m4_308  [color=darkorchid, key=3, label="method methodReturn System.Threading.Tasks.Task<object> DeserializeObjectAsync", style=bold];
m4_306 -> m4_307  [key=0, style=solid];
m4_306 -> m4_308  [key=2, style=dotted];
m4_307 -> m4_305  [color=blue, key=0, style=bold];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_96 -> m4_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_96 -> m4_96  [color=darkorchid, key=3, label="method methodReturn string EnsureDecimalPlace", style=bold];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_99  [key=0, style=solid];
m4_97 -> m4_95  [key=2, style=dotted];
m4_98 -> m4_100  [key=0, style=solid];
m4_99 -> m4_100  [key=0, style=solid];
m4_100 -> m4_96  [color=blue, key=0, style=bold];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_71  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_67 -> m4_146  [color=darkorchid, key=3, label="Parameter variable float value", style=bold];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_70  [key=2, style=dotted];
m4_68 -> m4_71  [key=2, style=dotted];
m4_69 -> m4_67  [color=blue, key=0, style=bold];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_146  [color=darkorchid, key=3, label="Parameter variable ushort value", style=bold];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_50  [key=2, style=dotted];
m4_49 -> m4_47  [color=blue, key=0, style=bold];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_146  [color=darkorchid, key=3, label="Parameter variable bool value", style=bold];
m4_28 -> m4_29  [key=0, style=solid];
m4_29 -> m4_27  [color=blue, key=0, style=bold];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_146  [color=darkorchid, key=3, label="Parameter variable BigInteger value", style=bold];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_62  [key=2, style=dotted];
m4_61 -> m4_59  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_0 -> m4_146  [color=darkorchid, key=3, label="Parameter variable System.DateTime value", style=bold];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_125  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m4_122 -> m4_146  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan value", style=bold];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_125  [key=2, style=dotted];
m4_124 -> m4_122  [color=blue, key=0, style=bold];
m4_299 -> m4_300  [key=0, style=solid];
m4_299 -> m4_303  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_299 -> m4_296  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m4_299 -> m4_7  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonSerializerSettings settings", style=bold];
m4_300 -> m4_301  [key=0, style=solid];
m4_300 -> m4_251  [key=2, style=dotted];
m4_300 -> m4_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_301 -> m4_299  [color=blue, key=0, style=bold];
m4_203 -> m4_204  [key=0, style=solid];
m4_203 -> m4_206  [color=darkorchid, key=3, label="method methodReturn string SerializeObject", style=bold];
m4_204 -> m4_205  [key=0, style=solid];
m4_204 -> m4_206  [key=2, style=dotted];
m4_205 -> m4_203  [color=blue, key=0, style=bold];
m4_199 -> m4_200  [key=0, style=solid];
m4_199 -> m4_202  [color=darkorchid, key=3, label="method methodReturn string SerializeObject", style=bold];
m4_200 -> m4_201  [key=0, style=solid];
m4_200 -> m4_202  [key=2, style=dotted];
m4_201 -> m4_199  [color=blue, key=0, style=bold];
m4_265 -> m4_266  [key=0, style=solid];
m4_265 -> m4_268  [color=darkorchid, key=3, label="method methodReturn T DeserializeObject", style=bold];
m4_265 -> m4_269  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m4_266 -> m4_267  [key=0, style=solid];
m4_266 -> m4_268  [key=2, style=dotted];
m4_267 -> m4_265  [color=blue, key=0, style=bold];
m4_207 -> m4_208  [key=0, style=solid];
m4_207 -> m4_209  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_207 -> m4_202  [color=darkorchid, key=3, label="method methodReturn string SerializeObject", style=bold];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_211  [key=2, style=dotted];
m4_209 -> m4_210  [key=0, style=solid];
m4_209 -> m4_202  [key=2, style=dotted];
m4_210 -> m4_207  [color=blue, key=0, style=bold];
m4_334 -> m4_335  [key=0, style=solid];
m4_334 -> m4_337  [color=darkorchid, key=3, label="method methodReturn string SerializeXmlNode", style=bold];
m4_335 -> m4_336  [key=0, style=solid];
m4_335 -> m4_337  [key=2, style=dotted];
m4_336 -> m4_334  [color=blue, key=0, style=bold];
m4_381 -> m4_253  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_382 -> m4_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Formatting", style=dashed];
m4_383 -> m4_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m4_384 -> m4_303  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_385 -> m4_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m4_386 -> m4_312  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_387 -> m4_312  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_388 -> m4_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m4_389 -> m4_332  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_390 -> m4_332  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_391 -> m4_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_2 -> m5_4  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_0  [color=blue, key=0, style=bold];
m5_48 -> m5_49  [key=0, style=solid];
m5_49 -> m5_48  [color=blue, key=0, style=bold];
m5_103 -> m5_104  [key=0, style=solid];
m5_103 -> m5_69  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytesInternal", style=bold];
m5_103 -> m5_112  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytesInternal", style=bold];
m5_103 -> m5_118  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytesInternal", style=bold];
m5_103 -> m5_133  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytesInternal", style=bold];
m5_103 -> m5_125  [color=green, key=3, label="method methodReturn byte[] ReadAsBytesInternal", style=bold];
m5_104 -> m5_105  [key=0, style=solid];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_110  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_105 -> m5_116  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_105 -> m5_121  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_105 -> m5_123  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_105 -> m5_125  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_105 -> m5_139  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_105 -> m5_141  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_109  [key=0, style=solid];
m5_106 -> m5_60  [key=2, style=dotted];
m5_110 -> m5_105  [key=0, style=solid];
m5_110 -> m5_111  [key=0, style=solid];
m5_116 -> m5_117  [key=0, style=solid];
m5_116 -> m5_121  [key=0, style=solid];
m5_121 -> m5_122  [key=0, style=solid];
m5_121 -> m5_123  [key=0, style=solid];
m5_123 -> m5_124  [color=green, key=0, style=solid];
m5_123 -> m5_125  [key=0, style=solid];
m5_125 -> m5_126  [color=green, key=0, style=solid];
m5_125 -> m5_139  [key=0, style=solid];
m5_125 -> m5_149  [color=green, key=2, style=dotted];
m5_125 -> m5_127  [color=green, key=1, label=data, style=dashed];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_141  [key=0, style=solid];
m5_141 -> m5_142  [key=0, style=solid];
m5_141 -> m5_27  [key=2, style=dotted];
m5_141 -> m5_28  [key=2, style=dotted];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_97  [key=2, style=dotted];
m5_109 -> m5_110  [key=0, style=solid];
m5_109 -> m5_116  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_109 -> m5_121  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_109 -> m5_123  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_109 -> m5_125  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_109 -> m5_139  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_109 -> m5_141  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_108 -> m5_142  [key=0, style=solid];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_116  [key=0, style=solid];
m5_111 -> m5_143  [key=2, style=dotted];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_52  [key=2, style=dotted];
m5_112 -> m5_114  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_112 -> m5_115  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_113 -> m5_114  [key=0, style=solid];
m5_113 -> m5_60  [key=2, style=dotted];
m5_114 -> m5_115  [key=0, style=solid];
m5_114 -> m5_99  [key=2, style=dotted];
m5_115 -> m5_142  [key=0, style=solid];
m5_117 -> m5_118  [key=0, style=solid];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_144  [key=2, style=dotted];
m5_118 -> m5_120  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_119 -> m5_120  [key=0, style=solid];
m5_119 -> m5_99  [key=2, style=dotted];
m5_120 -> m5_142  [key=0, style=solid];
m5_122 -> m5_142  [key=0, style=solid];
m5_124 -> m5_142  [key=0, style=solid];
m5_124 -> m5_125  [color=green, key=0, style=solid];
m5_124 -> m5_128  [color=green, key=0, style=solid];
m5_126 -> m5_127  [color=green, key=0, style=solid];
m5_126 -> m5_145  [key=2, style=dotted];
m5_126 -> m5_131  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_126 -> m5_133  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_126 -> m5_99  [color=green, key=2, style=dotted];
m5_127 -> m5_128  [key=0, style=solid];
m5_127 -> m5_138  [key=0, style=solid];
m5_127 -> m5_60  [key=2, style=dotted];
m5_127 -> m5_142  [color=green, key=0, style=solid];
m5_131 -> m5_127  [key=0, style=solid];
m5_131 -> m5_146  [key=2, style=dotted];
m5_131 -> m5_26  [key=2, style=dotted];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_147  [key=2, style=dotted];
m5_133 -> m5_135  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_128 -> m5_129  [key=0, style=solid];
m5_128 -> m5_137  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_128 -> m5_139  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_128 -> m5_141  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_128 -> m5_142  [key=0, style=solid];
m5_138 -> m5_142  [key=0, style=solid];
m5_138 -> m5_28  [key=2, style=dotted];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> m5_132  [key=0, style=solid];
m5_129 -> m5_136  [key=0, style=solid];
m5_129 -> m5_137  [key=0, style=solid];
m5_137 -> m5_142  [key=0, style=solid];
m5_137 -> m5_27  [key=2, style=dotted];
m5_137 -> m5_28  [key=2, style=dotted];
m5_130 -> m5_131  [key=0, style=solid];
m5_132 -> m5_133  [key=0, style=solid];
m5_136 -> m5_127  [key=0, style=solid];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_99  [key=2, style=dotted];
m5_135 -> m5_142  [key=0, style=solid];
m5_140 -> m5_142  [key=0, style=solid];
m5_142 -> m5_103  [color=blue, key=0, style=bold];
m5_292 -> m5_293  [key=0, style=solid];
m5_293 -> m5_294  [key=0, style=solid];
m5_293 -> m5_99  [key=2, style=dotted];
m5_294 -> m5_292  [color=blue, key=0, style=bold];
m5_46 -> m5_47  [key=0, style=solid];
m5_47 -> m5_46  [color=blue, key=0, style=bold];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_13  [key=2, style=dotted];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_12  [key=0, style=solid];
m5_12 -> m5_5  [color=blue, key=0, style=bold];
m5_97 -> m5_290  [key=0, style=solid];
m5_97 -> m5_68  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m5_97 -> m5_82  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m5_290 -> m5_291  [key=0, style=solid];
m5_290 -> m5_99  [key=2, style=dotted];
m5_291 -> m5_97  [color=blue, key=0, style=bold];
m5_343 -> m5_381  [key=0, style=solid];
m5_343 -> m5_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m5_343 -> m5_331  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m5_343 -> m5_278  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonContainerType GetTypeForCloseToken", style=bold];
m5_343 -> m5_85  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonContainerType GetTypeForCloseToken", style=bold];
m5_343 -> m5_306  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonContainerType GetTypeForCloseToken", style=bold];
m5_381 -> m5_382  [key=0, style=solid];
m5_381 -> m5_384  [key=0, style=solid];
m5_381 -> m5_386  [key=0, style=solid];
m5_381 -> m5_388  [key=0, style=solid];
m5_388 -> m5_389  [key=0, style=solid];
m5_388 -> m5_27  [key=2, style=dotted];
m5_388 -> m5_28  [key=2, style=dotted];
m5_382 -> m5_383  [key=0, style=solid];
m5_384 -> m5_385  [key=0, style=solid];
m5_386 -> m5_387  [key=0, style=solid];
m5_383 -> m5_389  [key=0, style=solid];
m5_385 -> m5_389  [key=0, style=solid];
m5_387 -> m5_389  [key=0, style=solid];
m5_389 -> m5_343  [color=blue, key=0, style=bold];
m5_235 -> m5_236  [key=0, style=solid];
m5_235 -> m5_69  [color=darkorchid, key=3, label="method methodReturn System.DateTime? ReadAsDateTimeInternal", style=bold];
m5_235 -> m5_245  [color=darkorchid, key=3, label="method methodReturn System.DateTime? ReadAsDateTimeInternal", style=bold];
m5_236 -> m5_237  [key=0, style=solid];
m5_237 -> m5_238  [key=0, style=solid];
m5_237 -> m5_240  [key=0, style=solid];
m5_237 -> m5_60  [key=2, style=dotted];
m5_238 -> m5_239  [key=0, style=solid];
m5_238 -> m5_97  [key=2, style=dotted];
m5_240 -> m5_236  [key=0, style=solid];
m5_240 -> m5_241  [key=0, style=solid];
m5_239 -> m5_265  [key=0, style=solid];
m5_241 -> m5_242  [key=0, style=solid];
m5_241 -> m5_243  [key=0, style=solid];
m5_242 -> m5_265  [key=0, style=solid];
m5_243 -> m5_244  [key=0, style=solid];
m5_243 -> m5_245  [key=0, style=solid];
m5_244 -> m5_265  [key=0, style=solid];
m5_245 -> m5_246  [key=0, style=solid];
m5_246 -> m5_247  [key=0, style=solid];
m5_246 -> m5_262  [key=0, style=solid];
m5_247 -> m5_248  [key=0, style=solid];
m5_247 -> m5_252  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_247 -> m5_257  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_262 -> m5_263  [key=0, style=solid];
m5_262 -> m5_264  [key=0, style=solid];
m5_248 -> m5_249  [key=0, style=solid];
m5_248 -> m5_251  [key=0, style=solid];
m5_248 -> m5_100  [key=2, style=dotted];
m5_252 -> m5_253  [key=0, style=solid];
m5_252 -> m5_257  [key=0, style=solid];
m5_252 -> m5_101  [key=2, style=dotted];
m5_257 -> m5_258  [key=0, style=solid];
m5_257 -> m5_261  [key=0, style=solid];
m5_257 -> m5_267  [key=2, style=dotted];
m5_249 -> m5_250  [key=0, style=solid];
m5_249 -> m5_97  [key=2, style=dotted];
m5_251 -> m5_252  [key=0, style=solid];
m5_250 -> m5_265  [key=0, style=solid];
m5_253 -> m5_254  [key=0, style=solid];
m5_254 -> m5_255  [key=0, style=solid];
m5_254 -> m5_266  [key=2, style=dotted];
m5_254 -> m5_254  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_254 -> m5_256  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_255 -> m5_256  [key=0, style=solid];
m5_255 -> m5_99  [key=2, style=dotted];
m5_256 -> m5_265  [key=0, style=solid];
m5_258 -> m5_259  [key=0, style=solid];
m5_258 -> m5_266  [key=2, style=dotted];
m5_258 -> m5_258  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_258 -> m5_260  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_261 -> m5_265  [key=0, style=solid];
m5_261 -> m5_27  [key=2, style=dotted];
m5_261 -> m5_28  [key=2, style=dotted];
m5_259 -> m5_260  [key=0, style=solid];
m5_259 -> m5_99  [key=2, style=dotted];
m5_260 -> m5_265  [key=0, style=solid];
m5_263 -> m5_265  [key=0, style=solid];
m5_264 -> m5_265  [key=0, style=solid];
m5_264 -> m5_27  [key=2, style=dotted];
m5_264 -> m5_28  [key=2, style=dotted];
m5_265 -> m5_235  [color=blue, key=0, style=bold];
m5_43 -> m5_44  [key=0, style=solid];
m5_44 -> m5_45  [key=0, style=solid];
m5_45 -> m5_43  [color=blue, key=0, style=bold];
m5_397 -> m5_398  [key=0, style=solid];
m5_398 -> m5_399  [key=0, style=solid];
m5_399 -> m5_400  [key=0, style=solid];
m5_400 -> m5_401  [key=0, style=solid];
m5_401 -> m5_397  [color=blue, key=0, style=bold];
m5_232 -> m5_362  [key=0, style=solid];
m5_232 -> m5_210  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m5_232 -> m5_290  [color=darkorchid, key=3, label="method methodReturn bool IsPrimitiveToken", style=bold];
m5_232 -> m5_74  [color=darkorchid, key=3, label="method methodReturn bool IsPrimitiveToken", style=bold];
m5_362 -> m5_363  [key=0, style=solid];
m5_362 -> m5_372  [key=0, style=solid];
m5_363 -> m5_364  [key=0, style=solid];
m5_372 -> m5_373  [key=0, style=solid];
m5_364 -> m5_365  [key=0, style=solid];
m5_365 -> m5_366  [key=0, style=solid];
m5_366 -> m5_367  [key=0, style=solid];
m5_367 -> m5_368  [key=0, style=solid];
m5_368 -> m5_369  [key=0, style=solid];
m5_369 -> m5_370  [key=0, style=solid];
m5_370 -> m5_371  [key=0, style=solid];
m5_371 -> m5_373  [key=0, style=solid];
m5_373 -> m5_232  [color=blue, key=0, style=bold];
m5_54 -> m5_55  [key=0, style=solid];
m5_55 -> m5_54  [color=blue, key=0, style=bold];
m5_331 -> m5_336  [key=0, style=solid];
m5_331 -> m5_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m5_331 -> m5_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m5_331 -> m5_308  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken endToken", style=bold];
m5_331 -> m5_310  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken endToken", style=bold];
m5_331 -> m5_312  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken endToken", style=bold];
m5_336 -> m5_337  [key=0, style=solid];
m5_336 -> m5_29  [key=2, style=dotted];
m5_336 -> m5_338  [color=darkseagreen4, key=1, label=currentObject, style=dashed];
m5_337 -> m5_338  [key=0, style=solid];
m5_337 -> m5_339  [key=0, style=solid];
m5_337 -> m5_343  [key=2, style=dotted];
m5_338 -> m5_342  [key=0, style=solid];
m5_338 -> m5_344  [key=2, style=dotted];
m5_338 -> m5_28  [key=2, style=dotted];
m5_339 -> m5_340  [key=0, style=solid];
m5_339 -> m5_341  [key=0, style=solid];
m5_339 -> m5_43  [key=2, style=dotted];
m5_340 -> m5_342  [key=0, style=solid];
m5_341 -> m5_342  [key=0, style=solid];
m5_341 -> m5_332  [key=2, style=dotted];
m5_342 -> m5_331  [color=blue, key=0, style=bold];
m5_332 -> m5_358  [key=0, style=solid];
m5_358 -> m5_359  [key=0, style=solid];
m5_358 -> m5_360  [key=0, style=solid];
m5_359 -> m5_361  [key=0, style=solid];
m5_360 -> m5_361  [key=0, style=solid];
m5_361 -> m5_332  [color=blue, key=0, style=bold];
m5_52 -> m5_53  [key=0, style=solid];
m5_53 -> m5_52  [color=blue, key=0, style=bold];
m5_60 -> m5_61  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_63  [key=2, style=dotted];
m5_62 -> m5_60  [color=blue, key=0, style=bold];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_69  [color=darkorchid, key=3, label="method methodReturn decimal? ReadAsDecimalInternal", style=bold];
m5_148 -> m5_162  [color=darkorchid, key=3, label="method methodReturn decimal? ReadAsDecimalInternal", style=bold];
m5_149 -> m5_150  [key=0, style=solid];
m5_150 -> m5_151  [key=0, style=solid];
m5_150 -> m5_155  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_150 -> m5_156  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_150 -> m5_160  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_150 -> m5_163  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_150 -> m5_172  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_150 -> m5_174  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_151 -> m5_152  [key=0, style=solid];
m5_151 -> m5_154  [key=0, style=solid];
m5_151 -> m5_60  [key=2, style=dotted];
m5_155 -> m5_150  [key=0, style=solid];
m5_155 -> m5_156  [key=0, style=solid];
m5_156 -> m5_157  [key=0, style=solid];
m5_156 -> m5_160  [key=0, style=solid];
m5_160 -> m5_161  [key=0, style=solid];
m5_160 -> m5_162  [key=0, style=solid];
m5_163 -> m5_164  [key=0, style=solid];
m5_163 -> m5_172  [key=0, style=solid];
m5_172 -> m5_173  [key=0, style=solid];
m5_172 -> m5_174  [key=0, style=solid];
m5_174 -> m5_175  [key=0, style=solid];
m5_174 -> m5_27  [key=2, style=dotted];
m5_174 -> m5_28  [key=2, style=dotted];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_97  [key=2, style=dotted];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_156  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_154 -> m5_160  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_154 -> m5_163  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_154 -> m5_172  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_154 -> m5_174  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_153 -> m5_175  [key=0, style=solid];
m5_157 -> m5_158  [key=0, style=solid];
m5_157 -> m5_159  [key=0, style=solid];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_176  [key=2, style=dotted];
m5_158 -> m5_99  [key=2, style=dotted];
m5_159 -> m5_175  [key=0, style=solid];
m5_161 -> m5_175  [key=0, style=solid];
m5_162 -> m5_163  [key=0, style=solid];
m5_164 -> m5_165  [key=0, style=solid];
m5_164 -> m5_168  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_165 -> m5_166  [key=0, style=solid];
m5_165 -> m5_168  [key=0, style=solid];
m5_165 -> m5_100  [key=2, style=dotted];
m5_168 -> m5_169  [key=0, style=solid];
m5_168 -> m5_171  [key=0, style=solid];
m5_168 -> m5_177  [key=2, style=dotted];
m5_168 -> m5_170  [color=darkseagreen4, key=1, label=d, style=dashed];
m5_166 -> m5_167  [key=0, style=solid];
m5_166 -> m5_97  [key=2, style=dotted];
m5_167 -> m5_175  [key=0, style=solid];
m5_169 -> m5_170  [key=0, style=solid];
m5_169 -> m5_99  [key=2, style=dotted];
m5_171 -> m5_175  [key=0, style=solid];
m5_171 -> m5_27  [key=2, style=dotted];
m5_171 -> m5_28  [key=2, style=dotted];
m5_170 -> m5_175  [key=0, style=solid];
m5_173 -> m5_175  [key=0, style=solid];
m5_175 -> m5_148  [color=blue, key=0, style=bold];
m5_393 -> m5_394  [key=0, style=solid];
m5_393 -> m5_290  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m5_394 -> m5_395  [key=0, style=solid];
m5_394 -> m5_396  [key=0, style=solid];
m5_395 -> m5_396  [key=0, style=solid];
m5_395 -> m5_397  [key=2, style=dotted];
m5_396 -> m5_393  [color=blue, key=0, style=bold];
m5_143 -> m5_268  [key=0, style=solid];
m5_143 -> m5_290  [color=darkorchid, key=3, label="method methodReturn bool IsWrappedInTypeObject", style=bold];
m5_143 -> m5_74  [color=darkorchid, key=3, label="method methodReturn bool IsWrappedInTypeObject", style=bold];
m5_268 -> m5_269  [key=0, style=solid];
m5_269 -> m5_270  [key=0, style=solid];
m5_269 -> m5_279  [key=0, style=solid];
m5_270 -> m5_271  [key=0, style=solid];
m5_270 -> m5_272  [key=0, style=solid];
m5_270 -> m5_60  [key=2, style=dotted];
m5_279 -> m5_280  [key=0, style=solid];
m5_271 -> m5_280  [key=0, style=solid];
m5_271 -> m5_28  [key=2, style=dotted];
m5_272 -> m5_273  [key=0, style=solid];
m5_272 -> m5_278  [key=0, style=solid];
m5_272 -> m5_234  [key=2, style=dotted];
m5_273 -> m5_274  [key=0, style=solid];
m5_273 -> m5_60  [key=2, style=dotted];
m5_278 -> m5_280  [key=0, style=solid];
m5_278 -> m5_27  [key=2, style=dotted];
m5_278 -> m5_28  [key=2, style=dotted];
m5_274 -> m5_275  [key=0, style=solid];
m5_274 -> m5_278  [key=0, style=solid];
m5_274 -> m5_234  [key=2, style=dotted];
m5_274 -> m5_281  [key=2, style=dotted];
m5_275 -> m5_276  [key=0, style=solid];
m5_275 -> m5_60  [key=2, style=dotted];
m5_276 -> m5_277  [key=0, style=solid];
m5_276 -> m5_278  [key=0, style=solid];
m5_276 -> m5_234  [key=2, style=dotted];
m5_277 -> m5_280  [key=0, style=solid];
m5_280 -> m5_143  [color=blue, key=0, style=bold];
m5_390 -> m5_391  [key=0, style=solid];
m5_391 -> m5_392  [key=0, style=solid];
m5_391 -> m5_393  [key=2, style=dotted];
m5_392 -> m5_390  [color=blue, key=0, style=bold];
m5_58 -> m5_59  [key=0, style=solid];
m5_59 -> m5_58  [color=blue, key=0, style=bold];
m5_29 -> m5_30  [key=0, style=solid];
m5_30 -> m5_31  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_35  [key=0, style=solid];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_39  [color=darkseagreen4, key=1, label=oldPosition, style=dashed];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_39  [color=darkseagreen4, key=1, label=oldPosition, style=dashed];
m5_33 -> m5_34  [key=0, style=solid];
m5_39 -> m5_40  [key=0, style=solid];
m5_34 -> m5_37  [key=0, style=solid];
m5_34 -> m5_41  [key=2, style=dotted];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_42  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_39  [key=0, style=solid];
m5_38 -> m5_39  [key=0, style=solid];
m5_40 -> m5_29  [color=blue, key=0, style=bold];
m5_345 -> m5_346  [key=0, style=solid];
m5_346 -> m5_347  [key=0, style=solid];
m5_346 -> m5_43  [key=2, style=dotted];
m5_346 -> m5_356  [color=darkseagreen4, key=1, label=currentObject, style=dashed];
m5_347 -> m5_348  [key=0, style=solid];
m5_347 -> m5_350  [key=0, style=solid];
m5_347 -> m5_352  [key=0, style=solid];
m5_347 -> m5_354  [key=0, style=solid];
m5_347 -> m5_356  [key=0, style=solid];
m5_356 -> m5_357  [key=0, style=solid];
m5_356 -> m5_27  [key=2, style=dotted];
m5_356 -> m5_28  [key=2, style=dotted];
m5_348 -> m5_349  [key=0, style=solid];
m5_350 -> m5_351  [key=0, style=solid];
m5_352 -> m5_353  [key=0, style=solid];
m5_354 -> m5_355  [key=0, style=solid];
m5_349 -> m5_357  [key=0, style=solid];
m5_351 -> m5_357  [key=0, style=solid];
m5_353 -> m5_357  [key=0, style=solid];
m5_355 -> m5_357  [key=0, style=solid];
m5_355 -> m5_332  [key=2, style=dotted];
m5_357 -> m5_345  [color=blue, key=0, style=bold];
m5_178 -> m5_179  [key=0, style=solid];
m5_178 -> m5_69  [color=darkorchid, key=3, label="method methodReturn int? ReadAsInt32Internal", style=bold];
m5_178 -> m5_192  [color=darkorchid, key=3, label="method methodReturn int? ReadAsInt32Internal", style=bold];
m5_179 -> m5_180  [key=0, style=solid];
m5_180 -> m5_181  [key=0, style=solid];
m5_180 -> m5_185  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_180 -> m5_186  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_180 -> m5_190  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_180 -> m5_193  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_180 -> m5_202  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_184  [key=0, style=solid];
m5_181 -> m5_60  [key=2, style=dotted];
m5_185 -> m5_180  [key=0, style=solid];
m5_185 -> m5_186  [key=0, style=solid];
m5_186 -> m5_187  [key=0, style=solid];
m5_186 -> m5_190  [key=0, style=solid];
m5_190 -> m5_191  [key=0, style=solid];
m5_190 -> m5_192  [key=0, style=solid];
m5_193 -> m5_194  [key=0, style=solid];
m5_193 -> m5_202  [key=0, style=solid];
m5_202 -> m5_203  [key=0, style=solid];
m5_202 -> m5_204  [key=0, style=solid];
m5_182 -> m5_183  [key=0, style=solid];
m5_182 -> m5_97  [key=2, style=dotted];
m5_184 -> m5_185  [key=0, style=solid];
m5_184 -> m5_186  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_184 -> m5_190  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_184 -> m5_193  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_184 -> m5_202  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_183 -> m5_205  [key=0, style=solid];
m5_187 -> m5_188  [key=0, style=solid];
m5_187 -> m5_189  [key=0, style=solid];
m5_188 -> m5_189  [key=0, style=solid];
m5_188 -> m5_206  [key=2, style=dotted];
m5_188 -> m5_99  [key=2, style=dotted];
m5_189 -> m5_205  [key=0, style=solid];
m5_191 -> m5_205  [key=0, style=solid];
m5_192 -> m5_193  [key=0, style=solid];
m5_194 -> m5_195  [key=0, style=solid];
m5_194 -> m5_198  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_195 -> m5_196  [key=0, style=solid];
m5_195 -> m5_198  [key=0, style=solid];
m5_195 -> m5_100  [key=2, style=dotted];
m5_198 -> m5_199  [key=0, style=solid];
m5_198 -> m5_201  [key=0, style=solid];
m5_198 -> m5_207  [key=2, style=dotted];
m5_198 -> m5_200  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_196 -> m5_197  [key=0, style=solid];
m5_196 -> m5_97  [key=2, style=dotted];
m5_197 -> m5_205  [key=0, style=solid];
m5_199 -> m5_200  [key=0, style=solid];
m5_199 -> m5_99  [key=2, style=dotted];
m5_201 -> m5_205  [key=0, style=solid];
m5_201 -> m5_27  [key=2, style=dotted];
m5_201 -> m5_28  [key=2, style=dotted];
m5_200 -> m5_205  [key=0, style=solid];
m5_203 -> m5_205  [key=0, style=solid];
m5_204 -> m5_205  [key=0, style=solid];
m5_204 -> m5_27  [key=2, style=dotted];
m5_204 -> m5_28  [key=2, style=dotted];
m5_205 -> m5_178  [color=blue, key=0, style=bold];
m5_99 -> m5_295  [key=0, style=solid];
m5_99 -> m5_296  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_99 -> m5_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m5_99 -> m5_315  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_99 -> m5_328  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_99 -> m5_74  [color=darkorchid, key=3, label="Parameter variable bool updateIndex", style=bold];
m5_99 -> m5_114  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m5_99 -> m5_158  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m5_99 -> m5_188  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m5_99 -> m5_226  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m5_99 -> m5_97  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m5_99 -> m5_292  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_99 -> m5_290  [color=darkorchid, key=3, label="Parameter variable bool updateIndex", style=bold];
m5_99 -> m5_78  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_99 -> m5_112  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_99 -> m5_118  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_99 -> m5_133  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_99 -> m5_162  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_99 -> m5_192  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_99 -> m5_222  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_99 -> m5_245  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_99 -> m5_69  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m5_99 -> m5_125  [color=green, key=3, label="Parameter variable object value", style=bold];
m5_295 -> m5_296  [key=0, style=solid];
m5_296 -> m5_297  [key=0, style=solid];
m5_297 -> m5_298  [key=0, style=solid];
m5_297 -> m5_301  [key=0, style=solid];
m5_297 -> m5_304  [key=0, style=solid];
m5_297 -> m5_307  [key=0, style=solid];
m5_297 -> m5_309  [key=0, style=solid];
m5_297 -> m5_311  [key=0, style=solid];
m5_297 -> m5_313  [key=0, style=solid];
m5_297 -> m5_316  [key=0, style=solid];
m5_315 -> m5_330  [key=0, style=solid];
m5_328 -> m5_329  [key=0, style=solid];
m5_328 -> m5_330  [key=0, style=solid];
m5_298 -> m5_299  [key=0, style=solid];
m5_301 -> m5_302  [key=0, style=solid];
m5_304 -> m5_305  [key=0, style=solid];
m5_307 -> m5_308  [key=0, style=solid];
m5_309 -> m5_310  [key=0, style=solid];
m5_311 -> m5_312  [key=0, style=solid];
m5_313 -> m5_314  [key=0, style=solid];
m5_316 -> m5_317  [key=0, style=solid];
m5_299 -> m5_300  [key=0, style=solid];
m5_300 -> m5_330  [key=0, style=solid];
m5_300 -> m5_14  [key=2, style=dotted];
m5_302 -> m5_303  [key=0, style=solid];
m5_303 -> m5_330  [key=0, style=solid];
m5_303 -> m5_14  [key=2, style=dotted];
m5_305 -> m5_306  [key=0, style=solid];
m5_306 -> m5_330  [key=0, style=solid];
m5_306 -> m5_14  [key=2, style=dotted];
m5_308 -> m5_330  [key=0, style=solid];
m5_308 -> m5_331  [key=2, style=dotted];
m5_310 -> m5_330  [key=0, style=solid];
m5_310 -> m5_331  [key=2, style=dotted];
m5_312 -> m5_330  [key=0, style=solid];
m5_312 -> m5_331  [key=2, style=dotted];
m5_314 -> m5_315  [key=0, style=solid];
m5_317 -> m5_318  [key=0, style=solid];
m5_318 -> m5_319  [key=0, style=solid];
m5_319 -> m5_320  [key=0, style=solid];
m5_320 -> m5_321  [key=0, style=solid];
m5_321 -> m5_322  [key=0, style=solid];
m5_322 -> m5_323  [key=0, style=solid];
m5_323 -> m5_324  [key=0, style=solid];
m5_324 -> m5_325  [key=0, style=solid];
m5_325 -> m5_326  [key=0, style=solid];
m5_325 -> m5_327  [key=0, style=solid];
m5_325 -> m5_43  [key=2, style=dotted];
m5_326 -> m5_328  [key=0, style=solid];
m5_327 -> m5_328  [key=0, style=solid];
m5_327 -> m5_332  [key=2, style=dotted];
m5_329 -> m5_330  [key=0, style=solid];
m5_329 -> m5_24  [key=2, style=dotted];
m5_330 -> m5_99  [color=blue, key=0, style=bold];
m5_50 -> m5_51  [key=0, style=solid];
m5_51 -> m5_50  [color=blue, key=0, style=bold];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerType", style=dashed];
m5_14 -> m5_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerType", style=dashed];
m5_14 -> m5_278  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType value", style=bold];
m5_14 -> m5_85  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType value", style=bold];
m5_14 -> m5_306  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType value", style=bold];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_24  [key=2, style=dotted];
m5_17 -> m5_23  [key=0, style=solid];
m5_17 -> m5_25  [key=2, style=dotted];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_25  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_26  [key=2, style=dotted];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_23  [key=0, style=solid];
m5_21 -> m5_22  [key=0, style=solid];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_27  [key=2, style=dotted];
m5_22 -> m5_28  [key=2, style=dotted];
m5_23 -> m5_14  [color=blue, key=0, style=bold];
m5_289 -> m5_374  [key=0, style=solid];
m5_289 -> m5_290  [color=darkorchid, key=3, label="method methodReturn bool IsStartToken", style=bold];
m5_289 -> m5_74  [color=darkorchid, key=3, label="method methodReturn bool IsStartToken", style=bold];
m5_374 -> m5_375  [key=0, style=solid];
m5_374 -> m5_379  [key=0, style=solid];
m5_375 -> m5_376  [key=0, style=solid];
m5_379 -> m5_380  [key=0, style=solid];
m5_376 -> m5_377  [key=0, style=solid];
m5_377 -> m5_378  [key=0, style=solid];
m5_378 -> m5_380  [key=0, style=solid];
m5_380 -> m5_289  [color=blue, key=0, style=bold];
m5_282 -> m5_283  [key=0, style=solid];
m5_283 -> m5_284  [key=0, style=solid];
m5_283 -> m5_285  [key=0, style=solid];
m5_284 -> m5_285  [key=0, style=solid];
m5_284 -> m5_46  [key=2, style=dotted];
m5_285 -> m5_286  [key=0, style=solid];
m5_285 -> m5_288  [key=0, style=solid];
m5_285 -> m5_289  [key=2, style=dotted];
m5_286 -> m5_287  [key=0, style=solid];
m5_287 -> m5_287  [key=0, style=solid];
m5_287 -> m5_288  [key=0, style=solid];
m5_287 -> m5_46  [key=2, style=dotted];
m5_288 -> m5_282  [color=blue, key=0, style=bold];
m5_24 -> m5_333  [key=0, style=solid];
m5_333 -> m5_334  [key=0, style=solid];
m5_333 -> m5_335  [key=0, style=solid];
m5_334 -> m5_335  [key=0, style=solid];
m5_335 -> m5_24  [color=blue, key=0, style=bold];
m5_56 -> m5_57  [key=0, style=solid];
m5_57 -> m5_56  [color=blue, key=0, style=bold];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_69  [color=darkorchid, key=3, label="method methodReturn System.DateTimeOffset? ReadAsDateTimeOffsetInternal", style=bold];
m5_64 -> m5_78  [color=darkorchid, key=3, label="method methodReturn System.DateTimeOffset? ReadAsDateTimeOffsetInternal", style=bold];
m5_65 -> m5_66  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_71  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_66 -> m5_72  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_66 -> m5_76  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_66 -> m5_79  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_66 -> m5_93  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_66 -> m5_95  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_70  [key=0, style=solid];
m5_67 -> m5_60  [key=2, style=dotted];
m5_71 -> m5_66  [key=0, style=solid];
m5_71 -> m5_72  [key=0, style=solid];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_76  [key=0, style=solid];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_78  [key=0, style=solid];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_93  [key=0, style=solid];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_95  [key=0, style=solid];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_27  [key=2, style=dotted];
m5_95 -> m5_28  [key=2, style=dotted];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_97  [key=2, style=dotted];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_72  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_70 -> m5_76  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_70 -> m5_79  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_70 -> m5_93  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_70 -> m5_95  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_69 -> m5_96  [key=0, style=solid];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_75  [key=0, style=solid];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_98  [key=2, style=dotted];
m5_74 -> m5_99  [key=2, style=dotted];
m5_75 -> m5_96  [key=0, style=solid];
m5_77 -> m5_96  [key=0, style=solid];
m5_78 -> m5_79  [key=0, style=solid];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_85  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_80 -> m5_89  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_84  [key=0, style=solid];
m5_81 -> m5_100  [key=2, style=dotted];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_89  [key=0, style=solid];
m5_85 -> m5_101  [key=2, style=dotted];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_92  [key=0, style=solid];
m5_89 -> m5_102  [key=2, style=dotted];
m5_89 -> m5_91  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_97  [key=2, style=dotted];
m5_84 -> m5_85  [key=0, style=solid];
m5_83 -> m5_96  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_88  [color=darkseagreen4, key=1, label=dt, style=dashed];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_99  [key=2, style=dotted];
m5_88 -> m5_96  [key=0, style=solid];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_99  [key=2, style=dotted];
m5_92 -> m5_96  [key=0, style=solid];
m5_92 -> m5_27  [key=2, style=dotted];
m5_92 -> m5_28  [key=2, style=dotted];
m5_91 -> m5_96  [key=0, style=solid];
m5_94 -> m5_96  [key=0, style=solid];
m5_96 -> m5_64  [color=blue, key=0, style=bold];
m5_208 -> m5_209  [key=0, style=solid];
m5_208 -> m5_69  [color=darkorchid, key=3, label="method methodReturn string ReadAsStringInternal", style=bold];
m5_208 -> m5_222  [color=darkorchid, key=3, label="method methodReturn string ReadAsStringInternal", style=bold];
m5_209 -> m5_210  [key=0, style=solid];
m5_210 -> m5_211  [key=0, style=solid];
m5_210 -> m5_215  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_210 -> m5_216  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_210 -> m5_218  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_210 -> m5_220  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_210 -> m5_228  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_210 -> m5_230  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_211 -> m5_212  [key=0, style=solid];
m5_211 -> m5_214  [key=0, style=solid];
m5_211 -> m5_60  [key=2, style=dotted];
m5_215 -> m5_210  [key=0, style=solid];
m5_215 -> m5_216  [key=0, style=solid];
m5_216 -> m5_217  [key=0, style=solid];
m5_216 -> m5_218  [key=0, style=solid];
m5_218 -> m5_219  [key=0, style=solid];
m5_218 -> m5_220  [key=0, style=solid];
m5_220 -> m5_221  [key=0, style=solid];
m5_220 -> m5_228  [key=0, style=solid];
m5_220 -> m5_232  [key=2, style=dotted];
m5_228 -> m5_229  [key=0, style=solid];
m5_228 -> m5_230  [key=0, style=solid];
m5_230 -> m5_231  [key=0, style=solid];
m5_230 -> m5_27  [key=2, style=dotted];
m5_230 -> m5_28  [key=2, style=dotted];
m5_212 -> m5_213  [key=0, style=solid];
m5_212 -> m5_97  [key=2, style=dotted];
m5_214 -> m5_215  [key=0, style=solid];
m5_214 -> m5_216  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_214 -> m5_218  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_214 -> m5_220  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_214 -> m5_228  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_214 -> m5_230  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_213 -> m5_231  [key=0, style=solid];
m5_217 -> m5_231  [key=0, style=solid];
m5_219 -> m5_231  [key=0, style=solid];
m5_221 -> m5_222  [key=0, style=solid];
m5_221 -> m5_228  [key=0, style=solid];
m5_222 -> m5_223  [key=0, style=solid];
m5_223 -> m5_224  [key=0, style=solid];
m5_223 -> m5_225  [key=0, style=solid];
m5_224 -> m5_226  [key=0, style=solid];
m5_224 -> m5_233  [key=2, style=dotted];
m5_224 -> m5_227  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_225 -> m5_226  [key=0, style=solid];
m5_225 -> m5_234  [key=2, style=dotted];
m5_225 -> m5_227  [color=darkseagreen4, key=1, label=s, style=dashed];
m5_226 -> m5_227  [key=0, style=solid];
m5_226 -> m5_99  [key=2, style=dotted];
m5_227 -> m5_231  [key=0, style=solid];
m5_229 -> m5_231  [key=0, style=solid];
m5_231 -> m5_208  [color=blue, key=0, style=bold];
m5_402 -> m5_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_124  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_184  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_125  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m5_402 -> m5_126  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_7 -> m6_8  [key=0, style=solid];
m6_494 -> m6_495  [key=0, style=solid];
m6_494 -> m6_24  [key=2, style=dotted];
m6_2129 -> m6_2130  [key=0, style=solid];
m6_2130 -> m6_2131  [key=0, style=solid];
m6_2130 -> m6_2132  [key=2, style=dotted];
m6_2131 -> m6_2129  [color=blue, key=0, style=bold];
m6_684 -> m6_685  [key=0, style=solid];
m6_684 -> m6_686  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_684 -> m6_687  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.PersonReference", style=dashed];
m6_684 -> m6_688  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.PersonReference", style=dashed];
m6_684 -> m6_689  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.PersonReference", style=dashed];
m6_685 -> m6_686  [key=0, style=solid];
m6_685 -> m6_496  [key=2, style=dotted];
m6_686 -> m6_687  [key=0, style=solid];
m6_686 -> m6_676  [key=0, style=solid];
m6_686 -> m6_518  [key=2, style=dotted];
m6_686 -> m6_691  [color=darkseagreen4, key=1, label=systemId, style=dashed];
m6_687 -> m6_688  [key=0, style=solid];
m6_688 -> m6_689  [key=0, style=solid];
m6_688 -> m6_496  [key=2, style=dotted];
m6_689 -> m6_690  [key=0, style=solid];
m6_689 -> m6_676  [key=0, style=solid];
m6_689 -> m6_518  [key=2, style=dotted];
m6_689 -> m6_691  [color=darkseagreen4, key=1, label=internalSubset, style=dashed];
m6_690 -> m6_684  [color=blue, key=0, style=bold];
m6_690 -> m6_693  [key=0, style=solid];
m6_690 -> m6_492  [key=2, style=dotted];
m6_757 -> m6_758  [key=0, style=solid];
m6_757 -> m6_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDeclarationWrapper", style=dashed];
m6_763 -> m6_24  [key=2, style=dotted];
m6_763 -> m6_764  [key=0, style=solid];
m6_763 -> m6_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_484  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_586  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_590  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_592  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_594  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_627  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_707  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_709  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_711  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_763 -> m6_716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m6_764 -> m6_24  [key=2, style=dotted];
m6_764 -> m6_765  [key=0, style=solid];
m6_764 -> m6_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_759 -> m6_763  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_759 -> m6_764  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_759 -> m6_760  [key=0, style=solid];
m6_759 -> m6_767  [key=2, style=dotted];
m6_759 -> m6_761  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_759 -> m6_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDocumentWrapper", style=dashed];
m6_759 -> m6_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDocumentWrapper", style=dashed];
m6_762 -> m6_763  [key=0, style=solid];
m6_762 -> m6_770  [key=2, style=dotted];
m6_762 -> m6_765  [color=darkseagreen4, key=1, label=output, style=dashed];
m6_762 -> m6_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
m6_762 -> m6_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
m6_765 -> m6_766  [key=0, style=solid];
m6_765 -> m6_42  [key=2, style=dotted];
m6_765 -> m6_602  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_758 -> m6_759  [key=0, style=solid];
m6_758 -> m6_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDocumentTypeWrapper", style=dashed];
m6_760 -> m6_762  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_760 -> m6_761  [key=0, style=solid];
m6_760 -> m6_768  [key=2, style=dotted];
m6_760 -> m6_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XContainerWrapper", style=dashed];
m6_760 -> m6_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XContainerWrapper", style=dashed];
m6_761 -> m6_762  [key=0, style=solid];
m6_761 -> m6_769  [key=2, style=dotted];
m6_761 -> m6_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XObjectWrapper", style=dashed];
m6_766 -> m6_757  [color=blue, key=0, style=bold];
m6_766 -> m6_726  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_237 -> m6_238  [key=0, style=solid];
m6_242 -> m6_24  [key=2, style=dotted];
m6_242 -> m6_243  [key=0, style=solid];
m6_242 -> m6_68  [key=2, style=dotted];
m6_246 -> m6_24  [key=2, style=dotted];
m6_246 -> m6_247  [key=0, style=solid];
m6_246 -> m6_255  [key=2, style=dotted];
m6_246 -> m6_256  [key=2, style=dotted];
m6_246 -> m6_250  [color=darkseagreen4, key=1, label=manager, style=dashed];
m6_241 -> m6_242  [key=0, style=solid];
m6_241 -> m6_129  [key=2, style=dotted];
m6_243 -> m6_244  [key=0, style=solid];
m6_243 -> m6_60  [key=2, style=dotted];
m6_243 -> m6_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_243 -> m6_241  [color=blue, key=0, style=bold];
m6_245 -> m6_246  [key=0, style=solid];
m6_245 -> m6_49  [key=2, style=dotted];
m6_245 -> m6_254  [key=2, style=dotted];
m6_245 -> m6_247  [color=darkseagreen4, key=1, label=node, style=dashed];
m6_245 -> m6_250  [color=darkseagreen4, key=1, label=node, style=dashed];
m6_240 -> m6_241  [key=0, style=solid];
m6_240 -> m6_248  [key=2, style=dotted];
m6_244 -> m6_245  [key=0, style=solid];
m6_244 -> m6_60  [key=2, style=dotted];
m6_244 -> m6_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_244 -> m6_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_244 -> m6_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_244 -> m6_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_239 -> m6_240  [key=0, style=solid];
m6_239 -> m6_60  [key=2, style=dotted];
m6_239 -> m6_249  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_239 -> m6_237  [color=blue, key=0, style=bold];
m6_238 -> m6_250  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_238 -> m6_239  [key=0, style=solid];
m6_238 -> m6_248  [key=2, style=dotted];
m6_238 -> m6_240  [key=2, style=dotted];
m6_247 -> m6_237  [color=blue, key=0, style=bold];
m6_247 -> m6_248  [key=0, style=solid];
m6_247 -> m6_257  [key=2, style=dotted];
m6_554 -> m6_556  [key=0, style=solid];
m6_554 -> m6_557  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_558  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_561  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_562  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_567  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_570  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_571  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_573  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_575  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_554 -> m6_24  [key=2, style=dotted];
m6_554 -> m6_537  [key=2, style=dotted];
m6_554 -> m6_555  [key=0, style=solid];
m6_556 -> m6_557  [key=0, style=solid];
m6_556 -> m6_558  [key=0, style=solid];
m6_557 -> m6_576  [key=0, style=solid];
m6_557 -> m6_518  [key=2, style=dotted];
m6_557 -> m6_24  [key=2, style=dotted];
m6_557 -> m6_558  [key=0, style=solid];
m6_558 -> m6_559  [key=0, style=solid];
m6_558 -> m6_560  [key=0, style=solid];
m6_558 -> m6_235  [key=2, style=dotted];
m6_558 -> m6_322  [key=2, style=dotted];
m6_559 -> m6_576  [key=0, style=solid];
m6_559 -> m6_577  [key=2, style=dotted];
m6_559 -> m6_578  [key=2, style=dotted];
m6_559 -> m6_24  [key=2, style=dotted];
m6_559 -> m6_560  [key=0, style=solid];
m6_560 -> m6_561  [key=0, style=solid];
m6_560 -> m6_566  [key=0, style=solid];
m6_560 -> m6_540  [key=2, style=dotted];
m6_561 -> m6_562  [key=0, style=solid];
m6_561 -> m6_563  [key=0, style=solid];
m6_561 -> m6_24  [key=2, style=dotted];
m6_561 -> m6_541  [key=2, style=dotted];
m6_562 -> m6_576  [key=0, style=solid];
m6_562 -> m6_578  [key=2, style=dotted];
m6_562 -> m6_563  [key=0, style=solid];
m6_563 -> m6_564  [key=0, style=solid];
m6_563 -> m6_565  [key=0, style=solid];
m6_563 -> m6_24  [key=2, style=dotted];
m6_564 -> m6_576  [key=0, style=solid];
m6_564 -> m6_578  [key=2, style=dotted];
m6_564 -> m6_565  [key=0, style=solid];
m6_565 -> m6_576  [key=0, style=solid];
m6_565 -> m6_579  [key=2, style=dotted];
m6_565 -> m6_578  [key=2, style=dotted];
m6_565 -> m6_24  [key=2, style=dotted];
m6_565 -> m6_566  [key=0, style=solid];
m6_566 -> m6_567  [key=0, style=solid];
m6_566 -> m6_568  [key=0, style=solid];
m6_567 -> m6_576  [key=0, style=solid];
m6_567 -> m6_580  [key=2, style=dotted];
m6_567 -> m6_578  [key=2, style=dotted];
m6_567 -> m6_24  [key=2, style=dotted];
m6_567 -> m6_568  [key=0, style=solid];
m6_568 -> m6_569  [key=0, style=solid];
m6_568 -> m6_573  [key=0, style=solid];
m6_569 -> m6_570  [key=0, style=solid];
m6_569 -> m6_571  [key=0, style=solid];
m6_569 -> m6_24  [key=2, style=dotted];
m6_570 -> m6_576  [key=0, style=solid];
m6_570 -> m6_578  [key=2, style=dotted];
m6_570 -> m6_571  [key=0, style=solid];
m6_571 -> m6_572  [key=0, style=solid];
m6_571 -> m6_581  [key=2, style=dotted];
m6_571 -> m6_24  [key=2, style=dotted];
m6_573 -> m6_574  [key=0, style=solid];
m6_573 -> m6_575  [key=0, style=solid];
m6_573 -> m6_24  [key=2, style=dotted];
m6_575 -> m6_576  [key=0, style=solid];
m6_575 -> m6_583  [key=2, style=dotted];
m6_575 -> m6_584  [key=2, style=dotted];
m6_575 -> m6_24  [key=2, style=dotted];
m6_572 -> m6_576  [key=0, style=solid];
m6_572 -> m6_582  [key=2, style=dotted];
m6_572 -> m6_578  [key=2, style=dotted];
m6_572 -> m6_573  [key=0, style=solid];
m6_574 -> m6_576  [key=0, style=solid];
m6_574 -> m6_575  [key=0, style=solid];
m6_576 -> m6_554  [color=blue, key=0, style=bold];
m6_576 -> m6_577  [key=0, style=solid];
m6_18 -> m6_16  [color=blue, key=0, style=bold];
m6_1643 -> m6_1644  [key=0, style=solid];
m6_1643 -> m6_1645  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1643 -> m6_1646  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_1643 -> m6_1647  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_1644 -> m6_1645  [key=0, style=solid];
m6_1645 -> m6_1646  [key=0, style=solid];
m6_1646 -> m6_1647  [key=0, style=solid];
m6_1647 -> m6_1648  [key=0, style=solid];
m6_1648 -> m6_1643  [color=blue, key=0, style=bold];
m6_448 -> m6_449  [key=0, style=solid];
m6_448 -> m6_450  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_448 -> m6_451  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_448 -> m6_452  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_448 -> m6_453  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_448 -> m6_465  [key=2, style=dotted];
m6_448 -> m6_454  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_541 -> m6_542  [key=0, style=solid];
m6_541 -> m6_547  [key=0, style=solid];
m6_798 -> m6_799  [key=0, style=solid];
m6_802 -> m6_24  [key=2, style=dotted];
m6_802 -> m6_803  [key=0, style=solid];
m6_800 -> m6_802  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_800 -> m6_129  [key=2, style=dotted];
m6_800 -> m6_801  [key=0, style=solid];
m6_801 -> m6_802  [key=0, style=solid];
m6_799 -> m6_800  [key=0, style=solid];
m6_799 -> m6_804  [key=2, style=dotted];
m6_799 -> m6_790  [key=2, style=dotted];
m6_803 -> m6_798  [color=blue, key=0, style=bold];
m6_1730 -> m6_1731  [key=0, style=solid];
m6_1733 -> m6_24  [key=2, style=dotted];
m6_1733 -> m6_1734  [key=0, style=solid];
m6_1734 -> m6_24  [key=2, style=dotted];
m6_1734 -> m6_1735  [key=0, style=solid];
m6_1735 -> m6_24  [key=2, style=dotted];
m6_1735 -> m6_1736  [key=0, style=solid];
m6_1732 -> m6_1733  [key=0, style=solid];
m6_1732 -> m6_1734  [color=darkseagreen4, key=1, label=r, style=dashed];
m6_1732 -> m6_1735  [color=darkseagreen4, key=1, label=r, style=dashed];
m6_1732 -> m6_49  [key=2, style=dotted];
m6_1731 -> m6_1732  [key=0, style=solid];
m6_1736 -> m6_1730  [color=blue, key=0, style=bold];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_24  [key=2, style=dotted];
m6_95 -> m6_95  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_96 -> m6_95  [color=blue, key=0, style=bold];
m6_96 -> m6_24  [key=2, style=dotted];
m6_96 -> m6_96  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_96 -> m6_97  [key=0, style=solid];
m6_467 -> m6_490  [key=0, style=solid];
m6_467 -> m6_492  [key=2, style=dotted];
m6_467 -> m6_503  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m6_1234 -> m6_1235  [key=0, style=solid];
m6_1237 -> m6_24  [key=2, style=dotted];
m6_1237 -> m6_1238  [key=0, style=solid];
m6_1236 -> m6_1237  [key=0, style=solid];
m6_1236 -> m6_129  [key=2, style=dotted];
m6_1235 -> m6_1236  [key=0, style=solid];
m6_1235 -> m6_1102  [key=2, style=dotted];
m6_1238 -> m6_1234  [color=blue, key=0, style=bold];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_24  [key=2, style=dotted];
m6_109 -> m6_109  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_110 -> m6_109  [color=blue, key=0, style=bold];
m6_110 -> m6_24  [key=2, style=dotted];
m6_110 -> m6_110  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_110 -> m6_111  [key=0, style=solid];
m6_542 -> m6_543  [key=0, style=solid];
m6_542 -> m6_546  [key=0, style=solid];
m6_2426 -> m6_2427  [key=0, style=solid];
m6_2427 -> m6_60  [key=2, style=dotted];
m6_2427 -> m6_2428  [key=0, style=solid];
m6_2427 -> m6_2429  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2428 -> m6_2426  [color=blue, key=0, style=bold];
m6_2033 -> m6_2034  [key=0, style=solid];
m6_2035 -> m6_832  [key=2, style=dotted];
m6_2035 -> m6_2035  [color=darkseagreen4, key=1, label=pair, style=dashed];
m6_2035 -> m6_2034  [key=0, style=solid];
m6_2034 -> m6_2035  [key=0, style=solid];
m6_2034 -> m6_2036  [key=0, style=solid];
m6_2036 -> m6_2033  [color=blue, key=0, style=bold];
m6_719 -> m6_720  [key=0, style=solid];
m6_730 -> m6_24  [key=2, style=dotted];
m6_730 -> m6_731  [key=0, style=solid];
m6_731 -> m6_24  [key=2, style=dotted];
m6_731 -> m6_732  [key=0, style=solid];
m6_731 -> m6_737  [key=0, style=solid];
m6_732 -> m6_24  [key=2, style=dotted];
m6_732 -> m6_733  [key=0, style=solid];
m6_732 -> m6_735  [key=0, style=solid];
m6_733 -> m6_24  [key=2, style=dotted];
m6_733 -> m6_734  [key=0, style=solid];
m6_733 -> m6_738  [key=2, style=dotted];
m6_734 -> m6_24  [key=2, style=dotted];
m6_734 -> m6_735  [key=0, style=solid];
m6_734 -> m6_737  [key=0, style=solid];
m6_735 -> m6_24  [key=2, style=dotted];
m6_735 -> m6_736  [key=0, style=solid];
m6_735 -> m6_737  [color=darkseagreen4, key=1, label="out string", style=dashed];
m6_736 -> m6_24  [key=2, style=dotted];
m6_736 -> m6_737  [key=0, style=solid];
m6_737 -> m6_24  [key=2, style=dotted];
m6_737 -> m6_738  [key=0, style=solid];
m6_737 -> m6_649  [color=blue, key=0, style=bold];
m6_738 -> m6_24  [key=2, style=dotted];
m6_738 -> m6_739  [key=0, style=solid];
m6_724 -> m6_730  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_724 -> m6_731  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_724 -> m6_732  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_724 -> m6_733  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_724 -> m6_734  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_724 -> m6_725  [key=0, style=solid];
m6_724 -> m6_684  [key=2, style=dotted];
m6_724 -> m6_727  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_724 -> m6_497  [color=blue, key=0, style=bold];
m6_729 -> m6_730  [key=0, style=solid];
m6_729 -> m6_731  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m6_729 -> m6_732  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m6_729 -> m6_733  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m6_729 -> m6_734  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m6_729 -> m6_735  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m6_729 -> m6_736  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m6_729 -> m6_737  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m6_729 -> m6_738  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m6_729 -> m6_49  [key=2, style=dotted];
m6_720 -> m6_724  [color=darkseagreen4, key=1, label=p1, style=dashed];
m6_720 -> m6_721  [key=0, style=solid];
m6_720 -> m6_740  [key=2, style=dotted];
m6_720 -> m6_722  [color=darkseagreen4, key=1, label=p1, style=dashed];
m6_720 -> m6_723  [color=darkseagreen4, key=1, label=p1, style=dashed];
m6_721 -> m6_724  [color=darkseagreen4, key=1, label=p2, style=dashed];
m6_721 -> m6_722  [key=0, style=solid];
m6_721 -> m6_740  [key=2, style=dotted];
m6_721 -> m6_723  [color=darkseagreen4, key=1, label=p2, style=dashed];
m6_723 -> m6_724  [key=0, style=solid];
m6_723 -> m6_497  [key=0, style=solid];
m6_723 -> m6_496  [key=2, style=dotted];
m6_725 -> m6_726  [key=0, style=solid];
m6_727 -> m6_729  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_727 -> m6_176  [key=2, style=dotted];
m6_727 -> m6_728  [key=0, style=solid];
m6_727 -> m6_725  [color=blue, key=0, style=bold];
m6_728 -> m6_729  [key=0, style=solid];
m6_728 -> m6_42  [key=2, style=dotted];
m6_728 -> m6_735  [key=0, style=solid];
m6_728 -> m6_550  [key=2, style=dotted];
m6_726 -> m6_175  [key=2, style=dotted];
m6_726 -> m6_727  [key=0, style=solid];
m6_722 -> m6_723  [key=0, style=solid];
m6_722 -> m6_724  [key=0, style=solid];
m6_722 -> m6_492  [key=2, style=dotted];
m6_739 -> m6_719  [color=blue, key=0, style=bold];
m6_739 -> m6_740  [key=0, style=solid];
m6_739 -> m6_741  [key=2, style=dotted];
m6_739 -> m6_742  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_99  [color=blue, key=0, style=bold];
m6_118 -> m6_117  [color=blue, key=0, style=bold];
m6_118 -> m6_119  [key=0, style=solid];
m6_159 -> m6_160  [key=0, style=solid];
m6_1326 -> m6_1327  [key=0, style=solid];
m6_1332 -> m6_24  [key=2, style=dotted];
m6_1332 -> m6_1333  [key=0, style=solid];
m6_1333 -> m6_24  [key=2, style=dotted];
m6_1333 -> m6_1334  [key=0, style=solid];
m6_1330 -> m6_24  [key=2, style=dotted];
m6_1330 -> m6_1331  [key=0, style=solid];
m6_1327 -> m6_1332  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_1327 -> m6_1333  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_1327 -> m6_1328  [key=0, style=solid];
m6_1327 -> m6_1306  [key=2, style=dotted];
m6_1331 -> m6_1332  [key=0, style=solid];
m6_1331 -> m6_1333  [color=darkseagreen4, key=1, label=m2, style=dashed];
m6_1331 -> m6_49  [key=2, style=dotted];
m6_1329 -> m6_1330  [key=0, style=solid];
m6_1329 -> m6_1331  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1329 -> m6_175  [key=2, style=dotted];
m6_1329 -> m6_176  [key=2, style=dotted];
m6_1328 -> m6_1329  [key=0, style=solid];
m6_1328 -> m6_1307  [key=2, style=dotted];
m6_1334 -> m6_1326  [color=blue, key=0, style=bold];
m6_1769 -> m6_1770  [key=0, style=solid];
m6_1771 -> m6_24  [key=2, style=dotted];
m6_1771 -> m6_1772  [key=0, style=solid];
m6_1772 -> m6_24  [key=2, style=dotted];
m6_1772 -> m6_1773  [key=0, style=solid];
m6_1773 -> m6_24  [key=2, style=dotted];
m6_1773 -> m6_1774  [key=0, style=solid];
m6_1774 -> m6_24  [key=2, style=dotted];
m6_1774 -> m6_1775  [key=0, style=solid];
m6_1770 -> m6_1771  [key=0, style=solid];
m6_1770 -> m6_1772  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_1770 -> m6_1773  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_1770 -> m6_1774  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_1770 -> m6_49  [key=2, style=dotted];
m6_1775 -> m6_1769  [color=blue, key=0, style=bold];
m6_3053 -> m6_3054  [key=0, style=solid];
m6_3057 -> m6_24  [key=2, style=dotted];
m6_3057 -> m6_3058  [key=0, style=solid];
m6_3058 -> m6_24  [key=2, style=dotted];
m6_3058 -> m6_3059  [key=0, style=solid];
m6_3054 -> m6_3057  [color=darkseagreen4, key=1, label=d1, style=dashed];
m6_3054 -> m6_3058  [color=darkseagreen4, key=1, label=d1, style=dashed];
m6_3054 -> m6_3055  [key=0, style=solid];
m6_3054 -> m6_134  [key=2, style=dotted];
m6_3056 -> m6_3057  [key=0, style=solid];
m6_3056 -> m6_3058  [color=darkseagreen4, key=1, label=d2, style=dashed];
m6_3056 -> m6_49  [key=2, style=dotted];
m6_3055 -> m6_129  [key=2, style=dotted];
m6_3055 -> m6_3056  [key=0, style=solid];
m6_3059 -> m6_3053  [color=blue, key=0, style=bold];
m6_1710 -> m6_1711  [key=0, style=solid];
m6_1713 -> m6_24  [key=2, style=dotted];
m6_1713 -> m6_1714  [key=0, style=solid];
m6_1712 -> m6_1713  [key=0, style=solid];
m6_1712 -> m6_129  [key=2, style=dotted];
m6_1711 -> m6_1712  [key=0, style=solid];
m6_1711 -> m6_918  [key=2, style=dotted];
m6_1711 -> m6_1715  [key=2, style=dotted];
m6_1714 -> m6_1710  [color=blue, key=0, style=bold];
m6_2576 -> m6_2577  [key=0, style=solid];
m6_2578 -> m6_24  [key=2, style=dotted];
m6_2578 -> m6_2579  [key=0, style=solid];
m6_2578 -> m6_2561  [key=2, style=dotted];
m6_2578 -> m6_954  [key=2, style=dotted];
m6_2578 -> m6_1110  [key=2, style=dotted];
m6_2577 -> m6_2578  [key=0, style=solid];
m6_2577 -> m6_49  [key=2, style=dotted];
m6_2579 -> m6_2576  [color=blue, key=0, style=bold];
m6_1481 -> m6_1482  [key=0, style=solid];
m6_1491 -> m6_24  [key=2, style=dotted];
m6_1491 -> m6_1492  [key=0, style=solid];
m6_1484 -> m6_24  [key=2, style=dotted];
m6_1484 -> m6_1485  [key=0, style=solid];
m6_1485 -> m6_24  [key=2, style=dotted];
m6_1485 -> m6_1486  [key=0, style=solid];
m6_1486 -> m6_24  [key=2, style=dotted];
m6_1486 -> m6_1487  [key=0, style=solid];
m6_1487 -> m6_24  [key=2, style=dotted];
m6_1487 -> m6_1488  [key=0, style=solid];
m6_1488 -> m6_24  [key=2, style=dotted];
m6_1488 -> m6_1489  [key=0, style=solid];
m6_1489 -> m6_24  [key=2, style=dotted];
m6_1489 -> m6_1490  [key=0, style=solid];
m6_1482 -> m6_1491  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1482 -> m6_1483  [key=0, style=solid];
m6_1490 -> m6_1491  [key=0, style=solid];
m6_1490 -> m6_129  [key=2, style=dotted];
m6_1483 -> m6_1484  [key=0, style=solid];
m6_1483 -> m6_1485  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1483 -> m6_1486  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1483 -> m6_1487  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1483 -> m6_1488  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1483 -> m6_1489  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1483 -> m6_1490  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1483 -> m6_49  [key=2, style=dotted];
m6_1492 -> m6_1481  [color=blue, key=0, style=bold];
m6_1749 -> m6_1750  [key=0, style=solid];
m6_1751 -> m6_60  [key=2, style=dotted];
m6_1751 -> m6_1752  [key=0, style=solid];
m6_1751 -> m6_1753  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1750 -> m6_1754  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1750 -> m6_1751  [key=0, style=solid];
m6_1752 -> m6_1749  [color=blue, key=0, style=bold];
m6_429 -> m6_430  [key=0, style=solid];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_67  [color=blue, key=0, style=bold];
m6_70 -> m6_71  [key=0, style=solid];
m6_71 -> m6_69  [color=blue, key=0, style=bold];
m6_71 -> m6_60  [key=2, style=dotted];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_186 -> m6_187  [key=0, style=solid];
m6_186 -> m6_188  [color=darkseagreen4, key=1, label=declarationWrapper, style=dashed];
m6_186 -> m6_189  [color=darkseagreen4, key=1, label=declarationWrapper, style=dashed];
m6_190 -> m6_191  [key=0, style=solid];
m6_190 -> m6_192  [key=2, style=dotted];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_190  [key=0, style=solid];
m6_188 -> m6_189  [key=0, style=solid];
m6_189 -> m6_191  [key=0, style=solid];
m6_191 -> m6_185  [color=blue, key=0, style=bold];
m6_191 -> m6_192  [key=0, style=solid];
m6_2745 -> m6_2746  [key=0, style=solid];
m6_2748 -> m6_24  [key=2, style=dotted];
m6_2748 -> m6_2749  [key=0, style=solid];
m6_2749 -> m6_24  [key=2, style=dotted];
m6_2749 -> m6_2750  [key=0, style=solid];
m6_2750 -> m6_24  [key=2, style=dotted];
m6_2750 -> m6_2751  [key=0, style=solid];
m6_2747 -> m6_2748  [key=0, style=solid];
m6_2747 -> m6_2749  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_2747 -> m6_2750  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_2747 -> m6_49  [key=2, style=dotted];
m6_2746 -> m6_2747  [key=0, style=solid];
m6_2751 -> m6_2745  [color=blue, key=0, style=bold];
m6_741 -> m6_742  [key=0, style=solid];
m6_2440 -> m6_2441  [key=0, style=solid];
m6_2450 -> m6_24  [key=2, style=dotted];
m6_2450 -> m6_2451  [key=0, style=solid];
m6_2452 -> m6_24  [key=2, style=dotted];
m6_2452 -> m6_2453  [key=0, style=solid];
m6_2453 -> m6_24  [key=2, style=dotted];
m6_2453 -> m6_2454  [key=0, style=solid];
m6_2454 -> m6_24  [key=2, style=dotted];
m6_2454 -> m6_2455  [key=0, style=solid];
m6_2449 -> m6_2450  [key=0, style=solid];
m6_2449 -> m6_129  [key=2, style=dotted];
m6_2449 -> m6_2451  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2451 -> m6_2452  [key=0, style=solid];
m6_2451 -> m6_2453  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_2451 -> m6_2454  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_2451 -> m6_49  [key=2, style=dotted];
m6_2448 -> m6_2449  [key=0, style=solid];
m6_2448 -> m6_832  [key=2, style=dotted];
m6_2445 -> m6_2449  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2445 -> m6_196  [key=2, style=dotted];
m6_2445 -> m6_2448  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2445 -> m6_2446  [key=0, style=solid];
m6_2445 -> m6_2447  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2441 -> m6_196  [key=2, style=dotted];
m6_2441 -> m6_2448  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_2441 -> m6_2442  [key=0, style=solid];
m6_2441 -> m6_2443  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_2441 -> m6_2444  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_2447 -> m6_2448  [key=0, style=solid];
m6_2447 -> m6_832  [key=2, style=dotted];
m6_2444 -> m6_2445  [key=0, style=solid];
m6_2444 -> m6_832  [key=2, style=dotted];
m6_2446 -> m6_832  [key=2, style=dotted];
m6_2446 -> m6_2447  [key=0, style=solid];
m6_2442 -> m6_832  [key=2, style=dotted];
m6_2442 -> m6_2443  [key=0, style=solid];
m6_2443 -> m6_832  [key=2, style=dotted];
m6_2443 -> m6_2444  [key=0, style=solid];
m6_2455 -> m6_2440  [color=blue, key=0, style=bold];
m6_224 -> m6_49  [key=2, style=dotted];
m6_224 -> m6_225  [key=0, style=solid];
m6_1156 -> m6_1157  [key=0, style=solid];
m6_1158 -> m6_24  [key=2, style=dotted];
m6_1158 -> m6_1159  [key=0, style=solid];
m6_1157 -> m6_1158  [key=0, style=solid];
m6_1157 -> m6_129  [key=2, style=dotted];
m6_1159 -> m6_1156  [color=blue, key=0, style=bold];
m6_3946 -> m6_3947  [key=0, style=solid];
m6_3949 -> m6_42  [key=2, style=dotted];
m6_3949 -> m6_3950  [key=0, style=solid];
m6_3948 -> m6_41  [key=2, style=dotted];
m6_3948 -> m6_3949  [key=0, style=solid];
m6_3947 -> m6_3948  [key=0, style=solid];
m6_3947 -> m6_3951  [key=2, style=dotted];
m6_3947 -> m6_3952  [key=2, style=dotted];
m6_3950 -> m6_3946  [color=blue, key=0, style=bold];
m6_3295 -> m6_3296  [key=0, style=solid];
m6_3301 -> m6_129  [key=2, style=dotted];
m6_3301 -> m6_3302  [key=0, style=solid];
m6_3298 -> m6_954  [key=2, style=dotted];
m6_3298 -> m6_3299  [key=0, style=solid];
m6_3302 -> m6_175  [key=2, style=dotted];
m6_3302 -> m6_176  [key=2, style=dotted];
m6_3302 -> m6_3303  [key=0, style=solid];
m6_3302 -> m6_3308  [key=2, style=dotted];
m6_3302 -> m6_3309  [key=2, style=dotted];
m6_3305 -> m6_175  [key=2, style=dotted];
m6_3305 -> m6_176  [key=2, style=dotted];
m6_3305 -> m6_3306  [key=0, style=solid];
m6_3305 -> m6_3308  [key=2, style=dotted];
m6_3305 -> m6_3309  [key=2, style=dotted];
m6_3305 -> m6_3310  [key=2, style=dotted];
m6_3296 -> m6_3301  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_3296 -> m6_3298  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_3296 -> m6_3302  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_3296 -> m6_3297  [key=0, style=solid];
m6_3296 -> m6_953  [key=2, style=dotted];
m6_3296 -> m6_3299  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_3296 -> m6_3300  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_3300 -> m6_3301  [key=0, style=solid];
m6_3303 -> m6_42  [key=2, style=dotted];
m6_3303 -> m6_3304  [key=0, style=solid];
m6_3306 -> m6_42  [key=2, style=dotted];
m6_3306 -> m6_3307  [key=0, style=solid];
m6_3297 -> m6_3298  [key=0, style=solid];
m6_3299 -> m6_3300  [key=0, style=solid];
m6_3304 -> m6_3305  [key=0, style=solid];
m6_3307 -> m6_3295  [color=blue, key=0, style=bold];
m6_357 -> m6_358  [key=0, style=solid];
m6_357 -> m6_360  [key=0, style=solid];
m6_359 -> m6_24  [key=2, style=dotted];
m6_359 -> m6_360  [key=0, style=solid];
m6_359 -> m6_357  [key=0, style=solid];
m6_359 -> m6_359  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_360 -> m6_24  [key=2, style=dotted];
m6_360 -> m6_361  [key=0, style=solid];
m6_360 -> m6_344  [key=0, style=solid];
m6_360 -> m6_367  [key=2, style=dotted];
m6_358 -> m6_359  [key=0, style=solid];
m6_358 -> m6_360  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_358 -> m6_49  [key=2, style=dotted];
m6_358 -> m6_259  [key=2, style=dotted];
m6_361 -> m6_357  [color=blue, key=0, style=bold];
m6_361 -> m6_332  [color=blue, key=0, style=bold];
m6_1472 -> m6_1473  [key=0, style=solid];
m6_1478 -> m6_24  [key=2, style=dotted];
m6_1478 -> m6_1479  [key=0, style=solid];
m6_1477 -> m6_1478  [key=0, style=solid];
m6_1477 -> m6_129  [key=2, style=dotted];
m6_1473 -> m6_1477  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1473 -> m6_1474  [key=0, style=solid];
m6_1473 -> m6_1480  [key=2, style=dotted];
m6_1473 -> m6_1475  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1473 -> m6_1476  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1476 -> m6_1477  [key=0, style=solid];
m6_1474 -> m6_1475  [key=0, style=solid];
m6_1475 -> m6_1476  [key=0, style=solid];
m6_1479 -> m6_1472  [color=blue, key=0, style=bold];
m6_3953 -> m6_3954  [key=0, style=solid];
m6_3957 -> m6_24  [key=2, style=dotted];
m6_3957 -> m6_3958  [key=0, style=solid];
m6_3956 -> m6_3957  [key=0, style=solid];
m6_3955 -> m6_3956  [key=0, style=solid];
m6_3955 -> m6_49  [key=2, style=dotted];
m6_3954 -> m6_3955  [key=0, style=solid];
m6_3958 -> m6_3953  [color=blue, key=0, style=bold];
m6_2480 -> m6_2481  [key=0, style=solid];
m6_2487 -> m6_24  [key=2, style=dotted];
m6_2487 -> m6_2488  [key=0, style=solid];
m6_2486 -> m6_2487  [key=0, style=solid];
m6_2486 -> m6_49  [key=2, style=dotted];
m6_2484 -> m6_2486  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2484 -> m6_41  [key=2, style=dotted];
m6_2484 -> m6_2485  [key=0, style=solid];
m6_2485 -> m6_2486  [key=0, style=solid];
m6_2485 -> m6_42  [key=2, style=dotted];
m6_2481 -> m6_196  [key=2, style=dotted];
m6_2481 -> m6_2484  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m6_2481 -> m6_2482  [key=0, style=solid];
m6_2481 -> m6_2483  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m6_2483 -> m6_2484  [key=0, style=solid];
m6_2483 -> m6_832  [key=2, style=dotted];
m6_2483 -> m6_2479  [key=2, style=dotted];
m6_2482 -> m6_832  [key=2, style=dotted];
m6_2482 -> m6_2483  [key=0, style=solid];
m6_2482 -> m6_2479  [key=2, style=dotted];
m6_2488 -> m6_2480  [color=blue, key=0, style=bold];
m6_599 -> m6_24  [key=2, style=dotted];
m6_599 -> m6_600  [key=0, style=solid];
m6_2018 -> m6_2019  [key=0, style=solid];
m6_2021 -> m6_24  [key=2, style=dotted];
m6_2021 -> m6_2022  [key=0, style=solid];
m6_2022 -> m6_24  [key=2, style=dotted];
m6_2022 -> m6_2023  [key=0, style=solid];
m6_2023 -> m6_24  [key=2, style=dotted];
m6_2023 -> m6_2024  [key=0, style=solid];
m6_2024 -> m6_24  [key=2, style=dotted];
m6_2024 -> m6_2025  [key=0, style=solid];
m6_2020 -> m6_2021  [key=0, style=solid];
m6_2020 -> m6_2022  [color=darkseagreen4, key=1, label=dic, style=dashed];
m6_2020 -> m6_2023  [color=darkseagreen4, key=1, label=dic, style=dashed];
m6_2020 -> m6_2024  [color=darkseagreen4, key=1, label=dic, style=dashed];
m6_2020 -> m6_49  [key=2, style=dotted];
m6_2019 -> m6_2020  [key=0, style=solid];
m6_2025 -> m6_2018  [color=blue, key=0, style=bold];
m6_287 -> m6_288  [key=0, style=solid];
m6_287 -> m6_175  [key=2, style=dotted];
m6_287 -> m6_295  [key=2, style=dotted];
m6_287 -> m6_198  [key=2, style=dotted];
m6_2984 -> m6_2985  [key=0, style=solid];
m6_2989 -> m6_24  [key=2, style=dotted];
m6_2989 -> m6_2990  [key=0, style=solid];
m6_2986 -> m6_2989  [color=darkseagreen4, key=1, label=uri, style=dashed];
m6_2986 -> m6_2987  [key=0, style=solid];
m6_2986 -> m6_1708  [key=2, style=dotted];
m6_2988 -> m6_2989  [key=0, style=solid];
m6_2988 -> m6_49  [key=2, style=dotted];
m6_2987 -> m6_129  [key=2, style=dotted];
m6_2987 -> m6_2988  [key=0, style=solid];
m6_2985 -> m6_2986  [key=0, style=solid];
m6_2990 -> m6_2984  [color=blue, key=0, style=bold];
m6_374 -> m6_447  [key=0, style=solid];
m6_374 -> m6_332  [key=2, style=dotted];
m6_2897 -> m6_2898  [key=0, style=solid];
m6_2898 -> m6_2899  [key=0, style=solid];
m6_2899 -> m6_2897  [color=blue, key=0, style=bold];
m6_2137 -> m6_2138  [key=0, style=solid];
m6_2138 -> m6_2139  [key=0, style=solid];
m6_2138 -> m6_2140  [key=2, style=dotted];
m6_2139 -> m6_2137  [color=blue, key=0, style=bold];
m6_258 -> m6_259  [key=0, style=solid];
m6_259 -> m6_260  [key=0, style=solid];
m6_259 -> m6_368  [key=0, style=solid];
m6_259 -> m6_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_259 -> m6_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_259 -> m6_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_375  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m6_259 -> m6_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_259 -> m6_380  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m6_259 -> m6_381  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_259 -> m6_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_259 -> m6_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_259 -> m6_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_259 -> m6_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_259 -> m6_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_397  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m6_259 -> m6_399  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_259 -> m6_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_259 -> m6_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_259 -> m6_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_259 -> m6_412  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_259 -> m6_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_259 -> m6_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_418  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_259 -> m6_431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_438  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_445  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_259 -> m6_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_260 -> m6_258  [color=blue, key=0, style=bold];
m6_3067 -> m6_3068  [key=0, style=solid];
m6_3071 -> m6_24  [key=2, style=dotted];
m6_3071 -> m6_3072  [key=0, style=solid];
m6_3072 -> m6_24  [key=2, style=dotted];
m6_3072 -> m6_3073  [key=0, style=solid];
m6_3068 -> m6_3071  [color=darkseagreen4, key=1, label=d1, style=dashed];
m6_3068 -> m6_3072  [color=darkseagreen4, key=1, label=d1, style=dashed];
m6_3068 -> m6_3069  [key=0, style=solid];
m6_3068 -> m6_134  [key=2, style=dotted];
m6_3070 -> m6_3071  [key=0, style=solid];
m6_3070 -> m6_3072  [color=darkseagreen4, key=1, label=d2, style=dashed];
m6_3070 -> m6_49  [key=2, style=dotted];
m6_3069 -> m6_129  [key=2, style=dotted];
m6_3069 -> m6_3070  [key=0, style=solid];
m6_3073 -> m6_3067  [color=blue, key=0, style=bold];
m6_4055 -> m6_4056  [key=0, style=solid];
m6_4059 -> m6_49  [key=2, style=dotted];
m6_4059 -> m6_4060  [key=0, style=solid];
m6_4058 -> m6_42  [key=2, style=dotted];
m6_4058 -> m6_4059  [key=0, style=solid];
m6_4057 -> m6_41  [key=2, style=dotted];
m6_4057 -> m6_4059  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4057 -> m6_4058  [key=0, style=solid];
m6_4056 -> m6_4057  [key=0, style=solid];
m6_4056 -> m6_4061  [key=2, style=dotted];
m6_4060 -> m6_4055  [color=blue, key=0, style=bold];
m6_549 -> m6_550  [key=0, style=solid];
m6_3688 -> m6_3689  [key=0, style=solid];
m6_3691 -> m6_24  [key=2, style=dotted];
m6_3691 -> m6_3692  [key=0, style=solid];
m6_3693 -> m6_24  [key=2, style=dotted];
m6_3693 -> m6_3694  [key=0, style=solid];
m6_3694 -> m6_24  [key=2, style=dotted];
m6_3694 -> m6_3695  [key=0, style=solid];
m6_3690 -> m6_3691  [key=0, style=solid];
m6_3690 -> m6_129  [key=2, style=dotted];
m6_3690 -> m6_3692  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3692 -> m6_3693  [key=0, style=solid];
m6_3692 -> m6_3694  [color=darkseagreen4, key=1, label=tuple2, style=dashed];
m6_3692 -> m6_49  [key=2, style=dotted];
m6_3689 -> m6_3690  [key=0, style=solid];
m6_3689 -> m6_3696  [key=2, style=dotted];
m6_3695 -> m6_3688  [color=blue, key=0, style=bold];
m6_579 -> m6_24  [key=2, style=dotted];
m6_579 -> m6_580  [key=0, style=solid];
m6_1991 -> m6_1992  [key=0, style=solid];
m6_1992 -> m6_832  [key=2, style=dotted];
m6_1992 -> m6_1993  [key=0, style=solid];
m6_1993 -> m6_1991  [color=blue, key=0, style=bold];
m6_364 -> m6_24  [key=2, style=dotted];
m6_364 -> m6_365  [key=0, style=solid];
m6_2714 -> m6_2715  [key=0, style=solid];
m6_2716 -> m6_24  [key=2, style=dotted];
m6_2716 -> m6_2717  [key=0, style=solid];
m6_2715 -> m6_2716  [key=0, style=solid];
m6_2715 -> m6_49  [key=2, style=dotted];
m6_2717 -> m6_2714  [color=blue, key=0, style=bold];
m6_3641 -> m6_3642  [key=0, style=solid];
m6_3642 -> m6_3643  [key=0, style=solid];
m6_3643 -> m6_3641  [color=blue, key=0, style=bold];
m6_2062 -> m6_2064  [key=0, style=solid];
m6_2064 -> m6_2065  [key=0, style=solid];
m6_2065 -> m6_2062  [color=blue, key=0, style=bold];
m6_335 -> m6_336  [key=0, style=solid];
m6_335 -> m6_344  [key=0, style=solid];
m6_338 -> m6_24  [key=2, style=dotted];
m6_338 -> m6_339  [key=0, style=solid];
m6_339 -> m6_24  [key=2, style=dotted];
m6_339 -> m6_340  [key=0, style=solid];
m6_339 -> m6_342  [key=0, style=solid];
m6_339 -> m6_363  [key=2, style=dotted];
m6_340 -> m6_24  [key=2, style=dotted];
m6_340 -> m6_341  [key=0, style=solid];
m6_340 -> m6_283  [key=2, style=dotted];
m6_340 -> m6_342  [color=darkseagreen4, key=1, label=nodes, style=dashed];
m6_336 -> m6_338  [color=darkseagreen4, key=1, label=otc, style=dashed];
m6_336 -> m6_339  [color=darkseagreen4, key=1, label=otc, style=dashed];
m6_336 -> m6_340  [color=darkseagreen4, key=1, label=otc, style=dashed];
m6_336 -> m6_337  [key=0, style=solid];
m6_336 -> m6_49  [key=2, style=dotted];
m6_336 -> m6_341  [color=darkseagreen4, key=1, label=otc, style=dashed];
m6_336 -> m6_342  [color=darkseagreen4, key=1, label=childNode, style=dashed];
m6_337 -> m6_338  [key=0, style=solid];
m6_337 -> m6_152  [key=2, style=dotted];
m6_337 -> m6_296  [key=2, style=dotted];
m6_337 -> m6_339  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m6_337 -> m6_341  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m6_341 -> m6_342  [key=0, style=solid];
m6_341 -> m6_152  [key=2, style=dotted];
m6_341 -> m6_364  [key=2, style=dotted];
m6_342 -> m6_335  [color=blue, key=0, style=bold];
m6_342 -> m6_343  [key=0, style=solid];
m6_342 -> m6_284  [key=2, style=dotted];
m6_2616 -> m6_2617  [key=0, style=solid];
m6_2620 -> m6_19  [key=2, style=dotted];
m6_2620 -> m6_2621  [key=0, style=solid];
m6_2622 -> m6_24  [key=2, style=dotted];
m6_2622 -> m6_2623  [key=0, style=solid];
m6_2619 -> m6_2620  [key=0, style=solid];
m6_2621 -> m6_2622  [key=0, style=solid];
m6_2621 -> m6_20  [key=2, style=dotted];
m6_2618 -> m6_2619  [key=0, style=solid];
m6_2618 -> m6_2621  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2618 -> m6_16  [key=2, style=dotted];
m6_2618 -> m6_373  [key=2, style=dotted];
m6_2617 -> m6_2618  [key=0, style=solid];
m6_2623 -> m6_2616  [color=blue, key=0, style=bold];
m6_2550 -> m6_2551  [key=0, style=solid];
m6_2555 -> m6_19  [key=2, style=dotted];
m6_2555 -> m6_2556  [key=0, style=solid];
m6_2552 -> m6_24  [key=2, style=dotted];
m6_2552 -> m6_2553  [key=0, style=solid];
m6_2557 -> m6_24  [key=2, style=dotted];
m6_2557 -> m6_2558  [key=0, style=solid];
m6_2557 -> m6_1110  [key=2, style=dotted];
m6_2558 -> m6_24  [key=2, style=dotted];
m6_2558 -> m6_2559  [key=0, style=solid];
m6_2558 -> m6_954  [key=2, style=dotted];
m6_2554 -> m6_2555  [key=0, style=solid];
m6_2556 -> m6_2557  [key=0, style=solid];
m6_2556 -> m6_2558  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m6_2556 -> m6_20  [key=2, style=dotted];
m6_2551 -> m6_2552  [key=0, style=solid];
m6_2551 -> m6_129  [key=2, style=dotted];
m6_2551 -> m6_954  [key=2, style=dotted];
m6_2551 -> m6_2560  [key=2, style=dotted];
m6_2551 -> m6_2561  [key=2, style=dotted];
m6_2551 -> m6_1110  [key=2, style=dotted];
m6_2551 -> m6_2553  [color=darkseagreen4, key=1, label=serializeObject, style=dashed];
m6_2553 -> m6_2554  [key=0, style=solid];
m6_2553 -> m6_2556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2553 -> m6_16  [key=2, style=dotted];
m6_2553 -> m6_373  [key=2, style=dotted];
m6_2559 -> m6_2550  [color=blue, key=0, style=bold];
m6_2788 -> m6_2789  [key=0, style=solid];
m6_2789 -> m6_129  [key=2, style=dotted];
m6_2789 -> m6_2790  [key=0, style=solid];
m6_2789 -> m6_2792  [key=2, style=dotted];
m6_2790 -> m6_49  [key=2, style=dotted];
m6_2790 -> m6_2791  [key=0, style=solid];
m6_2791 -> m6_2788  [color=blue, key=0, style=bold];
m6_860 -> m6_861  [key=0, style=solid];
m6_867 -> m6_42  [key=2, style=dotted];
m6_867 -> m6_868  [key=0, style=solid];
m6_866 -> m6_870  [key=2, style=dotted];
m6_866 -> m6_867  [key=0, style=solid];
m6_861 -> m6_866  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_861 -> m6_862  [key=0, style=solid];
m6_861 -> m6_869  [key=2, style=dotted];
m6_861 -> m6_863  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_861 -> m6_864  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_861 -> m6_865  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_865 -> m6_866  [key=0, style=solid];
m6_862 -> m6_863  [key=0, style=solid];
m6_863 -> m6_864  [key=0, style=solid];
m6_864 -> m6_865  [key=0, style=solid];
m6_868 -> m6_860  [color=blue, key=0, style=bold];
m6_492 -> m6_493  [key=0, style=solid];
m6_492 -> m6_541  [key=2, style=dotted];
m6_492 -> m6_24  [key=2, style=dotted];
m6_499 -> m6_500  [key=0, style=solid];
m6_499 -> m6_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_499 -> m6_504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_499 -> m6_506  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_499 -> m6_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_499 -> m6_509  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_499 -> m6_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_499 -> m6_511  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_499 -> m6_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_499 -> m6_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_499 -> m6_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_499 -> m6_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_500 -> m6_501  [key=0, style=solid];
m6_500 -> m6_503  [key=0, style=solid];
m6_500 -> m6_505  [key=0, style=solid];
m6_500 -> m6_507  [key=0, style=solid];
m6_500 -> m6_509  [key=0, style=solid];
m6_500 -> m6_24  [key=2, style=dotted];
m6_502 -> m6_517  [key=0, style=solid];
m6_502 -> m6_518  [key=2, style=dotted];
m6_502 -> m6_97  [key=2, style=dotted];
m6_502 -> m6_123  [key=2, style=dotted];
m6_502 -> m6_503  [key=0, style=solid];
m6_502 -> m6_24  [key=2, style=dotted];
m6_504 -> m6_517  [key=0, style=solid];
m6_504 -> m6_518  [key=2, style=dotted];
m6_504 -> m6_99  [key=2, style=dotted];
m6_504 -> m6_123  [key=2, style=dotted];
m6_504 -> m6_505  [key=0, style=solid];
m6_504 -> m6_24  [key=2, style=dotted];
m6_506 -> m6_517  [key=0, style=solid];
m6_506 -> m6_518  [key=2, style=dotted];
m6_506 -> m6_101  [key=2, style=dotted];
m6_506 -> m6_123  [key=2, style=dotted];
m6_506 -> m6_507  [key=0, style=solid];
m6_506 -> m6_24  [key=2, style=dotted];
m6_508 -> m6_517  [key=0, style=solid];
m6_508 -> m6_518  [key=2, style=dotted];
m6_508 -> m6_103  [key=2, style=dotted];
m6_508 -> m6_123  [key=2, style=dotted];
m6_508 -> m6_509  [key=0, style=solid];
m6_508 -> m6_24  [key=2, style=dotted];
m6_509 -> m6_510  [key=0, style=solid];
m6_509 -> m6_511  [key=0, style=solid];
m6_509 -> m6_295  [key=2, style=dotted];
m6_510 -> m6_517  [key=0, style=solid];
m6_510 -> m6_519  [key=2, style=dotted];
m6_510 -> m6_511  [key=0, style=solid];
m6_510 -> m6_24  [key=2, style=dotted];
m6_511 -> m6_512  [key=0, style=solid];
m6_511 -> m6_513  [key=0, style=solid];
m6_511 -> m6_520  [key=2, style=dotted];
m6_512 -> m6_517  [key=0, style=solid];
m6_512 -> m6_521  [key=2, style=dotted];
m6_512 -> m6_513  [key=0, style=solid];
m6_512 -> m6_24  [key=2, style=dotted];
m6_513 -> m6_514  [key=0, style=solid];
m6_513 -> m6_516  [key=0, style=solid];
m6_514 -> m6_515  [key=0, style=solid];
m6_514 -> m6_522  [key=2, style=dotted];
m6_514 -> m6_24  [key=2, style=dotted];
m6_516 -> m6_517  [key=0, style=solid];
m6_516 -> m6_495  [key=2, style=dotted];
m6_516 -> m6_24  [key=2, style=dotted];
m6_501 -> m6_502  [key=0, style=solid];
m6_503 -> m6_504  [key=0, style=solid];
m6_505 -> m6_506  [key=0, style=solid];
m6_507 -> m6_508  [key=0, style=solid];
m6_515 -> m6_517  [key=0, style=solid];
m6_515 -> m6_516  [key=0, style=solid];
m6_517 -> m6_499  [color=blue, key=0, style=bold];
m6_517 -> m6_518  [key=0, style=solid];
m6_3722 -> m6_3723  [key=0, style=solid];
m6_3725 -> m6_24  [key=2, style=dotted];
m6_3725 -> m6_3726  [key=0, style=solid];
m6_3725 -> m6_2357  [key=2, style=dotted];
m6_3724 -> m6_3725  [key=0, style=solid];
m6_3724 -> m6_49  [key=2, style=dotted];
m6_3726 -> m6_3727  [key=0, style=solid];
m6_3726 -> m6_60  [key=2, style=dotted];
m6_3726 -> m6_3728  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3723 -> m6_3724  [key=0, style=solid];
m6_3723 -> m6_3726  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3723 -> m6_3729  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3727 -> m6_3722  [color=blue, key=0, style=bold];
m6_612 -> m6_613  [key=0, style=solid];
m6_612 -> m6_647  [key=0, style=solid];
m6_613 -> m6_19  [key=2, style=dotted];
m6_613 -> m6_614  [key=0, style=solid];
m6_613 -> m6_673  [key=2, style=dotted];
m6_613 -> m6_674  [key=2, style=dotted];
m6_613 -> m6_615  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_616  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_617  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_618  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_619  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_620  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_621  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_622  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_624  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_625  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_626  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_627  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_628  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_629  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_630  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_631  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_632  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_633  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_634  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_635  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_636  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_637  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_638  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_639  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_640  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_641  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_642  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_643  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_644  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_645  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_646  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_647  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_648  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_649  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_650  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_651  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_652  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_653  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_654  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_655  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_656  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_657  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_658  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_659  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_661  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_662  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_663  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_664  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_666  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_667  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_668  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_669  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_670  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_671  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m6_613 -> m6_496  [key=2, style=dotted];
m6_616 -> m6_24  [key=2, style=dotted];
m6_616 -> m6_617  [key=0, style=solid];
m6_616 -> m6_518  [key=2, style=dotted];
m6_616 -> m6_618  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m6_616 -> m6_622  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m6_616 -> m6_503  [color=darkorchid, key=3, label="Parameter variable System.Reflection.MemberInfo member", style=bold];
m6_618 -> m6_24  [key=2, style=dotted];
m6_618 -> m6_619  [key=0, style=solid];
m6_618 -> m6_620  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m6_620 -> m6_24  [key=2, style=dotted];
m6_620 -> m6_621  [key=0, style=solid];
m6_620 -> m6_629  [key=0, style=solid];
m6_620 -> m6_642  [key=0, style=solid];
m6_622 -> m6_24  [key=2, style=dotted];
m6_622 -> m6_537  [key=2, style=dotted];
m6_622 -> m6_623  [key=0, style=solid];
m6_622 -> m6_551  [key=2, style=dotted];
m6_622 -> m6_622  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m6_622 -> m6_625  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m6_622 -> m6_627  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m6_622 -> m6_630  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m6_625 -> m6_24  [key=2, style=dotted];
m6_625 -> m6_626  [key=0, style=solid];
m6_625 -> m6_364  [key=2, style=dotted];
m6_627 -> m6_24  [key=2, style=dotted];
m6_627 -> m6_628  [key=0, style=solid];
m6_627 -> m6_613  [key=0, style=solid];
m6_627 -> m6_649  [key=2, style=dotted];
m6_629 -> m6_24  [key=2, style=dotted];
m6_629 -> m6_541  [key=2, style=dotted];
m6_629 -> m6_630  [key=0, style=solid];
m6_631 -> m6_24  [key=2, style=dotted];
m6_631 -> m6_632  [key=0, style=solid];
m6_631 -> m6_496  [key=2, style=dotted];
m6_633 -> m6_24  [key=2, style=dotted];
m6_633 -> m6_634  [key=0, style=solid];
m6_633 -> m6_294  [key=2, style=dotted];
m6_633 -> m6_641  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m6_633 -> m6_530  [color=darkorchid, key=3, label="Parameter variable string propertyName", style=bold];
m6_633 -> m6_645  [color=darkorchid, key=3, label="Parameter variable string propertyName", style=bold];
m6_633 -> m6_652  [color=darkorchid, key=3, label="Parameter variable string propertyName", style=bold];
m6_633 -> m6_633  [color=darkorchid, key=3, label="method methodReturn string ResolvePropertyName", style=bold];
m6_635 -> m6_24  [key=2, style=dotted];
m6_635 -> m6_636  [key=0, style=solid];
m6_635 -> m6_637  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_635 -> m6_638  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_637 -> m6_24  [key=2, style=dotted];
m6_637 -> m6_638  [key=0, style=solid];
m6_637 -> m6_636  [key=0, style=solid];
m6_637 -> m6_650  [key=2, style=dotted];
m6_637 -> m6_637  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_639 -> m6_24  [key=2, style=dotted];
m6_639 -> m6_640  [key=0, style=solid];
m6_639 -> m6_364  [key=2, style=dotted];
m6_641 -> m6_24  [key=2, style=dotted];
m6_641 -> m6_642  [key=0, style=solid];
m6_641 -> m6_613  [key=0, style=solid];
m6_641 -> m6_364  [key=2, style=dotted];
m6_641 -> m6_641  [color=darkorchid, key=3, label="method methodReturn string ResolveExtensionDataName", style=bold];
m6_643 -> m6_24  [key=2, style=dotted];
m6_643 -> m6_644  [key=0, style=solid];
m6_643 -> m6_613  [key=0, style=solid];
m6_645 -> m6_24  [key=2, style=dotted];
m6_645 -> m6_646  [key=0, style=solid];
m6_645 -> m6_613  [key=0, style=solid];
m6_645 -> m6_633  [color=darkorchid, key=3, label="method methodReturn string ResolveDictionaryKey", style=bold];
m6_647 -> m6_24  [key=2, style=dotted];
m6_647 -> m6_648  [key=0, style=solid];
m6_649 -> m6_24  [key=2, style=dotted];
m6_649 -> m6_650  [key=0, style=solid];
m6_649 -> m6_728  [key=0, style=solid];
m6_649 -> m6_729  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_649 -> m6_732  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_649 -> m6_733  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_651 -> m6_24  [key=2, style=dotted];
m6_651 -> m6_652  [key=0, style=solid];
m6_651 -> m6_669  [key=0, style=solid];
m6_653 -> m6_24  [key=2, style=dotted];
m6_653 -> m6_654  [key=0, style=solid];
m6_653 -> m6_667  [color=darkseagreen4, key=1, label=encoding, style=dashed];
m6_655 -> m6_24  [key=2, style=dotted];
m6_655 -> m6_656  [key=0, style=solid];
m6_655 -> m6_667  [key=0, style=solid];
m6_655 -> m6_496  [key=2, style=dotted];
m6_657 -> m6_24  [key=2, style=dotted];
m6_657 -> m6_658  [key=0, style=solid];
m6_659 -> m6_24  [key=2, style=dotted];
m6_659 -> m6_660  [key=0, style=solid];
m6_659 -> m6_655  [key=0, style=solid];
m6_659 -> m6_518  [key=2, style=dotted];
m6_659 -> m6_667  [color=darkseagreen4, key=1, label=version, style=dashed];
m6_662 -> m6_24  [key=2, style=dotted];
m6_662 -> m6_663  [key=0, style=solid];
m6_662 -> m6_655  [key=0, style=solid];
m6_662 -> m6_518  [key=2, style=dotted];
m6_662 -> m6_667  [color=darkseagreen4, key=1, label=encoding, style=dashed];
m6_664 -> m6_24  [key=2, style=dotted];
m6_664 -> m6_665  [key=0, style=solid];
m6_664 -> m6_496  [key=2, style=dotted];
m6_667 -> m6_24  [key=2, style=dotted];
m6_667 -> m6_668  [key=0, style=solid];
m6_667 -> m6_105  [key=2, style=dotted];
m6_669 -> m6_24  [key=2, style=dotted];
m6_669 -> m6_670  [key=0, style=solid];
m6_669 -> m6_551  [key=2, style=dotted];
m6_669 -> m6_518  [key=2, style=dotted];
m6_669 -> m6_109  [key=2, style=dotted];
m6_671 -> m6_24  [key=2, style=dotted];
m6_671 -> m6_672  [key=0, style=solid];
m6_671 -> m6_519  [color=blue, key=0, style=bold];
m6_614 -> m6_536  [key=2, style=dotted];
m6_614 -> m6_616  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m6_614 -> m6_615  [key=0, style=solid];
m6_614 -> m6_644  [key=0, style=solid];
m6_614 -> m6_646  [key=0, style=solid];
m6_615 -> m6_616  [key=0, style=solid];
m6_617 -> m6_618  [key=0, style=solid];
m6_617 -> m6_643  [key=0, style=solid];
m6_617 -> m6_295  [key=2, style=dotted];
m6_619 -> m6_620  [key=0, style=solid];
m6_621 -> m6_537  [key=2, style=dotted];
m6_621 -> m6_622  [key=0, style=solid];
m6_624 -> m6_625  [key=0, style=solid];
m6_624 -> m6_554  [key=2, style=dotted];
m6_624 -> m6_628  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m6_626 -> m6_235  [key=2, style=dotted];
m6_626 -> m6_539  [key=2, style=dotted];
m6_626 -> m6_627  [key=0, style=solid];
m6_628 -> m6_540  [key=2, style=dotted];
m6_628 -> m6_629  [key=0, style=solid];
m6_628 -> m6_613  [key=0, style=solid];
m6_628 -> m6_287  [key=2, style=dotted];
m6_630 -> m6_631  [key=0, style=solid];
m6_630 -> m6_551  [key=2, style=dotted];
m6_630 -> m6_630  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m6_630 -> m6_641  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m6_632 -> m6_633  [key=0, style=solid];
m6_632 -> m6_518  [key=2, style=dotted];
m6_632 -> m6_641  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m6_634 -> m6_635  [key=0, style=solid];
m6_634 -> m6_641  [key=0, style=solid];
m6_636 -> m6_637  [key=0, style=solid];
m6_636 -> m6_638  [key=0, style=solid];
m6_636 -> m6_552  [key=2, style=dotted];
m6_638 -> m6_639  [key=0, style=solid];
m6_638 -> m6_640  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m6_638 -> m6_641  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m6_640 -> m6_641  [key=0, style=solid];
m6_640 -> m6_287  [key=2, style=dotted];
m6_642 -> m6_643  [key=0, style=solid];
m6_642 -> m6_613  [key=0, style=solid];
m6_644 -> m6_645  [key=0, style=solid];
m6_646 -> m6_647  [key=0, style=solid];
m6_646 -> m6_648  [key=0, style=solid];
m6_646 -> m6_492  [key=2, style=dotted];
m6_648 -> m6_649  [key=0, style=solid];
m6_648 -> m6_548  [color=blue, key=0, style=bold];
m6_650 -> m6_651  [key=0, style=solid];
m6_652 -> m6_653  [key=0, style=solid];
m6_652 -> m6_667  [color=darkseagreen4, key=1, label=version, style=dashed];
m6_652 -> m6_633  [color=darkorchid, key=3, label="method methodReturn string GetResolvedPropertyName", style=bold];
m6_654 -> m6_655  [key=0, style=solid];
m6_654 -> m6_667  [color=darkseagreen4, key=1, label=standalone, style=dashed];
m6_656 -> m6_657  [key=0, style=solid];
m6_656 -> m6_660  [key=0, style=solid];
m6_656 -> m6_663  [key=0, style=solid];
m6_656 -> m6_666  [key=0, style=solid];
m6_656 -> m6_518  [key=2, style=dotted];
m6_658 -> m6_659  [key=0, style=solid];
m6_658 -> m6_496  [key=2, style=dotted];
m6_661 -> m6_662  [key=0, style=solid];
m6_661 -> m6_496  [key=2, style=dotted];
m6_663 -> m6_664  [key=0, style=solid];
m6_666 -> m6_667  [key=0, style=solid];
m6_666 -> m6_671  [key=0, style=solid];
m6_666 -> m6_492  [key=2, style=dotted];
m6_668 -> m6_669  [key=0, style=solid];
m6_668 -> m6_671  [key=0, style=solid];
m6_668 -> m6_123  [key=2, style=dotted];
m6_670 -> m6_671  [key=0, style=solid];
m6_670 -> m6_123  [key=2, style=dotted];
m6_623 -> m6_625  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m6_623 -> m6_624  [key=0, style=solid];
m6_623 -> m6_538  [key=2, style=dotted];
m6_623 -> m6_496  [key=2, style=dotted];
m6_660 -> m6_662  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m6_660 -> m6_661  [key=0, style=solid];
m6_660 -> m6_542  [key=2, style=dotted];
m6_665 -> m6_667  [color=darkseagreen4, key=1, label=standalone, style=dashed];
m6_665 -> m6_666  [key=0, style=solid];
m6_665 -> m6_543  [key=2, style=dotted];
m6_665 -> m6_655  [key=0, style=solid];
m6_665 -> m6_518  [key=2, style=dotted];
m6_672 -> m6_612  [color=blue, key=0, style=bold];
m6_672 -> m6_673  [key=0, style=solid];
m6_672 -> m6_691  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_3111 -> m6_3112  [key=0, style=solid];
m6_3114 -> m6_42  [key=2, style=dotted];
m6_3114 -> m6_3115  [key=0, style=solid];
m6_3113 -> m6_41  [key=2, style=dotted];
m6_3113 -> m6_3114  [key=0, style=solid];
m6_3112 -> m6_3113  [key=0, style=solid];
m6_3112 -> m6_3116  [key=2, style=dotted];
m6_3112 -> m6_3117  [key=2, style=dotted];
m6_3115 -> m6_3111  [color=blue, key=0, style=bold];
m6_94 -> m6_24  [key=2, style=dotted];
m6_94 -> m6_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_94 -> m6_95  [key=0, style=solid];
m6_2762 -> m6_2763  [key=0, style=solid];
m6_2765 -> m6_24  [key=2, style=dotted];
m6_2765 -> m6_2766  [key=0, style=solid];
m6_2764 -> m6_2765  [key=0, style=solid];
m6_2764 -> m6_41  [key=2, style=dotted];
m6_2763 -> m6_2764  [key=0, style=solid];
m6_2763 -> m6_2767  [key=2, style=dotted];
m6_2766 -> m6_2762  [color=blue, key=0, style=bold];
m6_2089 -> m6_2092  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_2089 -> m6_2090  [key=0, style=solid];
m6_2089 -> m6_2091  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_2093 -> m6_832  [key=2, style=dotted];
m6_2093 -> m6_2093  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_2093 -> m6_2092  [key=0, style=solid];
m6_2092 -> m6_2093  [key=0, style=solid];
m6_2092 -> m6_2094  [key=0, style=solid];
m6_2090 -> m6_2092  [key=0, style=solid];
m6_2090 -> m6_2091  [key=0, style=solid];
m6_2091 -> m6_2094  [key=0, style=solid];
m6_2091 -> m6_2095  [key=2, style=dotted];
m6_2091 -> m6_2096  [key=2, style=dotted];
m6_2094 -> m6_2089  [color=blue, key=0, style=bold];
m6_288 -> m6_289  [key=0, style=solid];
m6_288 -> m6_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_288 -> m6_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_288 -> m6_24  [key=2, style=dotted];
m6_289 -> m6_290  [key=0, style=solid];
m6_289 -> m6_294  [key=2, style=dotted];
m6_289 -> m6_291  [color=darkseagreen4, key=1, label=prefix, style=dashed];
m6_291 -> m6_293  [key=0, style=solid];
m6_291 -> m6_24  [key=2, style=dotted];
m6_291 -> m6_292  [key=0, style=solid];
m6_292 -> m6_293  [key=0, style=solid];
m6_292 -> m6_284  [color=blue, key=0, style=bold];
m6_290 -> m6_291  [key=0, style=solid];
m6_290 -> m6_292  [key=0, style=solid];
m6_290 -> m6_295  [key=2, style=dotted];
m6_290 -> m6_175  [key=2, style=dotted];
m6_290 -> m6_296  [key=2, style=dotted];
m6_293 -> m6_288  [color=blue, key=0, style=bold];
m6_321 -> m6_296  [color=blue, key=0, style=bold];
m6_3735 -> m6_3736  [key=0, style=solid];
m6_3738 -> m6_24  [key=2, style=dotted];
m6_3738 -> m6_3739  [key=0, style=solid];
m6_3742 -> m6_24  [key=2, style=dotted];
m6_3742 -> m6_3743  [key=0, style=solid];
m6_3737 -> m6_3738  [key=0, style=solid];
m6_3737 -> m6_129  [key=2, style=dotted];
m6_3739 -> m6_3740  [key=0, style=solid];
m6_3739 -> m6_1865  [key=2, style=dotted];
m6_3739 -> m6_3741  [color=darkseagreen4, key=1, label=r, style=dashed];
m6_3741 -> m6_3742  [key=0, style=solid];
m6_3741 -> m6_175  [key=2, style=dotted];
m6_3741 -> m6_176  [key=2, style=dotted];
m6_3736 -> m6_3737  [key=0, style=solid];
m6_3736 -> m6_3741  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_3736 -> m6_3731  [key=2, style=dotted];
m6_3740 -> m6_3741  [key=0, style=solid];
m6_3743 -> m6_3735  [color=blue, key=0, style=bold];
m6_1443 -> m6_1444  [key=0, style=solid];
m6_1446 -> m6_24  [key=2, style=dotted];
m6_1446 -> m6_1447  [key=0, style=solid];
m6_1447 -> m6_24  [key=2, style=dotted];
m6_1447 -> m6_1448  [key=0, style=solid];
m6_1448 -> m6_24  [key=2, style=dotted];
m6_1448 -> m6_1449  [key=0, style=solid];
m6_1445 -> m6_1446  [key=0, style=solid];
m6_1445 -> m6_1447  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1445 -> m6_1448  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1445 -> m6_49  [key=2, style=dotted];
m6_1444 -> m6_1445  [key=0, style=solid];
m6_1449 -> m6_1443  [color=blue, key=0, style=bold];
m6_3418 -> m6_3419  [key=0, style=solid];
m6_3423 -> m6_24  [key=2, style=dotted];
m6_3423 -> m6_3424  [key=0, style=solid];
m6_3424 -> m6_24  [key=2, style=dotted];
m6_3424 -> m6_3425  [key=0, style=solid];
m6_3424 -> m6_376  [key=2, style=dotted];
m6_3425 -> m6_24  [key=2, style=dotted];
m6_3425 -> m6_3426  [key=0, style=solid];
m6_3425 -> m6_376  [key=2, style=dotted];
m6_3422 -> m6_3423  [key=0, style=solid];
m6_3422 -> m6_3424  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3422 -> m6_3425  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3422 -> m6_49  [key=2, style=dotted];
m6_3419 -> m6_376  [key=2, style=dotted];
m6_3419 -> m6_3420  [key=0, style=solid];
m6_3419 -> m6_196  [key=2, style=dotted];
m6_3420 -> m6_3422  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3420 -> m6_41  [key=2, style=dotted];
m6_3420 -> m6_3421  [key=0, style=solid];
m6_3421 -> m6_3422  [key=0, style=solid];
m6_3421 -> m6_42  [key=2, style=dotted];
m6_3426 -> m6_3418  [color=blue, key=0, style=bold];
m6_3583 -> m6_3584  [key=0, style=solid];
m6_3584 -> m6_538  [key=2, style=dotted];
m6_3584 -> m6_3585  [key=0, style=solid];
m6_3584 -> m6_3587  [key=2, style=dotted];
m6_3584 -> m6_175  [key=2, style=dotted];
m6_3584 -> m6_198  [key=2, style=dotted];
m6_3585 -> m6_42  [key=2, style=dotted];
m6_3585 -> m6_3586  [key=0, style=solid];
m6_3586 -> m6_3583  [color=blue, key=0, style=bold];
m6_449 -> m6_739  [key=0, style=solid];
m6_449 -> m6_24  [key=2, style=dotted];
m6_449 -> m6_450  [key=0, style=solid];
m6_740 -> m6_449  [color=blue, key=0, style=bold];
m6_285 -> m6_286  [key=0, style=solid];
m6_285 -> m6_293  [key=2, style=dotted];
m6_1804 -> m6_1805  [key=0, style=solid];
m6_1806 -> m6_60  [key=2, style=dotted];
m6_1806 -> m6_1807  [key=0, style=solid];
m6_1806 -> m6_1808  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1805 -> m6_1809  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1805 -> m6_1806  [key=0, style=solid];
m6_1807 -> m6_1804  [color=blue, key=0, style=bold];
m6_323 -> m6_324  [key=0, style=solid];
m6_324 -> m6_325  [key=0, style=solid];
m6_324 -> m6_327  [key=2, style=dotted];
m6_324 -> m6_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_324 -> m6_328  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_324 -> m6_326  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_324 -> m6_334  [key=2, style=dotted];
m6_325 -> m6_326  [key=0, style=solid];
m6_325 -> m6_328  [key=2, style=dotted];
m6_326 -> m6_323  [color=blue, key=0, style=bold];
m6_326 -> m6_322  [key=2, style=dotted];
m6_326 -> m6_327  [key=0, style=solid];
m6_326 -> m6_321  [key=2, style=dotted];
m6_2154 -> m6_2155  [key=0, style=solid];
m6_2154 -> m6_2156  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2154 -> m6_2157  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m6_2154 -> m6_2158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.TestObjects.Person", style=dashed];
m6_2159 -> m6_1306  [key=2, style=dotted];
m6_2159 -> m6_2160  [key=0, style=solid];
m6_2158 -> m6_2159  [key=0, style=solid];
m6_2155 -> m6_2156  [key=0, style=solid];
m6_2156 -> m6_2157  [key=0, style=solid];
m6_2157 -> m6_2158  [key=0, style=solid];
m6_2160 -> m6_2154  [color=blue, key=0, style=bold];
m6_791 -> m6_792  [key=0, style=solid];
m6_795 -> m6_24  [key=2, style=dotted];
m6_795 -> m6_796  [key=0, style=solid];
m6_793 -> m6_795  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_793 -> m6_794  [key=0, style=solid];
m6_793 -> m6_49  [key=2, style=dotted];
m6_794 -> m6_795  [key=0, style=solid];
m6_794 -> m6_797  [key=2, style=dotted];
m6_792 -> m6_793  [key=0, style=solid];
m6_796 -> m6_791  [color=blue, key=0, style=bold];
m6_160 -> m6_161  [key=0, style=solid];
m6_160 -> m6_49  [key=2, style=dotted];
m6_160 -> m6_162  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_161 -> m6_162  [key=0, style=solid];
m6_161 -> m6_163  [key=2, style=dotted];
m6_161 -> m6_164  [key=2, style=dotted];
m6_161 -> m6_152  [key=2, style=dotted];
m6_162 -> m6_160  [color=blue, key=0, style=bold];
m6_162 -> m6_152  [key=2, style=dotted];
m6_162 -> m6_163  [key=0, style=solid];
m6_2467 -> m6_2468  [key=0, style=solid];
m6_2470 -> m6_24  [key=2, style=dotted];
m6_2470 -> m6_2471  [key=0, style=solid];
m6_2470 -> m6_375  [key=2, style=dotted];
m6_2471 -> m6_24  [key=2, style=dotted];
m6_2471 -> m6_2472  [key=0, style=solid];
m6_2469 -> m6_2470  [key=0, style=solid];
m6_2469 -> m6_2471  [color=darkseagreen4, key=1, label=dic, style=dashed];
m6_2469 -> m6_175  [key=2, style=dotted];
m6_2469 -> m6_296  [key=2, style=dotted];
m6_2468 -> m6_2469  [key=0, style=solid];
m6_2472 -> m6_2467  [color=blue, key=0, style=bold];
m6_2608 -> m6_2609  [key=0, style=solid];
m6_2610 -> m6_24  [key=2, style=dotted];
m6_2610 -> m6_2611  [key=0, style=solid];
m6_2609 -> m6_2610  [key=0, style=solid];
m6_2609 -> m6_49  [key=2, style=dotted];
m6_2611 -> m6_2608  [color=blue, key=0, style=bold];
m6_2097 -> m6_2098  [key=0, style=solid];
m6_2098 -> m6_322  [key=2, style=dotted];
m6_2098 -> m6_2099  [key=0, style=solid];
m6_2099 -> m6_2097  [color=blue, key=0, style=bold];
m6_198 -> m6_199  [key=0, style=solid];
m6_2344 -> m6_2345  [key=0, style=solid];
m6_2352 -> m6_24  [key=2, style=dotted];
m6_2352 -> m6_2353  [key=0, style=solid];
m6_2352 -> m6_2358  [key=2, style=dotted];
m6_2353 -> m6_24  [key=2, style=dotted];
m6_2353 -> m6_2354  [key=0, style=solid];
m6_2353 -> m6_2358  [key=2, style=dotted];
m6_2345 -> m6_2352  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m6_2345 -> m6_2353  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m6_2345 -> m6_2346  [key=0, style=solid];
m6_2345 -> m6_2356  [key=2, style=dotted];
m6_2345 -> m6_2347  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m6_2345 -> m6_2348  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m6_2351 -> m6_2352  [key=0, style=solid];
m6_2351 -> m6_2353  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m6_2351 -> m6_49  [key=2, style=dotted];
m6_2351 -> m6_2354  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m6_2354 -> m6_2355  [key=0, style=solid];
m6_2354 -> m6_152  [key=2, style=dotted];
m6_2346 -> m6_2357  [key=2, style=dotted];
m6_2346 -> m6_2347  [key=0, style=solid];
m6_2347 -> m6_2357  [key=2, style=dotted];
m6_2347 -> m6_2348  [key=0, style=solid];
m6_2348 -> m6_2351  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2348 -> m6_41  [key=2, style=dotted];
m6_2348 -> m6_2349  [key=0, style=solid];
m6_2348 -> m6_2350  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2350 -> m6_2351  [key=0, style=solid];
m6_2350 -> m6_42  [key=2, style=dotted];
m6_2349 -> m6_2350  [key=0, style=solid];
m6_2355 -> m6_2344  [color=blue, key=0, style=bold];
m6_555 -> m6_557  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m6_555 -> m6_538  [key=2, style=dotted];
m6_555 -> m6_556  [key=0, style=solid];
m6_999 -> m6_1000  [key=0, style=solid];
m6_1002 -> m6_24  [key=2, style=dotted];
m6_1002 -> m6_1003  [key=0, style=solid];
m6_1002 -> m6_998  [key=2, style=dotted];
m6_1001 -> m6_1002  [key=0, style=solid];
m6_1001 -> m6_936  [key=2, style=dotted];
m6_1001 -> m6_1003  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_1003 -> m6_998  [key=2, style=dotted];
m6_1003 -> m6_1004  [key=0, style=solid];
m6_1003 -> m6_42  [key=2, style=dotted];
m6_1000 -> m6_1001  [key=0, style=solid];
m6_1004 -> m6_999  [color=blue, key=0, style=bold];
m6_2103 -> m6_2104  [key=0, style=solid];
m6_2104 -> m6_2105  [key=0, style=solid];
m6_2104 -> m6_2106  [key=2, style=dotted];
m6_2105 -> m6_2103  [color=blue, key=0, style=bold];
m6_1353 -> m6_1354  [key=0, style=solid];
m6_1358 -> m6_24  [key=2, style=dotted];
m6_1358 -> m6_1359  [key=0, style=solid];
m6_1360 -> m6_24  [key=2, style=dotted];
m6_1360 -> m6_1361  [key=0, style=solid];
m6_1361 -> m6_24  [key=2, style=dotted];
m6_1361 -> m6_1362  [key=0, style=solid];
m6_1357 -> m6_1358  [key=0, style=solid];
m6_1357 -> m6_1295  [key=2, style=dotted];
m6_1357 -> m6_1296  [key=2, style=dotted];
m6_1357 -> m6_1359  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1359 -> m6_1360  [key=0, style=solid];
m6_1359 -> m6_1361  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_1359 -> m6_1295  [key=2, style=dotted];
m6_1359 -> m6_236  [key=2, style=dotted];
m6_1354 -> m6_1357  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_1354 -> m6_1355  [key=0, style=solid];
m6_1354 -> m6_1363  [key=2, style=dotted];
m6_1354 -> m6_1356  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_1356 -> m6_1357  [key=0, style=solid];
m6_1356 -> m6_1287  [key=2, style=dotted];
m6_1355 -> m6_1356  [key=0, style=solid];
m6_1355 -> m6_1287  [key=2, style=dotted];
m6_1362 -> m6_1353  [color=blue, key=0, style=bold];
m6_3339 -> m6_3340  [key=0, style=solid];
m6_3349 -> m6_24  [key=2, style=dotted];
m6_3349 -> m6_3350  [key=0, style=solid];
m6_3349 -> m6_375  [key=2, style=dotted];
m6_3348 -> m6_3349  [key=0, style=solid];
m6_3350 -> m6_3351  [key=0, style=solid];
m6_3350 -> m6_770  [key=2, style=dotted];
m6_3350 -> m6_42  [key=2, style=dotted];
m6_3347 -> m6_3348  [key=0, style=solid];
m6_3347 -> m6_3350  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_3347 -> m6_3357  [key=2, style=dotted];
m6_3346 -> m6_1075  [key=2, style=dotted];
m6_3346 -> m6_3347  [key=0, style=solid];
m6_3346 -> m6_3356  [key=2, style=dotted];
m6_3345 -> m6_916  [key=2, style=dotted];
m6_3345 -> m6_3346  [key=0, style=solid];
m6_3340 -> m6_834  [key=2, style=dotted];
m6_3340 -> m6_3345  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_3340 -> m6_3341  [key=0, style=solid];
m6_3344 -> m6_3345  [key=0, style=solid];
m6_3344 -> m6_367  [key=2, style=dotted];
m6_3341 -> m6_3344  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_3341 -> m6_3342  [key=0, style=solid];
m6_3341 -> m6_3352  [key=2, style=dotted];
m6_3341 -> m6_3343  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_3343 -> m6_3344  [key=0, style=solid];
m6_3343 -> m6_3354  [key=2, style=dotted];
m6_3342 -> m6_3343  [key=0, style=solid];
m6_3342 -> m6_3353  [key=2, style=dotted];
m6_3351 -> m6_3339  [color=blue, key=0, style=bold];
m6_1866 -> m6_1867  [key=0, style=solid];
m6_1867 -> m6_60  [key=2, style=dotted];
m6_1867 -> m6_1868  [key=0, style=solid];
m6_1867 -> m6_1869  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1868 -> m6_1866  [color=blue, key=0, style=bold];
m6_2286 -> m6_2333  [key=0, style=solid];
m6_2286 -> m6_2334  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2286 -> m6_2335  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2286 -> m6_2336  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2286 -> m6_2337  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2286 -> m6_2338  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2286 -> m6_2339  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2286 -> m6_2340  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2286 -> m6_2341  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2286 -> m6_2342  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2333 -> m6_2334  [key=0, style=solid];
m6_2334 -> m6_2335  [key=0, style=solid];
m6_2335 -> m6_2336  [key=0, style=solid];
m6_2336 -> m6_2337  [key=0, style=solid];
m6_2337 -> m6_2338  [key=0, style=solid];
m6_2338 -> m6_2339  [key=0, style=solid];
m6_2339 -> m6_2340  [key=0, style=solid];
m6_2340 -> m6_2341  [key=0, style=solid];
m6_2341 -> m6_2342  [key=0, style=solid];
m6_2342 -> m6_2343  [key=0, style=solid];
m6_2343 -> m6_2286  [color=blue, key=0, style=bold];
m6_454 -> m6_455  [key=0, style=solid];
m6_454 -> m6_467  [key=2, style=dotted];
m6_454 -> m6_468  [key=2, style=dotted];
m6_454 -> m6_22  [key=2, style=dotted];
m6_848 -> m6_849  [key=0, style=solid];
m6_850 -> m6_830  [key=2, style=dotted];
m6_850 -> m6_851  [key=0, style=solid];
m6_850 -> m6_853  [key=2, style=dotted];
m6_849 -> m6_850  [key=0, style=solid];
m6_849 -> m6_852  [key=2, style=dotted];
m6_851 -> m6_848  [color=blue, key=0, style=bold];
m6_1377 -> m6_1378  [key=0, style=solid];
m6_1380 -> m6_24  [key=2, style=dotted];
m6_1380 -> m6_1381  [key=0, style=solid];
m6_1382 -> m6_24  [key=2, style=dotted];
m6_1382 -> m6_1383  [key=0, style=solid];
m6_1379 -> m6_1380  [key=0, style=solid];
m6_1379 -> m6_129  [key=2, style=dotted];
m6_1381 -> m6_1382  [key=0, style=solid];
m6_1381 -> m6_129  [key=2, style=dotted];
m6_1378 -> m6_1379  [key=0, style=solid];
m6_1383 -> m6_1377  [color=blue, key=0, style=bold];
m6_455 -> m6_456  [key=0, style=solid];
m6_455 -> m6_458  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3087 -> m6_3088  [key=0, style=solid];
m6_3089 -> m6_175  [key=2, style=dotted];
m6_3089 -> m6_296  [key=2, style=dotted];
m6_3089 -> m6_3090  [key=0, style=solid];
m6_3089 -> m6_3091  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_3090 -> m6_797  [key=2, style=dotted];
m6_3090 -> m6_3091  [key=0, style=solid];
m6_3091 -> m6_3011  [key=2, style=dotted];
m6_3091 -> m6_3092  [key=0, style=solid];
m6_3091 -> m6_3079  [key=2, style=dotted];
m6_3088 -> m6_3089  [key=0, style=solid];
m6_3092 -> m6_3087  [color=blue, key=0, style=bold];
m6_1716 -> m6_1717  [key=0, style=solid];
m6_1717 -> m6_134  [key=2, style=dotted];
m6_1717 -> m6_1718  [key=0, style=solid];
m6_1717 -> m6_1721  [key=2, style=dotted];
m6_1719 -> m6_42  [key=2, style=dotted];
m6_1719 -> m6_1720  [key=0, style=solid];
m6_1718 -> m6_41  [key=2, style=dotted];
m6_1718 -> m6_1719  [key=0, style=solid];
m6_1720 -> m6_1716  [color=blue, key=0, style=bold];
m6_310 -> m6_311  [key=0, style=solid];
m6_3801 -> m6_3802  [key=0, style=solid];
m6_3804 -> m6_24  [key=2, style=dotted];
m6_3804 -> m6_3805  [key=0, style=solid];
m6_3803 -> m6_3804  [key=0, style=solid];
m6_3803 -> m6_49  [key=2, style=dotted];
m6_3802 -> m6_3803  [key=0, style=solid];
m6_3805 -> m6_3801  [color=blue, key=0, style=bold];
m6_2225 -> m6_2226  [key=0, style=solid];
m6_2240 -> m6_24  [key=2, style=dotted];
m6_2240 -> m6_2241  [key=0, style=solid];
m6_2238 -> m6_24  [key=2, style=dotted];
m6_2238 -> m6_2239  [key=0, style=solid];
m6_2239 -> m6_24  [key=2, style=dotted];
m6_2239 -> m6_2240  [key=0, style=solid];
m6_2241 -> m6_24  [key=2, style=dotted];
m6_2241 -> m6_2242  [key=0, style=solid];
m6_2242 -> m6_24  [key=2, style=dotted];
m6_2242 -> m6_2243  [key=0, style=solid];
m6_2243 -> m6_24  [key=2, style=dotted];
m6_2243 -> m6_2244  [key=0, style=solid];
m6_2231 -> m6_2240  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m6_2231 -> m6_376  [key=2, style=dotted];
m6_2231 -> m6_2232  [key=0, style=solid];
m6_2231 -> m6_1110  [key=2, style=dotted];
m6_2231 -> m6_2234  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m6_2237 -> m6_2240  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_2237 -> m6_2238  [key=0, style=solid];
m6_2237 -> m6_2239  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_2237 -> m6_2241  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_2237 -> m6_2242  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_2237 -> m6_2243  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_2237 -> m6_49  [key=2, style=dotted];
m6_2227 -> m6_1102  [key=2, style=dotted];
m6_2227 -> m6_2228  [key=0, style=solid];
m6_2230 -> m6_2231  [key=0, style=solid];
m6_2232 -> m6_2233  [key=0, style=solid];
m6_2234 -> m6_2235  [key=0, style=solid];
m6_2234 -> m6_2154  [key=2, style=dotted];
m6_2236 -> m6_2237  [key=0, style=solid];
m6_2236 -> m6_42  [key=2, style=dotted];
m6_2235 -> m6_2237  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2235 -> m6_41  [key=2, style=dotted];
m6_2235 -> m6_2236  [key=0, style=solid];
m6_2226 -> m6_2227  [key=0, style=solid];
m6_2226 -> m6_2230  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_2226 -> m6_2234  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_2226 -> m6_1512  [key=2, style=dotted];
m6_2226 -> m6_2228  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_2226 -> m6_2229  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_2228 -> m6_2229  [key=0, style=solid];
m6_2229 -> m6_2230  [key=0, style=solid];
m6_2233 -> m6_2234  [key=0, style=solid];
m6_2233 -> m6_2236  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m6_2244 -> m6_2225  [color=blue, key=0, style=bold];
m6_163 -> m6_197  [key=0, style=solid];
m6_163 -> m6_159  [color=blue, key=0, style=bold];
m6_197 -> m6_163  [color=blue, key=0, style=bold];
m6_146 -> m6_147  [key=0, style=solid];
m6_146 -> m6_49  [key=2, style=dotted];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_136  [key=2, style=dotted];
m6_147 -> m6_141  [key=2, style=dotted];
m6_147 -> m6_145  [color=blue, key=0, style=bold];
m6_148 -> m6_146  [color=blue, key=0, style=bold];
m6_148 -> m6_149  [key=0, style=solid];
m6_1434 -> m6_1435  [key=0, style=solid];
m6_1439 -> m6_24  [key=2, style=dotted];
m6_1439 -> m6_1440  [key=0, style=solid];
m6_1440 -> m6_24  [key=2, style=dotted];
m6_1440 -> m6_1441  [key=0, style=solid];
m6_1440 -> m6_1102  [key=2, style=dotted];
m6_1438 -> m6_1439  [key=0, style=solid];
m6_1438 -> m6_1440  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_1438 -> m6_49  [key=2, style=dotted];
m6_1436 -> m6_1438  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1436 -> m6_1437  [key=0, style=solid];
m6_1436 -> m6_41  [key=2, style=dotted];
m6_1437 -> m6_1438  [key=0, style=solid];
m6_1437 -> m6_42  [key=2, style=dotted];
m6_1435 -> m6_1102  [key=2, style=dotted];
m6_1435 -> m6_1436  [key=0, style=solid];
m6_1435 -> m6_1442  [key=2, style=dotted];
m6_1441 -> m6_1434  [color=blue, key=0, style=bold];
m6_3093 -> m6_3094  [key=0, style=solid];
m6_3099 -> m6_24  [key=2, style=dotted];
m6_3099 -> m6_3100  [key=0, style=solid];
m6_3101 -> m6_24  [key=2, style=dotted];
m6_3101 -> m6_3102  [key=0, style=solid];
m6_3098 -> m6_3099  [key=0, style=solid];
m6_3098 -> m6_129  [key=2, style=dotted];
m6_3098 -> m6_3100  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3100 -> m6_3101  [key=0, style=solid];
m6_3100 -> m6_49  [key=2, style=dotted];
m6_3094 -> m6_3098  [color=darkseagreen4, key=1, label=b, style=dashed];
m6_3094 -> m6_3095  [key=0, style=solid];
m6_3094 -> m6_3103  [key=2, style=dotted];
m6_3094 -> m6_3096  [color=darkseagreen4, key=1, label=b, style=dashed];
m6_3097 -> m6_3098  [key=0, style=solid];
m6_3095 -> m6_3096  [key=0, style=solid];
m6_3096 -> m6_3097  [key=0, style=solid];
m6_3102 -> m6_3093  [color=blue, key=0, style=bold];
m6_2827 -> m6_2828  [key=0, style=solid];
m6_2829 -> m6_134  [key=2, style=dotted];
m6_2829 -> m6_2830  [key=0, style=solid];
m6_2828 -> m6_2829  [key=0, style=solid];
m6_2830 -> m6_2827  [color=blue, key=0, style=bold];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_24  [key=2, style=dotted];
m6_111 -> m6_111  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_112 -> m6_111  [color=blue, key=0, style=bold];
m6_112 -> m6_24  [key=2, style=dotted];
m6_112 -> m6_112  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_112 -> m6_113  [key=0, style=solid];
m6_411 -> m6_447  [key=0, style=solid];
m6_2037 -> m6_2038  [key=0, style=solid];
m6_2040 -> m6_42  [key=2, style=dotted];
m6_2040 -> m6_2041  [key=0, style=solid];
m6_2039 -> m6_41  [key=2, style=dotted];
m6_2039 -> m6_2040  [key=0, style=solid];
m6_2038 -> m6_2039  [key=0, style=solid];
m6_2038 -> m6_2042  [key=2, style=dotted];
m6_2041 -> m6_2037  [color=blue, key=0, style=bold];
m6_1608 -> m6_1609  [key=0, style=solid];
m6_1610 -> m6_60  [key=2, style=dotted];
m6_1610 -> m6_1611  [key=0, style=solid];
m6_1610 -> m6_1612  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1609 -> m6_1610  [key=0, style=solid];
m6_1611 -> m6_1608  [color=blue, key=0, style=bold];
m6_1450 -> m6_1451  [key=0, style=solid];
m6_1452 -> m6_49  [key=2, style=dotted];
m6_1452 -> m6_1453  [key=0, style=solid];
m6_1455 -> m6_22  [key=2, style=dotted];
m6_1455 -> m6_1457  [key=2, style=dotted];
m6_1455 -> m6_1456  [key=0, style=solid];
m6_1453 -> m6_21  [key=2, style=dotted];
m6_1453 -> m6_1454  [key=0, style=solid];
m6_1453 -> m6_1456  [key=0, style=solid];
m6_1451 -> m6_1452  [key=0, style=solid];
m6_1454 -> m6_1455  [key=0, style=solid];
m6_1456 -> m6_1450  [color=blue, key=0, style=bold];
m6_3660 -> m6_3661  [key=0, style=solid];
m6_3661 -> m6_540  [key=2, style=dotted];
m6_3661 -> m6_3662  [key=0, style=solid];
m6_3661 -> m6_3663  [color=darkseagreen4, key=1, label=culture, style=dashed];
m6_3661 -> m6_3665  [color=darkseagreen4, key=1, label=culture, style=dashed];
m6_3662 -> m6_3663  [key=0, style=solid];
m6_3663 -> m6_3664  [key=0, style=solid];
m6_3665 -> m6_3666  [key=0, style=solid];
m6_3665 -> m6_175  [key=2, style=dotted];
m6_3665 -> m6_198  [key=2, style=dotted];
m6_3664 -> m6_376  [key=2, style=dotted];
m6_3664 -> m6_1102  [key=2, style=dotted];
m6_3664 -> m6_1110  [key=2, style=dotted];
m6_3664 -> m6_3665  [key=0, style=solid];
m6_3664 -> m6_134  [key=2, style=dotted];
m6_3666 -> m6_42  [key=2, style=dotted];
m6_3666 -> m6_3667  [key=0, style=solid];
m6_3667 -> m6_3660  [color=blue, key=0, style=bold];
m6_171 -> m6_172  [key=0, style=solid];
m6_171 -> m6_174  [key=2, style=dotted];
m6_173 -> m6_24  [key=2, style=dotted];
m6_173 -> m6_174  [key=0, style=solid];
m6_173 -> m6_170  [color=blue, key=0, style=bold];
m6_172 -> m6_173  [key=0, style=solid];
m6_172 -> m6_170  [key=2, style=dotted];
m6_172 -> m6_175  [key=2, style=dotted];
m6_172 -> m6_176  [key=2, style=dotted];
m6_172 -> m6_168  [key=2, style=dotted];
m6_172 -> m6_169  [key=2, style=dotted];
m6_174 -> m6_171  [color=blue, key=0, style=bold];
m6_56 -> m6_52  [color=blue, key=0, style=bold];
m6_2100 -> m6_2101  [key=0, style=solid];
m6_2101 -> m6_832  [key=2, style=dotted];
m6_2101 -> m6_2102  [key=0, style=solid];
m6_2102 -> m6_2100  [color=blue, key=0, style=bold];
m6_608 -> m6_598  [color=blue, key=0, style=bold];
m6_845 -> m6_846  [key=0, style=solid];
m6_846 -> m6_847  [key=0, style=solid];
m6_847 -> m6_845  [color=blue, key=0, style=bold];
m6_363 -> m6_364  [key=0, style=solid];
m6_363 -> m6_371  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_363 -> m6_368  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_363 -> m6_16  [key=2, style=dotted];
m6_363 -> m6_373  [key=2, style=dotted];
m6_1913 -> m6_1914  [key=0, style=solid];
m6_1921 -> m6_24  [key=2, style=dotted];
m6_1921 -> m6_1922  [key=0, style=solid];
m6_1922 -> m6_24  [key=2, style=dotted];
m6_1922 -> m6_1923  [key=0, style=solid];
m6_1923 -> m6_24  [key=2, style=dotted];
m6_1923 -> m6_1924  [key=0, style=solid];
m6_1924 -> m6_24  [key=2, style=dotted];
m6_1924 -> m6_1925  [key=0, style=solid];
m6_1920 -> m6_1921  [key=0, style=solid];
m6_1920 -> m6_1922  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m6_1920 -> m6_1923  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m6_1920 -> m6_1924  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m6_1920 -> m6_49  [key=2, style=dotted];
m6_1918 -> m6_1920  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1918 -> m6_41  [key=2, style=dotted];
m6_1918 -> m6_1919  [key=0, style=solid];
m6_1919 -> m6_1920  [key=0, style=solid];
m6_1919 -> m6_42  [key=2, style=dotted];
m6_1914 -> m6_1918  [color=darkseagreen4, key=1, label=f, style=dashed];
m6_1914 -> m6_1915  [key=0, style=solid];
m6_1914 -> m6_1926  [key=2, style=dotted];
m6_1914 -> m6_1916  [color=darkseagreen4, key=1, label=f, style=dashed];
m6_1914 -> m6_1917  [color=darkseagreen4, key=1, label=f, style=dashed];
m6_1917 -> m6_1918  [key=0, style=solid];
m6_1917 -> m6_1892  [key=2, style=dotted];
m6_1917 -> m6_1927  [key=2, style=dotted];
m6_1915 -> m6_1892  [key=2, style=dotted];
m6_1915 -> m6_1916  [key=0, style=solid];
m6_1915 -> m6_1927  [key=2, style=dotted];
m6_1916 -> m6_1892  [key=2, style=dotted];
m6_1916 -> m6_1917  [key=0, style=solid];
m6_1916 -> m6_1927  [key=2, style=dotted];
m6_1925 -> m6_1913  [color=blue, key=0, style=bold];
m6_2193 -> m6_2194  [key=0, style=solid];
m6_2193 -> m6_2195  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2196  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2197  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2198  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2200  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2201  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2202  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2203  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2204  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2205  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2206  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2207  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2208  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2209  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2210  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2211  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2193 -> m6_2199  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2194 -> m6_2195  [key=0, style=solid];
m6_2194 -> m6_702  [key=2, style=dotted];
m6_2195 -> m6_2196  [key=0, style=solid];
m6_2195 -> m6_703  [key=2, style=dotted];
m6_2196 -> m6_2197  [key=0, style=solid];
m6_2196 -> m6_702  [key=2, style=dotted];
m6_2197 -> m6_2198  [key=0, style=solid];
m6_2197 -> m6_702  [key=2, style=dotted];
m6_2198 -> m6_2199  [key=0, style=solid];
m6_2198 -> m6_702  [key=2, style=dotted];
m6_2200 -> m6_2201  [key=0, style=solid];
m6_2200 -> m6_2213  [key=2, style=dotted];
m6_2201 -> m6_2202  [key=0, style=solid];
m6_2201 -> m6_2214  [key=2, style=dotted];
m6_2202 -> m6_2203  [key=0, style=solid];
m6_2202 -> m6_2215  [key=2, style=dotted];
m6_2203 -> m6_2204  [key=0, style=solid];
m6_2203 -> m6_2216  [key=2, style=dotted];
m6_2204 -> m6_2205  [key=0, style=solid];
m6_2204 -> m6_2217  [key=2, style=dotted];
m6_2205 -> m6_2206  [key=0, style=solid];
m6_2205 -> m6_2218  [key=2, style=dotted];
m6_2206 -> m6_2207  [key=0, style=solid];
m6_2206 -> m6_2219  [key=2, style=dotted];
m6_2207 -> m6_2208  [key=0, style=solid];
m6_2207 -> m6_2220  [key=2, style=dotted];
m6_2208 -> m6_2209  [key=0, style=solid];
m6_2208 -> m6_2221  [key=2, style=dotted];
m6_2209 -> m6_2210  [key=0, style=solid];
m6_2209 -> m6_2222  [key=2, style=dotted];
m6_2210 -> m6_2211  [key=0, style=solid];
m6_2210 -> m6_2223  [key=2, style=dotted];
m6_2211 -> m6_2212  [key=0, style=solid];
m6_2211 -> m6_2224  [key=2, style=dotted];
m6_2199 -> m6_2200  [key=0, style=solid];
m6_2199 -> m6_702  [key=2, style=dotted];
m6_2212 -> m6_2193  [color=blue, key=0, style=bold];
m6_2921 -> m6_2922  [key=0, style=solid];
m6_2922 -> m6_134  [key=2, style=dotted];
m6_2922 -> m6_2923  [key=0, style=solid];
m6_2923 -> m6_2921  [color=blue, key=0, style=bold];
m6_1419 -> m6_1420  [key=0, style=solid];
m6_1423 -> m6_24  [key=2, style=dotted];
m6_1423 -> m6_1424  [key=0, style=solid];
m6_1425 -> m6_24  [key=2, style=dotted];
m6_1425 -> m6_1426  [key=0, style=solid];
m6_1429 -> m6_24  [key=2, style=dotted];
m6_1429 -> m6_1430  [key=0, style=solid];
m6_1431 -> m6_24  [key=2, style=dotted];
m6_1431 -> m6_1432  [key=0, style=solid];
m6_1420 -> m6_1423  [color=darkseagreen4, key=1, label=boolRef, style=dashed];
m6_1420 -> m6_1421  [key=0, style=solid];
m6_1422 -> m6_1423  [key=0, style=solid];
m6_1422 -> m6_129  [key=2, style=dotted];
m6_1422 -> m6_1424  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1424 -> m6_1425  [key=0, style=solid];
m6_1424 -> m6_49  [key=2, style=dotted];
m6_1426 -> m6_1429  [color=darkseagreen4, key=1, label=jsonSerializerTestRef, style=dashed];
m6_1426 -> m6_1427  [key=0, style=solid];
m6_1428 -> m6_1429  [key=0, style=solid];
m6_1428 -> m6_129  [key=2, style=dotted];
m6_1428 -> m6_1430  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1430 -> m6_1431  [key=0, style=solid];
m6_1430 -> m6_49  [key=2, style=dotted];
m6_1421 -> m6_1422  [key=0, style=solid];
m6_1421 -> m6_1433  [key=2, style=dotted];
m6_1427 -> m6_1428  [key=0, style=solid];
m6_1427 -> m6_1433  [key=2, style=dotted];
m6_1432 -> m6_1419  [color=blue, key=0, style=bold];
m6_76 -> m6_77  [key=0, style=solid];
m6_77 -> m6_60  [key=2, style=dotted];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_77 -> m6_75  [color=blue, key=0, style=bold];
m6_78 -> m6_76  [color=blue, key=0, style=bold];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_81  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m6_78 -> m6_83  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m6_78 -> m6_85  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m6_78 -> m6_86  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m6_3934 -> m6_3935  [key=0, style=solid];
m6_3935 -> m6_3900  [key=2, style=dotted];
m6_3935 -> m6_3936  [key=0, style=solid];
m6_3936 -> m6_3934  [color=blue, key=0, style=bold];
m6_3673 -> m6_3674  [key=0, style=solid];
m6_3683 -> m6_24  [key=2, style=dotted];
m6_3683 -> m6_3684  [key=0, style=solid];
m6_3684 -> m6_24  [key=2, style=dotted];
m6_3684 -> m6_3685  [key=0, style=solid];
m6_3674 -> m6_540  [key=2, style=dotted];
m6_3674 -> m6_3675  [key=0, style=solid];
m6_3674 -> m6_3676  [color=darkseagreen4, key=1, label=culture, style=dashed];
m6_3674 -> m6_3680  [color=darkseagreen4, key=1, label=culture, style=dashed];
m6_3679 -> m6_3683  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_3679 -> m6_3684  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_3679 -> m6_3680  [key=0, style=solid];
m6_3679 -> m6_2972  [key=2, style=dotted];
m6_3679 -> m6_3681  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_3679 -> m6_3682  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_3682 -> m6_3683  [key=0, style=solid];
m6_3682 -> m6_152  [key=2, style=dotted];
m6_3685 -> m6_3686  [key=0, style=solid];
m6_3685 -> m6_2976  [key=2, style=dotted];
m6_3675 -> m6_3676  [key=0, style=solid];
m6_3676 -> m6_3677  [key=0, style=solid];
m6_3680 -> m6_3681  [key=0, style=solid];
m6_3680 -> m6_175  [key=2, style=dotted];
m6_3680 -> m6_833  [key=2, style=dotted];
m6_3677 -> m6_376  [key=2, style=dotted];
m6_3677 -> m6_1102  [key=2, style=dotted];
m6_3677 -> m6_1110  [key=2, style=dotted];
m6_3677 -> m6_134  [key=2, style=dotted];
m6_3677 -> m6_3678  [key=0, style=solid];
m6_3677 -> m6_3681  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_3678 -> m6_3679  [key=0, style=solid];
m6_3678 -> m6_3685  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_3678 -> m6_2971  [key=2, style=dotted];
m6_3681 -> m6_3682  [key=0, style=solid];
m6_3681 -> m6_3008  [key=2, style=dotted];
m6_3686 -> m6_42  [key=2, style=dotted];
m6_3686 -> m6_3687  [key=0, style=solid];
m6_3687 -> m6_3673  [color=blue, key=0, style=bold];
m6_600 -> m6_602  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m6_600 -> m6_543  [key=2, style=dotted];
m6_600 -> m6_601  [key=0, style=solid];
m6_1783 -> m6_1784  [key=0, style=solid];
m6_1785 -> m6_60  [key=2, style=dotted];
m6_1785 -> m6_1786  [key=0, style=solid];
m6_1785 -> m6_1787  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1784 -> m6_1788  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1784 -> m6_1785  [key=0, style=solid];
m6_1786 -> m6_1783  [color=blue, key=0, style=bold];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_136  [key=2, style=dotted];
m6_134 -> m6_137  [key=2, style=dotted];
m6_27 -> m6_25  [color=blue, key=0, style=bold];
m6_536 -> m6_537  [key=0, style=solid];
m6_536 -> m6_549  [key=2, style=dotted];
m6_536 -> m6_536  [color=darkseagreen4, key=1, label=nameValue, style=dashed];
m6_199 -> m6_198  [color=blue, key=0, style=bold];
m6_199 -> m6_200  [key=0, style=solid];
m6_366 -> m6_367  [key=0, style=solid];
m6_2847 -> m6_2848  [key=0, style=solid];
m6_2854 -> m6_24  [key=2, style=dotted];
m6_2854 -> m6_2855  [key=0, style=solid];
m6_2855 -> m6_24  [key=2, style=dotted];
m6_2855 -> m6_2856  [key=0, style=solid];
m6_2856 -> m6_24  [key=2, style=dotted];
m6_2856 -> m6_2857  [key=0, style=solid];
m6_2857 -> m6_24  [key=2, style=dotted];
m6_2857 -> m6_2858  [key=0, style=solid];
m6_2848 -> m6_2854  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2848 -> m6_2855  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2848 -> m6_2849  [key=0, style=solid];
m6_2848 -> m6_2843  [key=2, style=dotted];
m6_2848 -> m6_2850  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2848 -> m6_2851  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2853 -> m6_2854  [key=0, style=solid];
m6_2853 -> m6_2855  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2853 -> m6_2856  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2853 -> m6_2857  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2853 -> m6_49  [key=2, style=dotted];
m6_2849 -> m6_2850  [key=0, style=solid];
m6_2849 -> m6_2859  [key=2, style=dotted];
m6_2850 -> m6_2851  [key=0, style=solid];
m6_2850 -> m6_2859  [key=2, style=dotted];
m6_2851 -> m6_2853  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2851 -> m6_41  [key=2, style=dotted];
m6_2851 -> m6_2852  [key=0, style=solid];
m6_2852 -> m6_2853  [key=0, style=solid];
m6_2852 -> m6_42  [key=2, style=dotted];
m6_2858 -> m6_2847  [color=blue, key=0, style=bold];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_60  [key=2, style=dotted];
m6_65 -> m6_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_68  [key=2, style=dotted];
m6_66 -> m6_64  [color=blue, key=0, style=bold];
m6_67 -> m6_65  [color=blue, key=0, style=bold];
m6_67 -> m6_68  [key=0, style=solid];
m6_543 -> m6_544  [key=0, style=solid];
m6_543 -> m6_286  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_6  [key=2, style=dotted];
m6_17 -> m6_19  [key=2, style=dotted];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_41  [key=2, style=dotted];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_41  [key=2, style=dotted];
m6_39 -> m6_42  [key=2, style=dotted];
m6_40 -> m6_38  [color=blue, key=0, style=bold];
m6_40 -> m6_33  [color=blue, key=0, style=bold];
m6_256 -> m6_49  [key=2, style=dotted];
m6_256 -> m6_257  [key=0, style=solid];
m6_2287 -> m6_2288  [key=0, style=solid];
m6_2289 -> m6_24  [key=2, style=dotted];
m6_2289 -> m6_2290  [key=0, style=solid];
m6_2289 -> m6_2317  [key=2, style=dotted];
m6_2289 -> m6_2318  [key=2, style=dotted];
m6_2290 -> m6_24  [key=2, style=dotted];
m6_2290 -> m6_2291  [key=0, style=solid];
m6_2290 -> m6_2317  [key=2, style=dotted];
m6_2290 -> m6_2318  [key=2, style=dotted];
m6_2291 -> m6_24  [key=2, style=dotted];
m6_2291 -> m6_2292  [key=0, style=solid];
m6_2291 -> m6_2319  [key=2, style=dotted];
m6_2291 -> m6_2318  [key=2, style=dotted];
m6_2292 -> m6_24  [key=2, style=dotted];
m6_2292 -> m6_2293  [key=0, style=solid];
m6_2292 -> m6_2319  [key=2, style=dotted];
m6_2292 -> m6_2318  [key=2, style=dotted];
m6_2293 -> m6_24  [key=2, style=dotted];
m6_2293 -> m6_2294  [key=0, style=solid];
m6_2293 -> m6_2319  [key=2, style=dotted];
m6_2293 -> m6_2318  [key=2, style=dotted];
m6_2294 -> m6_24  [key=2, style=dotted];
m6_2294 -> m6_2295  [key=0, style=solid];
m6_2294 -> m6_2319  [key=2, style=dotted];
m6_2294 -> m6_2318  [key=2, style=dotted];
m6_2295 -> m6_24  [key=2, style=dotted];
m6_2295 -> m6_2296  [key=0, style=solid];
m6_2295 -> m6_2319  [key=2, style=dotted];
m6_2295 -> m6_2318  [key=2, style=dotted];
m6_2296 -> m6_24  [key=2, style=dotted];
m6_2296 -> m6_2297  [key=0, style=solid];
m6_2296 -> m6_2319  [key=2, style=dotted];
m6_2296 -> m6_2318  [key=2, style=dotted];
m6_2298 -> m6_24  [key=2, style=dotted];
m6_2298 -> m6_2299  [key=0, style=solid];
m6_2298 -> m6_2317  [key=2, style=dotted];
m6_2298 -> m6_2318  [key=2, style=dotted];
m6_2299 -> m6_24  [key=2, style=dotted];
m6_2299 -> m6_2300  [key=0, style=solid];
m6_2299 -> m6_2317  [key=2, style=dotted];
m6_2299 -> m6_2318  [key=2, style=dotted];
m6_2300 -> m6_24  [key=2, style=dotted];
m6_2300 -> m6_2301  [key=0, style=solid];
m6_2300 -> m6_2319  [key=2, style=dotted];
m6_2300 -> m6_2318  [key=2, style=dotted];
m6_2301 -> m6_24  [key=2, style=dotted];
m6_2301 -> m6_2302  [key=0, style=solid];
m6_2301 -> m6_2319  [key=2, style=dotted];
m6_2301 -> m6_2318  [key=2, style=dotted];
m6_2302 -> m6_24  [key=2, style=dotted];
m6_2302 -> m6_2303  [key=0, style=solid];
m6_2302 -> m6_2319  [key=2, style=dotted];
m6_2302 -> m6_2318  [key=2, style=dotted];
m6_2303 -> m6_24  [key=2, style=dotted];
m6_2303 -> m6_2304  [key=0, style=solid];
m6_2303 -> m6_2319  [key=2, style=dotted];
m6_2303 -> m6_2318  [key=2, style=dotted];
m6_2304 -> m6_24  [key=2, style=dotted];
m6_2304 -> m6_2305  [key=0, style=solid];
m6_2304 -> m6_2319  [key=2, style=dotted];
m6_2304 -> m6_2318  [key=2, style=dotted];
m6_2305 -> m6_24  [key=2, style=dotted];
m6_2305 -> m6_2306  [key=0, style=solid];
m6_2305 -> m6_2319  [key=2, style=dotted];
m6_2305 -> m6_2318  [key=2, style=dotted];
m6_2306 -> m6_24  [key=2, style=dotted];
m6_2306 -> m6_2307  [key=0, style=solid];
m6_2307 -> m6_24  [key=2, style=dotted];
m6_2307 -> m6_2308  [key=0, style=solid];
m6_2308 -> m6_24  [key=2, style=dotted];
m6_2308 -> m6_2309  [key=0, style=solid];
m6_2309 -> m6_24  [key=2, style=dotted];
m6_2309 -> m6_2310  [key=0, style=solid];
m6_2310 -> m6_24  [key=2, style=dotted];
m6_2310 -> m6_2311  [key=0, style=solid];
m6_2310 -> m6_2319  [key=2, style=dotted];
m6_2310 -> m6_2318  [key=2, style=dotted];
m6_2311 -> m6_24  [key=2, style=dotted];
m6_2311 -> m6_2312  [key=0, style=solid];
m6_2311 -> m6_2319  [key=2, style=dotted];
m6_2311 -> m6_2318  [key=2, style=dotted];
m6_2312 -> m6_24  [key=2, style=dotted];
m6_2312 -> m6_2313  [key=0, style=solid];
m6_2313 -> m6_24  [key=2, style=dotted];
m6_2313 -> m6_2314  [key=0, style=solid];
m6_2313 -> m6_2319  [key=2, style=dotted];
m6_2313 -> m6_2318  [key=2, style=dotted];
m6_2314 -> m6_24  [key=2, style=dotted];
m6_2314 -> m6_2315  [key=0, style=solid];
m6_2314 -> m6_2319  [key=2, style=dotted];
m6_2314 -> m6_2318  [key=2, style=dotted];
m6_2315 -> m6_24  [key=2, style=dotted];
m6_2315 -> m6_2316  [key=0, style=solid];
m6_2315 -> m6_2319  [key=2, style=dotted];
m6_2315 -> m6_2318  [key=2, style=dotted];
m6_2288 -> m6_2289  [key=0, style=solid];
m6_2288 -> m6_2290  [color=darkseagreen4, key=1, label=myA, style=dashed];
m6_2288 -> m6_2291  [color=darkseagreen4, key=1, label=myA, style=dashed];
m6_2288 -> m6_2292  [color=darkseagreen4, key=1, label=myA, style=dashed];
m6_2288 -> m6_2293  [color=darkseagreen4, key=1, label=myA, style=dashed];
m6_2288 -> m6_2294  [color=darkseagreen4, key=1, label=myA, style=dashed];
m6_2288 -> m6_2295  [color=darkseagreen4, key=1, label=myA, style=dashed];
m6_2288 -> m6_2296  [color=darkseagreen4, key=1, label=myA, style=dashed];
m6_2288 -> m6_49  [key=2, style=dotted];
m6_2297 -> m6_2298  [key=0, style=solid];
m6_2297 -> m6_2299  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2300  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2301  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2302  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2303  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2304  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2305  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2306  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2307  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2308  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2309  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2310  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2311  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2312  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2313  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2314  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_2315  [color=darkseagreen4, key=1, label=myB, style=dashed];
m6_2297 -> m6_49  [key=2, style=dotted];
m6_2316 -> m6_2287  [color=blue, key=0, style=bold];
m6_37 -> m6_42  [key=2, style=dotted];
m6_37 -> m6_38  [key=0, style=solid];
m6_742 -> m6_465  [key=2, style=dotted];
m6_742 -> m6_743  [key=0, style=solid];
m6_742 -> m6_744  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_744 -> m6_22  [key=2, style=dotted];
m6_744 -> m6_745  [key=0, style=solid];
m6_744 -> m6_747  [key=2, style=dotted];
m6_744 -> m6_742  [color=blue, key=0, style=bold];
m6_743 -> m6_746  [key=2, style=dotted];
m6_743 -> m6_744  [key=0, style=solid];
m6_745 -> m6_741  [color=blue, key=0, style=bold];
m6_745 -> m6_746  [key=0, style=solid];
m6_745 -> m6_748  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_101 -> m6_102  [key=0, style=solid];
m6_102 -> m6_101  [color=blue, key=0, style=bold];
m6_102 -> m6_24  [key=2, style=dotted];
m6_102 -> m6_102  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_102 -> m6_103  [key=0, style=solid];
m6_3922 -> m6_3923  [key=0, style=solid];
m6_3923 -> m6_3924  [key=0, style=solid];
m6_3924 -> m6_3922  [color=blue, key=0, style=bold];
m6_1538 -> m6_1539  [key=0, style=solid];
m6_1542 -> m6_24  [key=2, style=dotted];
m6_1542 -> m6_1543  [key=0, style=solid];
m6_1543 -> m6_24  [key=2, style=dotted];
m6_1543 -> m6_1544  [key=0, style=solid];
m6_1544 -> m6_24  [key=2, style=dotted];
m6_1544 -> m6_1545  [key=0, style=solid];
m6_1545 -> m6_24  [key=2, style=dotted];
m6_1545 -> m6_1546  [key=0, style=solid];
m6_1540 -> m6_1542  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1540 -> m6_1543  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1540 -> m6_1544  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1540 -> m6_1545  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1540 -> m6_1541  [key=0, style=solid];
m6_1540 -> m6_49  [key=2, style=dotted];
m6_1541 -> m6_1542  [key=0, style=solid];
m6_1541 -> m6_797  [key=2, style=dotted];
m6_1539 -> m6_1540  [key=0, style=solid];
m6_1546 -> m6_1538  [color=blue, key=0, style=bold];
m6_1180 -> m6_1181  [key=0, style=solid];
m6_1182 -> m6_19  [key=2, style=dotted];
m6_1182 -> m6_1183  [key=0, style=solid];
m6_1182 -> m6_1184  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_1185 -> m6_24  [key=2, style=dotted];
m6_1185 -> m6_1186  [key=0, style=solid];
m6_1186 -> m6_24  [key=2, style=dotted];
m6_1186 -> m6_1187  [key=0, style=solid];
m6_1181 -> m6_1182  [key=0, style=solid];
m6_1181 -> m6_1184  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1183 -> m6_1184  [key=0, style=solid];
m6_1184 -> m6_1185  [key=0, style=solid];
m6_1184 -> m6_1186  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_1184 -> m6_373  [key=2, style=dotted];
m6_1184 -> m6_840  [key=2, style=dotted];
m6_1187 -> m6_1180  [color=blue, key=0, style=bold];
m6_1588 -> m6_1589  [key=0, style=solid];
m6_1596 -> m6_175  [key=2, style=dotted];
m6_1596 -> m6_198  [key=2, style=dotted];
m6_1596 -> m6_1597  [key=0, style=solid];
m6_1595 -> m6_42  [key=2, style=dotted];
m6_1595 -> m6_1596  [key=0, style=solid];
m6_1597 -> m6_42  [key=2, style=dotted];
m6_1597 -> m6_1598  [key=0, style=solid];
m6_1594 -> m6_41  [key=2, style=dotted];
m6_1594 -> m6_1595  [key=0, style=solid];
m6_1589 -> m6_1596  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1589 -> m6_1594  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1589 -> m6_1590  [key=0, style=solid];
m6_1589 -> m6_1599  [key=2, style=dotted];
m6_1589 -> m6_1591  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1589 -> m6_1592  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1589 -> m6_1593  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1593 -> m6_1594  [key=0, style=solid];
m6_1590 -> m6_1591  [key=0, style=solid];
m6_1591 -> m6_1592  [key=0, style=solid];
m6_1592 -> m6_1593  [key=0, style=solid];
m6_1598 -> m6_1588  [color=blue, key=0, style=bold];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_179  [key=2, style=dotted];
m6_183 -> m6_180  [key=2, style=dotted];
m6_183 -> m6_175  [key=2, style=dotted];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_125  [key=2, style=dotted];
m6_153 -> m6_155  [key=2, style=dotted];
m6_154 -> m6_60  [key=2, style=dotted];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_154 -> m6_152  [color=blue, key=0, style=bold];
m6_155 -> m6_153  [color=blue, key=0, style=bold];
m6_3842 -> m6_3843  [key=0, style=solid];
m6_3845 -> m6_24  [key=2, style=dotted];
m6_3845 -> m6_3846  [key=0, style=solid];
m6_3848 -> m6_24  [key=2, style=dotted];
m6_3848 -> m6_3849  [key=0, style=solid];
m6_3849 -> m6_24  [key=2, style=dotted];
m6_3849 -> m6_3850  [key=0, style=solid];
m6_3844 -> m6_3845  [key=0, style=solid];
m6_3844 -> m6_175  [key=2, style=dotted];
m6_3844 -> m6_296  [key=2, style=dotted];
m6_3844 -> m6_3846  [color=darkseagreen4, key=1, label=people, style=dashed];
m6_3844 -> m6_3847  [color=darkseagreen4, key=1, label=people, style=dashed];
m6_3846 -> m6_3848  [color=darkseagreen4, key=1, label=john, style=dashed];
m6_3846 -> m6_3849  [color=darkseagreen4, key=1, label=john, style=dashed];
m6_3846 -> m6_3847  [key=0, style=solid];
m6_3847 -> m6_3848  [key=0, style=solid];
m6_3847 -> m6_3849  [color=darkseagreen4, key=1, label=jane, style=dashed];
m6_3843 -> m6_3844  [key=0, style=solid];
m6_3850 -> m6_3842  [color=blue, key=0, style=bold];
m6_3550 -> m6_3551  [key=0, style=solid];
m6_3552 -> m6_24  [key=2, style=dotted];
m6_3552 -> m6_3553  [key=0, style=solid];
m6_3553 -> m6_24  [key=2, style=dotted];
m6_3553 -> m6_3554  [key=0, style=solid];
m6_3553 -> m6_1708  [key=2, style=dotted];
m6_3558 -> m6_24  [key=2, style=dotted];
m6_3558 -> m6_3559  [key=0, style=solid];
m6_3561 -> m6_24  [key=2, style=dotted];
m6_3561 -> m6_3562  [key=0, style=solid];
m6_3561 -> m6_3563  [key=2, style=dotted];
m6_3551 -> m6_3552  [key=0, style=solid];
m6_3551 -> m6_3553  [color=darkseagreen4, key=1, label=uris, style=dashed];
m6_3551 -> m6_49  [key=2, style=dotted];
m6_3554 -> m6_3555  [key=0, style=solid];
m6_3554 -> m6_49  [key=2, style=dotted];
m6_3556 -> m6_3558  [color=darkseagreen4, key=1, label=i1, style=dashed];
m6_3556 -> m6_3557  [key=0, style=solid];
m6_3556 -> m6_3563  [key=2, style=dotted];
m6_3557 -> m6_3558  [key=0, style=solid];
m6_3557 -> m6_1708  [key=2, style=dotted];
m6_3559 -> m6_3561  [color=darkseagreen4, key=1, label=uri, style=dashed];
m6_3559 -> m6_3560  [key=0, style=solid];
m6_3559 -> m6_49  [key=2, style=dotted];
m6_3560 -> m6_3561  [key=0, style=solid];
m6_3560 -> m6_797  [key=2, style=dotted];
m6_3555 -> m6_3556  [key=0, style=solid];
m6_3555 -> m6_797  [key=2, style=dotted];
m6_3562 -> m6_3550  [color=blue, key=0, style=bold];
m6_1125 -> m6_1126  [key=0, style=solid];
m6_1128 -> m6_24  [key=2, style=dotted];
m6_1128 -> m6_1129  [key=0, style=solid];
m6_1130 -> m6_24  [key=2, style=dotted];
m6_1130 -> m6_1131  [key=0, style=solid];
m6_1131 -> m6_24  [key=2, style=dotted];
m6_1131 -> m6_1132  [key=0, style=solid];
m6_1132 -> m6_24  [key=2, style=dotted];
m6_1132 -> m6_1133  [key=0, style=solid];
m6_1133 -> m6_24  [key=2, style=dotted];
m6_1133 -> m6_1134  [key=0, style=solid];
m6_1134 -> m6_24  [key=2, style=dotted];
m6_1134 -> m6_1135  [key=0, style=solid];
m6_1135 -> m6_24  [key=2, style=dotted];
m6_1135 -> m6_1136  [key=0, style=solid];
m6_1136 -> m6_24  [key=2, style=dotted];
m6_1136 -> m6_1137  [key=0, style=solid];
m6_1127 -> m6_1128  [key=0, style=solid];
m6_1127 -> m6_129  [key=2, style=dotted];
m6_1127 -> m6_1129  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1129 -> m6_1130  [key=0, style=solid];
m6_1129 -> m6_1131  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_1129 -> m6_1132  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_1129 -> m6_1133  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_1129 -> m6_1134  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_1129 -> m6_1135  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_1129 -> m6_1136  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_1129 -> m6_1129  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_1129 -> m6_1138  [key=2, style=dotted];
m6_1126 -> m6_1127  [key=0, style=solid];
m6_1126 -> m6_1129  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_1126 -> m6_953  [key=2, style=dotted];
m6_1137 -> m6_1125  [color=blue, key=0, style=bold];
m6_2460 -> m6_2461  [key=0, style=solid];
m6_2463 -> m6_24  [key=2, style=dotted];
m6_2463 -> m6_2464  [key=0, style=solid];
m6_2464 -> m6_24  [key=2, style=dotted];
m6_2464 -> m6_2465  [key=0, style=solid];
m6_2465 -> m6_24  [key=2, style=dotted];
m6_2465 -> m6_2466  [key=0, style=solid];
m6_2462 -> m6_2463  [key=0, style=solid];
m6_2462 -> m6_2464  [color=darkseagreen4, key=1, label=cc, style=dashed];
m6_2462 -> m6_2465  [color=darkseagreen4, key=1, label=cc, style=dashed];
m6_2462 -> m6_49  [key=2, style=dotted];
m6_2461 -> m6_2462  [key=0, style=solid];
m6_2466 -> m6_2460  [color=blue, key=0, style=bold];
m6_402 -> m6_403  [key=0, style=solid];
m6_257 -> m6_268  [key=0, style=solid];
m6_257 -> m6_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_257 -> m6_278  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m6_257 -> m6_281  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m6_257 -> m6_255  [color=blue, key=0, style=bold];
m6_268 -> m6_269  [key=0, style=solid];
m6_268 -> m6_272  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m6_268 -> m6_274  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m6_268 -> m6_275  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m6_268 -> m6_276  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m6_268 -> m6_277  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m6_268 -> m6_49  [key=2, style=dotted];
m6_269 -> m6_270  [key=0, style=solid];
m6_269 -> m6_24  [key=2, style=dotted];
m6_278 -> m6_279  [key=0, style=solid];
m6_278 -> m6_286  [key=2, style=dotted];
m6_278 -> m6_280  [key=0, style=solid];
m6_281 -> m6_279  [key=0, style=solid];
m6_281 -> m6_287  [key=2, style=dotted];
m6_281 -> m6_277  [color=blue, key=0, style=bold];
m6_272 -> m6_273  [key=0, style=solid];
m6_272 -> m6_274  [key=0, style=solid];
m6_272 -> m6_129  [key=2, style=dotted];
m6_274 -> m6_270  [key=0, style=solid];
m6_274 -> m6_284  [key=2, style=dotted];
m6_274 -> m6_275  [key=0, style=solid];
m6_275 -> m6_276  [key=0, style=solid];
m6_275 -> m6_282  [key=0, style=solid];
m6_275 -> m6_49  [key=2, style=dotted];
m6_276 -> m6_277  [key=0, style=solid];
m6_276 -> m6_285  [key=2, style=dotted];
m6_276 -> m6_274  [color=blue, key=0, style=bold];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_282  [key=0, style=solid];
m6_277 -> m6_279  [color=darkseagreen4, key=1, label=parentElement, style=dashed];
m6_277 -> m6_280  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_270 -> m6_271  [key=0, style=solid];
m6_270 -> m6_275  [key=0, style=solid];
m6_270 -> m6_270  [color=darkseagreen4, key=1, label=parent, style=dashed];
m6_270 -> m6_274  [color=darkseagreen4, key=1, label=parent, style=dashed];
m6_270 -> m6_261  [color=blue, key=0, style=bold];
m6_271 -> m6_272  [key=0, style=solid];
m6_271 -> m6_270  [key=0, style=solid];
m6_273 -> m6_274  [key=0, style=solid];
m6_273 -> m6_283  [key=2, style=dotted];
m6_273 -> m6_275  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m6_273 -> m6_276  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m6_273 -> m6_277  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m6_273 -> m6_271  [color=blue, key=0, style=bold];
m6_279 -> m6_280  [key=0, style=solid];
m6_279 -> m6_277  [key=0, style=solid];
m6_279 -> m6_281  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m6_279 -> m6_282  [key=2, style=dotted];
m6_280 -> m6_281  [key=0, style=solid];
m6_280 -> m6_279  [key=0, style=solid];
m6_280 -> m6_283  [key=2, style=dotted];
m6_282 -> m6_257  [color=blue, key=0, style=bold];
m6_142 -> m6_143  [key=0, style=solid];
m6_143 -> m6_60  [key=2, style=dotted];
m6_143 -> m6_144  [key=0, style=solid];
m6_143 -> m6_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_143 -> m6_136  [key=2, style=dotted];
m6_144 -> m6_142  [color=blue, key=0, style=bold];
m6_552 -> m6_24  [key=2, style=dotted];
m6_552 -> m6_553  [key=0, style=solid];
m6_2924 -> m6_2925  [key=0, style=solid];
m6_2931 -> m6_24  [key=2, style=dotted];
m6_2931 -> m6_2932  [key=0, style=solid];
m6_2931 -> m6_2936  [key=2, style=dotted];
m6_2934 -> m6_24  [key=2, style=dotted];
m6_2934 -> m6_2935  [key=0, style=solid];
m6_2934 -> m6_2936  [key=2, style=dotted];
m6_2930 -> m6_2931  [key=0, style=solid];
m6_2930 -> m6_49  [key=2, style=dotted];
m6_2932 -> m6_2933  [key=0, style=solid];
m6_2932 -> m6_41  [key=2, style=dotted];
m6_2933 -> m6_2934  [key=0, style=solid];
m6_2933 -> m6_49  [key=2, style=dotted];
m6_2929 -> m6_129  [key=2, style=dotted];
m6_2929 -> m6_2930  [key=0, style=solid];
m6_2925 -> m6_2932  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m6_2925 -> m6_2929  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m6_2925 -> m6_2926  [key=0, style=solid];
m6_2925 -> m6_2921  [key=2, style=dotted];
m6_2925 -> m6_2928  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m6_2928 -> m6_322  [key=2, style=dotted];
m6_2928 -> m6_2929  [key=0, style=solid];
m6_2926 -> m6_2929  [key=0, style=solid];
m6_2926 -> m6_282  [key=2, style=dotted];
m6_2927 -> m6_2928  [key=0, style=solid];
m6_2935 -> m6_2924  [color=blue, key=0, style=bold];
m6_200 -> m6_60  [key=2, style=dotted];
m6_200 -> m6_201  [key=0, style=solid];
m6_200 -> m6_208  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_200 -> m6_202  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_200 -> m6_203  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_200 -> m6_204  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_200 -> m6_205  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_200 -> m6_206  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_200 -> m6_207  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_200 -> m6_209  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_200 -> m6_210  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_200 -> m6_211  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_200 -> m6_212  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_200 -> m6_213  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_200 -> m6_214  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_200 -> m6_215  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_200 -> m6_216  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_200 -> m6_217  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m6_201 -> m6_60  [key=2, style=dotted];
m6_201 -> m6_202  [key=0, style=solid];
m6_201 -> m6_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_201 -> m6_203  [key=0, style=solid];
m6_202 -> m6_60  [key=2, style=dotted];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_214  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_202 -> m6_218  [key=0, style=solid];
m6_202 -> m6_131  [key=2, style=dotted];
m6_202 -> m6_89  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_202 -> m6_268  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_202 -> m6_302  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m6_203 -> m6_60  [key=2, style=dotted];
m6_203 -> m6_204  [key=0, style=solid];
m6_203 -> m6_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_203 -> m6_205  [key=0, style=solid];
m6_204 -> m6_60  [key=2, style=dotted];
m6_204 -> m6_205  [key=0, style=solid];
m6_204 -> m6_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_204 -> m6_218  [key=0, style=solid];
m6_204 -> m6_168  [key=2, style=dotted];
m6_205 -> m6_60  [key=2, style=dotted];
m6_205 -> m6_206  [key=0, style=solid];
m6_205 -> m6_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_205 -> m6_207  [key=0, style=solid];
m6_206 -> m6_60  [key=2, style=dotted];
m6_206 -> m6_207  [key=0, style=solid];
m6_206 -> m6_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_206 -> m6_218  [key=0, style=solid];
m6_206 -> m6_198  [key=2, style=dotted];
m6_207 -> m6_199  [color=blue, key=0, style=bold];
m6_207 -> m6_208  [key=0, style=solid];
m6_207 -> m6_209  [key=0, style=solid];
m6_2915 -> m6_2916  [key=0, style=solid];
m6_2918 -> m6_42  [key=2, style=dotted];
m6_2918 -> m6_2919  [key=0, style=solid];
m6_2917 -> m6_41  [key=2, style=dotted];
m6_2917 -> m6_2918  [key=0, style=solid];
m6_2916 -> m6_2917  [key=0, style=solid];
m6_2916 -> m6_2920  [key=2, style=dotted];
m6_2919 -> m6_2915  [color=blue, key=0, style=bold];
m6_2359 -> m6_2360  [key=0, style=solid];
m6_2368 -> m6_24  [key=2, style=dotted];
m6_2368 -> m6_2369  [key=0, style=solid];
m6_2360 -> m6_2368  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m6_2360 -> m6_2361  [key=0, style=solid];
m6_2360 -> m6_2370  [key=2, style=dotted];
m6_2360 -> m6_2363  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m6_2360 -> m6_2364  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m6_2367 -> m6_2368  [key=0, style=solid];
m6_2367 -> m6_49  [key=2, style=dotted];
m6_2361 -> m6_2362  [key=0, style=solid];
m6_2361 -> m6_2371  [key=2, style=dotted];
m6_2361 -> m6_2363  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_2363 -> m6_2364  [key=0, style=solid];
m6_2364 -> m6_2367  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2364 -> m6_41  [key=2, style=dotted];
m6_2364 -> m6_2365  [key=0, style=solid];
m6_2364 -> m6_2366  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2366 -> m6_2367  [key=0, style=solid];
m6_2366 -> m6_42  [key=2, style=dotted];
m6_2362 -> m6_2363  [key=0, style=solid];
m6_2362 -> m6_2372  [key=2, style=dotted];
m6_2365 -> m6_2366  [key=0, style=solid];
m6_2369 -> m6_2359  [color=blue, key=0, style=bold];
m6_60 -> m6_61  [key=0, style=solid];
m6_497 -> m6_698  [key=0, style=solid];
m6_497 -> m6_700  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m6_497 -> m6_702  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_497 -> m6_703  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_497 -> m6_704  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_497 -> m6_706  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_497 -> m6_707  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_497 -> m6_710  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_497 -> m6_711  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m6_497 -> m6_712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_497 -> m6_714  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_497 -> m6_715  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_497 -> m6_716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_497 -> m6_718  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_497 -> m6_722  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_497 -> m6_723  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_497 -> m6_498  [key=0, style=solid];
m6_698 -> m6_699  [key=0, style=solid];
m6_698 -> m6_713  [key=0, style=solid];
m6_698 -> m6_717  [key=0, style=solid];
m6_698 -> m6_719  [key=0, style=solid];
m6_698 -> m6_722  [key=0, style=solid];
m6_698 -> m6_704  [key=2, style=dotted];
m6_700 -> m6_701  [key=0, style=solid];
m6_700 -> m6_702  [key=0, style=solid];
m6_700 -> m6_704  [key=2, style=dotted];
m6_702 -> m6_703  [key=0, style=solid];
m6_702 -> m6_518  [key=2, style=dotted];
m6_702 -> m6_707  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_702 -> m6_710  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_702 -> m6_726  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_702 -> m6_712  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_703 -> m6_704  [key=0, style=solid];
m6_703 -> m6_496  [key=2, style=dotted];
m6_704 -> m6_705  [key=0, style=solid];
m6_704 -> m6_712  [key=0, style=solid];
m6_706 -> m6_707  [key=0, style=solid];
m6_706 -> m6_709  [key=0, style=solid];
m6_706 -> m6_496  [key=2, style=dotted];
m6_706 -> m6_708  [key=0, style=solid];
m6_707 -> m6_708  [key=0, style=solid];
m6_707 -> m6_499  [key=2, style=dotted];
m6_707 -> m6_715  [key=0, style=solid];
m6_710 -> m6_711  [key=0, style=solid];
m6_710 -> m6_599  [key=2, style=dotted];
m6_710 -> m6_600  [key=2, style=dotted];
m6_710 -> m6_725  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_710 -> m6_718  [key=2, style=dotted];
m6_711 -> m6_723  [key=0, style=solid];
m6_711 -> m6_598  [key=2, style=dotted];
m6_711 -> m6_712  [key=0, style=solid];
m6_711 -> m6_718  [key=2, style=dotted];
m6_712 -> m6_723  [key=0, style=solid];
m6_712 -> m6_499  [key=2, style=dotted];
m6_712 -> m6_713  [key=0, style=solid];
m6_712 -> m6_718  [key=2, style=dotted];
m6_714 -> m6_715  [key=0, style=solid];
m6_714 -> m6_518  [key=2, style=dotted];
m6_714 -> m6_716  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m6_715 -> m6_716  [key=0, style=solid];
m6_715 -> m6_723  [key=0, style=solid];
m6_715 -> m6_496  [key=2, style=dotted];
m6_715 -> m6_705  [color=blue, key=0, style=bold];
m6_716 -> m6_715  [key=0, style=solid];
m6_716 -> m6_499  [key=2, style=dotted];
m6_718 -> m6_723  [key=0, style=solid];
m6_718 -> m6_95  [key=2, style=dotted];
m6_718 -> m6_123  [key=2, style=dotted];
m6_699 -> m6_700  [key=0, style=solid];
m6_699 -> m6_704  [key=2, style=dotted];
m6_713 -> m6_714  [key=0, style=solid];
m6_713 -> m6_718  [key=2, style=dotted];
m6_717 -> m6_718  [key=0, style=solid];
m6_701 -> m6_724  [key=0, style=solid];
m6_701 -> m6_492  [key=2, style=dotted];
m6_701 -> m6_694  [color=blue, key=0, style=bold];
m6_705 -> m6_706  [key=0, style=solid];
m6_705 -> m6_708  [color=darkseagreen4, key=1, label=count, style=dashed];
m6_705 -> m6_709  [color=darkseagreen4, key=1, label=count, style=dashed];
m6_708 -> m6_706  [key=0, style=solid];
m6_708 -> m6_708  [color=darkseagreen4, key=1, label=count, style=dashed];
m6_708 -> m6_709  [color=darkseagreen4, key=1, label=count, style=dashed];
m6_708 -> m6_716  [key=2, style=dotted];
m6_709 -> m6_710  [key=0, style=solid];
m6_709 -> m6_723  [key=0, style=solid];
m6_709 -> m6_717  [key=2, style=dotted];
m6_2119 -> m6_2120  [key=0, style=solid];
m6_2120 -> m6_2121  [key=0, style=solid];
m6_2120 -> m6_2122  [key=2, style=dotted];
m6_2121 -> m6_2119  [color=blue, key=0, style=bold];
m6_286 -> m6_287  [key=0, style=solid];
m6_286 -> m6_294  [key=2, style=dotted];
m6_286 -> m6_134  [key=2, style=dotted];
m6_286 -> m6_196  [key=2, style=dotted];
m6_3478 -> m6_3479  [key=0, style=solid];
m6_3479 -> m6_3482  [key=2, style=dotted];
m6_3479 -> m6_3480  [key=0, style=solid];
m6_3480 -> m6_3483  [key=2, style=dotted];
m6_3480 -> m6_3481  [key=0, style=solid];
m6_3481 -> m6_3478  [color=blue, key=0, style=bold];
m6_2641 -> m6_2642  [key=0, style=solid];
m6_2646 -> m6_24  [key=2, style=dotted];
m6_2646 -> m6_2647  [key=0, style=solid];
m6_2647 -> m6_24  [key=2, style=dotted];
m6_2647 -> m6_2648  [key=0, style=solid];
m6_2648 -> m6_24  [key=2, style=dotted];
m6_2648 -> m6_2649  [key=0, style=solid];
m6_2645 -> m6_2646  [key=0, style=solid];
m6_2645 -> m6_2647  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_2645 -> m6_2648  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_2645 -> m6_49  [key=2, style=dotted];
m6_2644 -> m6_129  [key=2, style=dotted];
m6_2644 -> m6_2645  [key=0, style=solid];
m6_2642 -> m6_2644  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_2642 -> m6_2643  [key=0, style=solid];
m6_2642 -> m6_2650  [key=2, style=dotted];
m6_2643 -> m6_2644  [key=0, style=solid];
m6_2643 -> m6_2651  [key=2, style=dotted];
m6_2649 -> m6_2641  [color=blue, key=0, style=bold];
m6_1652 -> m6_1653  [key=0, style=solid];
m6_1658 -> m6_24  [key=2, style=dotted];
m6_1658 -> m6_1659  [key=0, style=solid];
m6_1658 -> m6_1649  [key=2, style=dotted];
m6_1657 -> m6_1658  [key=0, style=solid];
m6_1657 -> m6_49  [key=2, style=dotted];
m6_1655 -> m6_1657  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1655 -> m6_41  [key=2, style=dotted];
m6_1655 -> m6_1656  [key=0, style=solid];
m6_1656 -> m6_1657  [key=0, style=solid];
m6_1656 -> m6_42  [key=2, style=dotted];
m6_1653 -> m6_1655  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1653 -> m6_1654  [key=0, style=solid];
m6_1653 -> m6_1643  [key=2, style=dotted];
m6_1654 -> m6_1655  [key=0, style=solid];
m6_1659 -> m6_1652  [color=blue, key=0, style=bold];
m6_3220 -> m6_3221  [key=0, style=solid];
m6_3221 -> m6_60  [key=2, style=dotted];
m6_3221 -> m6_3222  [key=0, style=solid];
m6_3221 -> m6_3223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3222 -> m6_3220  [color=blue, key=0, style=bold];
m6_2889 -> m6_2890  [key=0, style=solid];
m6_2889 -> m6_2891  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_2889 -> m6_2892  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_2890 -> m6_2891  [key=0, style=solid];
m6_2891 -> m6_2892  [key=0, style=solid];
m6_2892 -> m6_2893  [key=0, style=solid];
m6_2893 -> m6_2889  [color=blue, key=0, style=bold];
m6_2043 -> m6_2044  [key=0, style=solid];
m6_2047 -> m6_24  [key=2, style=dotted];
m6_2047 -> m6_2048  [key=0, style=solid];
m6_2045 -> m6_2047  [color=darkseagreen4, key=1, label=cISO, style=dashed];
m6_2045 -> m6_2046  [key=0, style=solid];
m6_2045 -> m6_175  [key=2, style=dotted];
m6_2045 -> m6_1149  [key=2, style=dotted];
m6_2045 -> m6_296  [key=2, style=dotted];
m6_2046 -> m6_2047  [key=0, style=solid];
m6_2046 -> m6_175  [key=2, style=dotted];
m6_2046 -> m6_296  [key=2, style=dotted];
m6_2044 -> m6_2045  [key=0, style=solid];
m6_2044 -> m6_2046  [color=darkseagreen4, key=1, label=jsonIsoText, style=dashed];
m6_2048 -> m6_2043  [color=blue, key=0, style=bold];
m6_3644 -> m6_3645  [key=0, style=solid];
m6_3649 -> m6_24  [key=2, style=dotted];
m6_3649 -> m6_3649  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m6_3649 -> m6_3650  [key=0, style=solid];
m6_3649 -> m6_1110  [key=2, style=dotted];
m6_3650 -> m6_24  [key=2, style=dotted];
m6_3650 -> m6_3650  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m6_3650 -> m6_3651  [key=0, style=solid];
m6_3650 -> m6_3653  [key=2, style=dotted];
m6_3648 -> m6_3649  [key=0, style=solid];
m6_3647 -> m6_3648  [key=0, style=solid];
m6_3647 -> m6_3652  [key=2, style=dotted];
m6_3646 -> m6_175  [key=2, style=dotted];
m6_3646 -> m6_3647  [key=0, style=solid];
m6_3645 -> m6_3647  [color=darkseagreen4, key=1, label=content, style=dashed];
m6_3645 -> m6_3646  [key=0, style=solid];
m6_3651 -> m6_3644  [color=blue, key=0, style=bold];
m6_1280 -> m6_1281  [key=0, style=solid];
m6_1283 -> m6_24  [key=2, style=dotted];
m6_1283 -> m6_1284  [key=0, style=solid];
m6_1285 -> m6_24  [key=2, style=dotted];
m6_1285 -> m6_1286  [key=0, style=solid];
m6_1282 -> m6_1283  [key=0, style=solid];
m6_1282 -> m6_129  [key=2, style=dotted];
m6_1282 -> m6_1284  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1284 -> m6_1285  [key=0, style=solid];
m6_1284 -> m6_49  [key=2, style=dotted];
m6_1281 -> m6_1282  [key=0, style=solid];
m6_1281 -> m6_1287  [key=2, style=dotted];
m6_1286 -> m6_1280  [color=blue, key=0, style=bold];
m6_1600 -> m6_1601  [key=0, style=solid];
m6_1603 -> m6_24  [key=2, style=dotted];
m6_1603 -> m6_1604  [key=0, style=solid];
m6_1604 -> m6_24  [key=2, style=dotted];
m6_1604 -> m6_1605  [key=0, style=solid];
m6_1605 -> m6_24  [key=2, style=dotted];
m6_1605 -> m6_1606  [key=0, style=solid];
m6_1606 -> m6_24  [key=2, style=dotted];
m6_1606 -> m6_1607  [key=0, style=solid];
m6_1602 -> m6_1603  [key=0, style=solid];
m6_1602 -> m6_1604  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1602 -> m6_1605  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1602 -> m6_1606  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1602 -> m6_49  [key=2, style=dotted];
m6_1601 -> m6_1602  [key=0, style=solid];
m6_1607 -> m6_1600  [color=blue, key=0, style=bold];
m6_22 -> m6_20  [color=blue, key=0, style=bold];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_128  [color=blue, key=0, style=bold];
m6_135 -> m6_133  [color=blue, key=0, style=bold];
m6_3482 -> m6_3484  [key=0, style=solid];
m6_3482 -> m6_3487  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_3485 -> m6_19  [key=2, style=dotted];
m6_3485 -> m6_3486  [key=0, style=solid];
m6_3485 -> m6_3487  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_3484 -> m6_3485  [key=0, style=solid];
m6_3484 -> m6_2971  [key=2, style=dotted];
m6_3484 -> m6_3487  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m6_3484 -> m6_3488  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m6_3486 -> m6_3487  [key=0, style=solid];
m6_3486 -> m6_1865  [key=2, style=dotted];
m6_3487 -> m6_3488  [key=0, style=solid];
m6_3487 -> m6_836  [key=2, style=dotted];
m6_3488 -> m6_3489  [key=0, style=solid];
m6_3488 -> m6_2976  [key=2, style=dotted];
m6_3489 -> m6_3482  [color=blue, key=0, style=bold];
m6_57 -> m6_58  [key=0, style=solid];
m6_58 -> m6_60  [key=2, style=dotted];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_59 -> m6_57  [color=blue, key=0, style=bold];
m6_3161 -> m6_3162  [key=0, style=solid];
m6_3166 -> m6_24  [key=2, style=dotted];
m6_3166 -> m6_3167  [key=0, style=solid];
m6_3166 -> m6_1246  [key=2, style=dotted];
m6_3167 -> m6_24  [key=2, style=dotted];
m6_3167 -> m6_3168  [key=0, style=solid];
m6_3167 -> m6_1246  [key=2, style=dotted];
m6_3165 -> m6_3166  [key=0, style=solid];
m6_3165 -> m6_3167  [color=darkseagreen4, key=1, label=actual, style=dashed];
m6_3165 -> m6_49  [key=2, style=dotted];
m6_3165 -> m6_3168  [color=darkseagreen4, key=1, label=actual, style=dashed];
m6_3168 -> m6_3169  [key=0, style=solid];
m6_3162 -> m6_1246  [key=2, style=dotted];
m6_3162 -> m6_1102  [key=2, style=dotted];
m6_3162 -> m6_3163  [key=0, style=solid];
m6_3162 -> m6_3171  [key=2, style=dotted];
m6_3163 -> m6_3165  [color=darkseagreen4, key=1, label=jsonString, style=dashed];
m6_3163 -> m6_41  [key=2, style=dotted];
m6_3163 -> m6_3164  [key=0, style=solid];
m6_3164 -> m6_3165  [key=0, style=solid];
m6_3164 -> m6_42  [key=2, style=dotted];
m6_3169 -> m6_430  [key=2, style=dotted];
m6_3169 -> m6_3011  [key=2, style=dotted];
m6_3169 -> m6_3170  [key=0, style=solid];
m6_3170 -> m6_3161  [color=blue, key=0, style=bold];
m6_394 -> m6_395  [key=0, style=solid];
m6_394 -> m6_392  [key=0, style=solid];
m6_394 -> m6_394  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_398 -> m6_24  [key=2, style=dotted];
m6_398 -> m6_399  [key=0, style=solid];
m6_399 -> m6_24  [key=2, style=dotted];
m6_399 -> m6_400  [key=0, style=solid];
m6_399 -> m6_447  [key=0, style=solid];
m6_400 -> m6_24  [key=2, style=dotted];
m6_400 -> m6_401  [key=0, style=solid];
m6_400 -> m6_447  [key=0, style=solid];
m6_400 -> m6_455  [key=2, style=dotted];
m6_395 -> m6_398  [color=darkseagreen4, key=1, label=input, style=dashed];
m6_395 -> m6_399  [color=darkseagreen4, key=1, label=input, style=dashed];
m6_395 -> m6_400  [color=darkseagreen4, key=1, label=input, style=dashed];
m6_395 -> m6_396  [key=0, style=solid];
m6_395 -> m6_402  [key=2, style=dotted];
m6_395 -> m6_332  [key=2, style=dotted];
m6_397 -> m6_398  [key=0, style=solid];
m6_397 -> m6_399  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_397 -> m6_400  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_397 -> m6_49  [key=2, style=dotted];
m6_397 -> m6_447  [key=0, style=solid];
m6_397 -> m6_454  [key=2, style=dotted];
m6_396 -> m6_129  [key=2, style=dotted];
m6_396 -> m6_397  [key=0, style=solid];
m6_396 -> m6_260  [key=2, style=dotted];
m6_401 -> m6_394  [color=blue, key=0, style=bold];
m6_401 -> m6_402  [key=0, style=solid];
m6_3517 -> m6_3518  [key=0, style=solid];
m6_3523 -> m6_24  [key=2, style=dotted];
m6_3523 -> m6_3524  [key=0, style=solid];
m6_3521 -> m6_3523  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_3521 -> m6_16  [key=2, style=dotted];
m6_3521 -> m6_373  [key=2, style=dotted];
m6_3521 -> m6_3522  [key=0, style=solid];
m6_3521 -> m6_20  [key=2, style=dotted];
m6_3522 -> m6_3523  [key=0, style=solid];
m6_3522 -> m6_797  [key=2, style=dotted];
m6_3524 -> m6_3525  [key=0, style=solid];
m6_3518 -> m6_3521  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3518 -> m6_3529  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3518 -> m6_3519  [key=0, style=solid];
m6_3518 -> m6_3526  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3520 -> m6_3521  [key=0, style=solid];
m6_3520 -> m6_833  [key=2, style=dotted];
m6_3519 -> m6_3524  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_3519 -> m6_175  [key=2, style=dotted];
m6_3519 -> m6_3520  [key=0, style=solid];
m6_3519 -> m6_3525  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_3525 -> m6_3529  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_3525 -> m6_3526  [key=0, style=solid];
m6_3525 -> m6_833  [key=2, style=dotted];
m6_3526 -> m6_60  [key=2, style=dotted];
m6_3526 -> m6_3528  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3526 -> m6_3527  [key=0, style=solid];
m6_3527 -> m6_3517  [color=blue, key=0, style=bold];
m6_2277 -> m6_2278  [key=0, style=solid];
m6_2280 -> m6_42  [key=2, style=dotted];
m6_2280 -> m6_2281  [key=0, style=solid];
m6_2283 -> m6_42  [key=2, style=dotted];
m6_2283 -> m6_2284  [key=0, style=solid];
m6_2279 -> m6_41  [key=2, style=dotted];
m6_2279 -> m6_2280  [key=0, style=solid];
m6_2282 -> m6_41  [key=2, style=dotted];
m6_2282 -> m6_2283  [key=0, style=solid];
m6_2281 -> m6_2282  [key=0, style=solid];
m6_2281 -> m6_2286  [key=2, style=dotted];
m6_2278 -> m6_2279  [key=0, style=solid];
m6_2278 -> m6_2285  [key=2, style=dotted];
m6_2284 -> m6_2277  [color=blue, key=0, style=bold];
m6_3916 -> m6_3917  [key=0, style=solid];
m6_3917 -> m6_3900  [key=2, style=dotted];
m6_3917 -> m6_3918  [key=0, style=solid];
m6_3918 -> m6_3916  [color=blue, key=0, style=bold];
m6_518 -> m6_519  [key=0, style=solid];
m6_518 -> m6_24  [key=2, style=dotted];
m6_170 -> m6_171  [key=0, style=solid];
m6_170 -> m6_172  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_2694 -> m6_2695  [key=0, style=solid];
m6_2695 -> m6_175  [key=2, style=dotted];
m6_2695 -> m6_296  [key=2, style=dotted];
m6_2695 -> m6_2696  [key=0, style=solid];
m6_2696 -> m6_2694  [color=blue, key=0, style=bold];
m6_3232 -> m6_3233  [key=0, style=solid];
m6_3233 -> m6_60  [key=2, style=dotted];
m6_3233 -> m6_3234  [key=0, style=solid];
m6_3233 -> m6_3235  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3234 -> m6_3232  [color=blue, key=0, style=bold];
m6_1493 -> m6_1494  [key=0, style=solid];
m6_1495 -> m6_49  [key=2, style=dotted];
m6_1495 -> m6_1496  [key=0, style=solid];
m6_1494 -> m6_1495  [key=0, style=solid];
m6_1496 -> m6_1493  [color=blue, key=0, style=bold];
m6_3815 -> m6_3816  [key=0, style=solid];
m6_3816 -> m6_1246  [key=2, style=dotted];
m6_3816 -> m6_3817  [key=0, style=solid];
m6_3816 -> m6_740  [key=2, style=dotted];
m6_3816 -> m6_3818  [color=darkseagreen4, key=1, label=john, style=dashed];
m6_3816 -> m6_3819  [color=darkseagreen4, key=1, label=john, style=dashed];
m6_3816 -> m6_3820  [color=darkseagreen4, key=1, label=john, style=dashed];
m6_3817 -> m6_1246  [key=2, style=dotted];
m6_3817 -> m6_3818  [key=0, style=solid];
m6_3817 -> m6_740  [key=2, style=dotted];
m6_3817 -> m6_3819  [color=darkseagreen4, key=1, label=jane, style=dashed];
m6_3817 -> m6_3820  [color=darkseagreen4, key=1, label=jane, style=dashed];
m6_3821 -> m6_175  [key=2, style=dotted];
m6_3821 -> m6_176  [key=2, style=dotted];
m6_3821 -> m6_3822  [key=0, style=solid];
m6_3820 -> m6_134  [key=2, style=dotted];
m6_3820 -> m6_3821  [key=0, style=solid];
m6_3822 -> m6_42  [key=2, style=dotted];
m6_3822 -> m6_3823  [key=0, style=solid];
m6_3818 -> m6_3819  [key=0, style=solid];
m6_3819 -> m6_3820  [key=0, style=solid];
m6_3823 -> m6_3815  [color=blue, key=0, style=bold];
m6_1979 -> m6_1980  [key=0, style=solid];
m6_1983 -> m6_24  [key=2, style=dotted];
m6_1983 -> m6_1984  [key=0, style=solid];
m6_1983 -> m6_375  [key=2, style=dotted];
m6_1984 -> m6_24  [key=2, style=dotted];
m6_1984 -> m6_1985  [key=0, style=solid];
m6_1984 -> m6_375  [key=2, style=dotted];
m6_1985 -> m6_24  [key=2, style=dotted];
m6_1985 -> m6_1986  [key=0, style=solid];
m6_1986 -> m6_24  [key=2, style=dotted];
m6_1986 -> m6_1987  [key=0, style=solid];
m6_1987 -> m6_24  [key=2, style=dotted];
m6_1987 -> m6_1988  [key=0, style=solid];
m6_1988 -> m6_24  [key=2, style=dotted];
m6_1988 -> m6_1989  [key=0, style=solid];
m6_1989 -> m6_24  [key=2, style=dotted];
m6_1989 -> m6_1990  [key=0, style=solid];
m6_1980 -> m6_1983  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1980 -> m6_1984  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1980 -> m6_1985  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1980 -> m6_1986  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1980 -> m6_1987  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1980 -> m6_1988  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1980 -> m6_1989  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1980 -> m6_1981  [key=0, style=solid];
m6_1980 -> m6_49  [key=2, style=dotted];
m6_1980 -> m6_1982  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1982 -> m6_1983  [key=0, style=solid];
m6_1982 -> m6_797  [key=2, style=dotted];
m6_1981 -> m6_1982  [key=0, style=solid];
m6_1981 -> m6_797  [key=2, style=dotted];
m6_1990 -> m6_1979  [color=blue, key=0, style=bold];
m6_446 -> m6_447  [key=0, style=solid];
m6_446 -> m6_322  [key=2, style=dotted];
m6_450 -> m6_24  [key=2, style=dotted];
m6_450 -> m6_451  [key=0, style=solid];
m6_451 -> m6_24  [key=2, style=dotted];
m6_451 -> m6_452  [key=0, style=solid];
m6_452 -> m6_24  [key=2, style=dotted];
m6_452 -> m6_453  [key=0, style=solid];
m6_452 -> m6_466  [key=2, style=dotted];
m6_453 -> m6_24  [key=2, style=dotted];
m6_453 -> m6_454  [key=0, style=solid];
m6_457 -> m6_24  [key=2, style=dotted];
m6_457 -> m6_458  [key=0, style=solid];
m6_461 -> m6_24  [key=2, style=dotted];
m6_461 -> m6_462  [key=0, style=solid];
m6_461 -> m6_490  [key=0, style=solid];
m6_462 -> m6_24  [key=2, style=dotted];
m6_462 -> m6_463  [key=0, style=solid];
m6_462 -> m6_255  [key=2, style=dotted];
m6_462 -> m6_256  [key=2, style=dotted];
m6_462 -> m6_482  [color=darkseagreen4, key=1, label=manager, style=dashed];
m6_462 -> m6_484  [color=darkseagreen4, key=1, label=manager, style=dashed];
m6_456 -> m6_457  [key=0, style=solid];
m6_456 -> m6_465  [key=2, style=dotted];
m6_456 -> m6_458  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_458 -> m6_459  [key=0, style=solid];
m6_458 -> m6_467  [key=2, style=dotted];
m6_458 -> m6_468  [key=2, style=dotted];
m6_458 -> m6_22  [key=2, style=dotted];
m6_458 -> m6_456  [color=blue, key=0, style=bold];
m6_460 -> m6_461  [key=0, style=solid];
m6_460 -> m6_462  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_460 -> m6_465  [key=2, style=dotted];
m6_460 -> m6_463  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_463 -> m6_464  [key=0, style=solid];
m6_463 -> m6_467  [key=2, style=dotted];
m6_463 -> m6_468  [key=2, style=dotted];
m6_463 -> m6_22  [key=2, style=dotted];
m6_463 -> m6_477  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_463 -> m6_482  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_463 -> m6_484  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_463 -> m6_486  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_463 -> m6_489  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_447 -> m6_448  [key=0, style=solid];
m6_447 -> m6_454  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_447 -> m6_259  [color=blue, key=0, style=bold];
m6_459 -> m6_460  [key=0, style=solid];
m6_459 -> m6_463  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_459 -> m6_465  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_459 -> m6_466  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_459 -> m6_471  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_459 -> m6_472  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_459 -> m6_478  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_459 -> m6_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_459 -> m6_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_459 -> m6_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_459 -> m6_484  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_459 -> m6_485  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_464 -> m6_446  [color=blue, key=0, style=bold];
m6_464 -> m6_465  [key=0, style=solid];
m6_464 -> m6_477  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m6_464 -> m6_482  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m6_464 -> m6_484  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_49  [key=2, style=dotted];
m6_150 -> m6_151  [key=0, style=solid];
m6_150 -> m6_136  [key=2, style=dotted];
m6_150 -> m6_141  [key=2, style=dotted];
m6_150 -> m6_152  [key=2, style=dotted];
m6_151 -> m6_149  [color=blue, key=0, style=bold];
m6_151 -> m6_148  [color=blue, key=0, style=bold];
m6_1811 -> m6_1812  [key=0, style=solid];
m6_1813 -> m6_60  [key=2, style=dotted];
m6_1813 -> m6_1814  [key=0, style=solid];
m6_1813 -> m6_1815  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1812 -> m6_1816  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1812 -> m6_1813  [key=0, style=solid];
m6_1814 -> m6_1811  [color=blue, key=0, style=bold];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_22  [key=2, style=dotted];
m6_938 -> m6_939  [key=0, style=solid];
m6_946 -> m6_24  [key=2, style=dotted];
m6_946 -> m6_947  [key=0, style=solid];
m6_947 -> m6_24  [key=2, style=dotted];
m6_947 -> m6_948  [key=0, style=solid];
m6_947 -> m6_954  [key=2, style=dotted];
m6_948 -> m6_24  [key=2, style=dotted];
m6_948 -> m6_949  [key=0, style=solid];
m6_949 -> m6_24  [key=2, style=dotted];
m6_949 -> m6_950  [key=0, style=solid];
m6_950 -> m6_24  [key=2, style=dotted];
m6_950 -> m6_951  [key=0, style=solid];
m6_951 -> m6_24  [key=2, style=dotted];
m6_951 -> m6_952  [key=0, style=solid];
m6_945 -> m6_946  [key=0, style=solid];
m6_945 -> m6_947  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_945 -> m6_948  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_945 -> m6_949  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_945 -> m6_950  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_945 -> m6_951  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_945 -> m6_936  [key=2, style=dotted];
m6_944 -> m6_129  [key=2, style=dotted];
m6_944 -> m6_945  [key=0, style=solid];
m6_941 -> m6_954  [key=2, style=dotted];
m6_941 -> m6_942  [key=0, style=solid];
m6_939 -> m6_944  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_939 -> m6_941  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_939 -> m6_940  [key=0, style=solid];
m6_939 -> m6_953  [key=2, style=dotted];
m6_939 -> m6_942  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_939 -> m6_943  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_943 -> m6_944  [key=0, style=solid];
m6_940 -> m6_941  [key=0, style=solid];
m6_942 -> m6_943  [key=0, style=solid];
m6_952 -> m6_938  [color=blue, key=0, style=bold];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_82  [key=0, style=solid];
m6_79 -> m6_84  [key=0, style=solid];
m6_79 -> m6_86  [key=0, style=solid];
m6_81 -> m6_87  [key=0, style=solid];
m6_81 -> m6_57  [key=2, style=dotted];
m6_81 -> m6_79  [color=blue, key=0, style=bold];
m6_83 -> m6_87  [key=0, style=solid];
m6_83 -> m6_69  [key=2, style=dotted];
m6_83 -> m6_85  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_83 -> m6_86  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_83 -> m6_88  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_83 -> m6_89  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_83 -> m6_90  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_83 -> m6_91  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_83 -> m6_92  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_83 -> m6_93  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_83 -> m6_94  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_83 -> m6_95  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_83 -> m6_96  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_83 -> m6_97  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_49  [key=2, style=dotted];
m6_85 -> m6_87  [key=0, style=solid];
m6_85 -> m6_72  [key=2, style=dotted];
m6_85 -> m6_24  [key=2, style=dotted];
m6_85 -> m6_85  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_85 -> m6_86  [key=0, style=solid];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_75  [key=2, style=dotted];
m6_86 -> m6_24  [key=2, style=dotted];
m6_86 -> m6_86  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_49  [key=2, style=dotted];
m6_82 -> m6_83  [key=0, style=solid];
m6_84 -> m6_85  [key=0, style=solid];
m6_87 -> m6_78  [color=blue, key=0, style=bold];
m6_87 -> m6_24  [key=2, style=dotted];
m6_87 -> m6_87  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_87 -> m6_88  [key=0, style=solid];
m6_3889 -> m6_3896  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_3889 -> m6_3890  [key=0, style=solid];
m6_3889 -> m6_3892  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_3889 -> m6_3894  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_3897 -> m6_831  [key=2, style=dotted];
m6_3897 -> m6_3899  [key=0, style=solid];
m6_3896 -> m6_3897  [key=0, style=solid];
m6_3896 -> m6_3898  [key=0, style=solid];
m6_3891 -> m6_3899  [key=0, style=solid];
m6_3893 -> m6_3899  [key=0, style=solid];
m6_3895 -> m6_3899  [key=0, style=solid];
m6_3894 -> m6_3896  [key=0, style=solid];
m6_3894 -> m6_3895  [key=0, style=solid];
m6_3898 -> m6_3899  [key=0, style=solid];
m6_3898 -> m6_3900  [key=2, style=dotted];
m6_3890 -> m6_3891  [key=0, style=solid];
m6_3890 -> m6_3892  [key=0, style=solid];
m6_3892 -> m6_3893  [key=0, style=solid];
m6_3892 -> m6_3894  [key=0, style=solid];
m6_3899 -> m6_3889  [color=blue, key=0, style=bold];
m6_2585 -> m6_2586  [key=0, style=solid];
m6_2596 -> m6_24  [key=2, style=dotted];
m6_2596 -> m6_2597  [key=0, style=solid];
m6_2598 -> m6_24  [key=2, style=dotted];
m6_2598 -> m6_2599  [key=0, style=solid];
m6_2602 -> m6_24  [key=2, style=dotted];
m6_2602 -> m6_2603  [key=0, style=solid];
m6_2604 -> m6_24  [key=2, style=dotted];
m6_2604 -> m6_2605  [key=0, style=solid];
m6_2586 -> m6_2596  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2586 -> m6_2598  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2586 -> m6_2602  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2586 -> m6_2604  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2586 -> m6_2587  [key=0, style=solid];
m6_2586 -> m6_2606  [key=2, style=dotted];
m6_2586 -> m6_2588  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2586 -> m6_2589  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2586 -> m6_2590  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2586 -> m6_2591  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2586 -> m6_2592  [color=darkseagreen4, key=1, label=expando, style=dashed];
m6_2594 -> m6_2596  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m6_2594 -> m6_2598  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m6_2594 -> m6_2595  [key=0, style=solid];
m6_2594 -> m6_49  [key=2, style=dotted];
m6_2594 -> m6_2597  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m6_2594 -> m6_2599  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m6_2594 -> m6_2600  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m6_2595 -> m6_2596  [key=0, style=solid];
m6_2595 -> m6_746  [key=2, style=dotted];
m6_2597 -> m6_2598  [key=0, style=solid];
m6_2597 -> m6_746  [key=2, style=dotted];
m6_2599 -> m6_2600  [key=0, style=solid];
m6_2599 -> m6_746  [key=2, style=dotted];
m6_2600 -> m6_2602  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_2600 -> m6_2604  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_2600 -> m6_2601  [key=0, style=solid];
m6_2600 -> m6_2603  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_2601 -> m6_2602  [key=0, style=solid];
m6_2601 -> m6_746  [key=2, style=dotted];
m6_2603 -> m6_2604  [key=0, style=solid];
m6_2603 -> m6_746  [key=2, style=dotted];
m6_2591 -> m6_1102  [key=2, style=dotted];
m6_2591 -> m6_2592  [key=0, style=solid];
m6_2587 -> m6_2588  [key=0, style=solid];
m6_2588 -> m6_2589  [key=0, style=solid];
m6_2589 -> m6_2606  [key=2, style=dotted];
m6_2589 -> m6_2590  [key=0, style=solid];
m6_2590 -> m6_2591  [key=0, style=solid];
m6_2592 -> m6_2594  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2592 -> m6_2593  [key=0, style=solid];
m6_2592 -> m6_2607  [key=2, style=dotted];
m6_2593 -> m6_2594  [key=0, style=solid];
m6_2593 -> m6_42  [key=2, style=dotted];
m6_2605 -> m6_2585  [color=blue, key=0, style=bold];
m6_691 -> m6_692  [key=0, style=solid];
m6_691 -> m6_107  [key=2, style=dotted];
m6_692 -> m6_693  [key=0, style=solid];
m6_692 -> m6_123  [key=2, style=dotted];
m6_693 -> m6_691  [color=blue, key=0, style=bold];
m6_693 -> m6_521  [color=blue, key=0, style=bold];
m6_3904 -> m6_3905  [key=0, style=solid];
m6_3905 -> m6_3900  [key=2, style=dotted];
m6_3905 -> m6_3906  [key=0, style=solid];
m6_3906 -> m6_3904  [color=blue, key=0, style=bold];
m6_581 -> m6_24  [key=2, style=dotted];
m6_581 -> m6_582  [key=0, style=solid];
m6_1854 -> m6_1855  [key=0, style=solid];
m6_1857 -> m6_24  [key=2, style=dotted];
m6_1857 -> m6_1858  [key=0, style=solid];
m6_1856 -> m6_1857  [key=0, style=solid];
m6_1856 -> m6_49  [key=2, style=dotted];
m6_1855 -> m6_1856  [key=0, style=solid];
m6_1858 -> m6_1854  [color=blue, key=0, style=bold];
m6_194 -> m6_24  [key=2, style=dotted];
m6_194 -> m6_195  [key=0, style=solid];
m6_194 -> m6_193  [color=blue, key=0, style=bold];
m6_193 -> m6_194  [key=0, style=solid];
m6_193 -> m6_175  [key=2, style=dotted];
m6_193 -> m6_197  [key=2, style=dotted];
m6_193 -> m6_198  [key=2, style=dotted];
m6_192 -> m6_193  [key=0, style=solid];
m6_192 -> m6_196  [key=2, style=dotted];
m6_192 -> m6_220  [key=0, style=solid];
m6_192 -> m6_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_195 -> m6_191  [color=blue, key=0, style=bold];
m6_195 -> m6_196  [key=0, style=solid];
m6_521 -> m6_672  [key=0, style=solid];
m6_521 -> m6_676  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_521 -> m6_677  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_521 -> m6_679  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_521 -> m6_680  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_521 -> m6_682  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_521 -> m6_683  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_521 -> m6_685  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_521 -> m6_686  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_521 -> m6_688  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_521 -> m6_689  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_521 -> m6_690  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_521 -> m6_691  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m6_521 -> m6_692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_521 -> m6_522  [key=0, style=solid];
m6_676 -> m6_677  [key=0, style=solid];
m6_676 -> m6_691  [key=0, style=solid];
m6_676 -> m6_496  [key=2, style=dotted];
m6_676 -> m6_680  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m6_676 -> m6_683  [key=2, style=dotted];
m6_677 -> m6_678  [key=0, style=solid];
m6_677 -> m6_681  [key=0, style=solid];
m6_677 -> m6_684  [key=0, style=solid];
m6_677 -> m6_687  [key=0, style=solid];
m6_677 -> m6_690  [key=0, style=solid];
m6_677 -> m6_518  [key=2, style=dotted];
m6_677 -> m6_129  [key=2, style=dotted];
m6_677 -> m6_679  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_679 -> m6_680  [key=0, style=solid];
m6_679 -> m6_496  [key=2, style=dotted];
m6_679 -> m6_49  [key=2, style=dotted];
m6_680 -> m6_676  [key=0, style=solid];
m6_680 -> m6_518  [key=2, style=dotted];
m6_680 -> m6_691  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_680 -> m6_24  [key=2, style=dotted];
m6_680 -> m6_680  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m6_680 -> m6_681  [key=0, style=solid];
m6_682 -> m6_683  [key=0, style=solid];
m6_682 -> m6_496  [key=2, style=dotted];
m6_682 -> m6_675  [color=blue, key=0, style=bold];
m6_683 -> m6_676  [key=0, style=solid];
m6_683 -> m6_518  [key=2, style=dotted];
m6_683 -> m6_691  [color=darkseagreen4, key=1, label=publicId, style=dashed];
m6_673 -> m6_674  [key=0, style=solid];
m6_673 -> m6_691  [color=darkseagreen4, key=1, label=publicId, style=dashed];
m6_674 -> m6_675  [key=0, style=solid];
m6_674 -> m6_691  [color=darkseagreen4, key=1, label=systemId, style=dashed];
m6_675 -> m6_676  [key=0, style=solid];
m6_675 -> m6_691  [color=darkseagreen4, key=1, label=internalSubset, style=dashed];
m6_678 -> m6_679  [key=0, style=solid];
m6_678 -> m6_24  [key=2, style=dotted];
m6_681 -> m6_682  [key=0, style=solid];
m6_681 -> m6_24  [key=2, style=dotted];
m6_681 -> m6_681  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m6_3538 -> m6_3539  [key=0, style=solid];
m6_3539 -> m6_3541  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3539 -> m6_60  [key=2, style=dotted];
m6_3539 -> m6_3540  [key=0, style=solid];
m6_3540 -> m6_3538  [color=blue, key=0, style=bold];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_46  [color=blue, key=0, style=bold];
m6_53 -> m6_24  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_6  [key=2, style=dotted];
m6_53 -> m6_51  [key=2, style=dotted];
m6_53 -> m6_55  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m6_54 -> m6_24  [key=2, style=dotted];
m6_54 -> m6_54  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_54 -> m6_55  [key=0, style=solid];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_54  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_52 -> m6_52  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_52 -> m6_56  [key=2, style=dotted];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_49  [key=2, style=dotted];
m6_55 -> m6_50  [color=blue, key=0, style=bold];
m6_55 -> m6_56  [key=0, style=solid];
m6_4014 -> m6_4015  [key=0, style=solid];
m6_4021 -> m6_24  [key=2, style=dotted];
m6_4021 -> m6_4022  [key=0, style=solid];
m6_4021 -> m6_1681  [key=2, style=dotted];
m6_4015 -> m6_4021  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_4015 -> m6_954  [key=2, style=dotted];
m6_4015 -> m6_4016  [key=0, style=solid];
m6_4015 -> m6_4018  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_4020 -> m6_4021  [key=0, style=solid];
m6_4020 -> m6_296  [key=2, style=dotted];
m6_4016 -> m6_4017  [key=0, style=solid];
m6_4018 -> m6_4020  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4018 -> m6_176  [key=2, style=dotted];
m6_4018 -> m6_196  [key=2, style=dotted];
m6_4018 -> m6_4019  [key=0, style=solid];
m6_4017 -> m6_4020  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_4017 -> m6_175  [key=2, style=dotted];
m6_4017 -> m6_4018  [key=0, style=solid];
m6_4019 -> m6_4020  [key=0, style=solid];
m6_4019 -> m6_42  [key=2, style=dotted];
m6_4022 -> m6_4014  [color=blue, key=0, style=bold];
m6_1902 -> m6_1903  [key=0, style=solid];
m6_1907 -> m6_24  [key=2, style=dotted];
m6_1907 -> m6_1907  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m6_1907 -> m6_1908  [key=0, style=solid];
m6_1907 -> m6_1909  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m6_1908 -> m6_24  [key=2, style=dotted];
m6_1908 -> m6_1909  [key=0, style=solid];
m6_1909 -> m6_24  [key=2, style=dotted];
m6_1909 -> m6_1909  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m6_1909 -> m6_1910  [key=0, style=solid];
m6_1910 -> m6_24  [key=2, style=dotted];
m6_1910 -> m6_1911  [key=0, style=solid];
m6_1903 -> m6_1907  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m6_1903 -> m6_1904  [key=0, style=solid];
m6_1903 -> m6_1912  [key=2, style=dotted];
m6_1906 -> m6_1907  [key=0, style=solid];
m6_1906 -> m6_49  [key=2, style=dotted];
m6_1904 -> m6_1906  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1904 -> m6_41  [key=2, style=dotted];
m6_1904 -> m6_1905  [key=0, style=solid];
m6_1905 -> m6_1906  [key=0, style=solid];
m6_1905 -> m6_42  [key=2, style=dotted];
m6_1911 -> m6_1902  [color=blue, key=0, style=bold];
m6_305 -> m6_321  [key=0, style=solid];
m6_3139 -> m6_3140  [key=0, style=solid];
m6_3140 -> m6_60  [key=2, style=dotted];
m6_3140 -> m6_3141  [key=0, style=solid];
m6_3140 -> m6_3142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3141 -> m6_3139  [color=blue, key=0, style=bold];
m6_236 -> m6_233  [color=blue, key=0, style=bold];
m6_4032 -> m6_4033  [key=0, style=solid];
m6_4039 -> m6_24  [key=2, style=dotted];
m6_4039 -> m6_4040  [key=0, style=solid];
m6_4039 -> m6_1681  [key=2, style=dotted];
m6_4033 -> m6_4039  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_4033 -> m6_376  [key=2, style=dotted];
m6_4033 -> m6_4034  [key=0, style=solid];
m6_4033 -> m6_4036  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_4038 -> m6_4039  [key=0, style=solid];
m6_4038 -> m6_296  [key=2, style=dotted];
m6_4034 -> m6_4035  [key=0, style=solid];
m6_4036 -> m6_4038  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4036 -> m6_176  [key=2, style=dotted];
m6_4036 -> m6_196  [key=2, style=dotted];
m6_4036 -> m6_4037  [key=0, style=solid];
m6_4035 -> m6_4038  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_4035 -> m6_175  [key=2, style=dotted];
m6_4035 -> m6_4036  [key=0, style=solid];
m6_4037 -> m6_4038  [key=0, style=solid];
m6_4037 -> m6_42  [key=2, style=dotted];
m6_4040 -> m6_4032  [color=blue, key=0, style=bold];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_27  [key=2, style=dotted];
m6_25 -> m6_28  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_28  [key=2, style=dotted];
m6_26 -> m6_24  [color=blue, key=0, style=bold];
m6_1060 -> m6_1061  [key=0, style=solid];
m6_1062 -> m6_60  [key=2, style=dotted];
m6_1062 -> m6_1063  [key=0, style=solid];
m6_1062 -> m6_1064  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1061 -> m6_1065  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1061 -> m6_1062  [key=0, style=solid];
m6_1063 -> m6_1060  [color=blue, key=0, style=bold];
m6_1569 -> m6_1570  [key=0, style=solid];
m6_1573 -> m6_24  [key=2, style=dotted];
m6_1573 -> m6_1574  [key=0, style=solid];
m6_1576 -> m6_24  [key=2, style=dotted];
m6_1576 -> m6_1577  [key=0, style=solid];
m6_1572 -> m6_1573  [key=0, style=solid];
m6_1572 -> m6_129  [key=2, style=dotted];
m6_1572 -> m6_1574  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1574 -> m6_1575  [key=0, style=solid];
m6_1574 -> m6_49  [key=2, style=dotted];
m6_1575 -> m6_1576  [key=0, style=solid];
m6_1575 -> m6_129  [key=2, style=dotted];
m6_1570 -> m6_1572  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_1570 -> m6_1571  [key=0, style=solid];
m6_1570 -> m6_1578  [key=2, style=dotted];
m6_1571 -> m6_1572  [key=0, style=solid];
m6_1577 -> m6_1569  [color=blue, key=0, style=bold];
m6_3458 -> m6_3459  [key=0, style=solid];
m6_3463 -> m6_24  [key=2, style=dotted];
m6_3463 -> m6_3464  [key=0, style=solid];
m6_3464 -> m6_24  [key=2, style=dotted];
m6_3464 -> m6_3465  [key=0, style=solid];
m6_3464 -> m6_1102  [key=2, style=dotted];
m6_3465 -> m6_24  [key=2, style=dotted];
m6_3465 -> m6_3466  [key=0, style=solid];
m6_3465 -> m6_1102  [key=2, style=dotted];
m6_3462 -> m6_3463  [key=0, style=solid];
m6_3462 -> m6_3464  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3462 -> m6_3465  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3462 -> m6_49  [key=2, style=dotted];
m6_3459 -> m6_1102  [key=2, style=dotted];
m6_3459 -> m6_196  [key=2, style=dotted];
m6_3459 -> m6_3460  [key=0, style=solid];
m6_3460 -> m6_3462  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3460 -> m6_175  [key=2, style=dotted];
m6_3460 -> m6_198  [key=2, style=dotted];
m6_3460 -> m6_3461  [key=0, style=solid];
m6_3461 -> m6_3462  [key=0, style=solid];
m6_3461 -> m6_42  [key=2, style=dotted];
m6_3466 -> m6_3458  [color=blue, key=0, style=bold];
m6_783 -> m6_784  [key=0, style=solid];
m6_787 -> m6_24  [key=2, style=dotted];
m6_787 -> m6_788  [key=0, style=solid];
m6_785 -> m6_787  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_785 -> m6_129  [key=2, style=dotted];
m6_785 -> m6_786  [key=0, style=solid];
m6_786 -> m6_787  [key=0, style=solid];
m6_784 -> m6_785  [key=0, style=solid];
m6_784 -> m6_789  [key=2, style=dotted];
m6_784 -> m6_790  [key=2, style=dotted];
m6_788 -> m6_783  [color=blue, key=0, style=bold];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_24  [key=2, style=dotted];
m6_113 -> m6_113  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_114 -> m6_113  [color=blue, key=0, style=bold];
m6_114 -> m6_24  [key=2, style=dotted];
m6_114 -> m6_114  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_114 -> m6_115  [key=0, style=solid];
m6_2937 -> m6_2938  [key=0, style=solid];
m6_2942 -> m6_24  [key=2, style=dotted];
m6_2942 -> m6_2943  [key=0, style=solid];
m6_2943 -> m6_24  [key=2, style=dotted];
m6_2943 -> m6_2944  [key=0, style=solid];
m6_2944 -> m6_24  [key=2, style=dotted];
m6_2944 -> m6_2945  [key=0, style=solid];
m6_2945 -> m6_24  [key=2, style=dotted];
m6_2945 -> m6_2946  [key=0, style=solid];
m6_2946 -> m6_24  [key=2, style=dotted];
m6_2946 -> m6_2947  [key=0, style=solid];
m6_2938 -> m6_2942  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2938 -> m6_2943  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2938 -> m6_2944  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2938 -> m6_2945  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2938 -> m6_2946  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2938 -> m6_2939  [key=0, style=solid];
m6_2938 -> m6_2948  [key=2, style=dotted];
m6_2941 -> m6_2942  [key=0, style=solid];
m6_2941 -> m6_2943  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2941 -> m6_2944  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2941 -> m6_2945  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2941 -> m6_2946  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2941 -> m6_49  [key=2, style=dotted];
m6_2939 -> m6_2941  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2939 -> m6_41  [key=2, style=dotted];
m6_2939 -> m6_2940  [key=0, style=solid];
m6_2940 -> m6_2941  [key=0, style=solid];
m6_2940 -> m6_42  [key=2, style=dotted];
m6_2947 -> m6_2937  [color=blue, key=0, style=bold];
m6_3833 -> m6_3834  [key=0, style=solid];
m6_3836 -> m6_24  [key=2, style=dotted];
m6_3836 -> m6_3837  [key=0, style=solid];
m6_3839 -> m6_24  [key=2, style=dotted];
m6_3839 -> m6_3840  [key=0, style=solid];
m6_3840 -> m6_24  [key=2, style=dotted];
m6_3840 -> m6_3841  [key=0, style=solid];
m6_3835 -> m6_3836  [key=0, style=solid];
m6_3835 -> m6_542  [key=2, style=dotted];
m6_3835 -> m6_175  [key=2, style=dotted];
m6_3835 -> m6_296  [key=2, style=dotted];
m6_3835 -> m6_3837  [color=darkseagreen4, key=1, label=people, style=dashed];
m6_3835 -> m6_3838  [color=darkseagreen4, key=1, label=people, style=dashed];
m6_3837 -> m6_3839  [color=darkseagreen4, key=1, label=john, style=dashed];
m6_3837 -> m6_3840  [color=darkseagreen4, key=1, label=john, style=dashed];
m6_3837 -> m6_3838  [key=0, style=solid];
m6_3838 -> m6_3839  [key=0, style=solid];
m6_3838 -> m6_3840  [color=darkseagreen4, key=1, label=jane, style=dashed];
m6_3834 -> m6_3835  [key=0, style=solid];
m6_3841 -> m6_3833  [color=blue, key=0, style=bold];
m6_1790 -> m6_1791  [key=0, style=solid];
m6_1792 -> m6_60  [key=2, style=dotted];
m6_1792 -> m6_1793  [key=0, style=solid];
m6_1792 -> m6_1794  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1791 -> m6_1795  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1791 -> m6_1792  [key=0, style=solid];
m6_1793 -> m6_1790  [color=blue, key=0, style=bold];
m6_3614 -> m6_3615  [key=0, style=solid];
m6_3617 -> m6_24  [key=2, style=dotted];
m6_3617 -> m6_3618  [key=0, style=solid];
m6_3618 -> m6_24  [key=2, style=dotted];
m6_3618 -> m6_3619  [key=0, style=solid];
m6_3616 -> m6_3617  [key=0, style=solid];
m6_3616 -> m6_3618  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_3616 -> m6_49  [key=2, style=dotted];
m6_3615 -> m6_3616  [key=0, style=solid];
m6_3619 -> m6_3614  [color=blue, key=0, style=bold];
m6_4134 -> m6_4135  [key=0, style=solid];
m6_4135 -> m6_20  [key=2, style=dotted];
m6_4135 -> m6_4136  [key=0, style=solid];
m6_4135 -> m6_4138  [color=darkseagreen4, key=1, label=messageJObject, style=dashed];
m6_4135 -> m6_4141  [color=darkseagreen4, key=1, label=messageJObject, style=dashed];
m6_4136 -> m6_4137  [key=0, style=solid];
m6_4136 -> m6_4138  [key=0, style=solid];
m6_4138 -> m6_4139  [key=0, style=solid];
m6_4138 -> m6_4145  [key=2, style=dotted];
m6_4138 -> m6_4146  [key=2, style=dotted];
m6_4138 -> m6_4142  [color=darkseagreen4, key=1, label=address, style=dashed];
m6_4138 -> m6_4143  [color=darkseagreen4, key=1, label=address, style=dashed];
m6_4141 -> m6_4141  [color=darkseagreen4, key=1, label=displayNameToken, style=dashed];
m6_4141 -> m6_4142  [key=0, style=solid];
m6_4141 -> m6_4143  [key=0, style=solid];
m6_4141 -> m6_4147  [key=2, style=dotted];
m6_4141 -> m6_4146  [key=2, style=dotted];
m6_4141 -> m6_4148  [key=2, style=dotted];
m6_4137 -> m6_4144  [key=0, style=solid];
m6_4139 -> m6_4141  [color=darkseagreen4, key=1, label=displayNameToken, style=dashed];
m6_4139 -> m6_4140  [key=0, style=solid];
m6_4142 -> m6_4144  [key=0, style=solid];
m6_4142 -> m6_4149  [key=2, style=dotted];
m6_4143 -> m6_4144  [key=0, style=solid];
m6_4143 -> m6_4150  [key=2, style=dotted];
m6_4140 -> m6_4141  [key=0, style=solid];
m6_4144 -> m6_4134  [color=blue, key=0, style=bold];
m6_1832 -> m6_1833  [key=0, style=solid];
m6_1834 -> m6_49  [key=2, style=dotted];
m6_1834 -> m6_1835  [key=0, style=solid];
m6_1837 -> m6_22  [key=2, style=dotted];
m6_1837 -> m6_1457  [key=2, style=dotted];
m6_1837 -> m6_1838  [key=0, style=solid];
m6_1835 -> m6_21  [key=2, style=dotted];
m6_1835 -> m6_1836  [key=0, style=solid];
m6_1835 -> m6_1838  [key=0, style=solid];
m6_1833 -> m6_1834  [key=0, style=solid];
m6_1836 -> m6_1837  [key=0, style=solid];
m6_1838 -> m6_1832  [color=blue, key=0, style=bold];
m6_544 -> m6_545  [key=0, style=solid];
m6_544 -> m6_497  [key=2, style=dotted];
m6_548 -> m6_24  [key=2, style=dotted];
m6_548 -> m6_549  [key=0, style=solid];
m6_548 -> m6_609  [key=0, style=solid];
m6_548 -> m6_612  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_548 -> m6_613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_548 -> m6_614  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_548 -> m6_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_548 -> m6_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_548 -> m6_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_548 -> m6_628  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m6_548 -> m6_631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_548 -> m6_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_548 -> m6_633  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m6_548 -> m6_636  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m6_548 -> m6_640  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m6_548 -> m6_646  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_550 -> m6_24  [key=2, style=dotted];
m6_550 -> m6_551  [key=0, style=solid];
m6_577 -> m6_24  [key=2, style=dotted];
m6_577 -> m6_578  [key=0, style=solid];
m6_583 -> m6_24  [key=2, style=dotted];
m6_583 -> m6_584  [key=0, style=solid];
m6_585 -> m6_24  [key=2, style=dotted];
m6_585 -> m6_586  [key=0, style=solid];
m6_585 -> m6_549  [key=2, style=dotted];
m6_587 -> m6_24  [key=2, style=dotted];
m6_587 -> m6_588  [key=0, style=solid];
m6_587 -> m6_123  [key=2, style=dotted];
m6_589 -> m6_24  [key=2, style=dotted];
m6_589 -> m6_590  [key=0, style=solid];
m6_589 -> m6_592  [key=0, style=solid];
m6_589 -> m6_496  [key=2, style=dotted];
m6_591 -> m6_24  [key=2, style=dotted];
m6_591 -> m6_592  [key=0, style=solid];
m6_591 -> m6_589  [key=0, style=solid];
m6_591 -> m6_591  [color=darkseagreen4, key=1, label=count, style=dashed];
m6_591 -> m6_594  [color=darkseagreen4, key=1, label=count, style=dashed];
m6_594 -> m6_24  [key=2, style=dotted];
m6_594 -> m6_595  [key=0, style=solid];
m6_594 -> m6_597  [key=0, style=solid];
m6_595 -> m6_24  [key=2, style=dotted];
m6_595 -> m6_596  [key=0, style=solid];
m6_595 -> m6_608  [key=2, style=dotted];
m6_595 -> m6_599  [key=2, style=dotted];
m6_595 -> m6_600  [key=2, style=dotted];
m6_595 -> m6_601  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_597 -> m6_24  [key=2, style=dotted];
m6_597 -> m6_598  [key=0, style=solid];
m6_597 -> m6_608  [key=2, style=dotted];
m6_597 -> m6_522  [color=blue, key=0, style=bold];
m6_602 -> m6_24  [key=2, style=dotted];
m6_602 -> m6_603  [key=0, style=solid];
m6_604 -> m6_24  [key=2, style=dotted];
m6_604 -> m6_605  [key=0, style=solid];
m6_604 -> m6_117  [key=2, style=dotted];
m6_604 -> m6_119  [key=2, style=dotted];
m6_606 -> m6_24  [key=2, style=dotted];
m6_606 -> m6_607  [key=0, style=solid];
m6_606 -> m6_608  [key=0, style=solid];
m6_606 -> m6_121  [key=2, style=dotted];
m6_546 -> m6_536  [key=2, style=dotted];
m6_546 -> m6_548  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m6_546 -> m6_547  [key=0, style=solid];
m6_546 -> m6_555  [key=2, style=dotted];
m6_553 -> m6_537  [key=2, style=dotted];
m6_553 -> m6_554  [key=0, style=solid];
m6_553 -> m6_694  [key=0, style=solid];
m6_553 -> m6_695  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_545 -> m6_548  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_550  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_552  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_554  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_557  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_559  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_561  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_563  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_565  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_567  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_569  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_571  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_573  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_575  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_577  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_579  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_581  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_583  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_585  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_587  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_589  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_591  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_594  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_595  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_597  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_599  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_602  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_604  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_606  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_546  [key=0, style=solid];
m6_545 -> m6_553  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_558  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_560  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_175  [key=2, style=dotted];
m6_545 -> m6_547  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_549  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_551  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_556  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_562  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_564  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_566  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_568  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_570  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_572  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_574  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_576  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_578  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_580  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_582  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_584  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_586  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_588  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_590  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_593  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_596  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_598  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_601  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_603  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_605  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_545 -> m6_454  [key=2, style=dotted];
m6_547 -> m6_548  [key=0, style=solid];
m6_547 -> m6_495  [color=blue, key=0, style=bold];
m6_551 -> m6_552  [key=0, style=solid];
m6_578 -> m6_579  [key=0, style=solid];
m6_580 -> m6_581  [key=0, style=solid];
m6_582 -> m6_583  [key=0, style=solid];
m6_584 -> m6_585  [key=0, style=solid];
m6_586 -> m6_587  [key=0, style=solid];
m6_586 -> m6_553  [key=2, style=dotted];
m6_586 -> m6_590  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m6_586 -> m6_593  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m6_586 -> m6_595  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m6_588 -> m6_589  [key=0, style=solid];
m6_588 -> m6_591  [color=darkseagreen4, key=1, label=count, style=dashed];
m6_588 -> m6_594  [color=darkseagreen4, key=1, label=count, style=dashed];
m6_590 -> m6_591  [key=0, style=solid];
m6_590 -> m6_499  [key=2, style=dotted];
m6_592 -> m6_594  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m6_592 -> m6_595  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m6_592 -> m6_597  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m6_592 -> m6_542  [key=2, style=dotted];
m6_592 -> m6_593  [key=0, style=solid];
m6_592 -> m6_596  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m6_592 -> m6_610  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m6_593 -> m6_594  [key=0, style=solid];
m6_593 -> m6_598  [key=2, style=dotted];
m6_596 -> m6_597  [key=0, style=solid];
m6_596 -> m6_598  [key=2, style=dotted];
m6_598 -> m6_599  [key=0, style=solid];
m6_598 -> m6_604  [key=0, style=solid];
m6_598 -> m6_605  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m6_598 -> m6_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m6_598 -> m6_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m6_601 -> m6_602  [key=0, style=solid];
m6_603 -> m6_604  [key=0, style=solid];
m6_603 -> m6_601  [color=blue, key=0, style=bold];
m6_605 -> m6_606  [key=0, style=solid];
m6_605 -> m6_608  [key=0, style=solid];
m6_607 -> m6_544  [color=blue, key=0, style=bold];
m6_607 -> m6_608  [key=0, style=solid];
m6_607 -> m6_117  [key=2, style=dotted];
m6_607 -> m6_119  [key=2, style=dotted];
m6_830 -> m6_842  [key=0, style=solid];
m6_830 -> m6_843  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_842 -> m6_843  [key=0, style=solid];
m6_843 -> m6_844  [key=0, style=solid];
m6_844 -> m6_830  [color=blue, key=0, style=bold];
m6_2662 -> m6_2663  [key=0, style=solid];
m6_2667 -> m6_24  [key=2, style=dotted];
m6_2667 -> m6_2668  [key=0, style=solid];
m6_2668 -> m6_24  [key=2, style=dotted];
m6_2668 -> m6_2669  [key=0, style=solid];
m6_2666 -> m6_2667  [key=0, style=solid];
m6_2666 -> m6_2668  [color=darkseagreen4, key=1, label=meh, style=dashed];
m6_2666 -> m6_296  [key=2, style=dotted];
m6_2664 -> m6_2666  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_2664 -> m6_175  [key=2, style=dotted];
m6_2664 -> m6_2665  [key=0, style=solid];
m6_2665 -> m6_2666  [key=0, style=solid];
m6_2665 -> m6_198  [key=2, style=dotted];
m6_2663 -> m6_2664  [key=0, style=solid];
m6_2663 -> m6_2665  [color=darkseagreen4, key=1, label=derived, style=dashed];
m6_2663 -> m6_2654  [key=2, style=dotted];
m6_2669 -> m6_2662  [color=blue, key=0, style=bold];
m6_1818 -> m6_1819  [key=0, style=solid];
m6_1820 -> m6_60  [key=2, style=dotted];
m6_1820 -> m6_1821  [key=0, style=solid];
m6_1820 -> m6_1822  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1819 -> m6_1823  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1819 -> m6_1820  [key=0, style=solid];
m6_1821 -> m6_1818  [color=blue, key=0, style=bold];
m6_403 -> m6_404  [key=0, style=solid];
m6_407 -> m6_24  [key=2, style=dotted];
m6_407 -> m6_408  [key=0, style=solid];
m6_407 -> m6_409  [key=0, style=solid];
m6_408 -> m6_24  [key=2, style=dotted];
m6_408 -> m6_409  [key=0, style=solid];
m6_408 -> m6_447  [key=0, style=solid];
m6_409 -> m6_24  [key=2, style=dotted];
m6_409 -> m6_410  [key=0, style=solid];
m6_409 -> m6_412  [key=0, style=solid];
m6_404 -> m6_407  [color=darkseagreen4, key=1, label=input, style=dashed];
m6_404 -> m6_408  [color=darkseagreen4, key=1, label=input, style=dashed];
m6_404 -> m6_409  [color=darkseagreen4, key=1, label=input, style=dashed];
m6_404 -> m6_405  [key=0, style=solid];
m6_404 -> m6_411  [key=2, style=dotted];
m6_406 -> m6_407  [key=0, style=solid];
m6_406 -> m6_408  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_406 -> m6_409  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_406 -> m6_49  [key=2, style=dotted];
m6_405 -> m6_129  [key=2, style=dotted];
m6_405 -> m6_406  [key=0, style=solid];
m6_410 -> m6_403  [color=blue, key=0, style=bold];
m6_410 -> m6_411  [key=0, style=solid];
m6_410 -> m6_412  [key=0, style=solid];
m6_20 -> m6_21  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_6  [key=2, style=dotted];
m6_21 -> m6_23  [key=2, style=dotted];
m6_3796 -> m6_3798  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_3796 -> m6_3797  [key=0, style=solid];
m6_3796 -> m6_3799  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_3798 -> m6_2095  [key=2, style=dotted];
m6_3798 -> m6_2096  [key=2, style=dotted];
m6_3798 -> m6_3800  [key=0, style=solid];
m6_3797 -> m6_3798  [key=0, style=solid];
m6_3797 -> m6_3799  [key=0, style=solid];
m6_3799 -> m6_3800  [key=0, style=solid];
m6_3800 -> m6_3796  [color=blue, key=0, style=bold];
m6_3910 -> m6_3911  [key=0, style=solid];
m6_3911 -> m6_3900  [key=2, style=dotted];
m6_3911 -> m6_3912  [key=0, style=solid];
m6_3912 -> m6_3910  [color=blue, key=0, style=bold];
m6_3588 -> m6_3589  [key=0, style=solid];
m6_3589 -> m6_3590  [key=0, style=solid];
m6_3590 -> m6_3588  [color=blue, key=0, style=bold];
m6_2843 -> m6_2844  [key=0, style=solid];
m6_2845 -> m6_196  [key=2, style=dotted];
m6_2845 -> m6_2846  [key=0, style=solid];
m6_2844 -> m6_2845  [key=0, style=solid];
m6_2846 -> m6_2843  [color=blue, key=0, style=bold];
m6_168 -> m6_232  [key=0, style=solid];
m6_168 -> m6_129  [key=2, style=dotted];
m6_168 -> m6_170  [key=2, style=dotted];
m6_168 -> m6_169  [key=0, style=solid];
m6_232 -> m6_168  [color=blue, key=0, style=bold];
m6_232 -> m6_235  [key=2, style=dotted];
m6_232 -> m6_233  [key=0, style=solid];
m6_232 -> m6_236  [key=2, style=dotted];
m6_2629 -> m6_2630  [key=0, style=solid];
m6_2633 -> m6_19  [key=2, style=dotted];
m6_2633 -> m6_2634  [key=0, style=solid];
m6_2635 -> m6_24  [key=2, style=dotted];
m6_2635 -> m6_2636  [key=0, style=solid];
m6_2632 -> m6_2633  [key=0, style=solid];
m6_2634 -> m6_2635  [key=0, style=solid];
m6_2634 -> m6_20  [key=2, style=dotted];
m6_2631 -> m6_2632  [key=0, style=solid];
m6_2631 -> m6_2634  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2631 -> m6_16  [key=2, style=dotted];
m6_2631 -> m6_373  [key=2, style=dotted];
m6_2630 -> m6_2631  [key=0, style=solid];
m6_2636 -> m6_2629  [color=blue, key=0, style=bold];
m6_267 -> m6_268  [key=0, style=solid];
m6_267 -> m6_60  [key=2, style=dotted];
m6_267 -> m6_274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2894 -> m6_2895  [key=0, style=solid];
m6_2895 -> m6_2896  [key=0, style=solid];
m6_2896 -> m6_2894  [color=blue, key=0, style=bold];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_130  [key=0, style=solid];
m6_128 -> m6_131  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m6_128 -> m6_132  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m6_129 -> m6_130  [key=0, style=solid];
m6_130 -> m6_128  [color=blue, key=0, style=bold];
m6_130 -> m6_134  [key=2, style=dotted];
m6_130 -> m6_131  [key=0, style=solid];
m6_1254 -> m6_1255  [key=0, style=solid];
m6_1259 -> m6_24  [key=2, style=dotted];
m6_1259 -> m6_1260  [key=0, style=solid];
m6_1255 -> m6_1259  [color=darkseagreen4, key=1, label=ts, style=dashed];
m6_1255 -> m6_1256  [key=0, style=solid];
m6_1255 -> m6_1261  [key=2, style=dotted];
m6_1258 -> m6_1259  [key=0, style=solid];
m6_1258 -> m6_49  [key=2, style=dotted];
m6_1256 -> m6_1258  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1256 -> m6_1257  [key=0, style=solid];
m6_1256 -> m6_1262  [key=2, style=dotted];
m6_1256 -> m6_41  [key=2, style=dotted];
m6_1257 -> m6_1258  [key=0, style=solid];
m6_1257 -> m6_42  [key=2, style=dotted];
m6_1260 -> m6_1254  [color=blue, key=0, style=bold];
m6_755 -> m6_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper", style=dashed];
m6_3620 -> m6_3621  [key=0, style=solid];
m6_3623 -> m6_24  [key=2, style=dotted];
m6_3623 -> m6_3624  [key=0, style=solid];
m6_3627 -> m6_24  [key=2, style=dotted];
m6_3627 -> m6_3628  [key=0, style=solid];
m6_3622 -> m6_3623  [key=0, style=solid];
m6_3622 -> m6_129  [key=2, style=dotted];
m6_3622 -> m6_3625  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3622 -> m6_3631  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3624 -> m6_3625  [key=0, style=solid];
m6_3626 -> m6_3627  [key=0, style=solid];
m6_3626 -> m6_3629  [key=2, style=dotted];
m6_3621 -> m6_3622  [key=0, style=solid];
m6_3621 -> m6_3588  [key=2, style=dotted];
m6_3625 -> m6_3626  [key=0, style=solid];
m6_3628 -> m6_3620  [color=blue, key=0, style=bold];
m6_103 -> m6_104  [key=0, style=solid];
m6_103 -> m6_24  [key=2, style=dotted];
m6_103 -> m6_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_104 -> m6_103  [color=blue, key=0, style=bold];
m6_104 -> m6_24  [key=2, style=dotted];
m6_104 -> m6_104  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_104 -> m6_105  [key=0, style=solid];
m6_2161 -> m6_2162  [key=0, style=solid];
m6_2161 -> m6_2163  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2164  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2165  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2166  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2167  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2168  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2169  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2170  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2171  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2172  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2173  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2174  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2175  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2176  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2177  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2178  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2161 -> m6_2179  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_2162 -> m6_2163  [key=0, style=solid];
m6_2162 -> m6_716  [key=2, style=dotted];
m6_2163 -> m6_2164  [key=0, style=solid];
m6_2163 -> m6_717  [key=2, style=dotted];
m6_2164 -> m6_2165  [key=0, style=solid];
m6_2164 -> m6_718  [key=2, style=dotted];
m6_2165 -> m6_2166  [key=0, style=solid];
m6_2165 -> m6_718  [key=2, style=dotted];
m6_2166 -> m6_2167  [key=0, style=solid];
m6_2166 -> m6_718  [key=2, style=dotted];
m6_2167 -> m6_2168  [key=0, style=solid];
m6_2167 -> m6_718  [key=2, style=dotted];
m6_2168 -> m6_2169  [key=0, style=solid];
m6_2168 -> m6_2181  [key=2, style=dotted];
m6_2169 -> m6_2170  [key=0, style=solid];
m6_2169 -> m6_2182  [key=2, style=dotted];
m6_2170 -> m6_2171  [key=0, style=solid];
m6_2170 -> m6_2183  [key=2, style=dotted];
m6_2171 -> m6_2172  [key=0, style=solid];
m6_2171 -> m6_2184  [key=2, style=dotted];
m6_2172 -> m6_2173  [key=0, style=solid];
m6_2172 -> m6_2185  [key=2, style=dotted];
m6_2173 -> m6_2174  [key=0, style=solid];
m6_2173 -> m6_2186  [key=2, style=dotted];
m6_2174 -> m6_2175  [key=0, style=solid];
m6_2174 -> m6_2187  [key=2, style=dotted];
m6_2175 -> m6_2176  [key=0, style=solid];
m6_2175 -> m6_2188  [key=2, style=dotted];
m6_2176 -> m6_2177  [key=0, style=solid];
m6_2176 -> m6_2189  [key=2, style=dotted];
m6_2177 -> m6_2178  [key=0, style=solid];
m6_2177 -> m6_2190  [key=2, style=dotted];
m6_2178 -> m6_2179  [key=0, style=solid];
m6_2178 -> m6_2191  [key=2, style=dotted];
m6_2179 -> m6_2180  [key=0, style=solid];
m6_2179 -> m6_2192  [key=2, style=dotted];
m6_2180 -> m6_2161  [color=blue, key=0, style=bold];
m6_3172 -> m6_3173  [key=0, style=solid];
m6_3175 -> m6_24  [key=2, style=dotted];
m6_3175 -> m6_3176  [key=0, style=solid];
m6_3176 -> m6_24  [key=2, style=dotted];
m6_3176 -> m6_3177  [key=0, style=solid];
m6_3174 -> m6_3175  [key=0, style=solid];
m6_3174 -> m6_3176  [color=darkseagreen4, key=1, label=dict, style=dashed];
m6_3174 -> m6_16  [key=2, style=dotted];
m6_3174 -> m6_373  [key=2, style=dotted];
m6_3174 -> m6_20  [key=2, style=dotted];
m6_3173 -> m6_3174  [key=0, style=solid];
m6_3173 -> m6_175  [key=2, style=dotted];
m6_3173 -> m6_833  [key=2, style=dotted];
m6_3177 -> m6_3172  [color=blue, key=0, style=bold];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_224  [key=2, style=dotted];
m6_222 -> m6_223  [key=0, style=solid];
m6_222 -> m6_220  [color=blue, key=0, style=bold];
m6_221 -> m6_222  [key=0, style=solid];
m6_221 -> m6_49  [key=2, style=dotted];
m6_223 -> m6_192  [color=blue, key=0, style=bold];
m6_223 -> m6_224  [key=0, style=solid];
m6_3467 -> m6_3468  [key=0, style=solid];
m6_3468 -> m6_19  [key=2, style=dotted];
m6_3468 -> m6_3469  [key=0, style=solid];
m6_3468 -> m6_16  [key=2, style=dotted];
m6_3468 -> m6_373  [key=2, style=dotted];
m6_3468 -> m6_3010  [key=2, style=dotted];
m6_3469 -> m6_24  [key=2, style=dotted];
m6_3469 -> m6_3470  [key=0, style=solid];
m6_3470 -> m6_3467  [color=blue, key=0, style=bold];
m6_3578 -> m6_3579  [key=0, style=solid];
m6_3580 -> m6_24  [key=2, style=dotted];
m6_3580 -> m6_3580  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_3580 -> m6_3581  [key=0, style=solid];
m6_3581 -> m6_24  [key=2, style=dotted];
m6_3581 -> m6_3581  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_3581 -> m6_3582  [key=0, style=solid];
m6_3579 -> m6_3580  [key=0, style=solid];
m6_3579 -> m6_49  [key=2, style=dotted];
m6_3582 -> m6_3578  [color=blue, key=0, style=bold];
m6_2087 -> m6_2088  [key=0, style=solid];
m6_2088 -> m6_2087  [color=blue, key=0, style=bold];
m6_296 -> m6_297  [key=0, style=solid];
m6_296 -> m6_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_296 -> m6_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_296 -> m6_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_296 -> m6_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_296 -> m6_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_296 -> m6_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_296 -> m6_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_297 -> m6_298  [key=0, style=solid];
m6_297 -> m6_302  [key=0, style=solid];
m6_297 -> m6_304  [key=0, style=solid];
m6_297 -> m6_306  [key=0, style=solid];
m6_297 -> m6_308  [key=0, style=solid];
m6_297 -> m6_310  [key=0, style=solid];
m6_297 -> m6_312  [key=0, style=solid];
m6_297 -> m6_314  [key=0, style=solid];
m6_297 -> m6_316  [key=0, style=solid];
m6_297 -> m6_318  [key=0, style=solid];
m6_297 -> m6_320  [key=0, style=solid];
m6_299 -> m6_300  [key=0, style=solid];
m6_299 -> m6_301  [key=0, style=solid];
m6_299 -> m6_306  [key=2, style=dotted];
m6_300 -> m6_321  [key=0, style=solid];
m6_300 -> m6_301  [key=0, style=solid];
m6_300 -> m6_129  [key=2, style=dotted];
m6_301 -> m6_321  [key=0, style=solid];
m6_301 -> m6_288  [key=2, style=dotted];
m6_301 -> m6_24  [key=2, style=dotted];
m6_301 -> m6_302  [key=0, style=solid];
m6_307 -> m6_321  [key=0, style=solid];
m6_307 -> m6_288  [key=2, style=dotted];
m6_307 -> m6_308  [key=0, style=solid];
m6_309 -> m6_321  [key=0, style=solid];
m6_309 -> m6_288  [key=2, style=dotted];
m6_309 -> m6_307  [color=blue, key=0, style=bold];
m6_311 -> m6_321  [key=0, style=solid];
m6_311 -> m6_288  [key=2, style=dotted];
m6_311 -> m6_312  [key=0, style=solid];
m6_320 -> m6_321  [key=0, style=solid];
m6_320 -> m6_322  [key=2, style=dotted];
m6_320 -> m6_311  [color=blue, key=0, style=bold];
m6_298 -> m6_299  [key=0, style=solid];
m6_298 -> m6_300  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_298 -> m6_305  [key=2, style=dotted];
m6_302 -> m6_303  [key=0, style=solid];
m6_302 -> m6_49  [key=2, style=dotted];
m6_304 -> m6_305  [key=0, style=solid];
m6_304 -> m6_297  [color=blue, key=0, style=bold];
m6_306 -> m6_307  [key=0, style=solid];
m6_308 -> m6_309  [key=0, style=solid];
m6_308 -> m6_310  [key=2, style=dotted];
m6_312 -> m6_313  [key=0, style=solid];
m6_312 -> m6_315  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_312 -> m6_314  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_312 -> m6_307  [key=2, style=dotted];
m6_314 -> m6_315  [key=0, style=solid];
m6_314 -> m6_322  [key=2, style=dotted];
m6_314 -> m6_321  [key=2, style=dotted];
m6_316 -> m6_317  [key=0, style=solid];
m6_316 -> m6_42  [key=2, style=dotted];
m6_318 -> m6_319  [key=0, style=solid];
m6_318 -> m6_24  [key=2, style=dotted];
m6_303 -> m6_321  [key=0, style=solid];
m6_303 -> m6_24  [key=2, style=dotted];
m6_303 -> m6_304  [key=0, style=solid];
m6_313 -> m6_321  [key=0, style=solid];
m6_313 -> m6_314  [key=0, style=solid];
m6_315 -> m6_321  [key=0, style=solid];
m6_315 -> m6_317  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_315 -> m6_316  [key=0, style=solid];
m6_315 -> m6_41  [key=2, style=dotted];
m6_317 -> m6_321  [key=0, style=solid];
m6_317 -> m6_318  [key=0, style=solid];
m6_317 -> m6_319  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_317 -> m6_49  [key=2, style=dotted];
m6_319 -> m6_321  [key=0, style=solid];
m6_319 -> m6_24  [key=2, style=dotted];
m6_319 -> m6_320  [key=0, style=solid];
m6_955 -> m6_956  [key=0, style=solid];
m6_958 -> m6_24  [key=2, style=dotted];
m6_958 -> m6_959  [key=0, style=solid];
m6_959 -> m6_24  [key=2, style=dotted];
m6_959 -> m6_960  [key=0, style=solid];
m6_959 -> m6_962  [key=2, style=dotted];
m6_960 -> m6_24  [key=2, style=dotted];
m6_960 -> m6_961  [key=0, style=solid];
m6_957 -> m6_958  [key=0, style=solid];
m6_957 -> m6_959  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_957 -> m6_960  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_957 -> m6_936  [key=2, style=dotted];
m6_956 -> m6_957  [key=0, style=solid];
m6_961 -> m6_955  [color=blue, key=0, style=bold];
m6_1508 -> m6_1509  [key=0, style=solid];
m6_1509 -> m6_1102  [key=2, style=dotted];
m6_1509 -> m6_1510  [key=0, style=solid];
m6_1509 -> m6_1512  [key=2, style=dotted];
m6_1510 -> m6_1511  [key=0, style=solid];
m6_1511 -> m6_1508  [color=blue, key=0, style=bold];
m6_1562 -> m6_1563  [key=0, style=solid];
m6_1564 -> m6_49  [key=2, style=dotted];
m6_1564 -> m6_1565  [key=0, style=solid];
m6_1567 -> m6_22  [key=2, style=dotted];
m6_1567 -> m6_1457  [key=2, style=dotted];
m6_1567 -> m6_1568  [key=0, style=solid];
m6_1565 -> m6_21  [key=2, style=dotted];
m6_1565 -> m6_1566  [key=0, style=solid];
m6_1565 -> m6_1568  [key=0, style=solid];
m6_1563 -> m6_1564  [key=0, style=solid];
m6_1566 -> m6_1567  [key=0, style=solid];
m6_1568 -> m6_1562  [color=blue, key=0, style=bold];
m6_420 -> m6_421  [key=0, style=solid];
m6_420 -> m6_365  [key=2, style=dotted];
m6_1465 -> m6_1466  [key=0, style=solid];
m6_1467 -> m6_49  [key=2, style=dotted];
m6_1467 -> m6_1468  [key=0, style=solid];
m6_1470 -> m6_22  [key=2, style=dotted];
m6_1470 -> m6_1457  [key=2, style=dotted];
m6_1470 -> m6_1471  [key=0, style=solid];
m6_1468 -> m6_21  [key=2, style=dotted];
m6_1468 -> m6_1469  [key=0, style=solid];
m6_1468 -> m6_1471  [key=0, style=solid];
m6_1466 -> m6_1467  [key=0, style=solid];
m6_1469 -> m6_1470  [key=0, style=solid];
m6_1471 -> m6_1465  [color=blue, key=0, style=bold];
m6_1458 -> m6_1459  [key=0, style=solid];
m6_1459 -> m6_60  [key=2, style=dotted];
m6_1459 -> m6_1460  [key=0, style=solid];
m6_1459 -> m6_1461  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1460 -> m6_1458  [color=blue, key=0, style=bold];
m6_2673 -> m6_2674  [key=0, style=solid];
m6_2674 -> m6_702  [key=2, style=dotted];
m6_2674 -> m6_2675  [key=0, style=solid];
m6_2675 -> m6_2673  [color=blue, key=0, style=bold];
m6_255 -> m6_256  [key=0, style=solid];
m6_284 -> m6_285  [key=0, style=solid];
m6_3940 -> m6_3941  [key=0, style=solid];
m6_3941 -> m6_3900  [key=2, style=dotted];
m6_3941 -> m6_3942  [key=0, style=solid];
m6_3942 -> m6_3940  [color=blue, key=0, style=bold];
m6_3286 -> m6_3287  [key=0, style=solid];
m6_3292 -> m6_24  [key=2, style=dotted];
m6_3292 -> m6_3293  [key=0, style=solid];
m6_3287 -> m6_3292  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_3287 -> m6_3288  [key=0, style=solid];
m6_3287 -> m6_3294  [key=2, style=dotted];
m6_3287 -> m6_3289  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_3287 -> m6_3290  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_3291 -> m6_3292  [key=0, style=solid];
m6_3291 -> m6_49  [key=2, style=dotted];
m6_3290 -> m6_129  [key=2, style=dotted];
m6_3290 -> m6_3291  [key=0, style=solid];
m6_3288 -> m6_3289  [key=0, style=solid];
m6_3289 -> m6_3290  [key=0, style=solid];
m6_3293 -> m6_3286  [color=blue, key=0, style=bold];
m6_365 -> m6_19  [key=2, style=dotted];
m6_365 -> m6_366  [key=0, style=solid];
m6_365 -> m6_368  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_1682 -> m6_1683  [key=0, style=solid];
m6_1685 -> m6_24  [key=2, style=dotted];
m6_1685 -> m6_1686  [key=0, style=solid];
m6_1686 -> m6_24  [key=2, style=dotted];
m6_1686 -> m6_1687  [key=0, style=solid];
m6_1686 -> m6_1102  [key=2, style=dotted];
m6_1687 -> m6_24  [key=2, style=dotted];
m6_1687 -> m6_1688  [key=0, style=solid];
m6_1688 -> m6_24  [key=2, style=dotted];
m6_1688 -> m6_1689  [key=0, style=solid];
m6_1689 -> m6_24  [key=2, style=dotted];
m6_1689 -> m6_1690  [key=0, style=solid];
m6_1690 -> m6_24  [key=2, style=dotted];
m6_1690 -> m6_1691  [key=0, style=solid];
m6_1684 -> m6_1685  [key=0, style=solid];
m6_1684 -> m6_1686  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_1684 -> m6_1687  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_1684 -> m6_1688  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_1684 -> m6_1689  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_1684 -> m6_1690  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_1684 -> m6_936  [key=2, style=dotted];
m6_1683 -> m6_1684  [key=0, style=solid];
m6_1691 -> m6_1682  [color=blue, key=0, style=bold];
m6_927 -> m6_928  [key=0, style=solid];
m6_931 -> m6_24  [key=2, style=dotted];
m6_931 -> m6_932  [key=0, style=solid];
m6_932 -> m6_24  [key=2, style=dotted];
m6_932 -> m6_933  [key=0, style=solid];
m6_928 -> m6_931  [color=darkseagreen4, key=1, label=store, style=dashed];
m6_928 -> m6_932  [color=darkseagreen4, key=1, label=store, style=dashed];
m6_928 -> m6_929  [key=0, style=solid];
m6_928 -> m6_935  [key=2, style=dotted];
m6_930 -> m6_931  [key=0, style=solid];
m6_930 -> m6_932  [color=darkseagreen4, key=1, label=deserializedStore, style=dashed];
m6_930 -> m6_936  [key=2, style=dotted];
m6_933 -> m6_934  [key=0, style=solid];
m6_933 -> m6_937  [key=2, style=dotted];
m6_929 -> m6_129  [key=2, style=dotted];
m6_929 -> m6_930  [key=0, style=solid];
m6_929 -> m6_933  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m6_934 -> m6_927  [color=blue, key=0, style=bold];
m6_3495 -> m6_3496  [key=0, style=solid];
m6_3496 -> m6_134  [key=2, style=dotted];
m6_3496 -> m6_3497  [key=0, style=solid];
m6_3496 -> m6_3500  [key=2, style=dotted];
m6_3496 -> m6_3501  [key=2, style=dotted];
m6_3498 -> m6_42  [key=2, style=dotted];
m6_3498 -> m6_3499  [key=0, style=solid];
m6_3497 -> m6_41  [key=2, style=dotted];
m6_3497 -> m6_3498  [key=0, style=solid];
m6_3499 -> m6_3495  [color=blue, key=0, style=bold];
m6_1188 -> m6_1189  [key=0, style=solid];
m6_1196 -> m6_24  [key=2, style=dotted];
m6_1196 -> m6_1197  [key=0, style=solid];
m6_1197 -> m6_24  [key=2, style=dotted];
m6_1197 -> m6_1198  [key=0, style=solid];
m6_1198 -> m6_24  [key=2, style=dotted];
m6_1198 -> m6_1199  [key=0, style=solid];
m6_1199 -> m6_24  [key=2, style=dotted];
m6_1199 -> m6_1200  [key=0, style=solid];
m6_1200 -> m6_24  [key=2, style=dotted];
m6_1200 -> m6_1201  [key=0, style=solid];
m6_1201 -> m6_24  [key=2, style=dotted];
m6_1201 -> m6_1202  [key=0, style=solid];
m6_1202 -> m6_24  [key=2, style=dotted];
m6_1202 -> m6_1203  [key=0, style=solid];
m6_1195 -> m6_1196  [key=0, style=solid];
m6_1195 -> m6_1197  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_1195 -> m6_1198  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_1195 -> m6_1199  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_1195 -> m6_1200  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_1195 -> m6_1201  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_1195 -> m6_1202  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_1195 -> m6_49  [key=2, style=dotted];
m6_1194 -> m6_129  [key=2, style=dotted];
m6_1194 -> m6_1195  [key=0, style=solid];
m6_1191 -> m6_322  [key=2, style=dotted];
m6_1191 -> m6_1192  [key=0, style=solid];
m6_1192 -> m6_322  [key=2, style=dotted];
m6_1192 -> m6_1193  [key=0, style=solid];
m6_1193 -> m6_322  [key=2, style=dotted];
m6_1193 -> m6_1194  [key=0, style=solid];
m6_1189 -> m6_1194  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_1189 -> m6_1191  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_1189 -> m6_1192  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_1189 -> m6_1193  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_1189 -> m6_1190  [key=0, style=solid];
m6_1189 -> m6_1204  [key=2, style=dotted];
m6_1190 -> m6_1191  [key=0, style=solid];
m6_1203 -> m6_1188  [color=blue, key=0, style=bold];
m6_2245 -> m6_2246  [key=0, style=solid];
m6_2260 -> m6_24  [key=2, style=dotted];
m6_2260 -> m6_2261  [key=0, style=solid];
m6_2258 -> m6_24  [key=2, style=dotted];
m6_2258 -> m6_2259  [key=0, style=solid];
m6_2259 -> m6_24  [key=2, style=dotted];
m6_2259 -> m6_2260  [key=0, style=solid];
m6_2261 -> m6_24  [key=2, style=dotted];
m6_2261 -> m6_2262  [key=0, style=solid];
m6_2262 -> m6_24  [key=2, style=dotted];
m6_2262 -> m6_2263  [key=0, style=solid];
m6_2263 -> m6_24  [key=2, style=dotted];
m6_2263 -> m6_2264  [key=0, style=solid];
m6_2251 -> m6_2260  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m6_2251 -> m6_376  [key=2, style=dotted];
m6_2251 -> m6_2252  [key=0, style=solid];
m6_2251 -> m6_1110  [key=2, style=dotted];
m6_2251 -> m6_2254  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m6_2257 -> m6_2260  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_2257 -> m6_2258  [key=0, style=solid];
m6_2257 -> m6_2259  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_2257 -> m6_2261  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_2257 -> m6_2262  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_2257 -> m6_2263  [color=darkseagreen4, key=1, label=o2, style=dashed];
m6_2257 -> m6_49  [key=2, style=dotted];
m6_2247 -> m6_1102  [key=2, style=dotted];
m6_2247 -> m6_2248  [key=0, style=solid];
m6_2250 -> m6_2251  [key=0, style=solid];
m6_2252 -> m6_2253  [key=0, style=solid];
m6_2254 -> m6_2255  [key=0, style=solid];
m6_2254 -> m6_2154  [key=2, style=dotted];
m6_2256 -> m6_2257  [key=0, style=solid];
m6_2256 -> m6_42  [key=2, style=dotted];
m6_2255 -> m6_2257  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2255 -> m6_175  [key=2, style=dotted];
m6_2255 -> m6_198  [key=2, style=dotted];
m6_2255 -> m6_2256  [key=0, style=solid];
m6_2246 -> m6_2247  [key=0, style=solid];
m6_2246 -> m6_2250  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_2246 -> m6_2254  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_2246 -> m6_1512  [key=2, style=dotted];
m6_2246 -> m6_2248  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_2246 -> m6_2249  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_2248 -> m6_2249  [key=0, style=solid];
m6_2249 -> m6_2250  [key=0, style=solid];
m6_2253 -> m6_2254  [key=0, style=solid];
m6_2253 -> m6_2256  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m6_2264 -> m6_2245  [color=blue, key=0, style=bold];
m6_3654 -> m6_3655  [key=0, style=solid];
m6_3656 -> m6_175  [key=2, style=dotted];
m6_3656 -> m6_198  [key=2, style=dotted];
m6_3656 -> m6_3657  [key=0, style=solid];
m6_3657 -> m6_42  [key=2, style=dotted];
m6_3657 -> m6_3658  [key=0, style=solid];
m6_3655 -> m6_3656  [key=0, style=solid];
m6_3655 -> m6_3659  [key=2, style=dotted];
m6_3658 -> m6_3654  [color=blue, key=0, style=bold];
m6_1335 -> m6_1336  [key=0, style=solid];
m6_1341 -> m6_24  [key=2, style=dotted];
m6_1341 -> m6_1342  [key=0, style=solid];
m6_1342 -> m6_24  [key=2, style=dotted];
m6_1342 -> m6_1343  [key=0, style=solid];
m6_1339 -> m6_24  [key=2, style=dotted];
m6_1339 -> m6_1340  [key=0, style=solid];
m6_1336 -> m6_1341  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_1336 -> m6_1342  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_1336 -> m6_1337  [key=0, style=solid];
m6_1336 -> m6_1306  [key=2, style=dotted];
m6_1340 -> m6_1341  [key=0, style=solid];
m6_1340 -> m6_1342  [color=darkseagreen4, key=1, label=m2, style=dashed];
m6_1340 -> m6_1344  [key=2, style=dotted];
m6_1340 -> m6_236  [key=2, style=dotted];
m6_1338 -> m6_1339  [key=0, style=solid];
m6_1338 -> m6_1340  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1338 -> m6_1344  [key=2, style=dotted];
m6_1338 -> m6_1296  [key=2, style=dotted];
m6_1337 -> m6_1338  [key=0, style=solid];
m6_1337 -> m6_1307  [key=2, style=dotted];
m6_1343 -> m6_1335  [color=blue, key=0, style=bold];
m6_3153 -> m6_3154  [key=0, style=solid];
m6_3156 -> m6_24  [key=2, style=dotted];
m6_3156 -> m6_3157  [key=0, style=solid];
m6_3159 -> m6_24  [key=2, style=dotted];
m6_3159 -> m6_3160  [key=0, style=solid];
m6_3159 -> m6_1246  [key=2, style=dotted];
m6_3155 -> m6_3156  [key=0, style=solid];
m6_3155 -> m6_49  [key=2, style=dotted];
m6_3157 -> m6_3158  [key=0, style=solid];
m6_3158 -> m6_3159  [key=0, style=solid];
m6_3158 -> m6_49  [key=2, style=dotted];
m6_3154 -> m6_3155  [key=0, style=solid];
m6_3160 -> m6_3153  [color=blue, key=0, style=bold];
m6_1722 -> m6_1723  [key=0, style=solid];
m6_1725 -> m6_24  [key=2, style=dotted];
m6_1725 -> m6_1726  [key=0, style=solid];
m6_1726 -> m6_24  [key=2, style=dotted];
m6_1726 -> m6_1727  [key=0, style=solid];
m6_1727 -> m6_24  [key=2, style=dotted];
m6_1727 -> m6_1728  [key=0, style=solid];
m6_1728 -> m6_24  [key=2, style=dotted];
m6_1728 -> m6_1729  [key=0, style=solid];
m6_1724 -> m6_1725  [key=0, style=solid];
m6_1724 -> m6_1726  [color=darkseagreen4, key=1, label=content, style=dashed];
m6_1724 -> m6_1727  [color=darkseagreen4, key=1, label=content, style=dashed];
m6_1724 -> m6_1728  [color=darkseagreen4, key=1, label=content, style=dashed];
m6_1724 -> m6_49  [key=2, style=dotted];
m6_1723 -> m6_1724  [key=0, style=solid];
m6_1729 -> m6_1722  [color=blue, key=0, style=bold];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_136  [color=blue, key=0, style=bold];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_136  [key=2, style=dotted];
m6_139 -> m6_141  [key=2, style=dotted];
m6_140 -> m6_138  [color=blue, key=0, style=bold];
m6_140 -> m6_49  [key=2, style=dotted];
m6_140 -> m6_141  [key=0, style=solid];
m6_1994 -> m6_1995  [key=0, style=solid];
m6_329 -> m6_330  [key=0, style=solid];
m6_329 -> m6_42  [key=2, style=dotted];
m6_330 -> m6_331  [key=0, style=solid];
m6_330 -> m6_332  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_330 -> m6_49  [key=2, style=dotted];
m6_331 -> m6_329  [color=blue, key=0, style=bold];
m6_331 -> m6_24  [key=2, style=dotted];
m6_331 -> m6_332  [key=0, style=solid];
m6_3543 -> m6_19  [key=2, style=dotted];
m6_3543 -> m6_3544  [key=0, style=solid];
m6_3543 -> m6_3548  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_3542 -> m6_3543  [key=0, style=solid];
m6_3542 -> m6_3545  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3544 -> m6_3545  [key=0, style=solid];
m6_3548 -> m6_3549  [key=0, style=solid];
m6_3548 -> m6_2524  [key=2, style=dotted];
m6_3631 -> m6_3627  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_3631 -> m6_3632  [key=0, style=solid];
m6_3631 -> m6_49  [key=2, style=dotted];
m6_3529 -> m6_16  [key=2, style=dotted];
m6_3529 -> m6_373  [key=2, style=dotted];
m6_3529 -> m6_20  [key=2, style=dotted];
m6_3529 -> m6_3530  [key=0, style=solid];
m6_3545 -> m6_16  [key=2, style=dotted];
m6_3545 -> m6_373  [key=2, style=dotted];
m6_3545 -> m6_3548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_3545 -> m6_3546  [key=0, style=solid];
m6_3545 -> m6_3547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_3541 -> m6_3542  [key=0, style=solid];
m6_3547 -> m6_3548  [key=0, style=solid];
m6_3547 -> m6_18  [key=2, style=dotted];
m6_3549 -> m6_3541  [color=blue, key=0, style=bold];
m6_3852 -> m6_542  [key=2, style=dotted];
m6_3852 -> m6_3853  [key=0, style=solid];
m6_252 -> m6_253  [key=0, style=solid];
m6_252 -> m6_260  [key=2, style=dotted];
m6_349 -> m6_350  [key=0, style=solid];
m6_181 -> m6_129  [key=2, style=dotted];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_183  [key=2, style=dotted];
m6_250 -> m6_129  [key=2, style=dotted];
m6_250 -> m6_251  [key=0, style=solid];
m6_250 -> m6_259  [key=2, style=dotted];
m6_1057 -> m6_129  [key=2, style=dotted];
m6_1057 -> m6_1058  [key=0, style=solid];
m6_1057 -> m6_1059  [key=2, style=dotted];
m6_1369 -> m6_129  [key=2, style=dotted];
m6_1369 -> m6_1370  [key=0, style=solid];
m6_1463 -> m6_129  [key=2, style=dotted];
m6_1463 -> m6_1464  [key=0, style=solid];
m6_4099 -> m6_129  [key=2, style=dotted];
m6_4099 -> m6_4100  [key=0, style=solid];
m6_4099 -> m6_4101  [key=2, style=dotted];
m6_610 -> m6_611  [key=0, style=solid];
m6_610 -> m6_613  [color=darkseagreen4, key=1, label=finishedAttributes, style=dashed];
m6_921 -> m6_922  [key=0, style=solid];
m6_924 -> m6_925  [key=0, style=solid];
m6_1462 -> m6_1102  [key=2, style=dotted];
m6_1462 -> m6_1463  [key=0, style=solid];
m6_1462 -> m6_1442  [key=2, style=dotted];
m6_3371 -> m6_322  [key=2, style=dotted];
m6_3371 -> m6_3372  [key=0, style=solid];
m6_3386 -> m6_322  [key=2, style=dotted];
m6_3386 -> m6_3387  [key=0, style=solid];
m6_3401 -> m6_322  [key=2, style=dotted];
m6_3401 -> m6_3402  [key=0, style=solid];
m6_3630 -> m6_3631  [key=0, style=solid];
m6_3632 -> m6_3630  [color=blue, key=0, style=bold];
m6_3728 -> m6_3729  [key=0, style=solid];
m6_3546 -> m6_18  [key=2, style=dotted];
m6_3546 -> m6_3547  [key=0, style=solid];
m6_3528 -> m6_3529  [key=0, style=solid];
m6_3530 -> m6_3528  [color=blue, key=0, style=bold];
m6_1863 -> m6_1865  [key=2, style=dotted];
m6_1863 -> m6_175  [key=2, style=dotted];
m6_1863 -> m6_176  [key=2, style=dotted];
m6_1863 -> m6_1864  [key=0, style=solid];
m6_1863 -> m6_834  [key=2, style=dotted];
m6_1870 -> m6_1865  [key=2, style=dotted];
m6_1870 -> m6_175  [key=2, style=dotted];
m6_1870 -> m6_296  [key=2, style=dotted];
m6_1870 -> m6_1871  [key=0, style=solid];
m6_1876 -> m6_1865  [key=2, style=dotted];
m6_1876 -> m6_175  [key=2, style=dotted];
m6_1876 -> m6_296  [key=2, style=dotted];
m6_1876 -> m6_1877  [key=0, style=solid];
m6_1882 -> m6_1865  [key=2, style=dotted];
m6_1882 -> m6_175  [key=2, style=dotted];
m6_1882 -> m6_296  [key=2, style=dotted];
m6_1882 -> m6_1883  [key=0, style=solid];
m6_4126 -> m6_236  [key=2, style=dotted];
m6_4126 -> m6_4127  [key=0, style=solid];
m6_4126 -> m6_4128  [key=2, style=dotted];
m6_4126 -> m6_4129  [key=2, style=dotted];
m6_4126 -> m6_4130  [key=2, style=dotted];
m6_3851 -> m6_3852  [key=0, style=solid];
m6_3853 -> m6_3851  [color=blue, key=0, style=bold];
m6_62 -> m6_49  [key=2, style=dotted];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_64  [key=2, style=dotted];
m6_68 -> m6_49  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_74 -> m6_49  [key=2, style=dotted];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_72  [color=blue, key=0, style=bold];
m6_157 -> m6_49  [key=2, style=dotted];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_128  [key=2, style=dotted];
m6_157 -> m6_159  [key=2, style=dotted];
m6_209 -> m6_49  [key=2, style=dotted];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_211  [key=0, style=solid];
m6_212 -> m6_49  [key=2, style=dotted];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_218  [key=0, style=solid];
m6_212 -> m6_195  [key=2, style=dotted];
m6_215 -> m6_49  [key=2, style=dotted];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_217  [key=0, style=solid];
m6_218 -> m6_49  [key=2, style=dotted];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_200  [color=blue, key=0, style=bold];
m6_227 -> m6_49  [key=2, style=dotted];
m6_227 -> m6_228  [key=0, style=solid];
m6_253 -> m6_49  [key=2, style=dotted];
m6_253 -> m6_254  [key=0, style=solid];
m6_253 -> m6_244  [color=blue, key=0, style=bold];
m6_444 -> m6_49  [key=2, style=dotted];
m6_444 -> m6_445  [key=0, style=solid];
m6_444 -> m6_451  [key=2, style=dotted];
m6_1065 -> m6_49  [key=2, style=dotted];
m6_1065 -> m6_1066  [key=0, style=solid];
m6_1754 -> m6_49  [key=2, style=dotted];
m6_1754 -> m6_1755  [key=0, style=solid];
m6_1781 -> m6_49  [key=2, style=dotted];
m6_1781 -> m6_1782  [key=0, style=solid];
m6_1788 -> m6_49  [key=2, style=dotted];
m6_1788 -> m6_1789  [key=0, style=solid];
m6_1795 -> m6_49  [key=2, style=dotted];
m6_1795 -> m6_1796  [key=0, style=solid];
m6_1802 -> m6_49  [key=2, style=dotted];
m6_1802 -> m6_1803  [key=0, style=solid];
m6_1809 -> m6_49  [key=2, style=dotted];
m6_1809 -> m6_1810  [key=0, style=solid];
m6_1816 -> m6_49  [key=2, style=dotted];
m6_1816 -> m6_1817  [key=0, style=solid];
m6_1823 -> m6_49  [key=2, style=dotted];
m6_1823 -> m6_1824  [key=0, style=solid];
m6_1830 -> m6_49  [key=2, style=dotted];
m6_1830 -> m6_1831  [key=0, style=solid];
m6_2424 -> m6_49  [key=2, style=dotted];
m6_2424 -> m6_2425  [key=0, style=solid];
m6_2438 -> m6_49  [key=2, style=dotted];
m6_2438 -> m6_2439  [key=0, style=solid];
m6_2540 -> m6_49  [key=2, style=dotted];
m6_2540 -> m6_2541  [key=0, style=solid];
m6_3109 -> m6_49  [key=2, style=dotted];
m6_3109 -> m6_3110  [key=0, style=solid];
m6_3123 -> m6_49  [key=2, style=dotted];
m6_3123 -> m6_3124  [key=0, style=solid];
m6_3144 -> m6_49  [key=2, style=dotted];
m6_3144 -> m6_3145  [key=0, style=solid];
m6_3151 -> m6_49  [key=2, style=dotted];
m6_3151 -> m6_3152  [key=0, style=solid];
m6_3224 -> m6_49  [key=2, style=dotted];
m6_3224 -> m6_3225  [key=0, style=solid];
m6_3230 -> m6_49  [key=2, style=dotted];
m6_3230 -> m6_3231  [key=0, style=solid];
m6_3236 -> m6_49  [key=2, style=dotted];
m6_3236 -> m6_3237  [key=0, style=solid];
m6_3246 -> m6_49  [key=2, style=dotted];
m6_3246 -> m6_3247  [key=0, style=solid];
m6_3712 -> m6_49  [key=2, style=dotted];
m6_3712 -> m6_3713  [key=0, style=solid];
m6_3720 -> m6_49  [key=2, style=dotted];
m6_3720 -> m6_3721  [key=0, style=solid];
m6_3729 -> m6_49  [key=2, style=dotted];
m6_3729 -> m6_3730  [key=0, style=solid];
m6_4106 -> m6_49  [key=2, style=dotted];
m6_4106 -> m6_4107  [key=0, style=solid];
m6_1615 -> m6_175  [key=2, style=dotted];
m6_1615 -> m6_198  [key=2, style=dotted];
m6_1615 -> m6_1616  [key=0, style=solid];
m6_2031 -> m6_175  [key=2, style=dotted];
m6_2031 -> m6_296  [key=2, style=dotted];
m6_2031 -> m6_2032  [key=0, style=solid];
m6_3085 -> m6_175  [key=2, style=dotted];
m6_3085 -> m6_296  [key=2, style=dotted];
m6_3085 -> m6_3086  [key=0, style=solid];
m6_254 -> m6_252  [color=blue, key=0, style=bold];
m6_254 -> m6_261  [key=0, style=solid];
m6_254 -> m6_262  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_254 -> m6_263  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_254 -> m6_264  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_348 -> m6_349  [key=0, style=solid];
m6_348 -> m6_350  [key=0, style=solid];
m6_348 -> m6_323  [key=2, style=dotted];
m6_350 -> m6_348  [color=blue, key=0, style=bold];
m6_350 -> m6_351  [key=0, style=solid];
m6_350 -> m6_352  [key=0, style=solid];
m6_1852 -> m6_134  [key=2, style=dotted];
m6_1852 -> m6_1853  [key=0, style=solid];
m6_1852 -> m6_1846  [key=2, style=dotted];
m6_167 -> m6_168  [key=0, style=solid];
m6_167 -> m6_165  [color=blue, key=0, style=bold];
m6_169 -> m6_167  [color=blue, key=0, style=bold];
m6_180 -> m6_181  [key=0, style=solid];
m6_182 -> m6_180  [color=blue, key=0, style=bold];
m6_182 -> m6_183  [key=0, style=solid];
m6_182 -> m6_174  [key=2, style=dotted];
m6_249 -> m6_250  [key=0, style=solid];
m6_249 -> m6_258  [key=2, style=dotted];
m6_251 -> m6_249  [color=blue, key=0, style=bold];
m6_251 -> m6_252  [key=0, style=solid];
m6_251 -> m6_253  [key=0, style=solid];
m6_1056 -> m6_1057  [key=0, style=solid];
m6_1058 -> m6_1056  [color=blue, key=0, style=bold];
m6_1368 -> m6_1369  [key=0, style=solid];
m6_1368 -> m6_1371  [key=2, style=dotted];
m6_1370 -> m6_1367  [color=blue, key=0, style=bold];
m6_1464 -> m6_1461  [color=blue, key=0, style=bold];
m6_1506 -> m6_936  [key=2, style=dotted];
m6_1506 -> m6_1507  [key=0, style=solid];
m6_4098 -> m6_4099  [key=0, style=solid];
m6_4100 -> m6_4098  [color=blue, key=0, style=bold];
m6_3252 -> m6_465  [key=2, style=dotted];
m6_3252 -> m6_3253  [key=0, style=solid];
m6_609 -> m6_610  [key=0, style=solid];
m6_609 -> m6_362  [key=2, style=dotted];
m6_609 -> m6_625  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m6_609 -> m6_639  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m6_609 -> m6_641  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m6_609 -> m6_647  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m6_611 -> m6_609  [color=blue, key=0, style=bold];
m6_611 -> m6_612  [key=0, style=solid];
m6_611 -> m6_613  [color=darkseagreen4, key=1, label=finishedElement, style=dashed];
m6_923 -> m6_921  [color=blue, key=0, style=bold];
m6_922 -> m6_923  [key=0, style=solid];
m6_926 -> m6_924  [color=blue, key=0, style=bold];
m6_925 -> m6_926  [key=0, style=solid];
m6_2756 -> m6_936  [key=2, style=dotted];
m6_2756 -> m6_2757  [key=0, style=solid];
m6_2430 -> m6_196  [key=2, style=dotted];
m6_2430 -> m6_2431  [key=0, style=solid];
m6_2430 -> m6_2432  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_2430 -> m6_2436  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_2433 -> m6_196  [key=2, style=dotted];
m6_2433 -> m6_2434  [key=0, style=solid];
m6_2433 -> m6_2435  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2433 -> m6_2436  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2433 -> m6_2437  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_1461 -> m6_1462  [key=0, style=solid];
m6_2437 -> m6_41  [key=2, style=dotted];
m6_2437 -> m6_2438  [key=0, style=solid];
m6_2539 -> m6_2540  [key=0, style=solid];
m6_3372 -> m6_3373  [key=0, style=solid];
m6_3370 -> m6_3371  [key=0, style=solid];
m6_3370 -> m6_3372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3387 -> m6_3388  [key=0, style=solid];
m6_3385 -> m6_3386  [key=0, style=solid];
m6_3385 -> m6_3387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3402 -> m6_3403  [key=0, style=solid];
m6_3400 -> m6_3401  [key=0, style=solid];
m6_3400 -> m6_3402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3730 -> m6_3728  [color=blue, key=0, style=bold];
m6_1862 -> m6_1863  [key=0, style=solid];
m6_1864 -> m6_1862  [color=blue, key=0, style=bold];
m6_1869 -> m6_1870  [key=0, style=solid];
m6_1871 -> m6_1869  [color=blue, key=0, style=bold];
m6_1875 -> m6_1876  [key=0, style=solid];
m6_1877 -> m6_1875  [color=blue, key=0, style=bold];
m6_1881 -> m6_1882  [key=0, style=solid];
m6_1883 -> m6_1881  [color=blue, key=0, style=bold];
m6_4125 -> m6_4126  [key=0, style=solid];
m6_4127 -> m6_4125  [color=blue, key=0, style=bold];
m6_61 -> m6_62  [key=0, style=solid];
m6_63 -> m6_61  [color=blue, key=0, style=bold];
m6_63 -> m6_60  [color=blue, key=0, style=bold];
m6_73 -> m6_74  [key=0, style=solid];
m6_75 -> m6_73  [color=blue, key=0, style=bold];
m6_75 -> m6_76  [key=0, style=solid];
m6_141 -> m6_139  [color=blue, key=0, style=bold];
m6_145 -> m6_146  [key=0, style=solid];
m6_156 -> m6_157  [key=0, style=solid];
m6_158 -> m6_156  [color=blue, key=0, style=bold];
m6_208 -> m6_209  [key=0, style=solid];
m6_208 -> m6_218  [key=0, style=solid];
m6_208 -> m6_163  [key=2, style=dotted];
m6_210 -> m6_208  [color=blue, key=0, style=bold];
m6_210 -> m6_218  [key=0, style=solid];
m6_210 -> m6_193  [key=2, style=dotted];
m6_211 -> m6_212  [key=0, style=solid];
m6_211 -> m6_213  [key=0, style=solid];
m6_213 -> m6_211  [color=blue, key=0, style=bold];
m6_213 -> m6_214  [key=0, style=solid];
m6_213 -> m6_215  [key=0, style=solid];
m6_214 -> m6_215  [key=0, style=solid];
m6_214 -> m6_218  [key=0, style=solid];
m6_214 -> m6_179  [key=2, style=dotted];
m6_216 -> m6_214  [color=blue, key=0, style=bold];
m6_216 -> m6_218  [key=0, style=solid];
m6_216 -> m6_128  [key=2, style=dotted];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_219  [key=2, style=dotted];
m6_219 -> m6_217  [color=blue, key=0, style=bold];
m6_219 -> m6_225  [key=0, style=solid];
m6_225 -> m6_223  [color=blue, key=0, style=bold];
m6_225 -> m6_226  [key=0, style=solid];
m6_226 -> m6_227  [key=0, style=solid];
m6_226 -> m6_219  [color=blue, key=0, style=bold];
m6_228 -> m6_226  [color=blue, key=0, style=bold];
m6_228 -> m6_229  [key=0, style=solid];
m6_228 -> m6_230  [key=2, style=dotted];
m6_443 -> m6_444  [key=0, style=solid];
m6_443 -> m6_365  [key=2, style=dotted];
m6_445 -> m6_443  [color=blue, key=0, style=bold];
m6_445 -> m6_447  [key=0, style=solid];
m6_445 -> m6_260  [key=2, style=dotted];
m6_1064 -> m6_1065  [key=0, style=solid];
m6_1066 -> m6_1064  [color=blue, key=0, style=bold];
m6_1753 -> m6_1754  [key=0, style=solid];
m6_1755 -> m6_1753  [color=blue, key=0, style=bold];
m6_1780 -> m6_1781  [key=0, style=solid];
m6_1782 -> m6_1780  [color=blue, key=0, style=bold];
m6_1787 -> m6_1788  [key=0, style=solid];
m6_1789 -> m6_1787  [color=blue, key=0, style=bold];
m6_1794 -> m6_1795  [key=0, style=solid];
m6_1796 -> m6_1794  [color=blue, key=0, style=bold];
m6_1801 -> m6_1802  [key=0, style=solid];
m6_1803 -> m6_1801  [color=blue, key=0, style=bold];
m6_1808 -> m6_1809  [key=0, style=solid];
m6_1810 -> m6_1808  [color=blue, key=0, style=bold];
m6_1815 -> m6_1816  [key=0, style=solid];
m6_1817 -> m6_1815  [color=blue, key=0, style=bold];
m6_1822 -> m6_1823  [key=0, style=solid];
m6_1824 -> m6_1822  [color=blue, key=0, style=bold];
m6_1829 -> m6_1830  [key=0, style=solid];
m6_1831 -> m6_1829  [color=blue, key=0, style=bold];
m6_2423 -> m6_2424  [key=0, style=solid];
m6_2425 -> m6_2423  [color=blue, key=0, style=bold];
m6_2439 -> m6_2429  [color=blue, key=0, style=bold];
m6_2541 -> m6_2539  [color=blue, key=0, style=bold];
m6_3108 -> m6_3109  [key=0, style=solid];
m6_3110 -> m6_3108  [color=blue, key=0, style=bold];
m6_3122 -> m6_3123  [key=0, style=solid];
m6_3124 -> m6_3122  [color=blue, key=0, style=bold];
m6_3143 -> m6_3144  [key=0, style=solid];
m6_3145 -> m6_3142  [color=blue, key=0, style=bold];
m6_3150 -> m6_3151  [key=0, style=solid];
m6_3152 -> m6_3149  [color=blue, key=0, style=bold];
m6_3223 -> m6_3224  [key=0, style=solid];
m6_3225 -> m6_3223  [color=blue, key=0, style=bold];
m6_3229 -> m6_3230  [key=0, style=solid];
m6_3231 -> m6_3229  [color=blue, key=0, style=bold];
m6_3235 -> m6_3236  [key=0, style=solid];
m6_3237 -> m6_3235  [color=blue, key=0, style=bold];
m6_3245 -> m6_3246  [key=0, style=solid];
m6_3247 -> m6_3245  [color=blue, key=0, style=bold];
m6_3711 -> m6_3712  [key=0, style=solid];
m6_3713 -> m6_3711  [color=blue, key=0, style=bold];
m6_3719 -> m6_3720  [key=0, style=solid];
m6_3721 -> m6_3719  [color=blue, key=0, style=bold];
m6_4105 -> m6_4106  [key=0, style=solid];
m6_4107 -> m6_4105  [color=blue, key=0, style=bold];
m6_1613 -> m6_1615  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1613 -> m6_1614  [key=0, style=solid];
m6_1613 -> m6_1599  [key=2, style=dotted];
m6_1614 -> m6_1615  [key=0, style=solid];
m6_1616 -> m6_1612  [color=blue, key=0, style=bold];
m6_2030 -> m6_2031  [key=0, style=solid];
m6_2032 -> m6_2030  [color=blue, key=0, style=bold];
m6_3084 -> m6_3085  [key=0, style=solid];
m6_3086 -> m6_3084  [color=blue, key=0, style=bold];
m6_1367 -> m6_1368  [key=0, style=solid];
m6_1505 -> m6_1506  [key=0, style=solid];
m6_1612 -> m6_1613  [key=0, style=solid];
m6_1843 -> m6_1844  [key=0, style=solid];
m6_1851 -> m6_1852  [key=0, style=solid];
m6_2429 -> m6_2430  [key=0, style=solid];
m6_2755 -> m6_2756  [key=0, style=solid];
m6_3142 -> m6_3143  [key=0, style=solid];
m6_3149 -> m6_3150  [key=0, style=solid];
m6_3251 -> m6_3252  [key=0, style=solid];
m6_1853 -> m6_1851  [color=blue, key=0, style=bold];
m6_1507 -> m6_1505  [color=blue, key=0, style=bold];
m6_3253 -> m6_3251  [color=blue, key=0, style=bold];
m6_2757 -> m6_2755  [color=blue, key=0, style=bold];
m6_2431 -> m6_832  [key=2, style=dotted];
m6_2431 -> m6_2432  [key=0, style=solid];
m6_2432 -> m6_832  [key=2, style=dotted];
m6_2432 -> m6_2433  [key=0, style=solid];
m6_2436 -> m6_832  [key=2, style=dotted];
m6_2436 -> m6_2437  [key=0, style=solid];
m6_2434 -> m6_832  [key=2, style=dotted];
m6_2434 -> m6_2435  [key=0, style=solid];
m6_2435 -> m6_832  [key=2, style=dotted];
m6_2435 -> m6_2436  [key=0, style=solid];
m6_1844 -> m6_1512  [key=2, style=dotted];
m6_1844 -> m6_1846  [key=2, style=dotted];
m6_1844 -> m6_1845  [key=0, style=solid];
m6_3373 -> m6_3370  [color=blue, key=0, style=bold];
m6_3388 -> m6_3385  [color=blue, key=0, style=bold];
m6_3403 -> m6_3400  [color=blue, key=0, style=bold];
m6_1845 -> m6_1843  [color=blue, key=0, style=bold];
m6_1995 -> m6_1996  [key=0, style=solid];
m6_1996 -> m6_1994  [color=blue, key=0, style=bold];
m6_375 -> m6_376  [key=0, style=solid];
m6_375 -> m6_286  [key=2, style=dotted];
m6_3594 -> m6_3595  [key=0, style=solid];
m6_3600 -> m6_24  [key=2, style=dotted];
m6_3600 -> m6_3601  [key=0, style=solid];
m6_3599 -> m6_3600  [key=0, style=solid];
m6_3599 -> m6_175  [key=2, style=dotted];
m6_3599 -> m6_176  [key=2, style=dotted];
m6_3597 -> m6_129  [key=2, style=dotted];
m6_3597 -> m6_3598  [key=0, style=solid];
m6_3596 -> m6_3599  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_3596 -> m6_134  [key=2, style=dotted];
m6_3596 -> m6_3597  [key=0, style=solid];
m6_3596 -> m6_3598  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_3598 -> m6_3599  [key=0, style=solid];
m6_3598 -> m6_175  [key=2, style=dotted];
m6_3598 -> m6_176  [key=2, style=dotted];
m6_3595 -> m6_3596  [key=0, style=solid];
m6_3601 -> m6_3594  [color=blue, key=0, style=bold];
m6_3959 -> m6_3960  [key=0, style=solid];
m6_3964 -> m6_24  [key=2, style=dotted];
m6_3964 -> m6_3965  [key=0, style=solid];
m6_3960 -> m6_3964  [color=darkseagreen4, key=1, label=originalUri, style=dashed];
m6_3960 -> m6_3961  [key=0, style=solid];
m6_3963 -> m6_3964  [key=0, style=solid];
m6_3963 -> m6_49  [key=2, style=dotted];
m6_3962 -> m6_129  [key=2, style=dotted];
m6_3962 -> m6_3963  [key=0, style=solid];
m6_3961 -> m6_1708  [key=2, style=dotted];
m6_3961 -> m6_3962  [key=0, style=solid];
m6_3965 -> m6_3959  [color=blue, key=0, style=bold];
m6_3716 -> m6_3717  [key=0, style=solid];
m6_3717 -> m6_60  [key=2, style=dotted];
m6_3717 -> m6_3718  [key=0, style=solid];
m6_3717 -> m6_3719  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3718 -> m6_3716  [color=blue, key=0, style=bold];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_24  [key=2, style=dotted];
m6_124 -> m6_123  [color=blue, key=0, style=bold];
m6_124 -> m6_24  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_235 -> m6_236  [key=0, style=solid];
m6_235 -> m6_224  [key=2, style=dotted];
m6_430 -> m6_431  [key=0, style=solid];
m6_430 -> m6_433  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m6_430 -> m6_435  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m6_430 -> m6_436  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m6_430 -> m6_438  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m6_430 -> m6_439  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m6_430 -> m6_441  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m6_430 -> m6_442  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m6_430 -> m6_444  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m6_29 -> m6_30  [key=0, style=solid];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_32  [key=2, style=dotted];
m6_30 -> m6_33  [key=2, style=dotted];
m6_30 -> m6_25  [key=2, style=dotted];
m6_31 -> m6_29  [color=blue, key=0, style=bold];
m6_1872 -> m6_1873  [key=0, style=solid];
m6_1873 -> m6_60  [key=2, style=dotted];
m6_1873 -> m6_1874  [key=0, style=solid];
m6_1873 -> m6_1875  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1874 -> m6_1872  [color=blue, key=0, style=bold];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_42  [key=2, style=dotted];
m6_122 -> m6_121  [color=blue, key=0, style=bold];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_124  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m6_122 -> m6_125  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m6_122 -> m6_126  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m6_122 -> m6_49  [key=2, style=dotted];
m6_343 -> m6_344  [key=0, style=solid];
m6_343 -> m6_335  [key=0, style=solid];
m6_343 -> m6_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_346 -> m6_24  [key=2, style=dotted];
m6_346 -> m6_347  [key=0, style=solid];
m6_345 -> m6_346  [key=0, style=solid];
m6_345 -> m6_175  [key=2, style=dotted];
m6_345 -> m6_296  [key=2, style=dotted];
m6_345 -> m6_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_345 -> m6_345  [color=darkseagreen4, key=1, label=nodeNameGroup, style=dashed];
m6_345 -> m6_347  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m6_345 -> m6_348  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m6_345 -> m6_351  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m6_345 -> m6_352  [color=darkseagreen4, key=1, label=nodeNameGroup, style=dashed];
m6_345 -> m6_357  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m6_345 -> m6_358  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m6_344 -> m6_345  [key=0, style=solid];
m6_344 -> m6_361  [key=0, style=solid];
m6_347 -> m6_343  [color=blue, key=0, style=bold];
m6_347 -> m6_348  [key=0, style=solid];
m6_347 -> m6_349  [key=0, style=solid];
m6_1345 -> m6_1346  [key=0, style=solid];
m6_1349 -> m6_42  [key=2, style=dotted];
m6_1349 -> m6_1350  [key=0, style=solid];
m6_1348 -> m6_41  [key=2, style=dotted];
m6_1348 -> m6_1349  [key=0, style=solid];
m6_1347 -> m6_1307  [key=2, style=dotted];
m6_1347 -> m6_1348  [key=0, style=solid];
m6_1346 -> m6_1347  [key=0, style=solid];
m6_1346 -> m6_1351  [key=2, style=dotted];
m6_1346 -> m6_1352  [key=2, style=dotted];
m6_1350 -> m6_1345  [color=blue, key=0, style=bold];
m6_351 -> m6_352  [key=0, style=solid];
m6_351 -> m6_344  [key=0, style=solid];
m6_351 -> m6_259  [key=2, style=dotted];
m6_353 -> m6_24  [key=2, style=dotted];
m6_353 -> m6_354  [key=0, style=solid];
m6_353 -> m6_355  [key=0, style=solid];
m6_354 -> m6_24  [key=2, style=dotted];
m6_354 -> m6_355  [key=0, style=solid];
m6_354 -> m6_365  [key=2, style=dotted];
m6_355 -> m6_24  [key=2, style=dotted];
m6_355 -> m6_356  [key=0, style=solid];
m6_355 -> m6_366  [key=2, style=dotted];
m6_352 -> m6_353  [key=0, style=solid];
m6_352 -> m6_354  [color=darkseagreen4, key=1, label=elementNames, style=dashed];
m6_352 -> m6_355  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_352 -> m6_49  [key=2, style=dotted];
m6_352 -> m6_352  [color=darkseagreen4, key=1, label=nodeNameGroup, style=dashed];
m6_356 -> m6_351  [color=blue, key=0, style=bold];
m6_356 -> m6_357  [key=0, style=solid];
m6_356 -> m6_358  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_356 -> m6_359  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_1949 -> m6_1950  [key=0, style=solid];
m6_1957 -> m6_24  [key=2, style=dotted];
m6_1957 -> m6_1958  [key=0, style=solid];
m6_1958 -> m6_24  [key=2, style=dotted];
m6_1958 -> m6_1959  [key=0, style=solid];
m6_1959 -> m6_24  [key=2, style=dotted];
m6_1959 -> m6_1960  [key=0, style=solid];
m6_1953 -> m6_1957  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m6_1953 -> m6_1958  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m6_1953 -> m6_1959  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m6_1953 -> m6_1954  [key=0, style=solid];
m6_1953 -> m6_134  [key=2, style=dotted];
m6_1953 -> m6_1956  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m6_1954 -> m6_1957  [key=0, style=solid];
m6_1954 -> m6_1955  [key=0, style=solid];
m6_1952 -> m6_1041  [key=2, style=dotted];
m6_1952 -> m6_1953  [key=0, style=solid];
m6_1952 -> m6_1954  [color=darkseagreen4, key=1, label=results, style=dashed];
m6_1952 -> m6_430  [key=2, style=dotted];
m6_1956 -> m6_1954  [key=0, style=solid];
m6_1956 -> m6_322  [key=2, style=dotted];
m6_1955 -> m6_49  [key=2, style=dotted];
m6_1955 -> m6_770  [key=2, style=dotted];
m6_1955 -> m6_1956  [key=0, style=solid];
m6_1951 -> m6_467  [key=2, style=dotted];
m6_1951 -> m6_1952  [key=0, style=solid];
m6_1950 -> m6_1951  [key=0, style=solid];
m6_1960 -> m6_1949  [color=blue, key=0, style=bold];
m6_2269 -> m6_2270  [key=0, style=solid];
m6_2271 -> m6_24  [key=2, style=dotted];
m6_2271 -> m6_2272  [key=0, style=solid];
m6_2272 -> m6_24  [key=2, style=dotted];
m6_2272 -> m6_2273  [key=0, style=solid];
m6_2273 -> m6_24  [key=2, style=dotted];
m6_2273 -> m6_2274  [key=0, style=solid];
m6_2274 -> m6_24  [key=2, style=dotted];
m6_2274 -> m6_2275  [key=0, style=solid];
m6_2275 -> m6_24  [key=2, style=dotted];
m6_2275 -> m6_2276  [key=0, style=solid];
m6_2270 -> m6_2271  [key=0, style=solid];
m6_2270 -> m6_2272  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m6_2270 -> m6_2273  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m6_2270 -> m6_2274  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m6_2270 -> m6_2275  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m6_2270 -> m6_49  [key=2, style=dotted];
m6_2276 -> m6_2269  [color=blue, key=0, style=bold];
m6_3574 -> m6_3575  [key=0, style=solid];
m6_3576 -> m6_24  [key=2, style=dotted];
m6_3576 -> m6_3577  [key=0, style=solid];
m6_3575 -> m6_3576  [key=0, style=solid];
m6_3575 -> m6_49  [key=2, style=dotted];
m6_3577 -> m6_3574  [color=blue, key=0, style=bold];
m6_230 -> m6_231  [key=0, style=solid];
m6_230 -> m6_49  [key=2, style=dotted];
m6_1497 -> m6_1498  [key=0, style=solid];
m6_1500 -> m6_129  [key=2, style=dotted];
m6_1500 -> m6_1501  [key=0, style=solid];
m6_1500 -> m6_1506  [color=darkseagreen4, key=1, label=strFromTest, style=dashed];
m6_1501 -> m6_60  [key=2, style=dotted];
m6_1501 -> m6_1502  [key=0, style=solid];
m6_1501 -> m6_1505  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1498 -> m6_1500  [color=darkseagreen4, key=1, label=testClass, style=dashed];
m6_1498 -> m6_1499  [key=0, style=solid];
m6_1498 -> m6_1503  [key=2, style=dotted];
m6_1499 -> m6_1500  [key=0, style=solid];
m6_1499 -> m6_1504  [key=2, style=dotted];
m6_1502 -> m6_1497  [color=blue, key=0, style=bold];
m6_813 -> m6_814  [key=0, style=solid];
m6_827 -> m6_840  [key=2, style=dotted];
m6_827 -> m6_17  [key=2, style=dotted];
m6_827 -> m6_828  [key=0, style=solid];
m6_823 -> m6_836  [key=2, style=dotted];
m6_823 -> m6_824  [key=0, style=solid];
m6_819 -> m6_175  [key=2, style=dotted];
m6_819 -> m6_820  [key=0, style=solid];
m6_814 -> m6_196  [key=2, style=dotted];
m6_814 -> m6_823  [color=darkseagreen4, key=1, label=dictStore, style=dashed];
m6_814 -> m6_815  [key=0, style=solid];
m6_814 -> m6_817  [color=darkseagreen4, key=1, label=dictStore, style=dashed];
m6_820 -> m6_827  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m6_820 -> m6_823  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m6_820 -> m6_833  [key=2, style=dotted];
m6_820 -> m6_821  [key=0, style=solid];
m6_821 -> m6_827  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_821 -> m6_834  [key=2, style=dotted];
m6_821 -> m6_822  [key=0, style=solid];
m6_821 -> m6_825  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_826 -> m6_827  [key=0, style=solid];
m6_826 -> m6_839  [key=2, style=dotted];
m6_826 -> m6_828  [color=darkseagreen4, key=1, label=stopWatch, style=dashed];
m6_828 -> m6_829  [key=0, style=solid];
m6_828 -> m6_841  [key=2, style=dotted];
m6_822 -> m6_835  [key=2, style=dotted];
m6_822 -> m6_823  [key=0, style=solid];
m6_822 -> m6_824  [color=darkseagreen4, key=1, label=streamWriter, style=dashed];
m6_824 -> m6_825  [key=0, style=solid];
m6_824 -> m6_837  [key=2, style=dotted];
m6_816 -> m6_819  [key=0, style=solid];
m6_816 -> m6_817  [key=0, style=solid];
m6_817 -> m6_832  [key=2, style=dotted];
m6_817 -> m6_818  [key=0, style=solid];
m6_817 -> m6_830  [key=2, style=dotted];
m6_817 -> m6_831  [key=2, style=dotted];
m6_815 -> m6_816  [key=0, style=solid];
m6_815 -> m6_817  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_815 -> m6_818  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_825 -> m6_826  [key=0, style=solid];
m6_825 -> m6_838  [key=2, style=dotted];
m6_818 -> m6_816  [key=0, style=solid];
m6_818 -> m6_818  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_829 -> m6_813  [color=blue, key=0, style=bold];
m6_3919 -> m6_3920  [key=0, style=solid];
m6_3920 -> m6_3921  [key=0, style=solid];
m6_3921 -> m6_3919  [color=blue, key=0, style=bold];
m6_2063 -> m6_2066  [key=0, style=solid];
m6_2066 -> m6_2067  [key=0, style=solid];
m6_2067 -> m6_2063  [color=blue, key=0, style=bold];
m6_756 -> m6_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m6_756 -> m6_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m6_756 -> m6_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m6_3242 -> m6_3243  [key=0, style=solid];
m6_3243 -> m6_60  [key=2, style=dotted];
m6_3243 -> m6_3244  [key=0, style=solid];
m6_3243 -> m6_3245  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3244 -> m6_3242  [color=blue, key=0, style=bold];
m6_33 -> m6_34  [key=0, style=solid];
m6_1935 -> m6_1936  [key=0, style=solid];
m6_1940 -> m6_42  [key=2, style=dotted];
m6_1940 -> m6_1941  [key=0, style=solid];
m6_1936 -> m6_196  [key=2, style=dotted];
m6_1936 -> m6_1937  [key=0, style=solid];
m6_1936 -> m6_1938  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m6_1936 -> m6_1939  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m6_1939 -> m6_41  [key=2, style=dotted];
m6_1939 -> m6_1940  [key=0, style=solid];
m6_1937 -> m6_832  [key=2, style=dotted];
m6_1937 -> m6_1512  [key=2, style=dotted];
m6_1937 -> m6_1938  [key=0, style=solid];
m6_1938 -> m6_832  [key=2, style=dotted];
m6_1938 -> m6_1512  [key=2, style=dotted];
m6_1938 -> m6_1939  [key=0, style=solid];
m6_1941 -> m6_1935  [color=blue, key=0, style=bold];
m6_469 -> m6_470  [key=0, style=solid];
m6_469 -> m6_131  [key=2, style=dotted];
m6_469 -> m6_477  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_469 -> m6_482  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_469 -> m6_484  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_469 -> m6_486  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_469 -> m6_489  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_471 -> m6_24  [key=2, style=dotted];
m6_471 -> m6_472  [key=0, style=solid];
m6_471 -> m6_477  [key=0, style=solid];
m6_471 -> m6_491  [key=2, style=dotted];
m6_473 -> m6_24  [key=2, style=dotted];
m6_473 -> m6_474  [key=0, style=solid];
m6_473 -> m6_490  [key=0, style=solid];
m6_473 -> m6_492  [key=2, style=dotted];
m6_470 -> m6_471  [key=0, style=solid];
m6_470 -> m6_49  [key=2, style=dotted];
m6_470 -> m6_477  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m6_470 -> m6_482  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m6_470 -> m6_484  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m6_472 -> m6_473  [key=0, style=solid];
m6_472 -> m6_49  [key=2, style=dotted];
m6_472 -> m6_474  [key=0, style=solid];
m6_474 -> m6_469  [color=blue, key=0, style=bold];
m6_474 -> m6_475  [key=0, style=solid];
m6_474 -> m6_494  [key=2, style=dotted];
m6_1248 -> m6_1249  [key=0, style=solid];
m6_1250 -> m6_24  [key=2, style=dotted];
m6_1250 -> m6_1251  [key=0, style=solid];
m6_1252 -> m6_24  [key=2, style=dotted];
m6_1252 -> m6_1253  [key=0, style=solid];
m6_1249 -> m6_1250  [key=0, style=solid];
m6_1249 -> m6_129  [key=2, style=dotted];
m6_1249 -> m6_1251  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1251 -> m6_1252  [key=0, style=solid];
m6_1251 -> m6_49  [key=2, style=dotted];
m6_1253 -> m6_1248  [color=blue, key=0, style=bold];
m6_3204 -> m6_3205  [key=0, style=solid];
m6_3205 -> m6_49  [key=2, style=dotted];
m6_3205 -> m6_3206  [key=0, style=solid];
m6_3207 -> m6_49  [key=2, style=dotted];
m6_3207 -> m6_3208  [key=0, style=solid];
m6_3209 -> m6_49  [key=2, style=dotted];
m6_3209 -> m6_3210  [key=0, style=solid];
m6_3211 -> m6_49  [key=2, style=dotted];
m6_3211 -> m6_3212  [key=0, style=solid];
m6_3213 -> m6_49  [key=2, style=dotted];
m6_3213 -> m6_3214  [key=0, style=solid];
m6_3215 -> m6_49  [key=2, style=dotted];
m6_3215 -> m6_3216  [key=0, style=solid];
m6_3217 -> m6_49  [key=2, style=dotted];
m6_3217 -> m6_3218  [key=0, style=solid];
m6_3206 -> m6_152  [key=2, style=dotted];
m6_3206 -> m6_3207  [key=0, style=solid];
m6_3208 -> m6_152  [key=2, style=dotted];
m6_3208 -> m6_3209  [key=0, style=solid];
m6_3210 -> m6_152  [key=2, style=dotted];
m6_3210 -> m6_3211  [key=0, style=solid];
m6_3212 -> m6_152  [key=2, style=dotted];
m6_3212 -> m6_3213  [key=0, style=solid];
m6_3214 -> m6_152  [key=2, style=dotted];
m6_3214 -> m6_3215  [key=0, style=solid];
m6_3216 -> m6_152  [key=2, style=dotted];
m6_3216 -> m6_3217  [key=0, style=solid];
m6_3218 -> m6_152  [key=2, style=dotted];
m6_3218 -> m6_3219  [key=0, style=solid];
m6_3219 -> m6_3204  [color=blue, key=0, style=bold];
m6_248 -> m6_249  [key=0, style=solid];
m6_248 -> m6_250  [key=0, style=solid];
m6_3761 -> m6_3762  [key=0, style=solid];
m6_3763 -> m6_49  [key=2, style=dotted];
m6_3763 -> m6_3764  [key=0, style=solid];
m6_3763 -> m6_3765  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3763 -> m6_3766  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3763 -> m6_3767  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3763 -> m6_3768  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3764 -> m6_152  [key=2, style=dotted];
m6_3764 -> m6_3765  [key=0, style=solid];
m6_3765 -> m6_152  [key=2, style=dotted];
m6_3765 -> m6_3766  [key=0, style=solid];
m6_3766 -> m6_152  [key=2, style=dotted];
m6_3766 -> m6_3767  [key=0, style=solid];
m6_3767 -> m6_152  [key=2, style=dotted];
m6_3767 -> m6_3768  [key=0, style=solid];
m6_3768 -> m6_152  [key=2, style=dotted];
m6_3768 -> m6_3769  [key=0, style=solid];
m6_3762 -> m6_3763  [key=0, style=solid];
m6_3769 -> m6_3761  [color=blue, key=0, style=bold];
m6_3125 -> m6_3126  [key=0, style=solid];
m6_3128 -> m6_24  [key=2, style=dotted];
m6_3128 -> m6_3129  [key=0, style=solid];
m6_3127 -> m6_3128  [key=0, style=solid];
m6_3127 -> m6_129  [key=2, style=dotted];
m6_3126 -> m6_3127  [key=0, style=solid];
m6_3126 -> m6_3131  [key=2, style=dotted];
m6_3126 -> m6_3130  [key=2, style=dotted];
m6_3129 -> m6_3125  [color=blue, key=0, style=bold];
m6_1216 -> m6_1217  [key=0, style=solid];
m6_1222 -> m6_24  [key=2, style=dotted];
m6_1222 -> m6_1223  [key=0, style=solid];
m6_1221 -> m6_1222  [key=0, style=solid];
m6_1221 -> m6_129  [key=2, style=dotted];
m6_1217 -> m6_1221  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_1217 -> m6_1218  [key=0, style=solid];
m6_1217 -> m6_1224  [key=2, style=dotted];
m6_1217 -> m6_1219  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_1217 -> m6_1220  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_1220 -> m6_1221  [key=0, style=solid];
m6_1220 -> m6_1225  [key=2, style=dotted];
m6_1218 -> m6_1219  [key=0, style=solid];
m6_1218 -> m6_1225  [key=2, style=dotted];
m6_1219 -> m6_1220  [key=0, style=solid];
m6_1219 -> m6_1225  [key=2, style=dotted];
m6_1223 -> m6_1216  [color=blue, key=0, style=bold];
m6_261 -> m6_262  [key=0, style=solid];
m6_261 -> m6_263  [key=0, style=solid];
m6_262 -> m6_266  [key=0, style=solid];
m6_262 -> m6_200  [key=2, style=dotted];
m6_262 -> m6_272  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_262 -> m6_263  [key=0, style=solid];
m6_262 -> m6_258  [key=2, style=dotted];
m6_263 -> m6_264  [key=0, style=solid];
m6_263 -> m6_265  [key=0, style=solid];
m6_263 -> m6_60  [key=2, style=dotted];
m6_263 -> m6_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_264 -> m6_266  [key=0, style=solid];
m6_264 -> m6_75  [key=2, style=dotted];
m6_264 -> m6_265  [key=0, style=solid];
m6_264 -> m6_258  [key=2, style=dotted];
m6_265 -> m6_266  [key=0, style=solid];
m6_265 -> m6_267  [key=2, style=dotted];
m6_265 -> m6_129  [key=2, style=dotted];
m6_266 -> m6_254  [color=blue, key=0, style=bold];
m6_266 -> m6_24  [key=2, style=dotted];
m6_266 -> m6_267  [key=0, style=solid];
m6_1091 -> m6_1092  [key=0, style=solid];
m6_1100 -> m6_24  [key=2, style=dotted];
m6_1100 -> m6_1101  [key=0, style=solid];
m6_1099 -> m6_1100  [key=0, style=solid];
m6_1099 -> m6_175  [key=2, style=dotted];
m6_1099 -> m6_176  [key=2, style=dotted];
m6_1098 -> m6_1100  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_1098 -> m6_1099  [key=0, style=solid];
m6_1098 -> m6_1103  [key=2, style=dotted];
m6_1092 -> m6_1099  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m6_1092 -> m6_1102  [key=2, style=dotted];
m6_1092 -> m6_134  [key=2, style=dotted];
m6_1092 -> m6_1093  [key=0, style=solid];
m6_1092 -> m6_1095  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m6_1097 -> m6_1098  [key=0, style=solid];
m6_1097 -> m6_17  [key=2, style=dotted];
m6_1093 -> m6_1097  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_1093 -> m6_1094  [key=0, style=solid];
m6_1093 -> m6_834  [key=2, style=dotted];
m6_1093 -> m6_1095  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_1093 -> m6_1096  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_1095 -> m6_1096  [key=0, style=solid];
m6_1095 -> m6_915  [key=2, style=dotted];
m6_1096 -> m6_1097  [key=0, style=solid];
m6_1096 -> m6_838  [key=2, style=dotted];
m6_1094 -> m6_914  [key=2, style=dotted];
m6_1094 -> m6_1095  [key=0, style=solid];
m6_1101 -> m6_1091  [color=blue, key=0, style=bold];
m6_1649 -> m6_1650  [key=0, style=solid];
m6_1650 -> m6_1651  [key=0, style=solid];
m6_1651 -> m6_1649  [color=blue, key=0, style=bold];
m6_2991 -> m6_2992  [key=0, style=solid];
m6_2993 -> m6_19  [key=2, style=dotted];
m6_2993 -> m6_2994  [key=0, style=solid];
m6_2993 -> m6_2998  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_2993 -> m6_3003  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_3004 -> m6_24  [key=2, style=dotted];
m6_3004 -> m6_3005  [key=0, style=solid];
m6_2992 -> m6_2993  [key=0, style=solid];
m6_2992 -> m6_3007  [key=2, style=dotted];
m6_2992 -> m6_2998  [color=darkseagreen4, key=1, label=test, style=dashed];
m6_2994 -> m6_2995  [key=0, style=solid];
m6_2998 -> m6_2999  [key=0, style=solid];
m6_2998 -> m6_3008  [key=2, style=dotted];
m6_3003 -> m6_3004  [key=0, style=solid];
m6_3003 -> m6_3010  [key=2, style=dotted];
m6_3003 -> m6_3005  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_3005 -> m6_3006  [key=0, style=solid];
m6_3005 -> m6_3011  [key=2, style=dotted];
m6_2995 -> m6_2996  [key=0, style=solid];
m6_2997 -> m6_2998  [key=0, style=solid];
m6_2997 -> m6_2972  [key=2, style=dotted];
m6_2997 -> m6_835  [key=2, style=dotted];
m6_2997 -> m6_2999  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_2999 -> m6_3000  [key=0, style=solid];
m6_2999 -> m6_3009  [key=2, style=dotted];
m6_3002 -> m6_3003  [key=0, style=solid];
m6_3002 -> m6_16  [key=2, style=dotted];
m6_3002 -> m6_17  [key=2, style=dotted];
m6_2996 -> m6_2997  [key=0, style=solid];
m6_2996 -> m6_834  [key=2, style=dotted];
m6_2996 -> m6_3000  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_3000 -> m6_916  [key=2, style=dotted];
m6_3000 -> m6_3001  [key=0, style=solid];
m6_3001 -> m6_3002  [key=0, style=solid];
m6_3001 -> m6_1075  [key=2, style=dotted];
m6_3006 -> m6_2991  [color=blue, key=0, style=bold];
m6_694 -> m6_695  [key=0, style=solid];
m6_694 -> m6_295  [key=2, style=dotted];
m6_694 -> m6_552  [key=2, style=dotted];
m6_694 -> m6_696  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_694 -> m6_697  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_694 -> m6_698  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_694 -> m6_699  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_694 -> m6_700  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m6_695 -> m6_696  [key=0, style=solid];
m6_695 -> m6_295  [key=2, style=dotted];
m6_695 -> m6_113  [key=2, style=dotted];
m6_695 -> m6_111  [key=2, style=dotted];
m6_695 -> m6_702  [key=2, style=dotted];
m6_696 -> m6_697  [key=0, style=solid];
m6_696 -> m6_703  [key=2, style=dotted];
m6_697 -> m6_553  [color=blue, key=0, style=bold];
m6_697 -> m6_698  [key=0, style=solid];
m6_697 -> m6_704  [key=2, style=dotted];
m6_2107 -> m6_2108  [key=0, style=solid];
m6_2108 -> m6_2110  [key=2, style=dotted];
m6_2108 -> m6_2109  [key=0, style=solid];
m6_2109 -> m6_2107  [color=blue, key=0, style=bold];
m6_1012 -> m6_1013  [key=0, style=solid];
m6_1015 -> m6_24  [key=2, style=dotted];
m6_1015 -> m6_1016  [key=0, style=solid];
m6_1014 -> m6_1015  [key=0, style=solid];
m6_1014 -> m6_49  [key=2, style=dotted];
m6_1013 -> m6_129  [key=2, style=dotted];
m6_1013 -> m6_1014  [key=0, style=solid];
m6_1013 -> m6_1017  [key=2, style=dotted];
m6_1016 -> m6_1012  [color=blue, key=0, style=bold];
m6_49 -> m6_50  [key=0, style=solid];
m6_3358 -> m6_3359  [key=0, style=solid];
m6_3364 -> m6_24  [key=2, style=dotted];
m6_3364 -> m6_3365  [key=0, style=solid];
m6_3360 -> m6_3364  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3360 -> m6_3361  [key=0, style=solid];
m6_3360 -> m6_134  [key=2, style=dotted];
m6_3360 -> m6_3371  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3360 -> m6_3365  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3360 -> m6_3366  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3360 -> m6_3367  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3360 -> m6_3368  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3363 -> m6_3364  [key=0, style=solid];
m6_3363 -> m6_797  [key=2, style=dotted];
m6_3365 -> m6_3366  [key=0, style=solid];
m6_3365 -> m6_1457  [key=2, style=dotted];
m6_3365 -> m6_22  [key=2, style=dotted];
m6_3359 -> m6_3360  [key=0, style=solid];
m6_3359 -> m6_3362  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3361 -> m6_3362  [key=0, style=solid];
m6_3361 -> m6_3371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3361 -> m6_3372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3366 -> m6_22  [key=2, style=dotted];
m6_3366 -> m6_3367  [key=0, style=solid];
m6_3366 -> m6_1457  [key=2, style=dotted];
m6_3367 -> m6_22  [key=2, style=dotted];
m6_3367 -> m6_3368  [key=0, style=solid];
m6_3367 -> m6_1457  [key=2, style=dotted];
m6_3368 -> m6_22  [key=2, style=dotted];
m6_3368 -> m6_3369  [key=0, style=solid];
m6_3368 -> m6_1457  [key=2, style=dotted];
m6_3362 -> m6_3363  [key=0, style=solid];
m6_3362 -> m6_175  [key=2, style=dotted];
m6_3362 -> m6_296  [key=2, style=dotted];
m6_3369 -> m6_3358  [color=blue, key=0, style=bold];
m6_3029 -> m6_3030  [key=0, style=solid];
m6_3037 -> m6_24  [key=2, style=dotted];
m6_3037 -> m6_3038  [key=0, style=solid];
m6_3038 -> m6_24  [key=2, style=dotted];
m6_3038 -> m6_3039  [key=0, style=solid];
m6_3039 -> m6_24  [key=2, style=dotted];
m6_3039 -> m6_3040  [key=0, style=solid];
m6_3036 -> m6_3037  [key=0, style=solid];
m6_3036 -> m6_175  [key=2, style=dotted];
m6_3036 -> m6_296  [key=2, style=dotted];
m6_3030 -> m6_3036  [color=darkseagreen4, key=1, label=contractResolver, style=dashed];
m6_3030 -> m6_3031  [key=0, style=solid];
m6_3030 -> m6_3041  [key=2, style=dotted];
m6_3030 -> m6_3034  [color=darkseagreen4, key=1, label=contractResolver, style=dashed];
m6_3035 -> m6_3036  [key=0, style=solid];
m6_3035 -> m6_42  [key=2, style=dotted];
m6_3034 -> m6_175  [key=2, style=dotted];
m6_3034 -> m6_198  [key=2, style=dotted];
m6_3034 -> m6_3035  [key=0, style=solid];
m6_3031 -> m6_3034  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3031 -> m6_3032  [key=0, style=solid];
m6_3031 -> m6_3028  [key=2, style=dotted];
m6_3033 -> m6_3034  [key=0, style=solid];
m6_3032 -> m6_3033  [key=0, style=solid];
m6_3040 -> m6_3029  [color=blue, key=0, style=bold];
m6_1317 -> m6_1318  [key=0, style=solid];
m6_1321 -> m6_24  [key=2, style=dotted];
m6_1321 -> m6_1322  [key=0, style=solid];
m6_1323 -> m6_24  [key=2, style=dotted];
m6_1323 -> m6_1324  [key=0, style=solid];
m6_1323 -> m6_954  [key=2, style=dotted];
m6_1324 -> m6_24  [key=2, style=dotted];
m6_1324 -> m6_1325  [key=0, style=solid];
m6_1324 -> m6_954  [key=2, style=dotted];
m6_1320 -> m6_1321  [key=0, style=solid];
m6_1320 -> m6_175  [key=2, style=dotted];
m6_1320 -> m6_176  [key=2, style=dotted];
m6_1320 -> m6_1322  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1322 -> m6_1323  [key=0, style=solid];
m6_1322 -> m6_1324  [color=darkseagreen4, key=1, label=m2, style=dashed];
m6_1322 -> m6_175  [key=2, style=dotted];
m6_1322 -> m6_296  [key=2, style=dotted];
m6_1319 -> m6_1320  [key=0, style=solid];
m6_1319 -> m6_1307  [key=2, style=dotted];
m6_1318 -> m6_1306  [key=2, style=dotted];
m6_1318 -> m6_1319  [key=0, style=solid];
m6_1325 -> m6_1317  [color=blue, key=0, style=bold];
m6_3744 -> m6_3745  [key=0, style=solid];
m6_3747 -> m6_24  [key=2, style=dotted];
m6_3747 -> m6_3748  [key=0, style=solid];
m6_3748 -> m6_24  [key=2, style=dotted];
m6_3748 -> m6_3749  [key=0, style=solid];
m6_3749 -> m6_24  [key=2, style=dotted];
m6_3749 -> m6_3750  [key=0, style=solid];
m6_3751 -> m6_24  [key=2, style=dotted];
m6_3751 -> m6_3752  [key=0, style=solid];
m6_3752 -> m6_24  [key=2, style=dotted];
m6_3752 -> m6_3753  [key=0, style=solid];
m6_3753 -> m6_24  [key=2, style=dotted];
m6_3753 -> m6_3754  [key=0, style=solid];
m6_3746 -> m6_3747  [key=0, style=solid];
m6_3746 -> m6_3748  [color=darkseagreen4, key=1, label=floats, style=dashed];
m6_3746 -> m6_3749  [color=darkseagreen4, key=1, label=floats, style=dashed];
m6_3746 -> m6_49  [key=2, style=dotted];
m6_3750 -> m6_3751  [key=0, style=solid];
m6_3750 -> m6_3752  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m6_3750 -> m6_3753  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m6_3750 -> m6_49  [key=2, style=dotted];
m6_3745 -> m6_3746  [key=0, style=solid];
m6_3745 -> m6_3750  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3754 -> m6_3744  [color=blue, key=0, style=bold];
m6_2133 -> m6_2134  [key=0, style=solid];
m6_2134 -> m6_2135  [key=0, style=solid];
m6_2134 -> m6_2136  [key=2, style=dotted];
m6_2135 -> m6_2133  [color=blue, key=0, style=bold];
m6_468 -> m6_469  [key=0, style=solid];
m6_468 -> m6_493  [key=2, style=dotted];
m6_2739 -> m6_2740  [key=0, style=solid];
m6_2742 -> m6_42  [key=2, style=dotted];
m6_2742 -> m6_2743  [key=0, style=solid];
m6_2741 -> m6_41  [key=2, style=dotted];
m6_2741 -> m6_2742  [key=0, style=solid];
m6_2740 -> m6_2741  [key=0, style=solid];
m6_2740 -> m6_2744  [key=2, style=dotted];
m6_2743 -> m6_2739  [color=blue, key=0, style=bold];
m6_1797 -> m6_1798  [key=0, style=solid];
m6_1799 -> m6_60  [key=2, style=dotted];
m6_1799 -> m6_1800  [key=0, style=solid];
m6_1799 -> m6_1801  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1798 -> m6_1802  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1798 -> m6_1799  [key=0, style=solid];
m6_1800 -> m6_1797  [color=blue, key=0, style=bold];
m6_3274 -> m6_3275  [key=0, style=solid];
m6_3276 -> m6_24  [key=2, style=dotted];
m6_3276 -> m6_3277  [key=0, style=solid];
m6_3276 -> m6_3271  [key=2, style=dotted];
m6_3276 -> m6_3272  [key=2, style=dotted];
m6_3277 -> m6_24  [key=2, style=dotted];
m6_3277 -> m6_3278  [key=0, style=solid];
m6_3277 -> m6_3273  [key=2, style=dotted];
m6_3278 -> m6_24  [key=2, style=dotted];
m6_3278 -> m6_3279  [key=0, style=solid];
m6_3279 -> m6_24  [key=2, style=dotted];
m6_3279 -> m6_3280  [key=0, style=solid];
m6_3281 -> m6_24  [key=2, style=dotted];
m6_3281 -> m6_3282  [key=0, style=solid];
m6_3282 -> m6_24  [key=2, style=dotted];
m6_3282 -> m6_3283  [key=0, style=solid];
m6_3283 -> m6_24  [key=2, style=dotted];
m6_3283 -> m6_3284  [key=0, style=solid];
m6_3284 -> m6_24  [key=2, style=dotted];
m6_3284 -> m6_3285  [key=0, style=solid];
m6_3275 -> m6_3276  [key=0, style=solid];
m6_3275 -> m6_3277  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3275 -> m6_3278  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3275 -> m6_3279  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3275 -> m6_175  [key=2, style=dotted];
m6_3275 -> m6_296  [key=2, style=dotted];
m6_3280 -> m6_3281  [key=0, style=solid];
m6_3280 -> m6_3282  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3280 -> m6_3283  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3280 -> m6_3284  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3280 -> m6_49  [key=2, style=dotted];
m6_3285 -> m6_3274  [color=blue, key=0, style=bold];
m6_362 -> m6_363  [key=0, style=solid];
m6_371 -> m6_24  [key=2, style=dotted];
m6_371 -> m6_372  [key=0, style=solid];
m6_371 -> m6_447  [key=0, style=solid];
m6_371 -> m6_332  [key=2, style=dotted];
m6_369 -> m6_24  [key=2, style=dotted];
m6_369 -> m6_370  [key=0, style=solid];
m6_369 -> m6_375  [key=2, style=dotted];
m6_370 -> m6_24  [key=2, style=dotted];
m6_370 -> m6_371  [key=0, style=solid];
m6_370 -> m6_376  [key=2, style=dotted];
m6_368 -> m6_369  [key=0, style=solid];
m6_368 -> m6_374  [key=2, style=dotted];
m6_368 -> m6_372  [key=0, style=solid];
m6_368 -> m6_398  [key=0, style=solid];
m6_368 -> m6_401  [key=0, style=solid];
m6_368 -> m6_415  [key=0, style=solid];
m6_368 -> m6_429  [key=0, style=solid];
m6_368 -> m6_446  [key=0, style=solid];
m6_367 -> m6_369  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_367 -> m6_370  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_367 -> m6_368  [key=0, style=solid];
m6_367 -> m6_134  [key=2, style=dotted];
m6_372 -> m6_362  [color=blue, key=0, style=bold];
m6_372 -> m6_373  [key=0, style=solid];
m6_4095 -> m6_4096  [key=0, style=solid];
m6_4096 -> m6_60  [key=2, style=dotted];
m6_4096 -> m6_4097  [key=0, style=solid];
m6_4096 -> m6_4098  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_4097 -> m6_4095  [color=blue, key=0, style=bold];
m6_152 -> m6_153  [key=0, style=solid];
m6_520 -> m6_521  [key=0, style=solid];
m6_520 -> m6_24  [key=2, style=dotted];
m6_1297 -> m6_1298  [key=0, style=solid];
m6_1303 -> m6_24  [key=2, style=dotted];
m6_1303 -> m6_1304  [key=0, style=solid];
m6_1304 -> m6_24  [key=2, style=dotted];
m6_1304 -> m6_1305  [key=0, style=solid];
m6_1301 -> m6_24  [key=2, style=dotted];
m6_1301 -> m6_1302  [key=0, style=solid];
m6_1298 -> m6_1303  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_1298 -> m6_1304  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_1298 -> m6_1299  [key=0, style=solid];
m6_1298 -> m6_1306  [key=2, style=dotted];
m6_1302 -> m6_1303  [key=0, style=solid];
m6_1302 -> m6_1304  [color=darkseagreen4, key=1, label=m2, style=dashed];
m6_1302 -> m6_49  [key=2, style=dotted];
m6_1300 -> m6_1301  [key=0, style=solid];
m6_1300 -> m6_129  [key=2, style=dotted];
m6_1300 -> m6_1302  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1299 -> m6_1300  [key=0, style=solid];
m6_1299 -> m6_1307  [key=2, style=dotted];
m6_1305 -> m6_1297  [color=blue, key=0, style=bold];
m6_3943 -> m6_3944  [key=0, style=solid];
m6_3944 -> m6_3900  [key=2, style=dotted];
m6_3944 -> m6_3945  [key=0, style=solid];
m6_3945 -> m6_3943  [color=blue, key=0, style=bold];
m6_2111 -> m6_2112  [key=0, style=solid];
m6_2112 -> m6_2113  [key=0, style=solid];
m6_2112 -> m6_2114  [key=2, style=dotted];
m6_2113 -> m6_2111  [color=blue, key=0, style=bold];
m6_540 -> m6_547  [key=0, style=solid];
m6_540 -> m6_554  [key=2, style=dotted];
m6_540 -> m6_97  [key=2, style=dotted];
m6_540 -> m6_123  [key=2, style=dotted];
m6_538 -> m6_535  [key=0, style=solid];
m6_538 -> m6_119  [key=2, style=dotted];
m6_1776 -> m6_1777  [key=0, style=solid];
m6_1778 -> m6_60  [key=2, style=dotted];
m6_1778 -> m6_1779  [key=0, style=solid];
m6_1778 -> m6_1780  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1777 -> m6_1781  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1777 -> m6_1778  [key=0, style=solid];
m6_1779 -> m6_1776  [color=blue, key=0, style=bold];
m6_3374 -> m6_3375  [key=0, style=solid];
m6_3380 -> m6_24  [key=2, style=dotted];
m6_3380 -> m6_3381  [key=0, style=solid];
m6_3376 -> m6_3380  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3376 -> m6_3377  [key=0, style=solid];
m6_3376 -> m6_134  [key=2, style=dotted];
m6_3376 -> m6_3386  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3376 -> m6_3381  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3376 -> m6_3382  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3376 -> m6_3383  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3379 -> m6_3380  [key=0, style=solid];
m6_3379 -> m6_797  [key=2, style=dotted];
m6_3381 -> m6_3382  [key=0, style=solid];
m6_3381 -> m6_1457  [key=2, style=dotted];
m6_3381 -> m6_22  [key=2, style=dotted];
m6_3375 -> m6_3376  [key=0, style=solid];
m6_3375 -> m6_3378  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3377 -> m6_3378  [key=0, style=solid];
m6_3377 -> m6_3386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3377 -> m6_3387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3382 -> m6_22  [key=2, style=dotted];
m6_3382 -> m6_1457  [key=2, style=dotted];
m6_3382 -> m6_3383  [key=0, style=solid];
m6_3383 -> m6_22  [key=2, style=dotted];
m6_3383 -> m6_1457  [key=2, style=dotted];
m6_3383 -> m6_3384  [key=0, style=solid];
m6_3378 -> m6_3379  [key=0, style=solid];
m6_3378 -> m6_175  [key=2, style=dotted];
m6_3378 -> m6_296  [key=2, style=dotted];
m6_3384 -> m6_3374  [color=blue, key=0, style=bold];
m6_377 -> m6_378  [key=0, style=solid];
m6_377 -> m6_376  [key=0, style=solid];
m6_378 -> m6_24  [key=2, style=dotted];
m6_378 -> m6_379  [key=0, style=solid];
m6_378 -> m6_382  [key=2, style=dotted];
m6_378 -> m6_129  [key=2, style=dotted];
m6_378 -> m6_380  [color=darkseagreen4, key=1, label=namespacePrefix, style=dashed];
m6_380 -> m6_24  [key=2, style=dotted];
m6_380 -> m6_381  [key=0, style=solid];
m6_380 -> m6_376  [key=0, style=solid];
m6_380 -> m6_287  [key=2, style=dotted];
m6_379 -> m6_380  [key=0, style=solid];
m6_379 -> m6_49  [key=2, style=dotted];
m6_381 -> m6_377  [color=blue, key=0, style=bold];
m6_381 -> m6_382  [key=0, style=solid];
m6_381 -> m6_383  [key=0, style=solid];
m6_495 -> m6_523  [key=0, style=solid];
m6_495 -> m6_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_495 -> m6_526  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_495 -> m6_527  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_495 -> m6_528  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_495 -> m6_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_495 -> m6_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m6_495 -> m6_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_495 -> m6_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m6_495 -> m6_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_495 -> m6_537  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m6_495 -> m6_539  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_495 -> m6_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_495 -> m6_541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_495 -> m6_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_495 -> m6_543  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m6_495 -> m6_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_495 -> m6_545  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m6_495 -> m6_546  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m6_495 -> m6_496  [key=0, style=solid];
m6_523 -> m6_524  [key=0, style=solid];
m6_523 -> m6_525  [key=0, style=solid];
m6_523 -> m6_295  [key=2, style=dotted];
m6_523 -> m6_542  [key=2, style=dotted];
m6_525 -> m6_526  [key=0, style=solid];
m6_525 -> m6_548  [key=2, style=dotted];
m6_525 -> m6_535  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m6_525 -> m6_24  [key=2, style=dotted];
m6_526 -> m6_527  [key=0, style=solid];
m6_526 -> m6_549  [key=2, style=dotted];
m6_526 -> m6_533  [color=darkseagreen4, key=1, label=elementPrefix, style=dashed];
m6_527 -> m6_528  [key=0, style=solid];
m6_527 -> m6_533  [key=0, style=solid];
m6_527 -> m6_550  [key=2, style=dotted];
m6_527 -> m6_24  [key=2, style=dotted];
m6_528 -> m6_529  [key=0, style=solid];
m6_528 -> m6_551  [key=2, style=dotted];
m6_528 -> m6_530  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m6_528 -> m6_531  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m6_528 -> m6_543  [key=2, style=dotted];
m6_529 -> m6_530  [key=0, style=solid];
m6_529 -> m6_518  [key=2, style=dotted];
m6_529 -> m6_531  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m6_531 -> m6_532  [key=0, style=solid];
m6_531 -> m6_295  [key=2, style=dotted];
m6_531 -> m6_552  [key=2, style=dotted];
m6_531 -> m6_51  [key=2, style=dotted];
m6_531 -> m6_115  [key=2, style=dotted];
m6_532 -> m6_547  [key=0, style=solid];
m6_532 -> m6_119  [key=2, style=dotted];
m6_532 -> m6_533  [color=green, key=0, style=solid];
m6_532 -> m6_24  [key=2, style=dotted];
m6_533 -> m6_534  [color=green, key=0, style=solid];
m6_533 -> m6_553  [key=2, style=dotted];
m6_533 -> m6_538  [color=darkseagreen4, key=1, label=element, style=dashed];
m6_533 -> m6_540  [color=darkseagreen4, key=1, label=element, style=dashed];
m6_533 -> m6_544  [color=darkseagreen4, key=1, label=element, style=dashed];
m6_534 -> m6_535  [key=0, style=solid];
m6_534 -> m6_123  [key=2, style=dotted];
m6_534 -> m6_24  [key=2, style=dotted];
m6_537 -> m6_538  [key=0, style=solid];
m6_537 -> m6_295  [key=2, style=dotted];
m6_537 -> m6_552  [key=2, style=dotted];
m6_537 -> m6_51  [key=2, style=dotted];
m6_537 -> m6_115  [key=2, style=dotted];
m6_537 -> m6_537  [color=darkseagreen4, key=1, label=nameValue, style=dashed];
m6_539 -> m6_540  [key=0, style=solid];
m6_539 -> m6_541  [key=0, style=solid];
m6_524 -> m6_547  [key=0, style=solid];
m6_524 -> m6_492  [key=2, style=dotted];
m6_524 -> m6_525  [key=0, style=solid];
m6_535 -> m6_536  [key=0, style=solid];
m6_535 -> m6_539  [key=0, style=solid];
m6_535 -> m6_475  [color=blue, key=0, style=bold];
m6_530 -> m6_531  [key=0, style=solid];
m6_530 -> m6_549  [key=2, style=dotted];
m6_530 -> m6_24  [key=2, style=dotted];
m6_3471 -> m6_3472  [key=0, style=solid];
m6_3474 -> m6_24  [key=2, style=dotted];
m6_3474 -> m6_3475  [key=0, style=solid];
m6_3475 -> m6_24  [key=2, style=dotted];
m6_3475 -> m6_3476  [key=0, style=solid];
m6_3472 -> m6_3474  [color=darkseagreen4, key=1, label=testObj, style=dashed];
m6_3472 -> m6_3473  [key=0, style=solid];
m6_3472 -> m6_3477  [key=2, style=dotted];
m6_3473 -> m6_3474  [key=0, style=solid];
m6_3473 -> m6_3475  [color=darkseagreen4, key=1, label=objDeserialized, style=dashed];
m6_3473 -> m6_3478  [key=2, style=dotted];
m6_3476 -> m6_3471  [color=blue, key=0, style=bold];
m6_1975 -> m6_1976  [key=0, style=solid];
m6_1977 -> m6_134  [key=2, style=dotted];
m6_1977 -> m6_1978  [key=0, style=solid];
m6_1976 -> m6_196  [key=2, style=dotted];
m6_1976 -> m6_1977  [key=0, style=solid];
m6_1978 -> m6_1975  [color=blue, key=0, style=bold];
m6_2729 -> m6_2730  [key=0, style=solid];
m6_2734 -> m6_24  [key=2, style=dotted];
m6_2734 -> m6_2735  [key=0, style=solid];
m6_2734 -> m6_1681  [key=2, style=dotted];
m6_2735 -> m6_24  [key=2, style=dotted];
m6_2735 -> m6_2736  [key=0, style=solid];
m6_2735 -> m6_1681  [key=2, style=dotted];
m6_2736 -> m6_24  [key=2, style=dotted];
m6_2736 -> m6_2737  [key=0, style=solid];
m6_2736 -> m6_1681  [key=2, style=dotted];
m6_2733 -> m6_2734  [key=0, style=solid];
m6_2733 -> m6_2735  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2733 -> m6_2736  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2733 -> m6_49  [key=2, style=dotted];
m6_2731 -> m6_2733  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2731 -> m6_41  [key=2, style=dotted];
m6_2731 -> m6_2732  [key=0, style=solid];
m6_2732 -> m6_2733  [key=0, style=solid];
m6_2732 -> m6_42  [key=2, style=dotted];
m6_2730 -> m6_134  [key=2, style=dotted];
m6_2730 -> m6_2731  [key=0, style=solid];
m6_2730 -> m6_2738  [key=2, style=dotted];
m6_2737 -> m6_2729  [color=blue, key=0, style=bold];
m6_3132 -> m6_3133  [key=0, style=solid];
m6_3135 -> m6_24  [key=2, style=dotted];
m6_3135 -> m6_3136  [key=0, style=solid];
m6_3135 -> m6_3131  [key=2, style=dotted];
m6_3136 -> m6_24  [key=2, style=dotted];
m6_3136 -> m6_3137  [key=0, style=solid];
m6_3136 -> m6_3131  [key=2, style=dotted];
m6_3137 -> m6_24  [key=2, style=dotted];
m6_3137 -> m6_3138  [key=0, style=solid];
m6_3134 -> m6_3135  [key=0, style=solid];
m6_3134 -> m6_3136  [color=darkseagreen4, key=1, label=w, style=dashed];
m6_3134 -> m6_3137  [color=darkseagreen4, key=1, label=w, style=dashed];
m6_3134 -> m6_49  [key=2, style=dotted];
m6_3133 -> m6_3134  [key=0, style=solid];
m6_3138 -> m6_3132  [color=blue, key=0, style=bold];
m6_1308 -> m6_1309  [key=0, style=solid];
m6_1314 -> m6_24  [key=2, style=dotted];
m6_1314 -> m6_1315  [key=0, style=solid];
m6_1315 -> m6_24  [key=2, style=dotted];
m6_1315 -> m6_1316  [key=0, style=solid];
m6_1312 -> m6_24  [key=2, style=dotted];
m6_1312 -> m6_1313  [key=0, style=solid];
m6_1309 -> m6_1314  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_1309 -> m6_1315  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_1309 -> m6_1310  [key=0, style=solid];
m6_1309 -> m6_1306  [key=2, style=dotted];
m6_1313 -> m6_1314  [key=0, style=solid];
m6_1313 -> m6_1315  [color=darkseagreen4, key=1, label=m2, style=dashed];
m6_1313 -> m6_49  [key=2, style=dotted];
m6_1311 -> m6_1312  [key=0, style=solid];
m6_1311 -> m6_1313  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1311 -> m6_175  [key=2, style=dotted];
m6_1311 -> m6_176  [key=2, style=dotted];
m6_1310 -> m6_1311  [key=0, style=solid];
m6_1310 -> m6_1307  [key=2, style=dotted];
m6_1316 -> m6_1308  [color=blue, key=0, style=bold];
m6_3197 -> m6_3198  [key=0, style=solid];
m6_3202 -> m6_24  [key=2, style=dotted];
m6_3202 -> m6_3203  [key=0, style=solid];
m6_3199 -> m6_3202  [color=darkseagreen4, key=1, label=dict, style=dashed];
m6_3199 -> m6_16  [key=2, style=dotted];
m6_3199 -> m6_373  [key=2, style=dotted];
m6_3199 -> m6_3200  [key=0, style=solid];
m6_3199 -> m6_20  [key=2, style=dotted];
m6_3201 -> m6_3202  [key=0, style=solid];
m6_3201 -> m6_20  [key=2, style=dotted];
m6_3200 -> m6_16  [key=2, style=dotted];
m6_3200 -> m6_373  [key=2, style=dotted];
m6_3200 -> m6_3201  [key=0, style=solid];
m6_3198 -> m6_3199  [key=0, style=solid];
m6_3198 -> m6_3201  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_3198 -> m6_175  [key=2, style=dotted];
m6_3198 -> m6_833  [key=2, style=dotted];
m6_3203 -> m6_3197  [color=blue, key=0, style=bold];
m6_64 -> m6_65  [key=0, style=solid];
m6_870 -> m6_902  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_870 -> m6_907  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_870 -> m6_901  [key=0, style=solid];
m6_870 -> m6_903  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_909 -> m6_24  [key=2, style=dotted];
m6_909 -> m6_910  [key=0, style=solid];
m6_906 -> m6_909  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m6_906 -> m6_906  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m6_906 -> m6_907  [key=0, style=solid];
m6_906 -> m6_918  [key=2, style=dotted];
m6_906 -> m6_919  [key=2, style=dotted];
m6_906 -> m6_920  [key=2, style=dotted];
m6_906 -> m6_921  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_906 -> m6_910  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m6_908 -> m6_909  [key=0, style=solid];
m6_908 -> m6_908  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m6_908 -> m6_918  [key=2, style=dotted];
m6_908 -> m6_919  [key=2, style=dotted];
m6_908 -> m6_920  [key=2, style=dotted];
m6_908 -> m6_924  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_908 -> m6_911  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m6_908 -> m6_912  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m6_910 -> m6_911  [key=0, style=solid];
m6_910 -> m6_912  [key=0, style=solid];
m6_902 -> m6_375  [key=2, style=dotted];
m6_902 -> m6_903  [key=0, style=solid];
m6_902 -> m6_914  [key=2, style=dotted];
m6_907 -> m6_129  [key=2, style=dotted];
m6_907 -> m6_908  [key=0, style=solid];
m6_907 -> m6_467  [key=2, style=dotted];
m6_905 -> m6_906  [key=0, style=solid];
m6_905 -> m6_467  [key=2, style=dotted];
m6_905 -> m6_917  [key=2, style=dotted];
m6_911 -> m6_910  [key=0, style=solid];
m6_911 -> m6_468  [key=2, style=dotted];
m6_911 -> m6_22  [key=2, style=dotted];
m6_911 -> m6_911  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_912 -> m6_770  [key=2, style=dotted];
m6_912 -> m6_913  [key=0, style=solid];
m6_901 -> m6_902  [key=0, style=solid];
m6_901 -> m6_834  [key=2, style=dotted];
m6_901 -> m6_903  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_901 -> m6_904  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_903 -> m6_904  [key=0, style=solid];
m6_903 -> m6_915  [key=2, style=dotted];
m6_904 -> m6_905  [key=0, style=solid];
m6_904 -> m6_916  [key=2, style=dotted];
m6_913 -> m6_870  [color=blue, key=0, style=bold];
m6_4023 -> m6_4024  [key=0, style=solid];
m6_4030 -> m6_24  [key=2, style=dotted];
m6_4030 -> m6_4031  [key=0, style=solid];
m6_4030 -> m6_1681  [key=2, style=dotted];
m6_4024 -> m6_4030  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_4024 -> m6_376  [key=2, style=dotted];
m6_4024 -> m6_4025  [key=0, style=solid];
m6_4024 -> m6_4027  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_4029 -> m6_4030  [key=0, style=solid];
m6_4029 -> m6_296  [key=2, style=dotted];
m6_4025 -> m6_4026  [key=0, style=solid];
m6_4027 -> m6_4029  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4027 -> m6_176  [key=2, style=dotted];
m6_4027 -> m6_196  [key=2, style=dotted];
m6_4027 -> m6_4028  [key=0, style=solid];
m6_4026 -> m6_4029  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_4026 -> m6_175  [key=2, style=dotted];
m6_4026 -> m6_4027  [key=0, style=solid];
m6_4028 -> m6_4029  [key=0, style=solid];
m6_4028 -> m6_42  [key=2, style=dotted];
m6_4031 -> m6_4023  [color=blue, key=0, style=bold];
m6_3389 -> m6_3390  [key=0, style=solid];
m6_3394 -> m6_24  [key=2, style=dotted];
m6_3394 -> m6_3395  [key=0, style=solid];
m6_3395 -> m6_24  [key=2, style=dotted];
m6_3395 -> m6_3396  [key=0, style=solid];
m6_3396 -> m6_24  [key=2, style=dotted];
m6_3396 -> m6_3397  [key=0, style=solid];
m6_3397 -> m6_24  [key=2, style=dotted];
m6_3397 -> m6_3398  [key=0, style=solid];
m6_3390 -> m6_3394  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3390 -> m6_3395  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3390 -> m6_3396  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3390 -> m6_3397  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3390 -> m6_3391  [key=0, style=solid];
m6_3390 -> m6_134  [key=2, style=dotted];
m6_3390 -> m6_3401  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_3393 -> m6_3394  [key=0, style=solid];
m6_3393 -> m6_42  [key=2, style=dotted];
m6_3391 -> m6_3392  [key=0, style=solid];
m6_3391 -> m6_3401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3391 -> m6_3402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m6_3392 -> m6_3393  [key=0, style=solid];
m6_3392 -> m6_175  [key=2, style=dotted];
m6_3392 -> m6_176  [key=2, style=dotted];
m6_3392 -> m6_3399  [key=2, style=dotted];
m6_3398 -> m6_3389  [color=blue, key=0, style=bold];
m6_1160 -> m6_1161  [key=0, style=solid];
m6_1163 -> m6_24  [key=2, style=dotted];
m6_1163 -> m6_1164  [key=0, style=solid];
m6_1164 -> m6_24  [key=2, style=dotted];
m6_1164 -> m6_1165  [key=0, style=solid];
m6_1165 -> m6_24  [key=2, style=dotted];
m6_1165 -> m6_1166  [key=0, style=solid];
m6_1166 -> m6_24  [key=2, style=dotted];
m6_1166 -> m6_1167  [key=0, style=solid];
m6_1167 -> m6_24  [key=2, style=dotted];
m6_1167 -> m6_1168  [key=0, style=solid];
m6_1168 -> m6_24  [key=2, style=dotted];
m6_1168 -> m6_1169  [key=0, style=solid];
m6_1162 -> m6_1163  [key=0, style=solid];
m6_1162 -> m6_1164  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_1162 -> m6_1165  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_1162 -> m6_1166  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_1162 -> m6_1167  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_1162 -> m6_1168  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_1162 -> m6_49  [key=2, style=dotted];
m6_1161 -> m6_1162  [key=0, style=solid];
m6_1169 -> m6_1160  [color=blue, key=0, style=bold];
m6_382 -> m6_383  [key=0, style=solid];
m6_382 -> m6_296  [key=2, style=dotted];
m6_382 -> m6_365  [key=2, style=dotted];
m6_1116 -> m6_1117  [key=0, style=solid];
m6_1123 -> m6_24  [key=2, style=dotted];
m6_1123 -> m6_1124  [key=0, style=solid];
m6_1121 -> m6_24  [key=2, style=dotted];
m6_1121 -> m6_1122  [key=0, style=solid];
m6_1117 -> m6_1123  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_1117 -> m6_1118  [key=0, style=solid];
m6_1117 -> m6_196  [key=2, style=dotted];
m6_1117 -> m6_1119  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_1117 -> m6_1120  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_1122 -> m6_1123  [key=0, style=solid];
m6_1122 -> m6_49  [key=2, style=dotted];
m6_1120 -> m6_1121  [key=0, style=solid];
m6_1120 -> m6_129  [key=2, style=dotted];
m6_1120 -> m6_1122  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1118 -> m6_1119  [key=0, style=solid];
m6_1118 -> m6_832  [key=2, style=dotted];
m6_1119 -> m6_1120  [key=0, style=solid];
m6_1119 -> m6_832  [key=2, style=dotted];
m6_1124 -> m6_1116  [color=blue, key=0, style=bold];
m6_3854 -> m6_3855  [key=0, style=solid];
m6_3858 -> m6_24  [key=2, style=dotted];
m6_3858 -> m6_3859  [key=0, style=solid];
m6_3860 -> m6_24  [key=2, style=dotted];
m6_3860 -> m6_3861  [key=0, style=solid];
m6_3860 -> m6_3877  [key=2, style=dotted];
m6_3866 -> m6_24  [key=2, style=dotted];
m6_3866 -> m6_3867  [key=0, style=solid];
m6_3866 -> m6_3832  [key=2, style=dotted];
m6_3866 -> m6_3877  [key=2, style=dotted];
m6_3872 -> m6_24  [key=2, style=dotted];
m6_3872 -> m6_3873  [key=0, style=solid];
m6_3872 -> m6_3832  [key=2, style=dotted];
m6_3872 -> m6_3877  [key=2, style=dotted];
m6_3857 -> m6_3858  [key=0, style=solid];
m6_3857 -> m6_198  [key=2, style=dotted];
m6_3857 -> m6_3859  [color=darkseagreen4, key=1, label=text1, style=dashed];
m6_3859 -> m6_3860  [key=0, style=solid];
m6_3859 -> m6_296  [key=2, style=dotted];
m6_3861 -> m6_3862  [key=0, style=solid];
m6_3861 -> m6_196  [key=2, style=dotted];
m6_3861 -> m6_3863  [color=darkseagreen4, key=1, label=dict2, style=dashed];
m6_3865 -> m6_3866  [key=0, style=solid];
m6_3865 -> m6_296  [key=2, style=dotted];
m6_3867 -> m6_3868  [key=0, style=solid];
m6_3867 -> m6_196  [key=2, style=dotted];
m6_3867 -> m6_3869  [color=darkseagreen4, key=1, label=dict3, style=dashed];
m6_3871 -> m6_3872  [key=0, style=solid];
m6_3871 -> m6_296  [key=2, style=dotted];
m6_3855 -> m6_3857  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m6_3855 -> m6_3856  [key=0, style=solid];
m6_3855 -> m6_3874  [key=2, style=dotted];
m6_3855 -> m6_3862  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m6_3855 -> m6_3868  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m6_3856 -> m6_3857  [key=0, style=solid];
m6_3856 -> m6_3859  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_3856 -> m6_3865  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_3856 -> m6_3871  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_3856 -> m6_175  [key=2, style=dotted];
m6_3856 -> m6_3875  [key=2, style=dotted];
m6_3856 -> m6_3876  [key=2, style=dotted];
m6_3856 -> m6_3863  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_3856 -> m6_3869  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_3862 -> m6_3863  [key=0, style=solid];
m6_3862 -> m6_832  [key=2, style=dotted];
m6_3863 -> m6_3865  [color=darkseagreen4, key=1, label=text2, style=dashed];
m6_3863 -> m6_198  [key=2, style=dotted];
m6_3863 -> m6_3864  [key=0, style=solid];
m6_3864 -> m6_3865  [key=0, style=solid];
m6_3864 -> m6_42  [key=2, style=dotted];
m6_3868 -> m6_3869  [key=0, style=solid];
m6_3868 -> m6_832  [key=2, style=dotted];
m6_3869 -> m6_3871  [color=darkseagreen4, key=1, label=text3, style=dashed];
m6_3869 -> m6_198  [key=2, style=dotted];
m6_3869 -> m6_3870  [key=0, style=solid];
m6_3870 -> m6_3871  [key=0, style=solid];
m6_3870 -> m6_42  [key=2, style=dotted];
m6_3873 -> m6_3854  [color=blue, key=0, style=bold];
m6_164 -> m6_165  [key=0, style=solid];
m6_165 -> m6_60  [key=2, style=dotted];
m6_165 -> m6_166  [key=0, style=solid];
m6_165 -> m6_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_166 -> m6_164  [color=blue, key=0, style=bold];
m6_166 -> m6_167  [key=0, style=solid];
m6_166 -> m6_168  [key=2, style=dotted];
m6_166 -> m6_169  [key=2, style=dotted];
m6_1961 -> m6_1962  [key=0, style=solid];
m6_1972 -> m6_24  [key=2, style=dotted];
m6_1972 -> m6_1973  [key=0, style=solid];
m6_1963 -> m6_1972  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m6_1963 -> m6_1964  [key=0, style=solid];
m6_1963 -> m6_1965  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m6_1963 -> m6_1966  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m6_1963 -> m6_1967  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m6_1963 -> m6_1968  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m6_1971 -> m6_1972  [key=0, style=solid];
m6_1971 -> m6_49  [key=2, style=dotted];
m6_1964 -> m6_1102  [key=2, style=dotted];
m6_1964 -> m6_1965  [key=0, style=solid];
m6_1967 -> m6_1102  [key=2, style=dotted];
m6_1967 -> m6_1968  [key=0, style=solid];
m6_1962 -> m6_1963  [key=0, style=solid];
m6_1962 -> m6_1974  [key=2, style=dotted];
m6_1962 -> m6_1969  [color=darkseagreen4, key=1, label=personPropertyClass, style=dashed];
m6_1965 -> m6_1966  [key=0, style=solid];
m6_1966 -> m6_1967  [key=0, style=solid];
m6_1968 -> m6_1969  [key=0, style=solid];
m6_1969 -> m6_1971  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1969 -> m6_41  [key=2, style=dotted];
m6_1969 -> m6_1970  [key=0, style=solid];
m6_1970 -> m6_1971  [key=0, style=solid];
m6_1970 -> m6_42  [key=2, style=dotted];
m6_1973 -> m6_1961  [color=blue, key=0, style=bold];
m6_1364 -> m6_1365  [key=0, style=solid];
m6_1365 -> m6_60  [key=2, style=dotted];
m6_1365 -> m6_1366  [key=0, style=solid];
m6_1365 -> m6_1367  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1366 -> m6_1364  [color=blue, key=0, style=bold];
m6_2026 -> m6_2027  [key=0, style=solid];
m6_2028 -> m6_60  [key=2, style=dotted];
m6_2028 -> m6_2029  [key=0, style=solid];
m6_2028 -> m6_2030  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2027 -> m6_2031  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2027 -> m6_2028  [key=0, style=solid];
m6_2029 -> m6_2026  [color=blue, key=0, style=bold];
m6_1032 -> m6_1033  [key=0, style=solid];
m6_1035 -> m6_24  [key=2, style=dotted];
m6_1035 -> m6_1036  [key=0, style=solid];
m6_1035 -> m6_1040  [key=2, style=dotted];
m6_1035 -> m6_466  [key=2, style=dotted];
m6_1038 -> m6_24  [key=2, style=dotted];
m6_1038 -> m6_1039  [key=0, style=solid];
m6_1038 -> m6_1041  [key=2, style=dotted];
m6_1038 -> m6_466  [key=2, style=dotted];
m6_1034 -> m6_1035  [key=0, style=solid];
m6_1034 -> m6_465  [key=2, style=dotted];
m6_1034 -> m6_1036  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1036 -> m6_1037  [key=0, style=solid];
m6_1037 -> m6_1038  [key=0, style=solid];
m6_1033 -> m6_1034  [key=0, style=solid];
m6_1039 -> m6_1032  [color=blue, key=0, style=bold];
m6_421 -> m6_422  [key=0, style=solid];
m6_421 -> m6_451  [key=2, style=dotted];
m6_425 -> m6_24  [key=2, style=dotted];
m6_425 -> m6_426  [key=0, style=solid];
m6_425 -> m6_428  [key=0, style=solid];
m6_425 -> m6_295  [key=2, style=dotted];
m6_426 -> m6_24  [key=2, style=dotted];
m6_426 -> m6_427  [key=0, style=solid];
m6_426 -> m6_365  [key=2, style=dotted];
m6_427 -> m6_24  [key=2, style=dotted];
m6_427 -> m6_428  [key=0, style=solid];
m6_427 -> m6_451  [key=2, style=dotted];
m6_422 -> m6_425  [color=darkseagreen4, key=1, label=input, style=dashed];
m6_422 -> m6_426  [color=darkseagreen4, key=1, label=input, style=dashed];
m6_422 -> m6_427  [color=darkseagreen4, key=1, label=input, style=dashed];
m6_422 -> m6_423  [key=0, style=solid];
m6_422 -> m6_402  [key=2, style=dotted];
m6_422 -> m6_429  [key=2, style=dotted];
m6_422 -> m6_430  [key=2, style=dotted];
m6_422 -> m6_295  [key=2, style=dotted];
m6_424 -> m6_425  [key=0, style=solid];
m6_424 -> m6_426  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_424 -> m6_427  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_424 -> m6_49  [key=2, style=dotted];
m6_424 -> m6_451  [key=2, style=dotted];
m6_423 -> m6_129  [key=2, style=dotted];
m6_423 -> m6_424  [key=0, style=solid];
m6_423 -> m6_365  [key=2, style=dotted];
m6_428 -> m6_421  [color=blue, key=0, style=bold];
m6_428 -> m6_447  [key=0, style=solid];
m6_428 -> m6_260  [key=2, style=dotted];
m6_2713 -> m6_4182  [key=0, style=solid];
m6_4182 -> m6_4183  [key=0, style=solid];
m6_4183 -> m6_2713  [color=blue, key=0, style=bold];
m6_1579 -> m6_1580  [key=0, style=solid];
m6_1583 -> m6_24  [key=2, style=dotted];
m6_1583 -> m6_1584  [key=0, style=solid];
m6_1586 -> m6_24  [key=2, style=dotted];
m6_1586 -> m6_1587  [key=0, style=solid];
m6_1582 -> m6_1583  [key=0, style=solid];
m6_1582 -> m6_175  [key=2, style=dotted];
m6_1582 -> m6_176  [key=2, style=dotted];
m6_1582 -> m6_1584  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1584 -> m6_1585  [key=0, style=solid];
m6_1584 -> m6_175  [key=2, style=dotted];
m6_1584 -> m6_296  [key=2, style=dotted];
m6_1585 -> m6_1586  [key=0, style=solid];
m6_1585 -> m6_175  [key=2, style=dotted];
m6_1585 -> m6_176  [key=2, style=dotted];
m6_1580 -> m6_1582  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_1580 -> m6_1581  [key=0, style=solid];
m6_1580 -> m6_1578  [key=2, style=dotted];
m6_1581 -> m6_1582  [key=0, style=solid];
m6_1587 -> m6_1579  [color=blue, key=0, style=bold];
m6_3602 -> m6_3603  [key=0, style=solid];
m6_3606 -> m6_24  [key=2, style=dotted];
m6_3606 -> m6_3607  [key=0, style=solid];
m6_3606 -> m6_2357  [key=2, style=dotted];
m6_3605 -> m6_3606  [key=0, style=solid];
m6_3604 -> m6_3605  [key=0, style=solid];
m6_3604 -> m6_49  [key=2, style=dotted];
m6_3603 -> m6_3604  [key=0, style=solid];
m6_3607 -> m6_3602  [color=blue, key=0, style=bold];
m6_3254 -> m6_3255  [key=0, style=solid];
m6_3257 -> m6_24  [key=2, style=dotted];
m6_3257 -> m6_3258  [key=0, style=solid];
m6_3256 -> m6_3257  [key=0, style=solid];
m6_3256 -> m6_1149  [key=2, style=dotted];
m6_3256 -> m6_236  [key=2, style=dotted];
m6_3255 -> m6_3256  [key=0, style=solid];
m6_3258 -> m6_3254  [color=blue, key=0, style=bold];
m6_72 -> m6_70  [color=blue, key=0, style=bold];
m6_72 -> m6_73  [key=0, style=solid];
m6_475 -> m6_476  [key=0, style=solid];
m6_475 -> m6_0  [key=2, style=dotted];
m6_475 -> m6_477  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_475 -> m6_482  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_475 -> m6_484  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_475 -> m6_486  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_475 -> m6_489  [color=darkseagreen4, key=1, label=document, style=dashed];
m6_476 -> m6_533  [color=green, key=1, label=serializer, style=dashed];
m6_476 -> m6_477  [key=0, style=solid];
m6_476 -> m6_19  [key=2, style=dotted];
m6_476 -> m6_478  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_479  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_480  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_481  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_482  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m6_476 -> m6_483  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_484  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m6_476 -> m6_485  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_487  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_488  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_489  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_490  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_491  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_492  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_493  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_494  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_495  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_496  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_497  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_498  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_499  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_500  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_501  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_502  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_503  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_504  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_505  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_506  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_507  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_508  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_509  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_510  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_511  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_512  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_513  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_514  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_515  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_516  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_517  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_518  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_519  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_520  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_521  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_522  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_524  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_525  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_526  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_527  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_529  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_530  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_531  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_532  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_476 -> m6_534  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_477 -> m6_478  [key=0, style=solid];
m6_477 -> m6_536  [key=2, style=dotted];
m6_477 -> m6_479  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m6_478 -> m6_479  [key=0, style=solid];
m6_478 -> m6_490  [key=0, style=solid];
m6_478 -> m6_492  [key=2, style=dotted];
m6_479 -> m6_480  [key=0, style=solid];
m6_479 -> m6_24  [key=2, style=dotted];
m6_479 -> m6_481  [key=0, style=solid];
m6_480 -> m6_481  [key=0, style=solid];
m6_480 -> m6_490  [key=0, style=solid];
m6_480 -> m6_492  [key=2, style=dotted];
m6_481 -> m6_482  [key=0, style=solid];
m6_481 -> m6_24  [key=2, style=dotted];
m6_481 -> m6_483  [key=0, style=solid];
m6_481 -> m6_295  [key=2, style=dotted];
m6_482 -> m6_483  [key=0, style=solid];
m6_482 -> m6_485  [key=0, style=solid];
m6_482 -> m6_495  [key=2, style=dotted];
m6_483 -> m6_484  [key=0, style=solid];
m6_483 -> m6_24  [key=2, style=dotted];
m6_483 -> m6_496  [key=2, style=dotted];
m6_484 -> m6_485  [key=0, style=solid];
m6_484 -> m6_537  [key=2, style=dotted];
m6_484 -> m6_497  [key=2, style=dotted];
m6_485 -> m6_486  [key=0, style=solid];
m6_485 -> m6_537  [key=2, style=dotted];
m6_485 -> m6_24  [key=2, style=dotted];
m6_485 -> m6_489  [key=0, style=solid];
m6_487 -> m6_488  [key=0, style=solid];
m6_487 -> m6_498  [key=2, style=dotted];
m6_488 -> m6_489  [key=0, style=solid];
m6_488 -> m6_24  [key=2, style=dotted];
m6_488 -> m6_490  [key=0, style=solid];
m6_489 -> m6_490  [key=0, style=solid];
m6_489 -> m6_235  [key=2, style=dotted];
m6_489 -> m6_539  [key=2, style=dotted];
m6_490 -> m6_491  [key=0, style=solid];
m6_490 -> m6_24  [key=2, style=dotted];
m6_490 -> m6_459  [color=blue, key=0, style=bold];
m6_491 -> m6_492  [key=0, style=solid];
m6_491 -> m6_540  [key=2, style=dotted];
m6_493 -> m6_494  [key=0, style=solid];
m6_496 -> m6_497  [key=0, style=solid];
m6_496 -> m6_24  [key=2, style=dotted];
m6_498 -> m6_499  [key=0, style=solid];
m6_498 -> m6_24  [key=2, style=dotted];
m6_519 -> m6_520  [key=0, style=solid];
m6_519 -> m6_651  [key=0, style=solid];
m6_519 -> m6_655  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_519 -> m6_656  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_519 -> m6_658  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_519 -> m6_659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_519 -> m6_661  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_519 -> m6_662  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_519 -> m6_664  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_519 -> m6_665  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_519 -> m6_666  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_519 -> m6_667  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m6_519 -> m6_668  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_519 -> m6_669  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_519 -> m6_670  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_522 -> m6_523  [key=0, style=solid];
m6_522 -> m6_24  [key=2, style=dotted];
m6_522 -> m6_585  [key=0, style=solid];
m6_522 -> m6_586  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m6_522 -> m6_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_522 -> m6_589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_522 -> m6_590  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_522 -> m6_593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m6_522 -> m6_595  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_522 -> m6_602  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_522 -> m6_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m6_486 -> m6_487  [key=0, style=solid];
m6_486 -> m6_488  [color=darkseagreen4, key=1, label=element, style=dashed];
m6_486 -> m6_538  [key=2, style=dotted];
m6_2697 -> m6_2698  [key=0, style=solid];
m6_2701 -> m6_24  [key=2, style=dotted];
m6_2701 -> m6_2702  [key=0, style=solid];
m6_2700 -> m6_2701  [key=0, style=solid];
m6_2700 -> m6_49  [key=2, style=dotted];
m6_2700 -> m6_2702  [color=darkseagreen4, key=1, label=deserializedResponse, style=dashed];
m6_2702 -> m6_2703  [key=0, style=solid];
m6_2702 -> m6_2706  [key=2, style=dotted];
m6_2702 -> m6_22  [key=2, style=dotted];
m6_2699 -> m6_2700  [key=0, style=solid];
m6_2699 -> m6_41  [key=2, style=dotted];
m6_2698 -> m6_2702  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_2698 -> m6_2699  [key=0, style=solid];
m6_2698 -> m6_2704  [key=2, style=dotted];
m6_2698 -> m6_2705  [key=2, style=dotted];
m6_2698 -> m6_1715  [key=2, style=dotted];
m6_2703 -> m6_2697  [color=blue, key=0, style=bold];
m6_2670 -> m6_2671  [key=0, style=solid];
m6_2671 -> m6_716  [key=2, style=dotted];
m6_2671 -> m6_2672  [key=0, style=solid];
m6_2671 -> m6_4257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m6_2672 -> m6_2670  [color=blue, key=0, style=bold];
m6_3668 -> m6_3669  [key=0, style=solid];
m6_3669 -> m6_376  [key=2, style=dotted];
m6_3669 -> m6_1102  [key=2, style=dotted];
m6_3669 -> m6_1110  [key=2, style=dotted];
m6_3669 -> m6_134  [key=2, style=dotted];
m6_3669 -> m6_3670  [key=0, style=solid];
m6_3670 -> m6_175  [key=2, style=dotted];
m6_3670 -> m6_198  [key=2, style=dotted];
m6_3670 -> m6_3671  [key=0, style=solid];
m6_3671 -> m6_42  [key=2, style=dotted];
m6_3671 -> m6_3672  [key=0, style=solid];
m6_3672 -> m6_3668  [color=blue, key=0, style=bold];
m6_1942 -> m6_1943  [key=0, style=solid];
m6_1944 -> m6_49  [key=2, style=dotted];
m6_1944 -> m6_1945  [key=0, style=solid];
m6_1947 -> m6_22  [key=2, style=dotted];
m6_1947 -> m6_1457  [key=2, style=dotted];
m6_1947 -> m6_1948  [key=0, style=solid];
m6_1945 -> m6_21  [key=2, style=dotted];
m6_1945 -> m6_1946  [key=0, style=solid];
m6_1945 -> m6_1948  [key=0, style=solid];
m6_1943 -> m6_1944  [key=0, style=solid];
m6_1946 -> m6_1947  [key=0, style=solid];
m6_1948 -> m6_1942  [color=blue, key=0, style=bold];
m6_2718 -> m6_2719  [key=0, style=solid];
m6_2720 -> m6_24  [key=2, style=dotted];
m6_2720 -> m6_2721  [key=0, style=solid];
m6_2721 -> m6_24  [key=2, style=dotted];
m6_2721 -> m6_2722  [key=0, style=solid];
m6_2719 -> m6_2720  [key=0, style=solid];
m6_2719 -> m6_2721  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2719 -> m6_49  [key=2, style=dotted];
m6_2722 -> m6_2718  [color=blue, key=0, style=bold];
m6_3913 -> m6_3914  [key=0, style=solid];
m6_3914 -> m6_3900  [key=2, style=dotted];
m6_3914 -> m6_3915  [key=0, style=solid];
m6_3915 -> m6_3913  [color=blue, key=0, style=bold];
m6_4102 -> m6_4103  [key=0, style=solid];
m6_4103 -> m6_60  [key=2, style=dotted];
m6_4103 -> m6_4104  [key=0, style=solid];
m6_4103 -> m6_4105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_4104 -> m6_4102  [color=blue, key=0, style=bold];
m6_1067 -> m6_1068  [key=0, style=solid];
m6_1073 -> m6_24  [key=2, style=dotted];
m6_1073 -> m6_1074  [key=0, style=solid];
m6_1072 -> m6_24  [key=2, style=dotted];
m6_1072 -> m6_1073  [key=0, style=solid];
m6_1070 -> m6_1073  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m6_1070 -> m6_1071  [key=0, style=solid];
m6_1070 -> m6_1075  [key=2, style=dotted];
m6_1070 -> m6_1076  [key=2, style=dotted];
m6_1070 -> m6_1077  [key=2, style=dotted];
m6_1071 -> m6_1073  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m6_1071 -> m6_1072  [key=0, style=solid];
m6_1071 -> m6_49  [key=2, style=dotted];
m6_1068 -> m6_1070  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1068 -> m6_1071  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1068 -> m6_1069  [key=0, style=solid];
m6_1069 -> m6_1070  [key=0, style=solid];
m6_1069 -> m6_914  [key=2, style=dotted];
m6_1074 -> m6_1067  [color=blue, key=0, style=bold];
m6_2821 -> m6_2822  [key=0, style=solid];
m6_2822 -> m6_1102  [key=2, style=dotted];
m6_2822 -> m6_2823  [key=0, style=solid];
m6_2822 -> m6_2826  [key=2, style=dotted];
m6_2824 -> m6_42  [key=2, style=dotted];
m6_2824 -> m6_2825  [key=0, style=solid];
m6_2823 -> m6_41  [key=2, style=dotted];
m6_2823 -> m6_2824  [key=0, style=solid];
m6_2825 -> m6_2821  [color=blue, key=0, style=bold];
m6_3016 -> m6_3017  [key=0, style=solid];
m6_3024 -> m6_24  [key=2, style=dotted];
m6_3024 -> m6_3025  [key=0, style=solid];
m6_3025 -> m6_24  [key=2, style=dotted];
m6_3025 -> m6_3026  [key=0, style=solid];
m6_3026 -> m6_24  [key=2, style=dotted];
m6_3026 -> m6_3027  [key=0, style=solid];
m6_3023 -> m6_3024  [key=0, style=solid];
m6_3023 -> m6_175  [key=2, style=dotted];
m6_3023 -> m6_296  [key=2, style=dotted];
m6_3017 -> m6_3023  [color=darkseagreen4, key=1, label=contractResolver, style=dashed];
m6_3017 -> m6_1865  [key=2, style=dotted];
m6_3017 -> m6_3018  [key=0, style=solid];
m6_3017 -> m6_3021  [color=darkseagreen4, key=1, label=contractResolver, style=dashed];
m6_3022 -> m6_3023  [key=0, style=solid];
m6_3022 -> m6_42  [key=2, style=dotted];
m6_3021 -> m6_175  [key=2, style=dotted];
m6_3021 -> m6_198  [key=2, style=dotted];
m6_3021 -> m6_3022  [key=0, style=solid];
m6_3018 -> m6_3021  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3018 -> m6_3019  [key=0, style=solid];
m6_3018 -> m6_3028  [key=2, style=dotted];
m6_3020 -> m6_3021  [key=0, style=solid];
m6_3019 -> m6_3020  [key=0, style=solid];
m6_3027 -> m6_3016  [color=blue, key=0, style=bold];
m6_16 -> m6_17  [key=0, style=solid];
m6_131 -> m6_133  [key=0, style=solid];
m6_131 -> m6_132  [key=0, style=solid];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_135  [key=2, style=dotted];
m6_132 -> m6_131  [color=blue, key=0, style=bold];
m6_854 -> m6_855  [key=0, style=solid];
m6_857 -> m6_24  [key=2, style=dotted];
m6_857 -> m6_858  [key=0, style=solid];
m6_856 -> m6_857  [key=0, style=solid];
m6_856 -> m6_129  [key=2, style=dotted];
m6_855 -> m6_856  [key=0, style=solid];
m6_855 -> m6_859  [key=2, style=dotted];
m6_858 -> m6_854  [color=blue, key=0, style=bold];
m6_963 -> m6_964  [key=0, style=solid];
m6_975 -> m6_24  [key=2, style=dotted];
m6_975 -> m6_976  [key=0, style=solid];
m6_964 -> m6_975  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m6_964 -> m6_954  [key=2, style=dotted];
m6_964 -> m6_965  [key=0, style=solid];
m6_964 -> m6_966  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m6_974 -> m6_975  [key=0, style=solid];
m6_967 -> m6_129  [key=2, style=dotted];
m6_967 -> m6_968  [key=0, style=solid];
m6_967 -> m6_973  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m6_965 -> m6_967  [color=darkseagreen4, key=1, label=testDictionary, style=dashed];
m6_965 -> m6_966  [key=0, style=solid];
m6_965 -> m6_196  [key=2, style=dotted];
m6_965 -> m6_970  [color=darkseagreen4, key=1, label=testDictionary, style=dashed];
m6_966 -> m6_967  [key=0, style=solid];
m6_973 -> m6_974  [key=0, style=solid];
m6_973 -> m6_936  [key=2, style=dotted];
m6_968 -> m6_969  [key=0, style=solid];
m6_968 -> m6_834  [key=2, style=dotted];
m6_968 -> m6_970  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_968 -> m6_971  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_970 -> m6_971  [key=0, style=solid];
m6_970 -> m6_915  [key=2, style=dotted];
m6_972 -> m6_973  [key=0, style=solid];
m6_972 -> m6_917  [key=2, style=dotted];
m6_971 -> m6_916  [key=2, style=dotted];
m6_971 -> m6_972  [key=0, style=solid];
m6_969 -> m6_914  [key=2, style=dotted];
m6_969 -> m6_970  [key=0, style=solid];
m6_976 -> m6_963  [color=blue, key=0, style=bold];
m6_2141 -> m6_2142  [key=0, style=solid];
m6_2142 -> m6_2143  [key=0, style=solid];
m6_2142 -> m6_2144  [key=2, style=dotted];
m6_2143 -> m6_2141  [color=blue, key=0, style=bold];
m6_4070 -> m6_4071  [key=0, style=solid];
m6_4075 -> m6_24  [key=2, style=dotted];
m6_4075 -> m6_4076  [key=0, style=solid];
m6_4076 -> m6_24  [key=2, style=dotted];
m6_4076 -> m6_4077  [key=0, style=solid];
m6_4074 -> m6_4075  [key=0, style=solid];
m6_4074 -> m6_4076  [color=darkseagreen4, key=1, label=clonedObject, style=dashed];
m6_4074 -> m6_296  [key=2, style=dotted];
m6_4072 -> m6_4074  [color=darkseagreen4, key=1, label=serializerSettings, style=dashed];
m6_4072 -> m6_175  [key=2, style=dotted];
m6_4072 -> m6_4073  [key=0, style=solid];
m6_4073 -> m6_4074  [key=0, style=solid];
m6_4073 -> m6_176  [key=2, style=dotted];
m6_4071 -> m6_4072  [key=0, style=solid];
m6_4071 -> m6_4073  [color=darkseagreen4, key=1, label=original, style=dashed];
m6_4071 -> m6_4078  [key=2, style=dotted];
m6_4077 -> m6_4070  [color=blue, key=0, style=bold];
m6_176 -> m6_177  [key=0, style=solid];
m6_1667 -> m6_1668  [key=0, style=solid];
m6_1670 -> m6_24  [key=2, style=dotted];
m6_1670 -> m6_1671  [key=0, style=solid];
m6_1671 -> m6_24  [key=2, style=dotted];
m6_1671 -> m6_1672  [key=0, style=solid];
m6_1672 -> m6_24  [key=2, style=dotted];
m6_1672 -> m6_1673  [key=0, style=solid];
m6_1673 -> m6_24  [key=2, style=dotted];
m6_1673 -> m6_1674  [key=0, style=solid];
m6_1674 -> m6_24  [key=2, style=dotted];
m6_1674 -> m6_1675  [key=0, style=solid];
m6_1675 -> m6_24  [key=2, style=dotted];
m6_1675 -> m6_1676  [key=0, style=solid];
m6_1675 -> m6_1681  [key=2, style=dotted];
m6_1676 -> m6_24  [key=2, style=dotted];
m6_1676 -> m6_1677  [key=0, style=solid];
m6_1676 -> m6_1681  [key=2, style=dotted];
m6_1677 -> m6_24  [key=2, style=dotted];
m6_1677 -> m6_1678  [key=0, style=solid];
m6_1678 -> m6_24  [key=2, style=dotted];
m6_1678 -> m6_1679  [key=0, style=solid];
m6_1669 -> m6_1670  [key=0, style=solid];
m6_1669 -> m6_1671  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1669 -> m6_1672  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1669 -> m6_1673  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1669 -> m6_1674  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1669 -> m6_1675  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1669 -> m6_1676  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1669 -> m6_1677  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1669 -> m6_1678  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1669 -> m6_175  [key=2, style=dotted];
m6_1669 -> m6_296  [key=2, style=dotted];
m6_1669 -> m6_1679  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1679 -> m6_1680  [key=0, style=solid];
m6_1679 -> m6_797  [key=2, style=dotted];
m6_1668 -> m6_1669  [key=0, style=solid];
m6_1680 -> m6_1667  [color=blue, key=0, style=bold];
m6_1384 -> m6_1385  [key=0, style=solid];
m6_1388 -> m6_24  [key=2, style=dotted];
m6_1388 -> m6_1389  [key=0, style=solid];
m6_1387 -> m6_1388  [key=0, style=solid];
m6_1387 -> m6_129  [key=2, style=dotted];
m6_1385 -> m6_1387  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m6_1385 -> m6_1386  [key=0, style=solid];
m6_1385 -> m6_1390  [key=2, style=dotted];
m6_1385 -> m6_1391  [key=2, style=dotted];
m6_1386 -> m6_1387  [key=0, style=solid];
m6_1389 -> m6_1384  [color=blue, key=0, style=bold];
m6_891 -> m6_892  [key=0, style=solid];
m6_898 -> m6_42  [key=2, style=dotted];
m6_898 -> m6_899  [key=0, style=solid];
m6_897 -> m6_870  [key=2, style=dotted];
m6_897 -> m6_898  [key=0, style=solid];
m6_892 -> m6_897  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_892 -> m6_893  [key=0, style=solid];
m6_892 -> m6_900  [key=2, style=dotted];
m6_892 -> m6_894  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_892 -> m6_895  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_892 -> m6_896  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_896 -> m6_897  [key=0, style=solid];
m6_893 -> m6_894  [key=0, style=solid];
m6_894 -> m6_895  [key=0, style=solid];
m6_895 -> m6_896  [key=0, style=solid];
m6_899 -> m6_891  [color=blue, key=0, style=bold];
m6_2115 -> m6_2116  [key=0, style=solid];
m6_2116 -> m6_2117  [key=0, style=solid];
m6_2116 -> m6_2118  [key=2, style=dotted];
m6_2117 -> m6_2115  [color=blue, key=0, style=bold];
m6_3507 -> m6_3508  [key=0, style=solid];
m6_3510 -> m6_42  [key=2, style=dotted];
m6_3510 -> m6_3511  [key=0, style=solid];
m6_3513 -> m6_42  [key=2, style=dotted];
m6_3513 -> m6_3514  [key=0, style=solid];
m6_3509 -> m6_41  [key=2, style=dotted];
m6_3509 -> m6_3510  [key=0, style=solid];
m6_3512 -> m6_41  [key=2, style=dotted];
m6_3512 -> m6_3513  [key=0, style=solid];
m6_3511 -> m6_3512  [key=0, style=solid];
m6_3511 -> m6_3516  [key=2, style=dotted];
m6_3508 -> m6_3509  [key=0, style=solid];
m6_3508 -> m6_3515  [key=2, style=dotted];
m6_3514 -> m6_3507  [color=blue, key=0, style=bold];
m6_4170 -> m6_4171  [key=0, style=solid];
m6_4171 -> m6_20  [key=2, style=dotted];
m6_4171 -> m6_4172  [key=0, style=solid];
m6_4171 -> m6_4174  [color=darkseagreen4, key=1, label=encodingName, style=dashed];
m6_4172 -> m6_4173  [key=0, style=solid];
m6_4172 -> m6_4174  [key=0, style=solid];
m6_4174 -> m6_4175  [key=0, style=solid];
m6_4174 -> m6_4176  [key=2, style=dotted];
m6_4173 -> m6_4175  [key=0, style=solid];
m6_4175 -> m6_4170  [color=blue, key=0, style=bold];
m6_881 -> m6_882  [key=0, style=solid];
m6_888 -> m6_42  [key=2, style=dotted];
m6_888 -> m6_889  [key=0, style=solid];
m6_887 -> m6_870  [key=2, style=dotted];
m6_887 -> m6_888  [key=0, style=solid];
m6_882 -> m6_887  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_882 -> m6_883  [key=0, style=solid];
m6_882 -> m6_890  [key=2, style=dotted];
m6_882 -> m6_884  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_882 -> m6_885  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_882 -> m6_886  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_886 -> m6_887  [key=0, style=solid];
m6_883 -> m6_884  [key=0, style=solid];
m6_884 -> m6_885  [key=0, style=solid];
m6_885 -> m6_886  [key=0, style=solid];
m6_889 -> m6_881  [color=blue, key=0, style=bold];
m6_465 -> m6_466  [key=0, style=solid];
m6_465 -> m6_471  [key=0, style=solid];
m6_465 -> m6_491  [key=2, style=dotted];
m6_466 -> m6_467  [key=0, style=solid];
m6_466 -> m6_468  [key=0, style=solid];
m6_2562 -> m6_2563  [key=0, style=solid];
m6_2564 -> m6_24  [key=2, style=dotted];
m6_2564 -> m6_2565  [key=0, style=solid];
m6_2564 -> m6_2561  [key=2, style=dotted];
m6_2564 -> m6_954  [key=2, style=dotted];
m6_2564 -> m6_1110  [key=2, style=dotted];
m6_2563 -> m6_2564  [key=0, style=solid];
m6_2563 -> m6_49  [key=2, style=dotted];
m6_2565 -> m6_2562  [color=blue, key=0, style=bold];
m6_2768 -> m6_2769  [key=0, style=solid];
m6_2771 -> m6_24  [key=2, style=dotted];
m6_2771 -> m6_2772  [key=0, style=solid];
m6_2772 -> m6_24  [key=2, style=dotted];
m6_2772 -> m6_2773  [key=0, style=solid];
m6_2773 -> m6_24  [key=2, style=dotted];
m6_2773 -> m6_2774  [key=0, style=solid];
m6_2770 -> m6_2771  [key=0, style=solid];
m6_2770 -> m6_2772  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m6_2770 -> m6_2773  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m6_2770 -> m6_49  [key=2, style=dotted];
m6_2769 -> m6_2770  [key=0, style=solid];
m6_2774 -> m6_2768  [color=blue, key=0, style=bold];
m6_1744 -> m6_1745  [key=0, style=solid];
m6_1747 -> m6_24  [key=2, style=dotted];
m6_1747 -> m6_1748  [key=0, style=solid];
m6_1746 -> m6_1747  [key=0, style=solid];
m6_1746 -> m6_49  [key=2, style=dotted];
m6_1745 -> m6_1746  [key=0, style=solid];
m6_1748 -> m6_1744  [color=blue, key=0, style=bold];
m6_177 -> m6_178  [key=0, style=solid];
m6_177 -> m6_179  [key=2, style=dotted];
m6_177 -> m6_180  [key=2, style=dotted];
m6_178 -> m6_176  [color=blue, key=0, style=bold];
m6_178 -> m6_60  [key=2, style=dotted];
m6_178 -> m6_179  [key=0, style=solid];
m6_178 -> m6_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1104 -> m6_1105  [key=0, style=solid];
m6_1107 -> m6_24  [key=2, style=dotted];
m6_1107 -> m6_1108  [key=0, style=solid];
m6_1106 -> m6_1107  [key=0, style=solid];
m6_1106 -> m6_129  [key=2, style=dotted];
m6_1105 -> m6_376  [key=2, style=dotted];
m6_1105 -> m6_1106  [key=0, style=solid];
m6_1105 -> m6_1102  [key=2, style=dotted];
m6_1105 -> m6_1110  [key=2, style=dotted];
m6_1105 -> m6_134  [key=2, style=dotted];
m6_1105 -> m6_1109  [key=2, style=dotted];
m6_1108 -> m6_1104  [color=blue, key=0, style=bold];
m6_196 -> m6_195  [color=blue, key=0, style=bold];
m6_2723 -> m6_2724  [key=0, style=solid];
m6_2725 -> m6_24  [key=2, style=dotted];
m6_2725 -> m6_2726  [key=0, style=solid];
m6_2726 -> m6_24  [key=2, style=dotted];
m6_2726 -> m6_2727  [key=0, style=solid];
m6_2727 -> m6_24  [key=2, style=dotted];
m6_2727 -> m6_2728  [key=0, style=solid];
m6_2724 -> m6_2725  [key=0, style=solid];
m6_2724 -> m6_2726  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2724 -> m6_2727  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2724 -> m6_49  [key=2, style=dotted];
m6_2728 -> m6_2723  [color=blue, key=0, style=bold];
m6_3226 -> m6_3227  [key=0, style=solid];
m6_3227 -> m6_60  [key=2, style=dotted];
m6_3227 -> m6_3228  [key=0, style=solid];
m6_3227 -> m6_3229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3228 -> m6_3226  [color=blue, key=0, style=bold];
m6_3483 -> m6_3490  [key=0, style=solid];
m6_3491 -> m6_19  [key=2, style=dotted];
m6_3491 -> m6_3492  [key=0, style=solid];
m6_3491 -> m6_3493  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_3490 -> m6_3491  [key=0, style=solid];
m6_3490 -> m6_16  [key=2, style=dotted];
m6_3490 -> m6_373  [key=2, style=dotted];
m6_3490 -> m6_3493  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m6_3492 -> m6_3493  [key=0, style=solid];
m6_3492 -> m6_1865  [key=2, style=dotted];
m6_3493 -> m6_3494  [key=0, style=solid];
m6_3493 -> m6_2524  [key=2, style=dotted];
m6_3494 -> m6_3483  [color=blue, key=0, style=bold];
m6_24 -> m6_25  [key=0, style=solid];
m6_3178 -> m6_3179  [key=0, style=solid];
m6_3180 -> m6_24  [key=2, style=dotted];
m6_3180 -> m6_3181  [key=0, style=solid];
m6_3182 -> m6_24  [key=2, style=dotted];
m6_3182 -> m6_3183  [key=0, style=solid];
m6_3184 -> m6_24  [key=2, style=dotted];
m6_3184 -> m6_3185  [key=0, style=solid];
m6_3186 -> m6_24  [key=2, style=dotted];
m6_3186 -> m6_3187  [key=0, style=solid];
m6_3179 -> m6_3180  [key=0, style=solid];
m6_3179 -> m6_129  [key=2, style=dotted];
m6_3179 -> m6_3188  [key=2, style=dotted];
m6_3179 -> m6_3181  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3181 -> m6_3182  [key=0, style=solid];
m6_3181 -> m6_49  [key=2, style=dotted];
m6_3183 -> m6_3184  [key=0, style=solid];
m6_3183 -> m6_129  [key=2, style=dotted];
m6_3183 -> m6_3188  [key=2, style=dotted];
m6_3183 -> m6_3185  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3185 -> m6_3186  [key=0, style=solid];
m6_3185 -> m6_49  [key=2, style=dotted];
m6_3187 -> m6_3178  [color=blue, key=0, style=bold];
m6_1111 -> m6_1112  [key=0, style=solid];
m6_1114 -> m6_24  [key=2, style=dotted];
m6_1114 -> m6_1115  [key=0, style=solid];
m6_1113 -> m6_1114  [key=0, style=solid];
m6_1113 -> m6_175  [key=2, style=dotted];
m6_1113 -> m6_176  [key=2, style=dotted];
m6_1112 -> m6_376  [key=2, style=dotted];
m6_1112 -> m6_1113  [key=0, style=solid];
m6_1112 -> m6_1102  [key=2, style=dotted];
m6_1112 -> m6_1110  [key=2, style=dotted];
m6_1112 -> m6_134  [key=2, style=dotted];
m6_1112 -> m6_1109  [key=2, style=dotted];
m6_1115 -> m6_1111  [color=blue, key=0, style=bold];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_123  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m6_119 -> m6_124  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m6_119 -> m6_125  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m6_119 -> m6_126  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m6_119 -> m6_128  [key=2, style=dotted];
m6_120 -> m6_119  [color=blue, key=0, style=bold];
m6_120 -> m6_122  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_120 -> m6_129  [key=2, style=dotted];
m6_120 -> m6_121  [key=0, style=solid];
m6_136 -> m6_137  [key=0, style=solid];
m6_3878 -> m6_3879  [key=0, style=solid];
m6_3882 -> m6_24  [key=2, style=dotted];
m6_3882 -> m6_3883  [key=0, style=solid];
m6_3881 -> m6_3882  [key=0, style=solid];
m6_3881 -> m6_129  [key=2, style=dotted];
m6_3881 -> m6_3883  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3883 -> m6_3884  [key=0, style=solid];
m6_3883 -> m6_49  [key=2, style=dotted];
m6_3879 -> m6_3881  [color=darkseagreen4, key=1, label=product, style=dashed];
m6_3879 -> m6_3880  [key=0, style=solid];
m6_3879 -> m6_3885  [key=2, style=dotted];
m6_3880 -> m6_3881  [key=0, style=solid];
m6_3880 -> m6_196  [key=2, style=dotted];
m6_3884 -> m6_3878  [color=blue, key=0, style=bold];
m6_1226 -> m6_1227  [key=0, style=solid];
m6_1228 -> m6_175  [key=2, style=dotted];
m6_1228 -> m6_1229  [key=0, style=solid];
m6_1228 -> m6_1230  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_1229 -> m6_176  [key=2, style=dotted];
m6_1229 -> m6_1230  [key=0, style=solid];
m6_1229 -> m6_1231  [color=darkseagreen4, key=1, label=indented, style=dashed];
m6_1230 -> m6_198  [key=2, style=dotted];
m6_1230 -> m6_1231  [key=0, style=solid];
m6_1227 -> m6_1228  [key=0, style=solid];
m6_1227 -> m6_1229  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_1227 -> m6_1230  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_1231 -> m6_1232  [key=0, style=solid];
m6_1231 -> m6_1233  [key=2, style=dotted];
m6_1232 -> m6_1226  [color=blue, key=0, style=bold];
m6_3786 -> m6_3787  [key=0, style=solid];
m6_3787 -> m6_1865  [key=2, style=dotted];
m6_3787 -> m6_175  [key=2, style=dotted];
m6_3787 -> m6_198  [key=2, style=dotted];
m6_3787 -> m6_3788  [key=0, style=solid];
m6_3787 -> m6_3790  [key=2, style=dotted];
m6_3788 -> m6_42  [key=2, style=dotted];
m6_3788 -> m6_3789  [key=0, style=solid];
m6_3789 -> m6_3786  [color=blue, key=0, style=bold];
m6_3146 -> m6_3147  [key=0, style=solid];
m6_3147 -> m6_60  [key=2, style=dotted];
m6_3147 -> m6_3148  [key=0, style=solid];
m6_3147 -> m6_3149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3148 -> m6_3146  [color=blue, key=0, style=bold];
m6_2145 -> m6_2146  [key=0, style=solid];
m6_2149 -> m6_24  [key=2, style=dotted];
m6_2149 -> m6_2150  [key=0, style=solid];
m6_2151 -> m6_24  [key=2, style=dotted];
m6_2151 -> m6_2152  [key=0, style=solid];
m6_2152 -> m6_24  [key=2, style=dotted];
m6_2152 -> m6_2153  [key=0, style=solid];
m6_2148 -> m6_2149  [key=0, style=solid];
m6_2148 -> m6_129  [key=2, style=dotted];
m6_2148 -> m6_2150  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2150 -> m6_2151  [key=0, style=solid];
m6_2150 -> m6_2152  [color=darkseagreen4, key=1, label=newModelStateDictionary, style=dashed];
m6_2150 -> m6_49  [key=2, style=dotted];
m6_2146 -> m6_2148  [color=darkseagreen4, key=1, label=modelStateDictionary, style=dashed];
m6_2146 -> m6_2147  [key=0, style=solid];
m6_2146 -> m6_2087  [key=2, style=dotted];
m6_2147 -> m6_2148  [key=0, style=solid];
m6_2147 -> m6_2100  [key=2, style=dotted];
m6_2153 -> m6_2145  [color=blue, key=0, style=bold];
m6_2752 -> m6_2753  [key=0, style=solid];
m6_2753 -> m6_60  [key=2, style=dotted];
m6_2753 -> m6_2754  [key=0, style=solid];
m6_2753 -> m6_2755  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2754 -> m6_2752  [color=blue, key=0, style=bold];
m6_4078 -> m6_4079  [key=0, style=solid];
m6_4079 -> m6_4080  [key=0, style=solid];
m6_4080 -> m6_4078  [color=blue, key=0, style=bold];
m6_2799 -> m6_2800  [key=0, style=solid];
m6_2805 -> m6_24  [key=2, style=dotted];
m6_2805 -> m6_2806  [key=0, style=solid];
m6_2804 -> m6_2805  [key=0, style=solid];
m6_2804 -> m6_916  [key=2, style=dotted];
m6_2804 -> m6_2808  [key=2, style=dotted];
m6_2804 -> m6_917  [key=2, style=dotted];
m6_2803 -> m6_2804  [key=0, style=solid];
m6_2803 -> m6_915  [key=2, style=dotted];
m6_2802 -> m6_2804  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_2802 -> m6_2803  [key=0, style=solid];
m6_2802 -> m6_834  [key=2, style=dotted];
m6_2800 -> m6_2803  [color=darkseagreen4, key=1, label=cc, style=dashed];
m6_2800 -> m6_2801  [key=0, style=solid];
m6_2800 -> m6_2798  [key=2, style=dotted];
m6_2801 -> m6_2803  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_2801 -> m6_2802  [key=0, style=solid];
m6_2801 -> m6_2807  [key=2, style=dotted];
m6_2806 -> m6_2799  [color=blue, key=0, style=bold];
m6_2809 -> m6_2810  [key=0, style=solid];
m6_2812 -> m6_24  [key=2, style=dotted];
m6_2812 -> m6_2813  [key=0, style=solid];
m6_2811 -> m6_2812  [key=0, style=solid];
m6_2811 -> m6_129  [key=2, style=dotted];
m6_2810 -> m6_2811  [key=0, style=solid];
m6_2810 -> m6_2814  [key=2, style=dotted];
m6_2813 -> m6_2809  [color=blue, key=0, style=bold];
m6_3985 -> m6_3986  [key=0, style=solid];
m6_3993 -> m6_24  [key=2, style=dotted];
m6_3993 -> m6_3994  [key=0, style=solid];
m6_3998 -> m6_24  [key=2, style=dotted];
m6_3998 -> m6_3999  [key=0, style=solid];
m6_3991 -> m6_24  [key=2, style=dotted];
m6_3991 -> m6_3992  [key=0, style=solid];
m6_3996 -> m6_24  [key=2, style=dotted];
m6_3996 -> m6_3997  [key=0, style=solid];
m6_3997 -> m6_24  [key=2, style=dotted];
m6_3997 -> m6_3998  [key=0, style=solid];
m6_3997 -> m6_375  [key=2, style=dotted];
m6_4001 -> m6_24  [key=2, style=dotted];
m6_4001 -> m6_4002  [key=0, style=solid];
m6_4002 -> m6_24  [key=2, style=dotted];
m6_4002 -> m6_4003  [key=0, style=solid];
m6_4002 -> m6_375  [key=2, style=dotted];
m6_4003 -> m6_24  [key=2, style=dotted];
m6_4003 -> m6_4004  [key=0, style=solid];
m6_3986 -> m6_540  [key=2, style=dotted];
m6_3986 -> m6_3987  [key=0, style=solid];
m6_3986 -> m6_3989  [color=darkseagreen4, key=1, label=culture, style=dashed];
m6_3986 -> m6_3994  [color=darkseagreen4, key=1, label=culture, style=dashed];
m6_3986 -> m6_3999  [color=darkseagreen4, key=1, label=culture, style=dashed];
m6_3987 -> m6_3993  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_3987 -> m6_3998  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_3987 -> m6_954  [key=2, style=dotted];
m6_3987 -> m6_3988  [key=0, style=solid];
m6_3987 -> m6_3990  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_3992 -> m6_3993  [key=0, style=solid];
m6_3992 -> m6_296  [key=2, style=dotted];
m6_3994 -> m6_16  [key=2, style=dotted];
m6_3994 -> m6_373  [key=2, style=dotted];
m6_3994 -> m6_3995  [key=0, style=solid];
m6_3995 -> m6_3998  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_3995 -> m6_3996  [key=0, style=solid];
m6_3995 -> m6_3997  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_3995 -> m6_3357  [key=2, style=dotted];
m6_3999 -> m6_16  [key=2, style=dotted];
m6_3999 -> m6_373  [key=2, style=dotted];
m6_3999 -> m6_4000  [key=0, style=solid];
m6_3990 -> m6_3991  [key=0, style=solid];
m6_3990 -> m6_3992  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3990 -> m6_3994  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3990 -> m6_176  [key=2, style=dotted];
m6_4000 -> m6_4001  [key=0, style=solid];
m6_4000 -> m6_4002  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_4000 -> m6_4003  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_4000 -> m6_3357  [key=2, style=dotted];
m6_3989 -> m6_3992  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_3989 -> m6_3990  [key=0, style=solid];
m6_3989 -> m6_175  [key=2, style=dotted];
m6_3988 -> m6_3994  [color=darkseagreen4, key=1, label=dateFormatString, style=dashed];
m6_3988 -> m6_3999  [color=darkseagreen4, key=1, label=dateFormatString, style=dashed];
m6_3988 -> m6_3989  [key=0, style=solid];
m6_4004 -> m6_3985  [color=blue, key=0, style=bold];
m6_4121 -> m6_4122  [key=0, style=solid];
m6_4123 -> m6_60  [key=2, style=dotted];
m6_4123 -> m6_4124  [key=0, style=solid];
m6_4123 -> m6_4125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_4122 -> m6_4126  [color=darkseagreen4, key=1, label=JsonMessage, style=dashed];
m6_4122 -> m6_4123  [key=0, style=solid];
m6_4124 -> m6_4121  [color=blue, key=0, style=bold];
m6_746 -> m6_747  [key=0, style=solid];
m6_746 -> m6_748  [key=0, style=solid];
m6_746 -> m6_491  [key=2, style=dotted];
m6_1884 -> m6_1885  [key=0, style=solid];
m6_1890 -> m6_24  [key=2, style=dotted];
m6_1890 -> m6_1891  [key=0, style=solid];
m6_1889 -> m6_1890  [key=0, style=solid];
m6_1889 -> m6_129  [key=2, style=dotted];
m6_1885 -> m6_1889  [color=darkseagreen4, key=1, label=strings, style=dashed];
m6_1885 -> m6_134  [key=2, style=dotted];
m6_1885 -> m6_1886  [key=0, style=solid];
m6_1885 -> m6_1887  [color=darkseagreen4, key=1, label=strings, style=dashed];
m6_1885 -> m6_1888  [color=darkseagreen4, key=1, label=strings, style=dashed];
m6_1888 -> m6_1889  [key=0, style=solid];
m6_1888 -> m6_1892  [key=2, style=dotted];
m6_1886 -> m6_1887  [key=0, style=solid];
m6_1886 -> m6_1892  [key=2, style=dotted];
m6_1887 -> m6_1888  [key=0, style=solid];
m6_1887 -> m6_1892  [key=2, style=dotted];
m6_1891 -> m6_1884  [color=blue, key=0, style=bold];
m6_1893 -> m6_1894  [key=0, style=solid];
m6_1898 -> m6_24  [key=2, style=dotted];
m6_1898 -> m6_1899  [key=0, style=solid];
m6_1899 -> m6_24  [key=2, style=dotted];
m6_1899 -> m6_1900  [key=0, style=solid];
m6_1897 -> m6_1898  [key=0, style=solid];
m6_1897 -> m6_1899  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_1897 -> m6_49  [key=2, style=dotted];
m6_1895 -> m6_1897  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1895 -> m6_41  [key=2, style=dotted];
m6_1895 -> m6_1896  [key=0, style=solid];
m6_1896 -> m6_1897  [key=0, style=solid];
m6_1896 -> m6_42  [key=2, style=dotted];
m6_1894 -> m6_1895  [key=0, style=solid];
m6_1894 -> m6_1901  [key=2, style=dotted];
m6_1900 -> m6_1893  [color=blue, key=0, style=bold];
m6_3189 -> m6_3190  [key=0, style=solid];
m6_3191 -> m6_24  [key=2, style=dotted];
m6_3191 -> m6_3192  [key=0, style=solid];
m6_3193 -> m6_24  [key=2, style=dotted];
m6_3193 -> m6_3194  [key=0, style=solid];
m6_3193 -> m6_3196  [key=2, style=dotted];
m6_3190 -> m6_3191  [key=0, style=solid];
m6_3190 -> m6_129  [key=2, style=dotted];
m6_3190 -> m6_3195  [key=2, style=dotted];
m6_3190 -> m6_3196  [key=2, style=dotted];
m6_3192 -> m6_3193  [key=0, style=solid];
m6_3192 -> m6_49  [key=2, style=dotted];
m6_3194 -> m6_3189  [color=blue, key=0, style=bold];
m6_3404 -> m6_3405  [key=0, style=solid];
m6_3408 -> m6_24  [key=2, style=dotted];
m6_3408 -> m6_3409  [key=0, style=solid];
m6_3409 -> m6_24  [key=2, style=dotted];
m6_3409 -> m6_3410  [key=0, style=solid];
m6_3410 -> m6_24  [key=2, style=dotted];
m6_3410 -> m6_3411  [key=0, style=solid];
m6_3406 -> m6_3408  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3406 -> m6_3409  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3406 -> m6_3410  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3406 -> m6_3407  [key=0, style=solid];
m6_3406 -> m6_49  [key=2, style=dotted];
m6_3407 -> m6_3408  [key=0, style=solid];
m6_3407 -> m6_797  [key=2, style=dotted];
m6_3405 -> m6_3406  [key=0, style=solid];
m6_3405 -> m6_3412  [key=2, style=dotted];
m6_3411 -> m6_3404  [color=blue, key=0, style=bold];
m6_373 -> m6_374  [key=0, style=solid];
m6_373 -> m6_375  [key=0, style=solid];
m6_373 -> m6_323  [key=2, style=dotted];
m6_373 -> m6_448  [key=2, style=dotted];
m6_373 -> m6_456  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_36 -> m6_41  [key=2, style=dotted];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_34  [color=blue, key=0, style=bold];
m6_34 -> m6_36  [color=darkseagreen4, key=1, label=mySubclass, style=dashed];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_25  [key=2, style=dotted];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_38  [color=darkseagreen4, key=1, label=myMainClass, style=dashed];
m6_35 -> m6_29  [key=2, style=dotted];
m6_35 -> m6_6  [key=2, style=dotted];
m6_35 -> m6_37  [key=2, style=dotted];
m6_334 -> m6_335  [key=0, style=solid];
m6_334 -> m6_336  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_334 -> m6_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_3259 -> m6_3260  [key=0, style=solid];
m6_3261 -> m6_24  [key=2, style=dotted];
m6_3261 -> m6_3262  [key=0, style=solid];
m6_3261 -> m6_3271  [key=2, style=dotted];
m6_3261 -> m6_3272  [key=2, style=dotted];
m6_3262 -> m6_24  [key=2, style=dotted];
m6_3262 -> m6_3263  [key=0, style=solid];
m6_3262 -> m6_3273  [key=2, style=dotted];
m6_3263 -> m6_24  [key=2, style=dotted];
m6_3263 -> m6_3264  [key=0, style=solid];
m6_3264 -> m6_24  [key=2, style=dotted];
m6_3264 -> m6_3265  [key=0, style=solid];
m6_3266 -> m6_24  [key=2, style=dotted];
m6_3266 -> m6_3267  [key=0, style=solid];
m6_3266 -> m6_3271  [key=2, style=dotted];
m6_3266 -> m6_3272  [key=2, style=dotted];
m6_3267 -> m6_24  [key=2, style=dotted];
m6_3267 -> m6_3268  [key=0, style=solid];
m6_3267 -> m6_3273  [key=2, style=dotted];
m6_3268 -> m6_24  [key=2, style=dotted];
m6_3268 -> m6_3269  [key=0, style=solid];
m6_3269 -> m6_24  [key=2, style=dotted];
m6_3269 -> m6_3270  [key=0, style=solid];
m6_3260 -> m6_3261  [key=0, style=solid];
m6_3260 -> m6_3262  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3260 -> m6_3263  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3260 -> m6_3264  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3260 -> m6_175  [key=2, style=dotted];
m6_3260 -> m6_296  [key=2, style=dotted];
m6_3265 -> m6_3266  [key=0, style=solid];
m6_3265 -> m6_3267  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3265 -> m6_3268  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3265 -> m6_3269  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_3265 -> m6_175  [key=2, style=dotted];
m6_3265 -> m6_296  [key=2, style=dotted];
m6_3270 -> m6_3259  [color=blue, key=0, style=bold];
m6_1263 -> m6_1264  [key=0, style=solid];
m6_1265 -> m6_24  [key=2, style=dotted];
m6_1265 -> m6_1266  [key=0, style=solid];
m6_1267 -> m6_24  [key=2, style=dotted];
m6_1267 -> m6_1268  [key=0, style=solid];
m6_1268 -> m6_24  [key=2, style=dotted];
m6_1268 -> m6_1269  [key=0, style=solid];
m6_1264 -> m6_1265  [key=0, style=solid];
m6_1264 -> m6_129  [key=2, style=dotted];
m6_1264 -> m6_1270  [key=2, style=dotted];
m6_1266 -> m6_1267  [key=0, style=solid];
m6_1266 -> m6_1268  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1266 -> m6_49  [key=2, style=dotted];
m6_1269 -> m6_1263  [color=blue, key=0, style=bold];
m6_2881 -> m6_2882  [key=0, style=solid];
m6_2883 -> m6_42  [key=2, style=dotted];
m6_2883 -> m6_2884  [key=0, style=solid];
m6_2885 -> m6_42  [key=2, style=dotted];
m6_2885 -> m6_2886  [key=0, style=solid];
m6_2882 -> m6_41  [key=2, style=dotted];
m6_2882 -> m6_2883  [key=0, style=solid];
m6_2882 -> m6_2887  [key=2, style=dotted];
m6_2884 -> m6_41  [key=2, style=dotted];
m6_2884 -> m6_2885  [key=0, style=solid];
m6_2884 -> m6_2888  [key=2, style=dotted];
m6_2886 -> m6_2881  [color=blue, key=0, style=bold];
m6_125 -> m6_24  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_126 -> m6_24  [key=2, style=dotted];
m6_126 -> m6_127  [key=0, style=solid];
m6_127 -> m6_118  [color=blue, key=0, style=bold];
m6_127 -> m6_125  [color=blue, key=0, style=bold];
m6_1839 -> m6_1840  [key=0, style=solid];
m6_1841 -> m6_60  [key=2, style=dotted];
m6_1841 -> m6_1842  [key=0, style=solid];
m6_1841 -> m6_1843  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1840 -> m6_1841  [key=0, style=solid];
m6_1840 -> m6_1844  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1842 -> m6_1839  [color=blue, key=0, style=bold];
m6_3436 -> m6_3437  [key=0, style=solid];
m6_3441 -> m6_24  [key=2, style=dotted];
m6_3441 -> m6_3442  [key=0, style=solid];
m6_3442 -> m6_24  [key=2, style=dotted];
m6_3442 -> m6_3443  [key=0, style=solid];
m6_3442 -> m6_1102  [key=2, style=dotted];
m6_3443 -> m6_24  [key=2, style=dotted];
m6_3443 -> m6_3444  [key=0, style=solid];
m6_3443 -> m6_1102  [key=2, style=dotted];
m6_3440 -> m6_3441  [key=0, style=solid];
m6_3440 -> m6_3442  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3440 -> m6_3443  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3440 -> m6_49  [key=2, style=dotted];
m6_3437 -> m6_1102  [key=2, style=dotted];
m6_3437 -> m6_196  [key=2, style=dotted];
m6_3437 -> m6_3438  [key=0, style=solid];
m6_3438 -> m6_3440  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3438 -> m6_41  [key=2, style=dotted];
m6_3438 -> m6_3439  [key=0, style=solid];
m6_3439 -> m6_3440  [key=0, style=solid];
m6_3439 -> m6_42  [key=2, style=dotted];
m6_3444 -> m6_3436  [color=blue, key=0, style=bold];
m6_1737 -> m6_1738  [key=0, style=solid];
m6_1740 -> m6_24  [key=2, style=dotted];
m6_1740 -> m6_1741  [key=0, style=solid];
m6_1741 -> m6_24  [key=2, style=dotted];
m6_1741 -> m6_1742  [key=0, style=solid];
m6_1742 -> m6_24  [key=2, style=dotted];
m6_1742 -> m6_1743  [key=0, style=solid];
m6_1739 -> m6_1740  [key=0, style=solid];
m6_1739 -> m6_1741  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_1739 -> m6_1742  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_1739 -> m6_49  [key=2, style=dotted];
m6_1738 -> m6_1739  [key=0, style=solid];
m6_1743 -> m6_1737  [color=blue, key=0, style=bold];
m6_1997 -> m6_1998  [key=0, style=solid];
m6_1998 -> m6_41  [key=2, style=dotted];
m6_1998 -> m6_1999  [key=0, style=solid];
m6_1999 -> m6_1997  [color=blue, key=0, style=bold];
m6_3966 -> m6_3967  [key=0, style=solid];
m6_3973 -> m6_24  [key=2, style=dotted];
m6_3973 -> m6_3974  [key=0, style=solid];
m6_3978 -> m6_24  [key=2, style=dotted];
m6_3978 -> m6_3979  [key=0, style=solid];
m6_3971 -> m6_24  [key=2, style=dotted];
m6_3971 -> m6_3972  [key=0, style=solid];
m6_3976 -> m6_24  [key=2, style=dotted];
m6_3976 -> m6_3977  [key=0, style=solid];
m6_3977 -> m6_24  [key=2, style=dotted];
m6_3977 -> m6_3978  [key=0, style=solid];
m6_3977 -> m6_375  [key=2, style=dotted];
m6_3981 -> m6_24  [key=2, style=dotted];
m6_3981 -> m6_3982  [key=0, style=solid];
m6_3982 -> m6_24  [key=2, style=dotted];
m6_3982 -> m6_3983  [key=0, style=solid];
m6_3982 -> m6_375  [key=2, style=dotted];
m6_3983 -> m6_24  [key=2, style=dotted];
m6_3983 -> m6_3984  [key=0, style=solid];
m6_3967 -> m6_3973  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_3967 -> m6_3978  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_3967 -> m6_954  [key=2, style=dotted];
m6_3967 -> m6_3968  [key=0, style=solid];
m6_3967 -> m6_3970  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_3972 -> m6_3973  [key=0, style=solid];
m6_3972 -> m6_296  [key=2, style=dotted];
m6_3974 -> m6_16  [key=2, style=dotted];
m6_3974 -> m6_373  [key=2, style=dotted];
m6_3974 -> m6_3975  [key=0, style=solid];
m6_3975 -> m6_3978  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_3975 -> m6_3976  [key=0, style=solid];
m6_3975 -> m6_3977  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_3975 -> m6_3357  [key=2, style=dotted];
m6_3979 -> m6_16  [key=2, style=dotted];
m6_3979 -> m6_373  [key=2, style=dotted];
m6_3979 -> m6_3980  [key=0, style=solid];
m6_3970 -> m6_3971  [key=0, style=solid];
m6_3970 -> m6_3972  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3970 -> m6_3974  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3970 -> m6_176  [key=2, style=dotted];
m6_3980 -> m6_3981  [key=0, style=solid];
m6_3980 -> m6_3982  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_3980 -> m6_3983  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_3980 -> m6_3357  [key=2, style=dotted];
m6_3968 -> m6_3974  [color=darkseagreen4, key=1, label=dateFormatString, style=dashed];
m6_3968 -> m6_3979  [color=darkseagreen4, key=1, label=dateFormatString, style=dashed];
m6_3968 -> m6_3969  [key=0, style=solid];
m6_3969 -> m6_3972  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_3969 -> m6_3970  [key=0, style=solid];
m6_3969 -> m6_175  [key=2, style=dotted];
m6_3984 -> m6_3966  [color=blue, key=0, style=bold];
m6_2624 -> m6_2625  [key=0, style=solid];
m6_2627 -> m6_24  [key=2, style=dotted];
m6_2627 -> m6_2628  [key=0, style=solid];
m6_2626 -> m6_2627  [key=0, style=solid];
m6_2626 -> m6_49  [key=2, style=dotted];
m6_2625 -> m6_2626  [key=0, style=solid];
m6_2628 -> m6_2624  [color=blue, key=0, style=bold];
m6_1765 -> m6_1766  [key=0, style=solid];
m6_1767 -> m6_49  [key=2, style=dotted];
m6_1767 -> m6_1768  [key=0, style=solid];
m6_1766 -> m6_1767  [key=0, style=solid];
m6_1768 -> m6_1765  [color=blue, key=0, style=bold];
m6_1288 -> m6_1289  [key=0, style=solid];
m6_1291 -> m6_24  [key=2, style=dotted];
m6_1291 -> m6_1292  [key=0, style=solid];
m6_1293 -> m6_24  [key=2, style=dotted];
m6_1293 -> m6_1294  [key=0, style=solid];
m6_1290 -> m6_1291  [key=0, style=solid];
m6_1290 -> m6_1295  [key=2, style=dotted];
m6_1290 -> m6_1296  [key=2, style=dotted];
m6_1290 -> m6_1292  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1292 -> m6_1293  [key=0, style=solid];
m6_1292 -> m6_1295  [key=2, style=dotted];
m6_1292 -> m6_236  [key=2, style=dotted];
m6_1289 -> m6_1290  [key=0, style=solid];
m6_1289 -> m6_1287  [key=2, style=dotted];
m6_1294 -> m6_1288  [color=blue, key=0, style=bold];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_24  [key=2, style=dotted];
m6_115 -> m6_115  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_116 -> m6_115  [color=blue, key=0, style=bold];
m6_116 -> m6_24  [key=2, style=dotted];
m6_116 -> m6_116  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_116 -> m6_117  [key=0, style=solid];
m6_3633 -> m6_3634  [key=0, style=solid];
m6_3636 -> m6_24  [key=2, style=dotted];
m6_3636 -> m6_3637  [key=0, style=solid];
m6_3638 -> m6_24  [key=2, style=dotted];
m6_3638 -> m6_3639  [key=0, style=solid];
m6_3635 -> m6_3636  [key=0, style=solid];
m6_3635 -> m6_175  [key=2, style=dotted];
m6_3635 -> m6_3641  [key=2, style=dotted];
m6_3635 -> m6_176  [key=2, style=dotted];
m6_3635 -> m6_3637  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3637 -> m6_3638  [key=0, style=solid];
m6_3637 -> m6_175  [key=2, style=dotted];
m6_3637 -> m6_3641  [key=2, style=dotted];
m6_3637 -> m6_296  [key=2, style=dotted];
m6_3634 -> m6_3635  [key=0, style=solid];
m6_3634 -> m6_3640  [key=2, style=dotted];
m6_3639 -> m6_3633  [color=blue, key=0, style=bold];
m6_1400 -> m6_1401  [key=0, style=solid];
m6_1403 -> m6_24  [key=2, style=dotted];
m6_1403 -> m6_1404  [key=0, style=solid];
m6_1405 -> m6_24  [key=2, style=dotted];
m6_1405 -> m6_1406  [key=0, style=solid];
m6_1405 -> m6_1246  [key=2, style=dotted];
m6_1406 -> m6_24  [key=2, style=dotted];
m6_1406 -> m6_1407  [key=0, style=solid];
m6_1407 -> m6_24  [key=2, style=dotted];
m6_1407 -> m6_1408  [key=0, style=solid];
m6_1408 -> m6_24  [key=2, style=dotted];
m6_1408 -> m6_1409  [key=0, style=solid];
m6_1409 -> m6_24  [key=2, style=dotted];
m6_1409 -> m6_1410  [key=0, style=solid];
m6_1410 -> m6_24  [key=2, style=dotted];
m6_1410 -> m6_1411  [key=0, style=solid];
m6_1411 -> m6_24  [key=2, style=dotted];
m6_1411 -> m6_1412  [key=0, style=solid];
m6_1402 -> m6_1403  [key=0, style=solid];
m6_1402 -> m6_129  [key=2, style=dotted];
m6_1402 -> m6_1404  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1404 -> m6_1405  [key=0, style=solid];
m6_1404 -> m6_1406  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_1404 -> m6_1407  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_1404 -> m6_1408  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_1404 -> m6_1409  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_1404 -> m6_1410  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_1404 -> m6_1411  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_1404 -> m6_49  [key=2, style=dotted];
m6_1401 -> m6_1402  [key=0, style=solid];
m6_1401 -> m6_1246  [key=2, style=dotted];
m6_1401 -> m6_1413  [key=2, style=dotted];
m6_1412 -> m6_1400  [color=blue, key=0, style=bold];
m6_1878 -> m6_1879  [key=0, style=solid];
m6_1879 -> m6_60  [key=2, style=dotted];
m6_1879 -> m6_1880  [key=0, style=solid];
m6_1879 -> m6_1881  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1880 -> m6_1878  [color=blue, key=0, style=bold];
m6_2900 -> m6_2901  [key=0, style=solid];
m6_2905 -> m6_24  [key=2, style=dotted];
m6_2905 -> m6_2906  [key=0, style=solid];
m6_2905 -> m6_2897  [key=2, style=dotted];
m6_2904 -> m6_2905  [key=0, style=solid];
m6_2904 -> m6_49  [key=2, style=dotted];
m6_2902 -> m6_2904  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2902 -> m6_41  [key=2, style=dotted];
m6_2902 -> m6_2903  [key=0, style=solid];
m6_2903 -> m6_2904  [key=0, style=solid];
m6_2903 -> m6_42  [key=2, style=dotted];
m6_2901 -> m6_2902  [key=0, style=solid];
m6_2901 -> m6_2889  [key=2, style=dotted];
m6_2906 -> m6_2900  [color=blue, key=0, style=bold];
m6_3697 -> m6_3698  [key=0, style=solid];
m6_3702 -> m6_24  [key=2, style=dotted];
m6_3702 -> m6_3703  [key=0, style=solid];
m6_3699 -> m6_3702  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_3699 -> m6_3700  [key=0, style=solid];
m6_3699 -> m6_2972  [key=2, style=dotted];
m6_3699 -> m6_3701  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m6_3701 -> m6_3702  [key=0, style=solid];
m6_3701 -> m6_3008  [key=2, style=dotted];
m6_3703 -> m6_3704  [key=0, style=solid];
m6_3703 -> m6_2976  [key=2, style=dotted];
m6_3698 -> m6_3699  [key=0, style=solid];
m6_3698 -> m6_3703  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_3698 -> m6_2971  [key=2, style=dotted];
m6_3700 -> m6_3701  [key=0, style=solid];
m6_3700 -> m6_175  [key=2, style=dotted];
m6_3700 -> m6_833  [key=2, style=dotted];
m6_3704 -> m6_42  [key=2, style=dotted];
m6_3704 -> m6_3705  [key=0, style=solid];
m6_3705 -> m6_3697  [color=blue, key=0, style=bold];
m6_179 -> m6_177  [color=blue, key=0, style=bold];
m6_179 -> m6_231  [key=0, style=solid];
m6_1825 -> m6_1826  [key=0, style=solid];
m6_1827 -> m6_60  [key=2, style=dotted];
m6_1827 -> m6_1828  [key=0, style=solid];
m6_1827 -> m6_1829  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1826 -> m6_1830  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1826 -> m6_1827  [key=0, style=solid];
m6_1828 -> m6_1825  [color=blue, key=0, style=bold];
m6_748 -> m6_749  [key=0, style=solid];
m6_748 -> m6_750  [key=0, style=solid];
m6_748 -> m6_491  [key=2, style=dotted];
m6_752 -> m6_24  [key=2, style=dotted];
m6_752 -> m6_753  [key=0, style=solid];
m6_752 -> m6_756  [key=2, style=dotted];
m6_752 -> m6_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m6_752 -> m6_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m6_752 -> m6_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m6_752 -> m6_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m6_752 -> m6_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m6_752 -> m6_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m6_752 -> m6_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m6_752 -> m6_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m6_752 -> m6_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m6_752 -> m6_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m6_752 -> m6_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m6_752 -> m6_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m6_752 -> m6_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m6_753 -> m6_24  [key=2, style=dotted];
m6_753 -> m6_754  [key=0, style=solid];
m6_753 -> m6_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m6_753 -> m6_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m6_753 -> m6_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m6_751 -> m6_752  [key=0, style=solid];
m6_751 -> m6_753  [color=darkseagreen4, key=1, label=r2, style=dashed];
m6_751 -> m6_49  [key=2, style=dotted];
m6_751 -> m6_745  [color=blue, key=0, style=bold];
m6_750 -> m6_751  [key=0, style=solid];
m6_750 -> m6_41  [key=2, style=dotted];
m6_749 -> m6_750  [key=0, style=solid];
m6_749 -> m6_755  [key=2, style=dotted];
m6_749 -> m6_751  [key=0, style=solid];
m6_754 -> m6_748  [color=blue, key=0, style=bold];
m6_754 -> m6_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", style=dashed];
m6_1628 -> m6_1629  [key=0, style=solid];
m6_1636 -> m6_24  [key=2, style=dotted];
m6_1636 -> m6_1637  [key=0, style=solid];
m6_1637 -> m6_24  [key=2, style=dotted];
m6_1637 -> m6_1638  [key=0, style=solid];
m6_1638 -> m6_24  [key=2, style=dotted];
m6_1638 -> m6_1639  [key=0, style=solid];
m6_1635 -> m6_1636  [key=0, style=solid];
m6_1635 -> m6_1637  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m6_1635 -> m6_1638  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m6_1635 -> m6_49  [key=2, style=dotted];
m6_1634 -> m6_1635  [key=0, style=solid];
m6_1634 -> m6_42  [key=2, style=dotted];
m6_1633 -> m6_41  [key=2, style=dotted];
m6_1633 -> m6_1634  [key=0, style=solid];
m6_1629 -> m6_1633  [color=darkseagreen4, key=1, label=optInClass, style=dashed];
m6_1629 -> m6_1630  [key=0, style=solid];
m6_1629 -> m6_1640  [key=2, style=dotted];
m6_1629 -> m6_1631  [color=darkseagreen4, key=1, label=optInClass, style=dashed];
m6_1629 -> m6_1632  [color=darkseagreen4, key=1, label=optInClass, style=dashed];
m6_1632 -> m6_1633  [key=0, style=solid];
m6_1630 -> m6_1631  [key=0, style=solid];
m6_1631 -> m6_1632  [key=0, style=solid];
m6_1639 -> m6_1628  [color=blue, key=0, style=bold];
m6_1513 -> m6_1514  [key=0, style=solid];
m6_1518 -> m6_24  [key=2, style=dotted];
m6_1518 -> m6_1519  [key=0, style=solid];
m6_1519 -> m6_24  [key=2, style=dotted];
m6_1519 -> m6_1520  [key=0, style=solid];
m6_1520 -> m6_24  [key=2, style=dotted];
m6_1520 -> m6_1521  [key=0, style=solid];
m6_1515 -> m6_1518  [color=darkseagreen4, key=1, label=defaultJson, style=dashed];
m6_1515 -> m6_129  [key=2, style=dotted];
m6_1515 -> m6_1516  [key=0, style=solid];
m6_1517 -> m6_1518  [key=0, style=solid];
m6_1517 -> m6_1520  [color=darkseagreen4, key=1, label=javascriptJson, style=dashed];
m6_1517 -> m6_1344  [key=2, style=dotted];
m6_1517 -> m6_1296  [key=2, style=dotted];
m6_1516 -> m6_1519  [color=darkseagreen4, key=1, label=isoJson, style=dashed];
m6_1516 -> m6_1517  [key=0, style=solid];
m6_1516 -> m6_1149  [key=2, style=dotted];
m6_1516 -> m6_1296  [key=2, style=dotted];
m6_1514 -> m6_1102  [key=2, style=dotted];
m6_1514 -> m6_1515  [key=0, style=solid];
m6_1514 -> m6_1517  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_1514 -> m6_1516  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_1514 -> m6_1522  [key=2, style=dotted];
m6_1521 -> m6_1513  [color=blue, key=0, style=bold];
m6_977 -> m6_978  [key=0, style=solid];
m6_985 -> m6_24  [key=2, style=dotted];
m6_985 -> m6_986  [key=0, style=solid];
m6_986 -> m6_24  [key=2, style=dotted];
m6_986 -> m6_987  [key=0, style=solid];
m6_988 -> m6_24  [key=2, style=dotted];
m6_988 -> m6_989  [key=0, style=solid];
m6_984 -> m6_985  [key=0, style=solid];
m6_984 -> m6_991  [key=2, style=dotted];
m6_983 -> m6_985  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m6_983 -> m6_986  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m6_983 -> m6_988  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m6_983 -> m6_984  [key=0, style=solid];
m6_983 -> m6_936  [key=2, style=dotted];
m6_983 -> m6_987  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m6_987 -> m6_988  [key=0, style=solid];
m6_987 -> m6_992  [key=2, style=dotted];
m6_982 -> m6_129  [key=2, style=dotted];
m6_982 -> m6_983  [key=0, style=solid];
m6_978 -> m6_984  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m6_978 -> m6_982  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m6_978 -> m6_979  [key=0, style=solid];
m6_978 -> m6_990  [key=2, style=dotted];
m6_978 -> m6_980  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m6_978 -> m6_981  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m6_981 -> m6_982  [key=0, style=solid];
m6_979 -> m6_980  [key=0, style=solid];
m6_980 -> m6_981  [key=0, style=solid];
m6_989 -> m6_977  [color=blue, key=0, style=bold];
m6_327 -> m6_328  [key=0, style=solid];
m6_137 -> m6_60  [key=2, style=dotted];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_778 -> m6_779  [key=0, style=solid];
m6_781 -> m6_24  [key=2, style=dotted];
m6_781 -> m6_782  [key=0, style=solid];
m6_780 -> m6_781  [key=0, style=solid];
m6_780 -> m6_49  [key=2, style=dotted];
m6_779 -> m6_780  [key=0, style=solid];
m6_782 -> m6_778  [color=blue, key=0, style=bold];
m6_3311 -> m6_3314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_3311 -> m6_3312  [key=0, style=solid];
m6_3314 -> m6_2358  [key=2, style=dotted];
m6_3314 -> m6_3315  [key=0, style=solid];
m6_3314 -> m6_3316  [key=2, style=dotted];
m6_3314 -> m6_3317  [key=2, style=dotted];
m6_3314 -> m6_3318  [key=2, style=dotted];
m6_3313 -> m6_3314  [key=0, style=solid];
m6_3312 -> m6_3313  [key=0, style=solid];
m6_3315 -> m6_3311  [color=blue, key=0, style=bold];
m6_3937 -> m6_3938  [key=0, style=solid];
m6_3938 -> m6_3900  [key=2, style=dotted];
m6_3938 -> m6_3939  [key=0, style=solid];
m6_3939 -> m6_3937  [color=blue, key=0, style=bold];
m6_2542 -> m6_2543  [key=0, style=solid];
m6_2547 -> m6_24  [key=2, style=dotted];
m6_2547 -> m6_2547  [color=darkseagreen4, key=1, label=newStruct, style=dashed];
m6_2547 -> m6_2548  [key=0, style=solid];
m6_2546 -> m6_2547  [key=0, style=solid];
m6_2546 -> m6_49  [key=2, style=dotted];
m6_2544 -> m6_2546  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2544 -> m6_41  [key=2, style=dotted];
m6_2544 -> m6_2545  [key=0, style=solid];
m6_2545 -> m6_2546  [key=0, style=solid];
m6_2545 -> m6_42  [key=2, style=dotted];
m6_2543 -> m6_2544  [key=0, style=solid];
m6_2543 -> m6_2549  [key=2, style=dotted];
m6_2548 -> m6_2542  [color=blue, key=0, style=bold];
m6_99 -> m6_100  [key=0, style=solid];
m6_105 -> m6_24  [key=2, style=dotted];
m6_105 -> m6_105  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_105 -> m6_106  [key=0, style=solid];
m6_106 -> m6_24  [key=2, style=dotted];
m6_106 -> m6_106  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_105  [color=blue, key=0, style=bold];
m6_107 -> m6_24  [key=2, style=dotted];
m6_107 -> m6_107  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_107 -> m6_108  [key=0, style=solid];
m6_108 -> m6_24  [key=2, style=dotted];
m6_108 -> m6_108  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_107  [color=blue, key=0, style=bold];
m6_100 -> m6_102  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_100 -> m6_103  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_100 -> m6_104  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_100 -> m6_105  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_100 -> m6_106  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_100 -> m6_107  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_100 -> m6_108  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_100 -> m6_109  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_100 -> m6_110  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_100 -> m6_111  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_100 -> m6_112  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_100 -> m6_113  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_100 -> m6_114  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_100 -> m6_115  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_100 -> m6_116  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_49  [key=2, style=dotted];
m6_100 -> m6_99  [color=blue, key=0, style=bold];
m6_1550 -> m6_1551  [key=0, style=solid];
m6_1553 -> m6_24  [key=2, style=dotted];
m6_1553 -> m6_1554  [key=0, style=solid];
m6_1554 -> m6_24  [key=2, style=dotted];
m6_1554 -> m6_1555  [key=0, style=solid];
m6_1556 -> m6_24  [key=2, style=dotted];
m6_1556 -> m6_1557  [key=0, style=solid];
m6_1557 -> m6_24  [key=2, style=dotted];
m6_1557 -> m6_1558  [key=0, style=solid];
m6_1552 -> m6_1553  [key=0, style=solid];
m6_1552 -> m6_1554  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1552 -> m6_175  [key=2, style=dotted];
m6_1552 -> m6_296  [key=2, style=dotted];
m6_1555 -> m6_1556  [key=0, style=solid];
m6_1555 -> m6_1557  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1555 -> m6_175  [key=2, style=dotted];
m6_1555 -> m6_296  [key=2, style=dotted];
m6_1551 -> m6_1552  [key=0, style=solid];
m6_1551 -> m6_1555  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1558 -> m6_1550  [color=blue, key=0, style=bold];
m6_3502 -> m6_3503  [key=0, style=solid];
m6_3504 -> m6_24  [key=2, style=dotted];
m6_3504 -> m6_3505  [key=0, style=solid];
m6_3503 -> m6_3504  [key=0, style=solid];
m6_3503 -> m6_3506  [key=2, style=dotted];
m6_3503 -> m6_41  [key=2, style=dotted];
m6_3505 -> m6_3502  [color=blue, key=0, style=bold];
m6_3060 -> m6_3061  [key=0, style=solid];
m6_3064 -> m6_24  [key=2, style=dotted];
m6_3064 -> m6_3065  [key=0, style=solid];
m6_3065 -> m6_24  [key=2, style=dotted];
m6_3065 -> m6_3066  [key=0, style=solid];
m6_3061 -> m6_3064  [color=darkseagreen4, key=1, label=d1, style=dashed];
m6_3061 -> m6_3065  [color=darkseagreen4, key=1, label=d1, style=dashed];
m6_3061 -> m6_3062  [key=0, style=solid];
m6_3061 -> m6_134  [key=2, style=dotted];
m6_3063 -> m6_3064  [key=0, style=solid];
m6_3063 -> m6_3065  [color=darkseagreen4, key=1, label=d2, style=dashed];
m6_3063 -> m6_49  [key=2, style=dotted];
m6_3062 -> m6_129  [key=2, style=dotted];
m6_3062 -> m6_3063  [key=0, style=solid];
m6_3066 -> m6_3060  [color=blue, key=0, style=bold];
m6_3708 -> m6_3709  [key=0, style=solid];
m6_3709 -> m6_60  [key=2, style=dotted];
m6_3709 -> m6_3710  [key=0, style=solid];
m6_3709 -> m6_3711  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3710 -> m6_3708  [color=blue, key=0, style=bold];
m6_2758 -> m6_2759  [key=0, style=solid];
m6_2760 -> m6_152  [key=2, style=dotted];
m6_2760 -> m6_2761  [key=0, style=solid];
m6_2759 -> m6_936  [key=2, style=dotted];
m6_2759 -> m6_2760  [key=0, style=solid];
m6_2761 -> m6_2758  [color=blue, key=0, style=bold];
m6_3608 -> m6_3609  [key=0, style=solid];
m6_3612 -> m6_24  [key=2, style=dotted];
m6_3612 -> m6_3613  [key=0, style=solid];
m6_3611 -> m6_3612  [key=0, style=solid];
m6_3610 -> m6_3611  [key=0, style=solid];
m6_3610 -> m6_49  [key=2, style=dotted];
m6_3609 -> m6_3610  [key=0, style=solid];
m6_3613 -> m6_3608  [color=blue, key=0, style=bold];
m6_771 -> m6_772  [key=0, style=solid];
m6_775 -> m6_24  [key=2, style=dotted];
m6_775 -> m6_776  [key=0, style=solid];
m6_773 -> m6_775  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_773 -> m6_129  [key=2, style=dotted];
m6_773 -> m6_774  [key=0, style=solid];
m6_774 -> m6_775  [key=0, style=solid];
m6_772 -> m6_773  [key=0, style=solid];
m6_772 -> m6_777  [key=2, style=dotted];
m6_776 -> m6_771  [color=blue, key=0, style=bold];
m6_2566 -> m6_2567  [key=0, style=solid];
m6_2570 -> m6_19  [key=2, style=dotted];
m6_2570 -> m6_2571  [key=0, style=solid];
m6_2570 -> m6_2572  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_2568 -> m6_24  [key=2, style=dotted];
m6_2568 -> m6_2569  [key=0, style=solid];
m6_2573 -> m6_24  [key=2, style=dotted];
m6_2573 -> m6_2574  [key=0, style=solid];
m6_2573 -> m6_1110  [key=2, style=dotted];
m6_2574 -> m6_24  [key=2, style=dotted];
m6_2574 -> m6_2575  [key=0, style=solid];
m6_2574 -> m6_954  [key=2, style=dotted];
m6_2569 -> m6_2570  [key=0, style=solid];
m6_2569 -> m6_16  [key=2, style=dotted];
m6_2569 -> m6_373  [key=2, style=dotted];
m6_2569 -> m6_2572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2571 -> m6_2572  [key=0, style=solid];
m6_2572 -> m6_2573  [key=0, style=solid];
m6_2572 -> m6_2574  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m6_2572 -> m6_20  [key=2, style=dotted];
m6_2567 -> m6_2568  [key=0, style=solid];
m6_2567 -> m6_2569  [color=darkseagreen4, key=1, label=serializeObject, style=dashed];
m6_2567 -> m6_954  [key=2, style=dotted];
m6_2567 -> m6_1110  [key=2, style=dotted];
m6_2567 -> m6_2561  [key=2, style=dotted];
m6_2567 -> m6_2560  [key=2, style=dotted];
m6_2567 -> m6_175  [key=2, style=dotted];
m6_2567 -> m6_198  [key=2, style=dotted];
m6_2575 -> m6_2566  [color=blue, key=0, style=bold];
m6_1392 -> m6_1393  [key=0, style=solid];
m6_1395 -> m6_24  [key=2, style=dotted];
m6_1395 -> m6_1396  [key=0, style=solid];
m6_1396 -> m6_24  [key=2, style=dotted];
m6_1396 -> m6_1397  [key=0, style=solid];
m6_1396 -> m6_1399  [key=2, style=dotted];
m6_1397 -> m6_24  [key=2, style=dotted];
m6_1397 -> m6_1398  [key=0, style=solid];
m6_1394 -> m6_1395  [key=0, style=solid];
m6_1394 -> m6_1396  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m6_1394 -> m6_1397  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m6_1394 -> m6_49  [key=2, style=dotted];
m6_1393 -> m6_1394  [key=0, style=solid];
m6_1398 -> m6_1392  [color=blue, key=0, style=bold];
m6_2285 -> m6_2322  [key=0, style=solid];
m6_2285 -> m6_2323  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2285 -> m6_2324  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2285 -> m6_2325  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2285 -> m6_2326  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2285 -> m6_2327  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2285 -> m6_2328  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2285 -> m6_2329  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_2322 -> m6_2323  [key=0, style=solid];
m6_2323 -> m6_2324  [key=0, style=solid];
m6_2324 -> m6_2325  [key=0, style=solid];
m6_2325 -> m6_2326  [key=0, style=solid];
m6_2326 -> m6_2327  [key=0, style=solid];
m6_2327 -> m6_2328  [key=0, style=solid];
m6_2328 -> m6_2329  [key=0, style=solid];
m6_2329 -> m6_2330  [key=0, style=solid];
m6_2330 -> m6_2285  [color=blue, key=0, style=bold];
m6_2489 -> m6_2490  [key=0, style=solid];
m6_2491 -> m6_42  [key=2, style=dotted];
m6_2491 -> m6_2492  [key=0, style=solid];
m6_2490 -> m6_41  [key=2, style=dotted];
m6_2490 -> m6_2491  [key=0, style=solid];
m6_2492 -> m6_2489  [color=blue, key=0, style=bold];
m6_1271 -> m6_1272  [key=0, style=solid];
m6_1275 -> m6_24  [key=2, style=dotted];
m6_1275 -> m6_1276  [key=0, style=solid];
m6_1276 -> m6_24  [key=2, style=dotted];
m6_1276 -> m6_1277  [key=0, style=solid];
m6_1277 -> m6_24  [key=2, style=dotted];
m6_1277 -> m6_1278  [key=0, style=solid];
m6_1274 -> m6_1275  [key=0, style=solid];
m6_1274 -> m6_1276  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_1274 -> m6_1277  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_1274 -> m6_49  [key=2, style=dotted];
m6_1273 -> m6_129  [key=2, style=dotted];
m6_1273 -> m6_1274  [key=0, style=solid];
m6_1272 -> m6_1273  [key=0, style=solid];
m6_1272 -> m6_1279  [key=2, style=dotted];
m6_1278 -> m6_1271  [color=blue, key=0, style=bold];
m6_88 -> m6_24  [key=2, style=dotted];
m6_88 -> m6_88  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_89 -> m6_24  [key=2, style=dotted];
m6_89 -> m6_89  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_89 -> m6_90  [key=0, style=solid];
m6_90 -> m6_24  [key=2, style=dotted];
m6_90 -> m6_90  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_94  [key=2, style=dotted];
m6_91 -> m6_24  [key=2, style=dotted];
m6_91 -> m6_91  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_91 -> m6_92  [key=0, style=solid];
m6_92 -> m6_24  [key=2, style=dotted];
m6_92 -> m6_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_92 -> m6_93  [key=0, style=solid];
m6_93 -> m6_24  [key=2, style=dotted];
m6_93 -> m6_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_88  [color=blue, key=0, style=bold];
m6_97 -> m6_24  [key=2, style=dotted];
m6_97 -> m6_97  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_97 -> m6_98  [key=0, style=solid];
m6_98 -> m6_82  [color=blue, key=0, style=bold];
m6_98 -> m6_97  [color=blue, key=0, style=bold];
m6_439 -> m6_440  [key=0, style=solid];
m6_439 -> m6_442  [key=0, style=solid];
m6_439 -> m6_295  [key=2, style=dotted];
m6_441 -> m6_60  [key=2, style=dotted];
m6_441 -> m6_442  [key=0, style=solid];
m6_441 -> m6_443  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_441 -> m6_451  [key=2, style=dotted];
m6_440 -> m6_444  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_440 -> m6_441  [key=0, style=solid];
m6_440 -> m6_365  [key=2, style=dotted];
m6_442 -> m6_439  [color=blue, key=0, style=bold];
m6_442 -> m6_443  [key=0, style=solid];
m6_442 -> m6_445  [key=0, style=solid];
m6_442 -> m6_295  [key=2, style=dotted];
m6_2525 -> m6_2526  [key=0, style=solid];
m6_2531 -> m6_24  [key=2, style=dotted];
m6_2531 -> m6_2532  [key=0, style=solid];
m6_2532 -> m6_24  [key=2, style=dotted];
m6_2532 -> m6_2533  [key=0, style=solid];
m6_2533 -> m6_24  [key=2, style=dotted];
m6_2533 -> m6_2534  [key=0, style=solid];
m6_2534 -> m6_24  [key=2, style=dotted];
m6_2534 -> m6_2536  [key=0, style=solid];
m6_2530 -> m6_2531  [key=0, style=solid];
m6_2530 -> m6_2532  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_2530 -> m6_2533  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_2530 -> m6_2534  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_2530 -> m6_49  [key=2, style=dotted];
m6_2528 -> m6_2530  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2528 -> m6_41  [key=2, style=dotted];
m6_2528 -> m6_2529  [key=0, style=solid];
m6_2528 -> m6_2535  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2528 -> m6_2540  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2529 -> m6_2530  [key=0, style=solid];
m6_2529 -> m6_2535  [key=0, style=solid];
m6_2535 -> m6_2536  [key=0, style=solid];
m6_2535 -> m6_60  [key=2, style=dotted];
m6_2535 -> m6_2539  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2527 -> m6_2528  [key=0, style=solid];
m6_2527 -> m6_2529  [color=darkseagreen4, key=1, label=s1, style=dashed];
m6_2527 -> m6_2537  [key=2, style=dotted];
m6_2527 -> m6_2538  [key=2, style=dotted];
m6_2526 -> m6_2535  [color=darkseagreen4, key=1, label=classRef, style=dashed];
m6_2526 -> m6_2527  [key=0, style=solid];
m6_2536 -> m6_2525  [color=blue, key=0, style=bold];
m6_2049 -> m6_2050  [key=0, style=solid];
m6_2057 -> m6_24  [key=2, style=dotted];
m6_2057 -> m6_2058  [key=0, style=solid];
m6_2058 -> m6_24  [key=2, style=dotted];
m6_2058 -> m6_2059  [key=0, style=solid];
m6_2059 -> m6_24  [key=2, style=dotted];
m6_2059 -> m6_2060  [key=0, style=solid];
m6_2060 -> m6_24  [key=2, style=dotted];
m6_2060 -> m6_2061  [key=0, style=solid];
m6_2056 -> m6_2057  [key=0, style=solid];
m6_2056 -> m6_2058  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m6_2056 -> m6_2059  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m6_2056 -> m6_2060  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m6_2056 -> m6_49  [key=2, style=dotted];
m6_2055 -> m6_2056  [key=0, style=solid];
m6_2055 -> m6_42  [key=2, style=dotted];
m6_2054 -> m6_175  [key=2, style=dotted];
m6_2054 -> m6_176  [key=2, style=dotted];
m6_2054 -> m6_2055  [key=0, style=solid];
m6_2050 -> m6_2054  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2050 -> m6_2051  [key=0, style=solid];
m6_2050 -> m6_2062  [key=2, style=dotted];
m6_2050 -> m6_2052  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2050 -> m6_2053  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2053 -> m6_2054  [key=0, style=solid];
m6_2051 -> m6_2053  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2051 -> m6_2052  [key=0, style=solid];
m6_2051 -> m6_2063  [key=2, style=dotted];
m6_2052 -> m6_2053  [key=0, style=solid];
m6_2061 -> m6_2049  [color=blue, key=0, style=bold];
m6_1239 -> m6_1240  [key=0, style=solid];
m6_1244 -> m6_24  [key=2, style=dotted];
m6_1244 -> m6_1245  [key=0, style=solid];
m6_1242 -> m6_24  [key=2, style=dotted];
m6_1242 -> m6_1243  [key=0, style=solid];
m6_1240 -> m6_1244  [color=darkseagreen4, key=1, label=guid, style=dashed];
m6_1240 -> m6_1241  [key=0, style=solid];
m6_1240 -> m6_1246  [key=2, style=dotted];
m6_1243 -> m6_1244  [key=0, style=solid];
m6_1243 -> m6_49  [key=2, style=dotted];
m6_1241 -> m6_1242  [key=0, style=solid];
m6_1241 -> m6_129  [key=2, style=dotted];
m6_1241 -> m6_1243  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1241 -> m6_1247  [key=2, style=dotted];
m6_1245 -> m6_1239  [color=blue, key=0, style=bold];
m6_3074 -> m6_3075  [key=0, style=solid];
m6_3076 -> m6_175  [key=2, style=dotted];
m6_3076 -> m6_296  [key=2, style=dotted];
m6_3076 -> m6_3077  [key=0, style=solid];
m6_3077 -> m6_3011  [key=2, style=dotted];
m6_3077 -> m6_3078  [key=0, style=solid];
m6_3077 -> m6_3079  [key=2, style=dotted];
m6_3075 -> m6_3076  [key=0, style=solid];
m6_3078 -> m6_3074  [color=blue, key=0, style=bold];
m6_2654 -> m6_2655  [key=0, style=solid];
m6_2655 -> m6_2656  [key=0, style=solid];
m6_2656 -> m6_2654  [color=blue, key=0, style=bold];
m6_3248 -> m6_3249  [key=0, style=solid];
m6_3249 -> m6_60  [key=2, style=dotted];
m6_3249 -> m6_3250  [key=0, style=solid];
m6_3249 -> m6_3251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3250 -> m6_3248  [color=blue, key=0, style=bold];
m6_1151 -> m6_1152  [key=0, style=solid];
m6_1153 -> m6_24  [key=2, style=dotted];
m6_1153 -> m6_1154  [key=0, style=solid];
m6_1152 -> m6_1153  [key=0, style=solid];
m6_1152 -> m6_129  [key=2, style=dotted];
m6_1152 -> m6_1155  [key=2, style=dotted];
m6_1154 -> m6_1151  [color=blue, key=0, style=bold];
m6_231 -> m6_179  [color=blue, key=0, style=bold];
m6_231 -> m6_24  [key=2, style=dotted];
m6_231 -> m6_232  [key=0, style=solid];
m6_2476 -> m6_2477  [key=0, style=solid];
m6_2477 -> m6_2479  [key=2, style=dotted];
m6_2477 -> m6_2478  [key=0, style=solid];
m6_2478 -> m6_2476  [color=blue, key=0, style=bold];
m6_2793 -> m6_2794  [key=0, style=solid];
m6_2796 -> m6_42  [key=2, style=dotted];
m6_2796 -> m6_2797  [key=0, style=solid];
m6_2795 -> m6_41  [key=2, style=dotted];
m6_2795 -> m6_2796  [key=0, style=solid];
m6_2794 -> m6_2795  [key=0, style=solid];
m6_2794 -> m6_2798  [key=2, style=dotted];
m6_2797 -> m6_2793  [color=blue, key=0, style=bold];
m6_332 -> m6_333  [key=0, style=solid];
m6_332 -> m6_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_332 -> m6_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m6_332 -> m6_337  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m6_332 -> m6_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_332 -> m6_353  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_332 -> m6_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_332 -> m6_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_332 -> m6_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_332 -> m6_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_332 -> m6_24  [key=2, style=dotted];
m6_333 -> m6_334  [key=0, style=solid];
m6_333 -> m6_362  [key=2, style=dotted];
m6_333 -> m6_339  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m6_333 -> m6_341  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m6_333 -> m6_344  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m6_333 -> m6_323  [color=blue, key=0, style=bold];
m6_1205 -> m6_1206  [key=0, style=solid];
m6_1211 -> m6_24  [key=2, style=dotted];
m6_1211 -> m6_1212  [key=0, style=solid];
m6_1212 -> m6_24  [key=2, style=dotted];
m6_1212 -> m6_1213  [key=0, style=solid];
m6_1213 -> m6_24  [key=2, style=dotted];
m6_1213 -> m6_1214  [key=0, style=solid];
m6_1210 -> m6_1211  [key=0, style=solid];
m6_1210 -> m6_1212  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1210 -> m6_1213  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1210 -> m6_49  [key=2, style=dotted];
m6_1206 -> m6_1210  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1206 -> m6_1207  [key=0, style=solid];
m6_1206 -> m6_1215  [key=2, style=dotted];
m6_1206 -> m6_41  [key=2, style=dotted];
m6_1206 -> m6_1209  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1209 -> m6_1210  [key=0, style=solid];
m6_1209 -> m6_42  [key=2, style=dotted];
m6_1207 -> m6_1208  [key=0, style=solid];
m6_1208 -> m6_1209  [key=0, style=solid];
m6_1214 -> m6_1205  [color=blue, key=0, style=bold];
m6_2513 -> m6_2514  [key=0, style=solid];
m6_2514 -> m6_19  [key=2, style=dotted];
m6_2514 -> m6_2515  [key=0, style=solid];
m6_2514 -> m6_2516  [color=darkseagreen4, key=1, label=serializer1, style=dashed];
m6_2514 -> m6_2519  [color=darkseagreen4, key=1, label=serializer1, style=dashed];
m6_2520 -> m6_24  [key=2, style=dotted];
m6_2520 -> m6_2521  [key=0, style=solid];
m6_2521 -> m6_24  [key=2, style=dotted];
m6_2521 -> m6_2522  [key=0, style=solid];
m6_2522 -> m6_24  [key=2, style=dotted];
m6_2522 -> m6_2523  [key=0, style=solid];
m6_2515 -> m6_539  [key=2, style=dotted];
m6_2515 -> m6_2516  [key=0, style=solid];
m6_2515 -> m6_1149  [key=2, style=dotted];
m6_2516 -> m6_2517  [key=0, style=solid];
m6_2519 -> m6_2520  [key=0, style=solid];
m6_2519 -> m6_2521  [color=darkseagreen4, key=1, label=z, style=dashed];
m6_2519 -> m6_2522  [color=darkseagreen4, key=1, label=z, style=dashed];
m6_2519 -> m6_2524  [key=2, style=dotted];
m6_2517 -> m6_2518  [key=0, style=solid];
m6_2518 -> m6_2519  [key=0, style=solid];
m6_2518 -> m6_16  [key=2, style=dotted];
m6_2518 -> m6_373  [key=2, style=dotted];
m6_2523 -> m6_2513  [color=blue, key=0, style=bold];
m6_1692 -> m6_1693  [key=0, style=solid];
m6_1697 -> m6_24  [key=2, style=dotted];
m6_1697 -> m6_1698  [key=0, style=solid];
m6_1698 -> m6_24  [key=2, style=dotted];
m6_1698 -> m6_1699  [key=0, style=solid];
m6_1699 -> m6_24  [key=2, style=dotted];
m6_1699 -> m6_1700  [key=0, style=solid];
m6_1695 -> m6_1697  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_1695 -> m6_1698  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_1695 -> m6_1699  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_1695 -> m6_1696  [key=0, style=solid];
m6_1695 -> m6_770  [key=2, style=dotted];
m6_1695 -> m6_49  [key=2, style=dotted];
m6_1696 -> m6_1697  [key=0, style=solid];
m6_1696 -> m6_797  [key=2, style=dotted];
m6_1694 -> m6_1695  [key=0, style=solid];
m6_1694 -> m6_467  [key=2, style=dotted];
m6_1693 -> m6_1694  [key=0, style=solid];
m6_1700 -> m6_1692  [color=blue, key=0, style=bold];
m6_328 -> m6_330  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_328 -> m6_329  [key=0, style=solid];
m6_328 -> m6_41  [key=2, style=dotted];
m6_3042 -> m6_3043  [key=0, style=solid];
m6_3049 -> m6_24  [key=2, style=dotted];
m6_3049 -> m6_3050  [key=0, style=solid];
m6_3050 -> m6_24  [key=2, style=dotted];
m6_3050 -> m6_3051  [key=0, style=solid];
m6_3048 -> m6_3049  [key=0, style=solid];
m6_3048 -> m6_3050  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_3048 -> m6_49  [key=2, style=dotted];
m6_3047 -> m6_3048  [key=0, style=solid];
m6_3046 -> m6_3047  [key=0, style=solid];
m6_3043 -> m6_3044  [key=0, style=solid];
m6_3044 -> m6_3046  [color=darkseagreen4, key=1, label=testCulture, style=dashed];
m6_3044 -> m6_3045  [key=0, style=solid];
m6_3044 -> m6_3052  [key=2, style=dotted];
m6_3045 -> m6_3046  [key=0, style=solid];
m6_3051 -> m6_3042  [color=blue, key=0, style=bold];
m6_1523 -> m6_1524  [key=0, style=solid];
m6_1532 -> m6_24  [key=2, style=dotted];
m6_1532 -> m6_1533  [key=0, style=solid];
m6_1532 -> m6_1537  [key=2, style=dotted];
m6_1533 -> m6_24  [key=2, style=dotted];
m6_1533 -> m6_1534  [key=0, style=solid];
m6_1533 -> m6_1537  [key=2, style=dotted];
m6_1534 -> m6_24  [key=2, style=dotted];
m6_1534 -> m6_1535  [key=0, style=solid];
m6_1534 -> m6_1537  [key=2, style=dotted];
m6_1529 -> m6_24  [key=2, style=dotted];
m6_1529 -> m6_1530  [key=0, style=solid];
m6_1524 -> m6_1532  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1524 -> m6_1533  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1524 -> m6_1534  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1524 -> m6_1525  [key=0, style=solid];
m6_1524 -> m6_1536  [key=2, style=dotted];
m6_1524 -> m6_1526  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1524 -> m6_1527  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1524 -> m6_1528  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_1530 -> m6_1532  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m6_1530 -> m6_1533  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m6_1530 -> m6_1534  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m6_1530 -> m6_1531  [key=0, style=solid];
m6_1530 -> m6_49  [key=2, style=dotted];
m6_1531 -> m6_1532  [key=0, style=solid];
m6_1531 -> m6_797  [key=2, style=dotted];
m6_1528 -> m6_1529  [key=0, style=solid];
m6_1528 -> m6_1530  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1528 -> m6_41  [key=2, style=dotted];
m6_1525 -> m6_196  [key=2, style=dotted];
m6_1525 -> m6_1526  [key=0, style=solid];
m6_1526 -> m6_134  [key=2, style=dotted];
m6_1526 -> m6_1527  [key=0, style=solid];
m6_1527 -> m6_1528  [key=0, style=solid];
m6_1527 -> m6_134  [key=2, style=dotted];
m6_1535 -> m6_1523  [color=blue, key=0, style=bold];
m6_2977 -> m6_2978  [key=0, style=solid];
m6_2982 -> m6_24  [key=2, style=dotted];
m6_2982 -> m6_2983  [key=0, style=solid];
m6_2979 -> m6_2982  [color=darkseagreen4, key=1, label=uri, style=dashed];
m6_2979 -> m6_2980  [key=0, style=solid];
m6_2979 -> m6_1708  [key=2, style=dotted];
m6_2981 -> m6_2982  [key=0, style=solid];
m6_2981 -> m6_49  [key=2, style=dotted];
m6_2980 -> m6_129  [key=2, style=dotted];
m6_2980 -> m6_2981  [key=0, style=solid];
m6_2978 -> m6_2979  [key=0, style=solid];
m6_2983 -> m6_2977  [color=blue, key=0, style=bold];
m6_184 -> m6_181  [color=blue, key=0, style=bold];
m6_3925 -> m6_3926  [key=0, style=solid];
m6_3926 -> m6_3927  [key=0, style=solid];
m6_3927 -> m6_3925  [color=blue, key=0, style=bold];
m6_1617 -> m6_1618  [key=0, style=solid];
m6_1620 -> m6_24  [key=2, style=dotted];
m6_1620 -> m6_1621  [key=0, style=solid];
m6_1622 -> m6_24  [key=2, style=dotted];
m6_1622 -> m6_1623  [key=0, style=solid];
m6_1622 -> m6_1246  [key=2, style=dotted];
m6_1623 -> m6_24  [key=2, style=dotted];
m6_1623 -> m6_1624  [key=0, style=solid];
m6_1623 -> m6_1246  [key=2, style=dotted];
m6_1624 -> m6_24  [key=2, style=dotted];
m6_1624 -> m6_1625  [key=0, style=solid];
m6_1625 -> m6_24  [key=2, style=dotted];
m6_1625 -> m6_1626  [key=0, style=solid];
m6_1626 -> m6_24  [key=2, style=dotted];
m6_1626 -> m6_1627  [key=0, style=solid];
m6_1619 -> m6_1620  [key=0, style=solid];
m6_1619 -> m6_49  [key=2, style=dotted];
m6_1621 -> m6_1622  [key=0, style=solid];
m6_1621 -> m6_1623  [color=darkseagreen4, key=1, label=n, style=dashed];
m6_1621 -> m6_1624  [color=darkseagreen4, key=1, label=n, style=dashed];
m6_1621 -> m6_1625  [color=darkseagreen4, key=1, label=n, style=dashed];
m6_1621 -> m6_1626  [color=darkseagreen4, key=1, label=n, style=dashed];
m6_1621 -> m6_49  [key=2, style=dotted];
m6_1618 -> m6_1619  [key=0, style=solid];
m6_1618 -> m6_1621  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1627 -> m6_1617  [color=blue, key=0, style=bold];
m6_2676 -> m6_2677  [key=0, style=solid];
m6_2685 -> m6_24  [key=2, style=dotted];
m6_2685 -> m6_2686  [key=0, style=solid];
m6_2686 -> m6_24  [key=2, style=dotted];
m6_2686 -> m6_2687  [key=0, style=solid];
m6_2689 -> m6_24  [key=2, style=dotted];
m6_2689 -> m6_2690  [key=0, style=solid];
m6_2690 -> m6_24  [key=2, style=dotted];
m6_2690 -> m6_2691  [key=0, style=solid];
m6_2684 -> m6_2685  [key=0, style=solid];
m6_2684 -> m6_2686  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2684 -> m6_2694  [key=2, style=dotted];
m6_2687 -> m6_129  [key=2, style=dotted];
m6_2687 -> m6_2688  [key=0, style=solid];
m6_2688 -> m6_2689  [key=0, style=solid];
m6_2688 -> m6_2690  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_2688 -> m6_2694  [key=2, style=dotted];
m6_2683 -> m6_129  [key=2, style=dotted];
m6_2683 -> m6_2684  [key=0, style=solid];
m6_2680 -> m6_2687  [color=darkseagreen4, key=1, label=barWithNull, style=dashed];
m6_2680 -> m6_2681  [key=0, style=solid];
m6_2680 -> m6_2692  [key=2, style=dotted];
m6_2680 -> m6_2682  [color=darkseagreen4, key=1, label=barWithNull, style=dashed];
m6_2677 -> m6_2683  [color=darkseagreen4, key=1, label=nullableStructPropertyClass, style=dashed];
m6_2677 -> m6_2678  [key=0, style=solid];
m6_2677 -> m6_2692  [key=2, style=dotted];
m6_2677 -> m6_2679  [color=darkseagreen4, key=1, label=nullableStructPropertyClass, style=dashed];
m6_2682 -> m6_2683  [key=0, style=solid];
m6_2679 -> m6_2680  [key=0, style=solid];
m6_2679 -> m6_2693  [key=2, style=dotted];
m6_2681 -> m6_2682  [key=0, style=solid];
m6_2681 -> m6_2693  [key=2, style=dotted];
m6_2678 -> m6_2679  [key=0, style=solid];
m6_2678 -> m6_2693  [key=2, style=dotted];
m6_2691 -> m6_2676  [color=blue, key=0, style=bold];
m6_3824 -> m6_3825  [key=0, style=solid];
m6_3826 -> m6_24  [key=2, style=dotted];
m6_3826 -> m6_3827  [key=0, style=solid];
m6_3828 -> m6_24  [key=2, style=dotted];
m6_3828 -> m6_3829  [key=0, style=solid];
m6_3828 -> m6_3831  [key=2, style=dotted];
m6_3828 -> m6_3832  [key=2, style=dotted];
m6_3829 -> m6_24  [key=2, style=dotted];
m6_3829 -> m6_3830  [key=0, style=solid];
m6_3829 -> m6_3831  [key=2, style=dotted];
m6_3829 -> m6_3832  [key=2, style=dotted];
m6_3825 -> m6_3826  [key=0, style=solid];
m6_3825 -> m6_129  [key=2, style=dotted];
m6_3825 -> m6_196  [key=2, style=dotted];
m6_3825 -> m6_3831  [key=2, style=dotted];
m6_3825 -> m6_3827  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3827 -> m6_3828  [key=0, style=solid];
m6_3827 -> m6_3829  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_3827 -> m6_49  [key=2, style=dotted];
m6_3830 -> m6_3824  [color=blue, key=0, style=bold];
m6_1414 -> m6_1415  [key=0, style=solid];
m6_1417 -> m6_24  [key=2, style=dotted];
m6_1417 -> m6_1418  [key=0, style=solid];
m6_1416 -> m6_1417  [key=0, style=solid];
m6_1416 -> m6_49  [key=2, style=dotted];
m6_1415 -> m6_1416  [key=0, style=solid];
m6_1418 -> m6_1414  [color=blue, key=0, style=bold];
m6_3445 -> m6_3446  [key=0, style=solid];
m6_3452 -> m6_24  [key=2, style=dotted];
m6_3452 -> m6_3453  [key=0, style=solid];
m6_3453 -> m6_24  [key=2, style=dotted];
m6_3453 -> m6_3454  [key=0, style=solid];
m6_3453 -> m6_1102  [key=2, style=dotted];
m6_3454 -> m6_24  [key=2, style=dotted];
m6_3454 -> m6_3455  [key=0, style=solid];
m6_3454 -> m6_1102  [key=2, style=dotted];
m6_3451 -> m6_3452  [key=0, style=solid];
m6_3451 -> m6_3453  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3451 -> m6_3454  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3451 -> m6_175  [key=2, style=dotted];
m6_3451 -> m6_296  [key=2, style=dotted];
m6_3446 -> m6_1102  [key=2, style=dotted];
m6_3446 -> m6_196  [key=2, style=dotted];
m6_3446 -> m6_3447  [key=0, style=solid];
m6_3449 -> m6_1681  [key=2, style=dotted];
m6_3449 -> m6_919  [key=2, style=dotted];
m6_3449 -> m6_3450  [key=0, style=solid];
m6_3449 -> m6_3456  [key=2, style=dotted];
m6_3449 -> m6_3457  [key=2, style=dotted];
m6_3450 -> m6_1681  [key=2, style=dotted];
m6_3450 -> m6_3451  [key=0, style=solid];
m6_3450 -> m6_919  [key=2, style=dotted];
m6_3450 -> m6_3456  [key=2, style=dotted];
m6_3450 -> m6_3457  [key=2, style=dotted];
m6_3447 -> m6_3451  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3447 -> m6_175  [key=2, style=dotted];
m6_3447 -> m6_198  [key=2, style=dotted];
m6_3447 -> m6_3448  [key=0, style=solid];
m6_3448 -> m6_467  [key=2, style=dotted];
m6_3448 -> m6_3449  [key=0, style=solid];
m6_3448 -> m6_3450  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_3455 -> m6_3445  [color=blue, key=0, style=bold];
m6_4108 -> m6_4109  [key=0, style=solid];
m6_4111 -> m6_24  [key=2, style=dotted];
m6_4111 -> m6_4112  [key=0, style=solid];
m6_4112 -> m6_24  [key=2, style=dotted];
m6_4112 -> m6_4113  [key=0, style=solid];
m6_4110 -> m6_4111  [key=0, style=solid];
m6_4110 -> m6_4112  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_4110 -> m6_49  [key=2, style=dotted];
m6_4109 -> m6_4110  [key=0, style=solid];
m6_4113 -> m6_4108  [color=blue, key=0, style=bold];
m6_229 -> m6_227  [color=blue, key=0, style=bold];
m6_229 -> m6_230  [key=0, style=solid];
m6_0 -> m6_1  [key=0, style=solid];
m6_6 -> m6_19  [key=2, style=dotted];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_8  [color=darkseagreen4, key=1, label=ser, style=dashed];
m6_13 -> m6_24  [key=2, style=dotted];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_6  [key=2, style=dotted];
m6_13 -> m6_15  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_18  [key=2, style=dotted];
m6_5 -> m6_3  [color=blue, key=0, style=bold];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_20  [key=2, style=dotted];
m6_1 -> m6_13  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_15  [key=2, style=dotted];
m6_1 -> m6_11  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_1 -> m6_12  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_23  [key=2, style=dotted];
m6_2 -> m6_5  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2 -> m6_8  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2 -> m6_16  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_17  [key=2, style=dotted];
m6_2 -> m6_4  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_6  [key=2, style=dotted];
m6_4 -> m6_7  [key=2, style=dotted];
m6_9 -> m6_14  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_21  [key=2, style=dotted];
m6_9 -> m6_6  [key=2, style=dotted];
m6_9 -> m6_11  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_8  [color=blue, key=0, style=bold];
m6_14 -> m6_0  [color=blue, key=0, style=bold];
m6_14 -> m6_12  [color=blue, key=0, style=bold];
m6_2373 -> m6_2374  [key=0, style=solid];
m6_2376 -> m6_24  [key=2, style=dotted];
m6_2376 -> m6_2377  [key=0, style=solid];
m6_2375 -> m6_2376  [key=0, style=solid];
m6_2375 -> m6_2381  [key=2, style=dotted];
m6_2375 -> m6_2382  [key=2, style=dotted];
m6_2375 -> m6_1296  [key=2, style=dotted];
m6_2374 -> m6_2375  [key=0, style=solid];
m6_2374 -> m6_2378  [key=2, style=dotted];
m6_2374 -> m6_2379  [key=2, style=dotted];
m6_2374 -> m6_2380  [key=2, style=dotted];
m6_2377 -> m6_2373  [color=blue, key=0, style=bold];
m6_2707 -> m6_2708  [key=0, style=solid];
m6_2711 -> m6_24  [key=2, style=dotted];
m6_2711 -> m6_2712  [key=0, style=solid];
m6_2710 -> m6_2711  [key=0, style=solid];
m6_2710 -> m6_175  [key=2, style=dotted];
m6_2710 -> m6_296  [key=2, style=dotted];
m6_2709 -> m6_129  [key=2, style=dotted];
m6_2709 -> m6_2710  [key=0, style=solid];
m6_2708 -> m6_2709  [key=0, style=solid];
m6_2708 -> m6_2713  [key=2, style=dotted];
m6_2712 -> m6_2707  [color=blue, key=0, style=bold];
m6_2961 -> m6_2962  [key=0, style=solid];
m6_2969 -> m6_24  [key=2, style=dotted];
m6_2969 -> m6_2970  [key=0, style=solid];
m6_2968 -> m6_2969  [key=0, style=solid];
m6_2968 -> m6_2976  [key=2, style=dotted];
m6_2964 -> m6_2968  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_2964 -> m6_2971  [key=2, style=dotted];
m6_2964 -> m6_2965  [key=0, style=solid];
m6_2967 -> m6_2968  [key=0, style=solid];
m6_2967 -> m6_2975  [key=2, style=dotted];
m6_2963 -> m6_2964  [key=0, style=solid];
m6_2963 -> m6_768  [key=2, style=dotted];
m6_2963 -> m6_2966  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2965 -> m6_2967  [color=darkseagreen4, key=1, label=jw, style=dashed];
m6_2965 -> m6_2972  [key=2, style=dotted];
m6_2965 -> m6_2966  [key=0, style=solid];
m6_2966 -> m6_2967  [key=0, style=solid];
m6_2966 -> m6_2973  [key=2, style=dotted];
m6_2966 -> m6_2974  [key=2, style=dotted];
m6_2962 -> m6_2963  [key=0, style=solid];
m6_2970 -> m6_2961  [color=blue, key=0, style=bold];
m6_3080 -> m6_3081  [key=0, style=solid];
m6_3082 -> m6_60  [key=2, style=dotted];
m6_3082 -> m6_3083  [key=0, style=solid];
m6_3082 -> m6_3084  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3081 -> m6_3085  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3081 -> m6_3082  [key=0, style=solid];
m6_3083 -> m6_3080  [color=blue, key=0, style=bold];
m6_2123 -> m6_2126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_2123 -> m6_2124  [key=0, style=solid];
m6_2127 -> m6_2127  [color=darkseagreen4, key=1, label=entry, style=dashed];
m6_2127 -> m6_2126  [key=0, style=solid];
m6_2126 -> m6_2127  [key=0, style=solid];
m6_2126 -> m6_2128  [key=0, style=solid];
m6_2124 -> m6_2126  [key=0, style=solid];
m6_2124 -> m6_2125  [key=0, style=solid];
m6_2125 -> m6_2128  [key=0, style=solid];
m6_2128 -> m6_2123  [color=blue, key=0, style=bold];
m6_2580 -> m6_2581  [key=0, style=solid];
m6_2582 -> m6_42  [key=2, style=dotted];
m6_2582 -> m6_2583  [key=0, style=solid];
m6_2581 -> m6_41  [key=2, style=dotted];
m6_2581 -> m6_2582  [key=0, style=solid];
m6_2581 -> m6_2584  [key=2, style=dotted];
m6_2583 -> m6_2580  [color=blue, key=0, style=bold];
m6_1170 -> m6_1171  [key=0, style=solid];
m6_1173 -> m6_24  [key=2, style=dotted];
m6_1173 -> m6_1174  [key=0, style=solid];
m6_1174 -> m6_24  [key=2, style=dotted];
m6_1174 -> m6_1175  [key=0, style=solid];
m6_1175 -> m6_24  [key=2, style=dotted];
m6_1175 -> m6_1176  [key=0, style=solid];
m6_1176 -> m6_24  [key=2, style=dotted];
m6_1176 -> m6_1177  [key=0, style=solid];
m6_1177 -> m6_24  [key=2, style=dotted];
m6_1177 -> m6_1178  [key=0, style=solid];
m6_1178 -> m6_24  [key=2, style=dotted];
m6_1178 -> m6_1179  [key=0, style=solid];
m6_1172 -> m6_1173  [key=0, style=solid];
m6_1172 -> m6_1174  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_1172 -> m6_1175  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_1172 -> m6_1176  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_1172 -> m6_1177  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_1172 -> m6_1178  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_1172 -> m6_49  [key=2, style=dotted];
m6_1171 -> m6_1172  [key=0, style=solid];
m6_1179 -> m6_1170  [color=blue, key=0, style=bold];
m6_1018 -> m6_1019  [key=0, style=solid];
m6_1020 -> m6_24  [key=2, style=dotted];
m6_1020 -> m6_1021  [key=0, style=solid];
m6_1022 -> m6_24  [key=2, style=dotted];
m6_1022 -> m6_1023  [key=0, style=solid];
m6_1023 -> m6_24  [key=2, style=dotted];
m6_1023 -> m6_1024  [key=0, style=solid];
m6_1019 -> m6_1020  [key=0, style=solid];
m6_1019 -> m6_129  [key=2, style=dotted];
m6_1019 -> m6_1025  [key=2, style=dotted];
m6_1021 -> m6_1022  [key=0, style=solid];
m6_1021 -> m6_1023  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1021 -> m6_49  [key=2, style=dotted];
m6_1024 -> m6_1018  [color=blue, key=0, style=bold];
m6_2493 -> m6_2494  [key=0, style=solid];
m6_2495 -> m6_24  [key=2, style=dotted];
m6_2495 -> m6_2496  [key=0, style=solid];
m6_2496 -> m6_24  [key=2, style=dotted];
m6_2496 -> m6_2497  [key=0, style=solid];
m6_2497 -> m6_24  [key=2, style=dotted];
m6_2497 -> m6_2498  [key=0, style=solid];
m6_2498 -> m6_24  [key=2, style=dotted];
m6_2498 -> m6_2499  [key=0, style=solid];
m6_2494 -> m6_2495  [key=0, style=solid];
m6_2494 -> m6_2496  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_2494 -> m6_2497  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_2494 -> m6_2498  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_2494 -> m6_936  [key=2, style=dotted];
m6_2499 -> m6_2493  [color=blue, key=0, style=bold];
m6_805 -> m6_806  [key=0, style=solid];
m6_809 -> m6_24  [key=2, style=dotted];
m6_809 -> m6_810  [key=0, style=solid];
m6_811 -> m6_24  [key=2, style=dotted];
m6_811 -> m6_812  [key=0, style=solid];
m6_807 -> m6_809  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_807 -> m6_811  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_807 -> m6_808  [key=0, style=solid];
m6_807 -> m6_49  [key=2, style=dotted];
m6_807 -> m6_810  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_808 -> m6_809  [key=0, style=solid];
m6_808 -> m6_797  [key=2, style=dotted];
m6_810 -> m6_811  [key=0, style=solid];
m6_810 -> m6_797  [key=2, style=dotted];
m6_806 -> m6_807  [key=0, style=solid];
m6_812 -> m6_805  [color=blue, key=0, style=bold];
m6_1078 -> m6_1079  [key=0, style=solid];
m6_1087 -> m6_24  [key=2, style=dotted];
m6_1087 -> m6_1088  [key=0, style=solid];
m6_1086 -> m6_24  [key=2, style=dotted];
m6_1086 -> m6_1087  [key=0, style=solid];
m6_1085 -> m6_24  [key=2, style=dotted];
m6_1085 -> m6_1086  [key=0, style=solid];
m6_1081 -> m6_1087  [color=darkseagreen4, key=1, label=javaScriptSerializerResult, style=dashed];
m6_1081 -> m6_1082  [key=0, style=solid];
m6_1081 -> m6_1090  [key=2, style=dotted];
m6_1084 -> m6_1087  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m6_1084 -> m6_1086  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m6_1084 -> m6_1085  [key=0, style=solid];
m6_1084 -> m6_49  [key=2, style=dotted];
m6_1083 -> m6_1086  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m6_1083 -> m6_1084  [key=0, style=solid];
m6_1083 -> m6_1075  [key=2, style=dotted];
m6_1083 -> m6_1076  [key=2, style=dotted];
m6_1083 -> m6_1077  [key=2, style=dotted];
m6_1079 -> m6_1081  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1079 -> m6_1084  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1079 -> m6_1083  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1079 -> m6_1080  [key=0, style=solid];
m6_1080 -> m6_1081  [key=0, style=solid];
m6_1080 -> m6_1089  [key=2, style=dotted];
m6_1082 -> m6_1083  [key=0, style=solid];
m6_1082 -> m6_914  [key=2, style=dotted];
m6_1088 -> m6_1078  [color=blue, key=0, style=bold];
m6_3931 -> m6_3932  [key=0, style=solid];
m6_3932 -> m6_3900  [key=2, style=dotted];
m6_3932 -> m6_3933  [key=0, style=solid];
m6_3933 -> m6_3931  [color=blue, key=0, style=bold];
m6_1053 -> m6_1054  [key=0, style=solid];
m6_1054 -> m6_60  [key=2, style=dotted];
m6_1054 -> m6_1055  [key=0, style=solid];
m6_1054 -> m6_1056  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1055 -> m6_1053  [color=blue, key=0, style=bold];
m6_3319 -> m6_3320  [key=0, style=solid];
m6_3320 -> m6_998  [key=2, style=dotted];
m6_3320 -> m6_3321  [key=0, style=solid];
m6_3320 -> m6_3322  [key=2, style=dotted];
m6_3321 -> m6_3319  [color=blue, key=0, style=bold];
m6_4062 -> m6_4063  [key=0, style=solid];
m6_4067 -> m6_24  [key=2, style=dotted];
m6_4067 -> m6_4068  [key=0, style=solid];
m6_4066 -> m6_4067  [key=0, style=solid];
m6_4066 -> m6_49  [key=2, style=dotted];
m6_4064 -> m6_4066  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4064 -> m6_41  [key=2, style=dotted];
m6_4064 -> m6_4065  [key=0, style=solid];
m6_4065 -> m6_4066  [key=0, style=solid];
m6_4065 -> m6_42  [key=2, style=dotted];
m6_4063 -> m6_4064  [key=0, style=solid];
m6_4063 -> m6_4069  [key=2, style=dotted];
m6_4068 -> m6_4062  [color=blue, key=0, style=bold];
m6_871 -> m6_872  [key=0, style=solid];
m6_878 -> m6_42  [key=2, style=dotted];
m6_878 -> m6_879  [key=0, style=solid];
m6_877 -> m6_41  [key=2, style=dotted];
m6_877 -> m6_878  [key=0, style=solid];
m6_872 -> m6_877  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_872 -> m6_873  [key=0, style=solid];
m6_872 -> m6_880  [key=2, style=dotted];
m6_872 -> m6_874  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_872 -> m6_875  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_872 -> m6_876  [color=darkseagreen4, key=1, label=baseWith, style=dashed];
m6_876 -> m6_877  [key=0, style=solid];
m6_873 -> m6_874  [key=0, style=solid];
m6_874 -> m6_875  [key=0, style=solid];
m6_875 -> m6_876  [key=0, style=solid];
m6_879 -> m6_871  [color=blue, key=0, style=bold];
m6_431 -> m6_432  [key=0, style=solid];
m6_431 -> m6_296  [key=2, style=dotted];
m6_431 -> m6_365  [key=2, style=dotted];
m6_434 -> m6_24  [key=2, style=dotted];
m6_434 -> m6_435  [key=0, style=solid];
m6_434 -> m6_365  [key=2, style=dotted];
m6_435 -> m6_24  [key=2, style=dotted];
m6_435 -> m6_436  [key=0, style=solid];
m6_435 -> m6_451  [key=2, style=dotted];
m6_436 -> m6_24  [key=2, style=dotted];
m6_436 -> m6_437  [key=0, style=solid];
m6_436 -> m6_439  [key=0, style=solid];
m6_436 -> m6_295  [key=2, style=dotted];
m6_437 -> m6_24  [key=2, style=dotted];
m6_437 -> m6_438  [key=0, style=solid];
m6_437 -> m6_365  [key=2, style=dotted];
m6_433 -> m6_434  [key=0, style=solid];
m6_433 -> m6_435  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_433 -> m6_436  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_433 -> m6_437  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_433 -> m6_49  [key=2, style=dotted];
m6_433 -> m6_295  [key=2, style=dotted];
m6_432 -> m6_433  [key=0, style=solid];
m6_432 -> m6_258  [key=2, style=dotted];
m6_438 -> m6_431  [color=blue, key=0, style=bold];
m6_438 -> m6_439  [key=0, style=solid];
m6_438 -> m6_451  [key=2, style=dotted];
m6_4041 -> m6_4042  [key=0, style=solid];
m6_4048 -> m6_24  [key=2, style=dotted];
m6_4048 -> m6_4049  [key=0, style=solid];
m6_4053 -> m6_24  [key=2, style=dotted];
m6_4053 -> m6_4054  [key=0, style=solid];
m6_4046 -> m6_24  [key=2, style=dotted];
m6_4046 -> m6_4047  [key=0, style=solid];
m6_4051 -> m6_24  [key=2, style=dotted];
m6_4051 -> m6_4052  [key=0, style=solid];
m6_4052 -> m6_24  [key=2, style=dotted];
m6_4052 -> m6_4053  [key=0, style=solid];
m6_4052 -> m6_375  [key=2, style=dotted];
m6_4042 -> m6_4048  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_4042 -> m6_4053  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_4042 -> m6_954  [key=2, style=dotted];
m6_4042 -> m6_4043  [key=0, style=solid];
m6_4042 -> m6_1109  [key=2, style=dotted];
m6_4042 -> m6_4045  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_4047 -> m6_4048  [key=0, style=solid];
m6_4047 -> m6_296  [key=2, style=dotted];
m6_4049 -> m6_16  [key=2, style=dotted];
m6_4049 -> m6_373  [key=2, style=dotted];
m6_4049 -> m6_4050  [key=0, style=solid];
m6_4050 -> m6_4053  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_4050 -> m6_4051  [key=0, style=solid];
m6_4050 -> m6_4052  [color=darkseagreen4, key=1, label=v, style=dashed];
m6_4050 -> m6_3357  [key=2, style=dotted];
m6_4045 -> m6_4046  [key=0, style=solid];
m6_4045 -> m6_4047  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4045 -> m6_4049  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4045 -> m6_176  [key=2, style=dotted];
m6_4043 -> m6_4049  [color=darkseagreen4, key=1, label=dateFormatString, style=dashed];
m6_4043 -> m6_4044  [key=0, style=solid];
m6_4044 -> m6_4047  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_4044 -> m6_4045  [key=0, style=solid];
m6_4044 -> m6_175  [key=2, style=dotted];
m6_4054 -> m6_4041  [color=blue, key=0, style=bold];
m6_3731 -> m6_3732  [key=0, style=solid];
m6_3731 -> m6_3733  [color=darkseagreen4, key=1, label=TSecond, style=dashed];
m6_3732 -> m6_3733  [key=0, style=solid];
m6_3733 -> m6_3734  [key=0, style=solid];
m6_3734 -> m6_3731  [color=blue, key=0, style=bold];
m6_4157 -> m6_4158  [key=0, style=solid];
m6_4158 -> m6_20  [key=2, style=dotted];
m6_4158 -> m6_4159  [key=0, style=solid];
m6_4159 -> m6_1075  [key=2, style=dotted];
m6_4159 -> m6_4160  [key=0, style=solid];
m6_4159 -> m6_4162  [key=2, style=dotted];
m6_4159 -> m6_3079  [key=2, style=dotted];
m6_4160 -> m6_4161  [key=0, style=solid];
m6_4161 -> m6_4157  [color=blue, key=0, style=bold];
m6_2949 -> m6_2950  [key=0, style=solid];
m6_2954 -> m6_24  [key=2, style=dotted];
m6_2954 -> m6_2955  [key=0, style=solid];
m6_2955 -> m6_24  [key=2, style=dotted];
m6_2955 -> m6_2956  [key=0, style=solid];
m6_2956 -> m6_24  [key=2, style=dotted];
m6_2956 -> m6_2957  [key=0, style=solid];
m6_2957 -> m6_24  [key=2, style=dotted];
m6_2957 -> m6_2958  [key=0, style=solid];
m6_2958 -> m6_24  [key=2, style=dotted];
m6_2958 -> m6_2959  [key=0, style=solid];
m6_2950 -> m6_2954  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2950 -> m6_2955  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2950 -> m6_2956  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2950 -> m6_2957  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2950 -> m6_2958  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2950 -> m6_1246  [key=2, style=dotted];
m6_2950 -> m6_1110  [key=2, style=dotted];
m6_2950 -> m6_2951  [key=0, style=solid];
m6_2950 -> m6_2948  [key=2, style=dotted];
m6_2950 -> m6_2960  [key=2, style=dotted];
m6_2950 -> m6_1708  [key=2, style=dotted];
m6_2953 -> m6_2954  [key=0, style=solid];
m6_2953 -> m6_2955  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2953 -> m6_2956  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2953 -> m6_2957  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2953 -> m6_2958  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2953 -> m6_49  [key=2, style=dotted];
m6_2951 -> m6_2953  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2951 -> m6_41  [key=2, style=dotted];
m6_2951 -> m6_2952  [key=0, style=solid];
m6_2952 -> m6_2953  [key=0, style=solid];
m6_2952 -> m6_42  [key=2, style=dotted];
m6_2959 -> m6_2949  [color=blue, key=0, style=bold];
m6_233 -> m6_24  [key=2, style=dotted];
m6_233 -> m6_234  [key=0, style=solid];
m6_234 -> m6_229  [color=blue, key=0, style=bold];
m6_234 -> m6_235  [key=0, style=solid];
m6_2831 -> m6_2832  [key=0, style=solid];
m6_2838 -> m6_24  [key=2, style=dotted];
m6_2838 -> m6_2839  [key=0, style=solid];
m6_2839 -> m6_24  [key=2, style=dotted];
m6_2839 -> m6_2840  [key=0, style=solid];
m6_2840 -> m6_24  [key=2, style=dotted];
m6_2840 -> m6_2841  [key=0, style=solid];
m6_2841 -> m6_24  [key=2, style=dotted];
m6_2841 -> m6_2842  [key=0, style=solid];
m6_2832 -> m6_2838  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2832 -> m6_2839  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2832 -> m6_2833  [key=0, style=solid];
m6_2832 -> m6_2827  [key=2, style=dotted];
m6_2832 -> m6_2834  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2832 -> m6_2835  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_2837 -> m6_2838  [key=0, style=solid];
m6_2837 -> m6_2839  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2837 -> m6_2840  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2837 -> m6_2841  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_2837 -> m6_49  [key=2, style=dotted];
m6_2833 -> m6_322  [key=2, style=dotted];
m6_2833 -> m6_2834  [key=0, style=solid];
m6_2834 -> m6_322  [key=2, style=dotted];
m6_2834 -> m6_2835  [key=0, style=solid];
m6_2835 -> m6_2837  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2835 -> m6_41  [key=2, style=dotted];
m6_2835 -> m6_2836  [key=0, style=solid];
m6_2836 -> m6_2837  [key=0, style=solid];
m6_2836 -> m6_42  [key=2, style=dotted];
m6_2842 -> m6_2831  [color=blue, key=0, style=bold];
m6_1660 -> m6_1661  [key=0, style=solid];
m6_1663 -> m6_24  [key=2, style=dotted];
m6_1663 -> m6_1664  [key=0, style=solid];
m6_1664 -> m6_24  [key=2, style=dotted];
m6_1664 -> m6_1665  [key=0, style=solid];
m6_1665 -> m6_24  [key=2, style=dotted];
m6_1665 -> m6_1666  [key=0, style=solid];
m6_1662 -> m6_1663  [key=0, style=solid];
m6_1662 -> m6_1664  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1662 -> m6_1665  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1662 -> m6_175  [key=2, style=dotted];
m6_1662 -> m6_296  [key=2, style=dotted];
m6_1661 -> m6_1662  [key=0, style=solid];
m6_1666 -> m6_1660  [color=blue, key=0, style=bold];
m6_1756 -> m6_1757  [key=0, style=solid];
m6_1760 -> m6_24  [key=2, style=dotted];
m6_1760 -> m6_1761  [key=0, style=solid];
m6_1761 -> m6_24  [key=2, style=dotted];
m6_1761 -> m6_1762  [key=0, style=solid];
m6_1762 -> m6_24  [key=2, style=dotted];
m6_1762 -> m6_1763  [key=0, style=solid];
m6_1759 -> m6_1760  [key=0, style=solid];
m6_1759 -> m6_1761  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_1759 -> m6_1762  [color=darkseagreen4, key=1, label=a, style=dashed];
m6_1759 -> m6_1764  [key=2, style=dotted];
m6_1758 -> m6_1759  [key=0, style=solid];
m6_1758 -> m6_49  [key=2, style=dotted];
m6_1757 -> m6_1758  [key=0, style=solid];
m6_1763 -> m6_1756  [color=blue, key=0, style=bold];
m6_3806 -> m6_3807  [key=0, style=solid];
m6_3812 -> m6_542  [key=2, style=dotted];
m6_3812 -> m6_3813  [key=0, style=solid];
m6_3812 -> m6_175  [key=2, style=dotted];
m6_3812 -> m6_176  [key=2, style=dotted];
m6_3807 -> m6_1246  [key=2, style=dotted];
m6_3807 -> m6_3808  [key=0, style=solid];
m6_3807 -> m6_740  [key=2, style=dotted];
m6_3807 -> m6_3809  [color=darkseagreen4, key=1, label=john, style=dashed];
m6_3807 -> m6_3810  [color=darkseagreen4, key=1, label=john, style=dashed];
m6_3807 -> m6_3811  [color=darkseagreen4, key=1, label=john, style=dashed];
m6_3808 -> m6_1246  [key=2, style=dotted];
m6_3808 -> m6_3809  [key=0, style=solid];
m6_3808 -> m6_740  [key=2, style=dotted];
m6_3808 -> m6_3810  [color=darkseagreen4, key=1, label=jane, style=dashed];
m6_3808 -> m6_3811  [color=darkseagreen4, key=1, label=jane, style=dashed];
m6_3811 -> m6_3812  [key=0, style=solid];
m6_3811 -> m6_134  [key=2, style=dotted];
m6_3813 -> m6_42  [key=2, style=dotted];
m6_3813 -> m6_3814  [key=0, style=solid];
m6_3809 -> m6_3810  [key=0, style=solid];
m6_3810 -> m6_3811  [key=0, style=solid];
m6_3814 -> m6_3806  [color=blue, key=0, style=bold];
m6_2068 -> m6_2069  [key=0, style=solid];
m6_2071 -> m6_24  [key=2, style=dotted];
m6_2071 -> m6_2072  [key=0, style=solid];
m6_2070 -> m6_2071  [key=0, style=solid];
m6_2070 -> m6_49  [key=2, style=dotted];
m6_2069 -> m6_2070  [key=0, style=solid];
m6_2072 -> m6_2068  [color=blue, key=0, style=bold];
m6_1847 -> m6_1848  [key=0, style=solid];
m6_1849 -> m6_60  [key=2, style=dotted];
m6_1849 -> m6_1850  [key=0, style=solid];
m6_1849 -> m6_1851  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1848 -> m6_1849  [key=0, style=solid];
m6_1848 -> m6_1852  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1850 -> m6_1847  [color=blue, key=0, style=bold];
m6_4114 -> m6_4115  [key=0, style=solid];
m6_4118 -> m6_24  [key=2, style=dotted];
m6_4118 -> m6_4119  [key=0, style=solid];
m6_4117 -> m6_4118  [key=0, style=solid];
m6_4117 -> m6_49  [key=2, style=dotted];
m6_4116 -> m6_129  [key=2, style=dotted];
m6_4116 -> m6_4117  [key=0, style=solid];
m6_4115 -> m6_4116  [key=0, style=solid];
m6_4115 -> m6_4120  [key=2, style=dotted];
m6_4119 -> m6_4114  [color=blue, key=0, style=bold];
m6_43 -> m6_44  [key=0, style=solid];
m6_45 -> m6_24  [key=2, style=dotted];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_43  [color=blue, key=0, style=bold];
m6_47 -> m6_24  [key=2, style=dotted];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_6  [key=2, style=dotted];
m6_47 -> m6_51  [key=2, style=dotted];
m6_47 -> m6_49  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_49  [key=2, style=dotted];
m6_44 -> m6_41  [key=2, style=dotted];
m6_44 -> m6_42  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_49  [key=2, style=dotted];
m6_46 -> m6_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_48 -> m6_43  [color=blue, key=0, style=bold];
m6_48 -> m6_49  [key=0, style=solid];
m6_3901 -> m6_3902  [key=0, style=solid];
m6_3902 -> m6_3900  [key=2, style=dotted];
m6_3902 -> m6_3903  [key=0, style=solid];
m6_3903 -> m6_3901  [color=blue, key=0, style=bold];
m6_2073 -> m6_2074  [key=0, style=solid];
m6_2076 -> m6_1246  [key=2, style=dotted];
m6_2076 -> m6_2077  [key=0, style=solid];
m6_2074 -> m6_2076  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2074 -> m6_2075  [key=0, style=solid];
m6_2074 -> m6_2084  [key=2, style=dotted];
m6_2074 -> m6_2077  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2074 -> m6_2080  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_2075 -> m6_2076  [key=0, style=solid];
m6_2075 -> m6_2085  [key=2, style=dotted];
m6_2077 -> m6_2078  [key=0, style=solid];
m6_2077 -> m6_2086  [key=2, style=dotted];
m6_2081 -> m6_916  [key=2, style=dotted];
m6_2081 -> m6_2082  [key=0, style=solid];
m6_2082 -> m6_917  [key=2, style=dotted];
m6_2082 -> m6_2083  [key=0, style=solid];
m6_2079 -> m6_914  [key=2, style=dotted];
m6_2079 -> m6_2080  [key=0, style=solid];
m6_2080 -> m6_915  [key=2, style=dotted];
m6_2080 -> m6_2081  [key=0, style=solid];
m6_2078 -> m6_834  [key=2, style=dotted];
m6_2078 -> m6_2081  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_2078 -> m6_2079  [key=0, style=solid];
m6_2078 -> m6_2080  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_2083 -> m6_2073  [color=blue, key=0, style=bold];
m6_3779 -> m6_3780  [key=0, style=solid];
m6_3784 -> m6_24  [key=2, style=dotted];
m6_3784 -> m6_3785  [key=0, style=solid];
m6_3783 -> m6_3784  [key=0, style=solid];
m6_3783 -> m6_20  [key=2, style=dotted];
m6_3780 -> m6_16  [key=2, style=dotted];
m6_3780 -> m6_373  [key=2, style=dotted];
m6_3780 -> m6_3783  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_3780 -> m6_3781  [key=0, style=solid];
m6_3782 -> m6_3783  [key=0, style=solid];
m6_3782 -> m6_833  [key=2, style=dotted];
m6_3781 -> m6_175  [key=2, style=dotted];
m6_3781 -> m6_3782  [key=0, style=solid];
m6_3785 -> m6_3779  [color=blue, key=0, style=bold];
m6_993 -> m6_994  [key=0, style=solid];
m6_996 -> m6_24  [key=2, style=dotted];
m6_996 -> m6_997  [key=0, style=solid];
m6_996 -> m6_998  [key=2, style=dotted];
m6_995 -> m6_996  [key=0, style=solid];
m6_995 -> m6_936  [key=2, style=dotted];
m6_994 -> m6_995  [key=0, style=solid];
m6_997 -> m6_993  [color=blue, key=0, style=bold];
m6_1928 -> m6_1929  [key=0, style=solid];
m6_1930 -> m6_1246  [key=2, style=dotted];
m6_1930 -> m6_1931  [key=0, style=solid];
m6_1930 -> m6_832  [key=2, style=dotted];
m6_1931 -> m6_1246  [key=2, style=dotted];
m6_1931 -> m6_1932  [key=0, style=solid];
m6_1931 -> m6_832  [key=2, style=dotted];
m6_1933 -> m6_42  [key=2, style=dotted];
m6_1933 -> m6_1934  [key=0, style=solid];
m6_1929 -> m6_196  [key=2, style=dotted];
m6_1929 -> m6_1930  [key=0, style=solid];
m6_1929 -> m6_1931  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m6_1929 -> m6_1932  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m6_1932 -> m6_41  [key=2, style=dotted];
m6_1932 -> m6_1933  [key=0, style=solid];
m6_1934 -> m6_1928  [color=blue, key=0, style=bold];
m6_2612 -> m6_2613  [key=0, style=solid];
m6_2614 -> m6_24  [key=2, style=dotted];
m6_2614 -> m6_2615  [key=0, style=solid];
m6_2613 -> m6_2614  [key=0, style=solid];
m6_2613 -> m6_49  [key=2, style=dotted];
m6_2615 -> m6_2612  [color=blue, key=0, style=bold];
m6_4005 -> m6_4006  [key=0, style=solid];
m6_4012 -> m6_24  [key=2, style=dotted];
m6_4012 -> m6_4013  [key=0, style=solid];
m6_4012 -> m6_1681  [key=2, style=dotted];
m6_4006 -> m6_4012  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_4006 -> m6_954  [key=2, style=dotted];
m6_4006 -> m6_4007  [key=0, style=solid];
m6_4006 -> m6_4009  [color=darkseagreen4, key=1, label=dt, style=dashed];
m6_4011 -> m6_4012  [key=0, style=solid];
m6_4011 -> m6_296  [key=2, style=dotted];
m6_4007 -> m6_4008  [key=0, style=solid];
m6_4009 -> m6_4011  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4009 -> m6_176  [key=2, style=dotted];
m6_4009 -> m6_196  [key=2, style=dotted];
m6_4009 -> m6_4010  [key=0, style=solid];
m6_4008 -> m6_4011  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_4008 -> m6_175  [key=2, style=dotted];
m6_4008 -> m6_4009  [key=0, style=solid];
m6_4010 -> m6_4011  [key=0, style=solid];
m6_4010 -> m6_42  [key=2, style=dotted];
m6_4013 -> m6_4005  [color=blue, key=0, style=bold];
m6_747 -> m6_751  [key=0, style=solid];
m6_2500 -> m6_2501  [key=0, style=solid];
m6_2504 -> m6_24  [key=2, style=dotted];
m6_2504 -> m6_2505  [key=0, style=solid];
m6_2503 -> m6_2504  [key=0, style=solid];
m6_2503 -> m6_49  [key=2, style=dotted];
m6_2503 -> m6_2505  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_2503 -> m6_2506  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_2503 -> m6_2507  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_2505 -> m6_2506  [key=0, style=solid];
m6_2505 -> m6_2509  [key=2, style=dotted];
m6_2505 -> m6_22  [key=2, style=dotted];
m6_2501 -> m6_2503  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m6_2501 -> m6_41  [key=2, style=dotted];
m6_2501 -> m6_2502  [key=0, style=solid];
m6_2501 -> m6_310  [key=2, style=dotted];
m6_2502 -> m6_2503  [key=0, style=solid];
m6_2502 -> m6_42  [key=2, style=dotted];
m6_2506 -> m6_22  [key=2, style=dotted];
m6_2506 -> m6_2507  [key=0, style=solid];
m6_2506 -> m6_2509  [key=2, style=dotted];
m6_2507 -> m6_22  [key=2, style=dotted];
m6_2507 -> m6_2508  [key=0, style=solid];
m6_2507 -> m6_2509  [key=2, style=dotted];
m6_2508 -> m6_2500  [color=blue, key=0, style=bold];
m6_376 -> m6_377  [key=0, style=solid];
m6_376 -> m6_381  [key=0, style=solid];
m6_376 -> m6_378  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m6_376 -> m6_379  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m6_1701 -> m6_1702  [key=0, style=solid];
m6_1704 -> m6_24  [key=2, style=dotted];
m6_1704 -> m6_1705  [key=0, style=solid];
m6_1704 -> m6_1709  [key=2, style=dotted];
m6_1706 -> m6_24  [key=2, style=dotted];
m6_1706 -> m6_1707  [key=0, style=solid];
m6_1702 -> m6_1704  [color=darkseagreen4, key=1, label=uri, style=dashed];
m6_1702 -> m6_1706  [color=darkseagreen4, key=1, label=uri, style=dashed];
m6_1702 -> m6_1703  [key=0, style=solid];
m6_1702 -> m6_1708  [key=2, style=dotted];
m6_1703 -> m6_1704  [key=0, style=solid];
m6_1703 -> m6_129  [key=2, style=dotted];
m6_1703 -> m6_1705  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1705 -> m6_1706  [key=0, style=solid];
m6_1705 -> m6_49  [key=2, style=dotted];
m6_1707 -> m6_1701  [color=blue, key=0, style=bold];
m6_2412 -> m6_2413  [key=0, style=solid];
m6_2421 -> m6_60  [key=2, style=dotted];
m6_2421 -> m6_2422  [key=0, style=solid];
m6_2421 -> m6_2423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_2413 -> m6_196  [key=2, style=dotted];
m6_2413 -> m6_2414  [key=0, style=solid];
m6_2413 -> m6_2415  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_2413 -> m6_2419  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_2416 -> m6_196  [key=2, style=dotted];
m6_2416 -> m6_2417  [key=0, style=solid];
m6_2416 -> m6_2418  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2416 -> m6_2419  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2416 -> m6_2420  [color=darkseagreen4, key=1, label=child, style=dashed];
m6_2420 -> m6_41  [key=2, style=dotted];
m6_2420 -> m6_2424  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2420 -> m6_2421  [key=0, style=solid];
m6_2414 -> m6_832  [key=2, style=dotted];
m6_2414 -> m6_2415  [key=0, style=solid];
m6_2415 -> m6_832  [key=2, style=dotted];
m6_2415 -> m6_2416  [key=0, style=solid];
m6_2419 -> m6_832  [key=2, style=dotted];
m6_2419 -> m6_2420  [key=0, style=solid];
m6_2417 -> m6_832  [key=2, style=dotted];
m6_2417 -> m6_2418  [key=0, style=solid];
m6_2418 -> m6_832  [key=2, style=dotted];
m6_2418 -> m6_2419  [key=0, style=solid];
m6_2422 -> m6_2412  [color=blue, key=0, style=bold];
m6_3413 -> m6_3414  [key=0, style=solid];
m6_3416 -> m6_24  [key=2, style=dotted];
m6_3416 -> m6_3417  [key=0, style=solid];
m6_3415 -> m6_3416  [key=0, style=solid];
m6_3415 -> m6_129  [key=2, style=dotted];
m6_3414 -> m6_3415  [key=0, style=solid];
m6_3414 -> m6_3412  [key=2, style=dotted];
m6_3417 -> m6_3413  [color=blue, key=0, style=bold];
m6_388 -> m6_397  [key=0, style=solid];
m6_388 -> m6_453  [key=2, style=dotted];
m6_3104 -> m6_3105  [key=0, style=solid];
m6_3106 -> m6_60  [key=2, style=dotted];
m6_3106 -> m6_3107  [key=0, style=solid];
m6_3106 -> m6_3108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3105 -> m6_3109  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3105 -> m6_3106  [key=0, style=solid];
m6_3107 -> m6_3104  [color=blue, key=0, style=bold];
m6_3907 -> m6_3908  [key=0, style=solid];
m6_3908 -> m6_3900  [key=2, style=dotted];
m6_3908 -> m6_3909  [key=0, style=solid];
m6_3909 -> m6_3907  [color=blue, key=0, style=bold];
m6_3770 -> m6_3771  [key=0, style=solid];
m6_3774 -> m6_24  [key=2, style=dotted];
m6_3774 -> m6_3775  [key=0, style=solid];
m6_3771 -> m6_3774  [color=darkseagreen4, key=1, label=s1, style=dashed];
m6_3771 -> m6_3772  [key=0, style=solid];
m6_3771 -> m6_3778  [key=2, style=dotted];
m6_3771 -> m6_3775  [color=darkseagreen4, key=1, label=s1, style=dashed];
m6_3773 -> m6_3774  [key=0, style=solid];
m6_3773 -> m6_49  [key=2, style=dotted];
m6_3773 -> m6_3776  [color=darkseagreen4, key=1, label=s2, style=dashed];
m6_3775 -> m6_3776  [key=0, style=solid];
m6_3775 -> m6_3777  [key=0, style=solid];
m6_3772 -> m6_129  [key=2, style=dotted];
m6_3772 -> m6_3773  [key=0, style=solid];
m6_3776 -> m6_3775  [key=0, style=solid];
m6_3776 -> m6_22  [key=2, style=dotted];
m6_3776 -> m6_2110  [key=2, style=dotted];
m6_3777 -> m6_3770  [color=blue, key=0, style=bold];
m6_1026 -> m6_1027  [key=0, style=solid];
m6_1028 -> m6_465  [key=2, style=dotted];
m6_1028 -> m6_1029  [key=0, style=solid];
m6_1027 -> m6_1028  [key=0, style=solid];
m6_1029 -> m6_1030  [key=0, style=solid];
m6_1030 -> m6_1030  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_1030 -> m6_1031  [key=0, style=solid];
m6_1031 -> m6_1026  [color=blue, key=0, style=bold];
m6_3928 -> m6_3929  [key=0, style=solid];
m6_3929 -> m6_3900  [key=2, style=dotted];
m6_3929 -> m6_3930  [key=0, style=solid];
m6_3930 -> m6_3928  [color=blue, key=0, style=bold];
m6_2012 -> m6_2013  [key=0, style=solid];
m6_2014 -> m6_24  [key=2, style=dotted];
m6_2014 -> m6_2015  [key=0, style=solid];
m6_2014 -> m6_1399  [key=2, style=dotted];
m6_2016 -> m6_24  [key=2, style=dotted];
m6_2016 -> m6_2017  [key=0, style=solid];
m6_2016 -> m6_1399  [key=2, style=dotted];
m6_2013 -> m6_2014  [key=0, style=solid];
m6_2013 -> m6_49  [key=2, style=dotted];
m6_2015 -> m6_2016  [key=0, style=solid];
m6_2015 -> m6_49  [key=2, style=dotted];
m6_2017 -> m6_2012  [color=blue, key=0, style=bold];
m6_3755 -> m6_3756  [key=0, style=solid];
m6_3759 -> m6_24  [key=2, style=dotted];
m6_3759 -> m6_3760  [key=0, style=solid];
m6_3757 -> m6_3759  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_3757 -> m6_3758  [key=0, style=solid];
m6_3757 -> m6_41  [key=2, style=dotted];
m6_3758 -> m6_3759  [key=0, style=solid];
m6_3758 -> m6_175  [key=2, style=dotted];
m6_3758 -> m6_198  [key=2, style=dotted];
m6_3756 -> m6_376  [key=2, style=dotted];
m6_3756 -> m6_1102  [key=2, style=dotted];
m6_3756 -> m6_1110  [key=2, style=dotted];
m6_3756 -> m6_3757  [key=0, style=solid];
m6_3756 -> m6_3758  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_3756 -> m6_196  [key=2, style=dotted];
m6_3760 -> m6_3755  [color=blue, key=0, style=bold];
m6_3427 -> m6_3428  [key=0, style=solid];
m6_3432 -> m6_24  [key=2, style=dotted];
m6_3432 -> m6_3433  [key=0, style=solid];
m6_3433 -> m6_24  [key=2, style=dotted];
m6_3433 -> m6_3434  [key=0, style=solid];
m6_3433 -> m6_376  [key=2, style=dotted];
m6_3434 -> m6_24  [key=2, style=dotted];
m6_3434 -> m6_3435  [key=0, style=solid];
m6_3434 -> m6_376  [key=2, style=dotted];
m6_3431 -> m6_3432  [key=0, style=solid];
m6_3431 -> m6_3433  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3431 -> m6_3434  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m6_3431 -> m6_49  [key=2, style=dotted];
m6_3428 -> m6_376  [key=2, style=dotted];
m6_3428 -> m6_3429  [key=0, style=solid];
m6_3428 -> m6_196  [key=2, style=dotted];
m6_3429 -> m6_3431  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3429 -> m6_175  [key=2, style=dotted];
m6_3429 -> m6_198  [key=2, style=dotted];
m6_3429 -> m6_3430  [key=0, style=solid];
m6_3430 -> m6_3431  [key=0, style=solid];
m6_3430 -> m6_42  [key=2, style=dotted];
m6_3435 -> m6_3427  [color=blue, key=0, style=bold];
m6_3326 -> m6_3327  [key=0, style=solid];
m6_3332 -> m6_19  [key=2, style=dotted];
m6_3332 -> m6_3333  [key=0, style=solid];
m6_3335 -> m6_24  [key=2, style=dotted];
m6_3335 -> m6_3336  [key=0, style=solid];
m6_3336 -> m6_24  [key=2, style=dotted];
m6_3336 -> m6_3337  [key=0, style=solid];
m6_3337 -> m6_24  [key=2, style=dotted];
m6_3337 -> m6_3338  [key=0, style=solid];
m6_3331 -> m6_3332  [key=0, style=solid];
m6_3331 -> m6_3335  [key=0, style=solid];
m6_3331 -> m6_18  [key=2, style=dotted];
m6_3333 -> m6_3334  [key=0, style=solid];
m6_3333 -> m6_20  [key=2, style=dotted];
m6_3327 -> m6_3335  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_3327 -> m6_3336  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_3327 -> m6_3337  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_3327 -> m6_3328  [key=0, style=solid];
m6_3327 -> m6_134  [key=2, style=dotted];
m6_3327 -> m6_3334  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_3330 -> m6_3335  [key=0, style=solid];
m6_3330 -> m6_3331  [key=0, style=solid];
m6_3328 -> m6_3331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_3328 -> m6_3333  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_3328 -> m6_16  [key=2, style=dotted];
m6_3328 -> m6_373  [key=2, style=dotted];
m6_3328 -> m6_3329  [key=0, style=solid];
m6_3334 -> m6_3330  [key=0, style=solid];
m6_3334 -> m6_322  [key=2, style=dotted];
m6_3329 -> m6_3330  [key=0, style=solid];
m6_3338 -> m6_3326  [color=blue, key=0, style=bold];
m6_1005 -> m6_1006  [key=0, style=solid];
m6_1008 -> m6_24  [key=2, style=dotted];
m6_1008 -> m6_1009  [key=0, style=solid];
m6_1009 -> m6_24  [key=2, style=dotted];
m6_1009 -> m6_1010  [key=0, style=solid];
m6_1007 -> m6_1008  [key=0, style=solid];
m6_1007 -> m6_1009  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1007 -> m6_49  [key=2, style=dotted];
m6_1006 -> m6_129  [key=2, style=dotted];
m6_1006 -> m6_1007  [key=0, style=solid];
m6_1006 -> m6_1011  [key=2, style=dotted];
m6_1010 -> m6_1005  [color=blue, key=0, style=bold];
m6_1139 -> m6_1140  [key=0, style=solid];
m6_1147 -> m6_24  [key=2, style=dotted];
m6_1147 -> m6_1148  [key=0, style=solid];
m6_1145 -> m6_24  [key=2, style=dotted];
m6_1145 -> m6_1146  [key=0, style=solid];
m6_1140 -> m6_1147  [color=darkseagreen4, key=1, label=d, style=dashed];
m6_1140 -> m6_954  [key=2, style=dotted];
m6_1140 -> m6_1141  [key=0, style=solid];
m6_1146 -> m6_1147  [key=0, style=solid];
m6_1146 -> m6_1146  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_1146 -> m6_1150  [key=2, style=dotted];
m6_1144 -> m6_1145  [key=0, style=solid];
m6_1144 -> m6_1146  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_1144 -> m6_176  [key=2, style=dotted];
m6_1141 -> m6_1146  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_1141 -> m6_1144  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_1141 -> m6_1142  [key=0, style=solid];
m6_1142 -> m6_1146  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_1142 -> m6_1144  [color=darkseagreen4, key=1, label=settings, style=dashed];
m6_1142 -> m6_175  [key=2, style=dotted];
m6_1142 -> m6_1143  [key=0, style=solid];
m6_1143 -> m6_1144  [key=0, style=solid];
m6_1143 -> m6_1149  [key=2, style=dotted];
m6_1143 -> m6_322  [key=2, style=dotted];
m6_1148 -> m6_1139  [color=blue, key=0, style=bold];
m6_2782 -> m6_2783  [key=0, style=solid];
m6_2786 -> m6_24  [key=2, style=dotted];
m6_2786 -> m6_2787  [key=0, style=solid];
m6_2784 -> m6_2786  [color=darkseagreen4, key=1, label=withoutParameterisedConstructor, style=dashed];
m6_2784 -> m6_2785  [key=0, style=solid];
m6_2784 -> m6_49  [key=2, style=dotted];
m6_2785 -> m6_2786  [key=0, style=solid];
m6_2785 -> m6_49  [key=2, style=dotted];
m6_2783 -> m6_2784  [key=0, style=solid];
m6_2783 -> m6_2785  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2787 -> m6_2782  [color=blue, key=0, style=bold];
m6_3531 -> m6_3532  [key=0, style=solid];
m6_3536 -> m6_24  [key=2, style=dotted];
m6_3536 -> m6_3537  [key=0, style=solid];
m6_3533 -> m6_3536  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_3533 -> m6_3534  [key=0, style=solid];
m6_3533 -> m6_49  [key=2, style=dotted];
m6_3533 -> m6_3535  [color=darkseagreen4, key=1, label=exception, style=dashed];
m6_3535 -> m6_3536  [key=0, style=solid];
m6_3535 -> m6_746  [key=2, style=dotted];
m6_3532 -> m6_3533  [key=0, style=solid];
m6_3534 -> m6_3535  [key=0, style=solid];
m6_3534 -> m6_797  [key=2, style=dotted];
m6_3537 -> m6_3531  [color=blue, key=0, style=bold];
m6_412 -> m6_413  [key=0, style=solid];
m6_412 -> m6_414  [key=0, style=solid];
m6_416 -> m6_24  [key=2, style=dotted];
m6_416 -> m6_417  [key=0, style=solid];
m6_416 -> m6_419  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m6_416 -> m6_421  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m6_416 -> m6_422  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m6_416 -> m6_424  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m6_416 -> m6_425  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m6_416 -> m6_427  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m6_417 -> m6_24  [key=2, style=dotted];
m6_417 -> m6_418  [key=0, style=solid];
m6_417 -> m6_296  [key=2, style=dotted];
m6_417 -> m6_365  [key=2, style=dotted];
m6_417 -> m6_417  [color=darkorchid, key=3, label="Parameter variable System.Type prevAttributeType", style=bold];
m6_418 -> m6_24  [key=2, style=dotted];
m6_418 -> m6_419  [key=0, style=solid];
m6_418 -> m6_258  [key=2, style=dotted];
m6_413 -> m6_416  [color=darkseagreen4, key=1, label=input, style=dashed];
m6_413 -> m6_417  [color=darkseagreen4, key=1, label=input, style=dashed];
m6_413 -> m6_418  [color=darkseagreen4, key=1, label=input, style=dashed];
m6_413 -> m6_414  [key=0, style=solid];
m6_413 -> m6_420  [key=2, style=dotted];
m6_413 -> m6_296  [key=2, style=dotted];
m6_413 -> m6_365  [key=2, style=dotted];
m6_415 -> m6_416  [key=0, style=solid];
m6_415 -> m6_417  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_415 -> m6_418  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_415 -> m6_49  [key=2, style=dotted];
m6_414 -> m6_129  [key=2, style=dotted];
m6_414 -> m6_415  [key=0, style=solid];
m6_414 -> m6_447  [key=0, style=solid];
m6_414 -> m6_451  [key=2, style=dotted];
m6_419 -> m6_412  [color=blue, key=0, style=bold];
m6_419 -> m6_420  [key=0, style=solid];
m6_419 -> m6_422  [key=0, style=solid];
m6_419 -> m6_295  [key=2, style=dotted];
m6_2000 -> m6_2001  [key=0, style=solid];
m6_2008 -> m6_24  [key=2, style=dotted];
m6_2008 -> m6_2009  [key=0, style=solid];
m6_2007 -> m6_2008  [key=0, style=solid];
m6_2007 -> m6_49  [key=2, style=dotted];
m6_2005 -> m6_2007  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_2005 -> m6_2006  [key=0, style=solid];
m6_2005 -> m6_1997  [key=2, style=dotted];
m6_2006 -> m6_2007  [key=0, style=solid];
m6_2006 -> m6_42  [key=2, style=dotted];
m6_2001 -> m6_2005  [color=darkseagreen4, key=1, label=g, style=dashed];
m6_2001 -> m6_2002  [key=0, style=solid];
m6_2001 -> m6_2010  [key=2, style=dotted];
m6_2001 -> m6_2003  [color=darkseagreen4, key=1, label=g, style=dashed];
m6_2001 -> m6_2004  [color=darkseagreen4, key=1, label=g, style=dashed];
m6_2004 -> m6_2005  [key=0, style=solid];
m6_2002 -> m6_2003  [key=0, style=solid];
m6_2002 -> m6_2011  [key=2, style=dotted];
m6_2002 -> m6_1991  [key=2, style=dotted];
m6_2003 -> m6_2004  [key=0, style=solid];
m6_2003 -> m6_2011  [key=2, style=dotted];
m6_2003 -> m6_1991  [key=2, style=dotted];
m6_2009 -> m6_2000  [color=blue, key=0, style=bold];
m6_1372 -> m6_1373  [key=0, style=solid];
m6_1374 -> m6_24  [key=2, style=dotted];
m6_1374 -> m6_1375  [key=0, style=solid];
m6_1373 -> m6_1374  [key=0, style=solid];
m6_1373 -> m6_129  [key=2, style=dotted];
m6_1373 -> m6_1376  [key=2, style=dotted];
m6_1375 -> m6_1372  [color=blue, key=0, style=bold];
m6_3791 -> m6_3792  [key=0, style=solid];
m6_3792 -> m6_2357  [key=2, style=dotted];
m6_3792 -> m6_3793  [key=0, style=solid];
m6_3794 -> m6_42  [key=2, style=dotted];
m6_3794 -> m6_3795  [key=0, style=solid];
m6_3793 -> m6_41  [key=2, style=dotted];
m6_3793 -> m6_3794  [key=0, style=solid];
m6_3795 -> m6_3791  [color=blue, key=0, style=bold];
m6_383 -> m6_384  [key=0, style=solid];
m6_383 -> m6_385  [key=0, style=solid];
m6_383 -> m6_449  [key=2, style=dotted];
m6_383 -> m6_450  [key=2, style=dotted];
m6_384 -> m6_24  [key=2, style=dotted];
m6_384 -> m6_385  [key=0, style=solid];
m6_384 -> m6_388  [key=2, style=dotted];
m6_384 -> m6_129  [key=2, style=dotted];
m6_384 -> m6_397  [key=0, style=solid];
m6_384 -> m6_451  [key=2, style=dotted];
m6_386 -> m6_24  [key=2, style=dotted];
m6_386 -> m6_387  [key=0, style=solid];
m6_385 -> m6_386  [key=0, style=solid];
m6_385 -> m6_49  [key=2, style=dotted];
m6_385 -> m6_390  [key=0, style=solid];
m6_385 -> m6_452  [key=2, style=dotted];
m6_387 -> m6_383  [color=blue, key=0, style=bold];
m6_387 -> m6_388  [key=0, style=solid];
m6_387 -> m6_389  [key=0, style=solid];
m6_1859 -> m6_1860  [key=0, style=solid];
m6_1860 -> m6_60  [key=2, style=dotted];
m6_1860 -> m6_1861  [key=0, style=solid];
m6_1860 -> m6_1862  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1861 -> m6_1859  [color=blue, key=0, style=bold];
m6_1042 -> m6_1043  [key=0, style=solid];
m6_1049 -> m6_24  [key=2, style=dotted];
m6_1049 -> m6_1050  [key=0, style=solid];
m6_1050 -> m6_24  [key=2, style=dotted];
m6_1050 -> m6_1051  [key=0, style=solid];
m6_1047 -> m6_24  [key=2, style=dotted];
m6_1047 -> m6_1048  [key=0, style=solid];
m6_1043 -> m6_1049  [color=darkseagreen4, key=1, label=test, style=dashed];
m6_1043 -> m6_1050  [color=darkseagreen4, key=1, label=test, style=dashed];
m6_1043 -> m6_1044  [key=0, style=solid];
m6_1043 -> m6_1052  [key=2, style=dotted];
m6_1043 -> m6_1045  [color=darkseagreen4, key=1, label=test, style=dashed];
m6_1043 -> m6_1046  [color=darkseagreen4, key=1, label=test, style=dashed];
m6_1048 -> m6_1049  [key=0, style=solid];
m6_1048 -> m6_1050  [color=darkseagreen4, key=1, label=test2, style=dashed];
m6_1048 -> m6_49  [key=2, style=dotted];
m6_1046 -> m6_1047  [key=0, style=solid];
m6_1046 -> m6_129  [key=2, style=dotted];
m6_1046 -> m6_1048  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m6_1044 -> m6_1045  [key=0, style=solid];
m6_1045 -> m6_1046  [key=0, style=solid];
m6_1051 -> m6_1042  [color=blue, key=0, style=bold];
m6_389 -> m6_397  [key=0, style=solid];
m6_389 -> m6_451  [key=2, style=dotted];
m6_390 -> m6_391  [key=0, style=solid];
m6_390 -> m6_258  [key=2, style=dotted];
m6_392 -> m6_393  [key=0, style=solid];
m6_392 -> m6_395  [key=0, style=solid];
m6_393 -> m6_394  [key=0, style=solid];
m6_393 -> m6_259  [key=2, style=dotted];
m6_391 -> m6_392  [key=0, style=solid];
m6_391 -> m6_393  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_391 -> m6_394  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_2815 -> m6_2816  [key=0, style=solid];
m6_2818 -> m6_24  [key=2, style=dotted];
m6_2818 -> m6_2819  [key=0, style=solid];
m6_2817 -> m6_2818  [key=0, style=solid];
m6_2817 -> m6_129  [key=2, style=dotted];
m6_2816 -> m6_2817  [key=0, style=solid];
m6_2816 -> m6_2820  [key=2, style=dotted];
m6_2819 -> m6_2815  [color=blue, key=0, style=bold];
m6_3238 -> m6_3239  [key=0, style=solid];
m6_3239 -> m6_49  [key=2, style=dotted];
m6_3239 -> m6_3240  [key=0, style=solid];
m6_3240 -> m6_152  [key=2, style=dotted];
m6_3240 -> m6_3241  [key=0, style=solid];
m6_3241 -> m6_3238  [color=blue, key=0, style=bold];
m6_3118 -> m6_3119  [key=0, style=solid];
m6_3120 -> m6_60  [key=2, style=dotted];
m6_3120 -> m6_3121  [key=0, style=solid];
m6_3120 -> m6_3122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3119 -> m6_3123  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_3119 -> m6_3120  [key=0, style=solid];
m6_3121 -> m6_3118  [color=blue, key=0, style=bold];
m6_2907 -> m6_2908  [key=0, style=solid];
m6_2909 -> m6_24  [key=2, style=dotted];
m6_2909 -> m6_2910  [key=0, style=solid];
m6_2909 -> m6_375  [key=2, style=dotted];
m6_2910 -> m6_24  [key=2, style=dotted];
m6_2910 -> m6_2911  [key=0, style=solid];
m6_2910 -> m6_466  [key=2, style=dotted];
m6_2908 -> m6_2909  [key=0, style=solid];
m6_2908 -> m6_2910  [color=darkseagreen4, key=1, label=r, style=dashed];
m6_2908 -> m6_49  [key=2, style=dotted];
m6_2908 -> m6_2911  [color=darkseagreen4, key=1, label=r, style=dashed];
m6_2908 -> m6_2912  [color=darkseagreen4, key=1, label=r, style=dashed];
m6_2908 -> m6_2913  [color=darkseagreen4, key=1, label=r, style=dashed];
m6_2911 -> m6_1681  [key=2, style=dotted];
m6_2911 -> m6_2912  [key=0, style=solid];
m6_2911 -> m6_797  [key=2, style=dotted];
m6_2912 -> m6_1681  [key=2, style=dotted];
m6_2912 -> m6_797  [key=2, style=dotted];
m6_2912 -> m6_2913  [key=0, style=solid];
m6_2913 -> m6_1681  [key=2, style=dotted];
m6_2913 -> m6_152  [key=2, style=dotted];
m6_2913 -> m6_2914  [key=0, style=solid];
m6_2914 -> m6_2907  [color=blue, key=0, style=bold];
m6_4221 -> m6_3473  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m6_4221 -> m6_866  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m6_4221 -> m6_887  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m6_4221 -> m6_897  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m6_4221 -> m6_3479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m6_4221 -> m6_3480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m6_4275 -> m6_3631  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4271 -> m6_3529  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4272 -> m6_3529  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_4211 -> m6_250  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_4213 -> m6_272  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_4218 -> m6_610  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m6_4226 -> m6_1650  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m6_4226 -> m6_1644  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m6_4226 -> m6_1645  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m6_4226 -> m6_1646  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m6_4226 -> m6_1647  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m6_4263 -> m6_2898  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m6_4263 -> m6_2890  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m6_4263 -> m6_2891  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m6_4263 -> m6_2892  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m6_4263 -> m6_2895  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m6_4268 -> m6_3371  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_4269 -> m6_3386  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_4270 -> m6_3401  [color=darkseagreen4, key=1, label=errors, style=dashed];
m6_4282 -> m6_4126  [color=darkseagreen4, key=1, label=JsonMessage, style=dashed];
m6_4244 -> m6_2098  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4244 -> m6_2093  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4244 -> m6_2101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4244 -> m6_2104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4244 -> m6_2108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4244 -> m6_2112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4244 -> m6_2116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4244 -> m6_2120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4244 -> m6_2127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4244 -> m6_2130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4244 -> m6_2134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4244 -> m6_2138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4244 -> m6_2142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m6_4217 -> m6_444  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4222 -> m6_1065  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4227 -> m6_1754  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4228 -> m6_1781  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4229 -> m6_1788  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4230 -> m6_1795  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4231 -> m6_1802  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4232 -> m6_1809  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4233 -> m6_1816  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4234 -> m6_1823  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4235 -> m6_1830  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4249 -> m6_2424  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4253 -> m6_2540  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4266 -> m6_3109  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4267 -> m6_3123  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4277 -> m6_3729  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4210 -> m6_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", style=dashed];
m6_4210 -> m6_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", style=dashed];
m6_4240 -> m6_2031  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4265 -> m6_3085  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4237 -> m6_1852  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4238 -> m6_1977  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", style=dashed];
m6_4238 -> m6_1976  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", style=dashed];
m6_4261 -> m6_2829  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", style=dashed];
m6_4261 -> m6_2828  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", style=dashed];
m6_4264 -> m6_2922  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", style=dashed];
m6_4223 -> m6_1506  [color=darkseagreen4, key=1, label=strFromTest, style=dashed];
m6_4219 -> m6_685  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_686  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_687  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_688  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_689  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_695  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_696  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_698  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_699  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_700  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_706  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_708  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_709  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_710  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_711  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_713  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4219 -> m6_714  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m6_4262 -> m6_2845  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", style=dashed];
m6_4262 -> m6_2844  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", style=dashed];
m6_4245 -> m6_2159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2168  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4245 -> m6_2211  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m6_4239 -> m6_1998  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m6_4239 -> m6_1992  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m6_4239 -> m6_1995  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m6_4276 -> m6_3642  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", style=dashed];
m6_4212 -> m6_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass", style=dashed];
m6_4241 -> m6_2035  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", style=dashed];
m6_4236 -> m6_1844  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_4215 -> m6_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", style=dashed];
m6_4273 -> m6_3589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", style=dashed];
m6_4283 -> m6_4182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DecimalTest", style=dashed];
m6_4242 -> m6_2064  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1", style=dashed];
m6_4255 -> m6_2655  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", style=dashed];
m6_4280 -> m6_4079  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType", style=dashed];
m6_4248 -> m6_2333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4248 -> m6_2334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4248 -> m6_2335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4248 -> m6_2336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4248 -> m6_2337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4248 -> m6_2338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4248 -> m6_2339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4248 -> m6_2340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4248 -> m6_2341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4248 -> m6_2342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", style=dashed];
m6_4220 -> m6_842  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", style=dashed];
m6_4220 -> m6_843  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", style=dashed];
m6_4220 -> m6_846  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", style=dashed];
m6_4279 -> m6_3897  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m6_4279 -> m6_3891  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m6_4279 -> m6_3893  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m6_4279 -> m6_3895  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m6_4279 -> m6_3920  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m6_4279 -> m6_3923  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m6_4279 -> m6_3926  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m6_4247 -> m6_2322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4247 -> m6_2323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4247 -> m6_2324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4247 -> m6_2325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4247 -> m6_2326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4247 -> m6_2327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4247 -> m6_2328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4247 -> m6_2329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", style=dashed];
m6_4243 -> m6_2066  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2", style=dashed];
m6_4214 -> m6_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver", style=dashed];
m6_4258 -> m6_2674  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m6_4278 -> m6_3799  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor", style=dashed];
m7_111 -> m7_114  [key=2, style=dotted];
m7_111 -> m7_112  [key=0, style=solid];
m7_356 -> m7_357  [key=0, style=solid];
m7_356 -> m7_462  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan value", style=bold];
m7_357 -> m7_358  [key=0, style=solid];
m7_357 -> m7_361  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_357 -> m7_357  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_357 -> m7_302  [key=2, style=dotted];
m7_358 -> m7_359  [key=0, style=solid];
m7_358 -> m7_354  [key=2, style=dotted];
m7_358 -> m7_360  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m7_358 -> m7_363  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m7_358 -> m7_356  [color=blue, key=0, style=bold];
m7_361 -> m7_362  [key=0, style=solid];
m7_361 -> m7_355  [key=2, style=dotted];
m7_361 -> m7_363  [key=0, style=solid];
m7_361 -> m7_182  [key=2, style=dotted];
m7_359 -> m7_360  [key=0, style=solid];
m7_359 -> m7_366  [key=2, style=dotted];
m7_359 -> m7_362  [color=darkseagreen4, key=1, label="int?", style=dashed];
m7_360 -> m7_361  [key=0, style=solid];
m7_360 -> m7_366  [key=2, style=dotted];
m7_360 -> m7_23  [key=2, style=dotted];
m7_360 -> m7_362  [key=0, style=solid];
m7_363 -> m7_364  [key=0, style=solid];
m7_363 -> m7_113  [key=2, style=dotted];
m7_363 -> m7_359  [color=blue, key=0, style=bold];
m7_362 -> m7_363  [key=0, style=solid];
m7_362 -> m7_51  [key=2, style=dotted];
m7_362 -> m7_366  [key=2, style=dotted];
m7_362 -> m7_23  [key=2, style=dotted];
m7_362 -> m7_315  [key=2, style=dotted];
m7_364 -> m7_365  [key=0, style=solid];
m7_364 -> m7_135  [key=2, style=dotted];
m7_364 -> m7_367  [color=darkseagreen4, key=1, label="uint?", style=dashed];
m7_365 -> m7_356  [color=blue, key=0, style=bold];
m7_365 -> m7_366  [key=0, style=solid];
m7_365 -> m7_367  [key=0, style=solid];
m7_529 -> m7_424  [key=2, style=dotted];
m7_529 -> m7_566  [key=0, style=solid];
m7_255 -> m7_256  [key=0, style=solid];
m7_255 -> m7_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_204 -> m7_205  [key=0, style=solid];
m7_204 -> m7_92  [key=2, style=dotted];
m7_528 -> m7_531  [key=0, style=solid];
m7_528 -> m7_534  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m7_528 -> m7_538  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m7_528 -> m7_519  [color=darkorchid, key=3, label="Parameter variable System.IO.Stream json", style=bold];
m7_528 -> m7_520  [color=darkorchid, key=3, label="Parameter variable System.IO.Stream xml", style=bold];
m7_528 -> m7_529  [key=0, style=solid];
m7_531 -> m7_532  [key=0, style=solid];
m7_531 -> m7_65  [key=2, style=dotted];
m7_531 -> m7_533  [color=darkseagreen4, key=1, label=settings, style=dashed];
m7_531 -> m7_184  [key=2, style=dotted];
m7_531 -> m7_566  [key=0, style=solid];
m7_534 -> m7_535  [key=0, style=solid];
m7_534 -> m7_45  [key=2, style=dotted];
m7_534 -> m7_542  [key=2, style=dotted];
m7_534 -> m7_536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_538 -> m7_539  [key=0, style=solid];
m7_538 -> m7_222  [key=2, style=dotted];
m7_532 -> m7_533  [key=0, style=solid];
m7_532 -> m7_48  [key=2, style=dotted];
m7_532 -> m7_541  [key=2, style=dotted];
m7_533 -> m7_534  [key=0, style=solid];
m7_533 -> m7_515  [key=2, style=dotted];
m7_533 -> m7_535  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_533 -> m7_429  [key=2, style=dotted];
m7_533 -> m7_566  [key=0, style=solid];
m7_535 -> m7_536  [key=0, style=solid];
m7_535 -> m7_517  [key=2, style=dotted];
m7_535 -> m7_539  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_535 -> m7_175  [key=2, style=dotted];
m7_535 -> m7_566  [key=0, style=solid];
m7_536 -> m7_537  [key=0, style=solid];
m7_536 -> m7_538  [key=0, style=solid];
m7_536 -> m7_47  [key=2, style=dotted];
m7_539 -> m7_540  [key=0, style=solid];
m7_539 -> m7_223  [key=2, style=dotted];
m7_539 -> m7_353  [key=2, style=dotted];
m7_539 -> m7_566  [key=0, style=solid];
m7_537 -> m7_540  [key=0, style=solid];
m7_537 -> m7_543  [key=2, style=dotted];
m7_537 -> m7_419  [key=2, style=dotted];
m7_537 -> m7_566  [key=0, style=solid];
m7_540 -> m7_528  [color=blue, key=0, style=bold];
m7_540 -> m7_541  [key=0, style=solid];
m7_220 -> m7_227  [key=0, style=solid];
m7_220 -> m7_221  [key=0, style=solid];
m7_220 -> m7_223  [key=0, style=solid];
m7_220 -> m7_225  [key=0, style=solid];
m7_46 -> m7_47  [key=0, style=solid];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_52  [color=darkseagreen4, key=1, label=oldPosition, style=dashed];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_51  [key=0, style=solid];
m7_49 -> m7_50  [key=0, style=solid];
m7_50 -> m7_52  [key=0, style=solid];
m7_50 -> m7_54  [key=2, style=dotted];
m7_50 -> m7_27  [color=darkorchid, key=3, label="Local variable XmlNode node", style=bold];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_55  [key=2, style=dotted];
m7_52 -> m7_53  [key=0, style=solid];
m7_53 -> m7_46  [color=blue, key=0, style=bold];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_53  [color=darkorchid, key=3, label="Local variable decimal d", style=bold];
m7_374 -> m7_377  [color=darkseagreen4, key=1, label="ulong?", style=dashed];
m7_374 -> m7_375  [key=0, style=solid];
m7_374 -> m7_113  [key=2, style=dotted];
m7_376 -> m7_378  [key=0, style=solid];
m7_376 -> m7_182  [key=2, style=dotted];
m7_376 -> m7_367  [color=blue, key=0, style=bold];
m7_377 -> m7_378  [key=0, style=solid];
m7_377 -> m7_323  [key=2, style=dotted];
m7_375 -> m7_376  [key=0, style=solid];
m7_375 -> m7_377  [key=0, style=solid];
m7_375 -> m7_23  [key=2, style=dotted];
m7_378 -> m7_374  [color=blue, key=0, style=bold];
m7_355 -> m7_353  [color=blue, key=0, style=bold];
m7_82 -> m7_83  [key=0, style=solid];
m7_458 -> m7_459  [key=0, style=solid];
m7_458 -> m7_461  [key=2, style=dotted];
m7_458 -> m7_462  [key=2, style=dotted];
m7_460 -> m7_461  [key=0, style=solid];
m7_460 -> m7_453  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_460 -> m7_569  [key=0, style=solid];
m7_460 -> m7_462  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_461 -> m7_462  [key=0, style=solid];
m7_461 -> m7_468  [key=2, style=dotted];
m7_461 -> m7_469  [key=2, style=dotted];
m7_461 -> m7_456  [key=2, style=dotted];
m7_462 -> m7_463  [key=0, style=solid];
m7_462 -> m7_458  [key=2, style=dotted];
m7_462 -> m7_459  [key=2, style=dotted];
m7_462 -> m7_453  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_462 -> m7_462  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m7_462 -> m7_477  [key=0, style=solid];
m7_462 -> m7_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_491  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_499  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_505  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_509  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_521  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_527  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_537  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_539  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_543  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_547  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_553  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_555  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_557  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_558  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_462 -> m7_559  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_462 -> m7_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_462 -> m7_561  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Utilities.PrimitiveTypeCode typeCode", style=bold];
m7_462 -> m7_563  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_463 -> m7_464  [key=0, style=solid];
m7_463 -> m7_377  [key=2, style=dotted];
m7_463 -> m7_465  [color=darkseagreen4, key=1, label=xmlProduct, style=dashed];
m7_464 -> m7_465  [key=0, style=solid];
m7_464 -> m7_366  [key=2, style=dotted];
m7_464 -> m7_23  [key=2, style=dotted];
m7_464 -> m7_171  [color=blue, key=0, style=bold];
m7_465 -> m7_466  [key=0, style=solid];
m7_465 -> m7_113  [key=2, style=dotted];
m7_465 -> m7_626  [key=0, style=solid];
m7_466 -> m7_467  [key=0, style=solid];
m7_466 -> m7_23  [key=2, style=dotted];
m7_467 -> m7_460  [color=blue, key=0, style=bold];
m7_467 -> m7_468  [key=0, style=solid];
m7_467 -> m7_469  [key=2, style=dotted];
m7_468 -> m7_466  [color=blue, key=0, style=bold];
m7_470 -> m7_471  [key=0, style=solid];
m7_471 -> m7_472  [key=0, style=solid];
m7_471 -> m7_473  [key=2, style=dotted];
m7_471 -> m7_46  [key=2, style=dotted];
m7_471 -> m7_222  [key=2, style=dotted];
m7_471 -> m7_474  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_471 -> m7_475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_472 -> m7_470  [color=blue, key=0, style=bold];
m7_472 -> m7_473  [key=0, style=solid];
m7_472 -> m7_264  [key=2, style=dotted];
m7_472 -> m7_477  [color=darkseagreen4, key=1, label=sw, style=dashed];
m7_169 -> m7_170  [key=0, style=solid];
m7_169 -> m7_182  [key=2, style=dotted];
m7_308 -> m7_613  [key=0, style=solid];
m7_308 -> m7_309  [key=0, style=solid];
m7_308 -> m7_113  [key=2, style=dotted];
m7_308 -> m7_310  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_613 -> m7_308  [color=blue, key=0, style=bold];
m7_613 -> m7_345  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_23  [key=2, style=dotted];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_64  [key=2, style=dotted];
m7_62 -> m7_52  [color=blue, key=0, style=bold];
m7_63 -> m7_61  [color=blue, key=0, style=bold];
m7_112 -> m7_99  [color=blue, key=0, style=bold];
m7_448 -> m7_449  [key=0, style=solid];
m7_448 -> m7_462  [color=darkorchid, key=3, label="Parameter variable System.Uri value", style=bold];
m7_450 -> m7_452  [key=0, style=solid];
m7_450 -> m7_182  [key=2, style=dotted];
m7_450 -> m7_451  [key=0, style=solid];
m7_450 -> m7_458  [key=2, style=dotted];
m7_450 -> m7_459  [key=2, style=dotted];
m7_451 -> m7_452  [key=0, style=solid];
m7_451 -> m7_302  [key=2, style=dotted];
m7_451 -> m7_377  [key=2, style=dotted];
m7_451 -> m7_453  [color=darkseagreen4, key=1, label=xmlProduct, style=dashed];
m7_449 -> m7_450  [key=0, style=solid];
m7_449 -> m7_451  [key=0, style=solid];
m7_452 -> m7_448  [color=blue, key=0, style=bold];
m7_452 -> m7_453  [key=0, style=solid];
m7_452 -> m7_366  [key=2, style=dotted];
m7_452 -> m7_23  [key=2, style=dotted];
m7_338 -> m7_339  [key=0, style=solid];
m7_338 -> m7_462  [color=darkorchid, key=3, label="Parameter variable char value", style=bold];
m7_338 -> m7_210  [key=2, style=dotted];
m7_339 -> m7_340  [key=0, style=solid];
m7_339 -> m7_302  [key=2, style=dotted];
m7_339 -> m7_337  [color=blue, key=0, style=bold];
m7_340 -> m7_338  [color=blue, key=0, style=bold];
m7_340 -> m7_341  [key=0, style=solid];
m7_187 -> m7_309  [key=0, style=solid];
m7_187 -> m7_311  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_187 -> m7_188  [key=0, style=solid];
m7_187 -> m7_113  [key=2, style=dotted];
m7_187 -> m7_189  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_187 -> m7_191  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_309 -> m7_310  [key=0, style=solid];
m7_309 -> m7_36  [key=2, style=dotted];
m7_310 -> m7_311  [key=0, style=solid];
m7_310 -> m7_285  [key=2, style=dotted];
m7_310 -> m7_23  [key=2, style=dotted];
m7_311 -> m7_312  [key=0, style=solid];
m7_311 -> m7_305  [key=2, style=dotted];
m7_311 -> m7_303  [color=blue, key=0, style=bold];
m7_312 -> m7_187  [color=blue, key=0, style=bold];
m7_312 -> m7_313  [key=0, style=solid];
m7_515 -> m7_323  [key=2, style=dotted];
m7_515 -> m7_566  [key=0, style=solid];
m7_567 -> m7_568  [key=0, style=solid];
m7_567 -> m7_551  [color=darkorchid, key=3, label="Local variable string expectedXaml", style=bold];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_72  [key=2, style=dotted];
m7_123 -> m7_124  [color=green, key=0, style=solid];
m7_123 -> m7_125  [key=0, style=solid];
m7_123 -> m7_169  [key=2, style=dotted];
m7_67 -> m7_65  [color=blue, key=0, style=bold];
m7_530 -> m7_531  [key=0, style=solid];
m7_175 -> m7_347  [key=0, style=solid];
m7_175 -> m7_135  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m7_175 -> m7_462  [color=darkorchid, key=3, label="Parameter variable decimal value", style=bold];
m7_347 -> m7_348  [key=0, style=solid];
m7_347 -> m7_302  [key=2, style=dotted];
m7_348 -> m7_175  [color=blue, key=0, style=bold];
m7_348 -> m7_349  [key=0, style=solid];
m7_348 -> m7_351  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_348 -> m7_348  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_429 -> m7_432  [color=darkseagreen4, key=1, label="System.DateTimeOffset?", style=dashed];
m7_429 -> m7_430  [key=0, style=solid];
m7_429 -> m7_23  [key=2, style=dotted];
m7_431 -> m7_433  [key=0, style=solid];
m7_431 -> m7_182  [key=2, style=dotted];
m7_431 -> m7_432  [key=0, style=solid];
m7_431 -> m7_431  [color=darkorchid, key=3, label="Local variable string expectedXmlJson", style=bold];
m7_432 -> m7_433  [key=0, style=solid];
m7_432 -> m7_184  [key=2, style=dotted];
m7_432 -> m7_23  [key=2, style=dotted];
m7_430 -> m7_431  [key=0, style=solid];
m7_430 -> m7_432  [key=0, style=solid];
m7_430 -> m7_0  [key=2, style=dotted];
m7_433 -> m7_429  [color=blue, key=0, style=bold];
m7_433 -> m7_420  [color=blue, key=0, style=bold];
m7_412 -> m7_413  [key=0, style=solid];
m7_412 -> m7_341  [key=2, style=dotted];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerType", style=dashed];
m7_40 -> m7_68  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType value", style=bold];
m7_40 -> m7_42  [key=0, style=solid];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_43  [key=0, style=solid];
m7_41 -> m7_41  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_21  [key=2, style=dotted];
m7_42 -> m7_23  [key=2, style=dotted];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_45  [key=2, style=dotted];
m7_44 -> m7_40  [color=blue, key=0, style=bold];
m7_44 -> m7_27  [color=blue, key=0, style=bold];
m7_124 -> m7_125  [key=0, style=solid];
m7_124 -> m7_166  [color=green, key=0, style=solid];
m7_124 -> m7_170  [color=green, key=2, style=dotted];
m7_125 -> m7_126  [key=0, style=solid];
m7_125 -> m7_127  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_125 -> m7_125  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m7_125 -> m7_166  [key=0, style=solid];
m7_125 -> m7_168  [key=2, style=dotted];
m7_125 -> m7_79  [key=2, style=dotted];
m7_126 -> m7_127  [key=0, style=solid];
m7_126 -> m7_111  [key=2, style=dotted];
m7_126 -> m7_128  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_127 -> m7_128  [key=0, style=solid];
m7_127 -> m7_112  [key=2, style=dotted];
m7_127 -> m7_166  [key=0, style=solid];
m7_127 -> m7_168  [key=2, style=dotted];
m7_127 -> m7_85  [key=2, style=dotted];
m7_128 -> m7_129  [key=0, style=solid];
m7_128 -> m7_113  [key=2, style=dotted];
m7_128 -> m7_130  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_128 -> m7_132  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_129 -> m7_130  [key=0, style=solid];
m7_129 -> m7_129  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m7_129 -> m7_166  [key=0, style=solid];
m7_129 -> m7_168  [key=2, style=dotted];
m7_129 -> m7_171  [key=2, style=dotted];
m7_130 -> m7_131  [key=0, style=solid];
m7_130 -> m7_23  [key=2, style=dotted];
m7_132 -> m7_133  [key=0, style=solid];
m7_132 -> m7_135  [key=2, style=dotted];
m7_132 -> m7_166  [key=0, style=solid];
m7_132 -> m7_172  [key=2, style=dotted];
m7_131 -> m7_132  [key=0, style=solid];
m7_131 -> m7_135  [key=2, style=dotted];
m7_131 -> m7_133  [key=0, style=solid];
m7_133 -> m7_134  [key=0, style=solid];
m7_133 -> m7_136  [key=2, style=dotted];
m7_133 -> m7_166  [key=0, style=solid];
m7_133 -> m7_173  [key=2, style=dotted];
m7_133 -> m7_174  [key=2, style=dotted];
m7_134 -> m7_124  [color=blue, key=0, style=bold];
m7_134 -> m7_135  [key=0, style=solid];
m7_177 -> m7_326  [key=0, style=solid];
m7_177 -> m7_135  [color=darkorchid, key=3, label="Parameter variable float value", style=bold];
m7_177 -> m7_462  [color=darkorchid, key=3, label="Parameter variable float value", style=bold];
m7_326 -> m7_327  [key=0, style=solid];
m7_326 -> m7_302  [key=2, style=dotted];
m7_326 -> m7_111  [key=2, style=dotted];
m7_326 -> m7_328  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m7_327 -> m7_177  [color=blue, key=0, style=bold];
m7_327 -> m7_328  [key=0, style=solid];
m7_327 -> m7_112  [key=2, style=dotted];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m7_0 -> m7_4  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m7_0 -> m7_6  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m7_0 -> m7_7  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m7_0 -> m7_50  [color=darkorchid, key=3, label="Parameter variable XmlNode node", style=bold];
m7_15 -> m7_21  [key=2, style=dotted];
m7_15 -> m7_4  [key=0, style=solid];
m7_16 -> m7_21  [key=2, style=dotted];
m7_16 -> m7_4  [key=0, style=solid];
m7_1 -> m7_15  [color=darkseagreen4, key=1, label=allStates, style=dashed];
m7_1 -> m7_16  [color=darkseagreen4, key=1, label=allStates, style=dashed];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_19  [key=2, style=dotted];
m7_1 -> m7_5  [color=darkseagreen4, key=1, label=allStates, style=dashed];
m7_1 -> m7_17  [color=darkseagreen4, key=1, label=allStates, style=dashed];
m7_1 -> m7_12  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_1 -> m7_13  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_3 -> m7_15  [color=darkseagreen4, key=1, label=valueStates, style=dashed];
m7_3 -> m7_4  [key=0, style=solid];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_0  [color=blue, key=0, style=bold];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_17  [key=0, style=solid];
m7_4 -> m7_20  [key=2, style=dotted];
m7_4 -> m7_6  [color=darkseagreen4, key=1, label=valueToken, style=dashed];
m7_2 -> m7_16  [color=darkseagreen4, key=1, label=errorStates, style=dashed];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_5  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_2 -> m7_9  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_2 -> m7_10  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_6 -> m7_16  [key=0, style=solid];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_9  [key=0, style=solid];
m7_5 -> m7_4  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_11  [key=0, style=solid];
m7_5 -> m7_17  [key=2, style=dotted];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_22  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_23  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_11  [key=0, style=solid];
m7_8 -> m7_18  [key=2, style=dotted];
m7_8 -> m7_19  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_22  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_20  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_21  [key=2, style=dotted];
m7_18 -> m7_0  [color=blue, key=0, style=bold];
m7_456 -> m7_457  [key=0, style=solid];
m7_456 -> m7_458  [key=0, style=solid];
m7_544 -> m7_545  [key=0, style=solid];
m7_545 -> m7_546  [key=0, style=solid];
m7_545 -> m7_545  [color=darkorchid, key=3, label="Local variable string xaml", style=bold];
m7_545 -> m7_439  [key=2, style=dotted];
m7_545 -> m7_566  [key=0, style=solid];
m7_546 -> m7_547  [key=0, style=solid];
m7_546 -> m7_92  [key=2, style=dotted];
m7_546 -> m7_93  [key=2, style=dotted];
m7_546 -> m7_548  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_546 -> m7_549  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_547 -> m7_548  [key=0, style=solid];
m7_547 -> m7_547  [color=darkorchid, key=3, label="Local variable string expectedJson", style=bold];
m7_547 -> m7_172  [key=2, style=dotted];
m7_547 -> m7_566  [key=0, style=solid];
m7_548 -> m7_549  [key=0, style=solid];
m7_548 -> m7_23  [key=2, style=dotted];
m7_549 -> m7_550  [key=0, style=solid];
m7_549 -> m7_94  [key=2, style=dotted];
m7_549 -> m7_172  [key=2, style=dotted];
m7_549 -> m7_566  [key=0, style=solid];
m7_550 -> m7_551  [key=0, style=solid];
m7_550 -> m7_51  [key=2, style=dotted];
m7_550 -> m7_552  [color=darkseagreen4, key=1, label=xaml2, style=dashed];
m7_551 -> m7_552  [key=0, style=solid];
m7_551 -> m7_551  [color=darkorchid, key=3, label="Local variable string expectedXaml", style=bold];
m7_551 -> m7_448  [key=2, style=dotted];
m7_551 -> m7_566  [key=0, style=solid];
m7_552 -> m7_553  [key=0, style=solid];
m7_552 -> m7_23  [key=2, style=dotted];
m7_553 -> m7_544  [color=blue, key=0, style=bold];
m7_553 -> m7_179  [key=2, style=dotted];
m7_553 -> m7_566  [key=0, style=solid];
m7_168 -> m7_169  [key=0, style=solid];
m7_168 -> m7_181  [key=2, style=dotted];
m7_518 -> m7_519  [key=0, style=solid];
m7_519 -> m7_520  [key=0, style=solid];
m7_519 -> m7_525  [key=2, style=dotted];
m7_519 -> m7_526  [key=2, style=dotted];
m7_519 -> m7_521  [color=darkseagreen4, key=1, label=ms, style=dashed];
m7_519 -> m7_177  [key=2, style=dotted];
m7_519 -> m7_566  [key=0, style=solid];
m7_520 -> m7_521  [key=0, style=solid];
m7_520 -> m7_527  [key=2, style=dotted];
m7_520 -> m7_522  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_521 -> m7_522  [key=0, style=solid];
m7_521 -> m7_528  [key=2, style=dotted];
m7_521 -> m7_379  [key=2, style=dotted];
m7_521 -> m7_566  [key=0, style=solid];
m7_522 -> m7_523  [key=0, style=solid];
m7_522 -> m7_529  [key=2, style=dotted];
m7_522 -> m7_530  [key=2, style=dotted];
m7_523 -> m7_524  [key=0, style=solid];
m7_523 -> m7_23  [key=2, style=dotted];
m7_523 -> m7_176  [key=2, style=dotted];
m7_523 -> m7_566  [key=0, style=solid];
m7_524 -> m7_518  [color=blue, key=0, style=bold];
m7_524 -> m7_525  [key=0, style=solid];
m7_210 -> m7_212  [key=0, style=solid];
m7_394 -> m7_397  [color=darkseagreen4, key=1, label="short?", style=dashed];
m7_394 -> m7_395  [key=0, style=solid];
m7_394 -> m7_111  [key=2, style=dotted];
m7_394 -> m7_396  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_396 -> m7_398  [key=0, style=solid];
m7_396 -> m7_182  [key=2, style=dotted];
m7_396 -> m7_397  [key=0, style=solid];
m7_396 -> m7_113  [key=2, style=dotted];
m7_396 -> m7_399  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_397 -> m7_398  [key=0, style=solid];
m7_397 -> m7_332  [key=2, style=dotted];
m7_395 -> m7_396  [key=0, style=solid];
m7_395 -> m7_397  [key=0, style=solid];
m7_395 -> m7_112  [key=2, style=dotted];
m7_398 -> m7_394  [color=blue, key=0, style=bold];
m7_398 -> m7_399  [key=0, style=solid];
m7_398 -> m7_23  [key=2, style=dotted];
m7_278 -> m7_257  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m7_278 -> m7_279  [key=0, style=solid];
m7_278 -> m7_112  [key=2, style=dotted];
m7_279 -> m7_278  [color=blue, key=0, style=bold];
m7_279 -> m7_280  [key=0, style=solid];
m7_279 -> m7_113  [key=2, style=dotted];
m7_279 -> m7_281  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> m7_124  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_123  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_114 -> m7_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_133  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_114 -> m7_99  [color=darkorchid, key=3, label="Parameter variable bool writeDateConstructorAsDate", style=bold];
m7_114 -> m7_105  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m7_115 -> m7_116  [key=0, style=solid];
m7_115 -> m7_115  [color=darkorchid, key=3, label="Local variable string xmlString", style=bold];
m7_115 -> m7_117  [key=0, style=solid];
m7_115 -> m7_119  [key=0, style=solid];
m7_115 -> m7_121  [key=0, style=solid];
m7_115 -> m7_126  [key=0, style=solid];
m7_115 -> m7_128  [key=0, style=solid];
m7_115 -> m7_130  [key=0, style=solid];
m7_115 -> m7_134  [key=0, style=solid];
m7_115 -> m7_143  [key=0, style=solid];
m7_115 -> m7_145  [key=0, style=solid];
m7_115 -> m7_147  [key=0, style=solid];
m7_115 -> m7_149  [key=0, style=solid];
m7_115 -> m7_151  [key=0, style=solid];
m7_115 -> m7_153  [key=0, style=solid];
m7_115 -> m7_155  [key=0, style=solid];
m7_115 -> m7_157  [key=0, style=solid];
m7_115 -> m7_161  [key=0, style=solid];
m7_115 -> m7_163  [key=0, style=solid];
m7_115 -> m7_165  [key=0, style=solid];
m7_116 -> m7_117  [key=0, style=solid];
m7_116 -> m7_92  [key=2, style=dotted];
m7_116 -> m7_119  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_116 -> m7_166  [key=0, style=solid];
m7_117 -> m7_118  [key=0, style=solid];
m7_117 -> m7_93  [key=2, style=dotted];
m7_119 -> m7_120  [key=0, style=solid];
m7_119 -> m7_122  [key=2, style=dotted];
m7_118 -> m7_119  [key=0, style=solid];
m7_118 -> m7_68  [key=2, style=dotted];
m7_118 -> m7_166  [key=0, style=solid];
m7_118 -> m7_65  [key=2, style=dotted];
m7_120 -> m7_121  [key=0, style=solid];
m7_120 -> m7_123  [key=2, style=dotted];
m7_120 -> m7_166  [key=0, style=solid];
m7_120 -> m7_73  [key=2, style=dotted];
m7_121 -> m7_114  [color=blue, key=0, style=bold];
m7_121 -> m7_122  [key=0, style=solid];
m7_595 -> m7_596  [key=0, style=solid];
m7_596 -> m7_597  [key=0, style=solid];
m7_596 -> m7_596  [color=darkorchid, key=3, label="Local variable string xmlString", style=bold];
m7_597 -> m7_598  [key=0, style=solid];
m7_597 -> m7_92  [key=2, style=dotted];
m7_597 -> m7_600  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_597 -> m7_605  [key=0, style=solid];
m7_597 -> m7_302  [key=2, style=dotted];
m7_598 -> m7_599  [key=0, style=solid];
m7_598 -> m7_93  [key=2, style=dotted];
m7_600 -> m7_601  [key=0, style=solid];
m7_600 -> m7_122  [key=2, style=dotted];
m7_599 -> m7_600  [key=0, style=solid];
m7_599 -> m7_68  [key=2, style=dotted];
m7_599 -> m7_605  [key=0, style=solid];
m7_599 -> m7_72  [key=2, style=dotted];
m7_601 -> m7_602  [key=0, style=solid];
m7_601 -> m7_123  [key=2, style=dotted];
m7_601 -> m7_605  [key=0, style=solid];
m7_601 -> m7_72  [key=2, style=dotted];
m7_602 -> m7_595  [color=blue, key=0, style=bold];
m7_602 -> m7_603  [key=0, style=solid];
m7_92 -> m7_93  [key=0, style=solid];
m7_392 -> m7_393  [key=0, style=solid];
m7_392 -> m7_181  [key=2, style=dotted];
m7_393 -> m7_394  [key=0, style=solid];
m7_393 -> m7_395  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_393 -> m7_393  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m7_393 -> m7_389  [color=blue, key=0, style=bold];
m7_399 -> m7_400  [key=0, style=solid];
m7_399 -> m7_24  [key=2, style=dotted];
m7_399 -> m7_402  [color=darkseagreen4, key=1, label="ushort?", style=dashed];
m7_400 -> m7_401  [key=0, style=solid];
m7_400 -> m7_23  [key=2, style=dotted];
m7_400 -> m7_402  [key=0, style=solid];
m7_401 -> m7_392  [color=blue, key=0, style=bold];
m7_401 -> m7_403  [key=0, style=solid];
m7_401 -> m7_182  [key=2, style=dotted];
m7_223 -> m7_224  [key=0, style=solid];
m7_266 -> m7_267  [key=0, style=solid];
m7_265 -> m7_274  [key=0, style=solid];
m7_265 -> m7_266  [key=0, style=solid];
m7_265 -> m7_268  [key=0, style=solid];
m7_265 -> m7_270  [key=0, style=solid];
m7_265 -> m7_272  [key=0, style=solid];
m7_104 -> m7_105  [key=0, style=solid];
m7_104 -> m7_92  [key=2, style=dotted];
m7_181 -> m7_330  [key=0, style=solid];
m7_181 -> m7_462  [color=darkorchid, key=3, label="Parameter variable bool value", style=bold];
m7_185 -> m7_186  [key=0, style=solid];
m7_185 -> m7_194  [key=2, style=dotted];
m7_489 -> m7_490  [key=0, style=solid];
m7_489 -> m7_414  [key=2, style=dotted];
m7_489 -> m7_566  [key=0, style=solid];
m7_490 -> m7_491  [key=0, style=solid];
m7_490 -> m7_492  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_490 -> m7_490  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m7_491 -> m7_492  [key=0, style=solid];
m7_491 -> m7_111  [key=2, style=dotted];
m7_491 -> m7_493  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_491 -> m7_332  [key=2, style=dotted];
m7_491 -> m7_566  [key=0, style=solid];
m7_492 -> m7_493  [key=0, style=solid];
m7_492 -> m7_112  [key=2, style=dotted];
m7_493 -> m7_494  [key=0, style=solid];
m7_493 -> m7_113  [key=2, style=dotted];
m7_493 -> m7_495  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_493 -> m7_394  [key=2, style=dotted];
m7_493 -> m7_566  [key=0, style=solid];
m7_494 -> m7_495  [key=0, style=solid];
m7_494 -> m7_23  [key=2, style=dotted];
m7_495 -> m7_496  [key=0, style=solid];
m7_495 -> m7_210  [key=2, style=dotted];
m7_495 -> m7_335  [key=2, style=dotted];
m7_495 -> m7_566  [key=0, style=solid];
m7_496 -> m7_497  [key=0, style=solid];
m7_496 -> m7_211  [key=2, style=dotted];
m7_496 -> m7_23  [key=2, style=dotted];
m7_497 -> m7_489  [color=blue, key=0, style=bold];
m7_497 -> m7_399  [key=2, style=dotted];
m7_497 -> m7_566  [key=0, style=solid];
m7_517 -> m7_374  [key=2, style=dotted];
m7_517 -> m7_566  [key=0, style=solid];
m7_341 -> m7_342  [key=0, style=solid];
m7_341 -> m7_462  [color=darkorchid, key=3, label="Parameter variable byte value", style=bold];
m7_341 -> m7_345  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_341 -> m7_333  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_342 -> m7_343  [key=0, style=solid];
m7_342 -> m7_302  [key=2, style=dotted];
m7_342 -> m7_336  [key=2, style=dotted];
m7_342 -> m7_344  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_343 -> m7_341  [color=blue, key=0, style=bold];
m7_343 -> m7_340  [color=blue, key=0, style=bold];
m7_569 -> m7_204  [key=2, style=dotted];
m7_569 -> m7_570  [key=0, style=solid];
m7_569 -> m7_571  [key=2, style=dotted];
m7_569 -> m7_572  [key=2, style=dotted];
m7_569 -> m7_554  [color=blue, key=0, style=bold];
m7_570 -> m7_460  [color=blue, key=0, style=bold];
m7_570 -> m7_571  [key=0, style=solid];
m7_174 -> m7_321  [key=0, style=solid];
m7_174 -> m7_462  [color=darkorchid, key=3, label="Parameter variable long value", style=bold];
m7_174 -> m7_137  [color=blue, key=0, style=bold];
m7_321 -> m7_322  [key=0, style=solid];
m7_321 -> m7_302  [key=2, style=dotted];
m7_321 -> m7_112  [key=2, style=dotted];
m7_322 -> m7_174  [color=blue, key=0, style=bold];
m7_322 -> m7_323  [key=0, style=solid];
m7_322 -> m7_113  [key=2, style=dotted];
m7_322 -> m7_324  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m7_323 -> m7_324  [key=0, style=solid];
m7_323 -> m7_462  [color=darkorchid, key=3, label="Parameter variable ulong value", style=bold];
m7_324 -> m7_325  [key=0, style=solid];
m7_324 -> m7_302  [key=2, style=dotted];
m7_324 -> m7_23  [key=2, style=dotted];
m7_325 -> m7_323  [color=blue, key=0, style=bold];
m7_325 -> m7_326  [key=0, style=solid];
m7_325 -> m7_327  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m7_299 -> m7_297  [color=blue, key=0, style=bold];
m7_318 -> m7_319  [key=0, style=solid];
m7_318 -> m7_462  [color=darkorchid, key=3, label="Parameter variable uint value", style=bold];
m7_318 -> m7_23  [key=2, style=dotted];
m7_319 -> m7_320  [key=0, style=solid];
m7_319 -> m7_302  [key=2, style=dotted];
m7_319 -> m7_321  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m7_320 -> m7_318  [color=blue, key=0, style=bold];
m7_320 -> m7_321  [key=0, style=solid];
m7_320 -> m7_111  [key=2, style=dotted];
m7_320 -> m7_322  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m7_469 -> m7_466  [color=darkorchid, key=3, label="Parameter variable string ws", style=bold];
m7_469 -> m7_621  [key=0, style=solid];
m7_469 -> m7_622  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_623 -> m7_624  [key=0, style=solid];
m7_623 -> m7_204  [key=2, style=dotted];
m7_622 -> m7_623  [key=0, style=solid];
m7_622 -> m7_624  [key=0, style=solid];
m7_622 -> m7_625  [key=2, style=dotted];
m7_621 -> m7_622  [key=0, style=solid];
m7_621 -> m7_624  [key=0, style=solid];
m7_624 -> m7_469  [color=blue, key=0, style=bold];
m7_122 -> m7_123  [key=0, style=solid];
m7_122 -> m7_168  [key=2, style=dotted];
m7_173 -> m7_174  [key=0, style=solid];
m7_173 -> m7_23  [key=2, style=dotted];
m7_65 -> m7_66  [key=0, style=solid];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_111  [key=2, style=dotted];
m7_96 -> m7_98  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_99  [key=2, style=dotted];
m7_97 -> m7_112  [key=2, style=dotted];
m7_98 -> m7_96  [color=blue, key=0, style=bold];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_113  [key=2, style=dotted];
m7_113 -> m7_97  [color=darkorchid, key=3, label="method methodReturn bool IsStartToken", style=bold];
m7_113 -> m7_213  [key=0, style=solid];
m7_113 -> m7_211  [color=darkorchid, key=3, label="method methodReturn bool IsStartToken", style=bold];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_42  [color=darkseagreen4, key=1, label=xmlText, style=dashed];
m7_297 -> m7_298  [key=0, style=solid];
m7_297 -> m7_285  [color=blue, key=0, style=bold];
m7_298 -> m7_299  [key=0, style=solid];
m7_298 -> m7_293  [key=2, style=dotted];
m7_298 -> m7_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_94 -> m7_94  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m7_94 -> m7_92  [color=blue, key=0, style=bold];
m7_479 -> m7_338  [key=2, style=dotted];
m7_479 -> m7_566  [key=0, style=solid];
m7_275 -> m7_276  [key=0, style=solid];
m7_275 -> m7_256  [key=0, style=solid];
m7_275 -> m7_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_276 -> m7_277  [key=0, style=solid];
m7_276 -> m7_278  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_276 -> m7_276  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m7_276 -> m7_242  [color=blue, key=0, style=bold];
m7_277 -> m7_278  [key=0, style=solid];
m7_277 -> m7_111  [key=2, style=dotted];
m7_277 -> m7_279  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_277 -> m7_282  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_277 -> m7_280  [key=0, style=solid];
m7_282 -> m7_283  [key=0, style=solid];
m7_282 -> m7_23  [key=2, style=dotted];
m7_282 -> m7_281  [color=blue, key=0, style=bold];
m7_280 -> m7_281  [key=0, style=solid];
m7_280 -> m7_135  [key=2, style=dotted];
m7_280 -> m7_277  [color=blue, key=0, style=bold];
m7_281 -> m7_282  [key=0, style=solid];
m7_281 -> m7_24  [key=2, style=dotted];
m7_283 -> m7_275  [color=blue, key=0, style=bold];
m7_283 -> m7_284  [key=0, style=solid];
m7_213 -> m7_214  [key=0, style=solid];
m7_213 -> m7_218  [key=0, style=solid];
m7_214 -> m7_213  [color=blue, key=0, style=bold];
m7_214 -> m7_215  [key=0, style=solid];
m7_409 -> m7_412  [color=darkseagreen4, key=1, label="byte?", style=dashed];
m7_409 -> m7_410  [key=0, style=solid];
m7_409 -> m7_24  [key=2, style=dotted];
m7_411 -> m7_413  [key=0, style=solid];
m7_411 -> m7_182  [key=2, style=dotted];
m7_411 -> m7_402  [color=blue, key=0, style=bold];
m7_410 -> m7_411  [key=0, style=solid];
m7_410 -> m7_412  [key=0, style=solid];
m7_410 -> m7_23  [key=2, style=dotted];
m7_413 -> m7_409  [color=blue, key=0, style=bold];
m7_419 -> m7_422  [color=darkseagreen4, key=1, label="decimal?", style=dashed];
m7_419 -> m7_420  [key=0, style=solid];
m7_421 -> m7_423  [key=0, style=solid];
m7_421 -> m7_182  [key=2, style=dotted];
m7_421 -> m7_422  [key=0, style=solid];
m7_421 -> m7_434  [key=2, style=dotted];
m7_421 -> m7_424  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m7_422 -> m7_423  [key=0, style=solid];
m7_422 -> m7_175  [key=2, style=dotted];
m7_422 -> m7_434  [key=2, style=dotted];
m7_422 -> m7_435  [key=2, style=dotted];
m7_420 -> m7_421  [key=0, style=solid];
m7_420 -> m7_422  [key=0, style=solid];
m7_423 -> m7_419  [color=blue, key=0, style=bold];
m7_423 -> m7_424  [key=0, style=solid];
m7_423 -> m7_435  [key=2, style=dotted];
m7_184 -> m7_351  [key=0, style=solid];
m7_184 -> m7_462  [color=darkorchid, key=3, label="Parameter variable System.DateTimeOffset value", style=bold];
m7_184 -> m7_185  [key=0, style=solid];
m7_184 -> m7_111  [key=2, style=dotted];
m7_351 -> m7_352  [key=0, style=solid];
m7_351 -> m7_302  [key=2, style=dotted];
m7_351 -> m7_355  [key=2, style=dotted];
m7_352 -> m7_184  [color=blue, key=0, style=bold];
m7_352 -> m7_353  [key=0, style=solid];
m7_352 -> m7_51  [key=2, style=dotted];
m7_352 -> m7_23  [key=2, style=dotted];
m7_95 -> m7_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerType", style=dashed];
m7_95 -> m7_56  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType type", style=bold];
m7_95 -> m7_220  [key=0, style=solid];
m7_95 -> m7_96  [key=0, style=solid];
m7_222 -> m7_228  [key=0, style=solid];
m7_222 -> m7_69  [key=2, style=dotted];
m7_224 -> m7_228  [key=0, style=solid];
m7_224 -> m7_76  [key=2, style=dotted];
m7_226 -> m7_228  [key=0, style=solid];
m7_226 -> m7_82  [key=2, style=dotted];
m7_226 -> m7_227  [key=0, style=solid];
m7_226 -> m7_213  [key=2, style=dotted];
m7_226 -> m7_221  [key=2, style=dotted];
m7_226 -> m7_222  [key=2, style=dotted];
m7_227 -> m7_228  [key=0, style=solid];
m7_227 -> m7_204  [key=2, style=dotted];
m7_227 -> m7_223  [key=2, style=dotted];
m7_221 -> m7_222  [key=0, style=solid];
m7_225 -> m7_226  [key=0, style=solid];
m7_225 -> m7_220  [key=2, style=dotted];
m7_225 -> m7_228  [color=darkseagreen4, key=1, label=builder, style=dashed];
m7_228 -> m7_95  [color=blue, key=0, style=bold];
m7_228 -> m7_229  [key=0, style=solid];
m7_228 -> m7_224  [key=2, style=dotted];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_63  [key=2, style=dotted];
m7_54 -> m7_61  [color=darkseagreen4, key=1, label=x, style=dashed];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_64  [key=2, style=dotted];
m7_435 -> m7_436  [key=0, style=solid];
m7_435 -> m7_437  [key=0, style=solid];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_27  [color=darkorchid, key=3, label="method methodReturn XmlNode DeserializeXmlNode", style=bold];
m7_24 -> m7_234  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m7_24 -> m7_246  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m7_24 -> m7_271  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m7_24 -> m7_279  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m7_24 -> m7_285  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m7_24 -> m7_304  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m7_24 -> m7_396  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m7_24 -> m7_406  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m7_24 -> m7_415  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m7_24 -> m7_438  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m7_24 -> m7_0  [key=2, style=dotted];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_27  [key=2, style=dotted];
m7_25 -> m7_23  [color=blue, key=0, style=bold];
m7_26 -> m7_24  [color=blue, key=0, style=bold];
m7_195 -> m7_196  [color=red, key=0, style=solid];
m7_195 -> m7_203  [key=0, style=solid];
m7_195 -> m7_204  [key=2, style=dotted];
m7_196 -> m7_197  [color=red, key=0, style=solid];
m7_196 -> m7_199  [color=red, key=1, label=xml, style=dashed];
m7_196 -> m7_203  [color=red, key=1, label=xml, style=dashed];
m7_196 -> m7_204  [color=red, key=1, label=xml, style=dashed];
m7_196 -> m7_208  [color=red, key=1, label=xml, style=dashed];
m7_196 -> m7_196  [color=red, key=3, label="Local variable string xml", style=bold];
m7_197 -> m7_198  [color=red, key=0, style=solid];
m7_197 -> m7_201  [color=red, key=1, label=expected, style=dashed];
m7_197 -> m7_206  [color=red, key=1, label=expected, style=dashed];
m7_197 -> m7_197  [color=red, key=3, label="Local variable string expected", style=bold];
m7_197 -> m7_202  [color=darkseagreen4, key=1, label=date, style=dashed];
m7_197 -> m7_205  [key=2, style=dotted];
m7_199 -> m7_200  [key=0, style=solid];
m7_199 -> m7_112  [key=2, style=dotted];
m7_199 -> m7_203  [key=0, style=solid];
m7_199 -> m7_204  [key=2, style=dotted];
m7_203 -> m7_204  [key=0, style=solid];
m7_203 -> m7_211  [key=2, style=dotted];
m7_203 -> m7_23  [key=2, style=dotted];
m7_203 -> m7_170  [color=blue, key=0, style=bold];
m7_208 -> m7_209  [key=0, style=solid];
m7_208 -> m7_212  [key=2, style=dotted];
m7_208 -> m7_23  [key=2, style=dotted];
m7_198 -> m7_199  [key=0, style=solid];
m7_198 -> m7_111  [key=2, style=dotted];
m7_198 -> m7_200  [color=darkseagreen4, key=1, label=doc1, style=dashed];
m7_198 -> m7_191  [key=2, style=dotted];
m7_201 -> m7_202  [key=0, style=solid];
m7_201 -> m7_23  [key=2, style=dotted];
m7_201 -> m7_203  [key=0, style=solid];
m7_201 -> m7_204  [key=2, style=dotted];
m7_206 -> m7_207  [key=0, style=solid];
m7_206 -> m7_23  [key=2, style=dotted];
m7_206 -> m7_211  [key=0, style=solid];
m7_200 -> m7_201  [key=0, style=solid];
m7_200 -> m7_113  [key=2, style=dotted];
m7_200 -> m7_202  [color=darkseagreen4, key=1, label=json1, style=dashed];
m7_202 -> m7_203  [key=0, style=solid];
m7_202 -> m7_210  [key=2, style=dotted];
m7_202 -> m7_186  [key=2, style=dotted];
m7_205 -> m7_206  [key=0, style=solid];
m7_205 -> m7_93  [key=2, style=dotted];
m7_205 -> m7_207  [color=darkseagreen4, key=1, label=json2, style=dashed];
m7_207 -> m7_208  [key=0, style=solid];
m7_207 -> m7_94  [key=2, style=dotted];
m7_209 -> m7_195  [color=blue, key=0, style=bold];
m7_209 -> m7_210  [key=0, style=solid];
m7_302 -> m7_300  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m7_302 -> m7_303  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m7_302 -> m7_313  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m7_302 -> m7_316  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m7_302 -> m7_326  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m7_302 -> m7_330  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m7_302 -> m7_349  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m7_302 -> m7_446  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m7_302 -> m7_618  [key=0, style=solid];
m7_302 -> m7_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m7_302 -> m7_573  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m7_618 -> m7_619  [key=0, style=solid];
m7_618 -> m7_36  [key=2, style=dotted];
m7_619 -> m7_620  [key=0, style=solid];
m7_619 -> m7_285  [key=2, style=dotted];
m7_620 -> m7_302  [color=blue, key=0, style=bold];
m7_256 -> m7_257  [key=0, style=solid];
m7_256 -> m7_261  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m7_256 -> m7_50  [color=darkorchid, key=3, label="Parameter variable XmlNode node", style=bold];
m7_256 -> m7_276  [key=0, style=solid];
m7_257 -> m7_258  [key=0, style=solid];
m7_257 -> m7_221  [key=2, style=dotted];
m7_257 -> m7_46  [key=2, style=dotted];
m7_257 -> m7_232  [key=2, style=dotted];
m7_257 -> m7_263  [color=darkseagreen4, key=1, label=token, style=dashed];
m7_261 -> m7_262  [key=0, style=solid];
m7_261 -> m7_265  [key=2, style=dotted];
m7_261 -> m7_263  [key=0, style=solid];
m7_258 -> m7_259  [key=0, style=solid];
m7_258 -> m7_258  [color=darkseagreen4, key=1, label=settings, style=dashed];
m7_258 -> m7_260  [color=darkseagreen4, key=1, label=settings, style=dashed];
m7_259 -> m7_260  [key=0, style=solid];
m7_259 -> m7_264  [key=2, style=dotted];
m7_259 -> m7_262  [color=darkseagreen4, key=1, label=sw, style=dashed];
m7_259 -> m7_182  [key=2, style=dotted];
m7_260 -> m7_261  [key=0, style=solid];
m7_260 -> m7_222  [key=2, style=dotted];
m7_260 -> m7_263  [key=0, style=solid];
m7_262 -> m7_263  [key=0, style=solid];
m7_262 -> m7_266  [key=2, style=dotted];
m7_262 -> m7_277  [key=2, style=dotted];
m7_263 -> m7_256  [color=blue, key=0, style=bold];
m7_263 -> m7_264  [key=0, style=solid];
m7_263 -> m7_278  [key=2, style=dotted];
m7_543 -> m7_356  [key=2, style=dotted];
m7_543 -> m7_566  [key=0, style=solid];
m7_211 -> m7_225  [key=0, style=solid];
m7_211 -> m7_226  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_211 -> m7_227  [color=darkseagreen4, key=1, label=XmlDocument, style=dashed];
m7_211 -> m7_202  [color=darkorchid, key=3, label="Parameter variable XmlDocument doc", style=bold];
m7_211 -> m7_495  [color=darkorchid, key=3, label="Parameter variable XmlDocument doc", style=bold];
m7_211 -> m7_369  [color=darkorchid, key=3, label="Parameter variable bool indent", style=bold];
m7_211 -> m7_212  [key=0, style=solid];
m7_229 -> m7_211  [color=blue, key=0, style=bold];
m7_229 -> m7_230  [key=0, style=solid];
m7_229 -> m7_231  [key=0, style=solid];
m7_386 -> m7_387  [key=0, style=solid];
m7_386 -> m7_388  [key=0, style=solid];
m7_386 -> m7_182  [key=2, style=dotted];
m7_387 -> m7_388  [key=0, style=solid];
m7_387 -> m7_111  [key=2, style=dotted];
m7_387 -> m7_389  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_387 -> m7_176  [key=2, style=dotted];
m7_388 -> m7_389  [key=0, style=solid];
m7_388 -> m7_112  [key=2, style=dotted];
m7_388 -> m7_384  [color=blue, key=0, style=bold];
m7_389 -> m7_390  [key=0, style=solid];
m7_389 -> m7_113  [key=2, style=dotted];
m7_389 -> m7_392  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m7_390 -> m7_391  [key=0, style=solid];
m7_390 -> m7_23  [key=2, style=dotted];
m7_390 -> m7_392  [key=0, style=solid];
m7_391 -> m7_386  [color=blue, key=0, style=bold];
m7_391 -> m7_393  [key=0, style=solid];
m7_391 -> m7_182  [key=2, style=dotted];
m7_527 -> m7_186  [key=2, style=dotted];
m7_527 -> m7_566  [key=0, style=solid];
m7_444 -> m7_445  [key=0, style=solid];
m7_444 -> m7_446  [key=0, style=solid];
m7_445 -> m7_446  [key=0, style=solid];
m7_445 -> m7_456  [key=2, style=dotted];
m7_445 -> m7_447  [color=darkseagreen4, key=1, label=product, style=dashed];
m7_445 -> m7_448  [color=darkseagreen4, key=1, label=product, style=dashed];
m7_445 -> m7_449  [color=darkseagreen4, key=1, label=product, style=dashed];
m7_445 -> m7_450  [color=darkseagreen4, key=1, label=product, style=dashed];
m7_445 -> m7_182  [key=2, style=dotted];
m7_446 -> m7_447  [key=0, style=solid];
m7_446 -> m7_302  [key=2, style=dotted];
m7_447 -> m7_448  [key=0, style=solid];
m7_447 -> m7_457  [key=2, style=dotted];
m7_447 -> m7_188  [color=blue, key=0, style=bold];
m7_453 -> m7_454  [key=0, style=solid];
m7_453 -> m7_113  [key=2, style=dotted];
m7_453 -> m7_457  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_453 -> m7_458  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_453 -> m7_456  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_454 -> m7_455  [key=0, style=solid];
m7_454 -> m7_23  [key=2, style=dotted];
m7_454 -> m7_456  [key=0, style=solid];
m7_455 -> m7_444  [color=blue, key=0, style=bold];
m7_455 -> m7_459  [key=0, style=solid];
m7_455 -> m7_182  [key=2, style=dotted];
m7_182 -> m7_300  [key=0, style=solid];
m7_99 -> m7_97  [color=darkorchid, key=3, label="Parameter variable bool writeDateConstructorAsDate", style=bold];
m7_99 -> m7_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_99 -> m7_105  [key=0, style=solid];
m7_99 -> m7_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_99 -> m7_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_99 -> m7_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_99 -> m7_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_99 -> m7_96  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m7_99 -> m7_100  [color=darkorchid, key=3, label="Parameter variable bool writeChildren", style=bold];
m7_99 -> m7_23  [key=2, style=dotted];
m7_105 -> m7_106  [key=0, style=solid];
m7_105 -> m7_93  [key=2, style=dotted];
m7_109 -> m7_111  [key=0, style=solid];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_23  [key=2, style=dotted];
m7_110 -> m7_111  [key=0, style=solid];
m7_110 -> m7_95  [color=blue, key=0, style=bold];
m7_107 -> m7_111  [key=0, style=solid];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_92  [key=2, style=dotted];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_108  [key=0, style=solid];
m7_106 -> m7_23  [key=2, style=dotted];
m7_108 -> m7_113  [key=2, style=dotted];
m7_108 -> m7_109  [key=0, style=solid];
m7_108 -> m7_110  [key=0, style=solid];
m7_108 -> m7_93  [key=2, style=dotted];
m7_606 -> m7_607  [key=0, style=solid];
m7_606 -> m7_112  [key=2, style=dotted];
m7_300 -> m7_301  [key=0, style=solid];
m7_300 -> m7_302  [key=2, style=dotted];
m7_301 -> m7_182  [color=blue, key=0, style=bold];
m7_301 -> m7_302  [key=0, style=solid];
m7_301 -> m7_210  [key=2, style=dotted];
m7_172 -> m7_173  [key=0, style=solid];
m7_172 -> m7_113  [key=2, style=dotted];
m7_267 -> m7_268  [key=0, style=solid];
m7_267 -> m7_275  [key=0, style=solid];
m7_268 -> m7_269  [key=0, style=solid];
m7_268 -> m7_270  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_268 -> m7_268  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m7_269 -> m7_270  [key=0, style=solid];
m7_269 -> m7_111  [key=2, style=dotted];
m7_269 -> m7_271  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_269 -> m7_273  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_269 -> m7_275  [key=0, style=solid];
m7_270 -> m7_271  [key=0, style=solid];
m7_270 -> m7_112  [key=2, style=dotted];
m7_271 -> m7_272  [key=0, style=solid];
m7_271 -> m7_113  [key=2, style=dotted];
m7_271 -> m7_275  [key=0, style=solid];
m7_273 -> m7_274  [key=0, style=solid];
m7_273 -> m7_23  [key=2, style=dotted];
m7_273 -> m7_275  [key=0, style=solid];
m7_272 -> m7_273  [key=0, style=solid];
m7_272 -> m7_24  [key=2, style=dotted];
m7_274 -> m7_267  [color=blue, key=0, style=bold];
m7_274 -> m7_276  [key=0, style=solid];
m7_274 -> m7_204  [key=2, style=dotted];
m7_313 -> m7_314  [key=0, style=solid];
m7_313 -> m7_315  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m7_313 -> m7_302  [key=2, style=dotted];
m7_314 -> m7_315  [key=0, style=solid];
m7_314 -> m7_111  [key=2, style=dotted];
m7_314 -> m7_316  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m7_314 -> m7_179  [color=blue, key=0, style=bold];
m7_315 -> m7_316  [key=0, style=solid];
m7_315 -> m7_112  [key=2, style=dotted];
m7_315 -> m7_462  [color=darkorchid, key=3, label="Parameter variable int value", style=bold];
m7_316 -> m7_317  [key=0, style=solid];
m7_316 -> m7_113  [key=2, style=dotted];
m7_316 -> m7_318  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m7_316 -> m7_302  [key=2, style=dotted];
m7_317 -> m7_318  [key=0, style=solid];
m7_317 -> m7_317  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m7_317 -> m7_315  [color=blue, key=0, style=bold];
m7_328 -> m7_329  [key=0, style=solid];
m7_328 -> m7_113  [key=2, style=dotted];
m7_328 -> m7_330  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m7_328 -> m7_302  [key=2, style=dotted];
m7_329 -> m7_330  [key=0, style=solid];
m7_329 -> m7_176  [color=blue, key=0, style=bold];
m7_330 -> m7_331  [key=0, style=solid];
m7_330 -> m7_23  [key=2, style=dotted];
m7_330 -> m7_302  [key=2, style=dotted];
m7_331 -> m7_312  [color=blue, key=0, style=bold];
m7_331 -> m7_181  [color=blue, key=0, style=bold];
m7_369 -> m7_372  [color=darkseagreen4, key=1, label="long?", style=dashed];
m7_369 -> m7_370  [key=0, style=solid];
m7_369 -> m7_377  [key=2, style=dotted];
m7_369 -> m7_374  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m7_371 -> m7_373  [key=0, style=solid];
m7_371 -> m7_182  [key=2, style=dotted];
m7_371 -> m7_372  [key=0, style=solid];
m7_371 -> m7_378  [key=2, style=dotted];
m7_372 -> m7_373  [key=0, style=solid];
m7_372 -> m7_174  [key=2, style=dotted];
m7_372 -> m7_51  [key=2, style=dotted];
m7_372 -> m7_366  [key=2, style=dotted];
m7_372 -> m7_135  [key=2, style=dotted];
m7_370 -> m7_371  [key=0, style=solid];
m7_370 -> m7_372  [key=0, style=solid];
m7_370 -> m7_366  [key=2, style=dotted];
m7_370 -> m7_23  [key=2, style=dotted];
m7_373 -> m7_369  [color=blue, key=0, style=bold];
m7_373 -> m7_374  [key=0, style=solid];
m7_373 -> m7_51  [key=2, style=dotted];
m7_373 -> m7_366  [key=2, style=dotted];
m7_373 -> m7_23  [key=2, style=dotted];
m7_367 -> m7_368  [key=0, style=solid];
m7_367 -> m7_318  [key=2, style=dotted];
m7_368 -> m7_369  [key=0, style=solid];
m7_368 -> m7_371  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_368 -> m7_375  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_368 -> m7_357  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_368 -> m7_364  [color=blue, key=0, style=bold];
m7_66 -> m7_66  [color=darkorchid, key=3, label="Local variable string arrayXml", style=bold];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_68  [key=2, style=dotted];
m7_437 -> m7_438  [key=0, style=solid];
m7_437 -> m7_353  [key=2, style=dotted];
m7_438 -> m7_439  [key=0, style=solid];
m7_438 -> m7_442  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_438 -> m7_438  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_438 -> m7_434  [color=blue, key=0, style=bold];
m7_439 -> m7_440  [key=0, style=solid];
m7_439 -> m7_336  [key=2, style=dotted];
m7_439 -> m7_441  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_439 -> m7_442  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m7_440 -> m7_437  [color=blue, key=0, style=bold];
m7_440 -> m7_441  [key=0, style=solid];
m7_440 -> m7_442  [key=0, style=solid];
m7_402 -> m7_403  [key=0, style=solid];
m7_402 -> m7_335  [key=2, style=dotted];
m7_403 -> m7_404  [key=0, style=solid];
m7_403 -> m7_405  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_403 -> m7_403  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m7_403 -> m7_399  [color=blue, key=0, style=bold];
m7_404 -> m7_405  [key=0, style=solid];
m7_404 -> m7_111  [key=2, style=dotted];
m7_404 -> m7_406  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_404 -> m7_410  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_404 -> m7_407  [color=darkseagreen4, key=1, label="char?", style=dashed];
m7_405 -> m7_406  [key=0, style=solid];
m7_405 -> m7_112  [key=2, style=dotted];
m7_405 -> m7_407  [key=0, style=solid];
m7_406 -> m7_407  [key=0, style=solid];
m7_406 -> m7_113  [key=2, style=dotted];
m7_406 -> m7_408  [key=0, style=solid];
m7_406 -> m7_182  [key=2, style=dotted];
m7_407 -> m7_408  [key=0, style=solid];
m7_407 -> m7_412  [key=2, style=dotted];
m7_407 -> m7_413  [key=2, style=dotted];
m7_407 -> m7_407  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_407 -> m7_409  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_407 -> m7_338  [key=2, style=dotted];
m7_408 -> m7_409  [key=0, style=solid];
m7_408 -> m7_23  [key=2, style=dotted];
m7_408 -> m7_404  [color=blue, key=0, style=bold];
m7_554 -> m7_555  [key=0, style=solid];
m7_555 -> m7_556  [key=0, style=solid];
m7_555 -> m7_557  [color=darkseagreen4, key=1, label=xaml, style=dashed];
m7_555 -> m7_545  [color=darkorchid, key=3, label="Local variable string xaml", style=bold];
m7_555 -> m7_188  [key=2, style=dotted];
m7_555 -> m7_566  [key=0, style=solid];
m7_556 -> m7_557  [key=0, style=solid];
m7_556 -> m7_111  [key=2, style=dotted];
m7_556 -> m7_558  [color=darkseagreen4, key=1, label=document, style=dashed];
m7_557 -> m7_558  [key=0, style=solid];
m7_557 -> m7_112  [key=2, style=dotted];
m7_557 -> m7_182  [key=2, style=dotted];
m7_557 -> m7_566  [key=0, style=solid];
m7_558 -> m7_559  [key=0, style=solid];
m7_558 -> m7_113  [key=2, style=dotted];
m7_558 -> m7_560  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_558 -> m7_561  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_558 -> m7_565  [key=0, style=solid];
m7_559 -> m7_560  [key=0, style=solid];
m7_559 -> m7_547  [color=darkorchid, key=3, label="Local variable string expectedJson", style=bold];
m7_559 -> m7_563  [color=darkseagreen4, key=1, label=convertable, style=dashed];
m7_560 -> m7_561  [key=0, style=solid];
m7_560 -> m7_23  [key=2, style=dotted];
m7_560 -> m7_567  [key=2, style=dotted];
m7_560 -> m7_562  [color=darkseagreen4, key=1, label=typeInformation, style=dashed];
m7_561 -> m7_562  [key=0, style=solid];
m7_561 -> m7_210  [key=2, style=dotted];
m7_561 -> m7_564  [color=darkseagreen4, key=1, label=resolvedTypeCode, style=dashed];
m7_562 -> m7_563  [key=0, style=solid];
m7_562 -> m7_264  [key=2, style=dotted];
m7_562 -> m7_566  [color=darkseagreen4, key=1, label=sw, style=dashed];
m7_564 -> m7_565  [key=0, style=solid];
m7_564 -> m7_265  [key=2, style=dotted];
m7_564 -> m7_462  [key=2, style=dotted];
m7_564 -> m7_566  [key=0, style=solid];
m7_563 -> m7_564  [key=0, style=solid];
m7_563 -> m7_221  [key=2, style=dotted];
m7_563 -> m7_222  [key=2, style=dotted];
m7_563 -> m7_565  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_563 -> m7_568  [key=2, style=dotted];
m7_566 -> m7_567  [key=0, style=solid];
m7_566 -> m7_266  [key=2, style=dotted];
m7_566 -> m7_568  [color=darkseagreen4, key=1, label=xaml2, style=dashed];
m7_566 -> m7_462  [color=blue, key=0, style=bold];
m7_565 -> m7_566  [key=0, style=solid];
m7_565 -> m7_481  [key=2, style=dotted];
m7_565 -> m7_460  [key=2, style=dotted];
m7_568 -> m7_569  [key=0, style=solid];
m7_568 -> m7_23  [key=2, style=dotted];
m7_473 -> m7_97  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m7_473 -> m7_474  [key=0, style=solid];
m7_473 -> m7_221  [key=2, style=dotted];
m7_473 -> m7_222  [key=2, style=dotted];
m7_473 -> m7_475  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_473 -> m7_476  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_474 -> m7_475  [key=0, style=solid];
m7_474 -> m7_476  [key=0, style=solid];
m7_474 -> m7_479  [key=2, style=dotted];
m7_475 -> m7_476  [key=0, style=solid];
m7_475 -> m7_61  [key=2, style=dotted];
m7_475 -> m7_474  [key=0, style=solid];
m7_475 -> m7_480  [key=2, style=dotted];
m7_476 -> m7_473  [color=blue, key=0, style=bold];
m7_476 -> m7_477  [key=0, style=solid];
m7_476 -> m7_481  [key=2, style=dotted];
m7_100 -> m7_102  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_111  [key=2, style=dotted];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_99  [key=2, style=dotted];
m7_102 -> m7_113  [key=2, style=dotted];
m7_101 -> m7_102  [key=0, style=solid];
m7_101 -> m7_104  [key=2, style=dotted];
m7_101 -> m7_112  [key=2, style=dotted];
m7_103 -> m7_100  [color=blue, key=0, style=bold];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_23  [key=2, style=dotted];
m7_414 -> m7_415  [key=0, style=solid];
m7_414 -> m7_417  [color=darkseagreen4, key=1, label="sbyte?", style=dashed];
m7_415 -> m7_416  [key=0, style=solid];
m7_415 -> m7_415  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_415 -> m7_417  [key=0, style=solid];
m7_416 -> m7_417  [key=0, style=solid];
m7_416 -> m7_24  [key=2, style=dotted];
m7_416 -> m7_418  [key=0, style=solid];
m7_416 -> m7_182  [key=2, style=dotted];
m7_417 -> m7_418  [key=0, style=solid];
m7_417 -> m7_419  [key=2, style=dotted];
m7_417 -> m7_23  [key=2, style=dotted];
m7_417 -> m7_344  [key=2, style=dotted];
m7_418 -> m7_414  [color=blue, key=0, style=bold];
m7_84 -> m7_82  [color=blue, key=0, style=bold];
m7_593 -> m7_594  [key=0, style=solid];
m7_379 -> m7_382  [color=darkseagreen4, key=1, label="float?", style=dashed];
m7_379 -> m7_380  [key=0, style=solid];
m7_381 -> m7_383  [key=0, style=solid];
m7_381 -> m7_182  [key=2, style=dotted];
m7_381 -> m7_382  [key=0, style=solid];
m7_381 -> m7_354  [key=2, style=dotted];
m7_382 -> m7_383  [key=0, style=solid];
m7_382 -> m7_177  [key=2, style=dotted];
m7_382 -> m7_23  [key=2, style=dotted];
m7_380 -> m7_381  [key=0, style=solid];
m7_380 -> m7_382  [key=0, style=solid];
m7_380 -> m7_383  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_380 -> m7_380  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_383 -> m7_379  [color=blue, key=0, style=bold];
m7_383 -> m7_384  [key=0, style=solid];
m7_383 -> m7_355  [key=2, style=dotted];
m7_511 -> m7_174  [key=2, style=dotted];
m7_511 -> m7_566  [key=0, style=solid];
m7_511 -> m7_512  [key=0, style=solid];
m7_511 -> m7_23  [key=2, style=dotted];
m7_483 -> m7_181  [key=2, style=dotted];
m7_483 -> m7_566  [key=0, style=solid];
m7_483 -> m7_484  [key=0, style=solid];
m7_483 -> m7_485  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_483 -> m7_483  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m7_499 -> m7_315  [key=2, style=dotted];
m7_499 -> m7_566  [key=0, style=solid];
m7_499 -> m7_500  [key=0, style=solid];
m7_499 -> m7_501  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_499 -> m7_499  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m7_507 -> m7_318  [key=2, style=dotted];
m7_507 -> m7_566  [key=0, style=solid];
m7_507 -> m7_508  [key=0, style=solid];
m7_507 -> m7_514  [key=2, style=dotted];
m7_507 -> m7_509  [color=darkseagreen4, key=1, label=obj, style=dashed];
m7_503 -> m7_341  [key=2, style=dotted];
m7_503 -> m7_566  [key=0, style=solid];
m7_503 -> m7_504  [key=0, style=solid];
m7_503 -> m7_23  [key=2, style=dotted];
m7_487 -> m7_344  [key=2, style=dotted];
m7_487 -> m7_566  [key=0, style=solid];
m7_487 -> m7_488  [key=0, style=solid];
m7_487 -> m7_23  [key=2, style=dotted];
m7_501 -> m7_359  [key=2, style=dotted];
m7_501 -> m7_566  [key=0, style=solid];
m7_501 -> m7_502  [key=0, style=solid];
m7_501 -> m7_112  [key=2, style=dotted];
m7_509 -> m7_364  [key=2, style=dotted];
m7_509 -> m7_566  [key=0, style=solid];
m7_509 -> m7_510  [key=0, style=solid];
m7_509 -> m7_516  [key=2, style=dotted];
m7_513 -> m7_369  [key=2, style=dotted];
m7_513 -> m7_566  [key=0, style=solid];
m7_525 -> m7_384  [key=2, style=dotted];
m7_525 -> m7_566  [key=0, style=solid];
m7_485 -> m7_389  [key=2, style=dotted];
m7_485 -> m7_566  [key=0, style=solid];
m7_485 -> m7_486  [key=0, style=solid];
m7_485 -> m7_112  [key=2, style=dotted];
m7_481 -> m7_404  [key=2, style=dotted];
m7_481 -> m7_566  [key=0, style=solid];
m7_505 -> m7_409  [key=2, style=dotted];
m7_505 -> m7_566  [key=0, style=solid];
m7_505 -> m7_506  [key=0, style=solid];
m7_541 -> m7_434  [key=2, style=dotted];
m7_541 -> m7_566  [key=0, style=solid];
m7_477 -> m7_478  [key=0, style=solid];
m7_477 -> m7_480  [key=0, style=solid];
m7_477 -> m7_482  [key=0, style=solid];
m7_477 -> m7_484  [key=0, style=solid];
m7_477 -> m7_486  [key=0, style=solid];
m7_477 -> m7_488  [key=0, style=solid];
m7_477 -> m7_490  [key=0, style=solid];
m7_477 -> m7_492  [key=0, style=solid];
m7_477 -> m7_494  [key=0, style=solid];
m7_477 -> m7_496  [key=0, style=solid];
m7_477 -> m7_498  [key=0, style=solid];
m7_477 -> m7_500  [key=0, style=solid];
m7_477 -> m7_502  [key=0, style=solid];
m7_477 -> m7_504  [key=0, style=solid];
m7_477 -> m7_506  [key=0, style=solid];
m7_477 -> m7_508  [key=0, style=solid];
m7_477 -> m7_510  [key=0, style=solid];
m7_477 -> m7_512  [key=0, style=solid];
m7_477 -> m7_514  [key=0, style=solid];
m7_477 -> m7_516  [key=0, style=solid];
m7_477 -> m7_518  [key=0, style=solid];
m7_477 -> m7_520  [key=0, style=solid];
m7_477 -> m7_522  [key=0, style=solid];
m7_477 -> m7_524  [key=0, style=solid];
m7_477 -> m7_526  [key=0, style=solid];
m7_477 -> m7_528  [key=0, style=solid];
m7_477 -> m7_530  [key=0, style=solid];
m7_477 -> m7_532  [key=0, style=solid];
m7_477 -> m7_534  [key=0, style=solid];
m7_477 -> m7_536  [key=0, style=solid];
m7_477 -> m7_538  [key=0, style=solid];
m7_477 -> m7_540  [key=0, style=solid];
m7_477 -> m7_542  [key=0, style=solid];
m7_477 -> m7_544  [key=0, style=solid];
m7_477 -> m7_546  [key=0, style=solid];
m7_477 -> m7_548  [key=0, style=solid];
m7_477 -> m7_550  [key=0, style=solid];
m7_477 -> m7_552  [key=0, style=solid];
m7_477 -> m7_554  [key=0, style=solid];
m7_477 -> m7_556  [key=0, style=solid];
m7_477 -> m7_558  [key=0, style=solid];
m7_477 -> m7_266  [key=2, style=dotted];
m7_510 -> m7_511  [key=0, style=solid];
m7_510 -> m7_517  [key=2, style=dotted];
m7_482 -> m7_483  [key=0, style=solid];
m7_526 -> m7_527  [key=0, style=solid];
m7_498 -> m7_499  [key=0, style=solid];
m7_506 -> m7_507  [key=0, style=solid];
m7_506 -> m7_513  [key=2, style=dotted];
m7_514 -> m7_515  [key=0, style=solid];
m7_478 -> m7_479  [key=0, style=solid];
m7_478 -> m7_470  [color=blue, key=0, style=bold];
m7_502 -> m7_503  [key=0, style=solid];
m7_502 -> m7_113  [key=2, style=dotted];
m7_486 -> m7_487  [key=0, style=solid];
m7_486 -> m7_113  [key=2, style=dotted];
m7_542 -> m7_543  [key=0, style=solid];
m7_500 -> m7_501  [key=0, style=solid];
m7_500 -> m7_111  [key=2, style=dotted];
m7_500 -> m7_502  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_508 -> m7_509  [key=0, style=solid];
m7_508 -> m7_65  [key=2, style=dotted];
m7_508 -> m7_48  [key=2, style=dotted];
m7_508 -> m7_515  [key=2, style=dotted];
m7_508 -> m7_510  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_512 -> m7_513  [key=0, style=solid];
m7_512 -> m7_505  [color=blue, key=0, style=bold];
m7_516 -> m7_517  [key=0, style=solid];
m7_484 -> m7_485  [key=0, style=solid];
m7_484 -> m7_111  [key=2, style=dotted];
m7_484 -> m7_486  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_480 -> m7_481  [key=0, style=solid];
m7_504 -> m7_505  [key=0, style=solid];
m7_504 -> m7_498  [color=blue, key=0, style=bold];
m7_488 -> m7_489  [key=0, style=solid];
m7_488 -> m7_482  [color=blue, key=0, style=bold];
m7_137 -> m7_138  [key=0, style=solid];
m7_137 -> m7_166  [key=0, style=solid];
m7_137 -> m7_175  [key=2, style=dotted];
m7_138 -> m7_139  [key=0, style=solid];
m7_138 -> m7_111  [key=2, style=dotted];
m7_138 -> m7_153  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_138 -> m7_157  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_138 -> m7_161  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_138 -> m7_162  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_138 -> m7_163  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_138 -> m7_166  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_138 -> m7_171  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_138 -> m7_140  [key=0, style=solid];
m7_139 -> m7_140  [key=0, style=solid];
m7_139 -> m7_166  [key=0, style=solid];
m7_139 -> m7_176  [key=2, style=dotted];
m7_153 -> m7_154  [key=0, style=solid];
m7_153 -> m7_177  [key=2, style=dotted];
m7_153 -> m7_169  [color=darkseagreen4, key=1, label=instruction, style=dashed];
m7_157 -> m7_158  [key=0, style=solid];
m7_157 -> m7_178  [key=2, style=dotted];
m7_157 -> m7_170  [color=darkseagreen4, key=1, label=cDataSection, style=dashed];
m7_161 -> m7_162  [key=0, style=solid];
m7_161 -> m7_179  [key=2, style=dotted];
m7_161 -> m7_165  [color=darkseagreen4, key=1, label=element, style=dashed];
m7_161 -> m7_168  [color=darkseagreen4, key=1, label=element, style=dashed];
m7_161 -> m7_169  [color=darkseagreen4, key=1, label=element, style=dashed];
m7_161 -> m7_170  [color=darkseagreen4, key=1, label=element, style=dashed];
m7_161 -> m7_171  [color=darkseagreen4, key=1, label=element, style=dashed];
m7_161 -> m7_172  [color=darkseagreen4, key=1, label=element, style=dashed];
m7_162 -> m7_163  [key=0, style=solid];
m7_162 -> m7_180  [key=2, style=dotted];
m7_162 -> m7_181  [key=2, style=dotted];
m7_162 -> m7_166  [key=0, style=solid];
m7_162 -> m7_168  [key=2, style=dotted];
m7_162 -> m7_187  [key=2, style=dotted];
m7_163 -> m7_164  [key=0, style=solid];
m7_163 -> m7_180  [key=2, style=dotted];
m7_163 -> m7_165  [color=darkseagreen4, key=1, label=aa, style=dashed];
m7_166 -> m7_167  [key=0, style=solid];
m7_166 -> m7_180  [key=2, style=dotted];
m7_166 -> m7_168  [color=darkseagreen4, key=1, label=aa, style=dashed];
m7_166 -> m7_114  [key=0, style=solid];
m7_166 -> m7_190  [key=2, style=dotted];
m7_166 -> m7_191  [key=2, style=dotted];
m7_171 -> m7_172  [key=0, style=solid];
m7_171 -> m7_182  [key=2, style=dotted];
m7_171 -> m7_463  [key=0, style=solid];
m7_140 -> m7_141  [key=0, style=solid];
m7_140 -> m7_135  [key=2, style=dotted];
m7_140 -> m7_142  [key=0, style=solid];
m7_141 -> m7_142  [key=0, style=solid];
m7_141 -> m7_143  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_141 -> m7_149  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_141 -> m7_141  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m7_141 -> m7_166  [key=0, style=solid];
m7_141 -> m7_177  [key=2, style=dotted];
m7_142 -> m7_143  [key=0, style=solid];
m7_142 -> m7_111  [key=2, style=dotted];
m7_142 -> m7_144  [color=darkseagreen4, key=1, label=document, style=dashed];
m7_142 -> m7_166  [key=0, style=solid];
m7_142 -> m7_178  [key=2, style=dotted];
m7_142 -> m7_176  [key=2, style=dotted];
m7_143 -> m7_144  [key=0, style=solid];
m7_143 -> m7_112  [key=2, style=dotted];
m7_149 -> m7_150  [key=0, style=solid];
m7_149 -> m7_92  [key=2, style=dotted];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_146  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m7_144 -> m7_166  [key=0, style=solid];
m7_144 -> m7_168  [key=2, style=dotted];
m7_144 -> m7_179  [key=2, style=dotted];
m7_145 -> m7_146  [key=0, style=solid];
m7_146 -> m7_147  [key=0, style=solid];
m7_146 -> m7_113  [key=2, style=dotted];
m7_146 -> m7_148  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_146 -> m7_166  [key=0, style=solid];
m7_146 -> m7_180  [key=2, style=dotted];
m7_146 -> m7_181  [key=2, style=dotted];
m7_147 -> m7_148  [key=0, style=solid];
m7_147 -> m7_135  [key=2, style=dotted];
m7_148 -> m7_149  [key=0, style=solid];
m7_148 -> m7_23  [key=2, style=dotted];
m7_148 -> m7_166  [key=0, style=solid];
m7_148 -> m7_182  [key=2, style=dotted];
m7_150 -> m7_151  [key=0, style=solid];
m7_150 -> m7_175  [key=2, style=dotted];
m7_150 -> m7_176  [key=2, style=dotted];
m7_150 -> m7_166  [key=0, style=solid];
m7_150 -> m7_183  [key=2, style=dotted];
m7_151 -> m7_152  [key=0, style=solid];
m7_151 -> m7_93  [key=2, style=dotted];
m7_152 -> m7_153  [key=0, style=solid];
m7_152 -> m7_23  [key=2, style=dotted];
m7_152 -> m7_166  [key=0, style=solid];
m7_152 -> m7_69  [key=2, style=dotted];
m7_154 -> m7_155  [key=0, style=solid];
m7_154 -> m7_113  [key=2, style=dotted];
m7_154 -> m7_156  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_154 -> m7_166  [key=0, style=solid];
m7_154 -> m7_76  [key=2, style=dotted];
m7_155 -> m7_156  [key=0, style=solid];
m7_155 -> m7_135  [key=2, style=dotted];
m7_156 -> m7_157  [key=0, style=solid];
m7_156 -> m7_23  [key=2, style=dotted];
m7_156 -> m7_166  [key=0, style=solid];
m7_156 -> m7_82  [key=2, style=dotted];
m7_158 -> m7_159  [key=0, style=solid];
m7_158 -> m7_113  [key=2, style=dotted];
m7_158 -> m7_160  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_170 -> m7_171  [key=0, style=solid];
m7_170 -> m7_182  [key=2, style=dotted];
m7_170 -> m7_114  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m7_170 -> m7_192  [key=0, style=solid];
m7_170 -> m7_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_170 -> m7_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_170 -> m7_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_170 -> m7_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_170 -> m7_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_170 -> m7_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_159 -> m7_160  [key=0, style=solid];
m7_159 -> m7_135  [key=2, style=dotted];
m7_159 -> m7_166  [key=0, style=solid];
m7_159 -> m7_184  [key=2, style=dotted];
m7_160 -> m7_161  [key=0, style=solid];
m7_160 -> m7_23  [key=2, style=dotted];
m7_160 -> m7_166  [key=0, style=solid];
m7_160 -> m7_185  [key=2, style=dotted];
m7_160 -> m7_186  [key=2, style=dotted];
m7_165 -> m7_166  [key=0, style=solid];
m7_165 -> m7_181  [key=2, style=dotted];
m7_165 -> m7_167  [key=0, style=solid];
m7_165 -> m7_189  [key=2, style=dotted];
m7_164 -> m7_165  [key=0, style=solid];
m7_164 -> m7_166  [key=0, style=solid];
m7_164 -> m7_188  [key=2, style=dotted];
m7_167 -> m7_168  [key=0, style=solid];
m7_167 -> m7_114  [color=blue, key=0, style=bold];
m7_69 -> m7_70  [key=0, style=solid];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_80  [key=2, style=dotted];
m7_70 -> m7_81  [key=2, style=dotted];
m7_70 -> m7_82  [key=2, style=dotted];
m7_70 -> m7_83  [key=2, style=dotted];
m7_70 -> m7_72  [key=2, style=dotted];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_84  [key=2, style=dotted];
m7_71 -> m7_78  [color=darkseagreen4, key=1, label=x, style=dashed];
m7_71 -> m7_69  [color=blue, key=0, style=bold];
m7_72 -> m7_73  [key=0, style=solid];
m7_72 -> m7_64  [key=2, style=dotted];
m7_72 -> m7_608  [key=0, style=solid];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_23  [key=2, style=dotted];
m7_78 -> m7_76  [color=blue, key=0, style=bold];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_65  [key=2, style=dotted];
m7_73 -> m7_48  [key=2, style=dotted];
m7_73 -> m7_66  [key=2, style=dotted];
m7_73 -> m7_76  [color=darkseagreen4, key=1, label=doc1, style=dashed];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_51  [key=2, style=dotted];
m7_74 -> m7_68  [key=2, style=dotted];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_67  [key=2, style=dotted];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_23  [key=2, style=dotted];
m7_75 -> m7_73  [color=blue, key=0, style=bold];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_68  [key=2, style=dotted];
m7_77 -> m7_72  [key=2, style=dotted];
m7_79 -> m7_69  [color=blue, key=0, style=bold];
m7_79 -> m7_80  [key=0, style=solid];
m7_572 -> m7_573  [key=0, style=solid];
m7_572 -> m7_210  [key=2, style=dotted];
m7_293 -> m7_294  [key=0, style=solid];
m7_293 -> m7_283  [key=2, style=dotted];
m7_284 -> m7_285  [key=0, style=solid];
m7_284 -> m7_283  [color=blue, key=0, style=bold];
m7_285 -> m7_286  [key=0, style=solid];
m7_285 -> m7_285  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m7_285 -> m7_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m7_285 -> m7_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m7_285 -> m7_294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m7_285 -> m7_303  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken tokenBeingWritten", style=bold];
m7_285 -> m7_68  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken tokenBeingWritten", style=bold];
m7_285 -> m7_302  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken tokenBeingWritten", style=bold];
m7_286 -> m7_287  [key=0, style=solid];
m7_286 -> m7_24  [key=2, style=dotted];
m7_286 -> m7_288  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m7_286 -> m7_296  [color=darkseagreen4, key=1, label=newState, style=dashed];
m7_287 -> m7_288  [key=0, style=solid];
m7_287 -> m7_287  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m7_287 -> m7_289  [key=0, style=solid];
m7_288 -> m7_289  [key=0, style=solid];
m7_288 -> m7_23  [key=2, style=dotted];
m7_288 -> m7_297  [key=0, style=solid];
m7_288 -> m7_298  [key=2, style=dotted];
m7_288 -> m7_299  [key=2, style=dotted];
m7_288 -> m7_204  [key=2, style=dotted];
m7_289 -> m7_284  [color=blue, key=0, style=bold];
m7_289 -> m7_290  [key=0, style=solid];
m7_289 -> m7_291  [key=0, style=solid];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_56  [key=2, style=dotted];
m7_93 -> m7_95  [key=2, style=dotted];
m7_436 -> m7_438  [key=0, style=solid];
m7_436 -> m7_182  [key=2, style=dotted];
m7_573 -> m7_576  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m7_573 -> m7_578  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m7_573 -> m7_580  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m7_573 -> m7_584  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_573 -> m7_597  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m7_573 -> m7_574  [key=0, style=solid];
m7_573 -> m7_582  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_573 -> m7_23  [key=2, style=dotted];
m7_576 -> m7_605  [key=0, style=solid];
m7_576 -> m7_68  [key=2, style=dotted];
m7_576 -> m7_577  [key=0, style=solid];
m7_576 -> m7_581  [color=darkseagreen4, key=1, label=xmlString, style=dashed];
m7_576 -> m7_576  [color=darkorchid, key=3, label="Local variable string xmlString", style=bold];
m7_578 -> m7_605  [key=0, style=solid];
m7_578 -> m7_68  [key=2, style=dotted];
m7_578 -> m7_579  [key=0, style=solid];
m7_578 -> m7_67  [key=2, style=dotted];
m7_580 -> m7_605  [key=0, style=solid];
m7_580 -> m7_68  [key=2, style=dotted];
m7_580 -> m7_581  [key=0, style=solid];
m7_580 -> m7_111  [key=2, style=dotted];
m7_580 -> m7_582  [color=darkseagreen4, key=1, label=xml1, style=dashed];
m7_584 -> m7_605  [key=0, style=solid];
m7_584 -> m7_88  [key=2, style=dotted];
m7_584 -> m7_575  [color=blue, key=0, style=bold];
m7_586 -> m7_605  [key=0, style=solid];
m7_586 -> m7_465  [key=2, style=dotted];
m7_586 -> m7_587  [key=0, style=solid];
m7_586 -> m7_593  [key=2, style=dotted];
m7_586 -> m7_92  [key=2, style=dotted];
m7_586 -> m7_589  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_586 -> m7_590  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_586 -> m7_591  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_588 -> m7_605  [key=0, style=solid];
m7_588 -> m7_308  [key=2, style=dotted];
m7_588 -> m7_589  [key=0, style=solid];
m7_588 -> m7_68  [key=2, style=dotted];
m7_588 -> m7_590  [color=darkseagreen4, key=1, label=w2, style=dashed];
m7_588 -> m7_591  [color=darkseagreen4, key=1, label=w2, style=dashed];
m7_603 -> m7_605  [key=0, style=solid];
m7_603 -> m7_72  [key=2, style=dotted];
m7_603 -> m7_604  [key=0, style=solid];
m7_575 -> m7_576  [key=0, style=solid];
m7_577 -> m7_578  [key=0, style=solid];
m7_577 -> m7_92  [key=2, style=dotted];
m7_579 -> m7_580  [key=0, style=solid];
m7_579 -> m7_23  [key=2, style=dotted];
m7_582 -> m7_584  [key=0, style=solid];
m7_582 -> m7_583  [key=0, style=solid];
m7_582 -> m7_67  [key=2, style=dotted];
m7_585 -> m7_586  [key=0, style=solid];
m7_587 -> m7_588  [key=0, style=solid];
m7_587 -> m7_594  [key=2, style=dotted];
m7_574 -> m7_575  [key=0, style=solid];
m7_574 -> m7_577  [key=0, style=solid];
m7_574 -> m7_579  [key=0, style=solid];
m7_574 -> m7_585  [key=0, style=solid];
m7_574 -> m7_587  [key=0, style=solid];
m7_574 -> m7_598  [key=0, style=solid];
m7_574 -> m7_600  [key=0, style=solid];
m7_574 -> m7_602  [key=0, style=solid];
m7_574 -> m7_581  [key=0, style=solid];
m7_574 -> m7_589  [key=0, style=solid];
m7_574 -> m7_604  [key=0, style=solid];
m7_574 -> m7_570  [color=blue, key=0, style=bold];
m7_604 -> m7_605  [key=0, style=solid];
m7_604 -> m7_607  [key=2, style=dotted];
m7_604 -> m7_606  [color=darkseagreen4, key=1, label=xmlString, style=dashed];
m7_604 -> m7_596  [color=darkorchid, key=3, label="Local variable string xmlString", style=bold];
m7_583 -> m7_605  [key=0, style=solid];
m7_583 -> m7_606  [key=2, style=dotted];
m7_583 -> m7_584  [key=0, style=solid];
m7_583 -> m7_23  [key=2, style=dotted];
m7_581 -> m7_582  [key=0, style=solid];
m7_581 -> m7_112  [key=2, style=dotted];
m7_589 -> m7_590  [key=0, style=solid];
m7_589 -> m7_23  [key=2, style=dotted];
m7_594 -> m7_595  [key=0, style=solid];
m7_590 -> m7_591  [key=0, style=solid];
m7_590 -> m7_23  [key=2, style=dotted];
m7_591 -> m7_592  [key=0, style=solid];
m7_591 -> m7_51  [key=2, style=dotted];
m7_591 -> m7_23  [key=2, style=dotted];
m7_592 -> m7_593  [key=0, style=solid];
m7_592 -> m7_585  [color=blue, key=0, style=bold];
m7_605 -> m7_573  [color=blue, key=0, style=bold];
m7_605 -> m7_606  [key=0, style=solid];
m7_605 -> m7_111  [key=2, style=dotted];
m7_605 -> m7_607  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_290 -> m7_291  [key=0, style=solid];
m7_290 -> m7_281  [key=2, style=dotted];
m7_291 -> m7_292  [key=0, style=solid];
m7_291 -> m7_293  [key=2, style=dotted];
m7_291 -> m7_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_291 -> m7_296  [key=0, style=solid];
m7_292 -> m7_290  [color=blue, key=0, style=bold];
m7_292 -> m7_293  [key=0, style=solid];
m7_292 -> m7_294  [key=0, style=solid];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_94  [key=2, style=dotted];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_85  [key=2, style=dotted];
m7_90 -> m7_51  [key=2, style=dotted];
m7_90 -> m7_23  [key=2, style=dotted];
m7_91 -> m7_89  [color=blue, key=0, style=bold];
m7_91 -> m7_85  [color=blue, key=0, style=bold];
m7_191 -> m7_192  [key=0, style=solid];
m7_191 -> m7_135  [key=2, style=dotted];
m7_353 -> m7_354  [key=0, style=solid];
m7_353 -> m7_462  [color=darkorchid, key=3, label="Parameter variable System.Guid value", style=bold];
m7_353 -> m7_347  [color=blue, key=0, style=bold];
m7_354 -> m7_355  [key=0, style=solid];
m7_354 -> m7_302  [key=2, style=dotted];
m7_218 -> m7_219  [key=0, style=solid];
m7_218 -> m7_224  [key=2, style=dotted];
m7_217 -> m7_219  [key=0, style=solid];
m7_217 -> m7_218  [key=0, style=solid];
m7_217 -> m7_223  [key=2, style=dotted];
m7_216 -> m7_217  [key=0, style=solid];
m7_216 -> m7_213  [key=2, style=dotted];
m7_216 -> m7_221  [key=2, style=dotted];
m7_216 -> m7_222  [key=2, style=dotted];
m7_215 -> m7_216  [key=0, style=solid];
m7_215 -> m7_220  [key=2, style=dotted];
m7_215 -> m7_218  [color=darkseagreen4, key=1, label=builder, style=dashed];
m7_219 -> m7_113  [color=blue, key=0, style=bold];
m7_219 -> m7_212  [color=blue, key=0, style=bold];
m7_189 -> m7_190  [key=0, style=solid];
m7_189 -> m7_23  [key=2, style=dotted];
m7_349 -> m7_350  [key=0, style=solid];
m7_349 -> m7_354  [key=2, style=dotted];
m7_349 -> m7_302  [key=2, style=dotted];
m7_350 -> m7_351  [key=0, style=solid];
m7_350 -> m7_23  [key=2, style=dotted];
m7_350 -> m7_186  [color=blue, key=0, style=bold];
m7_183 -> m7_303  [key=0, style=solid];
m7_183 -> m7_184  [key=0, style=solid];
m7_303 -> m7_304  [key=0, style=solid];
m7_303 -> m7_302  [key=2, style=dotted];
m7_304 -> m7_183  [color=blue, key=0, style=bold];
m7_304 -> m7_305  [key=0, style=solid];
m7_304 -> m7_304  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m7_135 -> m7_137  [color=darkseagreen4, key=1, label=value, style=dashed];
m7_135 -> m7_139  [color=darkseagreen4, key=1, label=value, style=dashed];
m7_135 -> m7_141  [color=darkseagreen4, key=1, label=value, style=dashed];
m7_135 -> m7_142  [color=darkseagreen4, key=1, label=value, style=dashed];
m7_135 -> m7_136  [key=0, style=solid];
m7_135 -> m7_138  [color=darkseagreen4, key=1, label=value, style=dashed];
m7_135 -> m7_140  [color=darkseagreen4, key=1, label=value, style=dashed];
m7_179 -> m7_313  [key=0, style=solid];
m7_179 -> m7_462  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
m7_136 -> m7_137  [key=0, style=solid];
m7_136 -> m7_138  [key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid];
m7_186 -> m7_349  [key=0, style=solid];
m7_186 -> m7_197  [color=darkorchid, key=3, label="Parameter variable System.DateTime value", style=bold];
m7_186 -> m7_462  [color=darkorchid, key=3, label="Parameter variable System.DateTime value", style=bold];
m7_186 -> m7_187  [key=0, style=solid];
m7_186 -> m7_186  [color=darkseagreen4, key=1, label=fragement, style=dashed];
m7_188 -> m7_444  [key=0, style=solid];
m7_188 -> m7_462  [color=darkorchid, key=3, label="Parameter variable byte[] value", style=bold];
m7_188 -> m7_189  [key=0, style=solid];
m7_188 -> m7_188  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_89  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_88  [key=2, style=dotted];
m7_86 -> m7_86  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m7_87 -> m7_85  [color=blue, key=0, style=bold];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_92  [key=2, style=dotted];
m7_87 -> m7_93  [key=2, style=dotted];
m7_87 -> m7_89  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_88 -> m7_610  [key=0, style=solid];
m7_88 -> m7_85  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m7_88 -> m7_573  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_23  [key=2, style=dotted];
m7_610 -> m7_611  [key=0, style=solid];
m7_610 -> m7_603  [color=blue, key=0, style=bold];
m7_611 -> m7_612  [key=0, style=solid];
m7_611 -> m7_285  [key=2, style=dotted];
m7_611 -> m7_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_611 -> m7_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_612 -> m7_88  [color=blue, key=0, style=bold];
m7_612 -> m7_338  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_335 -> m7_336  [key=0, style=solid];
m7_335 -> m7_462  [color=darkorchid, key=3, label="Parameter variable ushort value", style=bold];
m7_335 -> m7_332  [color=blue, key=0, style=bold];
m7_336 -> m7_337  [key=0, style=solid];
m7_336 -> m7_302  [key=2, style=dotted];
m7_337 -> m7_335  [color=blue, key=0, style=bold];
m7_337 -> m7_338  [key=0, style=solid];
m7_244 -> m7_245  [key=0, style=solid];
m7_244 -> m7_246  [key=0, style=solid];
m7_366 -> m7_368  [key=0, style=solid];
m7_366 -> m7_182  [key=2, style=dotted];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_68  [key=2, style=dotted];
m7_305 -> m7_306  [key=0, style=solid];
m7_305 -> m7_187  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m7_305 -> m7_24  [key=2, style=dotted];
m7_305 -> m7_307  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m7_305 -> m7_308  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m7_306 -> m7_307  [key=0, style=solid];
m7_306 -> m7_308  [key=2, style=dotted];
m7_306 -> m7_306  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m7_307 -> m7_305  [color=blue, key=0, style=bold];
m7_307 -> m7_308  [key=0, style=solid];
m7_307 -> m7_23  [key=2, style=dotted];
m7_424 -> m7_427  [color=darkseagreen4, key=1, label="System.DateTime?", style=dashed];
m7_424 -> m7_425  [key=0, style=solid];
m7_424 -> m7_65  [key=2, style=dotted];
m7_424 -> m7_436  [key=2, style=dotted];
m7_424 -> m7_426  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_426 -> m7_428  [key=0, style=solid];
m7_426 -> m7_182  [key=2, style=dotted];
m7_426 -> m7_427  [key=0, style=solid];
m7_426 -> m7_27  [key=2, style=dotted];
m7_426 -> m7_430  [color=darkseagreen4, key=1, label=node, style=dashed];
m7_427 -> m7_428  [key=0, style=solid];
m7_427 -> m7_186  [key=2, style=dotted];
m7_427 -> m7_256  [key=2, style=dotted];
m7_427 -> m7_429  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_425 -> m7_426  [key=0, style=solid];
m7_425 -> m7_427  [key=0, style=solid];
m7_425 -> m7_23  [key=2, style=dotted];
m7_428 -> m7_424  [color=blue, key=0, style=bold];
m7_428 -> m7_429  [key=0, style=solid];
m7_428 -> m7_428  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m7_608 -> m7_609  [key=0, style=solid];
m7_608 -> m7_242  [key=2, style=dotted];
m7_608 -> m7_68  [key=2, style=dotted];
m7_609 -> m7_72  [color=blue, key=0, style=bold];
m7_609 -> m7_610  [key=0, style=solid];
m7_609 -> m7_23  [key=2, style=dotted];
m7_441 -> m7_442  [key=0, style=solid];
m7_441 -> m7_443  [key=0, style=solid];
m7_441 -> m7_182  [key=2, style=dotted];
m7_294 -> m7_295  [key=0, style=solid];
m7_294 -> m7_296  [key=0, style=solid];
m7_295 -> m7_296  [key=0, style=solid];
m7_295 -> m7_210  [key=2, style=dotted];
m7_295 -> m7_277  [key=2, style=dotted];
m7_296 -> m7_294  [color=blue, key=0, style=bold];
m7_296 -> m7_297  [key=0, style=solid];
m7_345 -> m7_346  [key=0, style=solid];
m7_345 -> m7_94  [key=2, style=dotted];
m7_345 -> m7_302  [key=2, style=dotted];
m7_344 -> m7_345  [key=0, style=solid];
m7_344 -> m7_462  [color=darkorchid, key=3, label="Parameter variable sbyte value", style=bold];
m7_346 -> m7_344  [color=blue, key=0, style=bold];
m7_442 -> m7_443  [key=0, style=solid];
m7_442 -> m7_24  [key=2, style=dotted];
m7_442 -> m7_356  [key=2, style=dotted];
m7_443 -> m7_441  [color=blue, key=0, style=bold];
m7_443 -> m7_439  [color=blue, key=0, style=bold];
m7_571 -> m7_572  [key=0, style=solid];
m7_571 -> m7_571  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_64 -> m7_229  [key=0, style=solid];
m7_230 -> m7_229  [key=0, style=solid];
m7_230 -> m7_92  [key=2, style=dotted];
m7_230 -> m7_231  [key=0, style=solid];
m7_231 -> m7_64  [color=blue, key=0, style=bold];
m7_231 -> m7_232  [key=0, style=solid];
m7_231 -> m7_233  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_231 -> m7_231  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_27 -> m7_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_27 -> m7_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_27 -> m7_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_27 -> m7_24  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m7_27 -> m7_424  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m7_27 -> m7_25  [color=darkorchid, key=3, label="Parameter variable string deserializeRootElementName", style=bold];
m7_27 -> m7_50  [color=darkorchid, key=3, label="Parameter variable string deserializeRootElementName", style=bold];
m7_27 -> m7_34  [color=darkorchid, key=3, label="method methodReturn XmlNode DeserializeXmlNode", style=bold];
m7_28 -> m7_29  [key=0, style=solid];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_45  [key=2, style=dotted];
m7_29 -> m7_46  [key=2, style=dotted];
m7_29 -> m7_34  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_29 -> m7_35  [key=2, style=dotted];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_34  [key=0, style=solid];
m7_33 -> m7_34  [key=0, style=solid];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_45  [key=2, style=dotted];
m7_36 -> m7_46  [key=2, style=dotted];
m7_36 -> m7_38  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_47  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_49  [key=2, style=dotted];
m7_34 -> m7_50  [key=2, style=dotted];
m7_34 -> m7_43  [color=darkseagreen4, key=1, label=node, style=dashed];
m7_34 -> m7_28  [color=blue, key=0, style=bold];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_48  [key=2, style=dotted];
m7_31 -> m7_33  [color=darkseagreen4, key=1, label=converter, style=dashed];
m7_31 -> m7_34  [color=darkseagreen4, key=1, label=converter, style=dashed];
m7_31 -> m7_38  [color=darkseagreen4, key=1, label=converter, style=dashed];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_49  [key=2, style=dotted];
m7_38 -> m7_50  [key=2, style=dotted];
m7_38 -> m7_40  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_38 -> m7_41  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_47  [key=2, style=dotted];
m7_37 -> m7_39  [key=0, style=solid];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_51  [key=2, style=dotted];
m7_39 -> m7_41  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m7_39 -> m7_42  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m7_39 -> m7_36  [color=blue, key=0, style=bold];
m7_434 -> m7_437  [color=darkseagreen4, key=1, label="System.Guid?", style=dashed];
m7_434 -> m7_435  [key=0, style=solid];
m7_384 -> m7_385  [key=0, style=solid];
m7_384 -> m7_51  [key=2, style=dotted];
m7_384 -> m7_23  [key=2, style=dotted];
m7_384 -> m7_387  [color=darkseagreen4, key=1, label="double?", style=dashed];
m7_385 -> m7_379  [color=blue, key=0, style=bold];
m7_385 -> m7_386  [key=0, style=solid];
m7_385 -> m7_387  [key=0, style=solid];
m7_190 -> m7_97  [color=darkorchid, key=3, label="method methodReturn bool IsEndToken", style=bold];
m7_190 -> m7_206  [key=0, style=solid];
m7_190 -> m7_211  [color=darkorchid, key=3, label="method methodReturn bool IsEndToken", style=bold];
m7_190 -> m7_191  [key=0, style=solid];
m7_190 -> m7_135  [key=2, style=dotted];
m7_212 -> m7_190  [color=blue, key=0, style=bold];
m7_212 -> m7_215  [key=0, style=solid];
m7_212 -> m7_216  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_212 -> m7_217  [color=darkseagreen4, key=1, label=XDocument, style=dashed];
m7_212 -> m7_207  [color=darkorchid, key=3, label="Parameter variable XDocument doc", style=bold];
m7_626 -> m7_627  [key=0, style=solid];
m7_626 -> m7_285  [key=2, style=dotted];
m7_627 -> m7_465  [color=blue, key=0, style=bold];
m7_81 -> m7_79  [color=blue, key=0, style=bold];
m7_607 -> m7_608  [key=0, style=solid];
m7_607 -> m7_113  [key=2, style=dotted];
m7_264 -> m7_265  [key=0, style=solid];
m7_264 -> m7_56  [key=2, style=dotted];
m7_264 -> m7_274  [color=darkseagreen4, key=1, label=currentLevelType, style=dashed];
m7_193 -> m7_203  [key=0, style=solid];
m7_193 -> m7_204  [key=2, style=dotted];
m7_193 -> m7_183  [color=blue, key=0, style=bold];
m7_192 -> m7_193  [key=0, style=solid];
m7_192 -> m7_191  [key=2, style=dotted];
m7_192 -> m7_194  [key=0, style=solid];
m7_192 -> m7_136  [key=2, style=dotted];
m7_194 -> m7_195  [key=0, style=solid];
m7_194 -> m7_196  [key=0, style=solid];
m7_176 -> m7_328  [key=0, style=solid];
m7_176 -> m7_135  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m7_176 -> m7_462  [color=darkorchid, key=3, label="Parameter variable double value", style=bold];
m7_242 -> m7_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerType", style=dashed];
m7_242 -> m7_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerType", style=dashed];
m7_242 -> m7_72  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType type", style=bold];
m7_242 -> m7_243  [key=0, style=solid];
m7_242 -> m7_136  [key=2, style=dotted];
m7_246 -> m7_247  [key=0, style=solid];
m7_246 -> m7_249  [color=darkseagreen4, key=1, label=top, style=dashed];
m7_246 -> m7_246  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m7_250 -> m7_251  [key=0, style=solid];
m7_250 -> m7_252  [key=0, style=solid];
m7_250 -> m7_135  [key=2, style=dotted];
m7_254 -> m7_276  [key=0, style=solid];
m7_254 -> m7_204  [key=2, style=dotted];
m7_254 -> m7_245  [color=blue, key=0, style=bold];
m7_243 -> m7_244  [key=0, style=solid];
m7_243 -> m7_253  [color=darkseagreen4, key=1, label=levelsToComplete, style=dashed];
m7_243 -> m7_256  [color=darkseagreen4, key=1, label=levelsToComplete, style=dashed];
m7_243 -> m7_230  [color=blue, key=0, style=bold];
m7_245 -> m7_253  [key=0, style=solid];
m7_245 -> m7_256  [color=darkseagreen4, key=1, label=levelsToComplete, style=dashed];
m7_245 -> m7_246  [key=0, style=solid];
m7_247 -> m7_246  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m7_247 -> m7_248  [key=0, style=solid];
m7_247 -> m7_249  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_247 -> m7_251  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_247 -> m7_252  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_247 -> m7_24  [key=2, style=dotted];
m7_249 -> m7_250  [key=0, style=solid];
m7_249 -> m7_255  [key=2, style=dotted];
m7_249 -> m7_251  [color=darkseagreen4, key=1, label=formattedXml, style=dashed];
m7_249 -> m7_253  [color=darkseagreen4, key=1, label=formattedXml, style=dashed];
m7_251 -> m7_253  [key=0, style=solid];
m7_251 -> m7_256  [color=darkseagreen4, key=1, label=levelsToComplete, style=dashed];
m7_251 -> m7_252  [key=0, style=solid];
m7_251 -> m7_135  [key=2, style=dotted];
m7_252 -> m7_252  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_252 -> m7_248  [key=0, style=solid];
m7_252 -> m7_253  [key=0, style=solid];
m7_252 -> m7_136  [key=2, style=dotted];
m7_253 -> m7_254  [key=0, style=solid];
m7_253 -> m7_255  [key=0, style=solid];
m7_253 -> m7_23  [key=2, style=dotted];
m7_248 -> m7_249  [key=0, style=solid];
m7_248 -> m7_253  [key=0, style=solid];
m7_248 -> m7_248  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_65  [key=2, style=dotted];
m7_56 -> m7_48  [key=2, style=dotted];
m7_56 -> m7_66  [key=2, style=dotted];
m7_56 -> m7_59  [color=darkseagreen4, key=1, label=doc1, style=dashed];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_51  [key=2, style=dotted];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_67  [key=2, style=dotted];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_23  [key=2, style=dotted];
m7_58 -> m7_56  [color=blue, key=0, style=bold];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_68  [key=2, style=dotted];
m7_332 -> m7_333  [key=0, style=solid];
m7_332 -> m7_462  [color=darkorchid, key=3, label="Parameter variable short value", style=bold];
m7_333 -> m7_334  [key=0, style=solid];
m7_333 -> m7_302  [key=2, style=dotted];
m7_333 -> m7_338  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_333 -> m7_333  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m7_334 -> m7_332  [color=blue, key=0, style=bold];
m7_334 -> m7_335  [key=0, style=solid];
m7_334 -> m7_336  [key=2, style=dotted];
m7_334 -> m7_337  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_68 -> m7_614  [key=0, style=solid];
m7_68 -> m7_615  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m7_68 -> m7_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerType", style=dashed];
m7_68 -> m7_573  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m7_457 -> m7_459  [key=0, style=solid];
m7_457 -> m7_460  [key=2, style=dotted];
m7_459 -> m7_453  [color=blue, key=0, style=bold];
m7_232 -> m7_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerType", style=dashed];
m7_232 -> m7_46  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType type", style=bold];
m7_232 -> m7_233  [key=0, style=solid];
m7_232 -> m7_235  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonToken GetCloseTokenForType", style=bold];
m7_232 -> m7_237  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonToken GetCloseTokenForType", style=bold];
m7_232 -> m7_239  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonToken GetCloseTokenForType", style=bold];
m7_232 -> m7_111  [key=2, style=dotted];
m7_232 -> m7_234  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_232 -> m7_238  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_240 -> m7_241  [key=0, style=solid];
m7_240 -> m7_204  [key=2, style=dotted];
m7_240 -> m7_135  [key=2, style=dotted];
m7_233 -> m7_240  [key=0, style=solid];
m7_233 -> m7_234  [key=0, style=solid];
m7_233 -> m7_236  [key=0, style=solid];
m7_233 -> m7_238  [key=0, style=solid];
m7_233 -> m7_112  [key=2, style=dotted];
m7_235 -> m7_241  [key=0, style=solid];
m7_235 -> m7_236  [key=0, style=solid];
m7_235 -> m7_235  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m7_237 -> m7_241  [key=0, style=solid];
m7_237 -> m7_238  [key=0, style=solid];
m7_237 -> m7_24  [key=2, style=dotted];
m7_239 -> m7_241  [key=0, style=solid];
m7_239 -> m7_240  [key=0, style=solid];
m7_239 -> m7_135  [key=2, style=dotted];
m7_234 -> m7_235  [key=0, style=solid];
m7_234 -> m7_113  [key=2, style=dotted];
m7_234 -> m7_236  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_234 -> m7_237  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_234 -> m7_240  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_236 -> m7_237  [key=0, style=solid];
m7_236 -> m7_23  [key=2, style=dotted];
m7_238 -> m7_239  [key=0, style=solid];
m7_238 -> m7_23  [key=2, style=dotted];
m7_241 -> m7_232  [color=blue, key=0, style=bold];
m7_241 -> m7_242  [key=0, style=solid];
m7_241 -> m7_244  [key=2, style=dotted];
m7_614 -> m7_615  [key=0, style=solid];
m7_614 -> m7_36  [key=2, style=dotted];
m7_614 -> m7_442  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_615 -> m7_616  [key=0, style=solid];
m7_615 -> m7_285  [key=2, style=dotted];
m7_616 -> m7_617  [key=0, style=solid];
m7_616 -> m7_40  [key=2, style=dotted];
m7_617 -> m7_68  [color=blue, key=0, style=bold];
m7_628 -> m7_124  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_133  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_445  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_467  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_474  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_576  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_578  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_580  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_584  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_586  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_588  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_597  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_599  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_601  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_603  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_608  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_610  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_611  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_614  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_615  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_618  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m7_628 -> m7_626  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
}
