digraph  {
n0 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeObjectProperty()", span="52-52", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeObjectProperty()"];
n1 [label="var left = (JObject)JToken.FromObject(new\r\n            {\r\n                Property1 = 1\r\n            })", span="54-57", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeObjectProperty()"];
n2 [label="var right = (JObject)JToken.FromObject(new\r\n            {\r\n                Property2 = 2\r\n            })", span="58-61", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeObjectProperty()"];
n7 [label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object)", span="1674-1674", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)"];
n3 [label="left.Merge(right)", span="63-63", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeObjectProperty()"];
n4 [label="string json = left.ToString()", span="65-65", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeObjectProperty()"];
n8 [label="Entry Newtonsoft.Json.Linq.JContainer.Merge(object)", span="650-650", cluster="Newtonsoft.Json.Linq.JContainer.Merge(object)"];
n5 [label="StringAssert.AreEqual(@''{\r\n  ''''Property1'''': 1,\r\n  ''''Property2'''': 2\r\n}'', json)", span="67-70", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeObjectProperty()"];
n9 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410", cluster="Newtonsoft.Json.Linq.JToken.ToString()"];
n6 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeObjectProperty()", span="52-52", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeObjectProperty()"];
n10 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="327-327", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)"];
n11 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()", span="74-74", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()"];
n12 [label="var left = (JObject)JToken.FromObject(new\r\n            {\r\n                Property1 = new { SubProperty1 = 1 }\r\n            })", span="76-79", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()"];
n13 [label="var right = (JObject)JToken.FromObject(new\r\n            {\r\n                Property1 = new { SubProperty2 = 2 }\r\n            })", span="80-83", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()"];
n14 [label="left.Merge(right)", span="85-85", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()"];
n15 [label="string json = left.ToString()", span="87-87", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()"];
n16 [label="StringAssert.AreEqual(@''{\r\n  ''''Property1'''': {\r\n    ''''SubProperty1'''': 1,\r\n    ''''SubProperty2'''': 2\r\n  }\r\n}'', json)", span="89-94", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()"];
n17 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()", span="74-74", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()"];
n18 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchedTypesRoot()", span="98-98", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchedTypesRoot()"];
n19 [label="var left = (JObject)JToken.FromObject(new\r\n            {\r\n                Property1 = new { SubProperty1 = 1 }\r\n            })", span="100-103", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchedTypesRoot()"];
n20 [label="var right = (JArray)JToken.FromObject(new object[]\r\n                {\r\n                    new { Property1 = 1 },\r\n                    new { Property1 = 1 }\r\n                })", span="104-108", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchedTypesRoot()"];
n21 [label="left.Merge(right)", span="110-110", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchedTypesRoot()"];
n22 [label="string json = left.ToString()", span="112-112", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchedTypesRoot()"];
n23 [label="StringAssert.AreEqual(@''{\r\n  ''''Property1'''': {\r\n    ''''SubProperty1'''': 1\r\n  }\r\n}'', json)", span="114-118", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchedTypesRoot()"];
n24 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchedTypesRoot()", span="98-98", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchedTypesRoot()"];
n25 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeMultipleObjects()", span="122-122", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMultipleObjects()"];
n26 [label="var left = (JObject)JToken.FromObject(new\r\n            {\r\n                Property1 = new { SubProperty1 = 1 }\r\n            })", span="124-127", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMultipleObjects()"];
n27 [label="var right = (JObject)JToken.FromObject(new\r\n            {\r\n                Property1 = new { SubProperty2 = 2 },\r\n                Property2 = 2\r\n            })", span="128-132", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMultipleObjects()"];
n28 [label="left.Merge(right)", span="134-134", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMultipleObjects()"];
n29 [label="string json = left.ToString()", span="136-136", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMultipleObjects()"];
n30 [label="StringAssert.AreEqual(@''{\r\n  ''''Property1'''': {\r\n    ''''SubProperty1'''': 1,\r\n    ''''SubProperty2'''': 2\r\n  },\r\n  ''''Property2'''': 2\r\n}'', json)", span="138-144", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMultipleObjects()"];
n31 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeMultipleObjects()", span="122-122", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMultipleObjects()"];
n32 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()", span="148-148", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()"];
n33 [label="var left = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    new\r\n                    {\r\n                        Property1 = new\r\n                        {\r\n                            Property1 = 1,\r\n                            Property2 = 2,\r\n                            Property3 = 3,\r\n                            Property4 = 4,\r\n                            Property5 = (object)null\r\n                        }\r\n                    },\r\n                    new { },\r\n                    3,\r\n                    null,\r\n                    5,\r\n                    null\r\n                }\r\n            })", span="150-171", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()"];
n34 [label="var right = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    new\r\n                    {\r\n                        Property1 = new\r\n                        {\r\n                            Property1 = (object)null,\r\n                            Property2 = 3,\r\n                            Property3 = new\r\n                            {\r\n\r\n                            },\r\n                            Property5 = (object)null\r\n                        }\r\n                    },\r\n                    null,\r\n                    null,\r\n                    4,\r\n                    5.1,\r\n                    null,\r\n                    new\r\n                    {\r\n                        Property1 = 1\r\n                    }\r\n                }\r\n            })", span="172-199", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()"];
n35 [label="left.Merge(right, new JsonMergeSettings\r\n            {\r\n                MergeArrayHandling = MergeArrayHandling.Merge\r\n            })", span="201-204", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()"];
n36 [label="string json = left.ToString()", span="206-206", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()"];
n39 [label="Entry Newtonsoft.Json.Linq.JsonMergeSettings.JsonMergeSettings()", span="7-7", cluster="Newtonsoft.Json.Linq.JsonMergeSettings.JsonMergeSettings()"];
n40 [label="Entry Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="660-660", cluster="Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)"];
n37 [label="StringAssert.AreEqual(@''{\r\n  ''''Array1'''': [\r\n    {\r\n      ''''Property1'''': {\r\n        ''''Property1'''': 1,\r\n        ''''Property2'''': 3,\r\n        ''''Property3'''': {},\r\n        ''''Property4'''': 4,\r\n        ''''Property5'''': null\r\n      }\r\n    },\r\n    {},\r\n    3,\r\n    4,\r\n    5.1,\r\n    null,\r\n    {\r\n      ''''Property1'''': 1\r\n    }\r\n  ]\r\n}'', json)", span="208-228", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()"];
n38 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()", span="148-148", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()"];
n41 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()", span="232-232", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()"];
n42 [label="var left = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    new { Property1 = 1 },\r\n                    new { Property1 = 1 }\r\n                }\r\n            })", span="234-241", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()"];
n43 [label="var right = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    new { Property1 = 1 },\r\n                    new { Property2 = 2 },\r\n                    new { Property3 = 3 }\r\n                }\r\n            })", span="242-250", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()"];
n44 [label="left.Merge(right, new JsonMergeSettings\r\n            {\r\n                MergeArrayHandling = MergeArrayHandling.Concat\r\n            })", span="252-255", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()"];
n45 [label="string json = left.ToString()", span="257-257", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()"];
n46 [label="StringAssert.AreEqual(@''{\r\n  ''''Array1'''': [\r\n    {\r\n      ''''Property1'''': 1\r\n    },\r\n    {\r\n      ''''Property1'''': 1\r\n    },\r\n    {\r\n      ''''Property1'''': 1\r\n    },\r\n    {\r\n      ''''Property2'''': 2\r\n    },\r\n    {\r\n      ''''Property3'''': 3\r\n    }\r\n  ]\r\n}'', json)", span="259-277", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()"];
n47 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()", span="232-232", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()"];
n48 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()", span="281-281", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()"];
n49 [label="var left = (JArray)JToken.FromObject(new object[]\r\n                {\r\n                    true,\r\n                    null,\r\n                    new { Property1 = 1 },\r\n                    new object[] { 1 },\r\n                    new { Property1 = 1 },\r\n                    1,\r\n                    new object[] { 1 }\r\n                })", span="283-292", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()"];
n50 [label="var right = (JArray)JToken.FromObject(new object[]\r\n                {\r\n                    1,\r\n                    5,\r\n                    new object[] { 1 },\r\n                    new { Property1 = 1 },\r\n                    true,\r\n                    new { Property1 = 1 },\r\n                    null\r\n                })", span="293-302", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()"];
n51 [label="left.Merge(right, new JsonMergeSettings\r\n            {\r\n                MergeArrayHandling = MergeArrayHandling.Merge\r\n            })", span="304-307", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()"];
n52 [label="string json = left.ToString()", span="309-309", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()"];
n53 [label="StringAssert.AreEqual(@''[\r\n  1,\r\n  5,\r\n  {\r\n    ''''Property1'''': 1\r\n  },\r\n  [\r\n    1\r\n  ],\r\n  {\r\n    ''''Property1'''': 1\r\n  },\r\n  {\r\n    ''''Property1'''': 1\r\n  },\r\n  [\r\n    1\r\n  ]\r\n]'', json)", span="311-329", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()"];
n54 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()", span="281-281", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()"];
n55 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()", span="333-333", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()"];
n56 [label="var left = (JObject)JToken.FromObject(new\r\n            {\r\n                Property1 = new object[]\r\n                {\r\n                    1\r\n                },\r\n                Property2 = new object[]\r\n                {\r\n                    1\r\n                },\r\n                Property3 = true,\r\n                Property4 = true\r\n            })", span="335-347", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()"];
n57 [label="var right = (JObject)JToken.FromObject(new\r\n            {\r\n                Property1 = new { Nested = true },\r\n                Property2 = true,\r\n                Property3 = new object[]\r\n                {\r\n                    1\r\n                },\r\n                Property4 = (object)null\r\n            })", span="348-357", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()"];
n58 [label="left.Merge(right)", span="359-359", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()"];
n59 [label="string json = left.ToString()", span="361-361", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()"];
n60 [label="StringAssert.AreEqual(@''{\r\n  ''''Property1'''': {\r\n    ''''Nested'''': true\r\n  },\r\n  ''''Property2'''': true,\r\n  ''''Property3'''': [\r\n    1\r\n  ],\r\n  ''''Property4'''': true\r\n}'', json)", span="363-372", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()"];
n61 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()", span="333-333", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()"];
n62 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()", span="376-376", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()"];
n63 [label="var left = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    1,\r\n                    2,\r\n                    3\r\n                }\r\n            })", span="378-386", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()"];
n64 [label="var right = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    4,\r\n                    5\r\n                }\r\n            })", span="387-394", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()"];
n65 [label="left.Merge(right, new JsonMergeSettings\r\n            {\r\n                MergeArrayHandling = MergeArrayHandling.Replace\r\n            })", span="396-399", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()"];
n66 [label="string json = left.ToString()", span="401-401", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()"];
n67 [label="StringAssert.AreEqual(@''{\r\n  ''''Array1'''': [\r\n    4,\r\n    5\r\n  ]\r\n}'', json)", span="403-408", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()"];
n68 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()", span="376-376", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()"];
n69 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()", span="412-412", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()"];
n70 [label="var left = (JArray)JToken.FromObject(new object[]\r\n            {\r\n                1,\r\n                2,\r\n                3\r\n            })", span="414-419", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()"];
n71 [label="var right = (JArray)JToken.FromObject(new object[]\r\n            {\r\n                4,\r\n                5\r\n            })", span="420-424", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()"];
n72 [label="left.Merge(right, new JsonMergeSettings\r\n            {\r\n                MergeArrayHandling = MergeArrayHandling.Replace\r\n            })", span="426-429", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()"];
n73 [label="string json = left.ToString()", span="431-431", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()"];
n74 [label="StringAssert.AreEqual(@''[\r\n  4,\r\n  5\r\n]'', json)", span="433-436", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()"];
n75 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()", span="412-412", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()"];
n76 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()", span="440-440", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()"];
n77 [label="var left = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    new { Property1 = 1 },\r\n                    new { Property1 = 1 }\r\n                }\r\n            })", span="442-449", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()"];
n78 [label="var right = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    new { Property1 = 1 },\r\n                    new { Property2 = 2 },\r\n                    new { Property3 = 3 }\r\n                }\r\n            })", span="450-458", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()"];
n79 [label="left.Merge(right, new JsonMergeSettings\r\n            {\r\n                MergeArrayHandling = MergeArrayHandling.Union\r\n            })", span="460-463", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()"];
n80 [label="string json = left.ToString()", span="465-465", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()"];
n81 [label="StringAssert.AreEqual(@''{\r\n  ''''Array1'''': [\r\n    {\r\n      ''''Property1'''': 1\r\n    },\r\n    {\r\n      ''''Property1'''': 1\r\n    },\r\n    {\r\n      ''''Property2'''': 2\r\n    },\r\n    {\r\n      ''''Property3'''': 3\r\n    }\r\n  ]\r\n}'', json)", span="467-482", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()"];
n82 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()", span="440-440", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()"];
n83 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", span="486-486", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()"];
n84 [label="JProperty p1 = new JProperty(''p1'', 1)", span="488-488", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()"];
n85 [label="JProperty p2 = new JProperty(''p2'', 2)", span="489-489", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()"];
n95 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)"];
n86 [label="p1.Merge(p2)", span="491-491", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()"];
n87 [label="Assert.AreEqual(2, (int)p1.Value)", span="492-492", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()"];
n89 [label="p1.Merge(p3)", span="496-496", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()"];
n90 [label="Assert.AreEqual(2, (int)p1.Value)", span="497-497", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()"];
n92 [label="p1.Merge(p4)", span="501-501", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()"];
n93 [label="Assert.AreEqual(2, (int)p1.Value)", span="502-502", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()"];
n88 [label="JProperty p3 = new JProperty(''p3'')", span="494-494", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()"];
n96 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual"];
n97 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="270-270", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)"];
n91 [label="JProperty p4 = new JProperty(''p4'', null)", span="499-499", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()"];
n98 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="283-283", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])"];
n94 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", span="486-486", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()"];
n99 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", span="506-506", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()"];
n100 [label="JConstructor c1 = new JConstructor(''c1'', new[] { 1, 2 })", span="508-508", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()"];
n101 [label="JConstructor c2 = new JConstructor(''c2'', new[] { 3, 4 })", span="509-509", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()"];
n113 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)", span="112-112", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)"];
n102 [label="c1.Merge(c2)", span="511-511", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()"];
n103 [label="Assert.AreEqual(''c2'', c1.Name)", span="512-512", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()"];
n104 [label="CollectionAssert.AreEquivalent(new[] { 1, 2, 3, 4 }, c1.Select(i => (int)i))", span="513-513", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()"];
n106 [label="c1.Merge(c3)", span="516-516", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()"];
n107 [label="Assert.AreEqual(''c2'', c1.Name)", span="517-517", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()"];
n109 [label="c1.Merge(c4, new JsonMergeSettings\r\n            {\r\n                MergeArrayHandling = MergeArrayHandling.Replace\r\n            })", span="520-523", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()"];
n110 [label="Assert.AreEqual(''c4'', c1.Name)", span="524-524", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()"];
n111 [label="CollectionAssert.AreEquivalent(new[] { 5, 6 }, c1.Select(i => (int)i))", span="525-525", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()"];
n105 [label="JConstructor c3 = new JConstructor()", span="515-515", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()"];
n114 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n115 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent"];
n117 [label="Entry lambda expression", span="513-513", cluster="lambda expression"];
n116 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor()", span="83-83", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor()"];
n108 [label="JConstructor c4 = new JConstructor(''c4'', new[] { 5, 6 })", span="519-519", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()"];
n112 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", span="506-506", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()"];
n120 [label="Entry lambda expression", span="525-525", cluster="lambda expression"];
n118 [label="(int)i", span="513-513", cluster="lambda expression"];
n119 [label="Exit lambda expression", span="513-513", cluster="lambda expression"];
n121 [label="(int)i", span="525-525", cluster="lambda expression"];
n122 [label="Exit lambda expression", span="525-525", cluster="lambda expression"];
n123 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", span="529-529", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n124 [label="JConstructor c = new JConstructor()", span="531-531", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n125 [label="c.Merge(new JConstructor())", span="532-532", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n126 [label="Assert.AreEqual(null, c.Name)", span="533-533", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n127 [label="Assert.AreEqual(0, c.Count)", span="534-534", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n128 [label="JObject o = new JObject()", span="536-536", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n129 [label="o.Merge(new JObject())", span="537-537", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n139 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()"];
n130 [label="Assert.AreEqual(0, o.Count)", span="538-538", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n131 [label="JArray a = new JArray()", span="540-540", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n132 [label="a.Merge(new JArray())", span="541-541", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n140 [label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65", cluster="Newtonsoft.Json.Linq.JArray.JArray()"];
n133 [label="Assert.AreEqual(0, a.Count)", span="542-542", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n134 [label="JProperty p = new JProperty(''name1'')", span="544-544", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n135 [label="p.Merge(new JProperty(''name2''))", span="545-545", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n136 [label="Assert.AreEqual(''name1'', p.Name)", span="546-546", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n137 [label="Assert.AreEqual(0, p.Count)", span="547-547", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n138 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", span="529-529", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()"];
n141 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", span="551-551", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
n142 [label="JConstructor c = new JConstructor()", span="553-553", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
n143 [label="c.Merge(null)", span="554-554", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
n144 [label="Assert.AreEqual(null, c.Name)", span="555-555", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
n145 [label="Assert.AreEqual(0, c.Count)", span="556-556", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
n146 [label="JObject o = new JObject()", span="558-558", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
n147 [label="o.Merge(null)", span="559-559", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
n148 [label="Assert.AreEqual(0, o.Count)", span="560-560", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
n149 [label="JArray a = new JArray()", span="562-562", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
n150 [label="a.Merge(null)", span="563-563", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
n151 [label="Assert.AreEqual(0, a.Count)", span="564-564", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
n152 [label="JProperty p = new JProperty(''name1'')", span="566-566", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
n153 [label="p.Merge(null)", span="567-567", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
n154 [label="Assert.AreEqual(''name1'', p.Name)", span="568-568", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
n155 [label="Assert.AreEqual(0, p.Count)", span="569-569", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
n156 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", span="551-551", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()"];
d3 [label="JToken v = GetTokenIndex(t, errorWhenNoMatch, Index.Value)", span="16-16", cluster="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", color=green, community=0];
d16 [label="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter", span=""];
d0 [label="Entry Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", span="10-10", cluster="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)"];
d1 [label=current, span="12-12", cluster="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)"];
d2 [label="Index != null", span="14-14", cluster="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)"];
d4 [label="v != null", span="18-18", cluster="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)"];
d12 [label="Entry Newtonsoft.Json.Linq.JsonPath.PathFilter.GetTokenIndex(Newtonsoft.Json.Linq.JToken, bool, int)", span="10-10", cluster="Newtonsoft.Json.Linq.JsonPath.PathFilter.GetTokenIndex(Newtonsoft.Json.Linq.JToken, bool, int)"];
d5 [label="yield return v;", span="20-20", cluster="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)"];
d11 [label="Exit Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", span="10-10", cluster="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)"];
d8 [label="yield return v;", span="29-29", cluster="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)"];
d9 [label=errorWhenNoMatch, span="34-34", cluster="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)"];
d7 [label=t, span="27-27", cluster="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)"];
d6 [label="t is JArray || t is JConstructor", span="25-25", cluster="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)"];
d10 [label="throw new JsonException(''Index * not valid on {0}.''.FormatWith(CultureInfo.InvariantCulture, t.GetType().Name));", span="36-36", cluster="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)"];
d13 [label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54", cluster="Newtonsoft.Json.JsonException.JsonException(string)"];
d14 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
d15 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)"];
m0_31 [label="Entry Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.IsValid(int, int, bool)", span="77-77", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.IsValid(int, int, bool)", file="ArraySliceFilter.cs"];
m0_36 [label=positiveStep, span="79-79", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.IsValid(int, int, bool)", file="ArraySliceFilter.cs"];
m0_37 [label="return (index < stopIndex);", span="81-81", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.IsValid(int, int, bool)", file="ArraySliceFilter.cs"];
m0_38 [label="return (index > stopIndex);", span="84-84", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.IsValid(int, int, bool)", file="ArraySliceFilter.cs"];
m0_39 [label="Exit Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.IsValid(int, int, bool)", span="77-77", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.IsValid(int, int, bool)", file="ArraySliceFilter.cs"];
m0_30 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="ArraySliceFilter.cs"];
m0_32 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="ArraySliceFilter.cs"];
m0_29 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="ArraySliceFilter.cs"];
m0_0 [label="Entry Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", span="13-13", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_1 [label="Step == 0", span="15-15", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_21 [label="yield return a[i];", span="54-54", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_3 [label=current, span="20-20", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_23 [label=errorWhenNoMatch, span="59-59", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_25 [label=errorWhenNoMatch, span="69-69", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_2 [label="throw new JsonException(''Step cannot be zero.'');", span="17-17", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_4 [label="JArray a = t as JArray", span="22-22", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_26 [label="throw new JsonException(''Array slice is not valid on {0}.''.FormatWith(CultureInfo.InvariantCulture, t.GetType().Name));", span="71-71", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_5 [label="a != null", span="23-23", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_7 [label="int startIndex = Start ?? ((stepCount > 0) ? 0 : a.Count - 1)", span="27-27", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_8 [label="int stopIndex = End ?? ((stepCount > 0) ? a.Count : -1)", span="28-28", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_10 [label="startIndex = a.Count + startIndex", span="33-33", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_12 [label="stopIndex = a.Count + stopIndex", span="39-39", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_14 [label="startIndex = Math.Min(startIndex, (stepCount > 0) ? a.Count : a.Count - 1)", span="44-44", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_16 [label="stopIndex = Math.Min(stopIndex, a.Count)", span="46-46", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_6 [label="int stepCount = Step ?? 1", span="26-26", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_13 [label="startIndex = Math.Max(startIndex, (stepCount > 0) ? 0 : int.MinValue)", span="43-43", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_17 [label="bool positiveStep = (stepCount > 0)", span="48-48", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_22 [label="i += stepCount", span="52-52", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_9 [label="Start < 0", span="31-31", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_15 [label="stopIndex = Math.Max(stopIndex, -1)", span="45-45", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_11 [label="End < 0", span="37-37", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_18 [label="IsValid(startIndex, stopIndex, positiveStep)", span="50-50", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_19 [label="int i = startIndex", span="52-52", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_20 [label="IsValid(i, stopIndex, positiveStep)", span="52-52", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_24 [label="throw new JsonException(''Array slice of {0} to {1} returned no results.''.FormatWith(CultureInfo.InvariantCulture,\r\n                                Start != null ? Start.Value.ToString(CultureInfo.InvariantCulture) : ''*'',\r\n                                End != null ? End.Value.ToString(CultureInfo.InvariantCulture) : ''*''));", span="61-63", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", color=red, community=0, file="ArraySliceFilter.cs"];
m0_27 [label="Exit Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", span="13-13", cluster="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter.ExecuteFilter(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>, bool)", file="ArraySliceFilter.cs"];
m0_33 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="ArraySliceFilter.cs"];
m0_28 [label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54", cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="ArraySliceFilter.cs"];
m0_35 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="ArraySliceFilter.cs"];
m0_40 [label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter", span="", file="ArraySliceFilter.cs"];
m1_96 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="272-272", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_182 [label="size += CalculateSize(value.Options)", span="320-320", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_50 [label="BsonValue value = (BsonValue)t", span="127-127", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_233 [label="return CreatePrimitiveContract(t);", span="511-511", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_235 [label="return CreateObjectContract(t);", span="514-514", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_237 [label="return CreateArrayContract(t);", span="517-517", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_239 [label="return CreateLinqContract(t);", span="520-520", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_241 [label="return CreateDictionaryContract(t);", span="523-523", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_243 [label="return CreateArrayContract(t);", span="526-526", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_245 [label="return CreateStringContract(t);", span="529-529", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_247 [label="return CreateISerializableContract(t);", span="533-533", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_249 [label="return CreateDynamicContract(t);", span="538-538", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_250 [label="return CreateObjectContract(t);", span="541-541", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_231 [label="Type t = ReflectionUtils.EnsureNotNullableType(objectType)", span="508-508", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_232 [label="JsonConvert.IsJsonPrimitiveType(t)", span="510-510", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_234 [label="JsonTypeReflector.GetJsonObjectAttribute(t) != null", span="513-513", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_236 [label="JsonTypeReflector.GetJsonArrayAttribute(t) != null", span="516-516", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_238 [label="t == typeof(JToken) || t.IsSubclassOf(typeof(JToken))", span="519-519", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_240 [label="CollectionUtils.IsDictionaryType(t)", span="522-522", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_242 [label="typeof(IEnumerable).IsAssignableFrom(t)", span="525-525", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_244 [label="CanConvertToString(t)", span="528-528", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_246 [label="typeof(ISerializable).IsAssignableFrom(t)", span="532-532", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_248 [label="typeof(IDynamicMetaObjectProvider).IsAssignableFrom(t)", span="537-537", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_251 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="506-506", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_217 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="476-476", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_219 [label="InitializeContract(contract)", span="479-479", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_220 [label="contract.PropertyNameResolver = ResolvePropertyName", span="481-481", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_221 [label="contract.Properties.AddRange(CreateProperties(objectType, MemberSerialization.OptOut))", span="482-482", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_218 [label="JsonDynamicContract contract = new JsonDynamicContract(objectType)", span="478-478", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_222 [label="return contract;", span="484-484", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_223 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="476-476", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_121 [label="throw new Exception(''Multiple constructors with the JsonConstructorAttribute.'');", span="292-292", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="BsonBinaryWriter.cs"];
m1_122 [label="markedConstructors.Count == 1", span="293-293", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="BsonBinaryWriter.cs"];
m1_123 [label="return markedConstructors[0];", span="294-294", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="BsonBinaryWriter.cs"];
m1_7 [label="Entry System.IO.BinaryWriter.Flush()", span="0-0", cluster="System.IO.BinaryWriter.Flush()", file="BsonBinaryWriter.cs"];
m1_365 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="572-572", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="BsonBinaryWriter.cs"];
m1_375 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])", file="BsonBinaryWriter.cs"];
m1_74 [label="BsonValue value = (BsonValue)t", span="177-177", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_170 [label="return 8;", span="303-303", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_76 [label="_writer.Write(data)", span="180-180", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_111 [label="_largeByteBuffer = new byte[256]", span="214-214", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="BsonBinaryWriter.cs"];
m1_18 [label="t.Type", span="71-71", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_19 [label="BsonType.Object", span="73-73", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_20 [label="BsonObject value = (BsonObject)t", span="75-75", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_21 [label="_writer.Write(value.CalculatedSize)", span="76-76", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_112 [label="byteCount <= 256", span="216-216", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="BsonBinaryWriter.cs"];
m1_115 [label="byte[] bytes = Encoding.GetBytes(s)", span="223-223", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="BsonBinaryWriter.cs"];
m1_130 [label="BsonObject value = (BsonObject)t", span="249-249", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_132 [label=value, span="252-252", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_133 [label="int size = 1", span="254-254", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_131 [label="int bases = 4", span="251-251", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_134 [label="size += CalculateSize(p.Name)", span="255-255", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_210 [label="Entry Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", span="49-49", cluster="Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_187 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="413-413", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_8 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.Close()", span="54-54", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Close()", file="BsonBinaryWriter.cs"];
m1_9 [label="_writer.Close()", span="57-57", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Close()", file="BsonBinaryWriter.cs"];
m1_10 [label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.Close()", span="54-54", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Close()", file="BsonBinaryWriter.cs"];
m1_108 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", span="208-208", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="BsonBinaryWriter.cs"];
m1_149 [label="size += 1", span="277-277", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_152 [label="BsonType.Integer", span="282-282", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_145 [label="size += 1", span="272-272", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_148 [label="index++", span="275-275", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_147 [label="size += CalculateSize(c)", span="274-274", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_150 [label="value.CalculatedSize = size", span="278-278", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_151 [label="return value.CalculatedSize;", span="280-280", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_153 [label="return 4;", span="283-283", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_143 [label="ulong index = 0", span="269-269", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_146 [label="size += CalculateSize(MathUtils.IntLength(index))", span="273-273", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_154 [label="BsonType.Long", span="284-284", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_158 [label="BsonType.String", span="288-288", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_159 [label="BsonString value = (BsonString)t", span="290-290", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_160 [label="string s = (string)value.Value", span="291-291", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_161 [label="value.ByteCount = (s != null) ? Encoding.GetByteCount(s) : 0", span="292-292", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_162 [label="value.CalculatedSize = CalculateSizeWithLength(value.ByteCount, value.IncludeLength)", span="293-293", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_163 [label="return value.CalculatedSize;", span="295-295", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_164 [label="BsonType.Boolean", span="297-297", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_165 [label="return 1;", span="298-298", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_166 [label="BsonType.Null", span="299-299", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_167 [label="BsonType.Undefined", span="300-300", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_144 [label=value, span="270-270", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_155 [label="return 8;", span="285-285", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_157 [label="return 8;", span="287-287", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_156 [label="BsonType.Number", span="286-286", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_168 [label="return 0;", span="301-301", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_87 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_124 [label="return null;", span="296-296", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="BsonBinaryWriter.cs"];
m1_125 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="287-287", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="BsonBinaryWriter.cs"];
m1_126 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="BsonBinaryWriter.cs"];
m1_127 [label="Entry lambda expression", span="289-289", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_16 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", span="243-243", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.CalculateSize(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_128 [label="c.IsDefined(typeof(JsonConstructorAttribute), true)", span="289-289", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_141 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="319-319", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="BsonBinaryWriter.cs"];
m1_172 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="139-139", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="BsonBinaryWriter.cs"];
m1_179 [label="contract.PropertyNameResolver = ResolvePropertyName", span="403-403", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_185 [label="InitializeContract(contract)", span="416-416", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_129 [label="Exit lambda expression", span="289-289", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_140 [label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType);", span="321-321", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="BsonBinaryWriter.cs"];
m1_169 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", span="79-79", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", file="BsonBinaryWriter.cs"];
m1_171 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="129-129", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="BsonBinaryWriter.cs"];
m1_176 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="398-398", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_178 [label="InitializeContract(contract)", span="401-401", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_138 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", span="133-133", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="BsonBinaryWriter.cs"];
m1_136 [label="return JsonTypeReflector.GetJsonConverter(objectType, objectType);", span="316-316", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="BsonBinaryWriter.cs"];
m1_137 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="314-314", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="BsonBinaryWriter.cs"];
m1_135 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="314-314", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="BsonBinaryWriter.cs"];
m1_139 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="319-319", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="BsonBinaryWriter.cs"];
m1_142 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="60-60", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="BsonBinaryWriter.cs"];
m1_173 [label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="BsonBinaryWriter.cs"];
m1_174 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="BsonBinaryWriter.cs"];
m1_175 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="573-573", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_177 [label="JsonDictionaryContract contract = new JsonDictionaryContract(objectType)", span="400-400", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_180 [label="return contract;", span="405-405", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_181 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="398-398", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_183 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="413-413", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_184 [label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="415-415", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_186 [label="return contract;", span="418-418", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_315 [label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="46-46", cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_73 [label="BsonType.Oid", span="175-175", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_254 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", span="84-84", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", file="BsonBinaryWriter.cs"];
m1_72 [label="_writer.Write(data)", span="172-172", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_362 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="32-32", cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", file="BsonBinaryWriter.cs"];
m1_98 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", span="164-164", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", file="BsonBinaryWriter.cs"];
m1_100 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="BsonBinaryWriter.cs"];
m1_102 [label="contract.OverrideConstructor = GetAttributeConstructor(objectType)", span="280-280", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_104 [label="_writer.Write(calculatedlengthPrefix.Value)", span="200-200", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="BsonBinaryWriter.cs", color=red, community=0];
m1_97 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, bool)", span="176-176", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, bool)", file="BsonBinaryWriter.cs"];
m1_99 [label="Entry System.IO.BinaryWriter.Write(byte[])", span="0-0", cluster="System.IO.BinaryWriter.Write(byte[])", file="BsonBinaryWriter.cs"];
m1_101 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="BsonBinaryWriter.cs"];
m1_105 [label="WriteUtf8Bytes(s, byteCount)", span="203-203", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="BsonBinaryWriter.cs"];
m1_103 [label="calculatedlengthPrefix != null", span="198-198", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="BsonBinaryWriter.cs"];
m1_106 [label="_writer.Write((byte)0)", span="205-205", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteString(string, int, int?)", file="BsonBinaryWriter.cs"];
m1_90 [label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="BsonBinaryWriter.cs"];
m1_216 [label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27", cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="BsonBinaryWriter.cs"];
m1_289 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="BsonBinaryWriter.cs"];
m1_4 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.Flush()", span="49-49", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Flush()", file="BsonBinaryWriter.cs"];
m1_5 [label="_writer.Flush()", span="51-51", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Flush()", file="BsonBinaryWriter.cs"];
m1_6 [label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.Flush()", span="49-49", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.Flush()", file="BsonBinaryWriter.cs"];
m1_85 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_107 [label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="65-65", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_95 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="BsonBinaryWriter.cs"];
m1_200 [label="Entry Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", span="16-16", cluster="Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_308 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="65-65", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="BsonBinaryWriter.cs"];
m1_253 [label="Entry Newtonsoft.Json.JsonConvert.IsJsonPrimitiveType(System.Type)", span="484-484", cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitiveType(System.Type)", file="BsonBinaryWriter.cs"];
m1_195 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="439-439", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_197 [label="InitializeContract(contract)", span="442-442", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_196 [label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="441-441", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_198 [label="return contract;", span="444-444", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_199 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="439-439", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_395 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="BsonBinaryWriter.cs"];
m1_201 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="453-453", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_203 [label="InitializeContract(contract)", span="456-456", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_202 [label="JsonISerializableContract contract = new JsonISerializableContract(objectType)", span="455-455", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_204 [label="ConstructorInfo constructorInfo = objectType.GetConstructor(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance, null, new[] { typeof(SerializationInfo), typeof(StreamingContext) }, null)", span="458-458", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_207 [label="contract.ISerializableCreator = (args => methodCall(null, args))", span="463-463", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_208 [label="return contract;", span="466-466", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_205 [label="constructorInfo != null", span="459-459", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_206 [label="MethodCall<object, object> methodCall = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(constructorInfo)", span="461-461", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_209 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="453-453", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_47 [label="BsonString value = (BsonString)t", span="121-121", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_53 [label="BsonType.Undefined", span="132-132", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_55 [label="BsonValue value = (BsonValue)t", span="136-136", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_59 [label="DateTimeKindHandling == DateTimeKind.Utc", span="143-143", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_68 [label="BsonBinary value = (BsonBinary)t", span="167-167", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_54 [label="BsonType.Date", span="134-134", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_56 [label="long ticks = 0", span="138-138", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_67 [label="BsonType.Binary", span="165-165", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_60 [label="dateTime = dateTime.ToUniversalTime()", span="145-145", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_58 [label="DateTime dateTime = (DateTime)value.Value", span="142-142", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_57 [label="value.Value is DateTime", span="140-140", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_69 [label="byte[] data = (byte[])value.Value", span="169-169", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_64 [label="DateTimeOffset dateTimeOffset = (DateTimeOffset)value.Value", span="157-157", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_66 [label="_writer.Write(ticks)", span="162-162", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_61 [label="DateTimeKindHandling == DateTimeKind.Local", span="147-147", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_62 [label="dateTime = dateTime.ToLocalTime()", span="149-149", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_63 [label="ticks = DateTimeUtils.ConvertDateTimeToJavaScriptTicks(dateTime, false)", span="152-152", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_65 [label="ticks = DateTimeUtils.ConvertDateTimeToJavaScriptTicks(dateTimeOffset.UtcDateTime, dateTimeOffset.Offset)", span="158-158", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_70 [label="_writer.Write(data.Length)", span="170-170", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_230 [label="Entry Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", span="41-41", cluster="Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_92 [label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="BsonBinaryWriter.cs"];
m1_366 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", span="605-605", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool)", file="BsonBinaryWriter.cs"];
m1_269 [label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="BsonBinaryWriter.cs"];
m1_17 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", span="69-69", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteTokenInternal(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_28 [label=_sharedCache, span="163-163", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="BsonBinaryWriter.cs"];
m1_38 [label="cache == null || !cache.TryGetValue(key, out contract)", span="182-182", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_41 [label="cache = GetCache()", span="189-189", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_44 [label="UpdateCache(updatedCache)", span="196-196", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_78 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BsonBinaryWriter.cs"];
m1_81 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_27 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", span="161-161", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="BsonBinaryWriter.cs"];
m1_37 [label="Dictionary<ResolverContractKey, JsonContract> cache = GetCache()", span="181-181", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_40 [label=_typeContractCacheLock, span="187-187", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_43 [label="updatedCache[key] = contract", span="194-194", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_46 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="174-174", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_49 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BsonBinaryWriter.cs"];
m1_52 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BsonBinaryWriter.cs"];
m1_77 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="BsonBinaryWriter.cs"];
m1_22 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="153-153", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="BsonBinaryWriter.cs"];
m1_23 [label=_sharedCache, span="155-155", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="BsonBinaryWriter.cs"];
m1_26 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="153-153", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="BsonBinaryWriter.cs"];
m1_24 [label="return _sharedContractCache;", span="156-156", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="BsonBinaryWriter.cs"];
m1_25 [label="return _instanceContractCache;", span="158-158", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="BsonBinaryWriter.cs"];
m1_29 [label="_sharedContractCache = cache", span="164-164", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="BsonBinaryWriter.cs"];
m1_31 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", span="161-161", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="BsonBinaryWriter.cs"];
m1_30 [label="_instanceContractCache = cache", span="166-166", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="BsonBinaryWriter.cs"];
m1_33 [label="type == null", span="176-176", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_35 [label="JsonContract contract", span="179-179", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_32 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="174-174", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_36 [label="ResolverContractKey key = new ResolverContractKey(GetType(), type)", span="180-180", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_34 [label="throw new ArgumentNullException(''type'');", span="177-177", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_39 [label="contract = CreateContract(type)", span="184-184", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_42 [label="Dictionary<ResolverContractKey, JsonContract> updatedCache =\r\n            (cache != null)\r\n              ? new Dictionary<ResolverContractKey, JsonContract>(cache)\r\n              : new Dictionary<ResolverContractKey, JsonContract>()", span="190-193", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_45 [label="return contract;", span="200-200", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="BsonBinaryWriter.cs", color=green, community=0];
m1_48 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="BsonBinaryWriter.cs"];
m1_51 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="BsonBinaryWriter.cs"];
m1_71 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="95-95", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="BsonBinaryWriter.cs"];
m1_75 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BsonBinaryWriter.cs"];
m1_79 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="239-239", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="BsonBinaryWriter.cs"];
m1_80 [label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="267-267", cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="BsonBinaryWriter.cs"];
m1_82 [label="!ReflectionUtils.IsIndexedProperty(m)", span="215-215", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_252 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="171-171", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="BsonBinaryWriter.cs"];
m1_118 [label="Exit lambda expression", span="279-279", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_305 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="BsonBinaryWriter.cs"];
m1_225 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="493-493", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_227 [label="InitializeContract(contract)", span="496-496", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_226 [label="JsonStringContract contract = new JsonStringContract(objectType)", span="495-495", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_228 [label="return contract;", span="498-498", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_229 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="493-493", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_255 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", span="89-89", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", file="BsonBinaryWriter.cs"];
m1_0 [label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="50-50", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="BsonBinaryWriter.cs"];
m1_1 [label="_resolverType = resolverType", span="52-52", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="BsonBinaryWriter.cs"];
m1_2 [label="_contractType = contractType", span="53-53", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="BsonBinaryWriter.cs"];
m1_3 [label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="50-50", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="BsonBinaryWriter.cs"];
m1_307 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="660-660", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_318 [label="property.ValueProvider = CreateMemberValueProvider(member)", span="664-664", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_333 [label="property.PropertyName = ResolvePropertyName(mappedName)", span="693-693", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_341 [label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="713-713", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_358 [label="property.ShouldSerialize = CreateShouldSerializeTest(member)", span="737-737", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_359 [label="SetIsSpecifiedActions(property, member)", span="739-739", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_316 [label="JsonProperty property = new JsonProperty()", span="662-662", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_317 [label="property.PropertyType = ReflectionUtils.GetMemberUnderlyingType(member)", span="663-663", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_319 [label="property.Converter = JsonTypeReflector.GetJsonConverter(member, property.PropertyType)", span="668-668", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_332 [label="mappedName = member.Name", span="691-691", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_331 [label="mappedName = dataMemberAttribute.Name", span="688-688", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_329 [label="mappedName = propertyAttribute.PropertyName", span="685-685", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_334 [label="propertyAttribute != null", span="695-695", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_340 [label="bool allowNonPublicAccess = false", span="712-712", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_342 [label="allowNonPublicAccess = true", span="714-714", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_343 [label="propertyAttribute != null", span="715-715", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_357 [label="property.IsReference = (propertyAttribute != null) ? propertyAttribute._isReference : null", span="735-735", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_360 [label="return property;", span="741-741", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_320 [label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(member.DeclaringType)", span="671-671", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_323 [label="dataMemberAttribute = JsonTypeReflector.GetAttribute<DataMemberAttribute>(member)", span="675-675", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_325 [label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(member)", span="680-680", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_326 [label="bool hasIgnoreAttribute = (JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(member) != null)", span="681-681", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_339 [label="property.Ignored = (hasIgnoreAttribute ||\r\n                      (memberSerialization == MemberSerialization.OptIn\r\n                       && propertyAttribute == null\r\n#if !PocketPC && !NET20\r\n && dataMemberAttribute == null\r\n#endif\r\n))", span="704-710", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_347 [label="property.Readable = ReflectionUtils.CanReadMemberValue(member, allowNonPublicAccess)", span="722-722", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_348 [label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess)", span="723-723", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_349 [label="property.MemberConverter = JsonTypeReflector.GetJsonConverter(member, ReflectionUtils.GetMemberUnderlyingType(member))", span="725-725", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_350 [label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(member)", span="727-727", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_335 [label="property.Required = propertyAttribute.Required", span="696-696", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_337 [label="property.Required = (dataMemberAttribute.IsRequired) ? Required.AllowNull : Required.Default", span="699-699", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_338 [label="property.Required = Required.Default", span="702-702", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_351 [label="property.DefaultValue = (defaultValueAttribute != null) ? defaultValueAttribute.Value : null", span="728-728", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_352 [label="property.NullValueHandling = (propertyAttribute != null) ? propertyAttribute._nullValueHandling : null", span="730-730", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_353 [label="property.DefaultValueHandling = (propertyAttribute != null) ? propertyAttribute._defaultValueHandling : null", span="731-731", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_354 [label="property.ReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._referenceLoopHandling : null", span="732-732", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_355 [label="property.ObjectCreationHandling = (propertyAttribute != null) ? propertyAttribute._objectCreationHandling : null", span="733-733", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_356 [label="property.TypeNameHandling = (propertyAttribute != null) ? propertyAttribute._typeNameHandling : null", span="734-734", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_330 [label="dataMemberAttribute != null && dataMemberAttribute.Name != null", span="687-687", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_324 [label="dataMemberAttribute = null", span="677-677", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_328 [label="propertyAttribute != null && propertyAttribute.PropertyName != null", span="684-684", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_336 [label="dataMemberAttribute != null", span="698-698", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_344 [label="allowNonPublicAccess = true", span="716-716", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_345 [label="dataMemberAttribute != null", span="718-718", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_321 [label="DataMemberAttribute dataMemberAttribute", span="673-673", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_322 [label="dataContractAttribute != null", span="674-674", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_327 [label="string mappedName", span="683-683", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_346 [label="allowNonPublicAccess = true", span="719-719", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_361 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="660-660", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_89 [label="Entry System.Convert.ToInt32(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt32(object, System.IFormatProvider)", file="BsonBinaryWriter.cs"];
m1_113 [label="Encoding.GetBytes(s, 0, s.Length, _largeByteBuffer, 0)", span="218-218", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="BsonBinaryWriter.cs"];
m1_306 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="45-45", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="BsonBinaryWriter.cs"];
m1_11 [label="Entry System.IO.BinaryWriter.Close()", span="0-0", cluster="System.IO.BinaryWriter.Close()", file="BsonBinaryWriter.cs"];
m1_12 [label="Entry Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", span="63-63", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_13 [label="CalculateSize(t)", span="65-65", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_14 [label="WriteTokenInternal(t)", span="66-66", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_15 [label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", span="63-63", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteToken(Newtonsoft.Json.Bson.BsonToken)", file="BsonBinaryWriter.cs"];
m1_84 [label="Entry System.IO.BinaryWriter.Write(sbyte)", span="0-0", cluster="System.IO.BinaryWriter.Write(sbyte)", file="BsonBinaryWriter.cs"];
m1_391 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="46-46", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_224 [label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", span="55-55", cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_390 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="33-33", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_94 [label="Entry System.IO.BinaryWriter.Write(bool)", span="0-0", cluster="System.IO.BinaryWriter.Write(bool)", file="BsonBinaryWriter.cs"];
m1_268 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="490-490", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="BsonBinaryWriter.cs"];
m1_288 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="606-606", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="BsonBinaryWriter.cs"];
m1_290 [label="type.IsGenericTypeDefinition || !type.ContainsGenericParameters", span="608-608", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="BsonBinaryWriter.cs"];
m1_291 [label="return type.FullName;", span="609-609", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="BsonBinaryWriter.cs"];
m1_292 [label="return string.Format(CultureInfo.InvariantCulture, ''{0}.{1}'', new object[] { type.Namespace, type.Name });", span="611-611", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="BsonBinaryWriter.cs"];
m1_293 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="606-606", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="BsonBinaryWriter.cs"];
m1_109 [label="s != null", span="210-210", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="BsonBinaryWriter.cs"];
m1_367 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="744-744", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_369 [label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, new Type[0])", span="746-746", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_371 [label="return null;", span="749-749", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_373 [label="return o => (bool)shouldSerializeCall(o);", span="754-754", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_370 [label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="748-748", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_372 [label="MethodCall<object, object> shouldSerializeCall =\r\n        JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(shouldSerializeMethod)", span="751-752", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_374 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="744-744", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_88 [label="Entry Newtonsoft.Json.Utilities.MathUtils.IntLength(ulong)", span="33-33", cluster="Newtonsoft.Json.Utilities.MathUtils.IntLength(ulong)", file="BsonBinaryWriter.cs"];
m1_91 [label="Entry System.IO.BinaryWriter.Write(long)", span="0-0", cluster="System.IO.BinaryWriter.Write(long)", file="BsonBinaryWriter.cs"];
m1_114 [label="_writer.Write(_largeByteBuffer, 0, byteCount)", span="219-219", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="BsonBinaryWriter.cs"];
m1_119 [label="Entry System.IO.BinaryWriter.Write(byte[], int, int)", span="0-0", cluster="System.IO.BinaryWriter.Write(byte[], int, int)", file="BsonBinaryWriter.cs"];
m1_120 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="BsonBinaryWriter.cs"];
m1_212 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="59-59", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="BsonBinaryWriter.cs"];
m1_364 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="779-779", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="BsonBinaryWriter.cs"];
m1_396 [label="return propertyName;", span="781-781", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="BsonBinaryWriter.cs"];
m1_397 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="779-779", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="BsonBinaryWriter.cs"];
m1_258 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="BsonBinaryWriter.cs"];
m1_211 [label="Entry System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", span="0-0", cluster="System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", file="BsonBinaryWriter.cs"];
m1_376 [label="Entry lambda expression", span="754-754", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_83 [label="Entry System.IO.BinaryWriter.Write(int)", span="0-0", cluster="System.IO.BinaryWriter.Write(int)", file="BsonBinaryWriter.cs"];
m1_117 [label="Exit Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", span="208-208", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="BsonBinaryWriter.cs"];
m1_116 [label="_writer.Write(bytes)", span="224-224", cluster="Newtonsoft.Json.Bson.BsonBinaryWriter.WriteUtf8Bytes(string, int)", file="BsonBinaryWriter.cs"];
m1_86 [label="Entry System.IO.BinaryWriter.Write(byte)", span="0-0", cluster="System.IO.BinaryWriter.Write(byte)", file="BsonBinaryWriter.cs"];
m1_214 [label="methodCall(null, args)", span="463-463", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_393 [label="(bool)specifiedPropertyGet(o)", span="770-770", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_213 [label="Entry lambda expression", span="463-463", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_215 [label="Exit lambda expression", span="463-463", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_377 [label="(bool)shouldSerializeCall(o)", span="754-754", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_392 [label="Entry lambda expression", span="770-770", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_394 [label="Exit lambda expression", span="770-770", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_378 [label="Exit lambda expression", span="754-754", cluster="lambda expression", file="BsonBinaryWriter.cs"];
m1_188 [label="Newtonsoft.Json.Bson.BsonBinaryWriter", span="", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_368 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", span="757-757", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_379 [label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="759-759", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_381 [label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="761-761", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_385 [label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="770-770", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_386 [label="property.SetIsSpecified = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(specifiedMember)", span="771-771", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_382 [label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", span="763-763", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_383 [label="return;", span="765-765", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_380 [label="specifiedMember == null", span="760-760", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_384 [label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="768-768", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_387 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", span="757-757", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_389 [label="Entry System.Type.GetField(string)", span="0-0", cluster="System.Type.GetField(string)", file="BsonBinaryWriter.cs"];
m1_189 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="426-426", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_191 [label="InitializeContract(contract)", span="429-429", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_190 [label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="428-428", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_192 [label="return contract;", span="431-431", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_193 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="426-426", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_257 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="379-379", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="BsonBinaryWriter.cs"];
m1_259 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="544-544", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="BsonBinaryWriter.cs"];
m1_261 [label="converter != null\r\n#if !SILVERLIGHT\r\n && !(converter is ComponentConverter)\r\n && !(converter is ReferenceConverter)\r\n#endif\r\n && converter.GetType() != typeof(TypeConverter)", span="550-555", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="BsonBinaryWriter.cs"];
m1_260 [label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="547-547", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="BsonBinaryWriter.cs"];
m1_262 [label="converter.CanConvertTo(typeof(string))", span="557-557", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="BsonBinaryWriter.cs"];
m1_264 [label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="562-562", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="BsonBinaryWriter.cs"];
m1_263 [label="return true;", span="558-558", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="BsonBinaryWriter.cs"];
m1_265 [label="return true;", span="563-563", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="BsonBinaryWriter.cs"];
m1_266 [label="return false;", span="570-570", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="BsonBinaryWriter.cs"];
m1_267 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="544-544", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="BsonBinaryWriter.cs"];
m1_256 [label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0", cluster="System.Type.IsSubclassOf(System.Type)", file="BsonBinaryWriter.cs"];
m1_270 [label="!method.IsDefined(attributeType, false)", span="575-575", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_271 [label="return false;", span="576-576", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_272 [label="currentCallback != null", span="578-578", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_273 [label="throw new Exception(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, method, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="579-579", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_274 [label="prevAttributeType != null", span="581-581", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_275 [label="throw new Exception(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, prevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="582-582", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_276 [label="method.IsVirtual", span="584-584", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_277 [label="throw new Exception(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, method, GetClrTypeFullName(method.DeclaringType), attributeType));", span="585-585", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_278 [label="method.ReturnType != typeof(void)", span="587-587", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_279 [label="throw new Exception(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method));", span="588-588", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_280 [label="attributeType == typeof(OnErrorAttribute)", span="590-590", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_281 [label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != typeof(ErrorContext)", span="592-592", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_282 [label="throw new Exception(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext), typeof(ErrorContext)));", span="593-593", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_283 [label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="597-597", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_284 [label="throw new Exception(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="598-598", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_285 [label="prevAttributeType = attributeType", span="601-601", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_286 [label="return true;", span="603-603", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_287 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="573-573", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="BsonBinaryWriter.cs"];
m1_314 [label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="49-49", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_309 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="644-644", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_310 [label=DynamicCodeGeneration, span="647-647", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_311 [label="return new DynamicValueProvider(member);", span="648-648", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_312 [label="return new ReflectionValueProvider(member);", span="651-651", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_313 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="644-644", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_194 [label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="BsonBinaryWriter.cs"];
m1_110 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="620-620", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_363 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="461-461", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="BsonBinaryWriter.cs"];
m1_294 [label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0", cluster="string.Format(System.IFormatProvider, string, params object[])", file="BsonBinaryWriter.cs"];
m1_388 [label="Entry System.Type.GetProperty(string)", span="0-0", cluster="System.Type.GetProperty(string)", file="BsonBinaryWriter.cs"];
m1_295 [label="List<MemberInfo> members = GetSerializableMembers(type)", span="622-622", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_300 [label="JsonProperty property = CreateProperty(member, memberSerialization)", span="630-630", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_296 [label="members == null", span="623-623", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_299 [label=members, span="628-628", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_301 [label="property != null", span="632-632", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_302 [label="properties.AddProperty(property)", span="633-633", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_298 [label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="626-626", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_297 [label="throw new JsonSerializationException(''Null collection of seralizable members returned.'');", span="624-624", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_303 [label="return properties;", span="636-636", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_304 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="620-620", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="BsonBinaryWriter.cs"];
m1_93 [label="Entry System.IO.BinaryWriter.Write(double)", span="0-0", cluster="System.IO.BinaryWriter.Write(double)", file="BsonBinaryWriter.cs"];
m1_401 [label="Newtonsoft.Json.Serialization.DefaultContractResolver", span="", file="BsonBinaryWriter.cs"];
m1_398 [label="out Newtonsoft.Json.Serialization.ResolverContractKey", span="", file="BsonBinaryWriter.cs"];
m1_402 [label=methodCall, span="", file="BsonBinaryWriter.cs"];
m1_404 [label=specifiedPropertyGet, span="", file="BsonBinaryWriter.cs"];
m1_403 [label=shouldSerializeCall, span="", file="BsonBinaryWriter.cs"];
m2_10 [label="Entry Newtonsoft.Json.Converters.DataTableConverter.DataTableConverter()", span="38-38", cluster="Newtonsoft.Json.Converters.DataTableConverter.DataTableConverter()", file="DataSetConverter.cs"];
m2_43 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409", cluster="Newtonsoft.Json.JsonReader.Read()", file="DataSetConverter.cs"];
m2_32 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="DataSetConverter.cs"];
m2_39 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="DataSetConverter.cs"];
m2_36 [label="Entry Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)", span="111-111", cluster="Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)", file="DataSetConverter.cs"];
m2_37 [label="return typeof(DataSet).IsAssignableFrom(valueType);", span="113-113", cluster="Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)", file="DataSetConverter.cs"];
m2_38 [label="Exit Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)", span="111-111", cluster="Newtonsoft.Json.Converters.DataSetConverter.CanConvert(System.Type)", file="DataSetConverter.cs"];
m2_33 [label="Entry Newtonsoft.Json.Converters.DataSetConverter.CheckedRead(Newtonsoft.Json.JsonReader)", span="116-116", cluster="Newtonsoft.Json.Converters.DataSetConverter.CheckedRead(Newtonsoft.Json.JsonReader)", file="DataSetConverter.cs"];
m2_40 [label="!reader.Read()", span="118-118", cluster="Newtonsoft.Json.Converters.DataSetConverter.CheckedRead(Newtonsoft.Json.JsonReader)", color=red, community=0, file="DataSetConverter.cs"];
m2_41 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when reading DataSet.'');", span="120-120", cluster="Newtonsoft.Json.Converters.DataSetConverter.CheckedRead(Newtonsoft.Json.JsonReader)", color=red, community=0, file="DataSetConverter.cs"];
m2_42 [label="Exit Newtonsoft.Json.Converters.DataSetConverter.CheckedRead(Newtonsoft.Json.JsonReader)", span="116-116", cluster="Newtonsoft.Json.Converters.DataSetConverter.CheckedRead(Newtonsoft.Json.JsonReader)", file="DataSetConverter.cs"];
m2_13 [label="Entry Unk.WritePropertyName", span="", cluster="Unk.WritePropertyName", file="DataSetConverter.cs"];
m2_14 [label="Entry Unk.WriteJson", span="", cluster="Unk.WriteJson", file="DataSetConverter.cs"];
m2_34 [label="Entry Unk.ReadJson", span="", cluster="Unk.ReadJson", file="DataSetConverter.cs"];
m2_35 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="DataSetConverter.cs"];
m2_31 [label="Entry DataSet.cstr", span="", cluster="DataSet.cstr", file="DataSetConverter.cs"];
m2_44 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="DataSetConverter.cs"];
m2_12 [label="Entry Unk.GetResolvedPropertyName", span="", cluster="Unk.GetResolvedPropertyName", file="DataSetConverter.cs"];
m2_16 [label="Entry Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="70-70", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_17 [label="reader.TokenType == JsonToken.Null", span="72-72", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_19 [label="DataSet ds = (objectType == typeof(DataSet))\r\n                ? new DataSet()\r\n                : (DataSet)Activator.CreateInstance(objectType)", span="78-80", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_21 [label="CheckedRead(reader)", span="84-84", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="DataSetConverter.cs"];
m2_22 [label="reader.TokenType == JsonToken.PropertyName", span="86-86", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_23 [label="DataTable dt = ds.Tables[(string)reader.Value]", span="88-88", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_25 [label="dt = (DataTable)converter.ReadJson(reader, typeof(DataTable), dt, serializer)", span="91-91", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_28 [label="CheckedRead(reader)", span="98-98", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=red, community=0, file="DataSetConverter.cs"];
m2_18 [label="return null;", span="74-74", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_20 [label="DataTableConverter converter = new DataTableConverter()", span="82-82", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_27 [label="ds.Tables.Add(dt)", span="95-95", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_29 [label="return ds;", span="101-101", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_24 [label="bool exists = (dt != null)", span="89-89", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_26 [label="!exists", span="93-93", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_30 [label="Exit Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="70-70", cluster="Newtonsoft.Json.Converters.DataSetConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_0 [label="Entry Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="43-43", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_1 [label="DataSet dataSet = (DataSet)value", span="45-45", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_2 [label="DefaultContractResolver resolver = serializer.ContractResolver as DefaultContractResolver", span="46-46", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_4 [label="writer.WriteStartObject()", span="50-50", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_6 [label="writer.WritePropertyName((resolver != null) ? resolver.GetResolvedPropertyName(table.TableName) : table.TableName)", span="54-54", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_7 [label="converter.WriteJson(writer, table, serializer)", span="56-56", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_8 [label="writer.WriteEndObject()", span="59-59", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_5 [label="dataSet.Tables", span="52-52", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_3 [label="DataTableConverter converter = new DataTableConverter()", span="48-48", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_9 [label="Exit Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="43-43", cluster="Newtonsoft.Json.Converters.DataSetConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataSetConverter.cs"];
m2_11 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="DataSetConverter.cs"];
m2_15 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="DataSetConverter.cs"];
m2_45 [label="Newtonsoft.Json.Converters.DataSetConverter", span="", file="DataSetConverter.cs"];
m3_3 [label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0", cluster="string.ToUpper(System.Globalization.CultureInfo)", file="DataTableConverter.cs"];
m3_0 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.ResolvePropertyName(string)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.ResolvePropertyName(string)", file="DataTableConverter.cs"];
m3_1 [label="return '':::'' + propertyName.ToUpper(CultureInfo.InvariantCulture) + '':::'';", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.ResolvePropertyName(string)", file="DataTableConverter.cs"];
m3_2 [label="Exit Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.ResolvePropertyName(string)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.ResolvePropertyName(string)", file="DataTableConverter.cs"];
m4_91 [label="throw JsonSerializationException.Create(reader, ''The number of field values does not match the number of properties definied by union '{0}'.''.FormatWith(CultureInfo.InvariantCulture, caseName));", span="216-216", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_92 [label="int i = 0", span="219-219", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_93 [label="i < fields.Count", span="219-219", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_94 [label="JToken t = fields[i]", span="221-221", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_17 [label="unionCase.Name = (string)FSharpUtils.GetUnionCaseInfoName(unionCaseInfo)", span="97-97", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_128 [label=main, span="", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="DiscriminatedUnionConverter.cs"];
m4_95 [label="PropertyInfo fieldProperty = caseInfo.Fields[i]", span="222-222", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_96 [label="typedFieldValues[i] = t.ToObject(fieldProperty.PropertyType, serializer)", span="224-224", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_97 [label="i++", span="219-219", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_10 [label="Union u = new Union()", span="86-86", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_11 [label="u.TagReader = (FSharpFunction)FSharpUtils.PreComputeUnionTagReader(null, t, null)", span="88-88", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_12 [label="u.Cases = new List<UnionCase>()", span="89-89", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_13 [label="object[] cases = (object[])FSharpUtils.GetUnionCases(null, t, null)", span="91-91", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_14 [label=cases, span="93-93", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_15 [label="UnionCase unionCase = new UnionCase()", span="95-95", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_102 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="DiscriminatedUnionConverter.cs"];
m4_103 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="DiscriminatedUnionConverter.cs"];
m4_104 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="DiscriminatedUnionConverter.cs"];
m4_105 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="DiscriminatedUnionConverter.cs"];
m4_106 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="DiscriminatedUnionConverter.cs"];
m4_108 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", span="2074-2074", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_107 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2093-2093", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="DiscriminatedUnionConverter.cs"];
m4_109 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="DiscriminatedUnionConverter.cs"];
m4_6 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, attribute.ReferenceLoopHandling)", span="54-54", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ReferenceLoopHandlingTest()", file="DiscriminatedUnionConverter.cs"];
m4_0 [label="Entry Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ReferenceLoopHandlingTest()", span="46-46", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ReferenceLoopHandlingTest()", file="DiscriminatedUnionConverter.cs"];
m4_1 [label="JsonPropertyAttribute attribute = new JsonPropertyAttribute()", span="48-48", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ReferenceLoopHandlingTest()", file="DiscriminatedUnionConverter.cs"];
m4_2 [label="Assert.AreEqual(null, attribute._defaultValueHandling)", span="49-49", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ReferenceLoopHandlingTest()", file="DiscriminatedUnionConverter.cs"];
m4_3 [label="Assert.AreEqual(ReferenceLoopHandling.Error, attribute.ReferenceLoopHandling)", span="50-50", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ReferenceLoopHandlingTest()", file="DiscriminatedUnionConverter.cs"];
m4_4 [label="attribute.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="52-52", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ReferenceLoopHandlingTest()", file="DiscriminatedUnionConverter.cs"];
m4_5 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, attribute._referenceLoopHandling)", span="53-53", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ReferenceLoopHandlingTest()", file="DiscriminatedUnionConverter.cs"];
m4_87 [label="caseInfo.Fields.Length > 0 && fields == null", span="207-207", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_88 [label="throw JsonSerializationException.Create(reader, ''No '{0}' property with union fields found.''.FormatWith(CultureInfo.InvariantCulture, FieldsPropertyName));", span="209-209", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_89 [label="fields != null", span="212-212", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_7 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="DiscriminatedUnionConverter.cs"];
m4_112 [label="Exit lambda expression", span="251-251", cluster="lambda expression", file="DiscriminatedUnionConverter.cs"];
m4_119 [label="child.name = ''child''", span="262-262", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreDynamicCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_118 [label="child.parent = parent", span="261-261", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreDynamicCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_120 [label="var settings = new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore }", span="264-264", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreDynamicCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_121 [label="var c = JsonConvert.SerializeObject(parent, settings)", span="266-266", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreDynamicCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_116 [label="parent.child = child", span="259-259", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreDynamicCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_117 [label="parent.name = ''parent''", span="260-260", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreDynamicCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_123 [label="Exit Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreDynamicCyclicReferenceLoop()", span="255-255", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreDynamicCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_122 [label="Assert.AreEqual(@''{''''child'''':{''''name'''':''''child''''},''''name'''':''''parent''''}'', c)", span="267-267", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreDynamicCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_115 [label="dynamic child = new DictionaryDynamicObject()", span="258-258", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreDynamicCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_114 [label="dynamic parent = new DictionaryDynamicObject()", span="257-257", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreDynamicCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_124 [label="_data = data", span="294-294", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemReferenceLoopHandling.SetData(System.Collections.Generic.IList<Newtonsoft.Json.Tests.Serialization.PropertyItemReferenceLoopHandling>)", file="DiscriminatedUnionConverter.cs"];
m4_125 [label="Exit Newtonsoft.Json.Tests.Serialization.PropertyItemReferenceLoopHandling.SetData(System.Collections.Generic.IList<Newtonsoft.Json.Tests.Serialization.PropertyItemReferenceLoopHandling>)", span="292-292", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemReferenceLoopHandling.SetData(System.Collections.Generic.IList<Newtonsoft.Json.Tests.Serialization.PropertyItemReferenceLoopHandling>)", file="DiscriminatedUnionConverter.cs"];
m4_113 [label="Entry Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreDynamicCyclicReferenceLoop()", span="255-255", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreDynamicCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_126 [label="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.MainClass", span="", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_72 [label="Union union = UnionCache.Get(objectType)", span="171-171", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_18 [label="unionCase.Fields = (PropertyInfo[])FSharpUtils.GetUnionCaseInfoFields(unionCaseInfo)", span="98-98", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_49 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemReferenceLoopHandling.PropertyItemReferenceLoopHandling()", span="272-272", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemReferenceLoopHandling.PropertyItemReferenceLoopHandling()", file="DiscriminatedUnionConverter.cs"];
m4_8 [label="Entry Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", span="176-176", cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", file="DiscriminatedUnionConverter.cs"];
m4_42 [label="serializer.Serialize(writer, field)", span="135-135", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_43 [label="writer.WriteEndArray()", span="137-137", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_44 [label="writer.WriteEndObject()", span="139-139", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_45 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="114-114", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_46 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DiscriminatedUnionConverter.cs"];
m4_47 [label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="52-52", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="DiscriminatedUnionConverter.cs"];
m4_48 [label="Entry Newtonsoft.Json.Utilities.FSharpFunction.Invoke(params object[])", span="47-47", cluster="Newtonsoft.Json.Utilities.FSharpFunction.Invoke(params object[])", file="DiscriminatedUnionConverter.cs"];
m4_25 [label="Entry Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingObjectContainerAttributeWithPropertyOverride.ReferenceLoopHandlingObjectContainerAttributeWithPropertyOverride()", span="315-315", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingObjectContainerAttributeWithPropertyOverride.ReferenceLoopHandlingObjectContainerAttributeWithPropertyOverride()", file="DiscriminatedUnionConverter.cs"];
m4_50 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="DiscriminatedUnionConverter.cs"];
m4_16 [label="unionCase.Tag = (int)FSharpUtils.GetUnionCaseInfoTag(unionCaseInfo)", span="96-96", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_34 [label="writer.WriteStartObject()", span="124-124", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_35 [label="writer.WritePropertyName((resolver != null) ? resolver.GetResolvedPropertyName(CasePropertyName) : CasePropertyName)", span="125-125", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_36 [label="writer.WriteValue(caseInfo.Name)", span="126-126", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_37 [label="caseInfo.Fields != null && caseInfo.Fields.Length > 0", span="127-127", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_38 [label="object[] fields = (object[])caseInfo.FieldReader.Invoke(value)", span="129-129", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_39 [label="writer.WritePropertyName((resolver != null) ? resolver.GetResolvedPropertyName(FieldsPropertyName) : FieldsPropertyName)", span="131-131", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_134 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409", cluster="Newtonsoft.Json.JsonReader.Read()", file="DiscriminatedUnionConverter.cs"];
m4_54 [label="info.AddValue(''Child'', Child)", span="158-158", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.MainClass.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverter.cs"];
m4_129 [label=settings, span="", cluster="System.Type.Assembly()", file="DiscriminatedUnionConverter.cs"];
m4_28 [label="a.Add(a)", span="99-99", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreArrayReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_30 [label="Assert.AreEqual(''[]'', json)", span="105-105", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreArrayReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_31 [label="Exit Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreArrayReferenceLoop()", span="96-96", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreArrayReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_29 [label="string json = JsonConvert.SerializeObject(a, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        ReferenceLoopHandling = ReferenceLoopHandling.Serialize\r\n      })", span="101-104", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreArrayReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_32 [label="Entry Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingList.ReferenceLoopHandlingList()", span="299-299", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingList.ReferenceLoopHandlingList()", file="DiscriminatedUnionConverter.cs"];
m4_33 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="DiscriminatedUnionConverter.cs"];
m4_40 [label="Entry Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingDictionary.ReferenceLoopHandlingDictionary()", span="304-304", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingDictionary.ReferenceLoopHandlingDictionary()", file="DiscriminatedUnionConverter.cs"];
m4_41 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DiscriminatedUnionConverter.cs"];
m4_51 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemReferenceLoopHandling.SetData(System.Collections.Generic.IList<Newtonsoft.Json.Tests.Serialization.PropertyItemReferenceLoopHandling>)", span="292-292", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemReferenceLoopHandling.SetData(System.Collections.Generic.IList<Newtonsoft.Json.Tests.Serialization.PropertyItemReferenceLoopHandling>)", file="DiscriminatedUnionConverter.cs"];
m4_55 [label="Exit Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.MainClass.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="156-156", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.MainClass.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverter.cs"];
m4_26 [label="Entry Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreArrayReferenceLoop()", span="96-96", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreArrayReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_99 [label="return caseInfo.Constructor.Invoke(args);", span="230-230", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_100 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="150-150", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_101 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", span="277-277", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="DiscriminatedUnionConverter.cs"];
m4_27 [label="ReferenceLoopHandlingList a = new ReferenceLoopHandlingList()", span="98-98", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreArrayReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_61 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="150-150", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_62 [label="reader.TokenType == JsonToken.Null", span="152-152", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_63 [label="return null;", span="154-154", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_65 [label="string caseName = null", span="158-158", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_66 [label="JArray fields = null", span="159-159", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_68 [label="reader.TokenType == JsonToken.PropertyName", span="164-164", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_64 [label="UnionCase caseInfo = null", span="157-157", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_67 [label="ReadAndAssert(reader)", span="162-162", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs", color=green, community=0];
m4_69 [label="string propertyName = reader.Value.ToString()", span="166-166", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_71 [label="ReadAndAssert(reader)", span="169-169", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs", color=green, community=0];
m4_56 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="430-430", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="DiscriminatedUnionConverter.cs"];
m4_131 [label=parent, span="", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="DiscriminatedUnionConverter.cs"];
m4_132 [label=settings, span="", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="DiscriminatedUnionConverter.cs"];
m4_133 [label="Newtonsoft.Json.Tests.Serialization.PropertyItemReferenceLoopHandling", span="", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadAndAssert(Newtonsoft.Json.JsonReader)", file="DiscriminatedUnionConverter.cs"];
m4_70 [label="string.Equals(propertyName, CasePropertyName, StringComparison.OrdinalIgnoreCase)", span="167-167", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_90 [label="caseInfo.Fields.Length != fields.Count", span="214-214", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_53 [label="Entry Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.MainClass.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="156-156", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.MainClass.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverter.cs"];
m4_57 [label="Entry Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ChildClass.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="167-167", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ChildClass.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverter.cs"];
m4_52 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="839-839", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DiscriminatedUnionConverter.cs"];
m4_24 [label="Exit Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreObjectReferenceLoopWithPropertyOverride()", span="71-71", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreObjectReferenceLoopWithPropertyOverride()", file="DiscriminatedUnionConverter.cs"];
m4_19 [label="unionCase.FieldReader = (FSharpFunction)FSharpUtils.PreComputeUnionReader(null, unionCaseInfo, null)", span="99-99", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_20 [label="unionCase.Constructor = (FSharpFunction)FSharpUtils.PreComputeUnionConstructor(null, unionCaseInfo, null)", span="100-100", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_21 [label="u.Cases.Add(unionCase)", span="102-102", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_22 [label="return u;", span="105-105", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_23 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", span="84-84", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_98 [label="object[] args = { typedFieldValues }", span="228-228", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverter.cs"];
m4_9 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", span="84-84", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_78 [label="var main = new MainClass()", span="196-196", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreISerializableCyclicReferenceLoop()", color=green, community=0, file="DiscriminatedUnionConverter.cs"];
m4_77 [label="Entry Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreISerializableCyclicReferenceLoop()", span="194-194", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreISerializableCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_79 [label="var child = new ChildClass()", span="197-197", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreISerializableCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs", color=red, community=0];
m4_83 [label="var settings =\r\n          new JsonSerializerSettings() { ReferenceLoopHandling = ReferenceLoopHandling.Ignore }", span="204-205", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreISerializableCyclicReferenceLoop()", color=green, community=0, file="DiscriminatedUnionConverter.cs"];
m4_81 [label="child.Parent = main", span="200-200", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreISerializableCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_75 [label="Exit lambda expression", span="190-190", cluster="lambda expression", file="DiscriminatedUnionConverter.cs"];
m4_73 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="DiscriminatedUnionConverter.cs"];
m4_76 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="880-880", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="DiscriminatedUnionConverter.cs"];
m4_80 [label="child.Name = ''Child1''", span="199-199", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreISerializableCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_82 [label="main.Child = child", span="202-202", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreISerializableCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_85 [label="Assert.AreEqual(@''{''''Child'''':{''''Name'''':''''Child1''''}}'', c)", span="208-208", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreISerializableCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_84 [label="var c = JsonConvert.SerializeObject(main, settings)", span="207-207", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreISerializableCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_74 [label="JsonConvert.SerializeObject(main, settings)", span="190-190", cluster="lambda expression", file="DiscriminatedUnionConverter.cs"];
m4_86 [label="Exit Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreISerializableCyclicReferenceLoop()", span="194-194", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.IgnoreISerializableCyclicReferenceLoop()", file="DiscriminatedUnionConverter.cs"];
m4_130 [label="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.DictionaryDynamicObject", span="", cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="DiscriminatedUnionConverter.cs"];
m4_127 [label="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ChildClass", span="", cluster="System.Type.IsAssignableFrom(System.Type)", file="DiscriminatedUnionConverter.cs"];
m4_58 [label="info.AddValue(''Parent'', Parent)", span="169-169", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ChildClass.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverter.cs", color=red, community=0];
m4_111 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="DiscriminatedUnionConverter.cs"];
m4_110 [label="c.Name == caseName", span="175-175", cluster="lambda expression", file="DiscriminatedUnionConverter.cs"];
m4_59 [label="info.AddValue(''Name'', Name)", span="170-170", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ChildClass.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverter.cs"];
m4_60 [label="Exit Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ChildClass.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="167-167", cluster="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ChildClass.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverter.cs"];
m4_136 [label=caseName, span="", file="DiscriminatedUnionConverter.cs"];
m4_135 [label=tag, span="", file="DiscriminatedUnionConverter.cs"];
m5_361 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", span="1157-1157", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="DiscriminatedUnionConverterTests.cs"];
m5_362 [label="return new CustomEnumerable<T>(newVal, this);", span="1159-1159", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="DiscriminatedUnionConverterTests.cs"];
m5_363 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", span="1157-1157", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="DiscriminatedUnionConverterTests.cs"];
m5_658 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", span="1953-1953", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="DiscriminatedUnionConverterTests.cs"];
m5_659 [label="string json = @''{\r\n    ''''itemIdentifier'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.ReportItemKeys, Newtonsoft.Json.Tests'''',\r\n        ''''dataType'''': 0,\r\n        ''''wantedUnitID'''': 1,\r\n        ''''application'''': 3,\r\n        ''''id'''': 101,\r\n        ''''name'''': ''''Machine''''\r\n    },\r\n    ''''isBusinessEntity'''': false,\r\n    ''''isKeyItem'''': true,\r\n    ''''summarizeOnThisItem'''': false\r\n}''", span="1955-1967", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="DiscriminatedUnionConverterTests.cs"];
m5_660 [label="GroupingInfo g = JsonConvert.DeserializeObject<GroupingInfo>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="1969-1972", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="DiscriminatedUnionConverterTests.cs"];
m5_661 [label="ReportItemKeys item = (ReportItemKeys)g.ItemIdentifier", span="1974-1974", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="DiscriminatedUnionConverterTests.cs"];
m5_662 [label="Assert.AreEqual(1UL, item.WantedUnitID)", span="1975-1975", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="DiscriminatedUnionConverterTests.cs"];
m5_663 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", span="1953-1953", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ExistingBaseValue()", file="DiscriminatedUnionConverterTests.cs"];
m5_225 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.CustomSerializationBinder()", span="751-751", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.CustomSerializationBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_604 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_664 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", span="1981-1981", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="DiscriminatedUnionConverterTests.cs"];
m5_665 [label="DataType data = new DataType()", span="1983-1983", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="DiscriminatedUnionConverterTests.cs"];
m5_666 [label="data.Rows.Add(''key'', new List<MyInterfaceImplementationType> { new MyInterfaceImplementationType() { SomeProperty = ''property'' } })", span="1984-1984", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="DiscriminatedUnionConverterTests.cs"];
m5_667 [label="string serialized = JsonConvert.SerializeObject(data, Formatting.Indented)", span="1985-1985", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="DiscriminatedUnionConverterTests.cs"];
m5_668 [label="StringAssert.AreEqual(@''{\r\n  ''''Rows'''': {\r\n    ''''key'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[Newtonsoft.Json.Tests.Serialization.MyInterfaceImplementationType, Newtonsoft.Json.Tests]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''SomeProperty'''': ''''property''''\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}'', serialized)", span="1987-1998", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="DiscriminatedUnionConverterTests.cs"];
m5_669 [label="DataType deserialized = JsonConvert.DeserializeObject<DataType>(serialized)", span="2000-2000", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="DiscriminatedUnionConverterTests.cs"];
m5_670 [label="Assert.AreEqual(''property'', deserialized.Rows[''key''].First().SomeProperty)", span="2002-2002", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="DiscriminatedUnionConverterTests.cs"];
m5_671 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", span="1981-1981", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericItemTypeCollection()", file="DiscriminatedUnionConverterTests.cs"];
m5_34 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="DiscriminatedUnionConverterTests.cs"];
m5_437 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", span="2266-2266", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", file="DiscriminatedUnionConverterTests.cs"];
m5_123 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="DiscriminatedUnionConverterTests.cs"];
m5_202 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", span="688-688", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_203 [label="string listRef = ReflectionUtils.GetTypeName(typeof(List<int>), TypeNameAssemblyFormatHandling.Simple, null)", span="690-690", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_204 [label="TypeNameProperty typeNameProperty = new TypeNameProperty\r\n            {\r\n                Name = ''Name!'',\r\n                Value = new List<int> { 1, 2, 3, 4, 5 }\r\n            }", span="692-696", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_206 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + listRef + @'''''',\r\n    ''''$values'''': [\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      5\r\n    ]\r\n  }\r\n}'', json)", span="700-712", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_205 [label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="698-698", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_207 [label="TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameProperty>(json)", span="714-714", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_208 [label="Assert.AreEqual(''Name!'', deserialized.Name)", span="715-715", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_209 [label="CustomAssert.IsInstanceOfType(typeof(List<int>), deserialized.Value)", span="716-716", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_210 [label="List<int> nested = (List<int>)deserialized.Value", span="718-718", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_211 [label="Assert.AreEqual(5, nested.Count)", span="719-719", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_212 [label="Assert.AreEqual(1, nested[0])", span="720-720", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_213 [label="Assert.AreEqual(2, nested[1])", span="721-721", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_214 [label="Assert.AreEqual(3, nested[2])", span="722-722", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_215 [label="Assert.AreEqual(4, nested[3])", span="723-723", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_216 [label="Assert.AreEqual(5, nested[4])", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_217 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", span="688-688", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_322 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", span="1018-1018", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="DiscriminatedUnionConverterTests.cs"];
m5_323 [label="Message message = new Message()", span="1020-1020", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="DiscriminatedUnionConverterTests.cs"];
m5_324 [label="message.Address = ''http://www.google.com''", span="1021-1021", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="DiscriminatedUnionConverterTests.cs"];
m5_325 [label="message.Body = new SearchDetails\r\n            {\r\n                Query = ''Json.NET'',\r\n                Language = ''en-us''\r\n            }", span="1022-1026", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="DiscriminatedUnionConverterTests.cs"];
m5_326 [label="string json = JsonConvert.SerializeObject(message, Formatting.Indented)", span="1028-1028", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="DiscriminatedUnionConverterTests.cs"];
m5_327 [label="Message deserialized = JsonConvert.DeserializeObject<Message>(json)", span="1038-1038", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="DiscriminatedUnionConverterTests.cs"];
m5_328 [label="SearchDetails searchDetails = (SearchDetails)deserialized.Body", span="1040-1040", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="DiscriminatedUnionConverterTests.cs"];
m5_329 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", span="1018-1018", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="DiscriminatedUnionConverterTests.cs"];
m5_76 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic2()", span="261-261", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic2()", file="DiscriminatedUnionConverterTests.cs"];
m5_77 [label="string json = JsonConvert.SerializeObject(new WagePerson(), typeof(object), new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="263-266", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic2()", color=red, community=0, file="DiscriminatedUnionConverterTests.cs"];
m5_78 [label="StringAssert.AreEqual(@''{''''$type'''':''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',''''HourlyWage'''':0.0,''''Name'''':null,''''BirthDate'''':''''0001-01-01T00:00:00'''',''''LastModified'''':''''0001-01-01T00:00:00''''}'', json)", span="268-268", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic2()", file="DiscriminatedUnionConverterTests.cs"];
m5_79 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic2()", span="261-261", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic2()", file="DiscriminatedUnionConverterTests.cs"];
m5_674 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="DiscriminatedUnionConverterTests.cs"];
m5_723 [label="Entry Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="2199-2199", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="DiscriminatedUnionConverterTests.cs"];
m5_724 [label="obj == null", span="2201-2201", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="DiscriminatedUnionConverterTests.cs"];
m5_726 [label="ReferenceEquals(this, obj)", span="2205-2205", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="DiscriminatedUnionConverterTests.cs"];
m5_728 [label="obj is IExample", span="2209-2209", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="DiscriminatedUnionConverterTests.cs"];
m5_729 [label="return Name.Equals(((IExample)obj).Name);", span="2211-2211", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="DiscriminatedUnionConverterTests.cs"];
m5_725 [label="return false;", span="2203-2203", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="DiscriminatedUnionConverterTests.cs"];
m5_727 [label="return true;", span="2207-2207", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="DiscriminatedUnionConverterTests.cs"];
m5_730 [label="return false;", span="2215-2215", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="DiscriminatedUnionConverterTests.cs"];
m5_731 [label="Exit Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="2199-2199", cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="DiscriminatedUnionConverterTests.cs"];
m5_617 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", span="1844-1844", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="DiscriminatedUnionConverterTests.cs"];
m5_618 [label="MyParent p = new MyParent\r\n            {\r\n                Child = new MyChildList\r\n                {\r\n                    ''string!''\r\n                }\r\n            }", span="1846-1852", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="DiscriminatedUnionConverterTests.cs"];
m5_619 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1854-1862", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="DiscriminatedUnionConverterTests.cs"];
m5_620 [label="string json = JsonConvert.SerializeObject(p, settings)", span="1864-1864", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="DiscriminatedUnionConverterTests.cs"];
m5_622 [label="MyParent p2 = JsonConvert.DeserializeObject<MyParent>(json, settings)", span="1875-1875", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="DiscriminatedUnionConverterTests.cs"];
m5_621 [label="StringAssert.AreEqual(@''{\r\n  ''''c'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChildList, Newtonsoft.Json.Tests'''',\r\n    ''''$values'''': [\r\n      ''''string!''''\r\n    ]\r\n  }\r\n}'', json)", span="1866-1873", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="DiscriminatedUnionConverterTests.cs"];
m5_623 [label="CustomAssert.IsInstanceOfType(typeof(MyChildList), p2.Child)", span="1876-1876", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="DiscriminatedUnionConverterTests.cs"];
m5_624 [label="Assert.AreEqual(1, ((MyChildList)p2.Child).Count)", span="1877-1877", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="DiscriminatedUnionConverterTests.cs"];
m5_625 [label="Assert.AreEqual(''string!'', ((MyChildList)p2.Child)[0])", span="1878-1878", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="DiscriminatedUnionConverterTests.cs"];
m5_626 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", span="1844-1844", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValuesAndArray()", file="DiscriminatedUnionConverterTests.cs"];
m5_26 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", span="181-181", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="DiscriminatedUnionConverterTests.cs"];
m5_27 [label="StringBuilder sb = new StringBuilder()", span="183-183", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="DiscriminatedUnionConverterTests.cs"];
m5_28 [label="int i = 0", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="DiscriminatedUnionConverterTests.cs"];
m5_30 [label="sb.Append(@''{''''$value'''':'')", span="186-186", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="DiscriminatedUnionConverterTests.cs"];
m5_32 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                var reader = new JsonTextReader(new StringReader(sb.ToString()));\r\n                var ser = new JsonSerializer();\r\n                ser.MetadataPropertyHandling = MetadataPropertyHandling.Default;\r\n                ser.Deserialize<sbyte>(reader);\r\n            }, ''Unexpected token when deserializing primitive value: StartObject. Path '$value', line 1, position 11.'')", span="189-195", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="DiscriminatedUnionConverterTests.cs"];
m5_29 [label="i < 3", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="DiscriminatedUnionConverterTests.cs"];
m5_31 [label="i++", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="DiscriminatedUnionConverterTests.cs"];
m5_33 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", span="181-181", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NestedValueObjects()", file="DiscriminatedUnionConverterTests.cs"];
m5_697 [label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2097-2097", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverterTests.cs"];
m5_698 [label="info.AddValue(''c'', Child)", span="2099-2099", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverterTests.cs"];
m5_699 [label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2097-2097", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverterTests.cs"];
m5_394 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", span="1187-1187", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", file="DiscriminatedUnionConverterTests.cs"];
m5_331 [label="Entry Newtonsoft.Json.Tests.Serialization.SearchDetails.SearchDetails()", span="2126-2126", cluster="Newtonsoft.Json.Tests.Serialization.SearchDetails.SearchDetails()", file="DiscriminatedUnionConverterTests.cs"];
m5_65 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="DiscriminatedUnionConverterTests.cs"];
m5_332 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", span="1051-1051", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_333 [label="Dictionary<string, object> collection = new Dictionary<string, object>()\r\n            {\r\n                { ''First'', new UrlStatus { Status = 404, Url = @''http://www.bing.com'' } },\r\n                { ''Second'', new UrlStatus { Status = 400, Url = @''http://www.google.com'' } },\r\n                {\r\n                    ''List'', new List<UrlStatus>\r\n                    {\r\n                        new UrlStatus { Status = 300, Url = @''http://www.yahoo.com'' },\r\n                        new UrlStatus { Status = 200, Url = @''http://www.askjeeves.com'' }\r\n                    }\r\n                }\r\n            }", span="1053-1064", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_334 [label="string json = JsonConvert.SerializeObject(collection, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n#pragma warning disable 618\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n#pragma warning restore 618\r\n            })", span="1066-1072", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_335 [label="string urlStatusTypeName = ReflectionUtils.GetTypeName(typeof(UrlStatus), TypeNameAssemblyFormatHandling.Simple, null)", span="1074-1074", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_336 [label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n  ''''First'''': {\r\n    ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n    ''''Status'''': 404,\r\n    ''''Url'''': ''''http://www.bing.com''''\r\n  },\r\n  ''''Second'''': {\r\n    ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n    ''''Status'''': 400,\r\n    ''''Url'''': ''''http://www.google.com''''\r\n  },\r\n  ''''List'''': {\r\n    ''''$type'''': ''''System.Collections.Generic.List`1[['' + urlStatusTypeName + @'']], mscorlib'''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n        ''''Status'''': 300,\r\n        ''''Url'''': ''''http://www.yahoo.com''''\r\n      },\r\n      {\r\n        ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n        ''''Status'''': 200,\r\n        ''''Url'''': ''''http://www.askjeeves.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', json)", span="1076-1103", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_337 [label="object c = JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n#pragma warning disable 618\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n#pragma warning restore 618\r\n            })", span="1105-1111", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_338 [label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c)", span="1113-1113", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_339 [label="Dictionary<string, object> newCollection = (Dictionary<string, object>)c", span="1115-1115", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_340 [label="Assert.AreEqual(3, newCollection.Count)", span="1116-1116", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_341 [label="Assert.AreEqual(@''http://www.bing.com'', ((UrlStatus)newCollection[''First'']).Url)", span="1117-1117", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_342 [label="List<UrlStatus> statues = (List<UrlStatus>)newCollection[''List'']", span="1119-1119", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_343 [label="Assert.AreEqual(2, statues.Count)", span="1120-1120", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_344 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", span="1051-1051", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_701 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", span="2149-2149", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="DiscriminatedUnionConverterTests.cs"];
m5_702 [label="SerializableWrapper w = obj as SerializableWrapper", span="2151-2151", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="DiscriminatedUnionConverterTests.cs"];
m5_703 [label="w == null", span="2153-2153", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="DiscriminatedUnionConverterTests.cs"];
m5_705 [label="return Equals(w.Content, Content);", span="2158-2158", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="DiscriminatedUnionConverterTests.cs"];
m5_704 [label="return false;", span="2155-2155", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="DiscriminatedUnionConverterTests.cs"];
m5_706 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", span="2149-2149", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.Equals(object)", file="DiscriminatedUnionConverterTests.cs"];
m5_683 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", span="2031-2031", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", file="DiscriminatedUnionConverterTests.cs"];
m5_684 [label="JsonSerializerSettings serializerSettings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n#pragma warning disable 618\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n#pragma warning restore 618\r\n            }", span="2033-2039", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", file="DiscriminatedUnionConverterTests.cs"];
m5_685 [label="Dictionary<int, HashSet<string>> dictionary = new Dictionary<int, HashSet<string>>\r\n            {\r\n                { 1, new HashSet<string>(new[] { ''test'' }) },\r\n            }", span="2041-2044", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", file="DiscriminatedUnionConverterTests.cs"];
m5_686 [label="string obtainedJson = JsonConvert.SerializeObject(dictionary, serializerSettings)", span="2046-2046", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", file="DiscriminatedUnionConverterTests.cs"];
m5_687 [label="Dictionary<int, HashSet<string>> obtainedDictionary = (Dictionary<int, HashSet<string>>)JsonConvert.DeserializeObject(obtainedJson, serializerSettings)", span="2048-2048", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", file="DiscriminatedUnionConverterTests.cs"];
m5_688 [label="Assert.IsNotNull(obtainedDictionary)", span="2050-2050", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", file="DiscriminatedUnionConverterTests.cs"];
m5_689 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", span="2031-2031", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Full()", file="DiscriminatedUnionConverterTests.cs"];
m5_317 [label="Entry Newtonsoft.Json.Tests.TestObjects.ContentSubClass.ContentSubClass(string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ContentSubClass.ContentSubClass(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_606 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", span="1809-1809", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_607 [label="MyParent p = new MyParent\r\n            {\r\n                Child = new MyChild\r\n                {\r\n                    MyProperty = ''string!''\r\n                }\r\n            }", span="1811-1817", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_608 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1819-1827", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_609 [label="string json = JsonConvert.SerializeObject(p, settings)", span="1829-1829", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_611 [label="MyParent p2 = JsonConvert.DeserializeObject<MyParent>(json, settings)", span="1838-1838", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_610 [label="StringAssert.AreEqual(@''{\r\n  ''''c'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChild, Newtonsoft.Json.Tests'''',\r\n    ''''p'''': ''''string!''''\r\n  }\r\n}'', json)", span="1831-1836", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_612 [label="CustomAssert.IsInstanceOfType(typeof(MyChild), p2.Child)", span="1839-1839", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_613 [label="Assert.AreEqual(''string!'', ((MyChild)p2.Child).MyProperty)", span="1840-1840", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_614 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", span="1809-1809", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_61 [label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="DiscriminatedUnionConverterTests.cs"];
m5_404 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", span="2145-2145", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", file="DiscriminatedUnionConverterTests.cs"];
m5_491 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="DiscriminatedUnionConverterTests.cs"];
m5_273 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToName(System.Type, out string, out string)", span="929-929", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="DiscriminatedUnionConverterTests.cs"];
m5_274 [label="assemblyName = null", span="931-931", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="DiscriminatedUnionConverterTests.cs"];
m5_275 [label="typeName = serializedType.Name", span="932-932", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="DiscriminatedUnionConverterTests.cs"];
m5_276 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToName(System.Type, out string, out string)", span="929-929", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="DiscriminatedUnionConverterTests.cs"];
m5_420 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="195-195", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DiscriminatedUnionConverterTests.cs"];
m5_734 [label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="2219-2219", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="DiscriminatedUnionConverterTests.cs"];
m5_735 [label="Name == null", span="2221-2221", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="DiscriminatedUnionConverterTests.cs"];
m5_736 [label="return 0;", span="2223-2223", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="DiscriminatedUnionConverterTests.cs"];
m5_737 [label="return Name.GetHashCode();", span="2226-2226", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="DiscriminatedUnionConverterTests.cs"];
m5_738 [label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="2219-2219", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="DiscriminatedUnionConverterTests.cs"];
m5_48 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", span="199-199", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_49 [label="var serializer = new JsonSerializer()\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            }", span="201-204", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_50 [label="var sw = new StringWriter()", span="205-205", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_51 [label="serializer.Serialize(new JsonTextWriter(sw) { Formatting = Formatting.Indented }, new WagePerson(), typeof(Person))", span="206-206", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_56 [label="var person = serializer.Deserialize<Person>(rd)", span="220-220", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_52 [label="var result = sw.ToString()", span="207-207", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_53 [label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n  ''''HourlyWage'''': 0.0,\r\n  ''''Name'''': null,\r\n  ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n  ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n}'', result)", span="209-215", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_54 [label="Assert.IsTrue(result.Contains(''WagePerson''))", span="217-217", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_55 [label="var rd = new JsonTextReader(new StringReader(result))", span="218-218", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_57 [label="CustomAssert.IsInstanceOfType(typeof(WagePerson), person)", span="222-222", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_58 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", span="199-199", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameIfDerivedWithAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_244 [label="Entry Newtonsoft.Json.Tests.Serialization.Purchase.Purchase()", span="2137-2137", cluster="Newtonsoft.Json.Tests.Serialization.Purchase.Purchase()", file="DiscriminatedUnionConverterTests.cs"];
m5_591 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", span="2238-2238", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_218 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", span="728-728", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_219 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!''''\r\n}''", span="730-734", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_220 [label="object p = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n#pragma warning disable CS0618 // Type or member is obsolete\r\n                Binder = new CustomSerializationBinder()\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n            })", span="736-742", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_221 [label="CustomAssert.IsInstanceOfType(typeof(Person), p)", span="744-744", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_222 [label="Person person = (Person)p", span="746-746", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_223 [label="Assert.AreEqual(''Name!'', person.Name)", span="748-748", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_224 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", span="728-728", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_490 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", span="2276-2276", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_456 [label="Entry Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", span="63-63", cluster="Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", file="DiscriminatedUnionConverterTests.cs"];
m5_63 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="DiscriminatedUnionConverterTests.cs"];
m5_743 [label="Entry Newtonsoft.Json.Tests.Serialization.ApplicationItemKeys.ApplicationItemKeys()", span="2302-2302", cluster="Newtonsoft.Json.Tests.Serialization.ApplicationItemKeys.ApplicationItemKeys()", file="DiscriminatedUnionConverterTests.cs"];
m5_673 [label="Entry Newtonsoft.Json.Tests.Serialization.MyInterfaceImplementationType.MyInterfaceImplementationType()", span="2071-2071", cluster="Newtonsoft.Json.Tests.Serialization.MyInterfaceImplementationType.MyInterfaceImplementationType()", file="DiscriminatedUnionConverterTests.cs"];
m5_226 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.BindToType(string, string)", span="753-753", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.BindToType(string, string)", file="DiscriminatedUnionConverterTests.cs"];
m5_227 [label="return typeof(Person);", span="755-755", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.BindToType(string, string)", file="DiscriminatedUnionConverterTests.cs"];
m5_228 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.BindToType(string, string)", span="753-753", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.BindToType(string, string)", file="DiscriminatedUnionConverterTests.cs"];
m5_739 [label="Entry string.GetHashCode()", span="0-0", cluster="string.GetHashCode()", file="DiscriminatedUnionConverterTests.cs"];
m5_675 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", span="2008-2008", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", file="DiscriminatedUnionConverterTests.cs"];
m5_676 [label="JsonSerializerSettings serializerSettings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n#pragma warning disable 618\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n#pragma warning restore 618\r\n            }", span="2010-2016", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", file="DiscriminatedUnionConverterTests.cs"];
m5_677 [label="Dictionary<int, HashSet<string>> dictionary = new Dictionary<int, HashSet<string>>\r\n            {\r\n                { 1, new HashSet<string>(new[] { ''test'' }) },\r\n            }", span="2018-2021", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", file="DiscriminatedUnionConverterTests.cs"];
m5_678 [label="string obtainedJson = JsonConvert.SerializeObject(dictionary, serializerSettings)", span="2023-2023", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", file="DiscriminatedUnionConverterTests.cs"];
m5_679 [label="Dictionary<int, HashSet<string>> obtainedDictionary = (Dictionary<int, HashSet<string>>)JsonConvert.DeserializeObject(obtainedJson, serializerSettings)", span="2025-2025", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", file="DiscriminatedUnionConverterTests.cs"];
m5_680 [label="Assert.IsNotNull(obtainedDictionary)", span="2027-2027", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", file="DiscriminatedUnionConverterTests.cs"];
m5_681 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", span="2008-2008", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeComplexGenericDictionary_Simple()", file="DiscriminatedUnionConverterTests.cs"];
m5_243 [label="Entry Newtonsoft.Json.Tests.Serialization.Customer.Customer()", span="2132-2132", cluster="Newtonsoft.Json.Tests.Serialization.Customer.Customer()", file="DiscriminatedUnionConverterTests.cs"];
m5_229 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", span="761-761", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_230 [label="TypeNameSerializationBinder binder = new TypeNameSerializationBinder(''Newtonsoft.Json.Tests.Serialization.{0}, Newtonsoft.Json.Tests'')", span="763-763", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_231 [label="IList<object> values = new List<object>\r\n            {\r\n                new Customer\r\n                {\r\n                    Name = ''Caroline Customer''\r\n                },\r\n                new Purchase\r\n                {\r\n                    ProductName = ''Elbow Grease'',\r\n                    Price = 5.99m,\r\n                    Quantity = 1\r\n                }\r\n            }", span="765-777", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_232 [label="string json = JsonConvert.SerializeObject(values, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n#pragma warning disable CS0618 // Type or member is obsolete\r\n                Binder = binder\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n            })", span="779-785", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_233 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$type'''': ''''Customer'''',\r\n    ''''Name'''': ''''Caroline Customer''''\r\n  },\r\n  {\r\n    ''''$type'''': ''''Purchase'''',\r\n    ''''ProductName'''': ''''Elbow Grease'''',\r\n    ''''Price'''': 5.99,\r\n    ''''Quantity'''': 1\r\n  }\r\n]'', json)", span="800-811", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_234 [label="IList<object> newValues = JsonConvert.DeserializeObject<IList<object>>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n#pragma warning disable CS0618 // Type or member is obsolete\r\n                Binder = new TypeNameSerializationBinder(''Newtonsoft.Json.Tests.Serialization.{0}, Newtonsoft.Json.Tests'')\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n            })", span="813-819", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_235 [label="CustomAssert.IsInstanceOfType(typeof(Customer), newValues[0])", span="821-821", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_236 [label="Customer customer = (Customer)newValues[0]", span="822-822", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_238 [label="CustomAssert.IsInstanceOfType(typeof(Purchase), newValues[1])", span="825-825", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_239 [label="Purchase purchase = (Purchase)newValues[1]", span="826-826", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_237 [label="Assert.AreEqual(''Caroline Customer'', customer.Name)", span="823-823", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_240 [label="Assert.AreEqual(''Elbow Grease'', purchase.ProductName)", span="827-827", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_241 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", span="761-761", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_255 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="DiscriminatedUnionConverterTests.cs"];
m5_62 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="1015-1015", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m5_125 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", span="433-433", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_126 [label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="435-435", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_127 [label="string personRef = typeof(Person).AssemblyQualifiedName", span="436-436", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_128 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''\/Date(978134400000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978134400000)\/''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]''", span="438-458", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_129 [label="List<object> values = (List<object>)JsonConvert.DeserializeObject(json, typeof(List<object>), new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n#pragma warning disable 618\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n#pragma warning restore 618\r\n            })", span="460-466", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_130 [label="Assert.AreEqual(4, values.Count)", span="468-468", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_131 [label="EmployeeReference e = (EmployeeReference)values[0]", span="470-470", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_132 [label="Person p = (Person)values[1]", span="471-471", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_138 [label="Assert.AreEqual(''String!'', values[2])", span="480-480", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_139 [label="Assert.AreEqual((long)int.MinValue, values[3])", span="481-481", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_133 [label="Assert.AreEqual(''Bob'', e.Name)", span="473-473", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_134 [label="Assert.AreEqual(''Frank'', e.Manager.Name)", span="474-474", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_135 [label="Assert.AreEqual(null, p.Name)", span="476-476", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_136 [label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.BirthDate)", span="477-477", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_137 [label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.LastModified)", span="478-478", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_140 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", span="433-433", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_10 [label="Entry System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="DiscriminatedUnionConverterTests.cs"];
m5_471 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", span="2271-2271", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_11 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="433-433", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DiscriminatedUnionConverterTests.cs"];
m5_156 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="718-718", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_5 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KnownAutoTypes.KnownAutoTypes()", span="63-63", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KnownAutoTypes.KnownAutoTypes()", file="DiscriminatedUnionConverterTests.cs"];
m5_141 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", span="485-485", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_142 [label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="487-487", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_143 [label="string personRef = typeof(Person).AssemblyQualifiedName", span="488-488", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_144 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="490-495", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_147 [label="Assert.IsTrue(ex.Message.StartsWith(@''Type specified in JSON ''' + employeeRef + @''' is not compatible with ''' + personRef + @'''.''))", span="509-509", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_145 [label="JsonConvert.DeserializeObject(json, typeof(Person), new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects,\r\n#pragma warning disable 618\r\n                    TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n#pragma warning restore 618\r\n                })", span="499-505", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_146 [label=JsonSerializationException, span="507-507", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_148 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", span="485-485", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_719 [label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_180 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", span="611-611", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="DiscriminatedUnionConverterTests.cs"];
m5_181 [label="string containerTypeName = typeof(Container).AssemblyQualifiedName", span="613-613", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="DiscriminatedUnionConverterTests.cs"];
m5_182 [label="string productListTypeName = typeof(List<Product>).AssemblyQualifiedName", span="614-614", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="DiscriminatedUnionConverterTests.cs"];
m5_185 [label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': '''''' + containerTypeName + @'''''',\r\n  ''''In'''': {\r\n    ''''$type'''': '''''' + productListTypeName + @'''''',\r\n    ''''$values'''': []\r\n  },\r\n  ''''Out'''': {\r\n    ''''$type'''': '''''' + productListTypeName + @'''''',\r\n    ''''$values'''': []\r\n  }\r\n}'', json)", span="632-642", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="DiscriminatedUnionConverterTests.cs"];
m5_183 [label="Container container = new Container\r\n            {\r\n                In = new List<Product>(),\r\n                Out = new List<Product>()\r\n            }", span="616-620", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="DiscriminatedUnionConverterTests.cs"];
m5_184 [label="string json = JsonConvert.SerializeObject(container, Formatting.Indented,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    TypeNameHandling = TypeNameHandling.All,\r\n#pragma warning disable 618\r\n                    TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n#pragma warning restore 618\r\n                })", span="622-630", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="DiscriminatedUnionConverterTests.cs"];
m5_186 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", span="611-611", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="DiscriminatedUnionConverterTests.cs"];
m5_281 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", span="944-944", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_282 [label="HolderClass testObject = new HolderClass()", span="946-946", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_283 [label="testObject.TestMember = new ContentSubClass(''First One'')", span="947-947", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_284 [label="testObject.AnotherTestMember = new Dictionary<int, IList<ContentBaseClass>>()", span="948-948", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_285 [label="testObject.AnotherTestMember.Add(1, new List<ContentBaseClass>())", span="949-949", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_286 [label="testObject.AnotherTestMember[1].Add(new ContentSubClass(''Second One''))", span="950-950", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_287 [label="testObject.AThirdTestMember = new ContentSubClass(''Third One'')", span="951-951", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_294 [label="serializingTester.Serialize(jsonWriter, testObject)", span="961-961", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_288 [label="JsonSerializer serializingTester = new JsonSerializer()", span="953-953", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_289 [label="serializingTester.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="954-954", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_293 [label="serializingTester.TypeNameHandling = TypeNameHandling.Auto", span="960-960", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_290 [label="StringWriter sw = new StringWriter()", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_291 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="957-957", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_295 [label="string json = sw.ToString()", span="964-964", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_292 [label="jsonWriter.Formatting = Formatting.Indented", span="959-959", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_296 [label="string contentSubClassRef = ReflectionUtils.GetTypeName(typeof(ContentSubClass), TypeNameAssemblyFormatHandling.Simple, null)", span="966-966", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_300 [label="StringAssert.AreEqual(expected, json)", span="990-990", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_301 [label="StringReader sr = new StringReader(json)", span="992-992", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_297 [label="string dictionaryRef = ReflectionUtils.GetTypeName(typeof(Dictionary<int, IList<ContentBaseClass>>), TypeNameAssemblyFormatHandling.Simple, null)", span="967-967", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_299 [label="string expected = @''{\r\n  ''''TestMember'''': {\r\n    ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n    ''''SomeString'''': ''''First One''''\r\n  },\r\n  ''''AnotherTestMember'''': {\r\n    ''''$type'''': '''''' + dictionaryRef + @'''''',\r\n    ''''1'''': [\r\n      {\r\n        ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n        ''''SomeString'''': ''''Second One''''\r\n      }\r\n    ]\r\n  },\r\n  ''''AThirdTestMember'''': {\r\n    ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n    ''''SomeString'''': ''''Third One''''\r\n  }\r\n}''", span="970-988", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_298 [label="string listRef = ReflectionUtils.GetTypeName(typeof(List<ContentBaseClass>), TypeNameAssemblyFormatHandling.Simple, null)", span="968-968", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_302 [label="JsonSerializer deserializingTester = new JsonSerializer()", span="994-994", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_304 [label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="998-998", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_303 [label="HolderClass anotherTestObject", span="996-996", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_305 [label="deserializingTester.TypeNameHandling = TypeNameHandling.Auto", span="1000-1000", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_306 [label="anotherTestObject = deserializingTester.Deserialize<HolderClass>(jsonReader)", span="1002-1002", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_307 [label="Assert.IsNotNull(anotherTestObject)", span="1005-1005", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_308 [label="CustomAssert.IsInstanceOfType(typeof(ContentSubClass), anotherTestObject.TestMember)", span="1006-1006", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_309 [label="CustomAssert.IsInstanceOfType(typeof(Dictionary<int, IList<ContentBaseClass>>), anotherTestObject.AnotherTestMember)", span="1007-1007", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_310 [label="Assert.AreEqual(1, anotherTestObject.AnotherTestMember.Count)", span="1008-1008", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_311 [label="IList<ContentBaseClass> list = anotherTestObject.AnotherTestMember[1]", span="1010-1010", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_312 [label="CustomAssert.IsInstanceOfType(typeof(List<ContentBaseClass>), list)", span="1012-1012", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_313 [label="Assert.AreEqual(1, list.Count)", span="1013-1013", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_314 [label="CustomAssert.IsInstanceOfType(typeof(ContentSubClass), list[0])", span="1014-1014", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_315 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", span="944-944", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_405 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="1264-1264", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="DiscriminatedUnionConverterTests.cs"];
m5_406 [label="StringWriter writer = new StringWriter()", span="1266-1266", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="DiscriminatedUnionConverterTests.cs"];
m5_408 [label="serializer.TypeNameHandling = flag", span="1270-1270", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="DiscriminatedUnionConverterTests.cs"];
m5_409 [label="serializer.Serialize(new JsonTextWriter(writer), e)", span="1273-1273", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="DiscriminatedUnionConverterTests.cs"];
m5_411 [label="Assert.AreEqual(e, f, ''Objects should be equal after round trip json serialization'')", span="1282-1282", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="DiscriminatedUnionConverterTests.cs"];
m5_407 [label="JsonSerializer serializer = new JsonSerializer()", span="1269-1269", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="DiscriminatedUnionConverterTests.cs"];
m5_410 [label="SerializableWrapper f = serializer.Deserialize<SerializableWrapper>(new JsonTextReader(new StringReader(writer.ToString())))", span="1279-1279", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="DiscriminatedUnionConverterTests.cs"];
m5_412 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="1264-1264", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="DiscriminatedUnionConverterTests.cs"];
m5_472 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1431-1431", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_473 [label="TypeNameObject o1 = new TypeNameObject()", span="1433-1433", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_474 [label="o1.Object1 = new TestComponentSimple { MyProperty = 1 }", span="1435-1435", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_475 [label="o1.Object2 = 123", span="1436-1436", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_476 [label="o1.ObjectNotHandled = new TestComponentSimple { MyProperty = int.MaxValue }", span="1437-1437", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_477 [label="o1.String = ''String!''", span="1438-1438", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_478 [label="o1.Integer = int.MaxValue", span="1439-1439", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_479 [label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1441-1441", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_480 [label="string expected = @''{\r\n  ''''Object1'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Object2'''': 123,\r\n  ''''ObjectNotHandled'''': {\r\n    ''''MyProperty'''': 2147483647\r\n  },\r\n  ''''String'''': ''''String!'''',\r\n  ''''Integer'''': 2147483647\r\n}''", span="1442-1453", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_481 [label="StringAssert.AreEqual(expected, json)", span="1454-1454", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_482 [label="TypeNameObject o2 = JsonConvert.DeserializeObject<TypeNameObject>(json)", span="1456-1456", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_483 [label="Assert.IsNotNull(o2)", span="1457-1457", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_484 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), o2.Object1)", span="1459-1459", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_485 [label="Assert.AreEqual(1, ((TestComponentSimple)o2.Object1).MyProperty)", span="1460-1460", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_486 [label="CustomAssert.IsInstanceOfType(typeof(long), o2.Object2)", span="1461-1461", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_487 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o2.ObjectNotHandled)", span="1462-1462", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_488 [label="StringAssert.AreEqual(@''{\r\n  ''''MyProperty'''': 2147483647\r\n}'', o2.ObjectNotHandled.ToString())", span="1463-1465", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_489 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1431-1431", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="DiscriminatedUnionConverterTests.cs"];
m5_346 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="732-732", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="DiscriminatedUnionConverterTests.cs"];
m5_695 [label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m5_256 [label="Entry System.Type.GetType(string, bool)", span="0-0", cluster="System.Type.GetType(string, bool)", file="DiscriminatedUnionConverterTests.cs"];
m5_108 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="848-848", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="DiscriminatedUnionConverterTests.cs"];
m5_364 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", span="1162-1162", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="DiscriminatedUnionConverterTests.cs"];
m5_365 [label="count == 0", span="1164-1164", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="DiscriminatedUnionConverterTests.cs"];
m5_366 [label="yield break;", span="1166-1166", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="DiscriminatedUnionConverterTests.cs"];
m5_367 [label="yield return value;", span="1168-1168", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="DiscriminatedUnionConverterTests.cs"];
m5_371 [label="yield return nextInLine.value;", span="1175-1175", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="DiscriminatedUnionConverterTests.cs"];
m5_368 [label="var nextInLine = next", span="1170-1170", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="DiscriminatedUnionConverterTests.cs"];
m5_369 [label="nextInLine != null", span="1171-1171", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="DiscriminatedUnionConverterTests.cs"];
m5_370 [label="nextInLine.count != 0", span="1173-1173", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="DiscriminatedUnionConverterTests.cs"];
m5_372 [label="nextInLine = nextInLine.next", span="1177-1177", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="DiscriminatedUnionConverterTests.cs"];
m5_373 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", span="1162-1162", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="DiscriminatedUnionConverterTests.cs"];
m5_562 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", span="2231-2231", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_318 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DiscriminatedUnionConverterTests.cs"];
m5_492 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1469-1469", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_493 [label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling()", span="1471-1471", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_494 [label="c1.Data = new List<object>\r\n            {\r\n                1,\r\n                ''two'',\r\n                new TestComponentSimple { MyProperty = 1 }\r\n            }", span="1472-1477", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_495 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1479-1479", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_496 [label="StringAssert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    1,\r\n    ''''two'''',\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    }\r\n  ]\r\n}'', json)", span="1480-1489", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_497 [label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1491-1491", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_498 [label="Assert.AreEqual(3, c2.Data.Count)", span="1492-1492", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_499 [label="CustomAssert.IsInstanceOfType(typeof(long), c2.Data[0])", span="1494-1494", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_500 [label="CustomAssert.IsInstanceOfType(typeof(string), c2.Data[1])", span="1495-1495", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_501 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[2])", span="1496-1496", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_502 [label="TestComponentSimple c = (TestComponentSimple)c2.Data[2]", span="1497-1497", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_503 [label="Assert.AreEqual(1, c.MyProperty)", span="1498-1498", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_504 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1469-1469", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_505 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", span="2259-2259", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_110 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", span="360-360", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="DiscriminatedUnionConverterTests.cs"];
m5_111 [label="string cookieRef = ReflectionUtils.GetTypeName(typeof(Cookie), TypeNameAssemblyFormatHandling.Simple, null)", span="362-362", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="DiscriminatedUnionConverterTests.cs"];
m5_112 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + cookieRef + @''''''\r\n}''", span="364-367", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="DiscriminatedUnionConverterTests.cs"];
m5_113 [label="object cookie = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="369-372", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="DiscriminatedUnionConverterTests.cs"];
m5_114 [label="CustomAssert.IsInstanceOfType(typeof(Cookie), cookie)", span="374-374", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="DiscriminatedUnionConverterTests.cs"];
m5_115 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", span="360-360", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="DiscriminatedUnionConverterTests.cs"];
m5_347 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", span="1124-1124", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="DiscriminatedUnionConverterTests.cs"];
m5_348 [label="string productClassRef = ReflectionUtils.GetTypeName(typeof(CustomEnumerable<Product>), TypeNameAssemblyFormatHandling.Simple, null)", span="1126-1126", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="DiscriminatedUnionConverterTests.cs"];
m5_349 [label="CustomEnumerable<Product> products = new CustomEnumerable<Product>()", span="1128-1128", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="DiscriminatedUnionConverterTests.cs"];
m5_351 [label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': '''''' + productClassRef + @'''''',\r\n  ''''$values'''': []\r\n}'', json)", span="1132-1135", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="DiscriminatedUnionConverterTests.cs"];
m5_350 [label="string json = JsonConvert.SerializeObject(products, Formatting.Indented, new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All })", span="1130-1130", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="DiscriminatedUnionConverterTests.cs"];
m5_352 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", span="1124-1124", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="DiscriminatedUnionConverterTests.cs"];
m5_592 [label="Entry Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", span="958-958", cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_700 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="DiscriminatedUnionConverterTests.cs"];
m5_316 [label="Entry Newtonsoft.Json.Tests.TestObjects.HolderClass.HolderClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.HolderClass.HolderClass()", file="DiscriminatedUnionConverterTests.cs"];
m5_740 [label="Entry Newtonsoft.Json.Tests.Serialization.GroupingInfo.GroupingInfo()", span="2295-2295", cluster="Newtonsoft.Json.Tests.Serialization.GroupingInfo.GroupingInfo()", file="DiscriminatedUnionConverterTests.cs"];
m5_741 [label="ItemIdentifier = new ApplicationItemKeys()", span="2297-2297", cluster="Newtonsoft.Json.Tests.Serialization.GroupingInfo.GroupingInfo()", file="DiscriminatedUnionConverterTests.cs"];
m5_742 [label="Exit Newtonsoft.Json.Tests.Serialization.GroupingInfo.GroupingInfo()", span="2295-2295", cluster="Newtonsoft.Json.Tests.Serialization.GroupingInfo.GroupingInfo()", file="DiscriminatedUnionConverterTests.cs"];
m5_732 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="DiscriminatedUnionConverterTests.cs"];
m5_0 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KnownAutoTypesTest()", span="75-75", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KnownAutoTypesTest()", file="DiscriminatedUnionConverterTests.cs"];
m5_1 [label="KnownAutoTypes c = new KnownAutoTypes\r\n            {\r\n                Collection = new List<string> { ''Collection value!'' },\r\n                List = new List<string> { ''List value!'' },\r\n                Dictionary = new Dictionary<string, string>\r\n                {\r\n                    { ''Dictionary key!'', ''Dictionary value!'' }\r\n                },\r\n                ReadOnlyCollection = new ReadOnlyCollection<string>(new[] { ''Read Only Collection value!'' }),\r\n                ReadOnlyList = new ReadOnlyCollection<string>(new[] { ''Read Only List value!'' }),\r\n                Set = new HashSet<string> { ''Set value!'' },\r\n                ReadOnlyDictionary = new ReadOnlyDictionary<string, string>(new Dictionary<string, string>\r\n                {\r\n                    { ''Read Only Dictionary key!'', ''Read Only Dictionary value!'' }\r\n                })\r\n            }", span="77-92", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KnownAutoTypesTest()", file="DiscriminatedUnionConverterTests.cs"];
m5_2 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="94-97", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KnownAutoTypesTest()", file="DiscriminatedUnionConverterTests.cs"];
m5_3 [label="StringAssert.AreEqual(@''{\r\n  ''''Collection'''': [\r\n    ''''Collection value!''''\r\n  ],\r\n  ''''List'''': [\r\n    ''''List value!''''\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''Dictionary key!'''': ''''Dictionary value!''''\r\n  },\r\n  ''''Set'''': [\r\n    ''''Set value!''''\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    ''''Read Only Collection value!''''\r\n  ],\r\n  ''''ReadOnlyList'''': [\r\n    ''''Read Only List value!''''\r\n  ],\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''Read Only Dictionary key!'''': ''''Read Only Dictionary value!''''\r\n  }\r\n}'', json)", span="99-121", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KnownAutoTypesTest()", file="DiscriminatedUnionConverterTests.cs"];
m5_4 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KnownAutoTypesTest()", span="75-75", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KnownAutoTypesTest()", file="DiscriminatedUnionConverterTests.cs"];
m5_64 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_47 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="838-838", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="DiscriminatedUnionConverterTests.cs"];
m5_396 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="1242-1242", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="DiscriminatedUnionConverterTests.cs"];
m5_397 [label="IExample e = new Example(''Rob'')", span="1245-1245", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="DiscriminatedUnionConverterTests.cs"];
m5_398 [label="SerializableWrapper w = new SerializableWrapper\r\n            {\r\n                Content = e\r\n            }", span="1247-1250", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="DiscriminatedUnionConverterTests.cs"];
m5_399 [label="TestJsonSerializationRoundTrip(w, TypeNameHandling.All)", span="1259-1259", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="DiscriminatedUnionConverterTests.cs"];
m5_400 [label="TestJsonSerializationRoundTrip(w, TypeNameHandling.Auto)", span="1260-1260", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="DiscriminatedUnionConverterTests.cs"];
m5_401 [label="TestJsonSerializationRoundTrip(w, TypeNameHandling.Objects)", span="1261-1261", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="DiscriminatedUnionConverterTests.cs"];
m5_402 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="1242-1242", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="DiscriminatedUnionConverterTests.cs"];
m5_374 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="1181-1181", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="DiscriminatedUnionConverterTests.cs"];
m5_375 [label="return GetEnumerator();", span="1183-1183", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="DiscriminatedUnionConverterTests.cs"];
m5_376 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="1181-1181", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="DiscriminatedUnionConverterTests.cs"];
m5_81 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", span="278-278", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="DiscriminatedUnionConverterTests.cs"];
m5_82 [label="Wrapper wrapper = new Wrapper()", span="280-280", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="DiscriminatedUnionConverterTests.cs"];
m5_83 [label="wrapper.Array = new List<EmployeeReference>\r\n            {\r\n                new EmployeeReference()\r\n            }", span="281-284", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="DiscriminatedUnionConverterTests.cs"];
m5_84 [label="wrapper.Dictionary = new Dictionary<string, EmployeeReference>\r\n            {\r\n                { ''First'', new EmployeeReference() }\r\n            }", span="285-288", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="DiscriminatedUnionConverterTests.cs"];
m5_85 [label="string json = JsonConvert.SerializeObject(wrapper, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="290-293", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="DiscriminatedUnionConverterTests.cs"];
m5_86 [label="StringAssert.AreEqual(@''{\r\n  ''''Array'''': [\r\n    {\r\n      ''''$id'''': ''''1'''',\r\n      ''''Name'''': null,\r\n      ''''Manager'''': null\r\n    }\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''First'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''Name'''': null,\r\n      ''''Manager'''': null\r\n    }\r\n  }\r\n}'', json)", span="295-310", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="DiscriminatedUnionConverterTests.cs"];
m5_87 [label="Wrapper w2 = JsonConvert.DeserializeObject<Wrapper>(json)", span="312-312", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="DiscriminatedUnionConverterTests.cs"];
m5_88 [label="CustomAssert.IsInstanceOfType(typeof(List<EmployeeReference>), w2.Array)", span="313-313", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="DiscriminatedUnionConverterTests.cs"];
m5_89 [label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, EmployeeReference>), w2.Dictionary)", span="314-314", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="DiscriminatedUnionConverterTests.cs"];
m5_90 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", span="278-278", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="DiscriminatedUnionConverterTests.cs"];
m5_720 [label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2192-2192", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverterTests.cs"];
m5_721 [label="info.AddValue(''name'', Name)", span="2194-2194", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverterTests.cs"];
m5_722 [label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2192-2192", cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverterTests.cs"];
m5_43 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="DiscriminatedUnionConverterTests.cs"];
m5_506 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1502-1502", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_507 [label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling\r\n            {\r\n                Data = new List<object>\r\n                {\r\n                    new TestComponentSimple { MyProperty = 1 },\r\n                    new List<object>\r\n                    {\r\n                        new List<object>\r\n                        {\r\n                            new List<object>()\r\n                        }\r\n                    }\r\n                }\r\n            }", span="1504-1517", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_508 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1519-1519", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_509 [label="StringAssert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="1520-1535", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_510 [label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1537-1537", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_511 [label="Assert.AreEqual(2, c2.Data.Count)", span="1538-1538", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_512 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[0])", span="1540-1540", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_513 [label="CustomAssert.IsInstanceOfType(typeof(List<object>), c2.Data[1])", span="1541-1541", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_514 [label="List<object> c = (List<object>)c2.Data[1]", span="1542-1542", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_515 [label="CustomAssert.IsInstanceOfType(typeof(JArray), c[0])", span="1543-1543", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_516 [label="json = @''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="1545-1561", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_517 [label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1563-1563", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_518 [label="Assert.AreEqual(2, c2.Data.Count)", span="1564-1564", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_519 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[0])", span="1566-1566", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_520 [label="CustomAssert.IsInstanceOfType(typeof(List<object>), c2.Data[1])", span="1567-1567", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_521 [label="c = (List<object>)c2.Data[1]", span="1568-1568", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_522 [label="CustomAssert.IsInstanceOfType(typeof(JObject), c[0])", span="1569-1569", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_523 [label="JObject o = (JObject)c[0]", span="1570-1570", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_524 [label="Assert.AreEqual(1, (int)o[''MyProperty''])", span="1571-1571", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_525 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1502-1502", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="DiscriminatedUnionConverterTests.cs"];
m5_179 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="DiscriminatedUnionConverterTests.cs"];
m5_149 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_187 [label="Entry Newtonsoft.Json.Tests.TestObjects.Container.Container()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Container.Container()", file="DiscriminatedUnionConverterTests.cs"];
m5_19 [label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="DiscriminatedUnionConverterTests.cs"];
m5_80 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="604-604", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="DiscriminatedUnionConverterTests.cs"];
m5_605 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="585-585", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="DiscriminatedUnionConverterTests.cs"];
m5_270 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.NewTypeNameSerializationBinder(string)", span="924-924", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.NewTypeNameSerializationBinder(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_271 [label="TypeFormat = typeFormat", span="926-926", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.NewTypeNameSerializationBinder(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_272 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.NewTypeNameSerializationBinder(string)", span="924-924", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.NewTypeNameSerializationBinder(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_101 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", span="338-338", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_102 [label="string employeeRef = ReflectionUtils.GetTypeName(typeof(EmployeeReference), TypeNameAssemblyFormatHandling.Simple, null)", span="340-340", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_103 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="342-347", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_104 [label="object employee = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="349-352", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_105 [label="CustomAssert.IsInstanceOfType(typeof(EmployeeReference), employee)", span="354-354", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_106 [label="Assert.AreEqual(''Name!'', ((EmployeeReference)employee).Name)", span="355-355", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_107 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", span="338-338", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_546 [label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", span="2253-2253", cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_457 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1404-1404", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_458 [label="TypeNameDictionary<object> l = new TypeNameDictionary<object>()", span="1406-1406", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_459 [label="l.Add(''First'', new TestComponentSimple { MyProperty = 1 })", span="1407-1407", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_460 [label="l.Add(''Second'', ''String!'')", span="1408-1408", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_461 [label="l.Add(''Third'', long.MaxValue)", span="1409-1409", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_462 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1411-1411", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_463 [label="StringAssert.AreEqual(@''{\r\n  ''''First'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Second'''': ''''String!'''',\r\n  ''''Third'''': 9223372036854775807\r\n}'', json)", span="1412-1419", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_464 [label="TypeNameDictionary<object> l2 = JsonConvert.DeserializeObject<TypeNameDictionary<object>>(json)", span="1421-1421", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_465 [label="Assert.AreEqual(3, l2.Count)", span="1422-1422", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_466 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), l2[''First''])", span="1424-1424", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_467 [label="Assert.AreEqual(1, ((TestComponentSimple)l2[''First'']).MyProperty)", span="1425-1425", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_468 [label="CustomAssert.IsInstanceOfType(typeof(string), l2[''Second''])", span="1426-1426", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_469 [label="CustomAssert.IsInstanceOfType(typeof(long), l2[''Third''])", span="1427-1427", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_470 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1404-1404", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_413 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="1288-1288", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="DiscriminatedUnionConverterTests.cs"];
m5_414 [label="Message message = new Message\r\n            {\r\n                Address = ''jamesnk@testtown.com'',\r\n                Body = new Version(1, 2, 3, 4)\r\n            }", span="1290-1294", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="DiscriminatedUnionConverterTests.cs"];
m5_415 [label="string json = JsonConvert.SerializeObject(message, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All,\r\n#pragma warning disable CS0618 // Type or member is obsolete\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full,\r\n                Binder = new MetroBinder(),\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n                ContractResolver = new DefaultContractResolver\r\n                {\r\n#if !(PORTABLE || DNXCORE50)\r\n                    IgnoreSerializableAttribute = true\r\n#endif\r\n                }\r\n            })", span="1296-1309", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="DiscriminatedUnionConverterTests.cs"];
m5_416 [label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': '''':::MESSAGE:::, AssemblyName'''',\r\n  ''''Address'''': ''''jamesnk@testtown.com'''',\r\n  ''''Body'''': {\r\n    ''''$type'''': '''':::VERSION:::, AssemblyName'''',\r\n    ''''Major'''': 1,\r\n    ''''Minor'''': 2,\r\n    ''''Build'''': 3,\r\n    ''''Revision'''': 4,\r\n    ''''MajorRevision'''': 0,\r\n    ''''MinorRevision'''': 4\r\n  }\r\n}'', json)", span="1311-1323", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="DiscriminatedUnionConverterTests.cs"];
m5_417 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="1288-1288", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="DiscriminatedUnionConverterTests.cs"];
m5_672 [label="Entry Newtonsoft.Json.Tests.Serialization.DataType.DataType()", span="2057-2057", cluster="Newtonsoft.Json.Tests.Serialization.DataType.DataType()", file="DiscriminatedUnionConverterTests.cs"];
m5_690 [label="Rows = new Dictionary<string, IEnumerable<IMyInterfaceType>>()", span="2059-2059", cluster="Newtonsoft.Json.Tests.Serialization.DataType.DataType()", file="DiscriminatedUnionConverterTests.cs"];
m5_691 [label="Exit Newtonsoft.Json.Tests.Serialization.DataType.DataType()", span="2057-2057", cluster="Newtonsoft.Json.Tests.Serialization.DataType.DataType()", file="DiscriminatedUnionConverterTests.cs"];
m5_428 [label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0", cluster="string.ToUpper(System.Globalization.CultureInfo)", file="DiscriminatedUnionConverterTests.cs"];
m5_169 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", span="577-577", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_170 [label="string typeName = typeof(SendHttpRequest).AssemblyQualifiedName", span="579-579", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_171 [label="string json = @''{\r\n''''$type'''': '''''' + typeName + @'''''',\r\n''''RequestData'''': {\r\n''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib,Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'''',\r\n''''Id'''': ''''siedemnaście'''',\r\n''''X'''': ''''323''''\r\n},\r\n''''Method'''': ''''GET'''',\r\n''''Url'''': ''''http://www.onet.pl'''',\r\n''''RequestEncoding'''': ''''UTF-8'''',\r\n''''CorrelationId'''': ''''xyz''''\r\n}''", span="581-592", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_172 [label="ICorrelatedMessage message = JsonConvert.DeserializeObject<ICorrelatedMessage>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n#pragma warning disable 618\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n#pragma warning restore 618\r\n            })", span="594-600", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_173 [label="CustomAssert.IsInstanceOfType(typeof(SendHttpRequest), message)", span="602-602", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_174 [label="SendHttpRequest request = (SendHttpRequest)message", span="604-604", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_175 [label="Assert.AreEqual(''xyz'', request.CorrelationId)", span="605-605", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_176 [label="Assert.AreEqual(2, request.RequestData.Count)", span="606-606", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_177 [label="Assert.AreEqual(''siedemnaście'', request.RequestData[''Id''])", span="607-607", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_178 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", span="577-577", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_12 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="621-621", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="DiscriminatedUnionConverterTests.cs"];
m5_377 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", span="1201-1201", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_378 [label="Car testerObject = new Car()", span="1203-1203", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_379 [label="testerObject.Year = new DateTime(2000, 10, 5, 1, 1, 1, DateTimeKind.Utc)", span="1204-1204", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_381 [label="testerObject.Objects = new object[] { data, ''prueba'' }", span="1206-1206", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_385 [label="string output = JsonConvert.SerializeObject(testerObject, Formatting.Indented, jsonSettings)", span="1212-1212", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_380 [label="byte[] data = new byte[] { 75, 65, 82, 73, 82, 65 }", span="1205-1205", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_392 [label="CollectionAssert.AreEquivalent(data, d)", span="1237-1237", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_382 [label="JsonSerializerSettings jsonSettings = new JsonSerializerSettings()", span="1208-1208", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_383 [label="jsonSettings.NullValueHandling = NullValueHandling.Ignore", span="1209-1209", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_384 [label="jsonSettings.TypeNameHandling = TypeNameHandling.All", span="1210-1210", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_388 [label="Car obj = JsonConvert.DeserializeObject<Car>(output, jsonSettings)", span="1230-1230", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_386 [label="string carClassRef = ReflectionUtils.GetTypeName(typeof(Car), TypeNameAssemblyFormatHandling.Simple, null)", span="1214-1214", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_387 [label="StringAssert.AreEqual(output, @''{\r\n  ''''$type'''': '''''' + carClassRef + @'''''',\r\n  ''''Year'''': ''''2000-10-05T01:01:01Z'''',\r\n  ''''Objects'''': {\r\n    ''''$type'''': ''''System.Object[], mscorlib'''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n        ''''$value'''': ''''S0FSSVJB''''\r\n      },\r\n      ''''prueba''''\r\n    ]\r\n  }\r\n}'')", span="1216-1229", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_389 [label="Assert.IsNotNull(obj)", span="1232-1232", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_390 [label="Assert.IsTrue(obj.Objects[0] is byte[])", span="1234-1234", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_391 [label="byte[] d = (byte[])obj.Objects[0]", span="1236-1236", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_393 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", span="1201-1201", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="DiscriminatedUnionConverterTests.cs"];
m5_157 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="DiscriminatedUnionConverterTests.cs"];
m5_652 [label="Entry System.Collections.Generic.Stack<T>.Stack(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack(System.Collections.Generic.IEnumerable<T>)", file="DiscriminatedUnionConverterTests.cs"];
m5_91 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Wrapper.Wrapper()", span="271-271", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Wrapper.Wrapper()", file="DiscriminatedUnionConverterTests.cs"];
m5_200 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", span="645-645", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_320 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="DiscriminatedUnionConverterTests.cs"];
m5_46 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="529-529", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="DiscriminatedUnionConverterTests.cs"];
m5_72 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic()", span="244-244", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic()", file="DiscriminatedUnionConverterTests.cs"];
m5_73 [label="string json = JsonConvert.SerializeObject(new WagePerson(), typeof(object), Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="246-249", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic()", file="DiscriminatedUnionConverterTests.cs"];
m5_74 [label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n  ''''HourlyWage'''': 0.0,\r\n  ''''Name'''': null,\r\n  ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n  ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n}'', json)", span="251-257", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic()", file="DiscriminatedUnionConverterTests.cs"];
m5_75 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic()", span="244-244", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert_Generic()", file="DiscriminatedUnionConverterTests.cs"];
m5_116 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", span="379-379", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_117 [label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="381-381", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_118 [label="string personRef = typeof(Person).AssemblyQualifiedName", span="382-382", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_121 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''2000-12-30T00:00:00Z'''',\r\n    ''''LastModified'''': ''''2000-12-30T00:00:00Z''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]'', json)", span="409-429", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_119 [label="List<object> values = new List<object>\r\n            {\r\n                new EmployeeReference\r\n                {\r\n                    Name = ''Bob'',\r\n                    Manager = new EmployeeReference { Name = ''Frank'' }\r\n                },\r\n                new Person\r\n                {\r\n                    Department = ''Department'',\r\n                    BirthDate = new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc),\r\n                    LastModified = new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc)\r\n                },\r\n                ''String!'',\r\n                int.MinValue\r\n            }", span="384-399", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_120 [label="string json = JsonConvert.SerializeObject(values, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n#pragma warning disable 618\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n#pragma warning restore 618\r\n            })", span="401-407", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_122 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", span="379-379", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="DiscriminatedUnionConverterTests.cs"];
m5_345 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.UrlStatus.UrlStatus()", span="1044-1044", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.UrlStatus.UrlStatus()", file="DiscriminatedUnionConverterTests.cs"];
m5_438 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="DiscriminatedUnionConverterTests.cs"];
m5_593 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="1783-1783", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="DiscriminatedUnionConverterTests.cs"];
m5_594 [label="string contextKey = ''k1''", span="1785-1785", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="DiscriminatedUnionConverterTests.cs"];
m5_595 [label="var someValue = new Guid(''a6e986df-fc2c-4906-a1ef-9492388f7833'')", span="1786-1786", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="DiscriminatedUnionConverterTests.cs"];
m5_597 [label="inputContext.Add(contextKey, someValue)", span="1789-1789", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="DiscriminatedUnionConverterTests.cs"];
m5_602 [label="Assert.AreEqual(someValue, deserializedObject[contextKey])", span="1805-1805", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="DiscriminatedUnionConverterTests.cs"];
m5_596 [label="Dictionary<string, Guid> inputContext = new Dictionary<string, Guid>()", span="1788-1788", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="DiscriminatedUnionConverterTests.cs"];
m5_599 [label="string serializedString = JsonConvert.SerializeObject(inputContext, jsonSerializerSettings)", span="1796-1796", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="DiscriminatedUnionConverterTests.cs"];
m5_598 [label="JsonSerializerSettings jsonSerializerSettings = new JsonSerializerSettings()\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                TypeNameHandling = TypeNameHandling.All\r\n            }", span="1791-1795", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="DiscriminatedUnionConverterTests.cs"];
m5_601 [label="var deserializedObject = (Dictionary<string, Guid>)JsonConvert.DeserializeObject(serializedString, jsonSerializerSettings)", span="1803-1803", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="DiscriminatedUnionConverterTests.cs"];
m5_600 [label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Guid, mscorlib]], mscorlib'''',\r\n  ''''k1'''': ''''a6e986df-fc2c-4906-a1ef-9492388f7833''''\r\n}'', serializedString)", span="1798-1801", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="DiscriminatedUnionConverterTests.cs"];
m5_603 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="1783-1783", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="DiscriminatedUnionConverterTests.cs"];
m5_9 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="DiscriminatedUnionConverterTests.cs"];
m5_682 [label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="DiscriminatedUnionConverterTests.cs"];
m5_150 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", span="514-514", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_151 [label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="516-516", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_152 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="518-523", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_153 [label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="525-525", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_154 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}'', o.ToString())", span="527-530", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_155 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", span="514-514", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="DiscriminatedUnionConverterTests.cs"];
m5_419 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", span="1326-1326", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_563 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", span="2245-2245", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_7 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DiscriminatedUnionConverterTests.cs"];
m5_109 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="DiscriminatedUnionConverterTests.cs"];
m5_395 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="DiscriminatedUnionConverterTests.cs"];
m5_71 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="641-641", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, System.Type, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="DiscriminatedUnionConverterTests.cs"];
m5_257 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", span="855-855", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_258 [label="NewTypeNameSerializationBinder binder = new NewTypeNameSerializationBinder(''Newtonsoft.Json.Tests.Serialization.{0}, Newtonsoft.Json.Tests'')", span="857-857", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_259 [label="IList<object> values = new List<object>\r\n            {\r\n                new Customer\r\n                {\r\n                    Name = ''Caroline Customer''\r\n                },\r\n                new Purchase\r\n                {\r\n                    ProductName = ''Elbow Grease'',\r\n                    Price = 5.99m,\r\n                    Quantity = 1\r\n                }\r\n            }", span="859-871", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_260 [label="string json = JsonConvert.SerializeObject(values, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                SerializationBinder = binder\r\n            })", span="873-877", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_261 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$type'''': ''''Customer'''',\r\n    ''''Name'''': ''''Caroline Customer''''\r\n  },\r\n  {\r\n    ''''$type'''': ''''Purchase'''',\r\n    ''''ProductName'''': ''''Elbow Grease'''',\r\n    ''''Price'''': 5.99,\r\n    ''''Quantity'''': 1\r\n  }\r\n]'', json)", span="892-903", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_262 [label="IList<object> newValues = JsonConvert.DeserializeObject<IList<object>>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto,\r\n                SerializationBinder = new NewTypeNameSerializationBinder(''Newtonsoft.Json.Tests.Serialization.{0}, Newtonsoft.Json.Tests'')\r\n            })", span="905-909", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_263 [label="CustomAssert.IsInstanceOfType(typeof(Customer), newValues[0])", span="911-911", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_264 [label="Customer customer = (Customer)newValues[0]", span="912-912", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_266 [label="CustomAssert.IsInstanceOfType(typeof(Purchase), newValues[1])", span="915-915", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_267 [label="Purchase purchase = (Purchase)newValues[1]", span="916-916", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_265 [label="Assert.AreEqual(''Caroline Customer'', customer.Name)", span="913-913", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_268 [label="Assert.AreEqual(''Elbow Grease'', purchase.ProductName)", span="917-917", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_269 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", span="855-855", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewSerializeUsingCustomBinder()", file="DiscriminatedUnionConverterTests.cs"];
m5_321 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="DiscriminatedUnionConverterTests.cs"];
m5_421 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", span="1328-1328", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", file="DiscriminatedUnionConverterTests.cs"];
m5_422 [label="return null;", span="1330-1330", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", file="DiscriminatedUnionConverterTests.cs"];
m5_423 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", span="1328-1328", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToType(string, string)", file="DiscriminatedUnionConverterTests.cs"];
m5_319 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="DiscriminatedUnionConverterTests.cs"];
m5_247 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", span="839-839", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="DiscriminatedUnionConverterTests.cs"];
m5_248 [label="assemblyName = null", span="841-841", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="DiscriminatedUnionConverterTests.cs"];
m5_249 [label="typeName = serializedType.Name", span="842-842", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="DiscriminatedUnionConverterTests.cs"];
m5_250 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", span="839-839", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="DiscriminatedUnionConverterTests.cs"];
m5_158 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", span="534-534", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="DiscriminatedUnionConverterTests.cs"];
m5_159 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="536-541", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="DiscriminatedUnionConverterTests.cs"];
m5_160 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                });\r\n            }, ''Type specified in JSON 'Newtonsoft.Json.Tests.TestObjects.Employee' was not resolved. Path '$type', line 3, position 55.'')", span="543-549", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="DiscriminatedUnionConverterTests.cs"];
m5_161 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", span="534-534", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="DiscriminatedUnionConverterTests.cs"];
m5_242 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", span="834-834", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_245 [label="TypeFormat = typeFormat", span="836-836", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_246 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", span="834-834", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_353 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="1152-1152", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="DiscriminatedUnionConverterTests.cs"];
m5_359 [label="count = 0", span="1154-1154", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="DiscriminatedUnionConverterTests.cs"];
m5_360 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="1152-1152", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="DiscriminatedUnionConverterTests.cs"];
m5_165 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", span="559-559", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", file="DiscriminatedUnionConverterTests.cs"];
m5_166 [label="RequestEncoding = ''UTF-8''", span="561-561", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", file="DiscriminatedUnionConverterTests.cs"];
m5_167 [label="Method = ''GET''", span="562-562", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", file="DiscriminatedUnionConverterTests.cs"];
m5_168 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", span="559-559", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest.SendHttpRequest()", file="DiscriminatedUnionConverterTests.cs"];
m5_60 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="DiscriminatedUnionConverterTests.cs"];
m5_13 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="321-321", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="DiscriminatedUnionConverterTests.cs"];
m5_655 [label="Entry lambda expression", span="1944-1944", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m5_38 [label="var reader = new JsonTextReader(new StringReader(sb.ToString()))", span="191-191", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m5_37 [label="Entry lambda expression", span="189-195", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m5_39 [label="var ser = new JsonSerializer()", span="192-192", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m5_41 [label="ser.Deserialize<sbyte>(reader)", span="194-194", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m5_40 [label="ser.MetadataPropertyHandling = MetadataPropertyHandling.Default", span="193-193", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m5_42 [label="Exit lambda expression", span="189-195", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m5_163 [label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                })", span="545-548", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m5_162 [label="Entry lambda expression", span="543-549", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m5_164 [label="Exit lambda expression", span="543-549", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m5_656 [label=s, span="1944-1944", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m5_657 [label="Exit lambda expression", span="1944-1944", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m5_654 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="DiscriminatedUnionConverterTests.cs"];
m5_67 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", span="227-227", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="DiscriminatedUnionConverterTests.cs"];
m5_68 [label="string json = JsonConvert.SerializeObject(new WagePerson(), typeof(object), Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="229-232", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="DiscriminatedUnionConverterTests.cs"];
m5_69 [label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n  ''''HourlyWage'''': 0.0,\r\n  ''''Name'''': null,\r\n  ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n  ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n}'', json)", span="234-240", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="DiscriminatedUnionConverterTests.cs"];
m5_70 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", span="227-227", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeRootTypeNameAutoWithJsonConvert()", file="DiscriminatedUnionConverterTests.cs"];
m5_188 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", span="654-654", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_189 [label="string typeNamePropertyRef = ReflectionUtils.GetTypeName(typeof(TypeNameProperty), TypeNameAssemblyFormatHandling.Simple, null)", span="656-656", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_190 [label="TypeNameProperty typeNameProperty = new TypeNameProperty\r\n            {\r\n                Name = ''Name!'',\r\n                Value = new TypeNameProperty\r\n                {\r\n                    Name = ''Nested!''\r\n                }\r\n            }", span="658-665", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_192 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + typeNamePropertyRef + @'''''',\r\n    ''''Name'''': ''''Nested!'''',\r\n    ''''Value'''': null\r\n  }\r\n}'', json)", span="669-676", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_191 [label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="667-667", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_193 [label="TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameProperty>(json)", span="678-678", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_194 [label="Assert.AreEqual(''Name!'', deserialized.Name)", span="679-679", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_195 [label="CustomAssert.IsInstanceOfType(typeof(TypeNameProperty), deserialized.Value)", span="680-680", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_196 [label="TypeNameProperty nested = (TypeNameProperty)deserialized.Value", span="682-682", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_197 [label="Assert.AreEqual(''Nested!'', nested.Name)", span="683-683", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_198 [label="Assert.AreEqual(null, nested.Value)", span="684-684", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_199 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", span="654-654", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="DiscriminatedUnionConverterTests.cs"];
m5_429 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1346-1346", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="DiscriminatedUnionConverterTests.cs"];
m5_430 [label="TypeNameList<int> l = new TypeNameList<int>()", span="1348-1348", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="DiscriminatedUnionConverterTests.cs"];
m5_431 [label="l.Add(1)", span="1349-1349", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="DiscriminatedUnionConverterTests.cs"];
m5_432 [label="l.Add(2)", span="1350-1350", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="DiscriminatedUnionConverterTests.cs"];
m5_433 [label="l.Add(3)", span="1351-1351", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="DiscriminatedUnionConverterTests.cs"];
m5_434 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1353-1353", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="DiscriminatedUnionConverterTests.cs"];
m5_435 [label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="1354-1358", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="DiscriminatedUnionConverterTests.cs"];
m5_436 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1346-1346", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="DiscriminatedUnionConverterTests.cs"];
m5_66 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="296-296", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="DiscriminatedUnionConverterTests.cs"];
m5_44 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_94 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", span="318-318", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="DiscriminatedUnionConverterTests.cs"];
m5_95 [label="string employeeRef = ReflectionUtils.GetTypeName(typeof(EmployeeReference), TypeNameAssemblyFormatHandling.Simple, null)", span="320-320", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="DiscriminatedUnionConverterTests.cs"];
m5_96 [label="EmployeeReference employee = new EmployeeReference()", span="322-322", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="DiscriminatedUnionConverterTests.cs"];
m5_98 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': null,\r\n  ''''Manager'''': null\r\n}'', json)", span="329-334", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="DiscriminatedUnionConverterTests.cs"];
m5_97 [label="string json = JsonConvert.SerializeObject(employee, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="324-327", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="DiscriminatedUnionConverterTests.cs"];
m5_99 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", span="318-318", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="DiscriminatedUnionConverterTests.cs"];
m5_14 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", span="126-126", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_15 [label="Dictionary<string, object> dic = new Dictionary<string, object>\r\n            {\r\n                { ''movie'', new Movie { Name = ''Die Hard'' } }\r\n            }", span="128-131", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_16 [label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="133-136", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_17 [label="StringAssert.AreEqual(@''{\r\n  ''''movie'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Movie, Newtonsoft.Json.Tests'''',\r\n    ''''Name'''': ''''Die Hard'''',\r\n    ''''Description'''': null,\r\n    ''''Classification'''': null,\r\n    ''''Studio'''': null,\r\n    ''''ReleaseDate'''': null,\r\n    ''''ReleaseCountries'''': null\r\n  }\r\n}'', json)", span="138-148", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_18 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", span="126-126", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DictionaryAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_565 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1709-1709", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_566 [label="PropertyItemTypeNameHandlingDynamic d1 = new PropertyItemTypeNameHandlingDynamic()", span="1711-1711", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_567 [label="dynamic data = new DynamicDictionary()", span="1713-1713", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_572 [label="d1.Data = (DynamicDictionary)data", span="1727-1727", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_573 [label="string json = JsonConvert.SerializeObject(d1, Formatting.Indented)", span="1729-1729", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_568 [label="data.one = new TestComponentSimple\r\n            {\r\n                MyProperty = 1\r\n            }", span="1714-1717", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_571 [label="data.two = data2", span="1725-1725", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_569 [label="dynamic data2 = new DynamicDictionary()", span="1719-1719", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_570 [label="data2.one = new TestComponentSimple\r\n            {\r\n                MyProperty = 2\r\n            }", span="1720-1723", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_574 [label="StringAssert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1730-1743", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_575 [label="PropertyItemTypeNameHandlingDynamic d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1745-1745", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_576 [label="Assert.IsNotNull(d2)", span="1746-1746", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_577 [label="Assert.IsNotNull(d2.Data)", span="1747-1747", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_578 [label="dynamic data3 = d2.Data", span="1749-1749", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_579 [label="TestComponentSimple c = (TestComponentSimple)data3.one", span="1750-1750", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_581 [label="dynamic data4 = data3.two", span="1753-1753", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_580 [label="Assert.AreEqual(1, c.MyProperty)", span="1751-1751", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_582 [label="JObject o = (JObject)data4.one", span="1754-1754", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_583 [label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1755-1755", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_584 [label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}''", span="1757-1771", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_585 [label="d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1773-1773", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_586 [label="data3 = d2.Data", span="1774-1774", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_587 [label="data4 = data3.two", span="1775-1775", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_588 [label="o = (JObject)data4.one", span="1776-1776", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_589 [label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1777-1777", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_590 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1709-1709", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="DiscriminatedUnionConverterTests.cs"];
m5_418 [label="Entry System.Version.Version(int, int, int, int)", span="0-0", cluster="System.Version.Version(int, int, int, int)", file="DiscriminatedUnionConverterTests.cs"];
m5_627 [label="Entry Newtonsoft.Json.Tests.Serialization.MyChildList.MyChildList()", span="2109-2109", cluster="Newtonsoft.Json.Tests.Serialization.MyChildList.MyChildList()", file="DiscriminatedUnionConverterTests.cs"];
m5_653 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="DiscriminatedUnionConverterTests.cs"];
m5_100 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="153-153", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="DiscriminatedUnionConverterTests.cs"];
m5_6 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="DiscriminatedUnionConverterTests.cs"];
m5_616 [label="Entry Newtonsoft.Json.Tests.Serialization.MyChild.MyChild()", span="2103-2103", cluster="Newtonsoft.Json.Tests.Serialization.MyChild.MyChild()", file="DiscriminatedUnionConverterTests.cs"];
m5_639 [label="Entry Newtonsoft.Json.Tests.Serialization.ParentParent.ParentParent()", span="2077-2077", cluster="Newtonsoft.Json.Tests.Serialization.ParentParent.ParentParent()", file="DiscriminatedUnionConverterTests.cs"];
m5_615 [label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", span="2093-2093", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", file="DiscriminatedUnionConverterTests.cs"];
m5_696 [label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", span="2093-2093", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent()", file="DiscriminatedUnionConverterTests.cs"];
m5_59 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="DiscriminatedUnionConverterTests.cs"];
m5_628 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", span="1882-1882", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_629 [label="ParentParent pp = new ParentParent()", span="1884-1884", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_630 [label="pp.ParentProp = new MyParent\r\n            {\r\n                Child = new MyChild\r\n                {\r\n                    MyProperty = ''string!''\r\n                }\r\n            }", span="1886-1892", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_632 [label="string json = JsonConvert.SerializeObject(pp, settings)", span="1903-1903", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_631 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n                MissingMemberHandling = MissingMemberHandling.Ignore,\r\n                DefaultValueHandling = DefaultValueHandling.Ignore,\r\n                NullValueHandling = NullValueHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            }", span="1894-1901", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_634 [label="ParentParent pp2 = JsonConvert.DeserializeObject<ParentParent>(json, settings)", span="1914-1914", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_633 [label="StringAssert.AreEqual(@''{\r\n  ''''ParentProp'''': {\r\n    ''''c'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MyChild, Newtonsoft.Json.Tests'''',\r\n      ''''p'''': ''''string!''''\r\n    }\r\n  }\r\n}'', json)", span="1905-1912", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_635 [label="MyParent p2 = pp2.ParentProp", span="1915-1915", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_636 [label="CustomAssert.IsInstanceOfType(typeof(MyChild), p2.Child)", span="1916-1916", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_637 [label="Assert.AreEqual(''string!'', ((MyChild)p2.Child).MyProperty)", span="1917-1917", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_638 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", span="1882-1882", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ParentTypeNameHandlingWithISerializableValues()", file="DiscriminatedUnionConverterTests.cs"];
m5_713 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()", file="DiscriminatedUnionConverterTests.cs"];
m5_330 [label="Entry Newtonsoft.Json.Tests.Serialization.Message.Message()", span="2118-2118", cluster="Newtonsoft.Json.Tests.Serialization.Message.Message()", file="DiscriminatedUnionConverterTests.cs"];
m5_424 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", span="1333-1333", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", file="DiscriminatedUnionConverterTests.cs"];
m5_425 [label="assemblyName = ''AssemblyName''", span="1335-1335", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", file="DiscriminatedUnionConverterTests.cs"];
m5_426 [label="typeName = '':::'' + serializedType.Name.ToUpper(CultureInfo.InvariantCulture) + '':::''", span="1337-1337", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", file="DiscriminatedUnionConverterTests.cs"];
m5_427 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", span="1333-1333", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.BindToName(System.Type, out string, out string)", file="DiscriminatedUnionConverterTests.cs"];
m5_640 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", span="1922-1922", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="DiscriminatedUnionConverterTests.cs"];
m5_641 [label="var input = new List<Stack<string>>()", span="1924-1924", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="DiscriminatedUnionConverterTests.cs"];
m5_642 [label="input.Add(new Stack<string>(new List<string> { ''One'', ''Two'', ''Three'' }))", span="1926-1926", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="DiscriminatedUnionConverterTests.cs"];
m5_643 [label="input.Add(new Stack<string>(new List<string> { ''Four'', ''Five'', ''Six'' }))", span="1927-1927", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="DiscriminatedUnionConverterTests.cs"];
m5_644 [label="input.Add(new Stack<string>(new List<string> { ''Seven'', ''Eight'', ''Nine'' }))", span="1928-1928", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="DiscriminatedUnionConverterTests.cs"];
m5_645 [label="string serialized = JsonConvert.SerializeObject(input,\r\n                Newtonsoft.Json.Formatting.Indented,\r\n                new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.All,\r\n#pragma warning disable 618\r\n                    TypeNameAssemblyFormat = FormatterAssemblyStyle.Full // TypeNameHandling.Auto will work\r\n#pragma warning restore 618\r\n                })", span="1930-1938", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="DiscriminatedUnionConverterTests.cs"];
m5_646 [label="var output = JsonConvert.DeserializeObject<List<Stack<string>>>(serialized,\r\n                new JsonSerializerSettings { TypeNameHandling = TypeNameHandling.All }\r\n                )", span="1940-1942", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="DiscriminatedUnionConverterTests.cs"];
m5_647 [label="List<string> strings = output.SelectMany(s => s).ToList()", span="1944-1944", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="DiscriminatedUnionConverterTests.cs"];
m5_648 [label="Assert.AreEqual(9, strings.Count)", span="1946-1946", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="DiscriminatedUnionConverterTests.cs"];
m5_649 [label="Assert.AreEqual(''One'', strings[0])", span="1947-1947", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="DiscriminatedUnionConverterTests.cs"];
m5_650 [label="Assert.AreEqual(''Nine'', strings[8])", span="1948-1948", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="DiscriminatedUnionConverterTests.cs"];
m5_651 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", span="1922-1922", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ListOfStackWithFullAssemblyName()", file="DiscriminatedUnionConverterTests.cs"];
m5_8 [label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="DiscriminatedUnionConverterTests.cs"];
m5_526 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1575-1575", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_527 [label="PropertyItemTypeNameHandlingDictionary c1 = new PropertyItemTypeNameHandlingDictionary()\r\n            {\r\n                Data = new Dictionary<string, object>\r\n                {\r\n                    {\r\n                        ''one'', new TestComponentSimple { MyProperty = 1 }\r\n                    },\r\n                    {\r\n                        ''two'', new Dictionary<string, object>\r\n                        {\r\n                            {\r\n                                ''one'', new Dictionary<string, object>\r\n                                {\r\n                                    { ''one'', 1 }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }", span="1577-1596", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_528 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1598-1598", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_529 [label="StringAssert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''one'''': 1\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1599-1612", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_530 [label="PropertyItemTypeNameHandlingDictionary c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1614-1614", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_531 [label="Assert.AreEqual(2, c2.Data.Count)", span="1615-1615", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_532 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[''one''])", span="1617-1617", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_533 [label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1618-1618", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_534 [label="Dictionary<string, object> c = (Dictionary<string, object>)c2.Data[''two'']", span="1619-1619", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_535 [label="CustomAssert.IsInstanceOfType(typeof(JObject), c[''one''])", span="1620-1620", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_536 [label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 1\r\n      }\r\n    }\r\n  }\r\n}''", span="1622-1636", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_537 [label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1638-1638", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_538 [label="Assert.AreEqual(2, c2.Data.Count)", span="1639-1639", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_539 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[''one''])", span="1641-1641", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_540 [label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1642-1642", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_541 [label="c = (Dictionary<string, object>)c2.Data[''two'']", span="1643-1643", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_542 [label="CustomAssert.IsInstanceOfType(typeof(JObject), c[''one''])", span="1644-1644", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_543 [label="JObject o = (JObject)c[''one'']", span="1646-1646", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_544 [label="Assert.AreEqual(1, (int)o[''MyProperty''])", span="1647-1647", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_545 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1575-1575", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="DiscriminatedUnionConverterTests.cs"];
m5_20 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", span="152-152", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_21 [label="IList<KeyValuePair<string, object>> dic = new List<KeyValuePair<string, object>>\r\n            {\r\n                new KeyValuePair<string, object>(''movie'', new Movie { Name = ''Die Hard'' })\r\n            }", span="154-157", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_22 [label="string json = JsonConvert.SerializeObject(dic, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="159-162", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_23 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''movie'''',\r\n    ''''Value'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Movie, Newtonsoft.Json.Tests'''',\r\n      ''''Name'''': ''''Die Hard'''',\r\n      ''''Description'''': null,\r\n      ''''Classification'''': null,\r\n      ''''Studio'''': null,\r\n      ''''ReleaseDate'''': null,\r\n      ''''ReleaseCountries'''': null\r\n    }\r\n  }\r\n]'', json)", span="164-177", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_24 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", span="152-152", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.KeyValuePairAuto()", file="DiscriminatedUnionConverterTests.cs"];
m5_25 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="DiscriminatedUnionConverterTests.cs"];
m5_547 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1651-1651", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_548 [label="PropertyItemTypeNameHandlingObject o1 = new PropertyItemTypeNameHandlingObject\r\n            {\r\n                Data = new TypeNameHandlingTestObject\r\n                {\r\n                    Prop1 = new List<object>\r\n                    {\r\n                        new TestComponentSimple\r\n                        {\r\n                            MyProperty = 1\r\n                        }\r\n                    },\r\n                    Prop2 = new TestComponentSimple\r\n                    {\r\n                        MyProperty = 1\r\n                    },\r\n                    Prop3 = 3,\r\n                    Prop4 = new JObject()\r\n                }\r\n            }", span="1653-1671", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_549 [label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1673-1673", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_550 [label="StringAssert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''Prop1'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    },\r\n    ''''Prop2'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''Prop3'''': 3,\r\n    ''''Prop4'''': {}\r\n  }\r\n}'', json)", span="1674-1691", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_551 [label="PropertyItemTypeNameHandlingObject o2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingObject>(json)", span="1693-1693", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_552 [label="Assert.IsNotNull(o2)", span="1694-1694", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_553 [label="Assert.IsNotNull(o2.Data)", span="1695-1695", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_554 [label="CustomAssert.IsInstanceOfType(typeof(List<object>), o2.Data.Prop1)", span="1697-1697", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_555 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), o2.Data.Prop2)", span="1698-1698", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_556 [label="CustomAssert.IsInstanceOfType(typeof(long), o2.Data.Prop3)", span="1699-1699", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_557 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o2.Data.Prop4)", span="1700-1700", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_558 [label="List<object> o = (List<object>)o2.Data.Prop1", span="1702-1702", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_559 [label="JObject j = (JObject)o[0]", span="1703-1703", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_560 [label="Assert.AreEqual(1, (int)j[''MyProperty''])", span="1704-1704", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_561 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1651-1651", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="DiscriminatedUnionConverterTests.cs"];
m5_707 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="DiscriminatedUnionConverterTests.cs"];
m5_201 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DiscriminatedUnionConverterTests.cs"];
m5_277 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToType(string, string)", span="935-935", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToType(string, string)", file="DiscriminatedUnionConverterTests.cs"];
m5_278 [label="string resolvedTypeName = string.Format(TypeFormat, typeName)", span="937-937", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToType(string, string)", file="DiscriminatedUnionConverterTests.cs"];
m5_279 [label="return Type.GetType(resolvedTypeName, true);", span="939-939", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToType(string, string)", file="DiscriminatedUnionConverterTests.cs"];
m5_280 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToType(string, string)", span="935-935", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder.BindToType(string, string)", file="DiscriminatedUnionConverterTests.cs"];
m5_403 [label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="2182-2182", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_714 [label="Name = name", span="2184-2184", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_715 [label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="2182-2182", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_733 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_93 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="754-754", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_455 [label="Entry Newtonsoft.Json.Tests.TestObjects.TestComponentSimple.TestComponentSimple()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.TestComponentSimple.TestComponentSimple()", file="DiscriminatedUnionConverterTests.cs"];
m5_354 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="1145-1145", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="DiscriminatedUnionConverterTests.cs"];
m5_355 [label="this.value = value", span="1147-1147", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="DiscriminatedUnionConverterTests.cs"];
m5_356 [label="this.next = next", span="1148-1148", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="DiscriminatedUnionConverterTests.cs"];
m5_357 [label="count = this.next.count + 1", span="1149-1149", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="DiscriminatedUnionConverterTests.cs"];
m5_358 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="1145-1145", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="DiscriminatedUnionConverterTests.cs"];
m5_708 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", span="2161-2161", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="DiscriminatedUnionConverterTests.cs"];
m5_709 [label="Content == null", span="2163-2163", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="DiscriminatedUnionConverterTests.cs"];
m5_710 [label="return 0;", span="2165-2165", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="DiscriminatedUnionConverterTests.cs"];
m5_711 [label="return Content.GetHashCode();", span="2168-2168", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="DiscriminatedUnionConverterTests.cs"];
m5_712 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", span="2161-2161", cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.GetHashCode()", file="DiscriminatedUnionConverterTests.cs"];
m5_439 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1362-1362", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_440 [label="var c1 = new TestComponentSimple()", span="1364-1364", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_441 [label="TypeNameList<object> l = new TypeNameList<object>()", span="1366-1366", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_442 [label="l.Add(c1)", span="1367-1367", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_443 [label="l.Add(new Employee\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                Department = ''Department!''\r\n            })", span="1368-1372", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_444 [label="l.Add(''String!'')", span="1373-1373", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_445 [label="l.Add(long.MaxValue)", span="1374-1374", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_446 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1376-1376", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_447 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 0\r\n  },\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee, Newtonsoft.Json.Tests'''',\r\n    ''''FirstName'''': null,\r\n    ''''LastName'''': null,\r\n    ''''BirthDate'''': ''''2000-12-12T12:12:12Z'''',\r\n    ''''Department'''': ''''Department!'''',\r\n    ''''JobTitle'''': null\r\n  },\r\n  ''''String!'''',\r\n  9223372036854775807\r\n]'', json)", span="1377-1392", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_448 [label="TypeNameList<object> l2 = JsonConvert.DeserializeObject<TypeNameList<object>>(json)", span="1394-1394", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_449 [label="Assert.AreEqual(4, l2.Count)", span="1395-1395", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_450 [label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), l2[0])", span="1397-1397", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_451 [label="CustomAssert.IsInstanceOfType(typeof(Employee), l2[1])", span="1398-1398", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_452 [label="CustomAssert.IsInstanceOfType(typeof(string), l2[2])", span="1399-1399", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_453 [label="CustomAssert.IsInstanceOfType(typeof(long), l2[3])", span="1400-1400", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_454 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1362-1362", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="DiscriminatedUnionConverterTests.cs"];
m5_124 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DiscriminatedUnionConverterTests.cs"];
m5_692 [label="Entry Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2088-2088", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverterTests.cs"];
m5_693 [label="Child = (ISomeBase)info.GetValue(''c'', typeof(ISomeBase))", span="2090-2090", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverterTests.cs"];
m5_694 [label="Exit Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2088-2088", cluster="Newtonsoft.Json.Tests.Serialization.MyParent.MyParent(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverterTests.cs"];
m5_35 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="DiscriminatedUnionConverterTests.cs"];
m5_716 [label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2187-2187", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverterTests.cs"];
m5_717 [label="Name = info.GetString(''name'')", span="2189-2189", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverterTests.cs"];
m5_718 [label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="2187-2187", cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="DiscriminatedUnionConverterTests.cs"];
m5_45 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="DiscriminatedUnionConverterTests.cs"];
m5_251 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="845-845", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="DiscriminatedUnionConverterTests.cs"];
m5_252 [label="string resolvedTypeName = string.Format(TypeFormat, typeName)", span="847-847", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="DiscriminatedUnionConverterTests.cs"];
m5_253 [label="return Type.GetType(resolvedTypeName, true);", span="849-849", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="DiscriminatedUnionConverterTests.cs"];
m5_254 [label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="845-845", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="DiscriminatedUnionConverterTests.cs"];
m5_36 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="350-350", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="DiscriminatedUnionConverterTests.cs"];
m5_92 [label="Entry Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", file="DiscriminatedUnionConverterTests.cs"];
m5_744 [label=sb, span="", file="DiscriminatedUnionConverterTests.cs"];
m5_745 [label=json, span="", file="DiscriminatedUnionConverterTests.cs"];
m5_746 [label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest", span="", file="DiscriminatedUnionConverterTests.cs"];
m5_747 [label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder", span="", file="DiscriminatedUnionConverterTests.cs"];
m5_748 [label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder", span="", file="DiscriminatedUnionConverterTests.cs"];
m5_749 [label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", span="", file="DiscriminatedUnionConverterTests.cs"];
m5_750 [label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", span="", file="DiscriminatedUnionConverterTests.cs"];
m5_751 [label="Newtonsoft.Json.Tests.Serialization.DataType", span="", file="DiscriminatedUnionConverterTests.cs"];
m5_752 [label="Newtonsoft.Json.Tests.Serialization.MyParent", span="", file="DiscriminatedUnionConverterTests.cs"];
m5_753 [label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", span="", file="DiscriminatedUnionConverterTests.cs"];
m5_754 [label="Newtonsoft.Json.Tests.Serialization.Example", span="", file="DiscriminatedUnionConverterTests.cs"];
m5_755 [label="Newtonsoft.Json.Tests.Serialization.GroupingInfo", span="", file="DiscriminatedUnionConverterTests.cs"];
m6_76 [label="Entry decimal.CompareTo(decimal)", span="0-0", cluster="decimal.CompareTo(decimal)", file="EntityKeyMemberConverter.cs"];
m6_89 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="EntityKeyMemberConverter.cs"];
m6_75 [label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", file="EntityKeyMemberConverter.cs"];
m6_246 [label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="481-481", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_247 [label="object compareValue = (arg is JValue) ? ((JValue) arg).Value : arg", span="483-483", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_248 [label="binder.Operation", span="485-485", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_250 [label="result = (Compare(instance.Type, instance.Value, compareValue) == 0)", span="488-488", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_253 [label="result = (Compare(instance.Type, instance.Value, compareValue) != 0)", span="491-491", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_256 [label="result = (Compare(instance.Type, instance.Value, compareValue) > 0)", span="494-494", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_259 [label="result = (Compare(instance.Type, instance.Value, compareValue) >= 0)", span="497-497", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_262 [label="result = (Compare(instance.Type, instance.Value, compareValue) < 0)", span="500-500", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_265 [label="result = (Compare(instance.Type, instance.Value, compareValue) <= 0)", span="503-503", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_249 [label="ExpressionType.Equal", span="487-487", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_252 [label="ExpressionType.NotEqual", span="490-490", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_255 [label="ExpressionType.GreaterThan", span="493-493", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_258 [label="ExpressionType.GreaterThanOrEqual", span="496-496", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_261 [label="ExpressionType.LessThan", span="499-499", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_264 [label="ExpressionType.LessThanOrEqual", span="502-502", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_251 [label="return true;", span="489-489", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_254 [label="return true;", span="492-492", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_257 [label="return true;", span="495-495", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_260 [label="return true;", span="498-498", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_263 [label="return true;", span="501-501", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_266 [label="return true;", span="504-504", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_267 [label="result = null", span="507-507", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_268 [label="return false;", span="508-508", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_269 [label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", span="481-481", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryBinaryOperation(Newtonsoft.Json.Linq.JValue, System.Dynamic.BinaryOperationBinder, object, out object)", file="EntityKeyMemberConverter.cs"];
m6_98 [label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="127-127", cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="EntityKeyMemberConverter.cs"];
m6_84 [label="Entry System.Convert.ToDateTime(object)", span="0-0", cluster="System.Convert.ToDateTime(object)", file="EntityKeyMemberConverter.cs"];
m6_232 [label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", span="459-459", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.JValueDynamicProxy()", file="EntityKeyMemberConverter.cs"];
m6_18 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="121-121", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="EntityKeyMemberConverter.cs"];
m6_19 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(object)", span="121-121", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="EntityKeyMemberConverter.cs"];
m6_27 [label="Entry Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="146-146", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_28 [label="objA == null && objB == null", span="148-148", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_30 [label="objA != null && objB == null", span="150-150", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_32 [label="objA == null && objB != null", span="152-152", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_34 [label=valueType, span="155-155", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_36 [label="objA is ulong || objB is ulong || objA is decimal || objB is decimal", span="158-158", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_37 [label="return Convert.ToDecimal(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToDecimal(objB, CultureInfo.InvariantCulture));", span="159-159", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_38 [label="objA is float || objB is float || objA is double || objB is double", span="160-160", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_39 [label="return CompareFloat(objA, objB);", span="161-161", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_40 [label="return Convert.ToInt64(objA, CultureInfo.InvariantCulture).CompareTo(Convert.ToInt64(objB, CultureInfo.InvariantCulture));", span="163-163", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_42 [label="return CompareFloat(objA, objB);", span="165-165", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_46 [label="string s1 = Convert.ToString(objA)", span="169-169", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_47 [label="string s2 = Convert.ToString(objB)", span="170-170", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_50 [label="bool b1 = Convert.ToBoolean(objA)", span="174-174", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_51 [label="bool b2 = Convert.ToBoolean(objB)", span="175-175", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_54 [label="objA is DateTime", span="179-179", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_55 [label="DateTime date1 = Convert.ToDateTime(objA)", span="181-181", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_56 [label="DateTime date2 = Convert.ToDateTime(objB)", span="182-182", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_58 [label="!(objB is DateTimeOffset)", span="188-188", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_60 [label="DateTimeOffset date1 = (DateTimeOffset)objA", span="191-191", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_61 [label="DateTimeOffset date2 = (DateTimeOffset)objB", span="192-192", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_64 [label="!(objB is byte[])", span="197-197", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_66 [label="byte[] bytes1 = objA as byte[]", span="200-200", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_67 [label="byte[] bytes2 = objB as byte[]", span="201-201", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_73 [label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''valueType'', valueType, ''Unexpected value type: {0}''.FormatWith(CultureInfo.InvariantCulture, valueType));", span="209-209", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_29 [label="return 0;", span="149-149", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_31 [label="return 1;", span="151-151", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_33 [label="return -1;", span="153-153", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_35 [label="JTokenType.Integer", span="157-157", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_41 [label="JTokenType.Float", span="164-164", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_43 [label="JTokenType.Comment", span="166-166", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_49 [label="JTokenType.Boolean", span="173-173", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_53 [label="JTokenType.Date", span="178-178", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_63 [label="JTokenType.Bytes", span="196-196", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_44 [label="JTokenType.String", span="167-167", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_45 [label="JTokenType.Raw", span="168-168", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_48 [label="return s1.CompareTo(s2);", span="172-172", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_52 [label="return b1.CompareTo(b2);", span="177-177", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_57 [label="return date1.CompareTo(date2);", span="184-184", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_59 [label="throw new ArgumentException(''Object must be of type DateTimeOffset.'');", span="189-189", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_62 [label="return date1.CompareTo(date2);", span="194-194", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_65 [label="throw new ArgumentException(''Object must be of type byte[].'');", span="198-198", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_68 [label="bytes1 == null", span="202-202", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_72 [label="return MiscellaneousUtils.ByteArrayCompare(bytes1, bytes2);", span="207-207", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_70 [label="bytes2 == null", span="204-204", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_69 [label="return -1;", span="203-203", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_71 [label="return 1;", span="205-205", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_74 [label="Exit Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="146-146", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="EntityKeyMemberConverter.cs"];
m6_99 [label="Entry double.CompareTo(double)", span="0-0", cluster="double.CompareTo(double)", file="EntityKeyMemberConverter.cs"];
m6_8 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="76-76", cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="EntityKeyMemberConverter.cs"];
m6_9 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="76-76", cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="EntityKeyMemberConverter.cs"];
m6_222 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="EntityKeyMemberConverter.cs"];
m6_106 [label="Entry Newtonsoft.Json.Linq.JValue.CreateString(string)", span="245-245", cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="EntityKeyMemberConverter.cs"];
m6_107 [label="return new JValue(value, JTokenType.String);", span="247-247", cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="EntityKeyMemberConverter.cs"];
m6_108 [label="Exit Newtonsoft.Json.Linq.JValue.CreateString(string)", span="245-245", cluster="Newtonsoft.Json.Linq.JValue.CreateString(string)", file="EntityKeyMemberConverter.cs"];
m6_132 [label="Entry Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="279-279", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="EntityKeyMemberConverter.cs"];
m6_134 [label="current == null", span="281-281", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="EntityKeyMemberConverter.cs"];
m6_136 [label="current.Value", span="284-284", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="EntityKeyMemberConverter.cs"];
m6_140 [label="return current.Value;", span="289-289", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="EntityKeyMemberConverter.cs"];
m6_135 [label="return JTokenType.String;", span="282-282", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="EntityKeyMemberConverter.cs"];
m6_137 [label="JTokenType.Comment", span="286-286", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="EntityKeyMemberConverter.cs"];
m6_141 [label="return JTokenType.String;", span="291-291", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="EntityKeyMemberConverter.cs"];
m6_138 [label="JTokenType.String", span="287-287", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="EntityKeyMemberConverter.cs"];
m6_139 [label="JTokenType.Raw", span="288-288", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="EntityKeyMemberConverter.cs"];
m6_142 [label="Exit Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", span="279-279", cluster="Newtonsoft.Json.Linq.JValue.GetStringValueType(Newtonsoft.Json.Linq.JTokenType?)", file="EntityKeyMemberConverter.cs"];
m6_197 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="798-798", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="EntityKeyMemberConverter.cs"];
m6_191 [label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44", cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="EntityKeyMemberConverter.cs"];
m6_186 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="647-647", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="EntityKeyMemberConverter.cs"];
m6_206 [label="Entry System.Enum.GetHashCode()", span="0-0", cluster="System.Enum.GetHashCode()", file="EntityKeyMemberConverter.cs"];
m6_97 [label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="EntityKeyMemberConverter.cs"];
m6_223 [label="Entry Newtonsoft.Json.Linq.JValue.GetHashCode()", span="438-438", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="EntityKeyMemberConverter.cs"];
m6_224 [label="_value == null", span="440-440", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="EntityKeyMemberConverter.cs"];
m6_225 [label="return 0;", span="441-441", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="EntityKeyMemberConverter.cs"];
m6_226 [label="return _value.GetHashCode();", span="443-443", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="EntityKeyMemberConverter.cs"];
m6_227 [label="Exit Newtonsoft.Json.Linq.JValue.GetHashCode()", span="438-438", cluster="Newtonsoft.Json.Linq.JValue.GetHashCode()", file="EntityKeyMemberConverter.cs"];
m6_86 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="EntityKeyMemberConverter.cs"];
m6_100 [label="Entry Newtonsoft.Json.Linq.JValue.CloneToken()", span="225-225", cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="EntityKeyMemberConverter.cs"];
m6_101 [label="return new JValue(this);", span="227-227", cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="EntityKeyMemberConverter.cs"];
m6_102 [label="Exit Newtonsoft.Json.Linq.JValue.CloneToken()", span="225-225", cluster="Newtonsoft.Json.Linq.JValue.CloneToken()", file="EntityKeyMemberConverter.cs"];
m6_189 [label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="458-458", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="EntityKeyMemberConverter.cs"];
m6_88 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", span="87-87", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ByteArrayCompare(byte[], byte[])", file="EntityKeyMemberConverter.cs"];
m6_90 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="14-14", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="EntityKeyMemberConverter.cs"];
m6_0 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="47-47", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="EntityKeyMemberConverter.cs"];
m6_1 [label="_value = value", span="49-49", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="EntityKeyMemberConverter.cs"];
m6_2 [label="_valueType = type", span="50-50", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="EntityKeyMemberConverter.cs"];
m6_3 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", span="47-47", cluster="Newtonsoft.Json.Linq.JValue.JValue(object, Newtonsoft.Json.Linq.JTokenType)", file="EntityKeyMemberConverter.cs"];
m6_16 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="112-112", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="EntityKeyMemberConverter.cs"];
m6_17 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(string)", span="112-112", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="EntityKeyMemberConverter.cs"];
m6_81 [label="Entry string.CompareTo(string)", span="0-0", cluster="string.CompareTo(string)", file="EntityKeyMemberConverter.cs"];
m6_190 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="286-286", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="EntityKeyMemberConverter.cs"];
m6_85 [label="Entry System.DateTime.CompareTo(System.DateTime)", span="0-0", cluster="System.DateTime.CompareTo(System.DateTime)", file="EntityKeyMemberConverter.cs"];
m6_196 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="723-723", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="EntityKeyMemberConverter.cs"];
m6_205 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()", file="EntityKeyMemberConverter.cs"];
m6_233 [label="Entry Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="461-461", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="EntityKeyMemberConverter.cs"];
m6_234 [label="binder.Type == typeof(JValue)", span="463-463", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="EntityKeyMemberConverter.cs"];
m6_235 [label="result = instance", span="465-465", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="EntityKeyMemberConverter.cs"];
m6_237 [label="object value = instance.Value", span="469-469", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="EntityKeyMemberConverter.cs"];
m6_240 [label="return ReflectionUtils.IsNullable(binder.Type);", span="474-474", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="EntityKeyMemberConverter.cs"];
m6_241 [label="result = ConvertUtils.Convert(instance.Value, CultureInfo.InvariantCulture, binder.Type)", span="477-477", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="EntityKeyMemberConverter.cs"];
m6_236 [label="return true;", span="466-466", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="EntityKeyMemberConverter.cs"];
m6_238 [label="value == null", span="471-471", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="EntityKeyMemberConverter.cs"];
m6_239 [label="result = null", span="473-473", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="EntityKeyMemberConverter.cs"];
m6_242 [label="return true;", span="478-478", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="EntityKeyMemberConverter.cs"];
m6_243 [label="Exit Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", span="461-461", cluster="Newtonsoft.Json.Linq.JValue.JValueDynamicProxy.TryConvert(Newtonsoft.Json.Linq.JValue, System.Dynamic.ConvertBinder, out object)", file="EntityKeyMemberConverter.cs"];
m6_103 [label="Entry Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="235-235", cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="EntityKeyMemberConverter.cs"];
m6_104 [label="return new JValue(value, JTokenType.Comment);", span="237-237", cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="EntityKeyMemberConverter.cs"];
m6_105 [label="Exit Newtonsoft.Json.Linq.JValue.CreateComment(string)", span="235-235", cluster="Newtonsoft.Json.Linq.JValue.CreateComment(string)", file="EntityKeyMemberConverter.cs"];
m6_4 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", span="57-57", cluster="Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", file="EntityKeyMemberConverter.cs"];
m6_5 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", span="57-57", cluster="Newtonsoft.Json.Linq.JValue.JValue(Newtonsoft.Json.Linq.JValue)", file="EntityKeyMemberConverter.cs"];
m6_185 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1091-1091", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="EntityKeyMemberConverter.cs"];
m6_184 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="EntityKeyMemberConverter.cs"];
m6_188 [label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="630-630", cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="EntityKeyMemberConverter.cs"];
m6_26 [label="Entry Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="390-390", cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="EntityKeyMemberConverter.cs"];
m6_207 [label="return (v1 == v2 || (v1._valueType == v2._valueType && Compare(v1._valueType, v1._value, v2._value) == 0));", span="392-392", cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="EntityKeyMemberConverter.cs"];
m6_208 [label="Exit Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", span="390-390", cluster="Newtonsoft.Json.Linq.JValue.ValuesEquals(Newtonsoft.Json.Linq.JValue, Newtonsoft.Json.Linq.JValue)", file="EntityKeyMemberConverter.cs"];
m6_109 [label="Entry Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="250-250", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_110 [label="value == null", span="252-252", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_112 [label="value == DBNull.Value", span="254-254", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_114 [label="value is string", span="256-256", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_115 [label="return GetStringValueType(current);", span="257-257", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_116 [label="value is long || value is int || value is short || value is sbyte\r\n        || value is ulong || value is uint || value is ushort || value is byte", span="258-259", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_118 [label="value is Enum", span="261-261", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_120 [label="value is double || value is float || value is decimal", span="263-263", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_122 [label="value is DateTime", span="265-265", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_124 [label="value is DateTimeOffset", span="268-268", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_126 [label="value is byte[]", span="271-271", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_128 [label="value is bool", span="273-273", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_130 [label="throw new ArgumentException(''Could not determine JSON object type for type {0}.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="276-276", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_111 [label="return JTokenType.Null;", span="253-253", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_113 [label="return JTokenType.Null;", span="255-255", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_117 [label="return JTokenType.Integer;", span="260-260", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_119 [label="return JTokenType.Integer;", span="262-262", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_121 [label="return JTokenType.Float;", span="264-264", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_123 [label="return JTokenType.Date;", span="266-266", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_125 [label="return JTokenType.Date;", span="269-269", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_127 [label="return JTokenType.Bytes;", span="272-272", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_129 [label="return JTokenType.Boolean;", span="274-274", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_131 [label="Exit Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", span="250-250", cluster="Newtonsoft.Json.Linq.JValue.GetValueType(Newtonsoft.Json.Linq.JTokenType?, object)", file="EntityKeyMemberConverter.cs"];
m6_194 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="658-658", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="EntityKeyMemberConverter.cs"];
m6_228 [label="Entry Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="454-454", cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="EntityKeyMemberConverter.cs"];
m6_229 [label="return new DynamicProxyMetaObject<JValue>(parameter, this, new JValueDynamicProxy(), true);", span="456-456", cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="EntityKeyMemberConverter.cs"];
m6_230 [label="Exit Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", span="454-454", cluster="Newtonsoft.Json.Linq.JValue.GetMetaObject(System.Linq.Expressions.Expression)", file="EntityKeyMemberConverter.cs"];
m6_231 [label="Entry Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", span="15-15", cluster="Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", file="EntityKeyMemberConverter.cs"];
m6_195 [label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="EntityKeyMemberConverter.cs"];
m6_200 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="994-994", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="EntityKeyMemberConverter.cs"];
m6_199 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="788-788", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="EntityKeyMemberConverter.cs"];
m6_201 [label="Entry Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="383-383", cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="EntityKeyMemberConverter.cs"];
m6_202 [label="int valueHashCode = (_value != null) ? _value.GetHashCode() : 0", span="385-385", cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="EntityKeyMemberConverter.cs"];
m6_203 [label="return _valueType.GetHashCode() ^ valueHashCode;", span="387-387", cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="EntityKeyMemberConverter.cs"];
m6_204 [label="Exit Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", span="383-383", cluster="Newtonsoft.Json.Linq.JValue.GetDeepHashCode()", file="EntityKeyMemberConverter.cs"];
m6_77 [label="Entry Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="213-213", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="EntityKeyMemberConverter.cs"];
m6_91 [label="double d1 = Convert.ToDouble(objA, CultureInfo.InvariantCulture)", span="215-215", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="EntityKeyMemberConverter.cs"];
m6_92 [label="double d2 = Convert.ToDouble(objB, CultureInfo.InvariantCulture)", span="216-216", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="EntityKeyMemberConverter.cs"];
m6_93 [label="MathUtils.ApproxEquals(d1, d2)", span="219-219", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="EntityKeyMemberConverter.cs"];
m6_95 [label="return d1.CompareTo(d2);", span="222-222", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="EntityKeyMemberConverter.cs"];
m6_94 [label="return 0;", span="220-220", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="EntityKeyMemberConverter.cs"];
m6_96 [label="Exit Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", span="213-213", cluster="Newtonsoft.Json.Linq.JValue.CompareFloat(object, object)", file="EntityKeyMemberConverter.cs"];
m6_276 [label="Entry Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="523-523", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="EntityKeyMemberConverter.cs"];
m6_277 [label="other == null", span="525-525", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="EntityKeyMemberConverter.cs"];
m6_279 [label="return Compare(_valueType, _value, other._value);", span="528-528", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="EntityKeyMemberConverter.cs"];
m6_278 [label="return 1;", span="526-526", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="EntityKeyMemberConverter.cs"];
m6_280 [label="Exit Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", span="523-523", cluster="Newtonsoft.Json.Linq.JValue.CompareTo(Newtonsoft.Json.Linq.JValue)", file="EntityKeyMemberConverter.cs"];
m6_143 [label="Entry Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="328-328", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_144 [label=_valueType, span="330-330", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_146 [label="writer.WriteComment(_value.ToString())", span="333-333", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_149 [label="writer.WriteRawValue((_value != null) ? _value.ToString() : null)", span="336-336", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_152 [label="writer.WriteNull()", span="339-339", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_155 [label="writer.WriteUndefined()", span="342-342", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_158 [label="_value != null && ((matchingConverter = JsonSerializer.GetMatchingConverter(converters, _value.GetType())) != null)", span="347-347", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_159 [label="matchingConverter.WriteJson(writer, _value, new JsonSerializer())", span="349-349", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_163 [label="writer.WriteValue(Convert.ToInt64(_value, CultureInfo.InvariantCulture))", span="356-356", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_166 [label="writer.WriteValue(Convert.ToDouble(_value, CultureInfo.InvariantCulture))", span="359-359", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_169 [label="writer.WriteValue((_value != null) ? _value.ToString() : null)", span="362-362", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_172 [label="writer.WriteValue(Convert.ToBoolean(_value, CultureInfo.InvariantCulture))", span="365-365", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_176 [label="writer.WriteValue((DateTimeOffset)_value)", span="370-370", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_177 [label="writer.WriteValue(Convert.ToDateTime(_value, CultureInfo.InvariantCulture))", span="373-373", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_180 [label="writer.WriteValue((byte[])_value)", span="376-376", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_145 [label="JTokenType.Comment", span="332-332", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_148 [label="JTokenType.Raw", span="335-335", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_151 [label="JTokenType.Null", span="338-338", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_154 [label="JTokenType.Undefined", span="341-341", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_147 [label="return;", span="334-334", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_150 [label="return;", span="337-337", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_153 [label="return;", span="340-340", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_156 [label="return;", span="343-343", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_157 [label="JsonConverter matchingConverter", span="346-346", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_161 [label=_valueType, span="353-353", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_160 [label="return;", span="350-350", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_162 [label="JTokenType.Integer", span="355-355", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_165 [label="JTokenType.Float", span="358-358", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_168 [label="JTokenType.String", span="361-361", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_171 [label="JTokenType.Boolean", span="364-364", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_174 [label="JTokenType.Date", span="367-367", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_179 [label="JTokenType.Bytes", span="375-375", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_164 [label="return;", span="357-357", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_167 [label="return;", span="360-360", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_170 [label="return;", span="363-363", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_173 [label="return;", span="366-366", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_175 [label="_value is DateTimeOffset", span="369-369", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_178 [label="return;", span="374-374", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_181 [label="return;", span="377-377", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_183 [label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''TokenType'', _valueType, ''Unexpected token type.'');", span="380-380", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_182 [label="Exit Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="328-328", cluster="Newtonsoft.Json.Linq.JValue.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="EntityKeyMemberConverter.cs"];
m6_244 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="154-154", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="EntityKeyMemberConverter.cs"];
m6_12 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="94-94", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="EntityKeyMemberConverter.cs"];
m6_13 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="94-94", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="EntityKeyMemberConverter.cs"];
m6_83 [label="Entry bool.CompareTo(bool)", span="0-0", cluster="bool.CompareTo(bool)", file="EntityKeyMemberConverter.cs"];
m6_20 [label="Entry Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="126-126", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="EntityKeyMemberConverter.cs"];
m6_21 [label="JValue other = node as JValue", span="128-128", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", color=red, community=0, file="EntityKeyMemberConverter.cs"];
m6_22 [label="other == null", span="129-129", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="EntityKeyMemberConverter.cs"];
m6_24 [label="return ValuesEquals(this, other);", span="132-132", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="EntityKeyMemberConverter.cs"];
m6_23 [label="return false;", span="130-130", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="EntityKeyMemberConverter.cs"];
m6_25 [label="Exit Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="126-126", cluster="Newtonsoft.Json.Linq.JValue.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="EntityKeyMemberConverter.cs"];
m6_193 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="714-714", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="EntityKeyMemberConverter.cs"];
m6_14 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="103-103", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="EntityKeyMemberConverter.cs"];
m6_15 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(bool)", span="103-103", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="EntityKeyMemberConverter.cs"];
m6_79 [label="Entry long.CompareTo(long)", span="0-0", cluster="long.CompareTo(long)", file="EntityKeyMemberConverter.cs"];
m6_187 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="622-622", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="EntityKeyMemberConverter.cs"];
m6_87 [label="Entry System.DateTimeOffset.CompareTo(System.DateTimeOffset)", span="0-0", cluster="System.DateTimeOffset.CompareTo(System.DateTimeOffset)", file="EntityKeyMemberConverter.cs"];
m6_214 [label="Entry Newtonsoft.Json.Linq.JValue.Equals(object)", span="420-420", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="EntityKeyMemberConverter.cs"];
m6_215 [label="obj == null", span="422-422", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="EntityKeyMemberConverter.cs"];
m6_217 [label="JValue otherValue = obj as JValue", span="425-425", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="EntityKeyMemberConverter.cs"];
m6_220 [label="return base.Equals(obj);", span="429-429", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="EntityKeyMemberConverter.cs"];
m6_216 [label="return false;", span="423-423", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="EntityKeyMemberConverter.cs"];
m6_218 [label="otherValue != null", span="426-426", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="EntityKeyMemberConverter.cs"];
m6_219 [label="return Equals(otherValue);", span="427-427", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="EntityKeyMemberConverter.cs"];
m6_221 [label="Exit Newtonsoft.Json.Linq.JValue.Equals(object)", span="420-420", cluster="Newtonsoft.Json.Linq.JValue.Equals(object)", file="EntityKeyMemberConverter.cs"];
m6_209 [label="Entry Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="402-402", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="EntityKeyMemberConverter.cs"];
m6_210 [label="other == null", span="404-404", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="EntityKeyMemberConverter.cs"];
m6_212 [label="return ValuesEquals(this, other);", span="407-407", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="EntityKeyMemberConverter.cs"];
m6_211 [label="return false;", span="405-405", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="EntityKeyMemberConverter.cs"];
m6_213 [label="Exit Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", span="402-402", cluster="Newtonsoft.Json.Linq.JValue.Equals(Newtonsoft.Json.Linq.JValue)", file="EntityKeyMemberConverter.cs"];
m6_198 [label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="EntityKeyMemberConverter.cs"];
m6_245 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="192-192", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="EntityKeyMemberConverter.cs"];
m6_192 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="686-686", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="EntityKeyMemberConverter.cs"];
m6_270 [label="Entry Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="513-513", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="EntityKeyMemberConverter.cs"];
m6_271 [label="obj == null", span="515-515", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="EntityKeyMemberConverter.cs"];
m6_273 [label="object otherValue = (obj is JValue) ? ((JValue) obj).Value : obj", span="518-518", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="EntityKeyMemberConverter.cs"];
m6_272 [label="return 1;", span="516-516", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="EntityKeyMemberConverter.cs"];
m6_274 [label="return Compare(_valueType, _value, otherValue);", span="520-520", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="EntityKeyMemberConverter.cs"];
m6_275 [label="Exit Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", span="513-513", cluster="Newtonsoft.Json.Linq.JValue.System.IComparable.CompareTo(object)", file="EntityKeyMemberConverter.cs"];
m6_10 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="85-85", cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="EntityKeyMemberConverter.cs"];
m6_11 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(double)", span="85-85", cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="EntityKeyMemberConverter.cs"];
m6_80 [label="Entry System.Convert.ToString(object)", span="0-0", cluster="System.Convert.ToString(object)", file="EntityKeyMemberConverter.cs"];
m6_82 [label="Entry System.Convert.ToBoolean(object)", span="0-0", cluster="System.Convert.ToBoolean(object)", file="EntityKeyMemberConverter.cs"];
m6_6 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="66-66", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="EntityKeyMemberConverter.cs"];
m6_7 [label="Exit Newtonsoft.Json.Linq.JValue.JValue(long)", span="66-66", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="EntityKeyMemberConverter.cs"];
m6_78 [label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="EntityKeyMemberConverter.cs"];
m6_281 [label="Newtonsoft.Json.Linq.JValue", span="", file="EntityKeyMemberConverter.cs"];
m7_137 [label="Assert.AreEqual(1, dic[''one''])", span="311-311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="ExpandoObjectConverter.cs"];
m7_138 [label="Assert.AreEqual(2, dic[''two''])", span="312-312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="ExpandoObjectConverter.cs"];
m7_139 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", span="305-305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="ExpandoObjectConverter.cs"];
m7_140 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="319-319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ExpandoObjectConverter.cs"];
m7_141 [label="_dictionary = dictionary", span="321-321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ExpandoObjectConverter.cs"];
m7_142 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="319-319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.CustomReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ExpandoObjectConverter.cs"];
m7_143 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="324-324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="ExpandoObjectConverter.cs"];
m7_144 [label="return _dictionary.ContainsKey(key);", span="326-326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="ExpandoObjectConverter.cs"];
m7_145 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="324-324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="ExpandoObjectConverter.cs"];
m7_173 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", span="409-409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="ExpandoObjectConverter.cs"];
m7_174 [label="IList<int> l = new List<int>\r\n            {\r\n                1,\r\n                2,\r\n                3\r\n            }", span="411-416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="ExpandoObjectConverter.cs"];
m7_175 [label="CustomReadOnlyCollection<int> list = new CustomReadOnlyCollection<int>(l)", span="418-418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="ExpandoObjectConverter.cs"];
m7_176 [label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="420-420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="ExpandoObjectConverter.cs"];
m7_177 [label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="421-425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="ExpandoObjectConverter.cs"];
m7_178 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", span="409-409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeCustomReadOnlyCollection()", file="ExpandoObjectConverter.cs"];
m7_179 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", span="429-429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="ExpandoObjectConverter.cs"];
m7_180 [label="string s = @''host\user''", span="431-431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="ExpandoObjectConverter.cs"];
m7_181 [label="string serialized = JsonConvert.SerializeObject(s)", span="432-432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="ExpandoObjectConverter.cs"];
m7_182 [label="Assert.AreEqual(@''''''host\\user'''''', serialized)", span="433-433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="ExpandoObjectConverter.cs"];
m7_183 [label="Dictionary<int, object> d1 = new Dictionary<int, object>()", span="435-435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="ExpandoObjectConverter.cs"];
m7_184 [label="d1.Add(5, s)", span="436-436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="ExpandoObjectConverter.cs"];
m7_185 [label="Assert.AreEqual(@''{''''5'''':''''host\\user''''}'', JsonConvert.SerializeObject(d1))", span="437-437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="ExpandoObjectConverter.cs"];
m7_186 [label="Dictionary<string, object> d2 = new Dictionary<string, object>()", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="ExpandoObjectConverter.cs"];
m7_187 [label="d2.Add(s, 5)", span="440-440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="ExpandoObjectConverter.cs"];
m7_188 [label="Assert.AreEqual(@''{''''host\\user'''':5}'', JsonConvert.SerializeObject(d2))", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="ExpandoObjectConverter.cs"];
m7_189 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", span="429-429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestEscapeDictionaryStrings()", file="ExpandoObjectConverter.cs"];
m7_600 [label="Assert.AreEqual(p3, l[1])", span="977-977", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="ExpandoObjectConverter.cs"];
m7_151 [label="o.Add(''PropertyNameValue'', v)", span="275-275", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_152 [label="Assert.AreEqual(1, o.Children().Count())", span="276-276", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_153 [label="bool contains = ((ICollection<KeyValuePair<string, JToken>>)o).Contains(new KeyValuePair<string, JToken>(''PropertyNameValue'', new JValue(1)))", span="278-278", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_671 [label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="1650-1650", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_672 [label="return GetEnumerator();", span="1652-1652", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_673 [label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", span="1650-1650", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.System.Collections.IEnumerable.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_33 [label="return _values.GetEnumerator();", span="132-132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_198 [label="c.GenericList.Add(''2'')", span="459-459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="ExpandoObjectConverter.cs"];
m7_199 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="461-461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="ExpandoObjectConverter.cs"];
m7_200 [label="GenericListTestClass newValue = JsonConvert.DeserializeObject<GenericListTestClass>(json)", span="463-463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeExistingGenericList()", file="ExpandoObjectConverter.cs"];
m7_14 [label="Assert.IsTrue(JToken.DeepEquals(o, (JToken)myOtherResult[0, 0]))", span="111-111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="ExpandoObjectConverter.cs"];
m7_310 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", span="680-680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="ExpandoObjectConverter.cs"];
m7_311 [label="string json = @''[ null ]''", span="682-682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="ExpandoObjectConverter.cs"];
m7_312 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json); }, ''Cannot convert null value to KeyValuePair. Path '[0]', line 1, position 6.'')", span="684-684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="ExpandoObjectConverter.cs"];
m7_313 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", span="680-680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullToNonNullableKeyValuePairArray()", file="ExpandoObjectConverter.cs"];
m7_314 [label="JToken t = o", span="524-524", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="ExpandoObjectConverter.cs"];
m7_315 [label="JsonConvert.DeserializeObject<IList<KeyValuePair<string, IList<string>>>>(json)", span="684-684", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_316 [label=t, span="527-527", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Iterate()", file="ExpandoObjectConverter.cs"];
m7_317 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="705-705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ExpandoObjectConverter.cs"];
m7_318 [label="NonReadOnlyList = new List<int> { 1 }", span="707-707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ExpandoObjectConverter.cs"];
m7_319 [label="NonReadOnlyDictionary = new Dictionary<string, int> { { ''first'', 2 } }", span="708-708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ExpandoObjectConverter.cs"];
m7_320 [label="Array = new[] { 3 }", span="710-710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ExpandoObjectConverter.cs"];
m7_603 [label="Entry Newtonsoft.Json.Tests.Serialization.NonGenericClass.NonGenericClass()", span="1656-1656", cluster="Newtonsoft.Json.Tests.Serialization.NonGenericClass.NonGenericClass()", file="ExpandoObjectConverter.cs"];
m7_281 [label="JValue v = (JValue)a[0]", span="474-474", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ParseJavaScriptDate()", file="ExpandoObjectConverter.cs"];
m7_91 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", span="191-191", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="ExpandoObjectConverter.cs"];
m7_92 [label="JObject o = new JObject()", span="193-193", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="ExpandoObjectConverter.cs"];
m7_93 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="194-194", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="ExpandoObjectConverter.cs"];
m7_95 [label="Assert.AreEqual(false, o.Remove(''sdf''))", span="197-197", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="ExpandoObjectConverter.cs"];
m7_94 [label="Assert.AreEqual(1, o.Children().Count())", span="195-195", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="ExpandoObjectConverter.cs"];
m7_96 [label="Assert.AreEqual(false, o.Remove(null))", span="198-198", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="ExpandoObjectConverter.cs"];
m7_256 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", span="578-578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="ExpandoObjectConverter.cs"];
m7_126 [label="Assert.AreEqual(1, (int)o[''PropertyNameValue''])", span="237-237", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="ExpandoObjectConverter.cs"];
m7_127 [label="o.Add(''PropertyNameValue1'', null)", span="239-239", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="ExpandoObjectConverter.cs"];
m7_128 [label="Assert.AreEqual(null, ((JValue)o[''PropertyNameValue1'']).Value)", span="240-240", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="ExpandoObjectConverter.cs"];
m7_129 [label="Assert.AreEqual(2, o.Children().Count())", span="242-242", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="ExpandoObjectConverter.cs"];
m7_130 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", span="232-232", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericDictionaryAdd()", file="ExpandoObjectConverter.cs"];
m7_131 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", span="246-246", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", file="ExpandoObjectConverter.cs"];
m7_132 [label="JObject o = new JObject()", span="248-248", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", file="ExpandoObjectConverter.cs"];
m7_277 [label="Assert.AreEqual(''Id!'', newObject.Id)", span="637-637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="ExpandoObjectConverter.cs"];
m7_53 [label="o[''value''] = true", span="143-143", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="ExpandoObjectConverter.cs"];
m7_54 [label="Assert.AreEqual(1, d.Keys.Count)", span="145-145", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="ExpandoObjectConverter.cs"];
m7_55 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", span="136-136", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="ExpandoObjectConverter.cs"];
m7_80 [label="Assert.AreEqual(true, JToken.DeepEquals(new JValue(1), t))", span="175-175", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="ExpandoObjectConverter.cs"];
m7_81 [label="o[''PropertyNameValue''] = new JValue(2)", span="177-177", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="ExpandoObjectConverter.cs"];
m7_82 [label="Assert.AreEqual(1, o.Children().Count())", span="178-178", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="ExpandoObjectConverter.cs"];
m7_32 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ExpandoObjectConverter.cs"];
m7_34 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectWithComments()", span="106-106", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectWithComments()", file="ExpandoObjectConverter.cs"];
m7_165 [label="_values = values", span="389-389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="ExpandoObjectConverter.cs"];
m7_166 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", span="387-387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.CustomReadOnlyCollection(System.Collections.Generic.IList<T>)", file="ExpandoObjectConverter.cs"];
m7_167 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", span="397-397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_168 [label="return _values.GetEnumerator();", span="399-399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_169 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", span="397-397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_170 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", span="402-402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_171 [label="return _values.GetEnumerator();", span="404-404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_195 [label="JObject o = new JObject()", span="337-337", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_201 [label="Entry lambda expression", span="346-350", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_202 [label="JObject o = new JObject()", span="348-348", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_196 [label="((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(null, 0)", span="338-338", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_197 [label="Exit lambda expression", span="335-339", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_203 [label="((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[1], -1)", span="349-349", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_232 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", span="397-397", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_575 [label="l.Remove(p2)", span="941-941", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="ExpandoObjectConverter.cs"];
m7_164 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="ExpandoObjectConverter.cs"];
m7_56 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", span="149-149", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="ExpandoObjectConverter.cs"];
m7_57 [label="JObject o = new JObject()", span="151-151", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="ExpandoObjectConverter.cs"];
m7_58 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="152-152", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="ExpandoObjectConverter.cs"];
m7_296 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", span="661-661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeNullableKeyValuePairArray()", file="ExpandoObjectConverter.cs"];
m7_465 [label="JObject o = new JObject()", span="784-784", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_466 [label="o.PropertyChanged += (sender, args) =>\r\n            {\r\n                JObject s = (JObject)sender;\r\n                changed = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null;\r\n                changedCount++;\r\n            }", span="785-790", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_467 [label="o[''StringValue''] = ''value1''", span="792-792", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_468 [label="Assert.AreEqual(''value1'', changed)", span="793-793", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_360 [label="aa.Coordinates = new[, ,] { { { 1, 1, 1 }, { 1, 1, 2 } }, { { 1, 2, 1 }, { 1, 2, 2 } }, { { 2, 1, 1 }, { 2, 1, 2 } }, { { 2, 2, 1 }, { 2, 2, 2 } } }", span="834-834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeArray3D()", file="ExpandoObjectConverter.cs"];
m7_591 [label="foo2.Items.Add(new NonGenericItem { Value = ''Hello'' })", span="1408-1408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="ExpandoObjectConverter.cs"];
m7_298 [label="ExceptionAssert.Throws<JsonReaderException>(() => { JObject.Parse(@''{\r\n    ''''name'''': ''''James'''',\r\n    ]!#$THIS IS: BAD JSON![{}}}}]\r\n  }''); }, ''Invalid property identifier character: ]. Path 'name', line 3, position 4.'')", span="496-499", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Blog()", file="ExpandoObjectConverter.cs"];
m7_297 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Blog()", span="494-494", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Blog()", file="ExpandoObjectConverter.cs"];
m7_299 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Blog()", span="494-494", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Blog()", file="ExpandoObjectConverter.cs"];
m7_300 [label="Entry lambda expression", span="496-499", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_301 [label="JObject.Parse(@''{\r\n    ''''name'''': ''''James'''',\r\n    ]!#$THIS IS: BAD JSON![{}}}}]\r\n  }'')", span="496-499", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_302 [label="Exit lambda expression", span="496-499", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_303 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", span="503-503", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="ExpandoObjectConverter.cs"];
m7_304 [label="JObject o = new JObject()", span="505-505", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="ExpandoObjectConverter.cs"];
m7_305 [label="o[''val1''] = new JRaw(''1'')", span="506-506", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="ExpandoObjectConverter.cs"];
m7_306 [label="o[''val2''] = new JRaw(''1'')", span="507-507", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="ExpandoObjectConverter.cs"];
m7_307 [label="string json = o.ToString()", span="509-509", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="ExpandoObjectConverter.cs"];
m7_308 [label="StringAssert.AreEqual(@''{\r\n  ''''val1'''': 1,\r\n  ''''val2'''': 1\r\n}'', json)", span="511-514", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="ExpandoObjectConverter.cs"];
m7_309 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", span="503-503", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.RawChildValues()", file="ExpandoObjectConverter.cs"];
m7_98 [label="Assert.AreEqual(0, o.Children().Count())", span="201-201", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="ExpandoObjectConverter.cs"];
m7_99 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", span="191-191", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="ExpandoObjectConverter.cs"];
m7_100 [label="Entry Newtonsoft.Json.Linq.JObject.Remove(string)", span="576-576", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="ExpandoObjectConverter.cs"];
m7_101 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", span="205-205", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="ExpandoObjectConverter.cs"];
m7_102 [label="JValue v = new JValue(1)", span="207-207", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="ExpandoObjectConverter.cs"];
m7_103 [label="JObject o = new JObject()", span="208-208", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="ExpandoObjectConverter.cs"];
m7_355 [label="Assert.AreEqual(''krehqk'', shortie.Short)", span="629-629", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="ExpandoObjectConverter.cs"];
m7_331 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", span="554-554", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="ExpandoObjectConverter.cs"];
m7_333 [label="JValue v = new JValue(s)", span="557-557", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="ExpandoObjectConverter.cs"];
m7_332 [label="string s = null", span="556-556", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="ExpandoObjectConverter.cs"];
m7_334 [label="Assert.AreEqual(null, v.Value)", span="558-558", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="ExpandoObjectConverter.cs"];
m7_335 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="559-559", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WriteObjectNullStringValue()", file="ExpandoObjectConverter.cs"];
m7_365 [label="o[''m''] = new JValue('''')", span="640-640", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="ExpandoObjectConverter.cs"];
m7_370 [label="JObject moss = new JObject()", span="653-653", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_366 [label="o[''o''] = new JValue(@''<div class='s1'>'' + StringUtils.CarriageReturnLineFeed + @''</div>'')", span="641-641", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="ExpandoObjectConverter.cs"];
m7_369 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", span="651-651", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_371 [label="moss[''FirstName''] = new JValue(''Maurice'')", span="654-654", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_367 [label="StringAssert.AreEqual(@''{\r\n  ''''rc'''': 200,\r\n  ''''m'''': '''''''',\r\n  ''''o'''': ''''<div class='s1'>\r\n</div>''''\r\n}'', o.ToString())", span="643-647", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="ExpandoObjectConverter.cs"];
m7_368 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", span="636-636", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="ExpandoObjectConverter.cs"];
m7_372 [label="moss[''LastName''] = new JValue(''Moss'')", span="655-655", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_74 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", span="167-167", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="ExpandoObjectConverter.cs"];
m7_75 [label="JObject o = new JObject()", span="169-169", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="ExpandoObjectConverter.cs"];
m7_76 [label="JsonConvert.DeserializeObject<PrivateDefaultCtorList<int>>(''[1,2]'')", span="200-200", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_77 [label="Assert.AreEqual(1, o.Children().Count())", span="171-171", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="ExpandoObjectConverter.cs"];
m7_78 [label="JToken t", span="173-173", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="ExpandoObjectConverter.cs"];
m7_79 [label="Assert.AreEqual(true, o.TryGetValue(''PropertyNameValue'', out t))", span="174-174", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DictionaryItemShouldSet()", file="ExpandoObjectConverter.cs"];
m7_83 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ExpandoObjectConverter.cs"];
m7_84 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", span="224-224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="ExpandoObjectConverter.cs"];
m7_85 [label="var list = JsonConvert.DeserializeObject<PrivateDefaultCtorWithIEnumerableCtorList<int>>(''[1,2]'')", span="226-226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="ExpandoObjectConverter.cs"];
m7_86 [label="Assert.AreEqual(3, list.Count)", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="ExpandoObjectConverter.cs"];
m7_87 [label="Assert.AreEqual(1, list[0])", span="229-229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="ExpandoObjectConverter.cs"];
m7_88 [label="Assert.AreEqual(2, list[1])", span="230-230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="ExpandoObjectConverter.cs"];
m7_89 [label="Assert.AreEqual(0, list[2])", span="231-231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializePrivateListConstructor()", file="ExpandoObjectConverter.cs"];
m7_385 [label="Entry System.Array.GetLength(int)", span="0-0", cluster="System.Array.GetLength(int)", file="ExpandoObjectConverter.cs"];
m7_59 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", span="179-179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="ExpandoObjectConverter.cs"];
m7_60 [label="string json = @''[\r\n  ''''One'''',\r\n  ''''II'''',\r\n  ''''3''''\r\n]''", span="181-185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="ExpandoObjectConverter.cs"];
m7_61 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json), ''Cannot create and populate list type Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests+EnumerableClassFailure`1[System.String]. Path '', line 1, position 1.'')", span="187-187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="ExpandoObjectConverter.cs"];
m7_62 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", span="179-179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor_Failure()", file="ExpandoObjectConverter.cs"];
m7_63 [label="Assert.AreEqual(false, o.TryGetValue(null, out t))", span="159-159", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="ExpandoObjectConverter.cs"];
m7_64 [label="JsonConvert.DeserializeObject<EnumerableClassFailure<string>>(json)", span="187-187", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_65 [label="Assert.AreEqual(true, o.TryGetValue(''PropertyNameValue'', out t))", span="162-162", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="ExpandoObjectConverter.cs"];
m7_66 [label="Assert.AreEqual(true, JToken.DeepEquals(new JValue(1), t))", span="163-163", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="ExpandoObjectConverter.cs"];
m7_67 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", span="149-149", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.TryGetValue()", file="ExpandoObjectConverter.cs"];
m7_147 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="334-334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ExpandoObjectConverter.cs"];
m7_410 [label="JsonConvert.DeserializeObject<Array2D>(json)", span="1008-1008", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_31 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2085-2085", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="ExpandoObjectConverter.cs"];
m7_150 [label="JObject o = new JObject()", span="274-274", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_604 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", span="1421-1421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="ExpandoObjectConverter.cs"];
m7_605 [label="Article a1 = new Article(''a1'')", span="1423-1423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="ExpandoObjectConverter.cs"];
m7_606 [label="Article a2 = new Article(''a2'')", span="1424-1424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="ExpandoObjectConverter.cs"];
m7_607 [label="ArticleCollection articles1 = new ArticleCollection()", span="1426-1426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="ExpandoObjectConverter.cs"];
m7_499 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="114-114", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="ExpandoObjectConverter.cs"];
m7_608 [label="articles1.Add(a1)", span="1427-1427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="ExpandoObjectConverter.cs"];
m7_609 [label="articles1.Add(a2)", span="1428-1428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="ExpandoObjectConverter.cs"];
m7_610 [label="string jsonText = JsonConvert.SerializeObject(articles1)", span="1430-1430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="ExpandoObjectConverter.cs"];
m7_611 [label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="1432-1432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.InheritedListSerialize()", file="ExpandoObjectConverter.cs"];
m7_231 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="ExpandoObjectConverter.cs"];
m7_105 [label="Assert.AreEqual(1, o.Children().Count())", span="210-210", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="ExpandoObjectConverter.cs"];
m7_106 [label="Assert.AreEqual(false, ((ICollection<KeyValuePair<string, JToken>>)o).Remove(new KeyValuePair<string, JToken>(''PropertyNameValue1'', new JValue(1))))", span="212-212", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="ExpandoObjectConverter.cs"];
m7_107 [label="Assert.AreEqual(false, ((ICollection<KeyValuePair<string, JToken>>)o).Remove(new KeyValuePair<string, JToken>(''PropertyNameValue'', new JValue(2))))", span="213-213", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="ExpandoObjectConverter.cs"];
m7_108 [label="Assert.AreEqual(false, ((ICollection<KeyValuePair<string, JToken>>)o).Remove(new KeyValuePair<string, JToken>(''PropertyNameValue'', new JValue(1))))", span="214-214", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="ExpandoObjectConverter.cs"];
m7_109 [label="Assert.AreEqual(true, ((ICollection<KeyValuePair<string, JToken>>)o).Remove(new KeyValuePair<string, JToken>(''PropertyNameValue'', v)))", span="215-215", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="ExpandoObjectConverter.cs"];
m7_110 [label="Assert.AreEqual(0, o.Children().Count())", span="217-217", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="ExpandoObjectConverter.cs"];
m7_111 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", span="205-205", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionRemove()", file="ExpandoObjectConverter.cs"];
m7_269 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", span="585-585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.NullableValueGenericDictionary()", file="ExpandoObjectConverter.cs"];
m7_548 [label="Entry lambda expression", span="898-905", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_556 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddPropertyWithExistingName()", span="909-909", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddPropertyWithExistingName()", file="ExpandoObjectConverter.cs"];
m7_554 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddPropertyWithExistingName()", span="909-909", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddPropertyWithExistingName()", file="ExpandoObjectConverter.cs"];
m7_555 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JProperty p1 = new JProperty(''Test1'', 1);\r\n                JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                IList l = new JObject(p1, p2);\r\n\r\n                JProperty p3 = new JProperty(''Test2'', ''II'');\r\n\r\n                l.Add(p3);\r\n            }, ''Can not add property Test2 to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'')", span="911-920", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddPropertyWithExistingName()", file="ExpandoObjectConverter.cs"];
m7_557 [label="Entry lambda expression", span="911-920", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_558 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="913-913", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_559 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="914-914", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_560 [label="IList l = new JObject(p1, p2)", span="915-915", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_549 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="900-900", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_553 [label="Exit lambda expression", span="898-905", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_550 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="901-901", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_552 [label="l.Add(''Bad!'')", span="904-904", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_551 [label="IList l = new JObject(p1, p2)", span="902-902", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_561 [label="JProperty p3 = new JProperty(''Test2'', ''II'')", span="917-917", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_330 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", span="537-537", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.KeyValuePairIterate()", file="ExpandoObjectConverter.cs"];
m7_488 [label="Entry lambda expression", span="785-790", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_490 [label="changed = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null", span="788-788", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_489 [label="JObject s = (JObject)sender", span="787-787", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_491 [label="changedCount++", span="789-789", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_492 [label="Exit lambda expression", span="785-790", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_493 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", span="820-820", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="ExpandoObjectConverter.cs"];
m7_494 [label="JProperty p = new JProperty(''Test'', 1)", span="822-822", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="ExpandoObjectConverter.cs"];
m7_495 [label="IList l = new JObject(p)", span="823-823", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="ExpandoObjectConverter.cs"];
m7_496 [label="Assert.IsTrue(l.Contains(p))", span="825-825", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="ExpandoObjectConverter.cs"];
m7_497 [label="Assert.IsFalse(l.Contains(new JProperty(''Test'', 1)))", span="826-826", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="ExpandoObjectConverter.cs"];
m7_498 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", span="820-820", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListContains()", file="ExpandoObjectConverter.cs"];
m7_541 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="888-888", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_543 [label="l.Add(new JValue(''Bad!''))", span="891-891", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_542 [label="IList l = new JObject(p1, p2)", span="889-889", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_544 [label="Exit lambda expression", span="885-892", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_545 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadValue()", span="896-896", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadValue()", file="ExpandoObjectConverter.cs"];
m7_546 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JProperty p1 = new JProperty(''Test1'', 1);\r\n                JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                IList l = new JObject(p1, p2);\r\n\r\n                l.Add(''Bad!'');\r\n            }, ''Argument is not a JToken.'')", span="898-905", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadValue()", file="ExpandoObjectConverter.cs"];
m7_547 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadValue()", span="896-896", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadValue()", file="ExpandoObjectConverter.cs"];
m7_69 [label="Entry Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", span="555-555", cluster="Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", file="ExpandoObjectConverter.cs"];
m7_284 [label="string json = @''[ { ''''Value'''': [ ''''1'''', ''''2'''' ], ''''Key'''': ''''aaa'''', ''''BadContent'''': [ 0 ] }, { ''''Value'''': [ ''''3'''', ''''4'''' ], ''''Key'''': ''''bbb'''' } ]''", span="645-645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="ExpandoObjectConverter.cs"];
m7_123 [label="Assert.AreEqual(2, list[1])", span="287-287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="ExpandoObjectConverter.cs"];
m7_124 [label="Assert.AreEqual(3, list[2])", span="288-288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="ExpandoObjectConverter.cs"];
m7_125 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", span="280-280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollection()", file="ExpandoObjectConverter.cs"];
m7_71 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ExpandoObjectConverter.cs"];
m7_412 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="253-253", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="ExpandoObjectConverter.cs"];
m7_414 [label="object changing = null", span="721-721", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_413 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", span="719-719", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_415 [label="object changed = null", span="722-722", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_416 [label="int changingCount = 0", span="723-723", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_417 [label="int changedCount = 0", span="724-724", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_418 [label="JObject o = new JObject()", span="726-726", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_419 [label="o.PropertyChanging += (sender, args) =>\r\n            {\r\n                JObject s = (JObject)sender;\r\n                changing = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null;\r\n                changingCount++;\r\n            }", span="727-732", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_420 [label="o.PropertyChanged += (sender, args) =>\r\n            {\r\n                JObject s = (JObject)sender;\r\n                changed = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null;\r\n                changedCount++;\r\n            }", span="733-738", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_421 [label="o[''StringValue''] = ''value1''", span="740-740", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_422 [label="Assert.AreEqual(null, changing)", span="741-741", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_423 [label="Assert.AreEqual(''value1'', changed)", span="742-742", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_424 [label="Assert.AreEqual(''value1'', (string)o[''StringValue''])", span="743-743", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_615 [label="IList l = new JObject(p1, p2)", span="1000-1000", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="ExpandoObjectConverter.cs"];
m7_204 [label="Exit lambda expression", span="346-350", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_210 [label="((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[1], 1)", span="360-360", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_208 [label="Entry lambda expression", span="357-361", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_209 [label="JObject o = new JObject()", span="359-359", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_211 [label="Exit lambda expression", span="357-361", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_212 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToInsufficientArrayCapacity()", span="365-365", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToInsufficientArrayCapacity()", file="ExpandoObjectConverter.cs"];
m7_213 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JObject o = new JObject();\r\n                o.Add(''PropertyNameValue'', new JValue(1));\r\n                o.Add(''PropertyNameValue2'', new JValue(2));\r\n                o.Add(''PropertyNameValue3'', new JValue(3));\r\n\r\n                ((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[3], 1);\r\n            }, @''The number of elements in the source JObject is greater than the available space from arrayIndex to the end of the destination array.'')", span="367-375", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToInsufficientArrayCapacity()", file="ExpandoObjectConverter.cs"];
m7_214 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToInsufficientArrayCapacity()", span="365-365", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToInsufficientArrayCapacity()", file="ExpandoObjectConverter.cs"];
m7_215 [label="Entry lambda expression", span="367-375", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_205 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow()", span="355-355", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow()", file="ExpandoObjectConverter.cs"];
m7_207 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow()", span="355-355", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow()", file="ExpandoObjectConverter.cs"];
m7_206 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JObject o = new JObject();\r\n                ((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[1], 1);\r\n            }, @''arrayIndex is equal to or greater than the length of array.'')", span="357-361", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToArrayIndexEqualGreaterToArrayLengthShouldThrow()", file="ExpandoObjectConverter.cs"];
m7_216 [label="JObject o = new JObject()", span="369-369", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_612 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", span="996-996", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="ExpandoObjectConverter.cs"];
m7_613 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="998-998", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="ExpandoObjectConverter.cs"];
m7_614 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="999-999", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="ExpandoObjectConverter.cs"];
m7_425 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", span="1032-1032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="ExpandoObjectConverter.cs"];
m7_426 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1034-1034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="ExpandoObjectConverter.cs"];
m7_427 [label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="1036-1036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="ExpandoObjectConverter.cs"];
m7_428 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", span="1032-1032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooManyItems()", file="ExpandoObjectConverter.cs"];
m7_429 [label="Assert.AreEqual(1, changedCount)", span="749-749", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_430 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="1036-1036", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_431 [label="Assert.AreEqual(''value1'', changing)", span="752-752", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_432 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", span="1040-1040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="ExpandoObjectConverter.cs"];
m7_433 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1,2]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],{}]],''''After'''':''''After!''''}''", span="1042-1042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="ExpandoObjectConverter.cs"];
m7_434 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Unexpected token when deserializing multidimensional array: StartObject. Path 'Coordinates[3][1]', line 1, position 99.'')", span="1044-1044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="ExpandoObjectConverter.cs"];
m7_435 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", span="1040-1040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithBadItems()", file="ExpandoObjectConverter.cs"];
m7_436 [label="o[''StringValue''] = null", span="758-758", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_437 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="1044-1044", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_438 [label="Assert.AreEqual(null, changed)", span="760-760", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_439 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", span="1048-1048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="ExpandoObjectConverter.cs"];
m7_440 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[[1,1,1],[1,1]],[[1,2,1],[1,2,2]],[[2,1,1],[2,1,2]],[[2,2,1],[2,2,2]]],''''After'''':''''After!''''}''", span="1050-1050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="ExpandoObjectConverter.cs"];
m7_441 [label="ExceptionAssert.Throws<Exception>(() => JsonConvert.DeserializeObject<Array3D>(json), ''Cannot deserialize non-cubical array as multidimensional array.'')", span="1052-1052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="ExpandoObjectConverter.cs"];
m7_442 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", span="1048-1048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeArray3D_WithTooFewItems()", file="ExpandoObjectConverter.cs"];
m7_443 [label="Assert.AreEqual(null, changing)", span="766-766", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_444 [label="JsonConvert.DeserializeObject<Array3D>(json)", span="1052-1052", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_445 [label="Assert.AreEqual(JValue.CreateNull(), o[''NullValue''])", span="768-768", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanging()", file="ExpandoObjectConverter.cs"];
m7_446 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", span="1056-1056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="ExpandoObjectConverter.cs"];
m7_447 [label="Array3D aa = new Array3D()", span="1058-1058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="ExpandoObjectConverter.cs"];
m7_448 [label="aa.Before = ''Before!''", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="ExpandoObjectConverter.cs"];
m7_449 [label="aa.After = ''After!''", span="1060-1060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="ExpandoObjectConverter.cs"];
m7_450 [label="aa.Coordinates = new int[0, 0, 0]", span="1061-1061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="ExpandoObjectConverter.cs"];
m7_451 [label="string json = JsonConvert.SerializeObject(aa)", span="1063-1063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeEmpty3DArray()", file="ExpandoObjectConverter.cs"];
m7_260 [label="JObject o = JObject.FromObject(raw)", span="447-447", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="ExpandoObjectConverter.cs"];
m7_264 [label="Assert.AreEqual(''FirstNameValue'', raw.FirstName)", span="453-453", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="ExpandoObjectConverter.cs"];
m7_262 [label="JsonSerializer serializer = new JsonSerializer()", span="450-450", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="ExpandoObjectConverter.cs"];
m7_263 [label="raw = (PersonRaw)serializer.Deserialize(reader, typeof(PersonRaw))", span="451-451", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="ExpandoObjectConverter.cs"];
m7_265 [label="Assert.AreEqual(''LastNameValue'', raw.LastName)", span="454-454", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="ExpandoObjectConverter.cs"];
m7_266 [label="Assert.AreEqual(''[1,2,3,4,5]'', raw.RawContent.Value)", span="455-455", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="ExpandoObjectConverter.cs"];
m7_267 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", span="438-438", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="ExpandoObjectConverter.cs"];
m7_268 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="529-529", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="ExpandoObjectConverter.cs"];
m7_261 [label="JsonReader reader = new JTokenReader(o)", span="449-449", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="ExpandoObjectConverter.cs"];
m7_574 [label="Assert.IsTrue(l.Contains(p2))", span="939-939", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="ExpandoObjectConverter.cs"];
m7_624 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", span="1453-1453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_630 [label="string json = JsonConvert.SerializeObject(products, Formatting.Indented)", span="1472-1472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_627 [label="List<Product> products = new List<Product>()", span="1468-1468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_629 [label="products.Add(p2)", span="1470-1470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_631 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Name'''': ''''Product 1'''',\r\n    ''''ExpiryDate'''': ''''2000-12-29T00:00:00Z'''',\r\n    ''''Price'''': 99.95,\r\n    ''''Sizes'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Product 2'''',\r\n    ''''ExpiryDate'''': ''''2009-07-31T00:00:00Z'''',\r\n    ''''Price'''': 12.50,\r\n    ''''Sizes'''': null\r\n  }\r\n]'', json)", span="1488-1501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_628 [label="products.Add(p1)", span="1469-1469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_626 [label="Product p2 = new Product\r\n            {\r\n                Name = ''Product 2'',\r\n                Price = 12.50m,\r\n                ExpiryDate = new DateTime(2009, 7, 31, 0, 0, 0, DateTimeKind.Utc),\r\n            }", span="1461-1466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_625 [label="Product p1 = new Product\r\n            {\r\n                Name = ''Product 1'',\r\n                Price = 99.95m,\r\n                ExpiryDate = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc),\r\n            }", span="1455-1460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_632 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", span="1453-1453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.SerializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_39 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", span="142-142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="ExpandoObjectConverter.cs"];
m7_278 [label="Assert.AreEqual(''Name!'', newObject.Name)", span="638-638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="ExpandoObjectConverter.cs"];
m7_279 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", span="611-611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeConcurrentDictionary()", file="ExpandoObjectConverter.cs"];
m7_280 [label="Entry Newtonsoft.Json.Tests.TestObjects.Component.Component()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Component.Component()", file="ExpandoObjectConverter.cs"];
m7_282 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)", file="ExpandoObjectConverter.cs"];
m7_283 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", span="643-643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeKeyValuePairArray()", file="ExpandoObjectConverter.cs"];
m7_602 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", span="965-965", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="ExpandoObjectConverter.cs"];
m7_191 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNullArrayShouldThrow()", span="333-333", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionCopyToNullArrayShouldThrow()", file="ExpandoObjectConverter.cs"];
m7_257 [label="IList list = JsonConvert.DeserializeObject<IList>(''['1', 'two', 'III']'')", span="580-580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIList()", file="ExpandoObjectConverter.cs"];
m7_113 [label="IReadOnlyCollection<int> list = JsonConvert.DeserializeObject<IReadOnlyCollection<int>>(''[1,2,3]'')", span="270-270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyCollectionInterface()", file="ExpandoObjectConverter.cs"];
m7_258 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", span="438-438", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="ExpandoObjectConverter.cs"];
m7_259 [label="PersonRaw raw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="440-445", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeFromRaw()", file="ExpandoObjectConverter.cs"];
m7_36 [label="JToken o = JToken.Parse(json)", span="119-119", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectWithComments()", file="ExpandoObjectConverter.cs"];
m7_37 [label="Assert.AreEqual(''Apple'', (string)o[''Name''])", span="121-121", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectWithComments()", file="ExpandoObjectConverter.cs"];
m7_38 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectWithComments()", span="106-106", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectWithComments()", file="ExpandoObjectConverter.cs"];
m7_409 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="326-326", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="ExpandoObjectConverter.cs"];
m7_46 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", span="142-142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="ExpandoObjectConverter.cs"];
m7_321 [label="List = new ReadOnlyCollection<int>(new[] { 4 })", span="712-712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ExpandoObjectConverter.cs"];
m7_322 [label="Dictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 5 } })", span="713-713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ExpandoObjectConverter.cs"];
m7_323 [label="IReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 6 })", span="715-715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ExpandoObjectConverter.cs"];
m7_324 [label="ReadOnlyCollection = new ReadOnlyCollection<int>(new[] { 7 })", span="716-716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ExpandoObjectConverter.cs"];
m7_325 [label="IReadOnlyList = new ReadOnlyCollection<int>(new[] { 8 })", span="717-717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ExpandoObjectConverter.cs"];
m7_326 [label="IReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 9 } })", span="719-719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ExpandoObjectConverter.cs"];
m7_327 [label="ReadOnlyDictionary = new ReadOnlyDictionary<string, int>(new Dictionary<string, int> { { ''first'', 10 } })", span="720-720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ExpandoObjectConverter.cs"];
m7_328 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", span="705-705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass.PopulateReadOnlyTestClass()", file="ExpandoObjectConverter.cs"];
m7_329 [label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="ExpandoObjectConverter.cs"];
m7_526 [label="Assert.AreEqual(null, o.Data[1])", span="1302-1302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_527 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", span="1292-1292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_528 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", span="1306-1306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_529 [label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',[''''id'''', 1, ''''teststring'''', ''''test''''],{''''one'''':1}],''''type'''':''''rpc'''',''''tid'''':2}''", span="1308-1308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_530 [label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1310-1310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_531 [label="Assert.AreEqual(''Router'', o.Action)", span="1312-1312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_532 [label="Assert.AreEqual(''Navigate'', o.Method)", span="1313-1313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_533 [label="Assert.AreEqual(3, o.Data.Length)", span="1314-1314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_534 [label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1315-1315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ComplexValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_347 [label="Assert.AreEqual(''Apple'', name)", span="595-595", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="ExpandoObjectConverter.cs"];
m7_352 [label="JObject json = JObject.Parse(jsonText)", span="615-615", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="ExpandoObjectConverter.cs"];
m7_348 [label="Assert.AreEqual(''Small'', smallest)", span="596-596", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="ExpandoObjectConverter.cs"];
m7_351 [label="string jsonText = @''{\r\n  ''''short'''':\r\n  {\r\n    ''''original'''':''''http://www.foo.com/'''',\r\n    ''''short'''':''''krehqk'''',\r\n    ''''error'''':\r\n    {\r\n      ''''code'''':0,\r\n      ''''msg'''':''''No action taken''''\r\n    }\r\n  }\r\n}''", span="602-613", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="ExpandoObjectConverter.cs"];
m7_353 [label="Shortie shortie = new Shortie\r\n            {\r\n                Original = (string)json[''short''][''original''],\r\n                Short = (string)json[''short''][''short''],\r\n                Error = new ShortieException\r\n                {\r\n                    Code = (int)json[''short''][''error''][''code''],\r\n                    ErrorMessage = (string)json[''short''][''error''][''msg'']\r\n                }\r\n            }", span="617-626", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="ExpandoObjectConverter.cs"];
m7_349 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", span="572-572", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="ExpandoObjectConverter.cs"];
m7_350 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", span="600-600", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="ExpandoObjectConverter.cs"];
m7_354 [label="Assert.AreEqual(''http://www.foo.com/'', shortie.Original)", span="628-628", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="ExpandoObjectConverter.cs"];
m7_157 [label="contains = ((ICollection<KeyValuePair<string, JToken>>)o).Contains(new KeyValuePair<string, JToken>(''PropertyNameValue'', new JValue(2)))", span="284-284", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_160 [label="Assert.AreEqual(false, contains)", span="288-288", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_159 [label="contains = ((ICollection<KeyValuePair<string, JToken>>)o).Contains(new KeyValuePair<string, JToken>(''PropertyNameValue1'', new JValue(1)))", span="287-287", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_161 [label="contains = ((ICollection<KeyValuePair<string, JToken>>)o).Contains(default(KeyValuePair<string, JToken>))", span="290-290", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_158 [label="Assert.AreEqual(false, contains)", span="285-285", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_162 [label="Assert.AreEqual(false, contains)", span="291-291", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_356 [label="Assert.AreEqual(null, shortie.Shortened)", span="630-630", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="ExpandoObjectConverter.cs"];
m7_361 [label="Entry Newtonsoft.Json.Tests.TestObjects.ShortieException.ShortieException()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ShortieException.ShortieException()", file="ExpandoObjectConverter.cs"];
m7_357 [label="Assert.AreEqual(0, shortie.Error.Code)", span="631-631", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="ExpandoObjectConverter.cs"];
m7_362 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", span="636-636", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="ExpandoObjectConverter.cs"];
m7_358 [label="Assert.AreEqual(''No action taken'', shortie.Error.ErrorMessage)", span="632-632", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="ExpandoObjectConverter.cs"];
m7_359 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", span="600-600", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DeserializeClassManually()", file="ExpandoObjectConverter.cs"];
m7_363 [label="JObject o = new JObject()", span="638-638", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JObjectContainingHtml()", file="ExpandoObjectConverter.cs"];
m7_0 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.EmbedJValueStringInNewJObject()", span="61-61", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmbedJValueStringInNewJObject()", file="ExpandoObjectConverter.cs"];
m7_1 [label="string s = null", span="63-63", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmbedJValueStringInNewJObject()", color=green, community=0, file="ExpandoObjectConverter.cs"];
m7_2 [label="var v = new JValue(s)", span="64-64", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmbedJValueStringInNewJObject()", file="ExpandoObjectConverter.cs"];
m7_592 [label="json = JsonConvert.SerializeObject(new { selectList = foo2 })", span="1410-1410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="ExpandoObjectConverter.cs"];
m7_593 [label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1411-1411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="ExpandoObjectConverter.cs"];
m7_594 [label="NonGenericClass foo3 = new NonGenericClass()", span="1413-1413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="ExpandoObjectConverter.cs"];
m7_595 [label="foo3.Items.Add(new NonGenericItem { Value = ''Hello'' })", span="1414-1414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="ExpandoObjectConverter.cs"];
m7_596 [label="json = JsonConvert.SerializeObject(new { selectList = foo3 })", span="1416-1416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="ExpandoObjectConverter.cs"];
m7_597 [label="Assert.AreEqual(@''{''''selectList'''':[{''''Value'''':''''Hello''''}]}'', json)", span="1417-1417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="ExpandoObjectConverter.cs"];
m7_598 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", span="1397-1397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericCollectionInheritance()", file="ExpandoObjectConverter.cs"];
m7_599 [label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", span="1632-1632", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="ExpandoObjectConverter.cs"];
m7_601 [label="Assert.AreEqual(p2, l[2])", span="978-978", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListInsert()", file="ExpandoObjectConverter.cs"];
m7_146 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="ExpandoObjectConverter.cs"];
m7_119 [label="JObject o = new JObject()", span="225-225", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_120 [label="o.Add(''PropertyNameValue'', null)", span="226-226", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_121 [label="o.Add(''PropertyNameValue'', null)", span="227-227", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_122 [label="Exit lambda expression", span="223-228", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_28 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ExpandoObjectConverter.cs"];
m7_29 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="ExpandoObjectConverter.cs"];
m7_30 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="ExpandoObjectConverter.cs"];
m7_578 [label="Assert.AreEqual(null, p2.Parent)", span="944-944", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="ExpandoObjectConverter.cs"];
m7_251 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="432-432", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_252 [label="Assert.IsFalse(reader.Read())", span="434-434", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_253 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", span="397-397", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_254 [label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="52-52", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="ExpandoObjectConverter.cs"];
m7_255 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="410-410", cluster="Newtonsoft.Json.JsonReader.Read()", file="ExpandoObjectConverter.cs"];
m7_97 [label="Assert.AreEqual(true, o.Remove(''PropertyNameValue''))", span="199-199", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Remove()", file="ExpandoObjectConverter.cs"];
m7_584 [label="IList l = new JObject(p1, p2)", span="952-952", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="ExpandoObjectConverter.cs"];
m7_588 [label="l.Remove(p2)", span="960-960", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="ExpandoObjectConverter.cs"];
m7_586 [label="l.Remove(p1)", span="957-957", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="ExpandoObjectConverter.cs"];
m7_587 [label="Assert.AreEqual(1, l.Count)", span="958-958", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="ExpandoObjectConverter.cs"];
m7_589 [label="Assert.AreEqual(0, l.Count)", span="961-961", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="ExpandoObjectConverter.cs"];
m7_590 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", span="948-948", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="ExpandoObjectConverter.cs"];
m7_585 [label="l.RemoveAt(0)", span="955-955", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="ExpandoObjectConverter.cs"];
m7_104 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ExpandoObjectConverter.cs"];
m7_535 [label="Entry System.Collections.IList.Add(object)", span="0-0", cluster="System.Collections.IList.Add(object)", file="ExpandoObjectConverter.cs"];
m7_536 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadToken()", span="883-883", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadToken()", file="ExpandoObjectConverter.cs"];
m7_537 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JProperty p1 = new JProperty(''Test1'', 1);\r\n                JProperty p2 = new JProperty(''Test2'', ''Two'');\r\n                IList l = new JObject(p1, p2);\r\n\r\n                l.Add(new JValue(''Bad!''));\r\n            }, ''Can not add Newtonsoft.Json.Linq.JValue to Newtonsoft.Json.Linq.JObject.'')", span="885-892", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadToken()", file="ExpandoObjectConverter.cs"];
m7_538 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadToken()", span="883-883", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListAddBadToken()", file="ExpandoObjectConverter.cs"];
m7_539 [label="Entry lambda expression", span="885-892", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_540 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="887-887", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_192 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", span="448-448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="ExpandoObjectConverter.cs"];
m7_193 [label="GenericList = new List<string>()", span="450-450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="ExpandoObjectConverter.cs"];
m7_68 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="ExpandoObjectConverter.cs"];
m7_41 [label="var o = new JObject()", span="127-127", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", file="ExpandoObjectConverter.cs"];
m7_40 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", span="125-125", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", file="ExpandoObjectConverter.cs"];
m7_42 [label="o.Add(new JProperty(''novalue''))", span="128-128", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", file="ExpandoObjectConverter.cs"];
m7_43 [label="StringAssert.AreEqual(@''{\r\n  ''''novalue'''': null\r\n}'', o.ToString())", span="130-132", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", file="ExpandoObjectConverter.cs"];
m7_44 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", span="125-125", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.WritePropertyWithNoValue()", file="ExpandoObjectConverter.cs"];
m7_45 [label="Assert.AreEqual(null, result.ElementAt(2))", span="155-155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeIEnumerableFromConstructor()", file="ExpandoObjectConverter.cs"];
m7_386 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="ExpandoObjectConverter.cs"];
m7_388 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="687-687", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_387 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", span="685-685", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_389 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="688-688", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_390 [label="JObject o = new JObject(p1, p2)", span="690-690", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_391 [label="IList l = o", span="691-691", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_392 [label="Assert.AreEqual(p1, l[0])", span="692-692", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_393 [label="Assert.AreEqual(p2, l[1])", span="693-693", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_394 [label="JProperty p3 = new JProperty(''Test1'', ''III'')", span="695-695", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_395 [label="p1.Replace(p3)", span="697-697", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_396 [label="Assert.AreEqual(null, p1.Parent)", span="698-698", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_397 [label="Assert.AreEqual(l, p3.Parent)", span="699-699", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_172 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ExpandoObjectConverter.cs"];
m7_516 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", span="853-853", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="ExpandoObjectConverter.cs"];
m7_517 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="855-855", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="ExpandoObjectConverter.cs"];
m7_518 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="856-856", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListCopyTo()", file="ExpandoObjectConverter.cs"];
m7_519 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", span="1292-1292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_520 [label="string json = @''{''''action'''':''''Router'''',''''method'''':''''Navigate'''',''''data'''':[''''dashboard'''',null],''''type'''':''''rpc'''',''''tid'''':2}''", span="1294-1294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_521 [label="ObjectArrayPropertyTest o = JsonConvert.DeserializeObject<ObjectArrayPropertyTest>(json)", span="1296-1296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_522 [label="Assert.AreEqual(''Router'', o.Action)", span="1298-1298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_523 [label="Assert.AreEqual(''Navigate'', o.Method)", span="1299-1299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_524 [label="Assert.AreEqual(2, o.Data.Length)", span="1300-1300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_112 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="ExpandoObjectConverter.cs"];
m7_114 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.DuplicatePropertyNameShouldThrow()", span="221-221", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DuplicatePropertyNameShouldThrow()", file="ExpandoObjectConverter.cs"];
m7_115 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JObject o = new JObject();\r\n                o.Add(''PropertyNameValue'', null);\r\n                o.Add(''PropertyNameValue'', null);\r\n            }, ''Can not add property PropertyNameValue to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'')", span="223-228", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DuplicatePropertyNameShouldThrow()", file="ExpandoObjectConverter.cs"];
m7_116 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.DuplicatePropertyNameShouldThrow()", span="221-221", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.DuplicatePropertyNameShouldThrow()", file="ExpandoObjectConverter.cs"];
m7_117 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="350-350", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="ExpandoObjectConverter.cs"];
m7_118 [label="Entry lambda expression", span="223-228", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_659 [label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_48 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="ExpandoObjectConverter.cs"];
m7_15 [label="Assert.AreEqual(''foobar'', myOtherResult[0, 1])", span="112-112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="ExpandoObjectConverter.cs"];
m7_16 [label="Assert.AreEqual(true, myOtherResult[1, 0])", span="114-114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="ExpandoObjectConverter.cs"];
m7_17 [label="Assert.AreEqual(0.4, myOtherResult[1, 1])", span="115-115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="ExpandoObjectConverter.cs"];
m7_18 [label="Assert.AreEqual(0.05, myOtherResult[2, 0])", span="117-117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="ExpandoObjectConverter.cs"];
m7_19 [label="Assert.AreEqual(6L, myOtherResult[2, 1])", span="118-118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="ExpandoObjectConverter.cs"];
m7_20 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", span="76-76", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="ExpandoObjectConverter.cs"];
m7_21 [label="JObject role = (JObject)JToken.ReadFrom(reader)", span="90-90", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReadWithSupportMultipleContent()", file="ExpandoObjectConverter.cs"];
m7_22 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="ExpandoObjectConverter.cs"];
m7_23 [label="!reader.Read()", span="94-94", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReadWithSupportMultipleContent()", file="ExpandoObjectConverter.cs"];
m7_24 [label="Assert.AreEqual(2, roles.Count)", span="100-100", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReadWithSupportMultipleContent()", file="ExpandoObjectConverter.cs"];
m7_25 [label="Assert.AreEqual(''Admin'', (string)roles[0][''name''])", span="101-101", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReadWithSupportMultipleContent()", file="ExpandoObjectConverter.cs"];
m7_26 [label="Assert.AreEqual(''Publisher'', (string)roles[1][''name''])", span="102-102", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReadWithSupportMultipleContent()", file="ExpandoObjectConverter.cs"];
m7_27 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ReadWithSupportMultipleContent()", span="79-79", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReadWithSupportMultipleContent()", file="ExpandoObjectConverter.cs"];
m7_222 [label="string json = JsonConvert.SerializeObject(list, Formatting.Indented)", span="508-508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="ExpandoObjectConverter.cs"];
m7_223 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Key'''': ''''key1'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 1.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  },\r\n  {\r\n    ''''Key'''': ''''key2'''',\r\n    ''''Value'''': {\r\n      ''''HourlyWage'''': 2.0,\r\n      ''''Name'''': null,\r\n      ''''BirthDate'''': ''''2000-12-01T23:01:01Z'''',\r\n      ''''LastModified'''': ''''2000-12-01T23:01:01Z''''\r\n    }\r\n  }\r\n]'', json)", span="510-529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="ExpandoObjectConverter.cs"];
m7_224 [label="List<KeyValuePair<string, WagePerson>> result = JsonConvert.DeserializeObject<List<KeyValuePair<string, WagePerson>>>(json)", span="531-531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="ExpandoObjectConverter.cs"];
m7_225 [label="Assert.AreEqual(2, result.Count)", span="532-532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="ExpandoObjectConverter.cs"];
m7_226 [label="Assert.AreEqual(''key1'', result[0].Key)", span="533-533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="ExpandoObjectConverter.cs"];
m7_227 [label="Assert.AreEqual(1, result[0].Value.HourlyWage)", span="534-534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="ExpandoObjectConverter.cs"];
m7_228 [label="Assert.AreEqual(''key2'', result[1].Key)", span="535-535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="ExpandoObjectConverter.cs"];
m7_229 [label="Assert.AreEqual(2, result[1].Value.HourlyWage)", span="536-536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeComplexKeyValuePair()", file="ExpandoObjectConverter.cs"];
m7_579 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", span="924-924", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="ExpandoObjectConverter.cs"];
m7_233 [label="PersonRaw raw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="399-404", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_234 [label="JObject o = JObject.FromObject(raw)", span="406-406", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_235 [label="JsonReader reader = new JTokenReader(o)", span="408-408", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_236 [label="Assert.IsTrue(reader.Read())", span="410-410", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_237 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="411-411", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_238 [label="Assert.IsTrue(reader.Read())", span="413-413", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_239 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="414-414", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_240 [label="Assert.IsTrue(reader.Read())", span="416-416", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_241 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="417-417", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_242 [label="Assert.IsTrue(reader.Read())", span="419-419", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_243 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="420-420", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_244 [label="Assert.IsTrue(reader.Read())", span="422-422", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_245 [label="Assert.AreEqual(JsonToken.Raw, reader.TokenType)", span="423-423", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_246 [label="Assert.IsTrue(reader.Read())", span="425-425", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_247 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="426-426", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_248 [label="Assert.IsTrue(reader.Read())", span="428-428", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_249 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="429-429", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_250 [label="Assert.IsTrue(reader.Read())", span="431-431", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.JTokenReader()", file="ExpandoObjectConverter.cs"];
m7_564 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", span="924-924", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="ExpandoObjectConverter.cs"];
m7_565 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="926-926", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="ExpandoObjectConverter.cs"];
m7_566 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="927-927", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="ExpandoObjectConverter.cs"];
m7_569 [label="l.Remove(p3)", span="933-933", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="ExpandoObjectConverter.cs"];
m7_572 [label="Assert.AreEqual(1, l.Count)", span="937-937", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="ExpandoObjectConverter.cs"];
m7_567 [label="IList l = new JObject(p1, p2)", span="928-928", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="ExpandoObjectConverter.cs"];
m7_571 [label="l.Remove(p1)", span="936-936", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="ExpandoObjectConverter.cs"];
m7_568 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="930-930", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="ExpandoObjectConverter.cs"];
m7_570 [label="Assert.AreEqual(2, l.Count)", span="934-934", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="ExpandoObjectConverter.cs"];
m7_573 [label="Assert.IsFalse(l.Contains(p1))", span="938-938", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="ExpandoObjectConverter.cs"];
m7_9 [label="object[,] myOtherArray =\r\n            {\r\n                { new KeyValuePair<string, double>(''my value'', 0.8), ''foobar'' },\r\n                { true, 0.4d },\r\n                { 0.05f, 6 }\r\n            }", span="78-83", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="ExpandoObjectConverter.cs"];
m7_154 [label="Assert.AreEqual(false, contains)", span="279-279", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_155 [label="contains = ((ICollection<KeyValuePair<string, JToken>>)o).Contains(new KeyValuePair<string, JToken>(''PropertyNameValue'', v))", span="281-281", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_156 [label="Assert.AreEqual(true, contains)", span="282-282", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_10 [label="string myOtherArrayAsString = JsonConvert.SerializeObject(myOtherArray, Formatting.Indented)", span="85-85", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="ExpandoObjectConverter.cs"];
m7_452 [label="Entry lambda expression", span="727-732", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_453 [label="JObject s = (JObject)sender", span="729-729", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_500 [label="Entry System.Collections.IList.Contains(object)", span="0-0", cluster="System.Collections.IList.Contains(object)", file="ExpandoObjectConverter.cs"];
m7_374 [label="moss[''Department''] = new JValue(''IT'')", span="657-657", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_376 [label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Maurice'''',\r\n  ''''LastName'''': ''''Moss'''',\r\n  ''''BirthDate'''': ''''1977-12-30T00:00:00'''',\r\n  ''''Department'''': ''''IT'''',\r\n  ''''JobTitle'''': ''''Support''''\r\n}'', moss.ToString())", span="660-666", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_375 [label="moss[''JobTitle''] = new JValue(''Support'')", span="658-658", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_377 [label="JObject jen = new JObject()", span="668-668", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_378 [label="jen[''FirstName''] = ''Jen''", span="669-669", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_379 [label="jen[''LastName''] = ''Barber''", span="670-670", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_380 [label="jen[''BirthDate''] = new DateTime(1978, 3, 15)", span="671-671", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_381 [label="jen[''Department''] = ''IT''", span="672-672", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_382 [label="jen[''JobTitle''] = ''Manager''", span="673-673", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_383 [label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Jen'''',\r\n  ''''LastName'''': ''''Barber'''',\r\n  ''''BirthDate'''': ''''1978-03-15T00:00:00'''',\r\n  ''''Department'''': ''''IT'''',\r\n  ''''JobTitle'''': ''''Manager''''\r\n}'', jen.ToString())", span="675-681", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_384 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", span="651-651", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_163 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", span="271-271", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_13 [label="object[,] myOtherResult = JsonConvert.DeserializeObject<object[,]>(myOtherArrayAsString)", span="110-110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="ExpandoObjectConverter.cs"];
m7_270 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Parse_ShouldThrowOnUnexpectedToken()", span="459-459", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Parse_ShouldThrowOnUnexpectedToken()", file="ExpandoObjectConverter.cs"];
m7_275 [label="JObject.Parse(json)", span="464-464", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_273 [label="Entry lambda expression", span="461-465", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_274 [label="string json = @''[''''prop'''']''", span="463-463", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_276 [label="Exit lambda expression", span="461-465", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_272 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.Parse_ShouldThrowOnUnexpectedToken()", span="459-459", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Parse_ShouldThrowOnUnexpectedToken()", file="ExpandoObjectConverter.cs"];
m7_271 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''[''''prop'''']'';\r\n                JObject.Parse(json);\r\n            }, ''Error reading JObject from JsonReader. Current JsonReader item is not an object: StartArray. Path '', line 1, position 1.'')", span="461-465", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Parse_ShouldThrowOnUnexpectedToken()", file="ExpandoObjectConverter.cs"];
m7_501 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", span="830-830", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="ExpandoObjectConverter.cs"];
m7_502 [label="JProperty p = new JProperty(''Test'', 1)", span="832-832", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="ExpandoObjectConverter.cs"];
m7_503 [label="IList l = new JObject(p)", span="833-833", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="ExpandoObjectConverter.cs"];
m7_504 [label="Assert.AreEqual(0, l.IndexOf(p))", span="835-835", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="ExpandoObjectConverter.cs"];
m7_505 [label="Assert.AreEqual(-1, l.IndexOf(new JProperty(''Test'', 1)))", span="836-836", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="ExpandoObjectConverter.cs"];
m7_506 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", span="830-830", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListIndexOf()", file="ExpandoObjectConverter.cs"];
m7_405 [label="Assert.AreEqual(l, p4.Parent)", span="711-711", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_406 [label="Assert.AreEqual(p3, l[0])", span="713-713", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_407 [label="Assert.AreEqual(p4, l[1])", span="714-714", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_408 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", span="685-685", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_11 [label="StringAssert.AreEqual(@''[\r\n  [\r\n    {\r\n      ''''Key'''': ''''my value'''',\r\n      ''''Value'''': 0.8\r\n    },\r\n    ''''foobar''''\r\n  ],\r\n  [\r\n    true,\r\n    0.4\r\n  ],\r\n  [\r\n    0.05,\r\n    6\r\n  ]\r\n]'', myOtherArrayAsString)", span="87-103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="ExpandoObjectConverter.cs"];
m7_90 [label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="595-595", cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="ExpandoObjectConverter.cs"];
m7_217 [label="o.Add(''PropertyNameValue'', new JValue(1))", span="370-370", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_219 [label="o.Add(''PropertyNameValue3'', new JValue(3))", span="372-372", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_221 [label="Exit lambda expression", span="367-375", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_218 [label="o.Add(''PropertyNameValue2'', new JValue(2))", span="371-371", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_220 [label="((ICollection<KeyValuePair<string, JToken>>)o).CopyTo(new KeyValuePair<string, JToken>[3], 1)", span="374-374", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_230 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="ExpandoObjectConverter.cs"];
m7_633 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", span="1505-1505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_635 [label="List<Product> products = JsonConvert.DeserializeObject<List<Product>>(json)", span="1522-1522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_634 [label="string json = @''[\r\n        {\r\n          ''''Name'''': ''''Product 1'''',\r\n          ''''ExpiryDate'''': ''''\/Date(978048000000)\/'''',\r\n          ''''Price'''': 99.95,\r\n          ''''Sizes'''': null\r\n        },\r\n        {\r\n          ''''Name'''': ''''Product 2'''',\r\n          ''''ExpiryDate'''': ''''\/Date(1248998400000)\/'''',\r\n          ''''Price'''': 12.50,\r\n          ''''Sizes'''': null\r\n        }\r\n      ]''", span="1507-1520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_636 [label="Product p1 = products[0]", span="1524-1524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_637 [label="Assert.AreEqual(2, products.Count)", span="1526-1526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_638 [label="Assert.AreEqual(''Product 1'', p1.Name)", span="1527-1527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_639 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", span="1505-1505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeGenericList()", file="ExpandoObjectConverter.cs"];
m7_616 [label="JProperty p3 = new JProperty(''Test3'', ''III'')", span="1002-1002", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListSetItem()", file="ExpandoObjectConverter.cs"];
m7_640 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", span="1532-1532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="ExpandoObjectConverter.cs"];
m7_642 [label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1542-1542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="ExpandoObjectConverter.cs"];
m7_641 [label="ReadOnlyIntegerList l = new ReadOnlyIntegerList(new List<int>\r\n            {\r\n                1,\r\n                2,\r\n                3,\r\n                int.MaxValue\r\n            })", span="1534-1540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="ExpandoObjectConverter.cs"];
m7_643 [label="StringAssert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3,\r\n  2147483647\r\n]'', json)", span="1544-1549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="ExpandoObjectConverter.cs"];
m7_644 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", span="1532-1532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyIntegerList()", file="ExpandoObjectConverter.cs"];
m7_580 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="ExpandoObjectConverter.cs"];
m7_72 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="594-594", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="ExpandoObjectConverter.cs"];
m7_454 [label="changing = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null", span="730-730", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_456 [label="Exit lambda expression", span="727-732", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_455 [label="changingCount++", span="731-731", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_457 [label="Entry lambda expression", span="733-738", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_458 [label="JObject s = (JObject)sender", span="735-735", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_459 [label="changed = (s[args.PropertyName] != null) ? ((JValue)s[args.PropertyName]).Value : null", span="736-736", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_460 [label="changedCount++", span="737-737", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_461 [label="Exit lambda expression", span="733-738", cluster="lambda expression", file="ExpandoObjectConverter.cs"];
m7_462 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", span="779-779", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_463 [label="object changed = null", span="781-781", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_464 [label="int changedCount = 0", span="782-782", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_148 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", span="271-271", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_149 [label="JValue v = new JValue(1)", span="273-273", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionContains()", file="ExpandoObjectConverter.cs"];
m7_35 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_336 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", span="766-766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="ExpandoObjectConverter.cs"];
m7_337 [label="string json = @''{\r\n  ''''NonReadOnlyList'''': [\r\n    11\r\n  ],\r\n  ''''NonReadOnlyDictionary'''': {\r\n    ''''first'''': 12\r\n  },\r\n  ''''Array'''': [\r\n    13\r\n  ],\r\n  ''''List'''': [\r\n    14\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''first'''': 15\r\n  },\r\n  ''''IReadOnlyCollection'''': [\r\n    16\r\n  ],\r\n  ''''ReadOnlyCollection'''': [\r\n    17\r\n  ],\r\n  ''''IReadOnlyList'''': [\r\n    18\r\n  ],\r\n  ''''IReadOnlyDictionary'''': {\r\n    ''''first'''': 19\r\n  },\r\n  ''''ReadOnlyDictionary'''': {\r\n    ''''first'''': 20\r\n  }\r\n}''", span="768-799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="ExpandoObjectConverter.cs"];
m7_338 [label="var c2 = JsonConvert.DeserializeObject<PopulateReadOnlyTestClass>(json)", span="801-801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="ExpandoObjectConverter.cs"];
m7_339 [label="Assert.AreEqual(1, c2.NonReadOnlyDictionary.Count)", span="803-803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="ExpandoObjectConverter.cs"];
m7_340 [label="Assert.AreEqual(12, c2.NonReadOnlyDictionary[''first''])", span="804-804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyCollections()", file="ExpandoObjectConverter.cs"];
m7_364 [label="Entry Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", span="1601-1601", cluster="Newtonsoft.Json.Tests.Serialization.Array3D.Array3D()", file="ExpandoObjectConverter.cs"];
m7_70 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="268-268", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="ExpandoObjectConverter.cs"];
m7_3 [label="dynamic o = JObject.FromObject(new { title = v })", span="65-65", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmbedJValueStringInNewJObject()", file="ExpandoObjectConverter.cs"];
m7_4 [label="string output = o.ToString()", span="67-67", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmbedJValueStringInNewJObject()", file="ExpandoObjectConverter.cs"];
m7_5 [label="JsonConvert.DeserializeObject<NameValueCollectionTestClass>(''{Collection:[]}'')", span="70-70", cluster="lambda expression", color=green, community=0, file="ExpandoObjectConverter.cs"];
m7_6 [label="Assert.AreEqual(null, v.Value)", span="73-73", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.EmbedJValueStringInNewJObject()", color=red, community=0, file="ExpandoObjectConverter.cs"];
m7_7 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="ExpandoObjectConverter.cs"];
m7_8 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", span="76-76", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="ExpandoObjectConverter.cs"];
m7_12 [label="JObject o = JObject.Parse(@''{\r\n              ''''Key'''': ''''my value'''',\r\n              ''''Value'''': 0.8\r\n            }'')", span="105-108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.MultiDObjectArray()", file="ExpandoObjectConverter.cs"];
m7_194 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", span="448-448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass.GenericListTestClass()", file="ExpandoObjectConverter.cs"];
m7_562 [label="Entry Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", file="ExpandoObjectConverter.cs"];
m7_403 [label="p2.Replace(p4)", span="709-709", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_470 [label="Assert.AreEqual(1, changedCount)", span="795-795", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_477 [label="o[''StringValue''] = null", span="805-805", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_563 [label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="ExpandoObjectConverter.cs"];
m7_341 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", span="572-572", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="ExpandoObjectConverter.cs"];
m7_342 [label="string json = @''{\r\n        ''''Name'''': ''''Apple'''',\r\n        ''''Expiry'''': new Date(1230422400000),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': [\r\n          ''''Small'''',\r\n          ''''Medium'''',\r\n          ''''Large''''\r\n        ]\r\n      }''", span="574-583", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="ExpandoObjectConverter.cs"];
m7_343 [label="JObject o = JObject.Parse(json)", span="585-585", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="ExpandoObjectConverter.cs"];
m7_344 [label="string name = (string)o[''Name'']", span="587-587", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="ExpandoObjectConverter.cs"];
m7_345 [label="JArray sizes = (JArray)o[''Sizes'']", span="590-590", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="ExpandoObjectConverter.cs"];
m7_346 [label="string smallest = (string)sizes[0]", span="592-592", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Example()", file="ExpandoObjectConverter.cs"];
m7_645 [label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", span="1572-1572", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="ExpandoObjectConverter.cs"];
m7_654 [label="_list = l", span="1574-1574", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="ExpandoObjectConverter.cs"];
m7_655 [label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", span="1572-1572", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.ReadOnlyIntegerList(System.Collections.Generic.List<int>)", file="ExpandoObjectConverter.cs"];
m7_398 [label="Assert.AreEqual(p3, l[0])", span="701-701", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_399 [label="Assert.AreEqual(p2, l[1])", span="702-702", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_400 [label="Assert.AreEqual(2, l.Count)", span="704-704", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_401 [label="Assert.AreEqual(2, o.Properties().Count())", span="705-705", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_373 [label="moss[''BirthDate''] = new JValue(new DateTime(1977, 12, 30))", span="656-656", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ImplicitValueConversions()", file="ExpandoObjectConverter.cs"];
m7_133 [label="((ICollection<KeyValuePair<string, JToken>>)o).Add(new KeyValuePair<string, JToken>(''PropertyNameValue'', new JValue(1)))", span="249-249", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericCollectionAdd()", file="ExpandoObjectConverter.cs"];
m7_525 [label="Assert.AreEqual(''dashboard'', o.Data[0])", span="1301-1301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrimitiveValuesInObjectArray()", file="ExpandoObjectConverter.cs"];
m7_134 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", span="305-305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="ExpandoObjectConverter.cs"];
m7_135 [label="ReadOnlyDictionary<string, int> dic = JsonConvert.DeserializeObject<ReadOnlyDictionary<string, int>>(''{'one':1,'two':2}'')", span="307-307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="ExpandoObjectConverter.cs"];
m7_136 [label="Assert.AreEqual(2, dic.Count)", span="309-309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.DeserializeReadOnlyDictionary()", file="ExpandoObjectConverter.cs"];
m7_190 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="ExpandoObjectConverter.cs"];
m7_411 [label="Entry Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="399-399", cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="ExpandoObjectConverter.cs"];
m7_508 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", span="840-840", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="ExpandoObjectConverter.cs"];
m7_509 [label="JProperty p = new JProperty(''Test'', 1)", span="842-842", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="ExpandoObjectConverter.cs"];
m7_510 [label="IList l = new JObject(p)", span="843-843", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="ExpandoObjectConverter.cs"];
m7_511 [label="Assert.AreEqual(1, l.Count)", span="845-845", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="ExpandoObjectConverter.cs"];
m7_512 [label="l.Clear()", span="847-847", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="ExpandoObjectConverter.cs"];
m7_513 [label="Assert.AreEqual(0, l.Count)", span="849-849", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="ExpandoObjectConverter.cs"];
m7_514 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", span="840-840", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListClear()", file="ExpandoObjectConverter.cs"];
m7_576 [label="Assert.AreEqual(0, l.Count)", span="942-942", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemove()", file="ExpandoObjectConverter.cs"];
m7_577 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="ExpandoObjectConverter.cs"];
m7_581 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", span="948-948", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="ExpandoObjectConverter.cs"];
m7_582 [label="JProperty p1 = new JProperty(''Test1'', 1)", span="950-950", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="ExpandoObjectConverter.cs"];
m7_583 [label="JProperty p2 = new JProperty(''Test2'', ''Two'')", span="951-951", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.IListRemoveAt()", file="ExpandoObjectConverter.cs"];
m7_507 [label="Entry System.Collections.IList.IndexOf(object)", span="0-0", cluster="System.Collections.IList.IndexOf(object)", file="ExpandoObjectConverter.cs"];
m7_49 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", span="162-162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="ExpandoObjectConverter.cs"];
m7_50 [label="_values = new List<T>()", span="164-164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="ExpandoObjectConverter.cs"];
m7_51 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", span="162-162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>.EnumerableClassFailure()", file="ExpandoObjectConverter.cs"];
m7_52 [label="Assert.AreEqual(0, d.Keys.Count)", span="141-141", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.Keys()", file="ExpandoObjectConverter.cs"];
m7_285 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="205-205", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="ExpandoObjectConverter.cs"];
m7_286 [label="Entry Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", span="480-480", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="ExpandoObjectConverter.cs"];
m7_287 [label="string json = @''{''''foo'''':true}''", span="482-482", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="ExpandoObjectConverter.cs"];
m7_288 [label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="483-483", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="ExpandoObjectConverter.cs"];
m7_289 [label="bool? value = o.Value<bool?>(''foo'')", span="484-484", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="ExpandoObjectConverter.cs"];
m7_290 [label="Assert.AreEqual(true, value)", span="485-485", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="ExpandoObjectConverter.cs"];
m7_291 [label="json = @''{''''foo'''':null}''", span="487-487", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="ExpandoObjectConverter.cs"];
m7_292 [label="o = (JObject)JsonConvert.DeserializeObject(json)", span="488-488", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="ExpandoObjectConverter.cs"];
m7_293 [label="value = o.Value<bool?>(''foo'')", span="489-489", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="ExpandoObjectConverter.cs"];
m7_294 [label="Assert.AreEqual(null, value)", span="490-490", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="ExpandoObjectConverter.cs"];
m7_295 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", span="480-480", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.GenericValueCast()", file="ExpandoObjectConverter.cs"];
m7_515 [label="Entry System.Collections.IList.Clear()", span="0-0", cluster="System.Collections.IList.Clear()", file="ExpandoObjectConverter.cs"];
m7_617 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", span="1439-1439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="ExpandoObjectConverter.cs"];
m7_618 [label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="1441-1441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="ExpandoObjectConverter.cs"];
m7_619 [label="string jsonText = JsonConvert.SerializeObject(r1)", span="1443-1443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="ExpandoObjectConverter.cs"];
m7_620 [label="Assert.AreEqual(''[0,1,2,3,4]'', jsonText)", span="1445-1445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="ExpandoObjectConverter.cs"];
m7_402 [label="JProperty p4 = new JProperty(''Test4'', ''IV'')", span="707-707", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_404 [label="Assert.AreEqual(null, p2.Parent)", span="710-710", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.ReplaceJPropertyWithJPropertyWithSameName()", file="ExpandoObjectConverter.cs"];
m7_479 [label="Assert.AreEqual(null, (string)o[''StringValue''])", span="807-807", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_481 [label="o[''NullValue''] = null", span="810-810", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_480 [label="Assert.AreEqual(3, changedCount)", span="808-808", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_482 [label="Assert.AreEqual(null, changed)", span="811-811", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_483 [label="Assert.AreEqual(JValue.CreateNull(), o[''NullValue''])", span="812-812", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_484 [label="Assert.AreEqual(4, changedCount)", span="813-813", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_485 [label="o[''NullValue''] = null", span="815-815", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_486 [label="Assert.AreEqual(4, changedCount)", span="816-816", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_487 [label="Exit Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", span="779-779", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_47 [label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="635-635", cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="ExpandoObjectConverter.cs"];
m7_678 [label="Entry Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1667-1667", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs"];
m7_684 [label="newStrings.Add(s)", span="1677-1677", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs"];
m7_683 [label="string s = (string)reader.Value", span="1676-1676", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs"];
m7_680 [label="List<string> newStrings = new List<string>(existingStrings)", span="1670-1670", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs"];
m7_685 [label="reader.Read()", span="1679-1679", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs"];
m7_682 [label="reader.TokenType != JsonToken.EndArray", span="1674-1674", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs"];
m7_679 [label="List<string> existingStrings = (List<string>)existingValue", span="1669-1669", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs"];
m7_681 [label="reader.Read()", span="1672-1672", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs"];
m7_686 [label="return newStrings;", span="1682-1682", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs"];
m7_687 [label="Exit Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1667-1667", cluster="Newtonsoft.Json.Tests.Serialization.StringListAppenderConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExpandoObjectConverter.cs"];
m7_472 [label="Assert.AreEqual(1, changedCount)", span="798-798", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_473 [label="o[''StringValue''] = ''value2''", span="800-800", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_474 [label="Assert.AreEqual(''value2'', changed)", span="801-801", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_475 [label="Assert.AreEqual(''value2'', (string)o[''StringValue''])", span="802-802", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_665 [label="Entry Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", span="1637-1637", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_666 [label="Items != null", span="1639-1639", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_667 [label=Items, span="1641-1641", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_669 [label="yield break;", span="1647-1647", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_668 [label="yield return item;", span="1643-1643", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_670 [label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", span="1637-1637", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_660 [label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", span="1587-1587", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_661 [label="return GetEnumerator();", span="1589-1589", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_662 [label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", span="1587-1587", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.System.Collections.IEnumerable.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_469 [label="Assert.AreEqual(''value1'', (string)o[''StringValue''])", span="794-794", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_471 [label="o[''StringValue''] = ''value1''", span="797-797", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_476 [label="Assert.AreEqual(2, changedCount)", span="803-803", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_478 [label="Assert.AreEqual(null, changed)", span="806-806", cluster="Newtonsoft.Json.Tests.Linq.JObjectTests.PropertyChanged()", file="ExpandoObjectConverter.cs"];
m7_663 [label="Items = new List<T>()", span="1634-1634", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="ExpandoObjectConverter.cs"];
m7_664 [label="Exit Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", span="1632-1632", cluster="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>.GenericClass()", file="ExpandoObjectConverter.cs"];
m7_621 [label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="1447-1447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="ExpandoObjectConverter.cs"];
m7_622 [label="CollectionAssert.AreEqual(r1, r2)", span="1449-1449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="ExpandoObjectConverter.cs"];
m7_623 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", span="1439-1439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.ReadOnlyCollectionSerialize()", file="ExpandoObjectConverter.cs"];
m7_656 [label="Entry Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", span="1582-1582", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_657 [label="return _list.GetEnumerator();", span="1584-1584", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_658 [label="Exit Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", span="1582-1582", cluster="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList.GetEnumerator()", file="ExpandoObjectConverter.cs"];
m7_73 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="ExpandoObjectConverter.cs"];
m7_705 [label=json, span="", file="ExpandoObjectConverter.cs"];
m7_710 [label=json, span="", file="ExpandoObjectConverter.cs"];
m7_712 [label=json, span="", file="ExpandoObjectConverter.cs"];
m7_713 [label=json, span="", file="ExpandoObjectConverter.cs"];
m7_714 [label=json, span="", file="ExpandoObjectConverter.cs"];
m7_715 [label=json, span="", file="ExpandoObjectConverter.cs"];
m7_716 [label=json, span="", file="ExpandoObjectConverter.cs"];
m7_717 [label=json, span="", file="ExpandoObjectConverter.cs"];
m7_718 [label=json, span="", file="ExpandoObjectConverter.cs"];
m7_709 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass", span="", file="ExpandoObjectConverter.cs"];
m7_706 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>", span="", file="ExpandoObjectConverter.cs"];
m7_711 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass", span="", file="ExpandoObjectConverter.cs"];
m7_707 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>", span="", file="ExpandoObjectConverter.cs"];
m7_708 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>", span="", file="ExpandoObjectConverter.cs"];
m7_719 [label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList", span="", file="ExpandoObjectConverter.cs"];
m7_720 [label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>", span="", file="ExpandoObjectConverter.cs"];
m7_703 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>", span="", file="ExpandoObjectConverter.cs"];
m7_704 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>", span="", file="ExpandoObjectConverter.cs"];
m8_30 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy", file="JArray.cs"];
m8_20 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="JArray.cs"];
m8_32 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="JArray.cs"];
m8_9 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JArray.cs"];
m8_11 [label="Entry Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", span="58-58", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_12 [label="Schemas = new ReadOnlyCollection<JsonSchema>(source.Schemas.Union(new[] { schema }).ToList())", span="60-60", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_13 [label="Properties = new Dictionary<string, JsonSchemaNode>(source.Properties)", span="61-61", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_14 [label="PatternProperties = new Dictionary<string, JsonSchemaNode>(source.PatternProperties)", span="62-62", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_15 [label="Items = new List<JsonSchemaNode>(source.Items)", span="63-63", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_16 [label="AdditionalProperties = source.AdditionalProperties", span="64-64", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_17 [label="AdditionalItems = source.AdditionalItems", span="65-65", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_18 [label="Id = GetId(Schemas)", span="67-67", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_19 [label="Exit Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", span="58-58", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_31 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="JArray.cs"];
m8_36 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="JArray.cs"];
m8_33 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="JArray.cs"];
m8_34 [label="s.InternalId", span="77-77", cluster="lambda expression", file="JArray.cs"];
m8_35 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="JArray.cs"];
m8_37 [label=id, span="77-77", cluster="lambda expression", file="JArray.cs"];
m8_38 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="JArray.cs"];
m8_23 [label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="JArray.cs"];
m8_22 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JArray.cs"];
m8_7 [label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0", cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JArray.cs"];
m8_24 [label="Entry Newtonsoft.Json.Schema.JsonSchemaNode.Combine(Newtonsoft.Json.Schema.JsonSchema)", span="70-70", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.Combine(Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_25 [label="return new JsonSchemaNode(this, schema);", span="72-72", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.Combine(Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_26 [label="Exit Newtonsoft.Json.Schema.JsonSchemaNode.Combine(Newtonsoft.Json.Schema.JsonSchema)", span="70-70", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.Combine(Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_0 [label="Entry Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchema)", span="48-48", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_1 [label="Schemas = new ReadOnlyCollection<JsonSchema>(new[] { schema })", span="50-50", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_2 [label="Properties = new Dictionary<string, JsonSchemaNode>()", span="51-51", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_3 [label="PatternProperties = new Dictionary<string, JsonSchemaNode>()", span="52-52", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_4 [label="Items = new List<JsonSchemaNode>()", span="53-53", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_5 [label="Id = GetId(Schemas)", span="55-55", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_6 [label="Exit Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchema)", span="48-48", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchema)", file="JArray.cs"];
m8_21 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JArray.cs"];
m8_8 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JArray.cs"];
m8_10 [label="Entry Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", span="75-75", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", file="JArray.cs"];
m8_27 [label="return string.Join(''-'', schemata.Select(s => s.InternalId).OrderBy(id => id, StringComparer.Ordinal).ToArray());", span="77-77", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", file="JArray.cs"];
m8_28 [label="Exit Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", span="75-75", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", file="JArray.cs"];
m8_39 [label="Newtonsoft.Json.Schema.JsonSchemaNode", span="", file="JArray.cs"];
m9_22 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="78-78", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_36 [label="reader.TokenType != JsonToken.EndConstructor", span="114-114", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="JavaScriptDateTimeConverter.cs"];
m9_35 [label="reader.Read()", span="112-112", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_37 [label="throw JsonSerializationException.Create(reader, ''Unexpected token parsing date. Expected EndConstructor, got {0}.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="116-116", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="JavaScriptDateTimeConverter.cs"];
m9_38 [label="t == typeof(DateTimeOffset)", span="120-120", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_23 [label="Type t = (ReflectionUtils.IsNullableType(objectType))\r\n                ? Nullable.GetUnderlyingType(objectType)\r\n                : objectType", span="81-83", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_24 [label="reader.TokenType == JsonToken.Null", span="86-86", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_25 [label="!ReflectionUtils.IsNullable(objectType)", span="88-88", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_26 [label="throw JsonSerializationException.Create(reader, ''Cannot convert null value to {0}.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="90-90", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_28 [label="reader.TokenType != JsonToken.StartConstructor || !string.Equals(reader.Value.ToString(), ''Date'', StringComparison.Ordinal)", span="96-96", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_29 [label="throw JsonSerializationException.Create(reader, ''Unexpected token or value when parsing date. Token: {0}, Value: {1}''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType, reader.Value));", span="98-98", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_30 [label="reader.Read()", span="101-101", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_31 [label="reader.TokenType != JsonToken.Integer", span="103-103", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_32 [label="throw JsonSerializationException.Create(reader, ''Unexpected token parsing date. Expected Integer, got {0}.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="105-105", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_33 [label="long ticks = (long)reader.Value", span="108-108", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_27 [label="return null;", span="93-93", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_34 [label="DateTime d = DateTimeUtils.ConvertJavaScriptTicksToDateTime(ticks)", span="110-110", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_39 [label="return new DateTimeOffset(d);", span="122-122", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_40 [label="return d;", span="126-126", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_41 [label="Exit Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="78-78", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JavaScriptDateTimeConverter.cs"];
m9_52 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JavaScriptDateTimeConverter.cs"];
m9_42 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="267-267", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JavaScriptDateTimeConverter.cs"];
m9_0 [label="Entry Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", span="44-44", cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JavaScriptDateTimeConverter.cs"];
m9_1 [label="string typeName", span="46-46", cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JavaScriptDateTimeConverter.cs"];
m9_2 [label="typeName = ReflectionUtils.GetTypeName(typeof(IList<Type>), FormatterAssemblyStyle.Simple)", span="48-48", cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JavaScriptDateTimeConverter.cs"];
m9_3 [label="Assert.AreEqual(''System.Collections.Generic.IList`1[[System.Type, mscorlib]], mscorlib'', typeName)", span="49-49", cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JavaScriptDateTimeConverter.cs"];
m9_4 [label="typeName = ReflectionUtils.GetTypeName(typeof(IDictionary<IList<Type>, IList<Type>>), FormatterAssemblyStyle.Simple)", span="51-51", cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JavaScriptDateTimeConverter.cs"];
m9_5 [label="Assert.AreEqual(''System.Collections.Generic.IDictionary`2[[System.Collections.Generic.IList`1[[System.Type, mscorlib]], mscorlib],[System.Collections.Generic.IList`1[[System.Type, mscorlib]], mscorlib]], mscorlib'', typeName)", span="52-52", cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JavaScriptDateTimeConverter.cs"];
m9_6 [label="typeName = ReflectionUtils.GetTypeName(typeof(IList<>), FormatterAssemblyStyle.Simple)", span="54-54", cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JavaScriptDateTimeConverter.cs"];
m9_7 [label="Assert.AreEqual(''System.Collections.Generic.IList`1, mscorlib'', typeName)", span="55-55", cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JavaScriptDateTimeConverter.cs"];
m9_8 [label="typeName = ReflectionUtils.GetTypeName(typeof(IDictionary<,>), FormatterAssemblyStyle.Simple)", span="57-57", cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JavaScriptDateTimeConverter.cs"];
m9_9 [label="Assert.AreEqual(''System.Collections.Generic.IDictionary`2, mscorlib'', typeName)", span="58-58", cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JavaScriptDateTimeConverter.cs"];
m9_10 [label="Exit Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", span="44-44", cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JavaScriptDateTimeConverter.cs"];
m9_47 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JavaScriptDateTimeConverter.cs"];
m9_51 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="190-190", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JavaScriptDateTimeConverter.cs"];
m9_43 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)", file="JavaScriptDateTimeConverter.cs"];
m9_44 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="255-255", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="JavaScriptDateTimeConverter.cs"];
m9_49 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JavaScriptDateTimeConverter.cs"];
m9_46 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JavaScriptDateTimeConverter.cs"];
m9_48 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="JavaScriptDateTimeConverter.cs"];
m9_50 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409", cluster="Newtonsoft.Json.JsonReader.Read()", file="JavaScriptDateTimeConverter.cs"];
m9_11 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle)", span="141-141", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle)", file="JavaScriptDateTimeConverter.cs"];
m9_45 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JavaScriptDateTimeConverter.cs"];
m10_17 [label="Serializer.MetadataPropertyHandling != MetadataPropertyHandling.Ignore\r\n                    && reader.TokenType == JsonToken.PropertyName\r\n                    && string.Equals(reader.Value.ToString(), JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="99-101", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_18 [label="CheckedRead(reader)", span="103-103", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_1006 [label="Entry Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="54-54", cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JConstructor.cs"];
m10_40 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="268-268", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JConstructor.cs"];
m10_565 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="39-39", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", file="JConstructor.cs"];
m10_763 [label="Entry Newtonsoft.Json.JsonReader.GetPosition(int)", span="327-327", cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JConstructor.cs"];
m10_899 [label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TrySetMember(System.Dynamic.IDynamicMetaObjectProvider, string, object)", span="105-105", cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TrySetMember(System.Dynamic.IDynamicMetaObjectProvider, string, object)", file="JConstructor.cs"];
m10_104 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="237-237", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_105 [label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="239-239", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_108 [label="reader.TokenType == JsonToken.PropertyName", span="248-248", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_109 [label="string propertyName = (string)reader.Value", span="250-250", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_110 [label="!reader.Read()", span="253-253", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_111 [label="reader.TokenType == JsonToken.Comment", span="257-257", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_112 [label="CheckPropertyName(reader, propertyName)", span="259-259", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_114 [label="writer.WriteToken(reader, true, true, false)", span="265-265", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_115 [label="reader.TokenType == JsonToken.Comment", span="267-267", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_118 [label="reader.Read()", span="276-276", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_119 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="278-278", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_106 [label="JTokenWriter writer = new JTokenWriter()", span="242-242", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_107 [label="writer.WriteStartObject()", span="244-244", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_113 [label="writer.WritePropertyName(propertyName)", span="264-264", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_116 [label="writer.WriteEndObject()", span="273-273", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_117 [label="return writer.Token;", span="274-274", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_120 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="237-237", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_75 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", span="2209-2209", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1041 [label=hasConverter, span="2213-2213", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1042 [label="return reader.Read();", span="2215-2215", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1043 [label="ReadType t = (contract != null) ? contract.InternalReadType : ReadType.Read", span="2218-2218", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1046 [label="!reader.Read()", span="2225-2225", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1048 [label="reader.TokenType == JsonToken.Comment", span="2229-2229", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1051 [label="reader.ReadAsInt32()", span="2233-2233", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1053 [label="reader.ReadAsDecimal()", span="2236-2236", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1055 [label="reader.ReadAsBytes()", span="2239-2239", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1057 [label="reader.ReadAsString()", span="2242-2242", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1059 [label="reader.ReadAsDateTime()", span="2245-2245", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1061 [label="reader.ReadAsDateTimeOffset()", span="2249-2249", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1063 [label="return (reader.TokenType != JsonToken.None);", span="2256-2256", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1044 [label=t, span="2220-2220", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1045 [label="ReadType.Read", span="2222-2222", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1050 [label="ReadType.ReadAsInt32", span="2232-2232", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1052 [label="ReadType.ReadAsDecimal", span="2235-2235", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1054 [label="ReadType.ReadAsBytes", span="2238-2238", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1056 [label="ReadType.ReadAsString", span="2241-2241", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1058 [label="ReadType.ReadAsDateTime", span="2244-2244", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1060 [label="ReadType.ReadAsDateTimeOffset", span="2248-2248", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1062 [label="throw new ArgumentOutOfRangeException();", span="2253-2253", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1047 [label="return false;", span="2227-2227", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1049 [label="return true;", span="2231-2231", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1064 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", span="2209-2209", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JConstructor.cs"];
m10_1138 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="JConstructor.cs"];
m10_48 [label="Entry Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader)", span="201-201", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_49 [label="return Load(reader, null);", span="203-203", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_50 [label="Exit Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader)", span="201-201", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_51 [label="Entry Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="213-213", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JConstructor.cs"];
m10_53 [label="!reader.Read()", span="217-217", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JConstructor.cs"];
m10_55 [label="reader.TokenType == JsonToken.Comment", span="223-223", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JConstructor.cs", color=green, community=0];
m10_59 [label="JConstructor c = new JConstructor((string)reader.Value)", span="233-233", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JConstructor.cs"];
m10_60 [label="c.SetLineInfo(reader as IJsonLineInfo, settings)", span="234-234", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JConstructor.cs"];
m10_61 [label="c.ReadTokenFrom(reader, settings)", span="236-236", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JConstructor.cs"];
m10_62 [label="return c;", span="238-238", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JConstructor.cs"];
m10_66 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JConstructor.cs"];
m10_67 [label="Entry Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", span="2234-2234", cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JConstructor.cs"];
m10_52 [label="reader.TokenType == JsonToken.None", span="215-215", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JConstructor.cs"];
m10_54 [label="throw JsonReaderException.Create(reader, ''Error reading JConstructor from JsonReader.'');", span="219-219", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JConstructor.cs"];
m10_58 [label="throw JsonReaderException.Create(reader, ''Error reading JConstructor from JsonReader. Current JsonReader item is not a constructor: {0}''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="230-230", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JConstructor.cs"];
m10_57 [label="reader.TokenType != JsonToken.StartConstructor", span="228-228", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JConstructor.cs"];
m10_56 [label="reader.Read()", span="225-225", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JConstructor.cs"];
m10_64 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409", cluster="Newtonsoft.Json.JsonReader.Read()", file="JConstructor.cs"];
m10_63 [label="Exit Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="213-213", cluster="Newtonsoft.Json.Linq.JConstructor.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JConstructor.cs"];
m10_65 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JConstructor.cs"];
m10_69 [label="Newtonsoft.Json.Linq.JConstructor", span="", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JConstructor.cs"];
m10_68 [label="Entry Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="756-756", cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JConstructor.cs"];
m10_70 [label="throw;", span="195-195", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JConstructor.cs"];
m10_71 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="138-138", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JConstructor.cs"];
m10_39 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="439-439", cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JConstructor.cs"];
m10_76 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="2107-2107", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JConstructor.cs"];
m10_999 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="2109-2109", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JConstructor.cs"];
m10_1000 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="2111-2111", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JConstructor.cs"];
m10_1001 [label="object value = converter.ReadJson(reader, objectType, existingValue, GetInternalSerializer())", span="2114-2114", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JConstructor.cs"];
m10_1003 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="2118-2118", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JConstructor.cs"];
m10_1002 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="2116-2116", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JConstructor.cs"];
m10_1004 [label="return value;", span="2121-2121", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JConstructor.cs"];
m10_1005 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="2107-2107", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JConstructor.cs"];
m10_348 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JConstructor.cs"];
m10_759 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JConstructor.cs"];
m10_29 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="58-58", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JConstructor.cs"];
m10_87 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="225-225", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JConstructor.cs"];
m10_982 [label="Entry Unk.All", span="", cluster="Unk.All", file="JConstructor.cs"];
m10_499 [label="Entry System.Enum.ToObject(System.Type, object)", span="0-0", cluster="System.Enum.ToObject(System.Type, object)", file="JConstructor.cs"];
m10_1141 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="2560-2560", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JConstructor.cs"];
m10_1201 [label="property != null && requiredProperties != null", span="2562-2562", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JConstructor.cs"];
m10_1203 [label="reader.TokenType", span="2565-2565", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JConstructor.cs"];
m10_1205 [label="propertyPresence = (CoerceEmptyStringToNull(property.PropertyType, property.PropertyContract, (string)reader.Value))\r\n                            ? PropertyPresence.Null\r\n                            : PropertyPresence.Value", span="2568-2570", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JConstructor.cs"];
m10_1210 [label="requiredProperties[property] = propertyPresence", span="2581-2581", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JConstructor.cs"];
m10_1202 [label="PropertyPresence propertyPresence", span="2564-2564", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JConstructor.cs"];
m10_1204 [label="JsonToken.String", span="2567-2567", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JConstructor.cs"];
m10_1206 [label="JsonToken.Null", span="2572-2572", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JConstructor.cs"];
m10_1209 [label="propertyPresence = PropertyPresence.Value", span="2577-2577", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JConstructor.cs"];
m10_1207 [label="JsonToken.Undefined", span="2573-2573", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JConstructor.cs"];
m10_1208 [label="propertyPresence = PropertyPresence.Null", span="2574-2574", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JConstructor.cs"];
m10_1211 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="2560-2560", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JConstructor.cs"];
m10_564 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="172-172", cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JConstructor.cs"];
m10_561 [label="Entry System.Type.IsValueType()", span="511-511", cluster="System.Type.IsValueType()", file="JConstructor.cs"];
m10_38 [label="Exit Newtonsoft.Json.Linq.JConstructor.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="149-149", cluster="Newtonsoft.Json.Linq.JConstructor.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JConstructor.cs"];
m10_560 [label="Entry System.Nullable<T>.GetValueOrDefault(T)", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault(T)", file="JConstructor.cs"];
m10_573 [label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", span="64-64", cluster="Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", file="JConstructor.cs"];
m10_47 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="128-128", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JConstructor.cs"];
m10_1040 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", span="2491-2491", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_1174 [label="object value", span="2493-2493", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_1175 [label="contract.ExtensionDataIsJToken", span="2494-2494", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_1176 [label="value = JToken.ReadFrom(reader)", span="2496-2496", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_1177 [label="value = CreateValueInternal(reader, null, null, null, contract, member, null)", span="2500-2500", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_1178 [label="return value;", span="2502-2502", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_1179 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", span="2491-2491", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_566 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="1133-1133", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JConstructor.cs"];
m10_567 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1137-1137", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JConstructor.cs"];
m10_568 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Read object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, id, value.GetType())), null)", span="1139-1139", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JConstructor.cs"];
m10_569 [label="Serializer.GetReferenceResolver().AddReference(this, id, value)", span="1142-1142", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JConstructor.cs"];
m10_571 [label="throw JsonSerializationException.Create(reader, ''Error reading object reference '{0}'.''.FormatWith(CultureInfo.InvariantCulture, id), ex);", span="1146-1146", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JConstructor.cs"];
m10_570 [label=Exception, span="1144-1144", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JConstructor.cs"];
m10_572 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="1133-1133", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JConstructor.cs"];
m10_761 [label="Entry System.Collections.Generic.Stack<T>.Peek()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Peek()", file="JConstructor.cs"];
m10_350 [label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", span="38-38", cluster="Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", file="JConstructor.cs"];
m10_841 [label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", span="40-40", cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_293 [label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31", cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="JConstructor.cs"];
m10_562 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="1150-1150", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JConstructor.cs"];
m10_574 [label="return ((value & flag) == flag);", span="1152-1152", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JConstructor.cs"];
m10_575 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="1150-1150", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JConstructor.cs"];
m10_37 [label="writer.WriteEndConstructor()", span="158-158", cluster="Newtonsoft.Json.Linq.JConstructor.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JConstructor.cs"];
m10_428 [label="!reader.Read()", span="846-846", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_429 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="848-848", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_430 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", span="844-844", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_500 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", span="360-360", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JConstructor.cs"];
m10_46 [label="return Serializer._contractResolver.ResolveContract(type);", span="135-135", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JConstructor.cs"];
m10_166 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JConstructor.cs"];
m10_1069 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="439-439", cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JConstructor.cs"];
m10_296 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JConstructor.cs"];
m10_74 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="377-377", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_186 [label="JsonConverter converter = null", span="379-379", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_187 [label="memberConverter != null", span="380-380", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_188 [label="converter = memberConverter", span="383-383", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_189 [label="containerProperty != null && containerProperty.ItemConverter != null", span="385-385", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_190 [label="converter = containerProperty.ItemConverter", span="387-387", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_191 [label="containerContract != null && containerContract.ItemConverter != null", span="389-389", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_192 [label="converter = containerContract.ItemConverter", span="391-391", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_193 [label="contract != null", span="393-393", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_195 [label="contract.Converter != null", span="396-396", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_196 [label="converter = contract.Converter", span="399-399", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_197 [label="(matchingConverter = Serializer.GetMatchingConverter(contract.UnderlyingType)) != null", span="401-401", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_199 [label="contract.InternalConverter != null", span="406-406", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_200 [label="converter = contract.InternalConverter", span="409-409", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_201 [label="return converter;", span="412-412", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_194 [label="JsonConverter matchingConverter", span="395-395", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_198 [label="converter = matchingConverter", span="404-404", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_202 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="377-377", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_88 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="210-210", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_89 [label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="212-212", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_90 [label="contract != null", span="214-214", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_91 [label="contract.UnderlyingType == typeof(JRaw)", span="216-216", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_92 [label="return JRaw.Create(reader);", span="218-218", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_93 [label="reader.TokenType == JsonToken.Null\r\n                    && !(contract.UnderlyingType == typeof(JValue) || contract.UnderlyingType == typeof(JToken))", span="220-221", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_97 [label="writer.WriteToken(reader)", span="230-230", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_95 [label="JToken token", span="227-227", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_94 [label="return null;", span="223-223", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", color=red, community=0, file="JConstructor.cs"];
m10_96 [label="JTokenWriter writer = new JTokenWriter()", span="228-228", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_98 [label="token = writer.Token", span="231-231", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_99 [label="return token;", span="234-234", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_100 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="210-210", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_496 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="148-148", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="JConstructor.cs"];
m10_294 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1781-1781", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_854 [label="IDynamicMetaObjectProvider newObject", span="1783-1783", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_855 [label="!contract.IsInstantiable", span="1785-1785", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_856 [label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1787-1787", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_857 [label="contract.DefaultCreator != null &&\r\n                (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1790-1791", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_858 [label="newObject = (IDynamicMetaObjectProvider)contract.DefaultCreator()", span="1793-1793", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_859 [label="throw JsonSerializationException.Create(reader, ''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1797-1797", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_860 [label="id != null", span="1800-1800", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_861 [label="AddReference(reader, id, newObject)", span="1802-1802", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_862 [label="OnDeserializing(reader, contract, newObject)", span="1805-1805", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_863 [label="int initialDepth = reader.Depth", span="1807-1807", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_865 [label="reader.TokenType", span="1812-1812", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_867 [label="string memberName = reader.Value.ToString()", span="1815-1815", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_868 [label="!reader.Read()", span="1819-1819", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_869 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1821-1821", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_870 [label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="1825-1825", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_875 [label="!SetPropertyValue(property, propertyConverter, null, member, reader, newObject)", span="1836-1836", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_876 [label="reader.Skip()", span="1838-1838", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_877 [label="Type t = (JsonTokenUtils.IsPrimitiveToken(reader.TokenType)) ? reader.ValueType : typeof(IDynamicMetaObjectProvider)", span="1843-1843", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_879 [label="JsonConverter dynamicMemberConverter = GetConverter(dynamicMemberContract, null, null, member)", span="1846-1846", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_882 [label="value = DeserializeConvertable(dynamicMemberConverter, reader, t, null)", span="1851-1851", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_883 [label="value = CreateValueInternal(reader, t, dynamicMemberContract, null, null, member, null)", span="1855-1855", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_884 [label="contract.TrySetMember(newObject, memberName, value)", span="1858-1858", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_886 [label="IsErrorHandled(newObject, contract, memberName, reader as IJsonLineInfo, reader.Path, ex)", span="1863-1863", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_887 [label="HandleError(reader, true, initialDepth)", span="1865-1865", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_891 [label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1877-1877", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_892 [label="!finished && reader.Read()", span="1879-1879", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_894 [label="ThrowUnexpectedEndException(reader, contract, newObject, ''Unexpected end when deserializing object.'')", span="1883-1883", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_895 [label="OnDeserialized(reader, contract, newObject)", span="1886-1886", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_896 [label="return newObject;", span="1888-1888", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_864 [label="bool finished = false", span="1809-1809", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_866 [label="JsonToken.PropertyName", span="1814-1814", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_889 [label="JsonToken.EndObject", span="1873-1873", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_871 [label="property != null && property.Writable && !property.Ignored", span="1827-1827", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_872 [label="property.PropertyContract == null", span="1829-1829", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_873 [label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1831-1831", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_874 [label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, null, null)", span="1834-1834", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_885 [label=Exception, span="1861-1861", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_878 [label="JsonContract dynamicMemberContract = GetContractSafe(t)", span="1845-1845", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_880 [label="object value", span="1848-1848", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_881 [label="dynamicMemberConverter != null && dynamicMemberConverter.CanRead", span="1849-1849", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_888 [label="throw;", span="1869-1869", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_890 [label="finished = true", span="1874-1874", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_893 [label="!finished", span="1881-1881", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_897 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1781-1781", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_80 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="2585-2585", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JConstructor.cs"];
m10_1212 [label="ClearErrorContext()", span="2587-2587", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JConstructor.cs"];
m10_1213 [label=readPastError, span="2589-2589", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JConstructor.cs"];
m10_1214 [label="reader.Skip()", span="2591-2591", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JConstructor.cs"];
m10_1215 [label="reader.Depth > (initialDepth + 1)", span="2593-2593", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JConstructor.cs"];
m10_1216 [label="!reader.Read()", span="2595-2595", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JConstructor.cs"];
m10_1217 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="2585-2585", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JConstructor.cs"];
m10_843 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1758-1758", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_844 [label="JsonContract itemContract = GetContractSafe(type)", span="1760-1760", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_845 [label="JsonConverter itemConverter = GetConverter(itemContract, null, contract, member)", span="1761-1761", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_846 [label="JsonReader tokenReader = token.CreateReader()", span="1763-1763", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_850 [label="result = DeserializeConvertable(itemConverter, tokenReader, type, null)", span="1769-1769", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_851 [label="result = CreateValueInternal(tokenReader, type, itemContract, null, contract, member, null)", span="1773-1773", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_849 [label="itemConverter != null && itemConverter.CanRead", span="1767-1767", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_847 [label="CheckedRead(tokenReader)", span="1764-1764", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_848 [label="object result", span="1766-1766", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_852 [label="return result;", span="1776-1776", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_853 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1758-1758", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JConstructor.cs"];
m10_43 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="128-128", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JConstructor.cs"];
m10_44 [label="type == null", span="130-130", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JConstructor.cs"];
m10_45 [label="return null;", span="132-132", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JConstructor.cs"];
m10_35 [label="Children()", span="153-153", cluster="Newtonsoft.Json.Linq.JConstructor.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JConstructor.cs"];
m10_771 [label="IWrappedCollection wrappedCollection = list as IWrappedCollection", span="1592-1592", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_772 [label="object underlyingList = wrappedCollection != null ? wrappedCollection.UnderlyingCollection : list", span="1593-1593", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_773 [label="id != null", span="1595-1595", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_774 [label="AddReference(reader, id, underlyingList)", span="1597-1597", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_775 [label="list.IsFixedSize", span="1601-1601", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_776 [label="reader.Skip()", span="1603-1603", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_778 [label="OnDeserializing(reader, contract, underlyingList)", span="1607-1607", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_779 [label="int initialDepth = reader.Depth", span="1609-1609", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_780 [label="contract.ItemContract == null", span="1611-1611", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_781 [label="contract.ItemContract = GetContractSafe(contract.CollectionItemType)", span="1613-1613", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_782 [label="JsonConverter collectionItemConverter = GetConverter(contract.ItemContract, null, contract, containerProperty)", span="1616-1616", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_785 [label="ReadForType(reader, contract.ItemContract, collectionItemConverter != null)", span="1625-1625", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_786 [label="reader.TokenType", span="1627-1627", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_792 [label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1639-1639", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_793 [label="value = CreateValueInternal(reader, contract.CollectionItemType, contract.ItemContract, null, contract, containerProperty, null)", span="1643-1643", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_794 [label="list.Add(value)", span="1646-1646", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_796 [label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1657-1657", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_797 [label="IsErrorHandled(underlyingList, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1659-1659", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_798 [label="HandleError(reader, true, initialDepth)", span="1661-1661", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_800 [label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1667-1667", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_805 [label="ThrowUnexpectedEndException(reader, contract, underlyingList, ''Unexpected end when deserializing array.'')", span="1683-1683", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_806 [label="OnDeserialized(reader, contract, underlyingList)", span="1686-1686", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_777 [label="return underlyingList;", span="1604-1604", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_807 [label="return underlyingList;", span="1687-1687", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_783 [label="int? previousErrorIndex = null", span="1618-1618", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_791 [label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1637-1637", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_784 [label="bool finished = false", span="1620-1620", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_799 [label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1663-1663", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_803 [label="!finished", span="1679-1679", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_804 [label="!finished", span="1681-1681", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_787 [label="JsonToken.EndArray", span="1629-1629", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_789 [label="JsonToken.Comment", span="1632-1632", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_790 [label="object value", span="1635-1635", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_788 [label="finished = true", span="1630-1630", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_795 [label=Exception, span="1655-1655", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_801 [label="previousErrorIndex = errorPosition.Position", span="1671-1671", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_802 [label="throw;", span="1676-1676", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_808 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1590-1590", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_418 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="824-824", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_419 [label="contract == null", span="826-826", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_420 [label="throw JsonSerializationException.Create(reader, ''Could not resolve type '{0}' to a JsonContract.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="828-828", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_421 [label="JsonArrayContract arrayContract = contract as JsonArrayContract", span="831-831", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_424 [label="message = message.FormatWith(CultureInfo.InvariantCulture, objectType, GetExpectedDescription(contract))", span="836-836", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_425 [label="throw JsonSerializationException.Create(reader, message);", span="838-838", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_422 [label="arrayContract == null", span="832-832", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_426 [label="return arrayContract;", span="841-841", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_423 [label="string message = @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type '{0}' because the type requires a {1} to deserialize correctly.'' + Environment.NewLine +\r\n                                 @''To fix this error either change the JSON to a {1} or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.'' + Environment.NewLine", span="834-835", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_427 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="824-824", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_103 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="483-483", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_287 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="590-590", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_297 [label="id = null", span="592-592", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_299 [label="reader.TokenType == JsonToken.StartObject", span="595-595", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_300 [label="JObject current = (JObject)reader.CurrentToken", span="597-597", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_317 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved object reference '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, newValue.GetType())), null)", span="631-631", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_318 [label="reader.Skip()", span="634-634", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_325 [label="ResolveTypeName(typeTokenReader, ref objectType, ref contract, member, containerContract, containerMember, qualifiedTypeName)", span="644-644", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_329 [label="CheckedRead(reader)", span="651-651", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_330 [label="reader.TokenType == JsonToken.PropertyName", span="652-652", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_331 [label="(string)reader.Value == JsonTypeReflector.ValuePropertyName", span="654-654", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_333 [label="CheckedRead(reader)", span="660-660", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_334 [label="reader.Skip()", span="661-661", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_342 [label="newValue = CreateList(listReader, objectType, contract, member, existingValue, id)", span="675-675", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_343 [label="reader.Skip()", span="677-677", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_345 [label="CheckedRead(reader)", span="682-682", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_298 [label="newValue = null", span="593-593", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_301 [label="JToken refToken = current[JsonTypeReflector.RefPropertyName]", span="599-599", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_320 [label="JToken typeToken = current[JsonTypeReflector.TypePropertyName]", span="638-638", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_326 [label="JToken valueToken = current[JsonTypeReflector.ValuePropertyName]", span="646-646", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_335 [label="JToken idToken = current[JsonTypeReflector.IdPropertyName]", span="665-665", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_338 [label="JToken valuesToken = current[JsonTypeReflector.ArrayValuesPropertyName]", span="670-670", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_302 [label="refToken != null", span="600-600", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_303 [label="refToken.Type != JTokenType.String && refToken.Type != JTokenType.Null", span="602-602", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_304 [label="throw JsonSerializationException.Create(refToken, refToken.Path, ''JSON reference {0} property must have a string or null value.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName), null);", span="604-604", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_305 [label="JToken property = refToken.Parent", span="607-607", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_311 [label="string reference = (string)refToken", span="618-618", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_306 [label="JToken additionalContent = null", span="608-608", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_307 [label="property.Next != null", span="609-609", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_308 [label="additionalContent = property.Next", span="611-611", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_309 [label="property.Previous != null", span="613-613", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_310 [label="additionalContent = property.Previous", span="615-615", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_313 [label="additionalContent != null", span="622-622", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_314 [label="throw JsonSerializationException.Create(additionalContent, additionalContent.Path, ''Additional content found in JSON reference object. A JSON reference object should only have a {0} property.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName), null);", span="624-624", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_312 [label="reference != null", span="620-620", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_315 [label="newValue = Serializer.GetReferenceResolver().ResolveReference(this, reference)", span="627-627", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_316 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="629-629", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_319 [label="return true;", span="635-635", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_321 [label="typeToken != null", span="639-639", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_322 [label="string qualifiedTypeName = (string)typeToken", span="641-641", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_323 [label="JsonReader typeTokenReader = typeToken.CreateReader()", span="642-642", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_324 [label="CheckedRead(typeTokenReader)", span="643-643", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_327 [label="valueToken != null", span="647-647", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_328 [label=true, span="649-649", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_332 [label="return false;", span="656-656", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_336 [label="idToken != null", span="666-666", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_337 [label="id = (string)idToken", span="668-668", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_339 [label="valuesToken != null", span="671-671", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_340 [label="JsonReader listReader = valuesToken.CreateReader()", span="673-673", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_341 [label="CheckedRead(listReader)", span="674-674", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_344 [label="return true;", span="678-678", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_346 [label="return false;", span="683-683", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_347 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="590-590", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_647 [label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", span="388-388", cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", file="JConstructor.cs"];
m10_1065 [label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="415-415", cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JConstructor.cs"];
m10_527 [label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44", cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="JConstructor.cs"];
m10_165 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="JConstructor.cs"];
m10_642 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1296-1296", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JConstructor.cs"];
m10_643 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1298-1298", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JConstructor.cs"];
m10_644 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1300-1300", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JConstructor.cs"];
m10_645 [label="contract.InvokeOnDeserialized(value, Serializer._context)", span="1303-1303", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JConstructor.cs"];
m10_646 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1296-1296", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JConstructor.cs"];
m10_611 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="293-293", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JConstructor.cs"];
m10_72 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JConstructor.cs"];
m10_840 [label="Entry System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", file="JConstructor.cs"];
m10_498 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="724-724", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JConstructor.cs"];
m10_989 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", span="2505-2505", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1180 [label="presence == PropertyPresence.None || presence == PropertyPresence.Null", span="2507-2507", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1181 [label="Required resolvedRequired = property._required ?? contract.ItemRequired ?? Required.Default", span="2511-2511", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1182 [label=presence, span="2513-2513", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1185 [label="throw JsonSerializationException.Create(reader, ''Required property '{0}' not found in JSON.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2518-2518", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1186 [label="setDefaultValue && !property.Ignored", span="2521-2521", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1187 [label="property.PropertyContract == null", span="2523-2523", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1188 [label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="2525-2525", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1189 [label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate) && property.Writable", span="2528-2528", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1190 [label="property.ValueProvider.SetValue(newObject, EnsureType(reader, property.GetResolvedDefaultValue(), CultureInfo.InvariantCulture, property.PropertyContract, property.PropertyType))", span="2530-2530", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1193 [label="throw JsonSerializationException.Create(reader, ''Required property '{0}' expects a value but got null.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2537-2537", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1195 [label="throw JsonSerializationException.Create(reader, ''Required property '{0}' expects a non-null value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2541-2541", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1197 [label="IsErrorHandled(newObject, contract, property.PropertyName, reader as IJsonLineInfo, reader.Path, ex)", span="2548-2548", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1198 [label="HandleError(reader, true, initialDepth)", span="2550-2550", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1184 [label="resolvedRequired == Required.AllowNull || resolvedRequired == Required.Always", span="2516-2516", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1192 [label="resolvedRequired == Required.Always", span="2535-2535", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1194 [label="resolvedRequired == Required.DisallowNull", span="2539-2539", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1183 [label="PropertyPresence.None", span="2515-2515", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1191 [label="PropertyPresence.Null", span="2534-2534", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1196 [label=Exception, span="2546-2546", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1199 [label="throw;", span="2554-2554", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_1200 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", span="2505-2505", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JConstructor.cs"];
m10_467 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="1177-1177", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_584 [label="!contract.CanDeserialize", span="1180-1180", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_585 [label="throw JsonSerializationException.Create(reader, ''Cannot create and populate list type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.CreatedType));", span="1182-1182", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_586 [label="contract.OverrideCreator != null", span="1185-1185", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_587 [label="contract.HasParameterizedCreator", span="1187-1187", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_589 [label="return contract.CreateTemporaryCollection();", span="1190-1190", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_591 [label="return (IList)contract.OverrideCreator();", span="1195-1195", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_592 [label="contract.IsReadOnlyOrFixedSize", span="1198-1198", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_594 [label="IList list = contract.CreateTemporaryCollection()", span="1201-1201", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_595 [label="contract.ShouldCreateWrapper", span="1203-1203", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_596 [label="list = contract.CreateWrapper(list)", span="1205-1205", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_598 [label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1210-1210", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_599 [label="object list = contract.DefaultCreator()", span="1212-1212", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_600 [label="contract.ShouldCreateWrapper", span="1214-1214", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_601 [label="list = contract.CreateWrapper(list)", span="1216-1216", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_604 [label="contract.HasParameterizedCreatorInternal", span="1222-1222", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_606 [label="return contract.CreateTemporaryCollection();", span="1225-1225", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_607 [label="!contract.IsInstantiable", span="1229-1229", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_608 [label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1231-1231", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_609 [label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1234-1234", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_588 [label="createdFromNonDefaultCreator = true", span="1189-1189", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_590 [label="createdFromNonDefaultCreator = false", span="1194-1194", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_593 [label="createdFromNonDefaultCreator = true", span="1200-1200", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_597 [label="return list;", span="1208-1208", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_603 [label="return (IList)list;", span="1220-1220", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_602 [label="createdFromNonDefaultCreator = false", span="1219-1219", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_605 [label="createdFromNonDefaultCreator = true", span="1224-1224", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_610 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="1177-1177", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JConstructor.cs"];
m10_979 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="JConstructor.cs"];
m10_163 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="948-948", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_475 [label="targetType == null", span="950-950", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_476 [label="return value;", span="952-952", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_477 [label="Type valueType = ReflectionUtils.GetObjectType(value)", span="955-955", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_478 [label="valueType != targetType", span="959-959", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_479 [label="value == null && contract.IsNullable", span="961-961", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_481 [label="contract.IsConvertable", span="968-968", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_482 [label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="970-970", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_483 [label="contract.IsEnum", span="972-972", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_484 [label="value is string", span="974-974", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_485 [label="return Enum.Parse(contract.NonNullableUnderlyingType, value.ToString(), true);", span="976-976", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_487 [label="return Enum.ToObject(contract.NonNullableUnderlyingType, value);", span="980-980", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_488 [label="value is BigInteger", span="985-985", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_489 [label="return ConvertUtils.FromBigInteger((BigInteger)value, contract.NonNullableUnderlyingType);", span="987-987", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_490 [label="return Convert.ChangeType(value, contract.NonNullableUnderlyingType, culture);", span="992-992", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_491 [label="return ConvertUtils.ConvertOrCast(value, culture, contract.NonNullableUnderlyingType);", span="995-995", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_493 [label="throw JsonSerializationException.Create(reader, ''Error converting value {0} to type '{1}'.''.FormatWith(CultureInfo.InvariantCulture, MiscellaneousUtils.FormatValueForPrint(value), targetType), ex);", span="999-999", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_494 [label="return value;", span="1003-1003", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_480 [label="return null;", span="963-963", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_486 [label="ConvertUtils.IsInteger(primitiveContract.TypeCode)", span="978-978", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_492 [label=Exception, span="997-997", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_495 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="948-948", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JConstructor.cs"];
m10_417 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JConstructor.cs"];
m10_164 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", span="348-348", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", file="JConstructor.cs"];
m10_167 [label="return string.IsNullOrEmpty(s) && objectType != null && objectType != typeof(string) && objectType != typeof(object) && contract != null && contract.IsNullable;", span="350-350", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", file="JConstructor.cs"];
m10_168 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", span="348-348", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", file="JConstructor.cs"];
m10_415 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="858-858", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JConstructor.cs"];
m10_73 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JConstructor.cs"];
m10_987 [label="Entry System.Collections.IDictionary.Add(object, object)", span="0-0", cluster="System.Collections.IDictionary.Add(object, object)", file="JConstructor.cs"];
m10_760 [label="Entry System.Collections.Generic.Stack<T>.Pop()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Pop()", file="JConstructor.cs"];
m10_842 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JConstructor.cs"];
m10_82 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="200-200", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JConstructor.cs"];
m10_83 [label="InternalSerializer == null", span="202-202", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JConstructor.cs"];
m10_84 [label="InternalSerializer = new JsonSerializerProxy(this)", span="204-204", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JConstructor.cs"];
m10_85 [label="return InternalSerializer;", span="207-207", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JConstructor.cs"];
m10_86 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="200-200", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JConstructor.cs"];
m10_78 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JConstructor.cs"];
m10_502 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="615-615", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JConstructor.cs"];
m10_470 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="332-332", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="JConstructor.cs"];
m10_25 [label="PopulateObject(target, reader, (JsonObjectContract)contract, null, id)", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_27 [label="throw JsonSerializationException.Create(reader, ''Unexpected initial token '{0}' when populating object. Expected JSON object or array.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="124-124", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_26 [label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON object onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="119-119", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_28 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="65-65", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_530 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="JConstructor.cs"];
m10_352 [label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="25-25", cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JConstructor.cs"];
m10_11 [label="JsonArrayContract arrayContract = (JsonArrayContract)contract", span="85-85", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_12 [label="PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(target) : (IList)target, reader, arrayContract, null, null)", span="87-87", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_13 [label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON array onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="91-91", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_161 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="415-415", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_204 [label="string id", span="417-417", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_205 [label="Type resolvedObjectType = objectType", span="418-418", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_207 [label="CheckedRead(reader)", span="423-423", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_210 [label="JTokenReader tokenReader = reader as JTokenReader", span="428-428", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_212 [label="JToken t = JToken.ReadFrom(reader)", span="431-431", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_214 [label="tokenReader.Culture = reader.Culture", span="433-433", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_215 [label="tokenReader.DateFormatString = reader.DateFormatString", span="434-434", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_216 [label="tokenReader.DateParseHandling = reader.DateParseHandling", span="435-435", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_217 [label="tokenReader.DateTimeZoneHandling = reader.DateTimeZoneHandling", span="436-436", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_218 [label="tokenReader.FloatParseHandling = reader.FloatParseHandling", span="437-437", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_219 [label="tokenReader.SupportMultipleContent = reader.SupportMultipleContent", span="438-438", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_223 [label="ReadMetadataPropertiesToken(tokenReader, ref resolvedObjectType, ref contract, member, containerContract, containerMember, existingValue, out newValue, out id)", span="447-447", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_225 [label="CheckedRead(reader)", span="454-454", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_227 [label="ReadMetadataProperties(reader, ref resolvedObjectType, ref contract, member, containerContract, containerMember, existingValue, out newValue, out id)", span="456-456", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_229 [label="HasNoDefinedType(contract)", span="462-462", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_230 [label="return CreateJObject(reader);", span="464-464", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_231 [label="contract.ContractType", span="467-467", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_234 [label="JsonObjectContract objectContract = (JsonObjectContract)contract", span="472-472", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_236 [label="existingValue != null && (resolvedObjectType == objectType || resolvedObjectType.IsAssignableFrom(existingValue.GetType()))", span="475-475", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_237 [label="targetObject = existingValue", span="477-477", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_238 [label="targetObject = CreateNewObject(reader, objectContract, member, containerMember, id, out createdFromNonDefaultCreator)", span="481-481", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_241 [label="return PopulateObject(targetObject, reader, objectContract, member, id);", span="490-490", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_243 [label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="494-494", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_244 [label="Serializer.MetadataPropertyHandling != MetadataPropertyHandling.Ignore\r\n                        && reader.TokenType == JsonToken.PropertyName\r\n                        && string.Equals(reader.Value.ToString(), JsonTypeReflector.ValuePropertyName, StringComparison.Ordinal)", span="496-498", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_245 [label="CheckedRead(reader)", span="500-500", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_246 [label="reader.TokenType == JsonToken.StartObject", span="504-504", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_247 [label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing primitive value: '' + reader.TokenType);", span="506-506", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_248 [label="object value = CreateValueInternal(reader, resolvedObjectType, primitiveContract, member, null, null, existingValue)", span="509-509", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_249 [label="CheckedRead(reader)", span="511-511", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_252 [label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)contract", span="518-518", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_254 [label="existingValue == null", span="521-521", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_256 [label="IDictionary dictionary = CreateNewDictionary(reader, dictionaryContract, out createdFromNonDefaultCreator)", span="524-524", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_259 [label="throw JsonSerializationException.Create(reader, ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="530-530", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_260 [label="contract.OnSerializingCallbacks.Count > 0", span="533-533", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_261 [label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="535-535", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_262 [label="contract.OnErrorCallbacks.Count > 0", span="538-538", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_263 [label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on readonly list, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="540-540", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_265 [label="throw JsonSerializationException.Create(reader, ''Cannot deserialize readonly or fixed size dictionary: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="545-545", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_266 [label="PopulateDictionary(dictionary, reader, dictionaryContract, member, id)", span="549-549", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_273 [label="targetDictionary = PopulateDictionary(dictionaryContract.ShouldCreateWrapper ? dictionaryContract.CreateWrapper(existingValue) : (IDictionary)existingValue, reader, dictionaryContract, member, id)", span="566-566", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_276 [label="JsonDynamicContract dynamicContract = (JsonDynamicContract)contract", span="573-573", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_277 [label="return CreateDynamic(reader, dynamicContract, member, id);", span="574-574", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_279 [label="JsonISerializableContract serializableContract = (JsonISerializableContract)contract", span="578-578", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_280 [label="return CreateISerializable(reader, serializableContract, member, id);", span="579-579", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_282 [label="message = message.FormatWith(CultureInfo.InvariantCulture, resolvedObjectType, GetExpectedDescription(contract))", span="585-585", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_283 [label="throw JsonSerializationException.Create(reader, message);", span="587-587", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_206 [label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.Ignore", span="420-420", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_209 [label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.ReadAhead", span="426-426", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_208 [label="id = null", span="424-424", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_211 [label="tokenReader == null", span="429-429", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_222 [label="object newValue", span="446-446", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_213 [label="tokenReader = (JTokenReader)t.CreateReader()", span="432-432", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_220 [label="CheckedRead(tokenReader)", span="441-441", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_221 [label="reader = tokenReader", span="443-443", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_224 [label="return newValue;", span="449-449", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_258 [label="id != null", span="528-528", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_226 [label="object newValue", span="455-455", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_228 [label="return newValue;", span="458-458", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_232 [label="JsonContractType.Object", span="469-469", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_242 [label="JsonContractType.Primitive", span="492-492", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_251 [label="JsonContractType.Dictionary", span="516-516", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_275 [label="JsonContractType.Dynamic", span="572-572", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_278 [label="JsonContractType.Serializable", span="577-577", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_233 [label="bool createdFromNonDefaultCreator = false", span="471-471", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_239 [label=createdFromNonDefaultCreator, span="485-485", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_235 [label="object targetObject", span="473-473", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_240 [label="return targetObject;", span="487-487", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_281 [label="string message = @''Cannot deserialize the current JSON object (e.g. {{''''name'''':''''value''''}}) into type '{0}' because the type requires a {1} to deserialize correctly.'' + Environment.NewLine +\r\n                             @''To fix this error either change the JSON to a {1} or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine", span="583-584", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_250 [label="return value;", span="512-512", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_253 [label="object targetDictionary", span="519-519", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_264 [label="!dictionaryContract.HasParameterizedCreatorInternal", span="543-543", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_268 [label="ObjectConstructor<object> creator = dictionaryContract.OverrideCreator ?? dictionaryContract.ParameterizedCreator", span="553-553", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_255 [label="bool createdFromNonDefaultCreator", span="523-523", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_257 [label=createdFromNonDefaultCreator, span="526-526", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_267 [label=createdFromNonDefaultCreator, span="551-551", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_269 [label="return creator(dictionary);", span="555-555", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_270 [label="dictionary is IWrappedDictionary", span="557-557", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_271 [label="return ((IWrappedDictionary)dictionary).UnderlyingDictionary;", span="559-559", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_272 [label="targetDictionary = dictionary", span="562-562", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_274 [label="return targetDictionary;", span="569-569", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_284 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="415-415", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_353 [label="Entry Newtonsoft.Json.JsonReader.Skip()", span="901-901", cluster="Newtonsoft.Json.JsonReader.Skip()", file="JConstructor.cs"];
m10_704 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1571-1571", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JConstructor.cs"];
m10_765 [label="throw JsonSerializationException.Create(reader, message);", span="1575-1575", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JConstructor.cs"];
m10_767 [label="IsErrorHandled(currentObject, contract, null, reader as IJsonLineInfo, reader.Path, ex)", span="1579-1579", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JConstructor.cs"];
m10_768 [label="HandleError(reader, false, 0)", span="1581-1581", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JConstructor.cs"];
m10_766 [label=Exception, span="1577-1577", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JConstructor.cs"];
m10_769 [label="throw;", span="1585-1585", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JConstructor.cs"];
m10_770 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1571-1571", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JConstructor.cs"];
m10_504 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="1006-1006", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_505 [label="object currentValue", span="1008-1008", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_509 [label="CalculatePropertyDetails(property, ref propertyConverter, containerContract, containerProperty, reader, target, out useExistingValue, out currentValue, out propertyContract, out gottenCurrentValue)", span="1013-1013", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_513 [label="!gottenCurrentValue && target != null && property.Readable", span="1022-1022", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_514 [label="currentValue = property.ValueProvider.GetValue(target)", span="1024-1024", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_515 [label="value = DeserializeConvertable(propertyConverter, reader, property.PropertyType, currentValue)", span="1027-1027", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_516 [label="value = CreateValueInternal(reader, property.PropertyType, propertyContract, property, containerContract, containerProperty, (useExistingValue) ? currentValue : null)", span="1031-1031", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_517 [label="(!useExistingValue || value != currentValue)\r\n                && ShouldSetPropertyValue(property, value)", span="1037-1038", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_518 [label="property.ValueProvider.SetValue(target, value)", span="1040-1040", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_519 [label="property.SetIsSpecified != null", span="1042-1042", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_521 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''IsSpecified for property '{0}' on {1} set to true.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType)), null)", span="1046-1046", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_522 [label="property.SetIsSpecified(target, true)", span="1049-1049", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_506 [label="bool useExistingValue", span="1009-1009", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_507 [label="JsonContract propertyContract", span="1010-1010", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_508 [label="bool gottenCurrentValue", span="1011-1011", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_510 [label="return false;", span="1015-1015", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_511 [label="object value", span="1018-1018", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_512 [label="propertyConverter != null && propertyConverter.CanRead", span="1020-1020", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_524 [label="return useExistingValue;", span="1056-1056", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_520 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1044-1044", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_523 [label="return true;", span="1052-1052", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_525 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="1006-1006", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_42 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="2302-2302", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_703 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="437-437", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="JConstructor.cs"];
m10_33 [label="Entry Newtonsoft.Json.Linq.JConstructor.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="149-149", cluster="Newtonsoft.Json.Linq.JConstructor.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JConstructor.cs"];
m10_351 [label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JConstructor.cs"];
m10_36 [label="token.WriteTo(writer, converters)", span="155-155", cluster="Newtonsoft.Json.Linq.JConstructor.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JConstructor.cs"];
m10_354 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="776-776", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_397 [label="TypeNameHandling resolvedTypeNameHandling =\r\n                ((member != null) ? member.TypeNameHandling : null)\r\n                ?? ((containerContract != null) ? containerContract.ItemTypeNameHandling : null)\r\n                ?? ((containerMember != null) ? containerMember.ItemTypeNameHandling : null)\r\n                ?? Serializer._typeNameHandling", span="778-782", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_401 [label="ReflectionUtils.SplitFullyQualifiedTypeName(qualifiedTypeName, out typeName, out assemblyName)", span="788-788", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_405 [label="throw JsonSerializationException.Create(reader, ''Error resolving type specified in JSON '{0}'.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName), ex);", span="797-797", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_407 [label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' was not resolved.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName));", span="802-802", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_409 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved type '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName, specifiedType)), null)", span="807-807", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_410 [label="objectType != null\r\n#if !(NET35 || NET20 || PORTABLE40)\r\n                    && objectType != typeof(IDynamicMetaObjectProvider)\r\n#endif\r\n                    && !objectType.IsAssignableFrom(specifiedType)", span="810-814", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_411 [label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' is not compatible with '{1}'.''.FormatWith(CultureInfo.InvariantCulture, specifiedType.AssemblyQualifiedName, objectType.AssemblyQualifiedName));", span="816-816", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_398 [label="resolvedTypeNameHandling != TypeNameHandling.None", span="784-784", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_399 [label="string typeName", span="786-786", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_400 [label="string assemblyName", span="787-787", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_402 [label="Type specifiedType", span="790-790", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_403 [label="specifiedType = Serializer._binder.BindToType(assemblyName, typeName)", span="793-793", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_404 [label=Exception, span="795-795", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_406 [label="specifiedType == null", span="800-800", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_412 [label="objectType = specifiedType", span="819-819", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_413 [label="contract = GetContractSafe(specifiedType)", span="820-820", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_408 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="805-805", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_414 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="776-776", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_471 [label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0", cluster="System.Array.CreateInstance(System.Type, int)", file="JConstructor.cs"];
m10_758 [label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack()", file="JConstructor.cs"];
m10_986 [label="Entry System.Collections.ObjectModel.Collection<T>.IndexOf(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.IndexOf(T)", file="JConstructor.cs"];
m10_20 [label="CheckedRead(reader)", span="105-105", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_21 [label="contract.ContractType == JsonContractType.Dictionary", span="108-108", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_22 [label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)contract", span="110-110", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_23 [label="PopulateDictionary((dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(target) : (IDictionary)target, reader, dictionaryContract, null, id)", span="111-111", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_978 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JConstructor.cs"];
m10_34 [label="writer.WriteStartConstructor(_name)", span="151-151", cluster="Newtonsoft.Json.Linq.JConstructor.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JConstructor.cs"];
m10_529 [label="Entry Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", span="37-37", cluster="Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", file="JConstructor.cs"];
m10_636 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1286-1286", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JConstructor.cs"];
m10_637 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1288-1288", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JConstructor.cs"];
m10_638 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1290-1290", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JConstructor.cs"];
m10_639 [label="contract.InvokeOnDeserializing(value, Serializer._context)", span="1293-1293", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JConstructor.cs"];
m10_640 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1286-1286", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JConstructor.cs"];
m10_203 [label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="1103-1103", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JConstructor.cs"];
m10_32 [label="Exit Newtonsoft.Json.Linq.JConstructor.CloneToken()", span="139-139", cluster="Newtonsoft.Json.Linq.JConstructor.CloneToken()", file="JConstructor.cs"];
m10_24 [label="contract.ContractType == JsonContractType.Object", span="113-113", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_162 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="852-852", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_431 [label="object value", span="854-854", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_432 [label="HasNoDefinedType(contract)", span="856-856", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_433 [label="return CreateJToken(reader, contract);", span="858-858", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_434 [label="JsonArrayContract arrayContract = EnsureArrayContract(reader, objectType, contract)", span="861-861", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_435 [label="existingValue == null", span="863-863", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_437 [label="IList list = CreateNewList(reader, arrayContract, out createdFromNonDefaultCreator)", span="866-866", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_439 [label="id != null", span="870-870", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_440 [label="throw JsonSerializationException.Create(reader, ''Cannot preserve reference to array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="872-872", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_441 [label="contract.OnSerializingCallbacks.Count > 0", span="875-875", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_442 [label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="877-877", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_443 [label="contract.OnErrorCallbacks.Count > 0", span="880-880", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_444 [label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="882-882", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_446 [label="throw JsonSerializationException.Create(reader, ''Cannot deserialize readonly or fixed size list: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="887-887", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_448 [label="PopulateList(list, reader, arrayContract, member, id)", span="893-893", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_449 [label="PopulateMultidimensionalArray(list, reader, arrayContract, member, id)", span="897-897", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_452 [label="list = CollectionUtils.ToMultidimensionalArray(list, arrayContract.CollectionItemType, contract.CreatedType.GetArrayRank())", span="904-904", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_463 [label="throw JsonSerializationException.Create(reader, ''Cannot populate list type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.CreatedType));", span="930-930", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_464 [label="value = PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(existingValue) : (IList)existingValue, reader, arrayContract, member, id)", span="933-933", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_445 [label="!arrayContract.HasParameterizedCreatorInternal && !arrayContract.IsArray", span="885-885", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_447 [label="!arrayContract.IsMultidimensionalArray", span="891-891", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_451 [label="arrayContract.IsMultidimensionalArray", span="902-902", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_453 [label="arrayContract.IsArray", span="906-906", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_454 [label="Array a = Array.CreateInstance(arrayContract.CollectionItemType, list.Count)", span="908-908", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_457 [label="ObjectConstructor<object> creator = arrayContract.OverrideCreator ?? arrayContract.ParameterizedCreator", span="914-914", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_462 [label="!arrayContract.CanDeserialize", span="928-928", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_436 [label="bool createdFromNonDefaultCreator", span="865-865", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_438 [label=createdFromNonDefaultCreator, span="868-868", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_450 [label=createdFromNonDefaultCreator, span="900-900", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_455 [label="list.CopyTo(a, 0)", span="909-909", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_458 [label="return creator(list);", span="916-916", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_459 [label="list is IWrappedCollection", span="919-919", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_460 [label="return ((IWrappedCollection)list).UnderlyingCollection;", span="921-921", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_461 [label="value = list", span="924-924", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_456 [label="list = a", span="910-910", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_465 [label="return value;", span="936-936", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_466 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="852-852", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JConstructor.cs"];
m10_289 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="939-939", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_473 [label="return (contract == null || contract.UnderlyingType == typeof(object) || contract.ContractType == JsonContractType.Linq\r\n#if !(NET35 || NET20 || PORTABLE40)\r\n                    || contract.UnderlyingType == typeof(IDynamicMetaObjectProvider)\r\n#endif\r\n                );", span="941-945", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_474 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="939-939", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_286 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1883-1883", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JConstructor.cs"];
m10_984 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JConstructor.cs"];
m10_497 [label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0", cluster="System.Enum.Parse(System.Type, string, bool)", file="JConstructor.cs"];
m10_79 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="108-108", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JConstructor.cs"];
m10_528 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="1155-1155", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_576 [label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && value == null", span="1157-1157", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_578 [label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n                && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n                && MiscellaneousUtils.ValueEquals(value, property.GetResolvedDefaultValue())", span="1162-1164", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_580 [label="!property.Writable", span="1169-1169", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_577 [label="return false;", span="1159-1159", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_579 [label="return false;", span="1166-1166", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_581 [label="return false;", span="1171-1171", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_582 [label="return true;", span="1174-1174", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_583 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="1155-1155", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_81 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="98-98", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JConstructor.cs"];
m10_0 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="60-60", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JConstructor.cs"];
m10_5 [label="JsonContract contract = Serializer._contractResolver.ResolveContract(objectType)", span="71-71", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_6 [label="reader.TokenType == JsonToken.None || reader.TokenType == JsonToken.Comment", span="73-73", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_1 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="60-60", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JConstructor.cs"];
m10_4 [label="Type objectType = target.GetType()", span="69-69", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_2 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="65-65", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_3 [label="ValidationUtils.ArgumentNotNull(target, ''target'')", span="67-67", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_7 [label="!reader.Read()", span="75-75", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_292 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="1238-1238", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_613 [label="contract.OverrideCreator != null", span="1240-1240", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_614 [label="contract.HasParameterizedCreator", span="1242-1242", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_616 [label="return contract.CreateTemporaryDictionary();", span="1245-1245", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_618 [label="return (IDictionary)contract.OverrideCreator();", span="1250-1250", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_619 [label="contract.IsReadOnlyOrFixedSize", span="1253-1253", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_621 [label="return contract.CreateTemporaryDictionary();", span="1256-1256", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_622 [label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1258-1258", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_623 [label="object dictionary = contract.DefaultCreator()", span="1260-1260", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_624 [label="contract.ShouldCreateWrapper", span="1262-1262", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_625 [label="dictionary = contract.CreateWrapper(dictionary)", span="1264-1264", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_628 [label="contract.HasParameterizedCreatorInternal", span="1270-1270", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_630 [label="return contract.CreateTemporaryDictionary();", span="1273-1273", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_631 [label="!contract.IsInstantiable", span="1277-1277", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_632 [label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1279-1279", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_633 [label="throw JsonSerializationException.Create(reader, ''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1282-1282", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_615 [label="createdFromNonDefaultCreator = true", span="1244-1244", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_617 [label="createdFromNonDefaultCreator = false", span="1249-1249", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_620 [label="createdFromNonDefaultCreator = true", span="1255-1255", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_627 [label="return (IDictionary)dictionary;", span="1268-1268", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_626 [label="createdFromNonDefaultCreator = false", span="1267-1267", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_629 [label="createdFromNonDefaultCreator = true", span="1272-1272", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_634 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="1238-1238", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JConstructor.cs"];
m10_983 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreatorPropertyContext.CreatorPropertyContext()", span="1892-1892", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreatorPropertyContext.CreatorPropertyContext()", file="JConstructor.cs"];
m10_291 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="2259-2259", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1071 [label="object newObject = null", span="2261-2261", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1072 [label="objectContract.OverrideCreator != null", span="2263-2263", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1073 [label="objectContract.CreatorParameters.Count > 0", span="2265-2265", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1075 [label="return CreateObjectUsingCreatorWithParameters(reader, objectContract, containerMember, objectContract.OverrideCreator, id);", span="2268-2268", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1076 [label="newObject = objectContract.OverrideCreator(new object[0])", span="2271-2271", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1077 [label="objectContract.DefaultCreator != null &&\r\n                     (!objectContract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor || objectContract.ParameterizedCreator == null)", span="2273-2274", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1078 [label="newObject = objectContract.DefaultCreator()", span="2280-2280", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1079 [label="objectContract.ParameterizedCreator != null", span="2282-2282", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1081 [label="return CreateObjectUsingCreatorWithParameters(reader, objectContract, containerMember, objectContract.ParameterizedCreator, id);", span="2285-2285", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1083 [label="!objectContract.IsInstantiable", span="2290-2290", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1084 [label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="2292-2292", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1085 [label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="2295-2295", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1082 [label="newObject == null", span="2288-2288", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1087 [label="return newObject;", span="2299-2299", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1074 [label="createdFromNonDefaultCreator = true", span="2267-2267", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1080 [label="createdFromNonDefaultCreator = true", span="2284-2284", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1086 [label="createdFromNonDefaultCreator = false", span="2298-2298", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_1088 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="2259-2259", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JConstructor.cs"];
m10_290 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JConstructor.cs"];
m10_1145 [label="Entry lambda expression", span="2308-2308", cluster="lambda expression", file="JConstructor.cs"];
m10_990 [label="Entry lambda expression", span="1913-1913", cluster="lambda expression", file="JConstructor.cs"];
m10_994 [label="p.Property != property", span="1922-1922", cluster="lambda expression", file="JConstructor.cs"];
m10_993 [label="Entry lambda expression", span="1922-1922", cluster="lambda expression", file="JConstructor.cs"];
m10_996 [label="Entry lambda expression", span="1967-1967", cluster="lambda expression", file="JConstructor.cs"];
m10_991 [label="p.PropertyName", span="1913-1913", cluster="lambda expression", file="JConstructor.cs"];
m10_992 [label="Exit lambda expression", span="1913-1913", cluster="lambda expression", file="JConstructor.cs"];
m10_995 [label="Exit lambda expression", span="1922-1922", cluster="lambda expression", file="JConstructor.cs"];
m10_997 [label="p.PropertyName", span="1967-1967", cluster="lambda expression", file="JConstructor.cs"];
m10_998 [label="Exit lambda expression", span="1967-1967", cluster="lambda expression", file="JConstructor.cs"];
m10_1142 [label="Entry lambda expression", span="2308-2308", cluster="lambda expression", file="JConstructor.cs"];
m10_1143 [label=m, span="2308-2308", cluster="lambda expression", file="JConstructor.cs"];
m10_1144 [label="Exit lambda expression", span="2308-2308", cluster="lambda expression", file="JConstructor.cs"];
m10_1146 [label="PropertyPresence.None", span="2308-2308", cluster="lambda expression", file="JConstructor.cs"];
m10_1147 [label="Exit lambda expression", span="2308-2308", cluster="lambda expression", file="JConstructor.cs"];
m10_30 [label="Entry Newtonsoft.Json.Linq.JConstructor.CloneToken()", span="139-139", cluster="Newtonsoft.Json.Linq.JConstructor.CloneToken()", file="JConstructor.cs"];
m10_285 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2093-2093", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_981 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", span="2124-2124", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1007 [label="List<CreatorPropertyContext> propertyValues = new List<CreatorPropertyContext>()", span="2126-2126", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1009 [label="reader.TokenType", span="2130-2130", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1011 [label="string memberName = reader.Value.ToString()", span="2133-2133", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1012 [label="CreatorPropertyContext creatorPropertyContext = new CreatorPropertyContext\r\n                        {\r\n                            Name = reader.Value.ToString(),\r\n                            ConstructorProperty = contract.CreatorParameters.GetClosestMatchProperty(memberName),\r\n                            Property = contract.Properties.GetClosestMatchProperty(memberName)\r\n                        }", span="2135-2140", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1018 [label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, contract, containerProperty)", span="2151-2151", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1019 [label="!ReadForType(reader, property.PropertyContract, propertyConverter != null)", span="2153-2153", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1020 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="2155-2155", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1022 [label="creatorPropertyContext.Value = DeserializeConvertable(propertyConverter, reader, property.PropertyType, null)", span="2160-2160", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1023 [label="creatorPropertyContext.Value = CreateValueInternal(reader, property.PropertyType, property.PropertyContract, property, contract, containerProperty, null)", span="2164-2164", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1024 [label="!reader.Read()", span="2171-2171", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1025 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="2173-2173", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1027 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}.''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="2178-2178", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1029 [label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, objectType.Name));", span="2183-2183", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1030 [label="contract.ExtensionDataSetter != null", span="2187-2187", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1031 [label="creatorPropertyContext.Value = ReadExtensionDataValue(contract, containerProperty, reader)", span="2189-2189", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1032 [label="reader.Skip()", span="2193-2193", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1036 [label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="2202-2202", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1037 [label="!exit && reader.Read()", span="2204-2204", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1008 [label="bool exit = false", span="2127-2127", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1013 [label="propertyValues.Add(creatorPropertyContext)", span="2141-2141", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1038 [label="return propertyValues;", span="2206-2206", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1010 [label="JsonToken.PropertyName", span="2132-2132", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1033 [label="JsonToken.Comment", span="2196-2196", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1034 [label="JsonToken.EndObject", span="2198-2198", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1014 [label="JsonProperty property = creatorPropertyContext.ConstructorProperty ?? creatorPropertyContext.Property", span="2143-2143", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1015 [label="property != null && !property.Ignored", span="2144-2144", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1016 [label="property.PropertyContract == null", span="2146-2146", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1017 [label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="2148-2148", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1021 [label="propertyConverter != null && propertyConverter.CanRead", span="2158-2158", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1026 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="2176-2176", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1028 [label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="2181-2181", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1035 [label="exit = true", span="2199-2199", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_1039 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", span="2124-2124", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JConstructor.cs"];
m10_169 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JConstructor.cs"];
m10_468 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1440-1440", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_705 [label="int rank = contract.UnderlyingType.GetArrayRank()", span="1442-1442", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_706 [label="id != null", span="1444-1444", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_707 [label="AddReference(reader, id, list)", span="1446-1446", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_708 [label="OnDeserializing(reader, contract, list)", span="1449-1449", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_709 [label="JsonContract collectionItemContract = GetContractSafe(contract.CollectionItemType)", span="1451-1451", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_710 [label="JsonConverter collectionItemConverter = GetConverter(collectionItemContract, null, contract, containerProperty)", span="1452-1452", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_713 [label="listStack.Push(list)", span="1456-1456", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_714 [label="IList currentList = list", span="1457-1457", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_716 [label="int initialDepth = reader.Depth", span="1462-1462", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_718 [label="ReadForType(reader, collectionItemContract, collectionItemConverter != null)", span="1468-1468", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_719 [label="reader.TokenType", span="1470-1470", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_727 [label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1484-1484", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_728 [label="value = CreateValueInternal(reader, contract.CollectionItemType, collectionItemContract, null, contract, containerProperty, null)", span="1488-1488", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_731 [label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1502-1502", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_732 [label="IsErrorHandled(list, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1504-1504", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_733 [label="HandleError(reader, true, initialDepth)", span="1506-1506", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_735 [label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1512-1512", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_738 [label="reader.Read()", span="1527-1527", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_739 [label="reader.TokenType", span="1529-1529", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_751 [label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing multidimensional array: '' + reader.TokenType);", span="1552-1552", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_754 [label="ThrowUnexpectedEndException(reader, contract, list, ''Unexpected end when deserializing array.'')", span="1564-1564", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_755 [label="OnDeserialized(reader, contract, list)", span="1567-1567", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_756 [label="return list;", span="1568-1568", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_717 [label="listStack.Count == rank", span="1464-1464", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_711 [label="int? previousErrorIndex = null", span="1454-1454", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_726 [label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1482-1482", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_712 [label="Stack<IList> listStack = new Stack<IList>()", span="1455-1455", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_734 [label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1508-1508", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_721 [label="listStack.Pop()", span="1473-1473", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_722 [label="currentList = listStack.Peek()", span="1474-1474", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_743 [label="listStack.Push(newList)", span="1534-1534", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_746 [label="listStack.Pop()", span="1538-1538", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_747 [label="listStack.Count > 0", span="1540-1540", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_748 [label="currentList = listStack.Peek()", span="1542-1542", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_715 [label="bool finished = false", span="1459-1459", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_742 [label="currentList.Add(newList)", span="1533-1533", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_752 [label="!finished", span="1560-1560", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_753 [label="!finished", span="1562-1562", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_720 [label="JsonToken.EndArray", span="1472-1472", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_724 [label="JsonToken.Comment", span="1477-1477", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_725 [label="object value", span="1480-1480", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_723 [label="previousErrorIndex = null", span="1475-1475", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_729 [label="currentList.Add(value)", span="1491-1491", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_730 [label=Exception, span="1500-1500", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_736 [label="previousErrorIndex = errorPosition.Position", span="1516-1516", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_737 [label="throw;", span="1521-1521", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_740 [label="JsonToken.StartArray", span="1531-1531", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_745 [label="JsonToken.EndArray", span="1537-1537", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_750 [label="JsonToken.Comment", span="1549-1549", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_741 [label="IList newList = new List<object>()", span="1532-1532", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_744 [label="currentList = newList", span="1535-1535", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_749 [label="finished = true", span="1546-1546", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_757 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1440-1440", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_77 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="282-282", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_126 [label="contract != null && contract.ContractType == JsonContractType.Linq", span="284-284", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_127 [label="return CreateJToken(reader, contract);", span="286-286", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_128 [label="reader.TokenType", span="291-291", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_130 [label="return CreateObject(reader, objectType, contract, member, containerContract, containerMember, existingValue);", span="296-296", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_132 [label="return CreateList(reader, objectType, contract, member, existingValue, null);", span="298-298", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_138 [label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="304-304", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_140 [label="string s = (string)reader.Value", span="306-306", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_141 [label="CoerceEmptyStringToNull(objectType, contract, s)", span="309-309", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_143 [label="objectType == typeof(byte[])", span="315-315", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_145 [label="return EnsureType(reader, s, CultureInfo.InvariantCulture, contract, objectType);", span="320-320", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_147 [label="string constructorName = reader.Value.ToString()", span="322-322", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_148 [label="return EnsureType(reader, constructorName, CultureInfo.InvariantCulture, contract, objectType);", span="324-324", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_151 [label="objectType == typeof(DBNull)", span="328-328", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_153 [label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="334-334", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_155 [label="return new JRaw((string)reader.Value);", span="336-336", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_157 [label="throw JsonSerializationException.Create(reader, ''Unexpected token while deserializing object: '' + reader.TokenType);", span="341-341", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_158 [label="reader.Read()", span="343-343", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_159 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="345-345", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_129 [label="JsonToken.StartObject", span="295-295", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_131 [label="JsonToken.StartArray", span="297-297", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_133 [label="JsonToken.Integer", span="299-299", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_139 [label="JsonToken.String", span="305-305", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_146 [label="JsonToken.StartConstructor", span="321-321", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_149 [label="JsonToken.Null", span="325-325", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_154 [label="JsonToken.Raw", span="335-335", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_156 [label="JsonToken.Comment", span="337-337", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_134 [label="JsonToken.Float", span="300-300", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_135 [label="JsonToken.Boolean", span="301-301", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_136 [label="JsonToken.Date", span="302-302", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_137 [label="JsonToken.Bytes", span="303-303", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_144 [label="return Convert.FromBase64String(s);", span="317-317", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_142 [label="return null;", span="311-311", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_150 [label="JsonToken.Undefined", span="326-326", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_152 [label="return DBNull.Value;", span="330-330", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_160 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="282-282", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_612 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="JConstructor.cs"];
m10_8 [label="Entry Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", span="1172-1172", cluster="Newtonsoft.Json.Linq.JContainer.MergeEnumerableContent(Newtonsoft.Json.Linq.JContainer, System.Collections.IEnumerable, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JConstructor.cs"];
m10_9 [label="reader.TokenType == JsonToken.StartArray", span="81-81", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_14 [label="reader.TokenType == JsonToken.StartObject", span="94-94", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_15 [label="CheckedRead(reader)", span="96-96", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_19 [label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="658-658", cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="JConstructor.cs"];
m10_10 [label="contract.ContractType == JsonContractType.Array", span="83-83", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_16 [label="string id = null", span="98-98", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JConstructor.cs"];
m10_472 [label="Entry System.Collections.ICollection.CopyTo(System.Array, int)", span="0-0", cluster="System.Collections.ICollection.CopyTo(System.Array, int)", file="JConstructor.cs"];
m10_563 [label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="58-58", cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JConstructor.cs"];
m10_980 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="JConstructor.cs"];
m10_501 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="JConstructor.cs"];
m10_1155 [label="Entry System.Predicate<T>.Invoke(T)", span="0-0", cluster="System.Predicate<T>.Invoke(T)", file="JConstructor.cs"];
m10_764 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JConstructor.cs"];
m10_1089 [label="OnDeserializing(reader, contract, newObject)", span="2304-2304", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1090 [label="Dictionary<JsonProperty, PropertyPresence> propertiesPresence = (contract.HasRequiredOrDefaultValueProperties || HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Populate))\r\n                ? contract.Properties.ToDictionary(m => m, m => PropertyPresence.None)\r\n                : null", span="2307-2309", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1091 [label="id != null", span="2311-2311", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1092 [label="AddReference(reader, id, newObject)", span="2313-2313", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1093 [label="int initialDepth = reader.Depth", span="2316-2316", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1095 [label="reader.TokenType", span="2321-2321", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1097 [label="string memberName = reader.Value.ToString()", span="2325-2325", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1098 [label="CheckPropertyName(reader, memberName)", span="2327-2327", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1099 [label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="2336-2336", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1102 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="2342-2342", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1104 [label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType.Name));", span="2347-2347", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1105 [label="!reader.Read()", span="2350-2350", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1106 [label="SetExtensionData(contract, member, reader, memberName, newObject)", span="2355-2355", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1107 [label="property.Ignored || !ShouldDeserialize(reader, property, newObject)", span="2359-2359", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1108 [label="!reader.Read()", span="2361-2361", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1109 [label="SetPropertyPresence(reader, property, propertiesPresence)", span="2366-2366", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1110 [label="SetExtensionData(contract, member, reader, memberName, newObject)", span="2367-2367", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1113 [label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, contract, member)", span="2376-2376", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1114 [label="!ReadForType(reader, property.PropertyContract, propertyConverter != null)", span="2378-2378", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1115 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="2380-2380", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1116 [label="SetPropertyPresence(reader, property, propertiesPresence)", span="2383-2383", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1117 [label="!SetPropertyValue(property, propertyConverter, contract, member, reader, newObject)", span="2386-2386", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1118 [label="SetExtensionData(contract, member, reader, memberName, newObject)", span="2388-2388", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1120 [label="IsErrorHandled(newObject, contract, memberName, reader as IJsonLineInfo, reader.Path, ex)", span="2394-2394", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1121 [label="HandleError(reader, true, initialDepth)", span="2396-2396", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1126 [label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="2412-2412", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1127 [label="!finished && reader.Read()", span="2414-2414", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1129 [label="ThrowUnexpectedEndException(reader, contract, newObject, ''Unexpected end when deserializing object.'')", span="2418-2418", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1134 [label="EndProcessProperty(newObject, reader, contract, initialDepth, property, presence, true)", span="2428-2428", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1135 [label="OnDeserialized(reader, contract, newObject)", span="2432-2432", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1136 [label="return newObject;", span="2433-2433", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1130 [label="propertiesPresence != null", span="2421-2421", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1131 [label=propertiesPresence, span="2423-2423", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1094 [label="bool finished = false", span="2318-2318", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1096 [label="JsonToken.PropertyName", span="2323-2323", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1123 [label="JsonToken.EndObject", span="2405-2405", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1125 [label="JsonToken.Comment", span="2408-2408", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1100 [label="property == null", span="2338-2338", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1111 [label="property.PropertyContract == null", span="2371-2371", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1112 [label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="2373-2373", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1101 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="2340-2340", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1103 [label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="2345-2345", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1119 [label=Exception, span="2392-2392", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1122 [label="throw;", span="2400-2400", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1124 [label="finished = true", span="2406-2406", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1128 [label="!finished", span="2416-2416", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1132 [label="JsonProperty property = propertyPresence.Key", span="2425-2425", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1133 [label="PropertyPresence presence = propertyPresence.Value", span="2426-2426", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_1137 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="2302-2302", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_101 [label="Entry Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", span="58-58", cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="JConstructor.cs"];
m10_1066 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="433-433", cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JConstructor.cs"];
m10_121 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="107-107", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JConstructor.cs"];
m10_898 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="125-125", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JConstructor.cs"];
m10_123 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", span="174-174", cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="JConstructor.cs"];
m10_124 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", span="522-522", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", file="JConstructor.cs"];
m10_1139 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", span="2470-2470", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JConstructor.cs"];
m10_1167 [label="contract.ExtensionDataSetter != null", span="2472-2472", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JConstructor.cs"];
m10_1168 [label="object value = ReadExtensionDataValue(contract, member, reader)", span="2476-2476", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JConstructor.cs"];
m10_1169 [label="contract.ExtensionDataSetter(o, memberName, value)", span="2478-2478", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JConstructor.cs"];
m10_1171 [label="throw JsonSerializationException.Create(reader, ''Error setting value in extension data for type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType), ex);", span="2482-2482", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JConstructor.cs"];
m10_1172 [label="reader.Skip()", span="2487-2487", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JConstructor.cs"];
m10_1170 [label=Exception, span="2480-2480", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JConstructor.cs"];
m10_1173 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", span="2470-2470", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JConstructor.cs"];
m10_185 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="JConstructor.cs"];
m10_122 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", span="2453-2453", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JConstructor.cs"];
m10_1157 [label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.ReadAhead", span="2455-2455", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JConstructor.cs"];
m10_1158 [label=memberName, span="2457-2457", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JConstructor.cs"];
m10_1163 [label="reader.Skip()", span="2463-2463", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JConstructor.cs"];
m10_1165 [label="return false;", span="2467-2467", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JConstructor.cs"];
m10_1159 [label="JsonTypeReflector.IdPropertyName", span="2459-2459", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JConstructor.cs"];
m10_1160 [label="JsonTypeReflector.RefPropertyName", span="2460-2460", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JConstructor.cs"];
m10_1161 [label="JsonTypeReflector.TypePropertyName", span="2461-2461", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JConstructor.cs"];
m10_1162 [label="JsonTypeReflector.ArrayValuesPropertyName", span="2462-2462", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JConstructor.cs"];
m10_1164 [label="return true;", span="2464-2464", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JConstructor.cs"];
m10_1166 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", span="2453-2453", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JConstructor.cs"];
m10_125 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JConstructor.cs"];
m10_170 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="353-353", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_171 [label="contract.ContractType", span="355-355", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_172 [label="JsonContractType.Object", span="357-357", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_177 [label="JsonContractType.Array", span="366-366", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_179 [label="JsonContractType.Primitive", span="368-368", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_181 [label="JsonContractType.String", span="370-370", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_183 [label="throw new ArgumentOutOfRangeException();", span="373-373", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_173 [label="JsonContractType.Dictionary", span="358-358", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_174 [label="JsonContractType.Serializable", span="360-360", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_175 [label="JsonContractType.Dynamic", span="363-363", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_176 [label="return @''JSON object (e.g. {''''name'''':''''value''''})'';", span="365-365", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_178 [label="return @''JSON array (e.g. [1,2,3])'';", span="367-367", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_180 [label="return @''JSON primitive value (e.g. string, number, boolean, null)'';", span="369-369", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_182 [label="return @''JSON string value'';", span="371-371", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_184 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="353-353", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JConstructor.cs"];
m10_1067 [label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="427-427", cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JConstructor.cs"];
m10_31 [label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43", cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JConstructor.cs"];
m10_295 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1691-1691", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_809 [label="Type objectType = contract.UnderlyingType", span="1693-1693", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_813 [label="throw JsonSerializationException.Create(reader, message);", span="1701-1701", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_815 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Deserializing {0} using ISerializable constructor.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1706-1706", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_816 [label="SerializationInfo serializationInfo = new SerializationInfo(contract.UnderlyingType, new JsonFormatterConverter(this, contract, member))", span="1709-1709", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_818 [label="reader.TokenType", span="1714-1714", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_820 [label="string memberName = reader.Value.ToString()", span="1717-1717", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_821 [label="!reader.Read()", span="1718-1718", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_822 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1720-1720", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_823 [label="serializationInfo.AddValue(memberName, JToken.ReadFrom(reader))", span="1722-1722", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_827 [label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1730-1730", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_828 [label="!finished && reader.Read()", span="1732-1732", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_830 [label="ThrowUnexpectedEndException(reader, contract, serializationInfo, ''Unexpected end when deserializing object.'')", span="1736-1736", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_831 [label="contract.ISerializableCreator == null", span="1739-1739", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_832 [label="throw JsonSerializationException.Create(reader, ''ISerializable type '{0}' does not have a valid constructor. To correctly implement ISerializable a constructor that takes SerializationInfo and StreamingContext parameters should be present.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="1741-1741", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_833 [label="object createdObject = contract.ISerializableCreator(serializationInfo, Serializer._context)", span="1744-1744", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_834 [label="id != null", span="1746-1746", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_835 [label="AddReference(reader, id, createdObject)", span="1748-1748", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_836 [label="OnDeserializing(reader, contract, createdObject)", span="1752-1752", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_837 [label="OnDeserialized(reader, contract, createdObject)", span="1753-1753", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_810 [label="!JsonTypeReflector.FullyTrusted", span="1695-1695", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_812 [label="message = message.FormatWith(CultureInfo.InvariantCulture, objectType)", span="1699-1699", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_811 [label="string message = @''Type '{0}' implements ISerializable but cannot be deserialized using the ISerializable interface because the current application is not fully trusted and ISerializable can expose secure data.'' + Environment.NewLine +\r\n                                 @''To fix this error either change the environment to be fully trusted, change the application to not deserialize the type, add JsonObjectAttribute to the type or change the JsonSerializer setting ContractResolver to use a new DefaultContractResolver with IgnoreSerializableInterface set to true.'' + Environment.NewLine", span="1697-1698", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_814 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1704-1704", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_817 [label="bool finished = false", span="1711-1711", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_819 [label="JsonToken.PropertyName", span="1716-1716", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_824 [label="JsonToken.Comment", span="1724-1724", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_825 [label="JsonToken.EndObject", span="1726-1726", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_826 [label="finished = true", span="1727-1727", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_829 [label="!finished", span="1734-1734", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_838 [label="return createdObject;", span="1755-1755", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_839 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1691-1691", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_526 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1059-1059", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_531 [label="currentValue = null", span="1061-1061", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_535 [label="property.Ignored", span="1066-1066", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_537 [label="JsonToken tokenType = reader.TokenType", span="1071-1071", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_538 [label="property.PropertyContract == null", span="1073-1073", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_539 [label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1075-1075", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_540 [label="ObjectCreationHandling objectCreationHandling =\r\n                property.ObjectCreationHandling.GetValueOrDefault(Serializer._objectCreationHandling)", span="1078-1079", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_541 [label="(objectCreationHandling != ObjectCreationHandling.Replace)\r\n                && (tokenType == JsonToken.StartArray || tokenType == JsonToken.StartObject)\r\n                && property.Readable", span="1081-1083", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_542 [label="currentValue = property.ValueProvider.GetValue(target)", span="1085-1085", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_547 [label="!property.Writable && !useExistingValue", span="1096-1096", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_549 [label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && tokenType == JsonToken.Null", span="1102-1102", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_551 [label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n                && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n                && JsonTokenUtils.IsPrimitiveToken(tokenType)\r\n                && MiscellaneousUtils.ValueEquals(reader.Value, property.GetResolvedDefaultValue())", span="1108-1111", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_554 [label="propertyContract = property.PropertyContract", span="1118-1118", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_556 [label="propertyContract != property.PropertyContract", span="1124-1124", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_557 [label="propertyConverter = GetConverter(propertyContract, property.MemberConverter, containerContract, containerProperty)", span="1126-1126", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_532 [label="useExistingValue = false", span="1062-1062", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_553 [label="currentValue == null", span="1116-1116", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_555 [label="propertyContract = GetContractSafe(currentValue.GetType())", span="1122-1122", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_533 [label="propertyContract = null", span="1063-1063", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_534 [label="gottenCurrentValue = false", span="1064-1064", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_536 [label="return true;", span="1068-1068", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_543 [label="gottenCurrentValue = true", span="1086-1086", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_544 [label="currentValue != null", span="1088-1088", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_545 [label="propertyContract = GetContractSafe(currentValue.GetType())", span="1090-1090", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_546 [label="useExistingValue = (!propertyContract.IsReadOnlyOrFixedSize && !propertyContract.UnderlyingType.IsValueType())", span="1092-1092", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_548 [label="return true;", span="1098-1098", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_550 [label="return true;", span="1104-1104", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_552 [label="return true;", span="1113-1113", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_558 [label="return false;", span="1130-1130", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_559 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1059-1059", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JConstructor.cs"];
m10_702 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="364-364", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="JConstructor.cs"];
m10_503 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", span="146-146", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", file="JConstructor.cs"];
m10_641 [label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", span="377-377", cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", file="JConstructor.cs"];
m10_1070 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="446-446", cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JConstructor.cs"];
m10_988 [label="Entry Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, object)", span="69-69", cluster="Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, object)", file="JConstructor.cs"];
m10_416 [label="Entry System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", span="0-0", cluster="System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", file="JConstructor.cs"];
m10_349 [label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="1093-1093", cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JConstructor.cs"];
m10_1068 [label="Entry Newtonsoft.Json.JsonReader.ReadAsString()", span="421-421", cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JConstructor.cs"];
m10_900 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", span="1902-1902", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_901 [label="ValidationUtils.ArgumentNotNull(creator, ''creator'')", span="1904-1904", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_902 [label="bool trackPresence = (contract.HasRequiredOrDefaultValueProperties || HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Populate))", span="1907-1907", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_903 [label="Type objectType = contract.UnderlyingType", span="1909-1909", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_905 [label="string parameters = string.Join('', '', contract.CreatorParameters.Select(p => p.PropertyName).ToArray())", span="1913-1913", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_906 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Deserializing {0} using creator with parameters: {1}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, parameters)), null)", span="1914-1914", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_907 [label="List<CreatorPropertyContext> propertyContexts = ResolvePropertyAndCreatorValues(contract, containerProperty, reader, objectType)", span="1917-1917", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_909 [label="contract.Properties", span="1920-1920", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_912 [label="object[] creatorParameterValues = new object[contract.CreatorParameters.Count]", span="1934-1934", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_926 [label="constructorProperty = contract.CreatorParameters.ForgivingCaseSensitiveFind(p => p.PropertyName, context.Property.UnderlyingName)", span="1967-1967", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_933 [label="context.Value = EnsureType(\r\n                                    reader,\r\n                                    constructorProperty.GetResolvedDefaultValue(),\r\n                                    CultureInfo.InvariantCulture,\r\n                                    constructorProperty.PropertyContract,\r\n                                    constructorProperty.PropertyType)", span="1985-1990", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_934 [label="int i = contract.CreatorParameters.IndexOf(constructorProperty)", span="1995-1995", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_937 [label="object createdObject = creator(creatorParameterValues)", span="2002-2002", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_938 [label="id != null", span="2004-2004", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_939 [label="AddReference(reader, id, createdObject)", span="2006-2006", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_940 [label="OnDeserializing(reader, contract, createdObject)", span="2009-2009", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_967 [label="contract.ExtensionDataSetter != null", span="2072-2072", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_970 [label="contract.ExtensionDataSetter(createdObject, propertyValue.Name, propertyValue.Value)", span="2078-2078", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_974 [label="EndProcessProperty(\r\n                        createdObject,\r\n                        reader,\r\n                        contract,\r\n                        reader.Depth,\r\n                        context.Property,\r\n                        context.Presence.Value,\r\n                        !context.Used)", span="2092-2099", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_975 [label="OnDeserialized(reader, contract, createdObject)", span="2103-2103", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_908 [label=trackPresence, span="1918-1918", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_914 [label=trackPresence, span="1939-1939", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_928 [label=trackPresence, span="1974-1974", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_971 [label=trackPresence, span="2083-2083", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_904 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1911-1911", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_910 [label="propertyContexts.All(p => p.Property != property)", span="1922-1922", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_911 [label="propertyContexts.Add(new CreatorPropertyContext\r\n                        {\r\n                            Property = property,\r\n                            Name = property.PropertyName,\r\n                            Presence = PropertyPresence.None\r\n                        })", span="1924-1929", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_913 [label=propertyContexts, span="1936-1936", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_941 [label=propertyContexts, span="2012-2012", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_968 [label=propertyContexts, span="2074-2074", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_972 [label=propertyContexts, span="2085-2085", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_935 [label="creatorParameterValues[i] = context.Value", span="1996-1996", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_915 [label="context.Property != null && context.Presence == null", span="1941-1941", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_916 [label="object v = context.Value", span="1943-1943", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_921 [label="propertyPresence = CoerceEmptyStringToNull(context.Property.PropertyType, context.Property.PropertyContract, (string)v)\r\n                                ? PropertyPresence.Null\r\n                                : PropertyPresence.Value", span="1951-1953", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_923 [label="context.Presence = propertyPresence", span="1960-1960", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_924 [label="JsonProperty constructorProperty = context.ConstructorProperty", span="1964-1964", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_925 [label="constructorProperty == null && context.Property != null", span="1965-1965", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_929 [label="context.Presence == PropertyPresence.None || context.Presence == PropertyPresence.Null", span="1976-1976", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_936 [label="context.Used = true", span="1998-1998", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_917 [label="PropertyPresence propertyPresence", span="1944-1944", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_918 [label="v == null", span="1945-1945", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_920 [label="v is string", span="1949-1949", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_919 [label="propertyPresence = PropertyPresence.Null", span="1947-1947", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_922 [label="propertyPresence = PropertyPresence.Value", span="1957-1957", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_927 [label="constructorProperty != null && !constructorProperty.Ignored", span="1970-1970", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_930 [label="constructorProperty.PropertyContract == null", span="1978-1978", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_931 [label="constructorProperty.PropertyContract = GetContractSafe(constructorProperty.PropertyType)", span="1980-1980", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_932 [label="HasFlag(constructorProperty.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)", span="1983-1983", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_946 [label="property.ValueProvider.SetValue(createdObject, value)", span="2027-2027", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_952 [label="object createdObjectCollection = property.ValueProvider.GetValue(createdObject)", span="2039-2039", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_960 [label="object createdObjectDictionary = property.ValueProvider.GetValue(createdObject)", span="2055-2055", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_976 [label="return createdObject;", span="2104-2104", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_942 [label="context.Used ||\r\n                    context.Property == null ||\r\n                    context.Property.Ignored ||\r\n                    context.Presence == PropertyPresence.None", span="2014-2017", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_943 [label="JsonProperty property = context.Property", span="2022-2022", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_944 [label="object value = context.Value", span="2023-2023", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_947 [label="context.Used = true", span="2028-2028", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_966 [label="context.Used = true", span="2068-2068", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_945 [label="ShouldSetPropertyValue(property, value)", span="2025-2025", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_948 [label="!property.Writable && value != null", span="2030-2030", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_949 [label="JsonContract propertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="2033-2033", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_955 [label="IWrappedCollection newValues = propertyArrayContract.CreateWrapper(value)", span="2043-2043", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_963 [label="IDictionary newValues = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(value) : (IDictionary)value", span="2059-2059", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_950 [label="propertyContract.ContractType == JsonContractType.Array", span="2035-2035", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_951 [label="JsonArrayContract propertyArrayContract = (JsonArrayContract)propertyContract", span="2037-2037", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_958 [label="propertyContract.ContractType == JsonContractType.Dictionary", span="2051-2051", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_959 [label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)propertyContract", span="2053-2053", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_954 [label="IWrappedCollection createdObjectCollectionWrapper = propertyArrayContract.CreateWrapper(createdObjectCollection)", span="2042-2042", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_953 [label="createdObjectCollection != null", span="2040-2040", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_957 [label="createdObjectCollectionWrapper.Add(newValue)", span="2047-2047", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_956 [label=newValues, span="2045-2045", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_962 [label="IDictionary targetDictionary = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(createdObjectDictionary) : (IDictionary)createdObjectDictionary", span="2058-2058", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_961 [label="createdObjectDictionary != null", span="2056-2056", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_965 [label="targetDictionary.Add(newValue.Key, newValue.Value)", span="2063-2063", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_964 [label=newValues, span="2061-2061", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_969 [label="!propertyValue.Used", span="2076-2076", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_973 [label="context.Property == null", span="2087-2087", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_977 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", span="1902-1902", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JConstructor.cs"];
m10_288 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="686-686", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_355 [label="id = null", span="688-688", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_357 [label="reader.TokenType == JsonToken.PropertyName", span="691-691", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_358 [label="string propertyName = reader.Value.ToString()", span="693-693", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_361 [label="propertyName = reader.Value.ToString()", span="703-703", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_363 [label="CheckedRead(reader)", span="707-707", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_364 [label="reader.TokenType != JsonToken.String && reader.TokenType != JsonToken.Null", span="708-708", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_365 [label="throw JsonSerializationException.Create(reader, ''JSON reference {0} property must have a string or null value.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="710-710", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_366 [label="string reference = (reader.Value != null) ? reader.Value.ToString() : null", span="713-713", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_367 [label="CheckedRead(reader)", span="715-715", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_369 [label="reader.TokenType == JsonToken.PropertyName", span="719-719", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_370 [label="throw JsonSerializationException.Create(reader, ''Additional content found in JSON reference object. A JSON reference object should only have a {0} property.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="721-721", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_373 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved object reference '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, newValue.GetType())), null)", span="728-728", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_377 [label="CheckedRead(reader)", span="740-740", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_378 [label="string qualifiedTypeName = reader.Value.ToString()", span="741-741", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_379 [label="ResolveTypeName(reader, ref objectType, ref contract, member, containerContract, containerMember, qualifiedTypeName)", span="743-743", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_380 [label="CheckedRead(reader)", span="745-745", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_383 [label="CheckedRead(reader)", span="751-751", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_384 [label="id = (reader.Value != null) ? reader.Value.ToString() : null", span="753-753", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_385 [label="CheckedRead(reader)", span="755-755", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_388 [label="CheckedRead(reader)", span="760-760", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_389 [label="object list = CreateList(reader, objectType, contract, member, existingValue, id)", span="761-761", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_390 [label="CheckedRead(reader)", span="762-762", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_394 [label="metadataProperty && reader.TokenType == JsonToken.PropertyName", span="770-770", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_356 [label="newValue = null", span="689-689", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_395 [label="return false;", span="773-773", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_359 [label="propertyName.Length > 0 && propertyName[0] == '$'", span="695-695", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_360 [label="bool metadataProperty", span="699-699", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_362 [label="string.Equals(propertyName, JsonTypeReflector.RefPropertyName, StringComparison.Ordinal)", span="705-705", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_376 [label="string.Equals(propertyName, JsonTypeReflector.TypePropertyName, StringComparison.Ordinal)", span="738-738", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_382 [label="string.Equals(propertyName, JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="749-749", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_387 [label="string.Equals(propertyName, JsonTypeReflector.ArrayValuesPropertyName, StringComparison.Ordinal)", span="758-758", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_368 [label="reference != null", span="717-717", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_371 [label="newValue = Serializer.GetReferenceResolver().ResolveReference(this, reference)", span="724-724", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_375 [label="metadataProperty = true", span="735-735", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_372 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="726-726", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_374 [label="return true;", span="731-731", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_381 [label="metadataProperty = true", span="747-747", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_386 [label="metadataProperty = true", span="756-756", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_393 [label="metadataProperty = false", span="768-768", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_391 [label="newValue = list", span="763-763", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_392 [label="return true;", span="764-764", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_396 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="686-686", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JConstructor.cs"];
m10_102 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="85-85", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JConstructor.cs"];
m10_1140 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", span="2436-2436", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_1148 [label="property.ShouldDeserialize == null", span="2438-2438", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_1150 [label="bool shouldDeserialize = property.ShouldDeserialize(target)", span="2443-2443", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_1152 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, reader.Path, ''ShouldDeserialize result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, shouldDeserialize)), null)", span="2447-2447", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_1149 [label="return true;", span="2440-2440", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_1151 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="2445-2445", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_1153 [label="return shouldDeserialize;", span="2450-2450", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_1154 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", span="2436-2436", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JConstructor.cs"];
m10_41 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1306-1306", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_469 [label="Entry System.Type.GetArrayRank()", span="0-0", cluster="System.Type.GetArrayRank()", file="JConstructor.cs"];
m10_985 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", span="146-146", cluster="System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", file="JConstructor.cs"];
m10_648 [label="IWrappedDictionary wrappedDictionary = dictionary as IWrappedDictionary", span="1308-1308", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_649 [label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : dictionary", span="1309-1309", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_650 [label="id != null", span="1311-1311", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_651 [label="AddReference(reader, id, underlyingDictionary)", span="1313-1313", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_652 [label="OnDeserializing(reader, contract, underlyingDictionary)", span="1316-1316", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_653 [label="int initialDepth = reader.Depth", span="1318-1318", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_654 [label="contract.KeyContract == null", span="1320-1320", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_655 [label="contract.KeyContract = GetContractSafe(contract.DictionaryKeyType)", span="1322-1322", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_656 [label="contract.ItemContract == null", span="1325-1325", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_657 [label="contract.ItemContract = GetContractSafe(contract.DictionaryValueType)", span="1327-1327", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_658 [label="JsonConverter dictionaryValueConverter = contract.ItemConverter ?? GetConverter(contract.ItemContract, null, contract, containerProperty)", span="1330-1330", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_659 [label="PrimitiveTypeCode keyTypeCode = (contract.KeyContract is JsonPrimitiveContract) ? ((JsonPrimitiveContract)contract.KeyContract).TypeCode : PrimitiveTypeCode.Empty", span="1331-1331", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_661 [label="reader.TokenType", span="1336-1336", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_663 [label="object keyValue = reader.Value", span="1339-1339", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_664 [label="CheckPropertyName(reader, keyValue.ToString())", span="1340-1340", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_669 [label="DateTimeUtils.TryParseDateTime(keyValue.ToString(), reader.DateTimeZoneHandling, reader.DateFormatString, reader.Culture, out dt)", span="1356-1356", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_671 [label="keyValue = EnsureType(reader, keyValue, CultureInfo.InvariantCulture, contract.KeyContract, contract.DictionaryKeyType)", span="1362-1362", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_675 [label="DateTimeUtils.TryParseDateTimeOffset(keyValue.ToString(), reader.DateFormatString, reader.Culture, out dt)", span="1371-1371", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_677 [label="keyValue = EnsureType(reader, keyValue, CultureInfo.InvariantCulture, contract.KeyContract, contract.DictionaryKeyType)", span="1377-1377", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_678 [label="keyValue = EnsureType(reader, keyValue, CultureInfo.InvariantCulture, contract.KeyContract, contract.DictionaryKeyType)", span="1383-1383", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_680 [label="throw JsonSerializationException.Create(reader, ''Could not convert string '{0}' to dictionary key type '{1}'. Create a TypeConverter to convert from the string to the key type object.''.FormatWith(CultureInfo.InvariantCulture, reader.Value, contract.DictionaryKeyType), ex);", span="1389-1389", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_681 [label="!ReadForType(reader, contract.ItemContract, dictionaryValueConverter != null)", span="1392-1392", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_682 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="1394-1394", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_685 [label="itemValue = DeserializeConvertable(dictionaryValueConverter, reader, contract.DictionaryValueType, null)", span="1400-1400", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_686 [label="itemValue = CreateValueInternal(reader, contract.DictionaryValueType, contract.ItemContract, null, contract, containerProperty, null)", span="1404-1404", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_687 [label="dictionary[keyValue] = itemValue", span="1407-1407", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_689 [label="IsErrorHandled(underlyingDictionary, contract, keyValue, reader as IJsonLineInfo, reader.Path, ex)", span="1411-1411", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_690 [label="HandleError(reader, true, initialDepth)", span="1413-1413", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_695 [label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1427-1427", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_696 [label="!finished && reader.Read()", span="1429-1429", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_698 [label="ThrowUnexpectedEndException(reader, contract, underlyingDictionary, ''Unexpected end when deserializing object.'')", span="1433-1433", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_699 [label="OnDeserialized(reader, contract, underlyingDictionary)", span="1436-1436", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_700 [label="return underlyingDictionary;", span="1437-1437", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_684 [label="dictionaryValueConverter != null && dictionaryValueConverter.CanRead", span="1398-1398", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_660 [label="bool finished = false", span="1333-1333", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_665 [label=keyTypeCode, span="1350-1350", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_662 [label="JsonToken.PropertyName", span="1338-1338", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_692 [label="JsonToken.Comment", span="1421-1421", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_693 [label="JsonToken.EndObject", span="1423-1423", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_666 [label="PrimitiveTypeCode.DateTime", span="1352-1352", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_672 [label="PrimitiveTypeCode.DateTimeOffset", span="1367-1367", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_667 [label="PrimitiveTypeCode.DateTimeNullable", span="1353-1353", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_668 [label="DateTime dt", span="1355-1355", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_670 [label="keyValue = dt", span="1358-1358", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_673 [label="PrimitiveTypeCode.DateTimeOffsetNullable", span="1368-1368", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_674 [label="DateTimeOffset dt", span="1370-1370", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_676 [label="keyValue = dt", span="1373-1373", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_679 [label=Exception, span="1387-1387", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_683 [label="object itemValue", span="1397-1397", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_688 [label=Exception, span="1409-1409", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_691 [label="throw;", span="1417-1417", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_694 [label="finished = true", span="1424-1424", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_697 [label="!finished", span="1431-1431", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_701 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1306-1306", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JConstructor.cs"];
m10_762 [label="Entry System.Collections.IList.Add(object)", span="0-0", cluster="System.Collections.IList.Add(object)", file="JConstructor.cs"];
m10_1156 [label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57", cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="JConstructor.cs"];
m10_635 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="229-229", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JConstructor.cs"];
m10_1218 [label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", span="", file="JConstructor.cs"];
m10_1219 [label=property, span="", file="JConstructor.cs"];
m11_1 [label="Exit Newtonsoft.Json.Linq.JObject.JObject()", span="88-88", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JObject.cs"];
m11_177 [label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Linq.JToken>.ContainsKey(string)", span="546-546", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Linq.JToken>.ContainsKey(string)", file="JObject.cs"];
m11_178 [label="return _properties.Contains(key);", span="548-548", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Linq.JToken>.ContainsKey(string)", file="JObject.cs"];
m11_179 [label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Linq.JToken>.ContainsKey(string)", span="546-546", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.IDictionary<string, Newtonsoft.Json.Linq.JToken>.ContainsKey(string)", file="JObject.cs"];
m11_83 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="JObject.cs"];
m11_283 [label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()", span="809-809", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()", file="JObject.cs"];
m11_284 [label="return null;", span="811-811", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()", file="JObject.cs"];
m11_285 [label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()", span="809-809", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()", file="JObject.cs"];
m11_254 [label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties()", span="724-724", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties()", file="JObject.cs"];
m11_255 [label="return ((ICustomTypeDescriptor)this).GetProperties(null);", span="726-726", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties()", file="JObject.cs"];
m11_256 [label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties()", span="724-724", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties()", file="JObject.cs"];
m11_210 [label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", span="625-625", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JObject.cs"];
m11_211 [label="array == null", span="627-627", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JObject.cs"];
m11_212 [label="throw new ArgumentNullException(nameof(array));", span="629-629", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JObject.cs"];
m11_213 [label="arrayIndex < 0", span="631-631", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JObject.cs"];
m11_214 [label="throw new ArgumentOutOfRangeException(nameof(arrayIndex), ''arrayIndex is less than 0.'');", span="633-633", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JObject.cs"];
m11_215 [label="arrayIndex >= array.Length && arrayIndex != 0", span="635-635", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JObject.cs"];
m11_217 [label="Count > array.Length - arrayIndex", span="639-639", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JObject.cs"];
m11_221 [label="array[arrayIndex + index] = new KeyValuePair<string, JToken>(property.Name, property.Value)", span="647-647", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JObject.cs"];
m11_216 [label="throw new ArgumentException(''arrayIndex is equal to or greater than the length of array.'');", span="637-637", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JObject.cs"];
m11_218 [label="throw new ArgumentException(''The number of elements in the source JObject is greater than the available space from arrayIndex to the end of the destination array.'');", span="641-641", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JObject.cs"];
m11_219 [label="int index = 0", span="644-644", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JObject.cs"];
m11_220 [label=_properties, span="645-645", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JObject.cs"];
m11_222 [label="index++", span="648-648", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JObject.cs"];
m11_223 [label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", span="625-625", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.CopyTo(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>[], int)", file="JObject.cs"];
m11_200 [label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Clear()", span="609-609", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Clear()", file="JObject.cs"];
m11_201 [label="RemoveAll()", span="611-611", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Clear()", file="JObject.cs"];
m11_202 [label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Clear()", span="609-609", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Clear()", file="JObject.cs"];
m11_203 [label="Entry Newtonsoft.Json.Linq.JContainer.RemoveAll()", span="730-730", cluster="Newtonsoft.Json.Linq.JContainer.RemoveAll()", file="JObject.cs"];
m11_169 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="JObject.cs"];
m11_22 [label="Entry Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", span="378-378", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JObject.cs"];
m11_76 [label="Entry Newtonsoft.Json.Linq.JObject.OnPropertyChanging(string)", span="705-705", cluster="Newtonsoft.Json.Linq.JObject.OnPropertyChanging(string)", file="JObject.cs"];
m11_249 [label="PropertyChanging != null", span="707-707", cluster="Newtonsoft.Json.Linq.JObject.OnPropertyChanging(string)", file="JObject.cs"];
m11_250 [label="PropertyChanging(this, new PropertyChangingEventArgs(propertyName))", span="709-709", cluster="Newtonsoft.Json.Linq.JObject.OnPropertyChanging(string)", file="JObject.cs"];
m11_251 [label="Exit Newtonsoft.Json.Linq.JObject.OnPropertyChanging(string)", span="705-705", cluster="Newtonsoft.Json.Linq.JObject.OnPropertyChanging(string)", file="JObject.cs"];
m11_120 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="398-398", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JObject.cs"];
m11_121 [label="return Parse(json, null);", span="400-400", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JObject.cs"];
m11_122 [label="Exit Newtonsoft.Json.Linq.JObject.Parse(string)", span="398-398", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JObject.cs"];
m11_136 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="444-444", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JObject.cs"];
m11_137 [label="JToken token = FromObjectInternal(o, jsonSerializer)", span="446-446", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JObject.cs"];
m11_138 [label="token != null && token.Type != JTokenType.Object", span="448-448", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JObject.cs"];
m11_139 [label="throw new ArgumentException(''Object serialized to {0}. JObject instance expected.''.FormatWith(CultureInfo.InvariantCulture, token.Type));", span="450-450", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JObject.cs"];
m11_140 [label="return (JObject)token;", span="453-453", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JObject.cs"];
m11_141 [label="Exit Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="444-444", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JObject.cs"];
m11_180 [label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", span="75-75", cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Contains(string)", file="JObject.cs"];
m11_39 [label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="193-193", cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_235 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)", file="JObject.cs"];
m11_239 [label="Entry Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", span="893-893", cluster="Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", file="JObject.cs"];
m11_188 [label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="393-393", cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JObject.cs"];
m11_253 [label="Entry System.ComponentModel.PropertyChangingEventHandler.Invoke(object, System.ComponentModel.PropertyChangingEventArgs)", span="0-0", cluster="System.ComponentModel.PropertyChangingEventHandler.Invoke(object, System.ComponentModel.PropertyChangingEventArgs)", file="JObject.cs"];
m11_303 [label="Entry Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.TryGetMember(Newtonsoft.Json.Linq.JObject, System.Dynamic.GetMemberBinder, out object)", span="879-879", cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.TryGetMember(Newtonsoft.Json.Linq.JObject, System.Dynamic.GetMemberBinder, out object)", file="JObject.cs"];
m11_304 [label="result = instance[binder.Name]", span="882-882", cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.TryGetMember(Newtonsoft.Json.Linq.JObject, System.Dynamic.GetMemberBinder, out object)", file="JObject.cs"];
m11_305 [label="return true;", span="883-883", cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.TryGetMember(Newtonsoft.Json.Linq.JObject, System.Dynamic.GetMemberBinder, out object)", file="JObject.cs"];
m11_306 [label="Exit Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.TryGetMember(Newtonsoft.Json.Linq.JObject, System.Dynamic.GetMemberBinder, out object)", span="879-879", cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.TryGetMember(Newtonsoft.Json.Linq.JObject, System.Dynamic.GetMemberBinder, out object)", file="JObject.cs"];
m11_286 [label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)", span="821-821", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)", file="JObject.cs"];
m11_287 [label="return null;", span="823-823", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)", file="JObject.cs"];
m11_288 [label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)", span="821-821", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)", file="JObject.cs"];
m11_4 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="105-105", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JObject.cs"];
m11_5 [label="Exit Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="105-105", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JObject.cs"];
m11_292 [label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents()", span="844-844", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents()", file="JObject.cs"];
m11_293 [label="return EventDescriptorCollection.Empty;", span="846-846", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents()", file="JObject.cs"];
m11_294 [label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents()", span="844-844", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents()", file="JObject.cs"];
m11_35 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="58-58", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JObject.cs"];
m11_73 [label="Entry Newtonsoft.Json.Linq.JObject.InternalPropertyChanging(Newtonsoft.Json.Linq.JProperty)", span="223-223", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanging(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs"];
m11_74 [label="OnPropertyChanging(childProperty.Name)", span="226-226", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanging(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs"];
m11_75 [label="Exit Newtonsoft.Json.Linq.JObject.InternalPropertyChanging(Newtonsoft.Json.Linq.JProperty)", span="223-223", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanging(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs"];
m11_6 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="114-114", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JObject.cs"];
m11_7 [label="Add(content)", span="116-116", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JObject.cs"];
m11_8 [label="Exit Newtonsoft.Json.Linq.JObject.JObject(object)", span="114-114", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JObject.cs"];
m11_38 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JObject.cs"];
m11_298 [label="Entry Newtonsoft.Json.Linq.JObject.GetMetaObject(System.Linq.Expressions.Expression)", span="872-872", cluster="Newtonsoft.Json.Linq.JObject.GetMetaObject(System.Linq.Expressions.Expression)", file="JObject.cs"];
m11_299 [label="return new DynamicProxyMetaObject<JObject>(parameter, this, new JObjectDynamicProxy(), true);", span="874-874", cluster="Newtonsoft.Json.Linq.JObject.GetMetaObject(System.Linq.Expressions.Expression)", file="JObject.cs"];
m11_300 [label="Exit Newtonsoft.Json.Linq.JObject.GetMetaObject(System.Linq.Expressions.Expression)", span="872-872", cluster="Newtonsoft.Json.Linq.JObject.GetMetaObject(System.Linq.Expressions.Expression)", file="JObject.cs"];
m11_58 [label="Entry Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", span="541-541", cluster="Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_174 [label="Add(new JProperty(propertyName, value))", span="543-543", cluster="Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_175 [label="Exit Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", span="541-541", cluster="Newtonsoft.Json.Linq.JObject.Add(string, Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_98 [label="Entry Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", span="348-348", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JObject.cs"];
m11_99 [label="return Load(reader, null);", span="350-350", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JObject.cs"];
m11_100 [label="Exit Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", span="348-348", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JObject.cs"];
m11_101 [label="Entry Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="360-360", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_102 [label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="362-362", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_103 [label="reader.TokenType == JsonToken.None", span="364-364", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_104 [label="!reader.Read()", span="366-366", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_105 [label="throw JsonReaderException.Create(reader, ''Error reading JObject from JsonReader.'');", span="368-368", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_106 [label="reader.TokenType == JsonToken.Comment", span="372-372", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", color=red, community=0, file="JObject.cs"];
m11_107 [label="reader.Read()", span="374-374", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", color=red, community=0, file="JObject.cs"];
m11_108 [label="reader.TokenType != JsonToken.StartObject", span="377-377", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_109 [label="throw JsonReaderException.Create(reader, ''Error reading JObject from JsonReader. Current JsonReader item is not an object: {0}''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="379-379", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_111 [label="o.SetLineInfo(reader as IJsonLineInfo, settings)", span="383-383", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_112 [label="o.ReadTokenFrom(reader, settings)", span="385-385", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_110 [label="JObject o = new JObject()", span="382-382", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_113 [label="return o;", span="387-387", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_114 [label="Exit Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="360-360", cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_307 [label="Entry Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.TrySetMember(Newtonsoft.Json.Linq.JObject, System.Dynamic.SetMemberBinder, object)", span="886-886", cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.TrySetMember(Newtonsoft.Json.Linq.JObject, System.Dynamic.SetMemberBinder, object)", file="JObject.cs"];
m11_308 [label="JToken v = value as JToken", span="888-888", cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.TrySetMember(Newtonsoft.Json.Linq.JObject, System.Dynamic.SetMemberBinder, object)", file="JObject.cs"];
m11_310 [label="v = new JValue(value)", span="893-893", cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.TrySetMember(Newtonsoft.Json.Linq.JObject, System.Dynamic.SetMemberBinder, object)", file="JObject.cs"];
m11_311 [label="instance[binder.Name] = v", span="896-896", cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.TrySetMember(Newtonsoft.Json.Linq.JObject, System.Dynamic.SetMemberBinder, object)", file="JObject.cs"];
m11_309 [label="v == null", span="891-891", cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.TrySetMember(Newtonsoft.Json.Linq.JObject, System.Dynamic.SetMemberBinder, object)", file="JObject.cs"];
m11_312 [label="return true;", span="897-897", cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.TrySetMember(Newtonsoft.Json.Linq.JObject, System.Dynamic.SetMemberBinder, object)", file="JObject.cs"];
m11_313 [label="Exit Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.TrySetMember(Newtonsoft.Json.Linq.JObject, System.Dynamic.SetMemberBinder, object)", span="886-886", cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.TrySetMember(Newtonsoft.Json.Linq.JObject, System.Dynamic.SetMemberBinder, object)", file="JObject.cs"];
m11_234 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JObject.cs"];
m11_279 [label="Entry System.ComponentModel.TypeConverter.TypeConverter()", span="0-0", cluster="System.ComponentModel.TypeConverter.TypeConverter()", file="JObject.cs"];
m11_224 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JObject.cs"];
m11_181 [label="Entry Newtonsoft.Json.Linq.JObject.Remove(string)", span="562-562", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObject.cs"];
m11_182 [label="JProperty property = Property(propertyName)", span="564-564", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObject.cs"];
m11_183 [label="property == null", span="565-565", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObject.cs"];
m11_185 [label="property.Remove()", span="570-570", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObject.cs"];
m11_184 [label="return false;", span="567-567", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObject.cs"];
m11_186 [label="return true;", span="571-571", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObject.cs"];
m11_187 [label="Exit Newtonsoft.Json.Linq.JObject.Remove(string)", span="562-562", cluster="Newtonsoft.Json.Linq.JObject.Remove(string)", file="JObject.cs"];
m11_68 [label="Entry System.ComponentModel.ListChangedEventArgs.ListChangedEventArgs(System.ComponentModel.ListChangedType, int)", span="0-0", cluster="System.ComponentModel.ListChangedEventArgs.ListChangedEventArgs(System.ComponentModel.ListChangedType, int)", file="JObject.cs"];
m11_247 [label="Entry System.ComponentModel.PropertyChangedEventArgs.PropertyChangedEventArgs(string)", span="0-0", cluster="System.ComponentModel.PropertyChangedEventArgs.PropertyChangedEventArgs(string)", file="JObject.cs"];
m11_118 [label="Entry Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", span="2234-2234", cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_176 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="321-321", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JObject.cs"];
m11_225 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JObject.cs"];
m11_301 [label="Entry Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", span="40-40", cluster="Newtonsoft.Json.Utilities.DynamicProxyMetaObject<T>.DynamicProxyMetaObject(System.Linq.Expressions.Expression, T, Newtonsoft.Json.Utilities.DynamicProxy<T>, bool)", file="JObject.cs"];
m11_170 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="529-529", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_171 [label="value = GetValue(propertyName, comparison)", span="531-531", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_172 [label="return (value != null);", span="532-532", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_173 [label="Exit Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="529-529", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_93 [label="Entry JEnumerable<JToken>.cstr", span="", cluster="JEnumerable<JToken>.cstr", file="JObject.cs"];
m11_40 [label="Entry Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="168-168", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_41 [label="JObject o = content as JObject", span="170-170", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_55 [label="existingContainer.Merge(contentItem.Value, settings)", span="200-200", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_42 [label="o == null", span="171-171", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_44 [label=o, span="176-176", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_43 [label="return;", span="173-173", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_45 [label="JProperty existingProperty = Property(contentItem.Key)", span="178-178", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_46 [label="existingProperty == null", span="180-180", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_47 [label="Add(contentItem.Key, contentItem.Value)", span="182-182", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_48 [label="contentItem.Value != null", span="184-184", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_49 [label="JContainer existingContainer = existingProperty.Value as JContainer", span="186-186", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_52 [label="existingProperty.Value = contentItem.Value", span="191-191", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_54 [label="existingProperty.Value = contentItem.Value", span="196-196", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_51 [label="contentItem.Value.Type != JTokenType.Null", span="189-189", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_53 [label="existingContainer.Type != contentItem.Value.Type", span="194-194", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_50 [label="existingContainer == null", span="187-187", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_56 [label="Exit Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="168-168", cluster="Newtonsoft.Json.Linq.JObject.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_17 [label="Entry Newtonsoft.Json.Linq.JObject.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", span="130-130", cluster="Newtonsoft.Json.Linq.JObject.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JObject.cs"];
m11_18 [label="item != null && item.Type == JTokenType.Comment", span="133-133", cluster="Newtonsoft.Json.Linq.JObject.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JObject.cs"];
m11_20 [label="base.InsertItem(index, item, skipParentCheck)", span="138-138", cluster="Newtonsoft.Json.Linq.JObject.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JObject.cs"];
m11_19 [label="return;", span="135-135", cluster="Newtonsoft.Json.Linq.JObject.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JObject.cs"];
m11_21 [label="Exit Newtonsoft.Json.Linq.JObject.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", span="130-130", cluster="Newtonsoft.Json.Linq.JObject.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JObject.cs"];
m11_130 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JObject.cs"];
m11_302 [label="Entry Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.JObjectDynamicProxy()", span="877-877", cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.JObjectDynamicProxy()", file="JObject.cs"];
m11_2 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(Newtonsoft.Json.Linq.JObject)", span="96-96", cluster="Newtonsoft.Json.Linq.JObject.JObject(Newtonsoft.Json.Linq.JObject)", file="JObject.cs"];
m11_3 [label="Exit Newtonsoft.Json.Linq.JObject.JObject(Newtonsoft.Json.Linq.JObject)", span="96-96", cluster="Newtonsoft.Json.Linq.JObject.JObject(Newtonsoft.Json.Linq.JObject)", file="JObject.cs"];
m11_142 [label="Entry Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", span="1888-1888", cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JObject.cs"];
m11_72 [label="Entry Newtonsoft.Json.Linq.JContainer.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="175-175", cluster="Newtonsoft.Json.Linq.JContainer.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="JObject.cs"];
m11_117 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JObject.cs"];
m11_94 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JObject.cs"];
m11_80 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="248-248", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JObject.cs"];
m11_81 [label="return _properties.Cast<JProperty>();", span="250-250", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JObject.cs"];
m11_82 [label="Exit Newtonsoft.Json.Linq.JObject.Properties()", span="248-248", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JObject.cs"];
m11_314 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="190-190", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JObject.cs"];
m11_115 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409", cluster="Newtonsoft.Json.JsonReader.Read()", file="JObject.cs"];
m11_273 [label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetComponentName()", span="776-776", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetComponentName()", file="JObject.cs"];
m11_274 [label="return null;", span="778-778", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetComponentName()", file="JObject.cs"];
m11_275 [label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetComponentName()", span="776-776", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetComponentName()", file="JObject.cs"];
m11_69 [label="Entry Newtonsoft.Json.Linq.JContainer.IndexOfItem(Newtonsoft.Json.Linq.JToken)", span="373-373", cluster="Newtonsoft.Json.Linq.JContainer.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_252 [label="Entry System.ComponentModel.PropertyChangingEventArgs.PropertyChangingEventArgs(string)", span="0-0", cluster="System.ComponentModel.PropertyChangingEventArgs.PropertyChangingEventArgs(string)", file="JObject.cs"];
m11_36 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="JObject.cs"];
m11_135 [label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="539-539", cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JObject.cs"];
m11_157 [label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="491-491", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs"];
m11_158 [label="propertyName == null", span="493-493", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs"];
m11_160 [label="JProperty property = Property(propertyName)", span="499-499", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs"];
m11_163 [label="comparison != StringComparison.Ordinal", span="506-506", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs"];
m11_165 [label="string.Equals(p.Name, propertyName, comparison)", span="510-510", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs"];
m11_159 [label="return null;", span="495-495", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs"];
m11_161 [label="property != null", span="500-500", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs"];
m11_162 [label="return property.Value;", span="502-502", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs"];
m11_164 [label=_properties, span="508-508", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs"];
m11_167 [label="return null;", span="517-517", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs"];
m11_166 [label="return p.Value;", span="512-512", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs"];
m11_168 [label="Exit Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="491-491", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JObject.cs"];
m11_119 [label="Entry Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="756-756", cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_226 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JObject.cs"];
m11_132 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="433-433", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JObject.cs"];
m11_133 [label="return FromObject(o, JsonSerializer.CreateDefault());", span="435-435", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JObject.cs"];
m11_134 [label="Exit Newtonsoft.Json.Linq.JObject.FromObject(object)", span="433-433", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JObject.cs"];
m11_280 [label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()", span="798-798", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()", file="JObject.cs"];
m11_281 [label="return null;", span="800-800", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()", file="JObject.cs"];
m11_282 [label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()", span="798-798", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()", file="JObject.cs"];
m11_204 [label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="614-614", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs"];
m11_205 [label="JProperty property = Property(item.Key)", span="616-616", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs"];
m11_206 [label="property == null", span="617-617", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs"];
m11_208 [label="return (property.Value == item.Value);", span="622-622", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs"];
m11_207 [label="return false;", span="619-619", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs"];
m11_209 [label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="614-614", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Contains(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs"];
m11_267 [label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetAttributes()", span="754-754", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetAttributes()", file="JObject.cs"];
m11_268 [label="return AttributeCollection.Empty;", span="756-756", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetAttributes()", file="JObject.cs"];
m11_269 [label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetAttributes()", span="754-754", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetAttributes()", file="JObject.cs"];
m11_315 [label="Entry Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.GetDynamicMemberNames(Newtonsoft.Json.Linq.JObject)", span="900-900", cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.GetDynamicMemberNames(Newtonsoft.Json.Linq.JObject)", file="JObject.cs"];
m11_316 [label="return instance.Properties().Select(p => p.Name);", span="902-902", cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.GetDynamicMemberNames(Newtonsoft.Json.Linq.JObject)", file="JObject.cs"];
m11_317 [label="Exit Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.GetDynamicMemberNames(Newtonsoft.Json.Linq.JObject)", span="900-900", cluster="Newtonsoft.Json.Linq.JObject.JObjectDynamicProxy.GetDynamicMemberNames(Newtonsoft.Json.Linq.JObject)", file="JObject.cs"];
m11_77 [label="Entry Newtonsoft.Json.Linq.JObject.CloneToken()", span="230-230", cluster="Newtonsoft.Json.Linq.JObject.CloneToken()", file="JObject.cs"];
m11_78 [label="return new JObject(this);", span="232-232", cluster="Newtonsoft.Json.Linq.JObject.CloneToken()", file="JObject.cs"];
m11_79 [label="Exit Newtonsoft.Json.Linq.JObject.CloneToken()", span="230-230", cluster="Newtonsoft.Json.Linq.JObject.CloneToken()", file="JObject.cs"];
m11_270 [label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetClassName()", span="765-765", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetClassName()", file="JObject.cs"];
m11_271 [label="return null;", span="767-767", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetClassName()", file="JObject.cs"];
m11_272 [label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetClassName()", span="765-765", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetClassName()", file="JObject.cs"];
m11_123 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", span="413-413", cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_124 [label="JsonReader reader = new JsonTextReader(new StringReader(json))", span="415-415", cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_125 [label="JObject o = Load(reader, settings)", span="417-417", cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_126 [label="reader.Read() && reader.TokenType != JsonToken.Comment", span="419-419", cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_127 [label="throw JsonReaderException.Create(reader, ''Additional text found in JSON string after parsing content.'');", span="421-421", cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_128 [label="return o;", span="424-424", cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_129 [label="Exit Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", span="413-413", cluster="Newtonsoft.Json.Linq.JObject.Parse(string, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JObject.cs"];
m11_189 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="580-580", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_190 [label="JProperty property = Property(propertyName)", span="582-582", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_191 [label="property == null", span="583-583", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_194 [label="value = property.Value", span="589-589", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_192 [label="value = null", span="585-585", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_193 [label="return false;", span="586-586", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_195 [label="return true;", span="590-590", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_196 [label="Exit Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", span="580-580", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, out Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_154 [label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string)", span="478-478", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string)", file="JObject.cs"];
m11_155 [label="return GetValue(propertyName, StringComparison.Ordinal);", span="480-480", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string)", file="JObject.cs"];
m11_156 [label="Exit Newtonsoft.Json.Linq.JObject.GetValue(string)", span="478-478", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string)", file="JObject.cs"];
m11_116 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JObject.cs"];
m11_289 [label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])", span="833-833", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])", file="JObject.cs"];
m11_290 [label="return EventDescriptorCollection.Empty;", span="835-835", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])", file="JObject.cs"];
m11_291 [label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])", span="833-833", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])", file="JObject.cs"];
m11_16 [label="Entry Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", span="222-222", cluster="Newtonsoft.Json.Linq.JPropertyKeyedCollection.Compare(Newtonsoft.Json.Linq.JPropertyKeyedCollection)", file="JObject.cs"];
m11_318 [label="Entry lambda expression", span="902-902", cluster="lambda expression", file="JObject.cs"];
m11_95 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="JObject.cs"];
m11_96 [label="p.Value", span="276-276", cluster="lambda expression", file="JObject.cs"];
m11_97 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="JObject.cs"];
m11_319 [label="p.Name", span="902-902", cluster="lambda expression", file="JObject.cs"];
m11_320 [label="Exit lambda expression", span="902-902", cluster="lambda expression", file="JObject.cs"];
m11_23 [label="Entry Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="141-141", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_24 [label="ValidationUtils.ArgumentNotNull(o, ''o'')", span="143-143", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_25 [label="o.Type != JTokenType.Property", span="145-145", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_26 [label="throw new ArgumentException(''Can not add {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, o.GetType(), GetType()));", span="147-147", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_27 [label="JProperty newProperty = (JProperty)o", span="150-150", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_28 [label="existing != null", span="152-152", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_29 [label="JProperty existingProperty = (JProperty)existing", span="154-154", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_30 [label="newProperty.Name == existingProperty.Name", span="156-156", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_32 [label="_properties.TryGetValue(newProperty.Name, out existing)", span="162-162", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_33 [label="throw new ArgumentException(''Can not add property {0} to {1}. Property with the same name already exists on object.''.FormatWith(CultureInfo.InvariantCulture, newProperty.Name, GetType()));", span="164-164", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_31 [label="return;", span="158-158", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_34 [label="Exit Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="141-141", cluster="Newtonsoft.Json.Linq.JObject.ValidateToken(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_37 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JObject.cs"];
m11_10 [label="Entry Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="119-119", cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_11 [label="JObject t = node as JObject", span="121-121", cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_12 [label="t == null", span="122-122", cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_14 [label="return _properties.Compare(t._properties);", span="127-127", cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_13 [label="return false;", span="124-124", cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_15 [label="Exit Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="119-119", cluster="Newtonsoft.Json.Linq.JObject.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JObject.cs"];
m11_151 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JObject.cs"];
m11_131 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JObject.cs"];
m11_295 [label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)", span="856-856", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)", file="JObject.cs"];
m11_296 [label="return null;", span="858-858", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)", file="JObject.cs"];
m11_297 [label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)", span="856-856", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)", file="JObject.cs"];
m11_59 [label="Entry Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="751-751", cluster="Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JObject.cs"];
m11_236 [label="Entry Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", span="669-669", cluster="Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", file="JObject.cs"];
m11_237 [label="return ContentsHashCode();", span="671-671", cluster="Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", file="JObject.cs"];
m11_238 [label="Exit Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", span="669-669", cluster="Newtonsoft.Json.Linq.JObject.GetDeepHashCode()", file="JObject.cs"];
m11_258 [label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", span="736-736", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", file="JObject.cs"];
m11_259 [label="PropertyDescriptorCollection descriptors = new PropertyDescriptorCollection(null)", span="738-738", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", file="JObject.cs"];
m11_260 [label=this, span="740-740", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", file="JObject.cs"];
m11_261 [label="descriptors.Add(new JPropertyDescriptor(propertyValue.Key))", span="742-742", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", file="JObject.cs"];
m11_262 [label="return descriptors;", span="745-745", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", file="JObject.cs"];
m11_263 [label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", span="736-736", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", file="JObject.cs"];
m11_57 [label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="258-258", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JObject.cs"];
m11_84 [label="name == null", span="260-260", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JObject.cs"];
m11_87 [label="_properties.TryGetValue(name, out property)", span="266-266", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JObject.cs"];
m11_85 [label="return null;", span="262-262", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JObject.cs"];
m11_86 [label="JToken property", span="265-265", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JObject.cs"];
m11_88 [label="return (JProperty)property;", span="267-267", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JObject.cs"];
m11_89 [label="Exit Newtonsoft.Json.Linq.JObject.Property(string)", span="258-258", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JObject.cs"];
m11_276 [label="Entry Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetConverter()", span="787-787", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetConverter()", file="JObject.cs"];
m11_277 [label="return new TypeConverter();", span="789-789", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetConverter()", file="JObject.cs"];
m11_278 [label="Exit Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetConverter()", span="787-787", cluster="Newtonsoft.Json.Linq.JObject.System.ComponentModel.ICustomTypeDescriptor.GetConverter()", file="JObject.cs"];
m11_240 [label="Entry Newtonsoft.Json.Linq.JObject.GetEnumerator()", span="680-680", cluster="Newtonsoft.Json.Linq.JObject.GetEnumerator()", file="JObject.cs"];
m11_241 [label=_properties, span="682-682", cluster="Newtonsoft.Json.Linq.JObject.GetEnumerator()", file="JObject.cs"];
m11_242 [label="yield return new KeyValuePair<string, JToken>(property.Name, property.Value);", span="684-684", cluster="Newtonsoft.Json.Linq.JObject.GetEnumerator()", file="JObject.cs"];
m11_243 [label="Exit Newtonsoft.Json.Linq.JObject.GetEnumerator()", span="680-680", cluster="Newtonsoft.Json.Linq.JObject.GetEnumerator()", file="JObject.cs"];
m11_265 [label="Entry Newtonsoft.Json.Linq.JPropertyDescriptor.JPropertyDescriptor(string)", span="40-40", cluster="Newtonsoft.Json.Linq.JPropertyDescriptor.JPropertyDescriptor(string)", file="JObject.cs"];
m11_153 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JObject.cs"];
m11_71 [label="Entry System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.IList, System.Collections.IList, int)", span="0-0", cluster="System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.IList, System.Collections.IList, int)", file="JObject.cs"];
m11_227 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JObject.cs"];
m11_257 [label="Entry System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", span="0-0", cluster="System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])", file="JObject.cs"];
m11_266 [label="Entry System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)", span="0-0", cluster="System.ComponentModel.PropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)", file="JObject.cs"];
m11_9 [label="Entry Newtonsoft.Json.Linq.JContainer.Add(object)", span="658-658", cluster="Newtonsoft.Json.Linq.JContainer.Add(object)", file="JObject.cs"];
m11_67 [label="Entry Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", span="692-692", cluster="Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", file="JObject.cs"];
m11_244 [label="PropertyChanged != null", span="694-694", cluster="Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", file="JObject.cs"];
m11_245 [label="PropertyChanged(this, new PropertyChangedEventArgs(propertyName))", span="696-696", cluster="Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", file="JObject.cs"];
m11_246 [label="Exit Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", span="692-692", cluster="Newtonsoft.Json.Linq.JObject.OnPropertyChanged(string)", file="JObject.cs"];
m11_197 [label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="604-604", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs"];
m11_198 [label="Add(new JProperty(item.Key, item.Value))", span="606-606", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs"];
m11_199 [label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="604-604", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Add(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs"];
m11_152 [label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="422-422", cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs"];
m11_143 [label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="461-461", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs"];
m11_144 [label="writer.WriteStartObject()", span="463-463", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs"];
m11_147 [label="_properties[i].WriteTo(writer, converters)", span="467-467", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs"];
m11_149 [label="writer.WriteEndObject()", span="470-470", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs"];
m11_145 [label="int i = 0", span="465-465", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs"];
m11_146 [label="i < _properties.Count", span="465-465", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs"];
m11_148 [label="i++", span="465-465", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs"];
m11_150 [label="Exit Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="461-461", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JObject.cs"];
m11_60 [label="Entry Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", span="206-206", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs"];
m11_61 [label="OnPropertyChanged(childProperty.Name)", span="208-208", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs"];
m11_63 [label="OnListChanged(new ListChangedEventArgs(ListChangedType.ItemChanged, IndexOfItem(childProperty)))", span="212-212", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs"];
m11_65 [label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Replace, childProperty, childProperty, IndexOfItem(childProperty)))", span="218-218", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs"];
m11_62 [label="_listChanged != null", span="210-210", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs"];
m11_64 [label="_collectionChanged != null", span="216-216", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs"];
m11_66 [label="Exit Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", span="206-206", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JObject.cs"];
m11_228 [label="Entry Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="657-657", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs"];
m11_229 [label="!((ICollection<KeyValuePair<string, JToken>>)this).Contains(item)", span="659-659", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs"];
m11_231 [label="((IDictionary<string, JToken>)this).Remove(item.Key)", span="664-664", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs"];
m11_230 [label="return false;", span="661-661", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs"];
m11_232 [label="return true;", span="665-665", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs"];
m11_233 [label="Exit Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", span="657-657", cluster="Newtonsoft.Json.Linq.JObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>>.Remove(System.Collections.Generic.KeyValuePair<string, Newtonsoft.Json.Linq.JToken>)", file="JObject.cs"];
m11_264 [label="Entry System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(System.ComponentModel.PropertyDescriptor[])", span="0-0", cluster="System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorCollection(System.ComponentModel.PropertyDescriptor[])", file="JObject.cs"];
m11_70 [label="Entry Newtonsoft.Json.Linq.JContainer.OnListChanged(System.ComponentModel.ListChangedEventArgs)", span="152-152", cluster="Newtonsoft.Json.Linq.JContainer.OnListChanged(System.ComponentModel.ListChangedEventArgs)", file="JObject.cs"];
m11_90 [label="Entry Newtonsoft.Json.Linq.JObject.PropertyValues()", span="274-274", cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="JObject.cs"];
m11_91 [label="return new JEnumerable<JToken>(Properties().Select(p => p.Value));", span="276-276", cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="JObject.cs"];
m11_92 [label="Exit Newtonsoft.Json.Linq.JObject.PropertyValues()", span="274-274", cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="JObject.cs"];
m11_248 [label="Entry System.ComponentModel.PropertyChangedEventHandler.Invoke(object, System.ComponentModel.PropertyChangedEventArgs)", span="0-0", cluster="System.ComponentModel.PropertyChangedEventHandler.Invoke(object, System.ComponentModel.PropertyChangedEventArgs)", file="JObject.cs"];
m11_321 [label="Newtonsoft.Json.Linq.JObject", span="", file="JObject.cs"];
m13_4 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="JsonObjectContract.cs"];
m13_12 [label="Entry System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)", span="0-0", cluster="System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)", file="JsonObjectContract.cs"];
m13_0 [label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="202-202", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs"];
m13_1 [label="ContractType = JsonContractType.Object", span="205-205", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs"];
m13_2 [label="Properties = new JsonPropertyCollection(UnderlyingType)", span="207-207", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs"];
m13_3 [label="Exit Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="202-202", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs"];
m13_5 [label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", span="214-214", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", file="JsonObjectContract.cs"];
m13_6 [label="!JsonTypeReflector.FullyTrusted", span="217-217", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", file="JsonObjectContract.cs"];
m13_7 [label="throw new JsonException(''Insufficient permissions. Creating an uninitialized '{0}' type requires full trust.''.FormatWith(CultureInfo.InvariantCulture, NonNullableUnderlyingType));", span="219-219", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", file="JsonObjectContract.cs"];
m13_8 [label="return FormatterServices.GetUninitializedObject(NonNullableUnderlyingType);", span="222-222", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", file="JsonObjectContract.cs"];
m13_9 [label="Exit Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", span="214-214", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.GetUninitializedObject()", file="JsonObjectContract.cs"];
m13_11 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonObjectContract.cs"];
m13_13 [label="Newtonsoft.Json.Serialization.JsonObjectContract", span="", file="JsonObjectContract.cs"];
m14_76 [label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38", cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonPosition.cs"];
m14_38 [label="Entry System.Text.StringBuilder.Append(int)", span="0-0", cluster="System.Text.StringBuilder.Append(int)", file="JsonPosition.cs"];
m14_36 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="JsonPosition.cs"];
m14_35 [label="Entry string.IndexOfAny(char[])", span="0-0", cluster="string.IndexOfAny(char[])", file="JsonPosition.cs"];
m14_0 [label="Entry Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", span="50-50", cluster="Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", file="JsonPosition.cs"];
m14_1 [label="Type = type", span="52-52", cluster="Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", file="JsonPosition.cs"];
m14_2 [label="HasIndex = TypeHasIndex(type)", span="53-53", cluster="Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", file="JsonPosition.cs"];
m14_3 [label="Position = -1", span="54-54", cluster="Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", file="JsonPosition.cs"];
m14_4 [label="PropertyName = null", span="55-55", cluster="Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", file="JsonPosition.cs"];
m14_5 [label="Exit Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", span="50-50", cluster="Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", file="JsonPosition.cs"];
m14_58 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="JsonPosition.cs"];
m14_72 [label="Entry string.EndsWith(string, System.StringComparison)", span="0-0", cluster="string.EndsWith(string, System.StringComparison)", file="JsonPosition.cs"];
m14_59 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JsonPosition.cs"];
m14_7 [label="Entry Newtonsoft.Json.JsonPosition.CalculateLength()", span="58-58", cluster="Newtonsoft.Json.JsonPosition.CalculateLength()", file="JsonPosition.cs"];
m14_8 [label=Type, span="60-60", cluster="Newtonsoft.Json.JsonPosition.CalculateLength()", file="JsonPosition.cs"];
m14_9 [label="JsonContainerType.Object", span="62-62", cluster="Newtonsoft.Json.JsonPosition.CalculateLength()", file="JsonPosition.cs"];
m14_11 [label="JsonContainerType.Array", span="64-64", cluster="Newtonsoft.Json.JsonPosition.CalculateLength()", file="JsonPosition.cs"];
m14_14 [label="throw new ArgumentOutOfRangeException(''Type'');", span="68-68", cluster="Newtonsoft.Json.JsonPosition.CalculateLength()", file="JsonPosition.cs"];
m14_10 [label="return PropertyName.Length + 5;", span="63-63", cluster="Newtonsoft.Json.JsonPosition.CalculateLength()", file="JsonPosition.cs"];
m14_12 [label="JsonContainerType.Constructor", span="65-65", cluster="Newtonsoft.Json.JsonPosition.CalculateLength()", file="JsonPosition.cs"];
m14_13 [label="return MathUtils.IntLength((ulong)Position) + 2;", span="66-66", cluster="Newtonsoft.Json.JsonPosition.CalculateLength()", file="JsonPosition.cs"];
m14_15 [label="Exit Newtonsoft.Json.JsonPosition.CalculateLength()", span="58-58", cluster="Newtonsoft.Json.JsonPosition.CalculateLength()", file="JsonPosition.cs"];
m14_41 [label="Entry Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", span="108-108", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", file="JsonPosition.cs"];
m14_42 [label="int capacity = 0", span="110-110", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", file="JsonPosition.cs"];
m14_43 [label="positions != null", span="111-111", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", file="JsonPosition.cs"];
m14_45 [label="i < positions.Count", span="113-113", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", file="JsonPosition.cs"];
m14_46 [label="capacity += positions[i].CalculateLength()", span="115-115", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", file="JsonPosition.cs"];
m14_48 [label="currentPosition != null", span="118-118", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", file="JsonPosition.cs"];
m14_49 [label="capacity += currentPosition.Value.CalculateLength()", span="120-120", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", color=red, community=0, file="JsonPosition.cs"];
m14_51 [label="positions != null", span="124-124", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", file="JsonPosition.cs"];
m14_52 [label=positions, span="126-126", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", file="JsonPosition.cs"];
m14_54 [label="currentPosition != null", span="131-131", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", file="JsonPosition.cs"];
m14_55 [label="currentPosition.Value.WriteTo(sb)", span="133-133", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", color=red, community=0, file="JsonPosition.cs"];
m14_50 [label="StringBuilder sb = new StringBuilder(capacity)", span="123-123", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", file="JsonPosition.cs"];
m14_44 [label="int i = 0", span="113-113", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", file="JsonPosition.cs"];
m14_47 [label="i++", span="113-113", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", file="JsonPosition.cs"];
m14_53 [label="state.WriteTo(sb)", span="128-128", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", file="JsonPosition.cs"];
m14_56 [label="return sb.ToString();", span="136-136", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", file="JsonPosition.cs"];
m14_57 [label="Exit Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", span="108-108", cluster="Newtonsoft.Json.JsonPosition.BuildPath(System.Collections.Generic.List<Newtonsoft.Json.JsonPosition>, Newtonsoft.Json.JsonPosition?)", file="JsonPosition.cs"];
m14_73 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="JsonPosition.cs"];
m14_37 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="JsonPosition.cs"];
m14_77 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonPosition.cs"];
m14_17 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="JsonPosition.cs"];
m14_18 [label="Entry Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", span="72-72", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_19 [label=Type, span="74-74", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_23 [label="sb.Append(@''[''')", span="80-80", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_24 [label="sb.Append(propertyName)", span="81-81", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_25 [label="sb.Append(@''']'')", span="82-82", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_26 [label="sb.Length > 0", span="86-86", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_27 [label="sb.Append('.')", span="88-88", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_28 [label="sb.Append(propertyName)", span="91-91", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_31 [label="sb.Append('[')", span="96-96", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_32 [label="sb.Append(Position)", span="97-97", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_33 [label="sb.Append(']')", span="98-98", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_20 [label="JsonContainerType.Object", span="76-76", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_29 [label="JsonContainerType.Array", span="94-94", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_21 [label="string propertyName = PropertyName", span="77-77", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_22 [label="propertyName.IndexOfAny(SpecialCharacters) != -1", span="78-78", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_30 [label="JsonContainerType.Constructor", span="95-95", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_34 [label="Exit Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", span="72-72", cluster="Newtonsoft.Json.JsonPosition.WriteTo(System.Text.StringBuilder)", file="JsonPosition.cs"];
m14_74 [label="Entry string.EndsWith(char)", span="225-225", cluster="string.EndsWith(char)", file="JsonPosition.cs"];
m14_60 [label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonPosition.cs"];
m14_61 [label="!message.EndsWith(Environment.NewLine, StringComparison.Ordinal)", span="142-142", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonPosition.cs"];
m14_62 [label="message = message.Trim()", span="144-144", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonPosition.cs"];
m14_66 [label="message += ''Path '{0}'''.FormatWith(CultureInfo.InvariantCulture, path)", span="154-154", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonPosition.cs"];
m14_67 [label="lineInfo != null && lineInfo.HasLineInfo()", span="156-156", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonPosition.cs"];
m14_68 [label="message += '', line {0}, position {1}''.FormatWith(CultureInfo.InvariantCulture, lineInfo.LineNumber, lineInfo.LinePosition)", span="158-158", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonPosition.cs"];
m14_63 [label="!message.EndsWith('.')", span="146-146", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonPosition.cs"];
m14_64 [label="message += ''.''", span="148-148", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonPosition.cs"];
m14_65 [label="message += '' ''", span="151-151", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonPosition.cs"];
m14_69 [label="message += ''.''", span="161-161", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonPosition.cs"];
m14_70 [label="return message;", span="163-163", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonPosition.cs"];
m14_71 [label="Exit Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonPosition.cs"];
m14_16 [label="Entry Newtonsoft.Json.Utilities.MathUtils.IntLength(ulong)", span="33-33", cluster="Newtonsoft.Json.Utilities.MathUtils.IntLength(ulong)", file="JsonPosition.cs"];
m14_6 [label="Entry Newtonsoft.Json.JsonPosition.TypeHasIndex(Newtonsoft.Json.JsonContainerType)", span="103-103", cluster="Newtonsoft.Json.JsonPosition.TypeHasIndex(Newtonsoft.Json.JsonContainerType)", file="JsonPosition.cs"];
m14_39 [label="return (type == JsonContainerType.Array || type == JsonContainerType.Constructor);", span="105-105", cluster="Newtonsoft.Json.JsonPosition.TypeHasIndex(Newtonsoft.Json.JsonContainerType)", file="JsonPosition.cs"];
m14_40 [label="Exit Newtonsoft.Json.JsonPosition.TypeHasIndex(Newtonsoft.Json.JsonContainerType)", span="103-103", cluster="Newtonsoft.Json.JsonPosition.TypeHasIndex(Newtonsoft.Json.JsonContainerType)", file="JsonPosition.cs"];
m14_78 [label="out Newtonsoft.Json.JsonPosition", span="", file="JsonPosition.cs"];
m14_79 [label="Newtonsoft.Json.JsonPosition", span="", file="JsonPosition.cs"];
m15_890 [label="Entry char.ToString()", span="0-0", cluster="char.ToString()", file="JsonReader.cs"];
m15_85 [label="p == null", span="266-266", cluster="Newtonsoft.Json.Linq.JProperty.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JsonReader.cs"];
m15_98 [label="Entry Newtonsoft.Json.Linq.JProperty.CloneToken()", span="288-288", cluster="Newtonsoft.Json.Linq.JProperty.CloneToken()", file="JsonReader.cs"];
m15_219 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", span="323-323", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonReader.cs"];
m15_221 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="326-326", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonReader.cs"];
m15_228 [label="Assert.AreEqual(expected, json)", span="338-338", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonReader.cs"];
m15_225 [label="jsonWriter.WriteEndArray()", span="332-332", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonReader.cs"];
m15_220 [label="StringWriter sw = new StringWriter()", span="325-325", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonReader.cs"];
m15_222 [label="char? value = 'c'", span="328-328", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonReader.cs"];
m15_223 [label="jsonWriter.WriteStartArray()", span="330-330", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonReader.cs"];
m15_224 [label="jsonWriter.WriteValue((object)value)", span="331-331", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonReader.cs"];
m15_226 [label="string json = sw.ToString()", span="335-335", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonReader.cs"];
m15_227 [label="string expected = @''[''''c'''']''", span="336-336", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonReader.cs"];
m15_229 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", span="323-323", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonReader.cs"];
m15_30 [label="index == 0", span="107-107", cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_84 [label="JProperty p = content as JProperty", span="265-265", cluster="Newtonsoft.Json.Linq.JProperty.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JsonReader.cs"];
m15_211 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", span="1125-1125", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="JsonReader.cs"];
m15_114 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonReader.cs"];
m15_135 [label="jsonWriter.WriteValue(10)", span="249-249", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_136 [label="jsonWriter.WriteValue(10.99)", span="250-250", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_137 [label="jsonWriter.WriteValue(0.99)", span="251-251", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_138 [label="jsonWriter.WriteValue(0.000000000000000001d)", span="252-252", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_139 [label="jsonWriter.WriteValue(0.000000000000000001m)", span="253-253", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_140 [label="jsonWriter.WriteValue((string)null)", span="254-254", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_141 [label="jsonWriter.WriteValue((object)null)", span="255-255", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_142 [label="jsonWriter.WriteValue(''This is a string.'')", span="256-256", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_143 [label="jsonWriter.WriteNull()", span="257-257", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_144 [label="jsonWriter.WriteUndefined()", span="258-258", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_145 [label="jsonWriter.WriteEndArray()", span="259-259", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_146 [label="string expected = @''[''''@'''',''''\r\n\t\f\b?{\\r\\n\''''''''',true,10,10.99,0.99,1E-18,0.000000000000000001,null,null,''''This is a string.'''',null,undefined]''", span="262-262", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_502 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonReader.cs"];
m15_97 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", span="190-190", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonReader.cs"];
m15_956 [label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0", cluster="System.IO.TextWriter.Write(char[], int, int)", file="JsonReader.cs"];
m15_303 [label="Entry Newtonsoft.Json.JsonWriter.Close()", span="398-398", cluster="Newtonsoft.Json.JsonWriter.Close()", file="JsonReader.cs"];
m15_151 [label="Entry Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", span="734-734", cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Linq.JsonLoadSettings)", file="JsonReader.cs"];
m15_79 [label="Assert.AreEqual(@''{'' + '\n' + @''  ''''prop'''': true'' + '\n' + ''}'', json)", span="186-186", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonReader.cs"];
m15_83 [label="Entry Newtonsoft.Json.Linq.JProperty.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="263-263", cluster="Newtonsoft.Json.Linq.JProperty.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JsonReader.cs"];
m15_518 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="895-895", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonReader.cs"];
m15_875 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonReader.cs"];
m15_991 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="573-573", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonReader.cs"];
m15_115 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91", cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JsonReader.cs"];
m15_217 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", span="1304-1304", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="JsonReader.cs"];
m15_156 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="1028-1028", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonReader.cs"];
m15_304 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", span="458-458", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonReader.cs"];
m15_306 [label="StringWriter sw = new StringWriter(sb)", span="461-461", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_305 [label="StringBuilder sb = new StringBuilder()", span="460-460", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonReader.cs"];
m15_307 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="463-463", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_308 [label="jsonWriter.Formatting = Formatting.Indented", span="465-465", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_309 [label="jsonWriter.WriteStartObject()", span="467-467", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_310 [label="jsonWriter.WritePropertyName(''CPU'')", span="468-468", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_311 [label="jsonWriter.WriteValue(''Intel'')", span="469-469", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_312 [label="jsonWriter.WritePropertyName(''PSU'')", span="470-470", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_313 [label="jsonWriter.WriteValue(''500W'')", span="471-471", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_314 [label="jsonWriter.WritePropertyName(''Drives'')", span="472-472", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonReader.cs"];
m15_315 [label="jsonWriter.WriteStartArray()", span="473-473", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_316 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="474-474", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_317 [label="jsonWriter.WriteComment(''(broken)'')", span="475-475", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_318 [label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="476-476", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_319 [label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="477-477", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_320 [label="jsonWriter.WriteEnd()", span="478-478", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_321 [label="jsonWriter.WriteEndObject()", span="479-479", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_322 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="480-480", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_323 [label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="494-503", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_324 [label="string result = sb.ToString()", span="504-504", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonReader.cs"];
m15_325 [label="StringAssert.AreEqual(expected, result)", span="506-506", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", color=green, community=0, file="JsonReader.cs"];
m15_326 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", span="458-458", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonReader.cs"];
m15_796 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", span="1241-1241", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonReader.cs"];
m15_798 [label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml\r\n            }", span="1244-1247", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonReader.cs"];
m15_804 [label="Assert.AreEqual(script, reader.ReadAsString())", span="1259-1259", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonReader.cs"];
m15_802 [label="Assert.AreEqual(@''''''\u003cscript type=\u0022text/javascript\u0022\u003ealert(\u0027hi\u0027);\u003c/script\u003e'''''', json)", span="1255-1255", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonReader.cs"];
m15_797 [label="StringWriter sw = new StringWriter()", span="1243-1243", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonReader.cs"];
m15_799 [label="string script = @''<script type=''''text/javascript''''>alert('hi');</script>''", span="1249-1249", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonReader.cs"];
m15_800 [label="writer.WriteValue(script)", span="1251-1251", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonReader.cs"];
m15_803 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1257-1257", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonReader.cs"];
m15_801 [label="string json = sw.ToString()", span="1253-1253", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonReader.cs"];
m15_805 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", span="1241-1241", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonReader.cs"];
m15_124 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="455-455", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonReader.cs"];
m15_1042 [label="_value = value", span="1721-1721", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonReader.cs"];
m15_1043 [label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1719-1719", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonReader.cs"];
m15_86 [label="return;", span="268-268", cluster="Newtonsoft.Json.Linq.JProperty.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JsonReader.cs"];
m15_376 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="954-954", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JsonReader.cs"];
m15_788 [label="Entry Newtonsoft.Json.JsonWriter.BuildStateArray()", span="78-78", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonReader.cs"];
m15_560 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", span="884-884", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_562 [label="StringWriter sw = new StringWriter(sb)", span="887-887", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_563 [label="JsonWriter jsonWriter = new JsonTextWriter(sw) { Formatting = Formatting.Indented }", span="889-889", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_564 [label="jsonWriter.WriteStartArray()", span="891-891", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_577 [label="StringAssert.AreEqual(@''[\r\n  2147483647,\r\n  -2147483648,\r\n  0,\r\n  0,\r\n  9,\r\n  9,\r\n  9223372036854775807,\r\n  -9223372036854775808,\r\n  18446744073709551615,\r\n  0\r\n]'', sb.ToString())", span="909-920", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_561 [label="StringBuilder sb = new StringBuilder()", span="886-886", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_575 [label="jsonWriter.WriteEndArray()", span="904-904", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_576 [label="Console.WriteLine(sb.ToString())", span="907-907", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_565 [label="jsonWriter.WriteValue(int.MaxValue)", span="893-893", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_566 [label="jsonWriter.WriteValue(int.MinValue)", span="894-894", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_567 [label="jsonWriter.WriteValue(0)", span="895-895", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_568 [label="jsonWriter.WriteValue(-0)", span="896-896", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_569 [label="jsonWriter.WriteValue(9L)", span="897-897", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_570 [label="jsonWriter.WriteValue(9UL)", span="898-898", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_571 [label="jsonWriter.WriteValue(long.MaxValue)", span="899-899", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_572 [label="jsonWriter.WriteValue(long.MinValue)", span="900-900", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_573 [label="jsonWriter.WriteValue(ulong.MaxValue)", span="901-901", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_574 [label="jsonWriter.WriteValue(ulong.MinValue)", span="902-902", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_578 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", span="884-884", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonReader.cs"];
m15_26 [label="Entry Newtonsoft.Json.Linq.JProperty.JPropertyList.IndexOf(Newtonsoft.Json.Linq.JToken)", span="100-100", cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.IndexOf(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_206 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short?)", span="1189-1189", cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="JsonReader.cs"];
m15_978 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", span="1696-1696", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="JsonReader.cs"];
m15_1034 [label="SetWriteState(JsonToken.EndObject, null)", span="1698-1698", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="JsonReader.cs"];
m15_1035 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", span="1696-1696", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="JsonReader.cs"];
m15_69 [label="Entry Newtonsoft.Json.Linq.JProperty.IndexOfItem(Newtonsoft.Json.Linq.JToken)", span="237-237", cluster="Newtonsoft.Json.Linq.JProperty.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_72 [label="Entry Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", span="242-242", cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JsonReader.cs"];
m15_76 [label="throw new JsonException(''{0} cannot have multiple values.''.FormatWith(CultureInfo.InvariantCulture, typeof(JProperty)));", span="252-252", cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JsonReader.cs"];
m15_71 [label="Exit Newtonsoft.Json.Linq.JProperty.IndexOfItem(Newtonsoft.Json.Linq.JToken)", span="237-237", cluster="Newtonsoft.Json.Linq.JProperty.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_73 [label="item != null && item.Type == JTokenType.Comment", span="245-245", cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JsonReader.cs"];
m15_74 [label="return;", span="247-247", cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JsonReader.cs"];
m15_75 [label="Value != null", span="250-250", cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JsonReader.cs"];
m15_77 [label="base.InsertItem(0, item, false)", span="255-255", cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JsonReader.cs"];
m15_78 [label="Exit Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", span="242-242", cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JsonReader.cs"];
m15_70 [label="return _content.IndexOf(item);", span="239-239", cluster="Newtonsoft.Json.Linq.JProperty.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_80 [label="Entry Newtonsoft.Json.Linq.JProperty.ContainsItem(Newtonsoft.Json.Linq.JToken)", span="258-258", cluster="Newtonsoft.Json.Linq.JProperty.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_118 [label="writer.WritePropertyName(_name)", span="344-344", cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonReader.cs"];
m15_120 [label="value != null", span="347-347", cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonReader.cs"];
m15_122 [label="writer.WriteNull()", span="353-353", cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonReader.cs"];
m15_119 [label="JToken value = Value", span="346-346", cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonReader.cs"];
m15_121 [label="value.WriteTo(writer, converters)", span="349-349", cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonReader.cs"];
m15_123 [label="Exit Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="342-342", cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonReader.cs"];
m15_975 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", span="1689-1689", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonReader.cs"];
m15_1031 [label="SetWriteState(JsonToken.StartObject, null)", span="1691-1691", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonReader.cs"];
m15_1032 [label="_writer.Write(''{{{'')", span="1693-1693", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonReader.cs"];
m15_1033 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", span="1689-1689", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonReader.cs"];
m15_462 [label="Entry Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="1421-1421", cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonReader.cs"];
m15_213 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", span="483-483", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonReader.cs"];
m15_806 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonReader.cs"];
m15_859 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", span="1356-1356", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_864 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1363-1363", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_872 [label="writer.WriteEnd()", span="1374-1374", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_873 [label="StringAssert.AreEqual(@''[\r\n  '2000 a.m.',\r\n  '2000 a.m.'\r\n]'', sw.ToString())", span="1376-1379", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_863 [label="StringWriter sw = new StringWriter()", span="1362-1362", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_865 [label="writer.Formatting = Formatting.Indented", span="1364-1364", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_866 [label="writer.DateFormatString = ''yyyy tt''", span="1365-1365", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_867 [label="writer.Culture = culture", span="1366-1366", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_868 [label="writer.QuoteChar = '\''", span="1367-1367", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_869 [label="writer.WriteStartArray()", span="1369-1369", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_870 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1371-1371", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_871 [label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1372-1372", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_862 [label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="1360-1360", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_860 [label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="1358-1358", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_861 [label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="1359-1359", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_874 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", span="1356-1356", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonReader.cs"];
m15_216 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonReader.cs"];
m15_99 [label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonReader.cs"];
m15_100 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="167-167", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonReader.cs"];
m15_377 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="393-393", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonReader.cs"];
m15_405 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", span="637-637", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonReader.cs"];
m15_406 [label="StringBuilder sb = new StringBuilder()", span="639-639", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", color=green, community=0, file="JsonReader.cs"];
m15_407 [label="StringWriter sw = new StringWriter(sb)", span="640-640", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", color=green, community=0, file="JsonReader.cs"];
m15_421 [label="string result = sb.ToString()", span="667-667", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonReader.cs"];
m15_408 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="642-642", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonReader.cs"];
m15_409 [label="jsonWriter.Formatting = Formatting.Indented", span="644-644", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", color=green, community=0, file="JsonReader.cs"];
m15_410 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.String", span="645-645", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", color=green, community=0, file="JsonReader.cs"];
m15_411 [label="jsonWriter.WriteStartArray()", span="647-647", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", color=green, community=0, file="JsonReader.cs"];
m15_412 [label="jsonWriter.WriteValue(double.NaN)", span="648-648", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", color=green, community=0, file="JsonReader.cs"];
m15_413 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="649-649", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", color=green, community=0, file="JsonReader.cs"];
m15_414 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="650-650", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", color=green, community=0, file="JsonReader.cs"];
m15_415 [label="jsonWriter.WriteValue(float.NaN)", span="651-651", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonReader.cs"];
m15_416 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="652-652", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", color=green, community=0, file="JsonReader.cs"];
m15_417 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="653-653", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", color=green, community=0, file="JsonReader.cs"];
m15_418 [label="jsonWriter.WriteEndArray()", span="654-654", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", color=green, community=0, file="JsonReader.cs"];
m15_419 [label="jsonWriter.Flush()", span="656-656", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", color=green, community=0, file="JsonReader.cs"];
m15_420 [label="string expected = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity'''',\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="659-666", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", color=green, community=0, file="JsonReader.cs"];
m15_422 [label="StringAssert.AreEqual(expected, result)", span="669-669", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonReader.cs"];
m15_423 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", span="637-637", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonReader.cs"];
m15_126 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="869-869", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonReader.cs"];
m15_31 [label="_token = item", span="109-109", cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_106 [label="writer.Close()", span="214-214", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonReader.cs"];
m15_34 [label="index == 0", span="115-115", cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.RemoveAt(int)", file="JsonReader.cs"];
m15_16 [label="writer.WriteValue(longEscapedString)", span="82-82", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_17 [label="writer.WritePropertyName(''Prop4'')", span="84-84", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_18 [label="writer.WriteValue(longerEscapedString)", span="85-85", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_19 [label="writer.WriteEndObject()", span="87-87", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_58 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="148-148", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferErroringWithInvalidSize()", file="JsonReader.cs"];
m15_857 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JsonReader.cs"];
m15_242 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", span="357-357", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonReader.cs"];
m15_244 [label="StringWriter sw = new StringWriter(sb)", span="360-360", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonReader.cs"];
m15_245 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="362-362", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonReader.cs"];
m15_247 [label="jsonWriter.WriteValue(@''''''These pretzels are making me thirsty!'''''')", span="365-365", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonReader.cs"];
m15_248 [label="jsonWriter.WriteValue(''Jeff's house was burninated.'')", span="366-366", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonReader.cs"];
m15_249 [label="jsonWriter.WriteValue(''1. You don't talk about fight club.\r\n2. You don't talk about fight club.'')", span="367-367", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonReader.cs"];
m15_250 [label="jsonWriter.WriteValue(''35% of\t statistics\n are made\r up.'')", span="368-368", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonReader.cs"];
m15_246 [label="jsonWriter.WriteStartArray()", span="364-364", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonReader.cs"];
m15_254 [label="Assert.AreEqual(expected, result)", span="375-375", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonReader.cs"];
m15_243 [label="StringBuilder sb = new StringBuilder()", span="359-359", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonReader.cs"];
m15_251 [label="jsonWriter.WriteEndArray()", span="369-369", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonReader.cs"];
m15_253 [label="string result = sb.ToString()", span="373-373", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonReader.cs"];
m15_252 [label="string expected = @''[''''\''''These pretzels are making me thirsty!\'''''''',''''Jeff's house was burninated.'''',''''1. You don't talk about fight club.\r\n2. You don't talk about fight club.'''',''''35% of\t statistics\n are made\r up.'''']''", span="372-372", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonReader.cs"];
m15_255 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", span="357-357", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonReader.cs"];
m15_130 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="243-243", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_479 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", span="764-764", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonReader.cs"];
m15_481 [label="StringWriter sw = new StringWriter(sb)", span="767-767", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonReader.cs"];
m15_482 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="769-769", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonReader.cs"];
m15_484 [label="jsonWriter.WriteStartObject()", span="773-773", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonReader.cs"];
m15_486 [label="jsonWriter.WriteEnd()", span="775-775", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonReader.cs"];
m15_489 [label="Assert.AreEqual(expected, result)", span="781-781", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonReader.cs"];
m15_480 [label="StringBuilder sb = new StringBuilder()", span="766-766", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonReader.cs"];
m15_488 [label="string result = sb.ToString()", span="779-779", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonReader.cs"];
m15_485 [label="jsonWriter.WriteRaw(@''''''PropertyName'''':[1,2,3,4,5]'')", span="774-774", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonReader.cs"];
m15_483 [label="jsonWriter.Formatting = Formatting.Indented", span="771-771", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonReader.cs"];
m15_487 [label="string expected = @''{''''PropertyName'''':[1,2,3,4,5]}''", span="778-778", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonReader.cs"];
m15_490 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", span="764-764", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonReader.cs"];
m15_855 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="648-648", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonReader.cs"];
m15_127 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", span="238-238", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_128 [label="StringBuilder sb = new StringBuilder()", span="240-240", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_129 [label="StringWriter sw = new StringWriter(sb)", span="241-241", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_595 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken, object)", span="508-508", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m15_579 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="935-935", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JsonReader.cs"];
m15_580 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="945-945", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JsonReader.cs"];
m15_1100 [label="Entry Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.UnmanagedResourceFakingJsonWriter()", span="1825-1825", cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.UnmanagedResourceFakingJsonWriter()", file="JsonReader.cs"];
m15_1102 [label="DisposalCalls = 0", span="1827-1827", cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.UnmanagedResourceFakingJsonWriter()", file="JsonReader.cs"];
m15_1103 [label="Exit Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.UnmanagedResourceFakingJsonWriter()", span="1825-1825", cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.UnmanagedResourceFakingJsonWriter()", file="JsonReader.cs"];
m15_893 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JsonReader.cs"];
m15_0 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", span="57-57", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_1 [label="FakeArrayPool arrayPool = new FakeArrayPool()", span="59-59", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_2 [label="string longString = new string('A', 2000)", span="61-61", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_3 [label="string longEscapedString = ''Hello!'' + new string('!', 50) + new string('\n', 1000) + ''Good bye!''", span="62-62", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_959 [label="Entry System.IO.TextWriter.Write(char[])", span="0-0", cluster="System.IO.TextWriter.Write(char[])", file="JsonReader.cs"];
m15_990 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="433-433", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonReader.cs"];
m15_1026 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JsonReader.cs"];
m15_610 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenNullCheck()", span="961-961", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenNullCheck()", file="JsonReader.cs"];
m15_612 [label="ExceptionAssert.Throws<ArgumentNullException>(() => { jsonWriter.WriteToken(null); })", span="965-965", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenNullCheck()", color=green, community=0, file="JsonReader.cs"];
m15_611 [label="JsonWriter jsonWriter = new JsonTextWriter(new StringWriter())", span="963-963", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenNullCheck()", file="JsonReader.cs"];
m15_613 [label="ExceptionAssert.Throws<ArgumentNullException>(() => { jsonWriter.WriteToken(null, true); })", span="966-966", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenNullCheck()", file="JsonReader.cs"];
m15_614 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenNullCheck()", span="961-961", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenNullCheck()", file="JsonReader.cs"];
m15_503 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="483-483", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonReader.cs"];
m15_33 [label="Entry Newtonsoft.Json.Linq.JProperty.JPropertyList.RemoveAt(int)", span="113-113", cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.RemoveAt(int)", file="JsonReader.cs"];
m15_28 [label="Exit Newtonsoft.Json.Linq.JProperty.JPropertyList.IndexOf(Newtonsoft.Json.Linq.JToken)", span="100-100", cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.IndexOf(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_705 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="JsonReader.cs"];
m15_704 [label="Entry string.Trim(params char[])", span="0-0", cluster="string.Trim(params char[])", file="JsonReader.cs"];
m15_149 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", span="238-238", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_876 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", span="1384-1384", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonReader.cs"];
m15_879 [label="char[] buffer = null", span="1391-1391", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonReader.cs"];
m15_878 [label="StringWriter swNew = new StringWriter()", span="1390-1390", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonReader.cs"];
m15_881 [label="StringWriter swOld = new StringWriter()", span="1394-1394", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonReader.cs"];
m15_883 [label="string newText = swNew.ToString()", span="1397-1397", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonReader.cs"];
m15_884 [label="string oldText = swOld.ToString()", span="1398-1398", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonReader.cs"];
m15_880 [label="JavaScriptUtils.WriteEscapedJavaScriptString(swNew, c.ToString(), '''', true, JavaScriptUtils.DoubleQuoteCharEscapeFlags, StringEscapeHandling.Default, null, ref buffer)", span="1392-1392", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonReader.cs"];
m15_877 [label="char c = (char)0", span="1386-1386", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonReader.cs"];
m15_882 [label="WriteEscapedJavaScriptStringOld(swOld, c.ToString(), '''', true)", span="1395-1395", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonReader.cs"];
m15_885 [label="newText != oldText", span="1400-1400", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonReader.cs"];
m15_886 [label="throw new Exception(''Difference for char '{0}' (value {1}). Old text: {2}, New text: {3}''.FormatWith(CultureInfo.InvariantCulture, c, (int)c, oldText, newText));", span="1402-1402", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonReader.cs"];
m15_888 [label="c != char.MaxValue", span="1406-1406", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonReader.cs"];
m15_887 [label="c++", span="1405-1405", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonReader.cs"];
m15_889 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", span="1384-1384", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonReader.cs"];
m15_204 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte?)", span="1238-1238", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="JsonReader.cs"];
m15_214 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", span="1271-1271", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="JsonReader.cs"];
m15_1027 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonReader.cs"];
m15_212 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", span="510-510", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonReader.cs"];
m15_161 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", span="269-269", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_163 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="272-272", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_199 [label="Assert.AreEqual(expected, json)", span="319-319", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_195 [label="jsonWriter.WriteEndArray()", span="307-307", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_162 [label="StringWriter sw = new StringWriter()", span="271-271", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_164 [label="jsonWriter.WriteStartArray()", span="274-274", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_165 [label="jsonWriter.WriteValue((char?)null)", span="275-275", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_166 [label="jsonWriter.WriteValue((char?)'c')", span="276-276", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_167 [label="jsonWriter.WriteValue((bool?)null)", span="277-277", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_168 [label="jsonWriter.WriteValue((bool?)true)", span="278-278", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_169 [label="jsonWriter.WriteValue((byte?)null)", span="279-279", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_170 [label="jsonWriter.WriteValue((byte?)1)", span="280-280", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_171 [label="jsonWriter.WriteValue((sbyte?)null)", span="281-281", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_172 [label="jsonWriter.WriteValue((sbyte?)1)", span="282-282", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_173 [label="jsonWriter.WriteValue((short?)null)", span="283-283", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_174 [label="jsonWriter.WriteValue((short?)1)", span="284-284", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_175 [label="jsonWriter.WriteValue((ushort?)null)", span="285-285", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_176 [label="jsonWriter.WriteValue((ushort?)1)", span="286-286", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_177 [label="jsonWriter.WriteValue((int?)null)", span="287-287", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_178 [label="jsonWriter.WriteValue((int?)1)", span="288-288", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_179 [label="jsonWriter.WriteValue((uint?)null)", span="289-289", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_180 [label="jsonWriter.WriteValue((uint?)1)", span="290-290", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_181 [label="jsonWriter.WriteValue((long?)null)", span="291-291", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_182 [label="jsonWriter.WriteValue((long?)1)", span="292-292", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_183 [label="jsonWriter.WriteValue((ulong?)null)", span="293-293", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_184 [label="jsonWriter.WriteValue((ulong?)1)", span="294-294", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_185 [label="jsonWriter.WriteValue((double?)null)", span="295-295", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_186 [label="jsonWriter.WriteValue((double?)1.1)", span="296-296", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_187 [label="jsonWriter.WriteValue((float?)null)", span="297-297", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_188 [label="jsonWriter.WriteValue((float?)1.1)", span="298-298", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_189 [label="jsonWriter.WriteValue((decimal?)null)", span="299-299", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_190 [label="jsonWriter.WriteValue((decimal?)1.1m)", span="300-300", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_191 [label="jsonWriter.WriteValue((DateTime?)null)", span="301-301", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_192 [label="jsonWriter.WriteValue((DateTime?)new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc))", span="302-302", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_193 [label="jsonWriter.WriteValue((DateTimeOffset?)null)", span="304-304", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_194 [label="jsonWriter.WriteValue((DateTimeOffset?)new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero))", span="305-305", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_196 [label="string json = sw.ToString()", span="310-310", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_198 [label="expected = @''[null,''''c'''',null,true,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1.1,null,1.1,null,1.1,null,''''1970-01-01T00:00:00Z'''',null,''''1970-01-01T00:00:00+00:00'''']''", span="314-314", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_197 [label="string expected", span="311-311", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_200 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", span="269-269", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonReader.cs"];
m15_444 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="500-500", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonReader.cs"];
m15_117 [label="Entry Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="342-342", cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonReader.cs"];
m15_150 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="422-422", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonReader.cs"];
m15_105 [label="Assert.IsTrue(ms.CanRead)", span="213-213", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonReader.cs"];
m15_109 [label="writer = new JsonTextWriter(new StreamWriter(ms)) { CloseOutput = false }", span="218-218", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonReader.cs"];
m15_110 [label="Assert.IsTrue(ms.CanRead)", span="220-220", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonReader.cs"];
m15_111 [label="writer.Close()", span="221-221", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonReader.cs"];
m15_112 [label="Assert.IsTrue(ms.CanRead)", span="222-222", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonReader.cs"];
m15_113 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", span="208-208", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonReader.cs"];
m15_101 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JsonReader.cs"];
m15_102 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", span="208-208", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonReader.cs"];
m15_103 [label="MemoryStream ms = new MemoryStream()", span="210-210", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonReader.cs"];
m15_104 [label="JsonTextWriter writer = new JsonTextWriter(new StreamWriter(ms))", span="211-211", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonReader.cs"];
m15_706 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", span="1094-1094", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_708 [label="StringWriter sw = new StringWriter(sb)", span="1097-1097", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_711 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="1102-1102", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_713 [label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="1105-1105", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_723 [label="StringAssert.AreEqual(expected, result)", span="1125-1125", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_707 [label="StringBuilder sb = new StringBuilder()", span="1096-1096", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_720 [label="jsonWriter.WriteEndArray()", span="1113-1113", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_722 [label="string result = sb.ToString()", span="1123-1123", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_709 [label="string text = ''Hello world.''", span="1099-1099", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_710 [label="byte[] data = Encoding.UTF8.GetBytes(text)", span="1100-1100", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_712 [label="jsonWriter.Formatting = Formatting.Indented", span="1104-1104", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_714 [label="jsonWriter.WriteStartArray()", span="1107-1107", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_715 [label="jsonWriter.WriteValue(data)", span="1108-1108", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_716 [label="jsonWriter.WriteValue(data)", span="1109-1109", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_717 [label="jsonWriter.WriteValue((object)data)", span="1110-1110", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_718 [label="jsonWriter.WriteValue((byte[])null)", span="1111-1111", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_719 [label="jsonWriter.WriteValue((Uri)null)", span="1112-1112", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_721 [label="string expected = @''[\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  null,\r\n  null\r\n]''", span="1116-1122", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_724 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", span="1094-1094", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonReader.cs"];
m15_37 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonReader.cs"];
m15_38 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest_WithError()", span="101-101", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest_WithError()", file="JsonReader.cs"];
m15_39 [label="FakeArrayPool arrayPool = new FakeArrayPool()", span="103-103", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest_WithError()", file="JsonReader.cs"];
m15_445 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float)", span="473-473", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonReader.cs"];
m15_81 [label="return (Value == item);", span="260-260", cluster="Newtonsoft.Json.Linq.JProperty.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_725 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="717-717", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonReader.cs"];
m15_41 [label="index != 0", span="194-194", cluster="Newtonsoft.Json.Linq.JProperty.GetItem(int)", file="JsonReader.cs"];
m15_50 [label="return;", span="211-211", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_51 [label="Parent != null", span="214-214", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_40 [label="Entry Newtonsoft.Json.Linq.JProperty.GetItem(int)", span="192-192", cluster="Newtonsoft.Json.Linq.JProperty.GetItem(int)", file="JsonReader.cs"];
m15_42 [label="throw new ArgumentOutOfRangeException();", span="196-196", cluster="Newtonsoft.Json.Linq.JProperty.GetItem(int)", file="JsonReader.cs"];
m15_43 [label="return Value;", span="199-199", cluster="Newtonsoft.Json.Linq.JProperty.GetItem(int)", file="JsonReader.cs"];
m15_44 [label="Exit Newtonsoft.Json.Linq.JProperty.GetItem(int)", span="192-192", cluster="Newtonsoft.Json.Linq.JProperty.GetItem(int)", file="JsonReader.cs"];
m15_45 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="JsonReader.cs"];
m15_46 [label="Entry Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", span="202-202", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_47 [label="index != 0", span="204-204", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_48 [label="throw new ArgumentOutOfRangeException();", span="206-206", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_49 [label="IsTokenUnchanged(Value, item)", span="209-209", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_52 [label="((JObject)Parent).InternalPropertyChanging(this)", span="216-216", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_13 [label="writer.WritePropertyName(''Prop2'')", span="78-78", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_14 [label="writer.WriteValue(longString)", span="79-79", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_15 [label="writer.WritePropertyName(''Prop3'')", span="81-81", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_856 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="697-697", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonReader.cs"];
m15_65 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonReader.cs"];
m15_1041 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="232-232", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m15_594 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken)", span="623-623", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m15_158 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="869-869", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonReader.cs"];
m15_657 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", span="1020-1020", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_658 [label="StringBuilder sb = new StringBuilder()", span="1022-1022", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", color=green, community=0, file="JsonReader.cs"];
m15_659 [label="StringWriter sw = new StringWriter(sb)", span="1023-1023", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", color=green, community=0, file="JsonReader.cs"];
m15_683 [label="string result = sb.ToString()", span="1061-1061", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_660 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="1025-1025", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", color=green, community=0, file="JsonReader.cs"];
m15_661 [label="jsonWriter.Formatting = Formatting.Indented", span="1027-1027", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", color=green, community=0, file="JsonReader.cs"];
m15_662 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="1028-1028", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", color=green, community=0, file="JsonReader.cs"];
m15_663 [label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="1030-1030", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", color=green, community=0, file="JsonReader.cs"];
m15_664 [label="jsonWriter.Indentation = 5", span="1032-1032", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", color=green, community=0, file="JsonReader.cs"];
m15_665 [label="Assert.AreEqual(5, jsonWriter.Indentation)", span="1033-1033", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", color=green, community=0, file="JsonReader.cs"];
m15_666 [label="jsonWriter.IndentChar = '_'", span="1034-1034", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", color=green, community=0, file="JsonReader.cs"];
m15_667 [label="Assert.AreEqual('_', jsonWriter.IndentChar)", span="1035-1035", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", color=green, community=0, file="JsonReader.cs"];
m15_668 [label="jsonWriter.QuoteName = true", span="1036-1036", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", color=green, community=0, file="JsonReader.cs"];
m15_669 [label="Assert.AreEqual(true, jsonWriter.QuoteName)", span="1037-1037", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_670 [label="jsonWriter.QuoteChar = '\''", span="1038-1038", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_671 [label="Assert.AreEqual('\'', jsonWriter.QuoteChar)", span="1039-1039", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_672 [label="jsonWriter.WriteStartObject()", span="1041-1041", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_673 [label="jsonWriter.WritePropertyName(''propertyName'')", span="1043-1043", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_674 [label="jsonWriter.WriteValue(double.NaN)", span="1044-1044", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_675 [label="jsonWriter.IndentChar = '?'", span="1046-1046", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_676 [label="Assert.AreEqual('?', jsonWriter.IndentChar)", span="1047-1047", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_677 [label="jsonWriter.Indentation = 6", span="1048-1048", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_678 [label="Assert.AreEqual(6, jsonWriter.Indentation)", span="1049-1049", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_679 [label="jsonWriter.WritePropertyName(''prop2'')", span="1051-1051", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_680 [label="jsonWriter.WriteValue(123)", span="1052-1052", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_681 [label="jsonWriter.WriteEndObject()", span="1054-1054", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_684 [label="StringAssert.AreEqual(expected, result)", span="1063-1063", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_682 [label="string expected = @''{\r\n_____'propertyName': NaN,\r\n??????'prop2': 123\r\n}''", span="1057-1060", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_685 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", span="1020-1020", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonReader.cs"];
m15_203 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="1173-1173", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="JsonReader.cs"];
m15_53 [label="base.SetItem(0, item)", span="219-219", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_424 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", span="673-673", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_425 [label="StringBuilder sb = new StringBuilder()", span="675-675", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", color=green, community=0, file="JsonReader.cs"];
m15_426 [label="StringWriter sw = new StringWriter(sb)", span="676-676", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", color=green, community=0, file="JsonReader.cs"];
m15_441 [label="string result = sb.ToString()", span="704-704", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_427 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="678-678", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", color=green, community=0, file="JsonReader.cs"];
m15_428 [label="jsonWriter.Formatting = Formatting.Indented", span="680-680", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_429 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.String", span="681-681", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_430 [label="jsonWriter.QuoteChar = '\''", span="682-682", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_431 [label="jsonWriter.WriteStartArray()", span="684-684", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_432 [label="jsonWriter.WriteValue(double.NaN)", span="685-685", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_433 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="686-686", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_434 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="687-687", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_435 [label="jsonWriter.WriteValue(float.NaN)", span="688-688", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_436 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="689-689", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_437 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="690-690", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_438 [label="jsonWriter.WriteEndArray()", span="691-691", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_439 [label="jsonWriter.Flush()", span="693-693", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_442 [label="StringAssert.AreEqual(expected, result)", span="706-706", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_440 [label="string expected = @''[\r\n  'NaN',\r\n  'Infinity',\r\n  '-Infinity',\r\n  'NaN',\r\n  'Infinity',\r\n  '-Infinity'\r\n]''", span="696-703", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_443 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", span="673-673", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonReader.cs"];
m15_210 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long?)", span="1108-1108", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="JsonReader.cs"];
m15_500 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonReader.cs"];
m15_1002 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", span="1640-1640", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", file="JsonReader.cs"];
m15_1006 [label="Assert.AreEqual(1, UnmanagedResourceFakingJsonWriter.DisposalCalls)", span="1645-1645", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", file="JsonReader.cs"];
m15_1005 [label="GC.WaitForPendingFinalizers()", span="1644-1644", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", file="JsonReader.cs"];
m15_1004 [label="GC.Collect()", span="1643-1643", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", file="JsonReader.cs"];
m15_1003 [label="UnmanagedResourceFakingJsonWriter.CreateAndDispose()", span="1642-1642", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", file="JsonReader.cs"];
m15_1007 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", span="1640-1640", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DisposeSupressesFinalization()", file="JsonReader.cs"];
m15_1025 [label="Entry string.String(char[])", span="0-0", cluster="string.String(char[])", file="JsonReader.cs"];
m15_59 [label="writer.ArrayPool = arrayPool", span="150-150", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferErroringWithInvalidSize()", file="JsonReader.cs"];
m15_892 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", span="1411-1411", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_899 [label="char[] unicodeBuffer = null", span="1422-1422", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_898 [label="char[] chars = null", span="1421-1421", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_900 [label="int lastWritePosition = 0", span="1423-1423", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_930 [label="unicodeBuffer == null", span="1477-1477", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_932 [label="StringUtils.ToCharAsUnicode(c, unicodeBuffer)", span="1482-1482", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_943 [label="writer.Write(unicodeBuffer)", span="1517-1517", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_895 [label=appendDelimiters, span="1414-1414", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_896 [label="writer.Write(delimiter)", span="1416-1416", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_897 [label="s != null", span="1419-1419", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_902 [label="i < s.Length", span="1425-1425", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_903 [label="var c = s[i]", span="1427-1427", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_904 [label="c >= ' ' && c < 128 && c != '\\' && c != delimiter", span="1430-1430", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_938 [label="chars = s.ToCharArray()", span="1503-1503", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_939 [label="writer.Write(chars, lastWritePosition, i - lastWritePosition)", span="1507-1507", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_942 [label="writer.Write(escapedValue)", span="1513-1513", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_946 [label="writer.Write(s)", span="1524-1524", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_948 [label="chars = s.ToCharArray()", span="1530-1530", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_949 [label="writer.Write(chars, lastWritePosition, s.Length - lastWritePosition)", span="1534-1534", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_950 [label=appendDelimiters, span="1539-1539", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_951 [label="writer.Write(delimiter)", span="1541-1541", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_937 [label="chars == null", span="1501-1501", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_947 [label="chars == null", span="1528-1528", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_901 [label="int i = 0", span="1425-1425", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_936 [label="i > lastWritePosition", span="1499-1499", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_945 [label="lastWritePosition == 0", span="1521-1521", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_929 [label="c <= '\u001f'", span="1475-1475", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_931 [label="unicodeBuffer = new char[6]", span="1479-1479", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_933 [label="escapedValue = EscapedUnicodeText", span="1485-1485", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_941 [label="!string.Equals(escapedValue, EscapedUnicodeText)", span="1511-1511", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_944 [label="i++", span="1425-1425", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_935 [label="escapedValue == null", span="1494-1494", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_906 [label=c, span="1437-1437", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_905 [label="string escapedValue", span="1435-1435", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_940 [label="lastWritePosition = i + 1", span="1510-1510", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_934 [label="escapedValue = null", span="1489-1489", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_908 [label="escapedValue = @''\t''", span="1440-1440", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_910 [label="escapedValue = @''\n''", span="1443-1443", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_912 [label="escapedValue = @''\r''", span="1446-1446", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_914 [label="escapedValue = @''\f''", span="1449-1449", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_916 [label="escapedValue = @''\b''", span="1452-1452", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_918 [label="escapedValue = @''\\''", span="1455-1455", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_920 [label="escapedValue = @''\u0085''", span="1458-1458", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_922 [label="escapedValue = @''\u2028''", span="1461-1461", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_924 [label="escapedValue = @''\u2029''", span="1464-1464", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_926 [label="escapedValue = @''\'''", span="1468-1468", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_928 [label="escapedValue = ''\\\''''", span="1472-1472", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_907 [label="'\t'", span="1439-1439", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_909 [label="'\n'", span="1442-1442", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_911 [label="'\r'", span="1445-1445", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_913 [label="'\f'", span="1448-1448", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_915 [label="'\b'", span="1451-1451", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_917 [label="'\\'", span="1454-1454", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_919 [label="'\u0085'", span="1457-1457", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_921 [label="'\u2028'", span="1460-1460", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_923 [label="'\u2029'", span="1463-1463", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_925 [label="'\''", span="1466-1466", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_927 [label="''''", span="1470-1470", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_952 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", span="1411-1411", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonReader.cs"];
m15_621 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", span="493-493", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", file="JsonReader.cs"];
m15_535 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="447-447", cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JsonReader.cs"];
m15_953 [label="Entry System.IO.TextWriter.Write(char)", span="0-0", cluster="System.IO.TextWriter.Write(char)", file="JsonReader.cs"];
m15_404 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float?)", span="1141-1141", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="JsonReader.cs"];
m15_357 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", span="553-553", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonReader.cs"];
m15_358 [label="StringBuilder sb = new StringBuilder()", span="555-555", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", color=green, community=0, file="JsonReader.cs"];
m15_359 [label="StringWriter sw = new StringWriter(sb)", span="556-556", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", color=green, community=0, file="JsonReader.cs"];
m15_373 [label="string result = sb.ToString()", span="583-583", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonReader.cs"];
m15_360 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="558-558", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonReader.cs"];
m15_361 [label="jsonWriter.Formatting = Formatting.Indented", span="560-560", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", color=green, community=0, file="JsonReader.cs"];
m15_362 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="561-561", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", color=green, community=0, file="JsonReader.cs"];
m15_363 [label="jsonWriter.WriteStartArray()", span="563-563", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", color=green, community=0, file="JsonReader.cs"];
m15_364 [label="jsonWriter.WriteValue(double.NaN)", span="564-564", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", color=green, community=0, file="JsonReader.cs"];
m15_365 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="565-565", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", color=green, community=0, file="JsonReader.cs"];
m15_366 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="566-566", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", color=green, community=0, file="JsonReader.cs"];
m15_367 [label="jsonWriter.WriteValue(float.NaN)", span="567-567", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", color=green, community=0, file="JsonReader.cs"];
m15_368 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="568-568", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", color=green, community=0, file="JsonReader.cs"];
m15_369 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="569-569", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", color=green, community=0, file="JsonReader.cs"];
m15_370 [label="jsonWriter.WriteEndArray()", span="570-570", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", color=green, community=0, file="JsonReader.cs"];
m15_371 [label="jsonWriter.Flush()", span="572-572", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", color=green, community=0, file="JsonReader.cs"];
m15_372 [label="string expected = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity,\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="575-582", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", color=green, community=0, file="JsonReader.cs"];
m15_374 [label="StringAssert.AreEqual(expected, result)", span="585-585", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonReader.cs"];
m15_375 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", span="553-553", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonReader.cs"];
m15_125 [label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="414-414", cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonReader.cs"];
m15_153 [label="Newtonsoft.Json.Linq.JProperty", span="", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonReader.cs"];
m15_772 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteNull()", span="377-377", cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonReader.cs"];
m15_955 [label="Entry string.ToCharArray()", span="0-0", cluster="string.ToCharArray()", file="JsonReader.cs"];
m15_202 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char?)", span="1222-1222", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="JsonReader.cs"];
m15_107 [label="Assert.IsFalse(ms.CanRead)", span="215-215", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonReader.cs"];
m15_108 [label="ms = new MemoryStream()", span="217-217", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonReader.cs"];
m15_90 [label="JsonTextWriter writer = new JsonTextWriter(sw) { QuoteName = false }", span="194-194", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonReader.cs"];
m15_91 [label="writer.WriteStartObject()", span="196-196", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonReader.cs"];
m15_92 [label="writer.WritePropertyName(''name'')", span="198-198", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonReader.cs"];
m15_66 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonReader.cs"];
m15_67 [label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="475-475", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonReader.cs"];
m15_68 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonReader.cs"];
m15_327 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="474-474", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonReader.cs"];
m15_116 [label="Entry Newtonsoft.Json.Linq.JContainer.CreateFromContent(object)", span="675-675", cluster="Newtonsoft.Json.Linq.JContainer.CreateFromContent(object)", file="JsonReader.cs"];
m15_1024 [label="Entry Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", span="1613-1613", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs"];
m15_771 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="219-219", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonReader.cs"];
m15_147 [label="string result = sb.ToString()", span="263-263", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_858 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", span="676-676", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonReader.cs"];
m15_824 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", span="1299-1299", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonReader.cs"];
m15_826 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1302-1302", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonReader.cs"];
m15_830 [label="writer.WriteEnd()", span="1307-1307", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonReader.cs"];
m15_831 [label="Assert.AreEqual(''{'Blah':null}'', sw.ToString())", span="1309-1309", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonReader.cs"];
m15_825 [label="StringWriter sw = new StringWriter()", span="1301-1301", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonReader.cs"];
m15_827 [label="writer.QuoteChar = '\''", span="1303-1303", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonReader.cs"];
m15_828 [label="writer.WriteStartObject()", span="1305-1305", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonReader.cs"];
m15_829 [label="writer.WritePropertyName(''Blah'')", span="1306-1306", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonReader.cs"];
m15_832 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", span="1299-1299", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonReader.cs"];
m15_686 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="431-431", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonReader.cs"];
m15_992 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonReader.cs"];
m15_208 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="1075-1075", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="JsonReader.cs"];
m15_131 [label="jsonWriter.WriteStartArray()", span="245-245", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_207 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="1206-1206", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="JsonReader.cs"];
m15_10 [label="writer.WriteStartObject()", span="73-73", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_11 [label="writer.WritePropertyName(''Prop1'')", span="75-75", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_12 [label="writer.WriteValue(new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc))", span="76-76", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_4 [label="string longerEscapedString = ''Hello!'' + new string('!', 2000) + new string('\n', 1000) + ''Good bye!''", span="63-63", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_5 [label="int i = 0", span="65-65", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_6 [label="i < 1000", span="65-65", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_82 [label="Exit Newtonsoft.Json.Linq.JProperty.ContainsItem(Newtonsoft.Json.Linq.JToken)", span="258-258", cluster="Newtonsoft.Json.Linq.JProperty.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_280 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1412-1412", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonReader.cs"];
m15_1015 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", span="1663-1663", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonReader.cs"];
m15_1016 [label="SetWriteState(JsonToken.PropertyName, name)", span="1665-1665", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonReader.cs"];
m15_1019 [label="_writer.Write(new string(name.ToCharArray().Reverse().ToArray()))", span="1672-1672", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonReader.cs"];
m15_1022 [label="_writer.Write(':')", span="1679-1679", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonReader.cs"];
m15_1017 [label=QuoteName, span="1667-1667", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonReader.cs"];
m15_1018 [label="_writer.Write(QuoteChar)", span="1669-1669", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonReader.cs"];
m15_1020 [label=QuoteName, span="1674-1674", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonReader.cs"];
m15_1021 [label="_writer.Write(QuoteChar)", span="1676-1676", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonReader.cs"];
m15_1023 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", span="1663-1663", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonReader.cs"];
m15_159 [label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="877-877", cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JsonReader.cs"];
m15_36 [label="Exit Newtonsoft.Json.Linq.JProperty.JPropertyList.RemoveAt(int)", span="113-113", cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.RemoveAt(int)", file="JsonReader.cs"];
m15_27 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="JsonReader.cs"];
m15_152 [label="Newtonsoft.Json.Linq.JProperty.JPropertyList", span="", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonReader.cs"];
m15_989 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonReader.cs"];
m15_974 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", span="1653-1653", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="JsonReader.cs"];
m15_1011 [label="_writer = textWriter", span="1655-1655", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="JsonReader.cs"];
m15_1012 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", span="1653-1653", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="JsonReader.cs"];
m15_93 [label="writer.WriteValue(''value'')", span="199-199", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonReader.cs"];
m15_94 [label="writer.WriteEndObject()", span="201-201", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonReader.cs"];
m15_95 [label="writer.Flush()", span="202-202", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonReader.cs"];
m15_96 [label="Assert.AreEqual(@''{name:''''value''''}'', sb.ToString())", span="204-204", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonReader.cs"];
m15_279 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="456-456", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonReader.cs"];
m15_87 [label="p.Value != null && p.Value.Type != JTokenType.Null", span="271-271", cluster="Newtonsoft.Json.Linq.JProperty.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JsonReader.cs"];
m15_89 [label="Exit Newtonsoft.Json.Linq.JProperty.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="263-263", cluster="Newtonsoft.Json.Linq.JProperty.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JsonReader.cs"];
m15_88 [label="Value = p.Value", span="273-273", cluster="Newtonsoft.Json.Linq.JProperty.MergeItem(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JsonReader.cs"];
m15_536 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="850-850", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_538 [label="StringWriter sw = new StringWriter(sb)", span="853-853", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_539 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="855-855", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_541 [label="jsonWriter.WriteStartArray()", span="859-859", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_558 [label="Assert.AreEqual(@''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN]'', sb.ToString())", span="880-880", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_537 [label="StringBuilder sb = new StringBuilder()", span="852-852", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_542 [label="jsonWriter.WriteValue(0.0)", span="861-861", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_544 [label="jsonWriter.WriteValue(0.1)", span="863-863", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_545 [label="jsonWriter.WriteValue(1.0)", span="864-864", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_546 [label="jsonWriter.WriteValue(1.000001)", span="865-865", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_547 [label="jsonWriter.WriteValue(0.000001)", span="866-866", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_548 [label="jsonWriter.WriteValue(double.Epsilon)", span="867-867", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_549 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="868-868", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_550 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="869-869", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_551 [label="jsonWriter.WriteValue(double.NaN)", span="870-870", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_552 [label="jsonWriter.WriteValue(double.MaxValue)", span="871-871", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_553 [label="jsonWriter.WriteValue(double.MinValue)", span="872-872", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_543 [label="jsonWriter.WriteValue(0f)", span="862-862", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_554 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="873-873", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_555 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="874-874", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_556 [label="jsonWriter.WriteValue(float.NaN)", span="875-875", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_557 [label="jsonWriter.WriteEndArray()", span="877-877", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_540 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="857-857", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_559 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="850-850", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonReader.cs"];
m15_160 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="430-430", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonReader.cs"];
m15_54 [label="Parent != null", span="221-221", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_62 [label="throw new JsonException(''Cannot add or remove items from {0}.''.FormatWith(CultureInfo.InvariantCulture, typeof(JProperty)));", span="229-229", cluster="Newtonsoft.Json.Linq.JProperty.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_57 [label="Entry Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="604-604", cluster="Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_60 [label="Entry Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", span="207-207", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JsonReader.cs"];
m15_61 [label="Entry Newtonsoft.Json.Linq.JProperty.RemoveItem(Newtonsoft.Json.Linq.JToken)", span="227-227", cluster="Newtonsoft.Json.Linq.JProperty.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_56 [label="Exit Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", span="202-202", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_55 [label="((JObject)Parent).InternalPropertyChanged(this)", span="223-223", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_63 [label="Exit Newtonsoft.Json.Linq.JProperty.RemoveItem(Newtonsoft.Json.Linq.JToken)", span="227-227", cluster="Newtonsoft.Json.Linq.JProperty.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_622 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.TokenTypeOutOfRange()", span="971-971", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.TokenTypeOutOfRange()", file="JsonReader.cs"];
m15_623 [label="JsonWriter jsonWriter = new JsonTextWriter(new StringWriter())", span="973-973", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.TokenTypeOutOfRange()", file="JsonReader.cs"];
m15_625 [label="Assert.AreEqual(''token'', ex.ParamName)", span="976-976", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.TokenTypeOutOfRange()", file="JsonReader.cs"];
m15_627 [label="Assert.AreEqual(''token'', ex.ParamName)", span="979-979", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.TokenTypeOutOfRange()", file="JsonReader.cs"];
m15_624 [label="ArgumentOutOfRangeException ex = ExceptionAssert.Throws<ArgumentOutOfRangeException>(() => jsonWriter.WriteToken((JsonToken)int.MinValue))", span="975-975", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.TokenTypeOutOfRange()", file="JsonReader.cs"];
m15_626 [label="ex = ExceptionAssert.Throws<ArgumentOutOfRangeException>(() => jsonWriter.WriteToken((JsonToken)int.MinValue, ''test''))", span="978-978", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.TokenTypeOutOfRange()", file="JsonReader.cs"];
m15_628 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.TokenTypeOutOfRange()", span="971-971", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.TokenTypeOutOfRange()", file="JsonReader.cs"];
m15_979 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", span="1566-1566", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonReader.cs"];
m15_984 [label="var writer = new JsonTextWriter(stringWriter) { QuoteName = false }", span="1579-1579", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonReader.cs"];
m15_987 [label="StringAssert.AreEqual(@''{\r\n  a: 1\r\n}'', stringWriter.ToString())", span="1585-1587", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonReader.cs"];
m15_983 [label="var stringWriter = new StringWriter()", span="1577-1577", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonReader.cs"];
m15_985 [label="serializer.Serialize(writer, d)", span="1581-1581", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonReader.cs"];
m15_986 [label="writer.Close()", span="1582-1582", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonReader.cs"];
m15_982 [label="var serializer = JsonSerializer.Create(jsonSerializerSettings)", span="1576-1576", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonReader.cs"];
m15_980 [label="var d = new Dictionary<string, int>\r\n            {\r\n                { ''a'', 1 },\r\n            }", span="1568-1571", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonReader.cs"];
m15_981 [label="var jsonSerializerSettings = new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n            }", span="1572-1575", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonReader.cs"];
m15_988 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", span="1566-1566", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonReader.cs"];
m15_1036 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="1701-1701", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m15_1038 [label="_writer.Write(''}}}'')", span="1705-1705", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m15_1039 [label="base.WriteEnd(token)", span="1709-1709", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m15_1037 [label="token == JsonToken.EndObject", span="1703-1703", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m15_1040 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="1701-1701", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs"];
m15_20 [label="(i + 1) % 100 == 0", span="90-90", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_21 [label="Console.WriteLine(''Allocated buffers: '' + arrayPool.FreeArrays.Count)", span="92-92", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_22 [label="i++", span="65-65", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_24 [label="Assert.AreEqual(3, arrayPool.FreeArrays.Count)", span="97-97", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_23 [label="Assert.AreEqual(0, arrayPool.UsedArrays.Count)", span="96-96", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_25 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", span="57-57", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_35 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonReader.cs"];
m15_647 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", span="1004-1004", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonReader.cs"];
m15_648 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                StringBuilder sb = new StringBuilder();\r\n                StringWriter sw = new StringWriter(sb);\r\n\r\n                using (JsonTextWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.Formatting = Formatting.Indented;\r\n                    jsonWriter.QuoteChar = '*';\r\n                }\r\n            }, @''Invalid JavaScript string quote character. Valid quote characters are ' and ''''.'')", span="1006-1016", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", color=green, community=0, file="JsonReader.cs"];
m15_649 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", span="1004-1004", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonReader.cs"];
m15_977 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", span="1682-1682", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonReader.cs"];
m15_1028 [label="SetWriteState(JsonToken.Null, null)", span="1684-1684", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonReader.cs"];
m15_1029 [label="_writer.Write(''NULL!!!'')", span="1686-1686", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonReader.cs"];
m15_1030 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", span="1682-1682", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonReader.cs"];
m15_854 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonReader.cs"];
m15_461 [label="Entry Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="886-886", cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="JsonReader.cs"];
m15_29 [label="Entry Newtonsoft.Json.Linq.JProperty.JPropertyList.Insert(int, Newtonsoft.Json.Linq.JToken)", span="105-105", cluster="Newtonsoft.Json.Linq.JProperty.JPropertyList.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m15_215 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", span="1287-1287", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="JsonReader.cs"];
m15_148 [label="Assert.AreEqual(expected, result)", span="265-265", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonReader.cs"];
m15_281 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="321-321", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonReader.cs"];
m15_632 [label="Entry lambda expression", span="978-978", cluster="lambda expression", file="JsonReader.cs"];
m15_615 [label="Entry lambda expression", span="965-965", cluster="lambda expression", file="JsonReader.cs"];
m15_616 [label="jsonWriter.WriteToken(null)", span="965-965", cluster="lambda expression", color=green, community=0, file="JsonReader.cs"];
m15_617 [label="Exit lambda expression", span="965-965", cluster="lambda expression", file="JsonReader.cs"];
m15_638 [label="Entry lambda expression", span="986-1000", cluster="lambda expression", file="JsonReader.cs"];
m15_640 [label="StringWriter sw = new StringWriter(sb)", span="989-989", cluster="lambda expression", color=green, community=0, file="JsonReader.cs"];
m15_639 [label="StringBuilder sb = new StringBuilder()", span="988-988", cluster="lambda expression", file="JsonReader.cs"];
m15_641 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="991-991", cluster="lambda expression", color=green, community=0, file="JsonReader.cs"];
m15_642 [label="jsonWriter.WriteStartArray()", span="993-993", cluster="lambda expression", color=green, community=0, file="JsonReader.cs"];
m15_643 [label="jsonWriter.WriteValue(0.0)", span="995-995", cluster="lambda expression", color=green, community=0, file="JsonReader.cs"];
m15_644 [label="jsonWriter.WriteEndArray()", span="997-997", cluster="lambda expression", color=green, community=0, file="JsonReader.cs"];
m15_645 [label="jsonWriter.WriteEndArray()", span="998-998", cluster="lambda expression", color=green, community=0, file="JsonReader.cs"];
m15_646 [label="Exit lambda expression", span="986-1000", cluster="lambda expression", file="JsonReader.cs"];
m15_650 [label="Entry lambda expression", span="1006-1016", cluster="lambda expression", file="JsonReader.cs"];
m15_651 [label="StringBuilder sb = new StringBuilder()", span="1008-1008", cluster="lambda expression", color=green, community=0, file="JsonReader.cs"];
m15_652 [label="StringWriter sw = new StringWriter(sb)", span="1009-1009", cluster="lambda expression", color=green, community=0, file="JsonReader.cs"];
m15_653 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="1011-1011", cluster="lambda expression", color=green, community=0, file="JsonReader.cs"];
m15_654 [label="jsonWriter.Formatting = Formatting.Indented", span="1013-1013", cluster="lambda expression", color=green, community=0, file="JsonReader.cs"];
m15_655 [label="jsonWriter.QuoteChar = '*'", span="1014-1014", cluster="lambda expression", color=green, community=0, file="JsonReader.cs"];
m15_656 [label="Exit lambda expression", span="1006-1016", cluster="lambda expression", file="JsonReader.cs"];
m15_236 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="347-347", cluster="lambda expression", file="JsonReader.cs"];
m15_239 [label="jsonWriter.WriteEndArray()", span="351-351", cluster="lambda expression", file="JsonReader.cs"];
m15_619 [label="jsonWriter.WriteToken(null, true)", span="966-966", cluster="lambda expression", file="JsonReader.cs"];
m15_618 [label="Entry lambda expression", span="966-966", cluster="lambda expression", file="JsonReader.cs"];
m15_235 [label="StringWriter sw = new StringWriter()", span="346-346", cluster="lambda expression", file="JsonReader.cs"];
m15_237 [label="jsonWriter.WriteStartArray()", span="349-349", cluster="lambda expression", file="JsonReader.cs"];
m15_238 [label="jsonWriter.WriteValue(new Version(1, 1, 1, 1))", span="350-350", cluster="lambda expression", file="JsonReader.cs"];
m15_605 [label="jsonWriter.WriteToken(JsonToken.Integer, ''three'')", span="953-953", cluster="lambda expression", file="JsonReader.cs"];
m15_608 [label="jsonWriter.WriteToken(JsonToken.Integer)", span="955-955", cluster="lambda expression", file="JsonReader.cs"];
m15_630 [label="jsonWriter.WriteToken((JsonToken)int.MinValue)", span="975-975", cluster="lambda expression", file="JsonReader.cs"];
m15_633 [label="jsonWriter.WriteToken((JsonToken)int.MinValue, ''test'')", span="978-978", cluster="lambda expression", file="JsonReader.cs"];
m15_240 [label="Exit lambda expression", span="344-353", cluster="lambda expression", file="JsonReader.cs"];
m15_620 [label="Exit lambda expression", span="966-966", cluster="lambda expression", file="JsonReader.cs"];
m15_234 [label="Entry lambda expression", span="344-353", cluster="lambda expression", file="JsonReader.cs"];
m15_604 [label="Entry lambda expression", span="953-953", cluster="lambda expression", file="JsonReader.cs"];
m15_607 [label="Entry lambda expression", span="955-955", cluster="lambda expression", file="JsonReader.cs"];
m15_629 [label="Entry lambda expression", span="975-975", cluster="lambda expression", file="JsonReader.cs"];
m15_606 [label="Exit lambda expression", span="953-953", cluster="lambda expression", file="JsonReader.cs"];
m15_609 [label="Exit lambda expression", span="955-955", cluster="lambda expression", file="JsonReader.cs"];
m15_631 [label="Exit lambda expression", span="975-975", cluster="lambda expression", file="JsonReader.cs"];
m15_634 [label="Exit lambda expression", span="978-978", cluster="lambda expression", file="JsonReader.cs"];
m15_218 [label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonReader.cs"];
m15_976 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", span="1658-1658", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="JsonReader.cs"];
m15_1013 [label="WritePropertyName(name, true)", span="1660-1660", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="JsonReader.cs"];
m15_1014 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", span="1658-1658", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="JsonReader.cs"];
m15_378 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", span="589-589", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonReader.cs"];
m15_380 [label="StringWriter sw = new StringWriter(sb)", span="592-592", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_379 [label="StringBuilder sb = new StringBuilder()", span="591-591", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonReader.cs"];
m15_381 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="594-594", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_382 [label="jsonWriter.Formatting = Formatting.Indented", span="596-596", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_383 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.DefaultValue", span="597-597", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_384 [label="jsonWriter.WriteStartArray()", span="599-599", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_385 [label="jsonWriter.WriteValue(double.NaN)", span="600-600", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_386 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="601-601", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_387 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="602-602", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonReader.cs"];
m15_388 [label="jsonWriter.WriteValue(float.NaN)", span="603-603", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_389 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="604-604", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_390 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="605-605", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_391 [label="jsonWriter.WriteValue((double?)double.NaN)", span="606-606", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_392 [label="jsonWriter.WriteValue((double?)double.PositiveInfinity)", span="607-607", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_393 [label="jsonWriter.WriteValue((double?)double.NegativeInfinity)", span="608-608", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_394 [label="jsonWriter.WriteValue((float?)float.NaN)", span="609-609", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_395 [label="jsonWriter.WriteValue((float?)float.PositiveInfinity)", span="610-610", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_396 [label="jsonWriter.WriteValue((float?)float.NegativeInfinity)", span="611-611", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonReader.cs"];
m15_397 [label="jsonWriter.WriteEndArray()", span="612-612", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_398 [label="jsonWriter.Flush()", span="614-614", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_399 [label="string expected = @''[\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  null,\r\n  null,\r\n  null,\r\n  null,\r\n  null,\r\n  null\r\n]''", span="617-630", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_400 [label="string result = sb.ToString()", span="631-631", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonReader.cs"];
m15_401 [label="StringAssert.AreEqual(expected, result)", span="633-633", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", color=green, community=0, file="JsonReader.cs"];
m15_402 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", span="589-589", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonReader.cs"];
m15_463 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="736-736", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonReader.cs"];
m15_465 [label="StringWriter sw = new StringWriter(sb)", span="739-739", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", color=green, community=0, file="JsonReader.cs"];
m15_464 [label="StringBuilder sb = new StringBuilder()", span="738-738", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonReader.cs"];
m15_466 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="741-741", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonReader.cs"];
m15_469 [label="jsonWriter.WriteStartArray()", span="746-746", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonReader.cs"];
m15_477 [label="StringAssert.AreEqual(expected, result)", span="760-760", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonReader.cs"];
m15_470 [label="jsonWriter.WriteValue(double.NaN)", span="747-747", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonReader.cs"];
m15_473 [label="jsonWriter.WriteValue(float.NaN)", span="750-750", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonReader.cs"];
m15_474 [label="jsonWriter.WriteEndArray()", span="751-751", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonReader.cs"];
m15_476 [label="string result = sb.ToString()", span="758-758", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonReader.cs"];
m15_471 [label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="748-748", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonReader.cs"];
m15_472 [label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="749-749", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonReader.cs"];
m15_467 [label="jsonWriter.Formatting = Formatting.Indented", span="743-743", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonReader.cs"];
m15_468 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="744-744", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonReader.cs"];
m15_475 [label="string expected = @''[\r\n  NaN,[1,2,3,4,5],[1,2,3,4,5],\r\n  NaN\r\n]''", span="754-757", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonReader.cs"];
m15_478 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="736-736", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonReader.cs"];
m15_789 [label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="153-153", cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="JsonReader.cs"];
m15_282 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", span="419-419", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_284 [label="StringWriter sw = new StringWriter(sb)", span="422-422", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_285 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="424-424", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_287 [label="jsonWriter.WriteStartObject()", span="428-428", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_288 [label="jsonWriter.WritePropertyName(''CPU'')", span="429-429", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_290 [label="jsonWriter.WritePropertyName(''PSU'')", span="431-431", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_292 [label="jsonWriter.WritePropertyName(''Drives'')", span="433-433", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_289 [label="jsonWriter.WriteValue(''Intel'')", span="430-430", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_291 [label="jsonWriter.WriteValue(''500W'')", span="432-432", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_294 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="435-435", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_296 [label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="437-437", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_297 [label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="438-438", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_293 [label="jsonWriter.WriteStartArray()", span="434-434", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_295 [label="jsonWriter.WriteComment(''(broken)'')", span="436-436", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_299 [label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="442-451", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_301 [label="StringAssert.AreEqual(expected, result)", span="454-454", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_283 [label="StringBuilder sb = new StringBuilder()", span="421-421", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_300 [label="string result = sb.ToString()", span="452-452", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_286 [label="jsonWriter.Formatting = Formatting.Indented", span="426-426", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_298 [label="jsonWriter.Close()", span="439-439", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_302 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", span="419-419", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonReader.cs"];
m15_278 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonReader.cs"];
m15_1008 [label="Entry Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.CreateAndDispose()", span="1820-1820", cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.CreateAndDispose()", file="JsonReader.cs"];
m15_1098 [label="((IDisposable)new UnmanagedResourceFakingJsonWriter()).Dispose()", span="1822-1822", cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.CreateAndDispose()", file="JsonReader.cs"];
m15_1099 [label="Exit Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.CreateAndDispose()", span="1820-1820", cluster="Newtonsoft.Json.Tests.UnmanagedResourceFakingJsonWriter.CreateAndDispose()", file="JsonReader.cs"];
m15_7 [label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="67-67", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_8 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="69-69", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_9 [label="writer.ArrayPool = arrayPool", span="71-71", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonReader.cs"];
m15_501 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonReader.cs"];
m15_833 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", span="1314-1314", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_835 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1317-1317", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_851 [label="writer.WriteEnd()", span="1339-1339", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_852 [label="StringAssert.AreEqual(@''[\r\n  '2000-01-01T01:01:01Z',\r\n  '2000-01-01T01:01:01+00:00',\r\n  '\/Date(946688461000)\/',\r\n  '\/Date(946688461000+0000)\/',\r\n  '2000 A.D.',\r\n  '2000 A.D.',\r\n  'AQID',\r\n  '00:00:00',\r\n  'http://www.google.com/',\r\n  '00000000-0000-0000-0000-000000000000'\r\n]'', sw.ToString())", span="1341-1352", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_834 [label="StringWriter sw = new StringWriter()", span="1316-1316", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_836 [label="writer.Formatting = Formatting.Indented", span="1318-1318", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_837 [label="writer.QuoteChar = '\''", span="1319-1319", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_838 [label="writer.WriteStartArray()", span="1321-1321", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_839 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1323-1323", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_840 [label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1324-1324", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_841 [label="writer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1326-1326", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_842 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1327-1327", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_843 [label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1328-1328", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_844 [label="writer.DateFormatString = ''yyyy gg''", span="1330-1330", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_845 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1331-1331", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_846 [label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1332-1332", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_847 [label="writer.WriteValue(new byte[] { 1, 2, 3 })", span="1334-1334", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_848 [label="writer.WriteValue(TimeSpan.Zero)", span="1335-1335", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_849 [label="writer.WriteValue(new Uri(''http://www.google.com/''))", span="1336-1336", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_850 [label="writer.WriteValue(Guid.Empty)", span="1337-1337", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_853 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", span="1314-1314", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonReader.cs"];
m15_32 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonReader.cs"];
m15_241 [label="Entry System.Version.Version(int, int, int, int)", span="0-0", cluster="System.Version.Version(int, int, int, int)", file="JsonReader.cs"];
m15_446 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="710-710", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonReader.cs"];
m15_447 [label="StringBuilder sb = new StringBuilder()", span="712-712", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", color=green, community=0, file="JsonReader.cs"];
m15_448 [label="StringWriter sw = new StringWriter(sb)", span="713-713", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonReader.cs"];
m15_458 [label="string result = sb.ToString()", span="730-730", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", color=green, community=0, file="JsonReader.cs"];
m15_457 [label="string expected = @''[1,2,3,4,5]  [\r\n  NaN\r\n]''", span="727-729", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", color=green, community=0, file="JsonReader.cs"];
m15_459 [label="StringAssert.AreEqual(expected, result)", span="732-732", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", color=green, community=0, file="JsonReader.cs"];
m15_449 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="715-715", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", color=green, community=0, file="JsonReader.cs"];
m15_450 [label="jsonWriter.Formatting = Formatting.Indented", span="717-717", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", color=green, community=0, file="JsonReader.cs"];
m15_451 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="718-718", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", color=green, community=0, file="JsonReader.cs"];
m15_452 [label="jsonWriter.WriteRaw(''[1,2,3,4,5]'')", span="720-720", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", color=green, community=0, file="JsonReader.cs"];
m15_453 [label="jsonWriter.WriteWhitespace(''  '')", span="721-721", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", color=green, community=0, file="JsonReader.cs"];
m15_454 [label="jsonWriter.WriteStartArray()", span="722-722", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", color=green, community=0, file="JsonReader.cs"];
m15_455 [label="jsonWriter.WriteValue(double.NaN)", span="723-723", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonReader.cs"];
m15_456 [label="jsonWriter.WriteEndArray()", span="724-724", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", color=green, community=0, file="JsonReader.cs"];
m15_460 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="710-710", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonReader.cs"];
m15_133 [label="return Load(reader, null);", span="369-369", cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JsonReader.cs"];
m15_132 [label="Entry Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", span="367-367", cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JsonReader.cs"];
m15_134 [label="Exit Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", span="367-367", cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JsonReader.cs"];
m15_328 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="510-510", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonReader.cs"];
m15_335 [label="Assert.AreEqual('''', jsonWriter.Path)", span="521-521", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_331 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="515-515", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonReader.cs"];
m15_334 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="520-520", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonReader.cs"];
m15_336 [label="jsonWriter.WritePropertyName(''CPU'')", span="523-523", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_337 [label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="524-524", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_338 [label="Assert.AreEqual(''CPU'', jsonWriter.Path)", span="525-525", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_339 [label="jsonWriter.WriteValue(''Intel'')", span="527-527", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_340 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="528-528", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonReader.cs"];
m15_341 [label="Assert.AreEqual(''CPU'', jsonWriter.Path)", span="529-529", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_342 [label="jsonWriter.WritePropertyName(''Drives'')", span="531-531", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_343 [label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="532-532", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_344 [label="Assert.AreEqual(''Drives'', jsonWriter.Path)", span="533-533", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_345 [label="jsonWriter.WriteStartArray()", span="535-535", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_346 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="536-536", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_347 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="538-538", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_348 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="539-539", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_349 [label="Assert.AreEqual(''Drives[0]'', jsonWriter.Path)", span="540-540", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_350 [label="jsonWriter.WriteEnd()", span="542-542", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_351 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="543-543", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_352 [label="Assert.AreEqual(''Drives'', jsonWriter.Path)", span="544-544", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonReader.cs"];
m15_353 [label="jsonWriter.WriteEndObject()", span="546-546", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_354 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="547-547", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_355 [label="Assert.AreEqual('''', jsonWriter.Path)", span="548-548", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", color=green, community=0, file="JsonReader.cs"];
m15_330 [label="StringWriter sw = new StringWriter(sb)", span="513-513", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonReader.cs"];
m15_333 [label="jsonWriter.WriteStartObject()", span="519-519", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonReader.cs"];
m15_332 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="517-517", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonReader.cs"];
m15_329 [label="StringBuilder sb = new StringBuilder()", span="512-512", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonReader.cs"];
m15_356 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="510-510", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonReader.cs"];
m15_64 [label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54", cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="JsonReader.cs"];
m15_596 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", span="944-944", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonReader.cs"];
m15_598 [label="StringWriter sw = new StringWriter(sb)", span="947-947", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonReader.cs"];
m15_599 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="949-949", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonReader.cs"];
m15_597 [label="StringBuilder sb = new StringBuilder()", span="946-946", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonReader.cs"];
m15_601 [label="ExceptionAssert.Throws<FormatException>(() => { jsonWriter.WriteToken(JsonToken.Integer, ''three''); }, ''Input string was not in a correct format.'')", span="953-953", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonReader.cs"];
m15_602 [label="ExceptionAssert.Throws<ArgumentNullException>(() => { jsonWriter.WriteToken(JsonToken.Integer); }, @''Value cannot be null.\r\nParameter name: value'')", span="955-956", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonReader.cs"];
m15_600 [label="jsonWriter.WriteToken(JsonToken.StartArray)", span="951-951", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonReader.cs"];
m15_603 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", span="944-944", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonReader.cs"];
m15_1010 [label="Entry System.GC.WaitForPendingFinalizers()", span="0-0", cluster="System.GC.WaitForPendingFinalizers()", file="JsonReader.cs"];
m15_403 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="1157-1157", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="JsonReader.cs"];
m15_790 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", span="1227-1227", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonReader.cs"];
m15_792 [label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                DateTimeZoneHandling = Json.DateTimeZoneHandling.Utc\r\n            }", span="1230-1233", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonReader.cs"];
m15_794 [label="Assert.AreEqual(@''''''2000-01-01T01:01:01Z'''''', sw.ToString())", span="1237-1237", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonReader.cs"];
m15_791 [label="StringWriter sw = new StringWriter()", span="1229-1229", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonReader.cs"];
m15_793 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified))", span="1235-1235", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonReader.cs"];
m15_795 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", span="1227-1227", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonReader.cs"];
m15_687 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="1067-1067", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonReader.cs"];
m15_689 [label="StringWriter sw = new StringWriter(sb)", span="1070-1070", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonReader.cs"];
m15_692 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="1075-1075", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonReader.cs"];
m15_700 [label="Assert.AreEqual(text, Encoding.UTF8.GetString(d2, 0, d2.Length))", span="1090-1090", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonReader.cs"];
m15_694 [label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="1078-1078", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonReader.cs"];
m15_698 [label="Assert.AreEqual(expected, result)", span="1086-1086", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonReader.cs"];
m15_688 [label="StringBuilder sb = new StringBuilder()", span="1069-1069", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonReader.cs"];
m15_697 [label="string result = sb.ToString()", span="1084-1084", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonReader.cs"];
m15_690 [label="string text = ''Hello world.''", span="1072-1072", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonReader.cs"];
m15_691 [label="byte[] data = Encoding.UTF8.GetBytes(text)", span="1073-1073", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonReader.cs"];
m15_693 [label="jsonWriter.Formatting = Formatting.Indented", span="1077-1077", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonReader.cs"];
m15_695 [label="jsonWriter.WriteValue(data)", span="1080-1080", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonReader.cs"];
m15_699 [label="byte[] d2 = Convert.FromBase64String(result.Trim(''''))", span="1088-1088", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonReader.cs"];
m15_696 [label="string expected = @''''''SGVsbG8gd29ybGQu''''''", span="1083-1083", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonReader.cs"];
m15_701 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="1067-1067", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonReader.cs"];
m15_773 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", span="1202-1202", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonReader.cs"];
m15_786 [label="Assert.AreEqual(valueStates, stateArray[(int)valueToken], ''Error for '' + valueToken + '' states.'')", span="1220-1220", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonReader.cs"];
m15_774 [label="JsonWriter.State[][] stateArray = JsonWriter.BuildStateArray()", span="1204-1204", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonReader.cs"];
m15_775 [label="var valueStates = JsonWriter.StateArrayTempate[7]", span="1206-1206", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonReader.cs"];
m15_776 [label="EnumUtils.GetValues(typeof(JsonToken))", span="1208-1208", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonReader.cs"];
m15_785 [label="JsonToken.Bytes", span="1219-1219", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonReader.cs"];
m15_777 [label=valueToken, span="1210-1210", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonReader.cs"];
m15_784 [label="JsonToken.Date", span="1218-1218", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonReader.cs"];
m15_778 [label="JsonToken.Integer", span="1212-1212", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonReader.cs"];
m15_783 [label="JsonToken.Undefined", span="1217-1217", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonReader.cs"];
m15_779 [label="JsonToken.Float", span="1213-1213", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonReader.cs"];
m15_782 [label="JsonToken.Null", span="1216-1216", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonReader.cs"];
m15_780 [label="JsonToken.String", span="1214-1214", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonReader.cs"];
m15_781 [label="JsonToken.Boolean", span="1215-1215", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonReader.cs"];
m15_787 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", span="1202-1202", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonReader.cs"];
m15_960 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", span="1546-1546", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonReader.cs"];
m15_964 [label="Assert.AreEqual(WriteState.Object, writer.WriteState)", span="1551-1551", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonReader.cs"];
m15_966 [label="Assert.AreEqual(WriteState.Property, writer.WriteState)", span="1553-1553", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonReader.cs"];
m15_967 [label="Assert.AreEqual(''Property1'', writer.Path)", span="1554-1554", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonReader.cs"];
m15_969 [label="Assert.AreEqual(WriteState.Object, writer.WriteState)", span="1556-1556", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonReader.cs"];
m15_971 [label="Assert.AreEqual(WriteState.Start, writer.WriteState)", span="1558-1558", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonReader.cs"];
m15_972 [label="StringAssert.AreEqual(@''{{{\r\n  ''''1ytreporP'''': NULL!!!\r\n}}}'', sw.ToString())", span="1560-1562", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonReader.cs"];
m15_962 [label="CustomJsonTextWriter writer = new CustomJsonTextWriter(sw) { Formatting = Formatting.Indented }", span="1549-1549", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonReader.cs"];
m15_963 [label="writer.WriteStartObject()", span="1550-1550", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonReader.cs"];
m15_965 [label="writer.WritePropertyName(''Property1'')", span="1552-1552", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonReader.cs"];
m15_968 [label="writer.WriteNull()", span="1555-1555", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonReader.cs"];
m15_970 [label="writer.WriteEndObject()", span="1557-1557", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonReader.cs"];
m15_961 [label="StringWriter sw = new StringWriter()", span="1548-1548", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonReader.cs"];
m15_973 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", span="1546-1546", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonReader.cs"];
m15_894 [label="Entry string.FormatWith(System.IFormatProvider, object, object, object, object)", span="62-62", cluster="string.FormatWith(System.IFormatProvider, object, object, object, object)", file="JsonReader.cs"];
m15_534 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="439-439", cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JsonReader.cs"];
m15_993 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", span="1592-1592", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonReader.cs"];
m15_997 [label="JsonTextWriter w = new JsonTextWriter(sw)", span="1618-1618", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonReader.cs"];
m15_1000 [label="StringAssert.AreEqual(@''/*comment*//*hi*/*/{/*comment*/\r\n  ''''Name'''': /*comment*/ true/*comment after true*//*comment after comma*/,\r\n  ''''ExpiryDate'''': /*comment*/ new Constructor(\r\n    /*comment*/,\r\n    null\r\n    /*comment*/\r\n  ),\r\n  ''''Price'''': 3.99,\r\n  ''''Sizes'''': /*comment*/ [\r\n    /*comment*/\r\n    ''''Small''''\r\n    /*comment*/\r\n  ]/*comment*/\r\n}/*comment *//*comment 1 */'', sw.ToString())", span="1623-1636", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonReader.cs"];
m15_996 [label="StringWriter sw = new StringWriter()", span="1617-1617", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonReader.cs"];
m15_998 [label="w.Formatting = Formatting.Indented", span="1619-1619", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonReader.cs"];
m15_999 [label="w.WriteToken(r, true)", span="1621-1621", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonReader.cs"];
m15_995 [label="JsonTextReader r = new JsonTextReader(new StringReader(json))", span="1615-1615", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonReader.cs"];
m15_994 [label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn + @''\r\n,//comment after comma'' + StringUtils.CarriageReturnLineFeed + @''\r\n''''ExpiryDate''''://comment'' + StringUtils.LineFeed + @''\r\nnew\r\n'' + StringUtils.LineFeed +\r\n                          @''Constructor\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="1594-1613", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonReader.cs"];
m15_1001 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", span="1592-1592", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonReader.cs"];
m15_504 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="799-799", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonReader.cs"];
m15_506 [label="StringWriter sw = new StringWriter(sb)", span="802-802", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonReader.cs"];
m15_507 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="804-804", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonReader.cs"];
m15_510 [label="jsonWriter.WriteStartObject()", span="809-809", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonReader.cs"];
m15_512 [label="jsonWriter.WritePropertyName(''d'' + i)", span="813-813", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonReader.cs"];
m15_515 [label="jsonWriter.WriteEndObject()", span="819-819", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonReader.cs"];
m15_516 [label="Assert.AreEqual(@''{''''d0'''':[1,2],''''d1'''':[1,2],''''d2'''':[1,2]}'', sb.ToString())", span="822-822", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonReader.cs"];
m15_505 [label="StringBuilder sb = new StringBuilder()", span="801-801", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonReader.cs"];
m15_508 [label="int i = 0", span="806-806", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonReader.cs"];
m15_513 [label="jsonWriter.WriteRawValue(rawJson)", span="814-814", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonReader.cs"];
m15_509 [label="string rawJson = ''[1,2]''", span="807-807", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonReader.cs"];
m15_511 [label="i < 3", span="811-811", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonReader.cs"];
m15_514 [label="i++", span="816-816", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonReader.cs"];
m15_517 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="799-799", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonReader.cs"];
m15_209 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="1092-1092", cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="JsonReader.cs"];
m15_1084 [label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", span="1789-1789", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m15_1087 [label="throw new Exception(''Type not supported: '' + conversionType.FullName);", span="1796-1796", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m15_1085 [label="conversionType == typeof(int)", span="1791-1791", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m15_1086 [label="return _value;", span="1793-1793", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m15_1088 [label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", span="1789-1789", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m15_957 [label="Entry string.Equals(string, string)", span="0-0", cluster="string.Equals(string, string)", file="JsonReader.cs"];
m15_807 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", span="1263-1263", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_809 [label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeNonAscii\r\n            }", span="1266-1269", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_818 [label="writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.Default\r\n            }", span="1285-1288", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_816 [label="Assert.AreEqual(unicode, reader.ReadAsString())", span="1282-1282", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_813 [label="Assert.AreEqual(8, json.Length)", span="1277-1277", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_814 [label="Assert.AreEqual(@''''''\u5f20'''''', json)", span="1278-1278", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_821 [label="Assert.AreEqual(3, json.Length)", span="1294-1294", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_822 [label="Assert.AreEqual(''\''\u5f20\'''', json)", span="1295-1295", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_808 [label="StringWriter sw = new StringWriter()", span="1265-1265", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_810 [label="string unicode = ''\u5f20''", span="1271-1271", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_811 [label="writer.WriteValue(unicode)", span="1273-1273", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_817 [label="sw = new StringWriter()", span="1284-1284", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_819 [label="writer.WriteValue(unicode)", span="1290-1290", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_815 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1280-1280", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_812 [label="string json = sw.ToString()", span="1275-1275", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_820 [label="json = sw.ToString()", span="1292-1292", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_823 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", span="1263-1263", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonReader.cs"];
m15_491 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="785-785", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonReader.cs"];
m15_496 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="792-792", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonReader.cs"];
m15_498 [label="Assert.AreEqual(''1'', sw.ToString())", span="795-795", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonReader.cs"];
m15_497 [label="writer.WriteToken(reader)", span="793-793", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonReader.cs"];
m15_495 [label="StringWriter sw = new StringWriter()", span="791-791", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonReader.cs"];
m15_492 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''[1,2,3,4,5]''))", span="787-787", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonReader.cs"];
m15_494 [label="reader.Read()", span="789-789", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonReader.cs"];
m15_493 [label="reader.Read()", span="788-788", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonReader.cs"];
m15_499 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="785-785", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonReader.cs"];
m15_1009 [label="Entry System.GC.Collect()", span="0-0", cluster="System.GC.Collect()", file="JsonReader.cs"];
m15_155 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="963-963", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonReader.cs"];
m15_157 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1386-1386", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonReader.cs"];
m15_230 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", span="342-342", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonReader.cs"];
m15_231 [label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                StringWriter sw = new StringWriter();\r\n                using (JsonTextWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.WriteStartArray();\r\n                    jsonWriter.WriteValue(new Version(1, 1, 1, 1));\r\n                    jsonWriter.WriteEndArray();\r\n                }\r\n            }, @''Unsupported type: System.Version. Use the JsonSerializer class to get the object's JSON representation. Path ''.'')", span="344-353", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonReader.cs"];
m15_232 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", span="342-342", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonReader.cs"];
m15_205 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="1255-1255", cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="JsonReader.cs"];
m15_201 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="208-208", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonReader.cs"];
m15_581 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", span="924-924", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonReader.cs"];
m15_583 [label="StringWriter sw = new StringWriter(sb)", span="927-927", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonReader.cs"];
m15_584 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="929-929", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonReader.cs"];
m15_592 [label="Assert.AreEqual(@''[1,{''''string'''':2147483647}]'', sb.ToString())", span="940-940", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonReader.cs"];
m15_582 [label="StringBuilder sb = new StringBuilder()", span="926-926", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonReader.cs"];
m15_585 [label="jsonWriter.WriteToken(JsonToken.StartArray)", span="931-931", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonReader.cs"];
m15_586 [label="jsonWriter.WriteToken(JsonToken.Integer, 1)", span="932-932", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonReader.cs"];
m15_587 [label="jsonWriter.WriteToken(JsonToken.StartObject)", span="933-933", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonReader.cs"];
m15_588 [label="jsonWriter.WriteToken(JsonToken.PropertyName, ''string'')", span="934-934", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonReader.cs"];
m15_589 [label="jsonWriter.WriteToken(JsonToken.Integer, int.MaxValue)", span="935-935", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonReader.cs"];
m15_590 [label="jsonWriter.WriteToken(JsonToken.EndObject)", span="936-936", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonReader.cs"];
m15_591 [label="jsonWriter.WriteToken(JsonToken.EndArray)", span="937-937", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonReader.cs"];
m15_593 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", span="924-924", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonReader.cs"];
m15_635 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="984-984", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonReader.cs"];
m15_636 [label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                StringBuilder sb = new StringBuilder();\r\n                StringWriter sw = new StringWriter(sb);\r\n\r\n                using (JsonWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.WriteStartArray();\r\n\r\n                    jsonWriter.WriteValue(0.0);\r\n\r\n                    jsonWriter.WriteEndArray();\r\n                    jsonWriter.WriteEndArray();\r\n                }\r\n            }, ''No token to close. Path ''.'')", span="986-1000", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", color=green, community=0, file="JsonReader.cs"];
m15_637 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="984-984", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonReader.cs"];
m15_703 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="627-627", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonReader.cs"];
m15_702 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonReader.cs"];
m15_891 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="148-148", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JsonReader.cs"];
m15_154 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="916-916", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonReader.cs"];
m15_726 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", span="1129-1129", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_728 [label="StringWriter sw = new StringWriter(sb)", span="1132-1132", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_731 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1137-1137", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_763 [label="writer.WriteEnd()", span="1171-1171", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_749 [label="writer.WriteEndObject()", span="1157-1157", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_765 [label="writer.WriteEndObject()", span="1173-1173", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_734 [label="Assert.AreEqual('''', writer.Path)", span="1142-1142", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_736 [label="Assert.AreEqual(''[0]'', writer.Path)", span="1144-1144", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_738 [label="Assert.AreEqual(''[0].Property1'', writer.Path)", span="1146-1146", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_740 [label="Assert.AreEqual(''[0].Property1'', writer.Path)", span="1148-1148", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_742 [label="Assert.AreEqual(''[0].Property1[0]'', writer.Path)", span="1150-1150", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_744 [label="Assert.AreEqual(''[0].Property1[1]'', writer.Path)", span="1152-1152", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_746 [label="Assert.AreEqual(''[0].Property1[1][0]'', writer.Path)", span="1154-1154", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_748 [label="Assert.AreEqual(''[0].Property1[1][0][0]'', writer.Path)", span="1156-1156", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_750 [label="Assert.AreEqual(''[0]'', writer.Path)", span="1158-1158", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_752 [label="Assert.AreEqual(''[1]'', writer.Path)", span="1160-1160", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_754 [label="Assert.AreEqual(''[1].Property2'', writer.Path)", span="1162-1162", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_756 [label="Assert.AreEqual(''[1].Property2'', writer.Path)", span="1164-1164", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_758 [label="Assert.AreEqual(''[1].Property2[0]'', writer.Path)", span="1166-1166", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_760 [label="Assert.AreEqual(''[1].Property2[1]'', writer.Path)", span="1168-1168", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_762 [label="Assert.AreEqual(''[1].Property2[1][0]'', writer.Path)", span="1170-1170", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_764 [label="Assert.AreEqual(''[1].Property2[1]'', writer.Path)", span="1172-1172", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_766 [label="Assert.AreEqual(''[1]'', writer.Path)", span="1174-1174", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_768 [label="Assert.AreEqual('''', writer.Path)", span="1176-1176", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_769 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Property1'''': [\r\n      1,\r\n      [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    ''''Property2'''': new Constructor1(\r\n      null,\r\n      [\r\n        1\r\n      ]\r\n    )\r\n  }\r\n]'', sb.ToString())", span="1179-1198", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_727 [label="StringBuilder sb = new StringBuilder()", span="1131-1131", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_767 [label="writer.WriteEndArray()", span="1175-1175", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_729 [label="string text = ''Hello world.''", span="1134-1134", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_730 [label="byte[] data = Encoding.UTF8.GetBytes(text)", span="1135-1135", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_732 [label="writer.Formatting = Formatting.Indented", span="1139-1139", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_733 [label="writer.WriteStartArray()", span="1141-1141", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_735 [label="writer.WriteStartObject()", span="1143-1143", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_737 [label="writer.WritePropertyName(''Property1'')", span="1145-1145", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_739 [label="writer.WriteStartArray()", span="1147-1147", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_741 [label="writer.WriteValue(1)", span="1149-1149", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_743 [label="writer.WriteStartArray()", span="1151-1151", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_745 [label="writer.WriteStartArray()", span="1153-1153", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_747 [label="writer.WriteStartArray()", span="1155-1155", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_751 [label="writer.WriteStartObject()", span="1159-1159", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_753 [label="writer.WritePropertyName(''Property2'')", span="1161-1161", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_755 [label="writer.WriteStartConstructor(''Constructor1'')", span="1163-1163", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_757 [label="writer.WriteNull()", span="1165-1165", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_759 [label="writer.WriteStartArray()", span="1167-1167", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_761 [label="writer.WriteValue(1)", span="1169-1169", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_770 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", span="1129-1129", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonReader.cs"];
m15_954 [label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="114-114", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="JsonReader.cs"];
m15_233 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="350-350", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonReader.cs"];
m15_256 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", span="379-379", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_274 [label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="403-412", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_258 [label="StringWriter sw = new StringWriter(sb)", span="382-382", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_259 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="384-384", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_261 [label="jsonWriter.WriteStartObject()", span="388-388", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_262 [label="jsonWriter.WritePropertyName(''CPU'')", span="389-389", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_264 [label="jsonWriter.WritePropertyName(''PSU'')", span="391-391", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_266 [label="jsonWriter.WritePropertyName(''Drives'')", span="393-393", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_263 [label="jsonWriter.WriteValue(''Intel'')", span="390-390", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_265 [label="jsonWriter.WriteValue(''500W'')", span="392-392", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_268 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="395-395", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_270 [label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="397-397", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_271 [label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="398-398", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_267 [label="jsonWriter.WriteStartArray()", span="394-394", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_269 [label="jsonWriter.WriteComment(''(broken)'')", span="396-396", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_272 [label="jsonWriter.WriteEndObject()", span="399-399", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_273 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="400-400", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_275 [label="string result = sb.ToString()", span="413-413", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_276 [label="StringAssert.AreEqual(expected, result)", span="415-415", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_257 [label="StringBuilder sb = new StringBuilder()", span="381-381", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_260 [label="jsonWriter.Formatting = Formatting.Indented", span="386-386", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_277 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", span="379-379", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonReader.cs"];
m15_958 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="JsonReader.cs"];
m15_519 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="826-826", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonReader.cs"];
m15_521 [label="StringWriter sw = new StringWriter(sb)", span="829-829", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonReader.cs"];
m15_522 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="831-831", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonReader.cs"];
m15_523 [label="jsonWriter.WriteStartObject()", span="833-833", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonReader.cs"];
m15_526 [label="jsonWriter.WriteStartObject()", span="837-837", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonReader.cs"];
m15_524 [label="jsonWriter.WritePropertyName(''con'')", span="834-834", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonReader.cs"];
m15_527 [label="jsonWriter.WritePropertyName(''aa'')", span="838-838", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonReader.cs"];
m15_528 [label="jsonWriter.WriteValue(''aa'')", span="839-839", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonReader.cs"];
m15_529 [label="jsonWriter.WriteEndObject()", span="840-840", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonReader.cs"];
m15_531 [label="jsonWriter.WriteEndObject()", span="843-843", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonReader.cs"];
m15_532 [label="Assert.AreEqual(@''{''''con'''':new Ext.data.JsonStore({''''aa'''':''''aa''''})}'', sb.ToString())", span="846-846", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonReader.cs"];
m15_520 [label="StringBuilder sb = new StringBuilder()", span="828-828", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonReader.cs"];
m15_525 [label="jsonWriter.WriteStartConstructor(''Ext.data.JsonStore'')", span="836-836", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonReader.cs"];
m15_530 [label="jsonWriter.WriteEndConstructor()", span="841-841", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonReader.cs"];
m15_533 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="826-826", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonReader.cs"];
m15_1101 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="JsonReader.cs"];
m15_1116 [label=jsonWriter, span="", file="JsonReader.cs"];
m15_1115 [label=jsonWriter, span="", file="JsonReader.cs"];
m15_1117 [label=jsonWriter, span="", file="JsonReader.cs"];
m15_1118 [label="Newtonsoft.Json.Tests.CustomJsonTextWriter", span="", file="JsonReader.cs"];
m15_1119 [label="out Newtonsoft.Json.Tests.ConvertibleInt", span="", file="JsonReader.cs"];
m15_1120 [label="Newtonsoft.Json.Tests.ConvertibleInt", span="", file="JsonReader.cs"];
m16_70 [label="Exit Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="205-205", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="JsonSchemaWriter.cs"];
m16_22 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonSchemaWriter.cs"];
m16_102 [label="Entry Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", span="1217-1217", cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", file="JsonSchemaWriter.cs"];
m16_16 [label="Entry Newtonsoft.Json.Linq.JProperty.AddItem(bool, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="106-106", cluster="Newtonsoft.Json.Linq.JProperty.AddItem(bool, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_17 [label="Value != null", span="108-108", cluster="Newtonsoft.Json.Linq.JProperty.AddItem(bool, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_19 [label="Value = item", span="111-111", cluster="Newtonsoft.Json.Linq.JProperty.AddItem(bool, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_18 [label="throw new Exception(''{0} cannot have multiple values.''.FormatWith(CultureInfo.InvariantCulture, typeof(JProperty)));", span="109-109", cluster="Newtonsoft.Json.Linq.JProperty.AddItem(bool, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_20 [label="Exit Newtonsoft.Json.Linq.JProperty.AddItem(bool, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="106-106", cluster="Newtonsoft.Json.Linq.JProperty.AddItem(bool, Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_103 [label="Entry Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader)", span="670-670", cluster="Newtonsoft.Json.Linq.JContainer.ReadTokenFrom(Newtonsoft.Json.JsonReader)", file="JsonSchemaWriter.cs"];
m16_46 [label="Entry Newtonsoft.Json.Linq.JProperty.ClearItems()", span="150-150", cluster="Newtonsoft.Json.Linq.JProperty.ClearItems()", file="JsonSchemaWriter.cs"];
m16_47 [label="throw new Exception(''Cannot add or remove items from {0}.''.FormatWith(CultureInfo.InvariantCulture, typeof(JProperty)));", span="152-152", cluster="Newtonsoft.Json.Linq.JProperty.ClearItems()", file="JsonSchemaWriter.cs"];
m16_48 [label="Exit Newtonsoft.Json.Linq.JProperty.ClearItems()", span="150-150", cluster="Newtonsoft.Json.Linq.JProperty.ClearItems()", file="JsonSchemaWriter.cs"];
m16_37 [label="Entry Newtonsoft.Json.Linq.JProperty.RemoveItemAt(int)", span="135-135", cluster="Newtonsoft.Json.Linq.JProperty.RemoveItemAt(int)", file="JsonSchemaWriter.cs"];
m16_38 [label="throw new Exception(''Cannot add or remove items from {0}.''.FormatWith(CultureInfo.InvariantCulture, typeof(JProperty)));", span="137-137", cluster="Newtonsoft.Json.Linq.JProperty.RemoveItemAt(int)", file="JsonSchemaWriter.cs"];
m16_39 [label="Exit Newtonsoft.Json.Linq.JProperty.RemoveItemAt(int)", span="135-135", cluster="Newtonsoft.Json.Linq.JProperty.RemoveItemAt(int)", file="JsonSchemaWriter.cs"];
m16_40 [label="Entry Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken)", span="140-140", cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_41 [label="throw new Exception(''Cannot add or remove items from {0}.''.FormatWith(CultureInfo.InvariantCulture, typeof(JProperty)));", span="142-142", cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_42 [label="Exit Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken)", span="140-140", cluster="Newtonsoft.Json.Linq.JProperty.InsertItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_76 [label="Entry Newtonsoft.Json.Linq.JContainer.IsMultiContent(object)", span="289-289", cluster="Newtonsoft.Json.Linq.JContainer.IsMultiContent(object)", file="JsonSchemaWriter.cs"];
m16_101 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="204-204", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSchemaWriter.cs"];
m16_60 [label="Entry Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", span="177-177", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", file="JsonSchemaWriter.cs"];
m16_9 [label="Entry Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="594-594", cluster="Newtonsoft.Json.Linq.JContainer.IsTokenUnchanged(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_89 [label="Entry Newtonsoft.Json.Linq.JToken.GetDeepHashCode()", span="1126-1126", cluster="Newtonsoft.Json.Linq.JToken.GetDeepHashCode()", file="JsonSchemaWriter.cs"];
m16_90 [label="Entry Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", span="247-247", cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaWriter.cs"];
m16_91 [label="reader.TokenType == JsonToken.None", span="249-249", cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaWriter.cs"];
m16_92 [label="!reader.Read()", span="251-251", cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaWriter.cs"];
m16_94 [label="reader.TokenType != JsonToken.PropertyName", span="254-254", cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaWriter.cs"];
m16_95 [label="throw new Exception(\r\n          ''Error reading JProperty from JsonReader. Current JsonReader item is not a property: {0}''.FormatWith(\r\n            CultureInfo.InvariantCulture, reader.TokenType));", span="255-257", cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaWriter.cs"];
m16_96 [label="JProperty p = new JProperty((string)reader.Value)", span="259-259", cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaWriter.cs"];
m16_97 [label="p.SetLineInfo(reader as IJsonLineInfo)", span="260-260", cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaWriter.cs"];
m16_98 [label="p.ReadTokenFrom(reader)", span="262-262", cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaWriter.cs"];
m16_93 [label="throw new Exception(''Error reading JProperty from JsonReader.'');", span="252-252", cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaWriter.cs"];
m16_99 [label="return p;", span="264-264", cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaWriter.cs"];
m16_100 [label="Exit Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", span="247-247", cluster="Newtonsoft.Json.Linq.JProperty.Load(Newtonsoft.Json.JsonReader)", file="JsonSchemaWriter.cs"];
m16_78 [label="Entry Newtonsoft.Json.Linq.JContainer.CreateFromContent(object)", span="635-635", cluster="Newtonsoft.Json.Linq.JContainer.CreateFromContent(object)", file="JsonSchemaWriter.cs"];
m16_71 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="215-215", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSchemaWriter.cs"];
m16_72 [label="ValidationUtils.ArgumentNotNull(name, ''name'')", span="217-217", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSchemaWriter.cs"];
m16_73 [label="_name = name", span="219-219", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSchemaWriter.cs"];
m16_74 [label="Value = IsMultiContent(content)\r\n        ? new JArray(content)\r\n        : CreateFromContent(content)", span="221-223", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSchemaWriter.cs"];
m16_75 [label="Exit Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="215-215", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSchemaWriter.cs"];
m16_64 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="192-192", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JsonSchemaWriter.cs"];
m16_65 [label="ValidationUtils.ArgumentNotNull(name, ''name'')", span="195-195", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JsonSchemaWriter.cs"];
m16_66 [label="_name = name", span="197-197", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JsonSchemaWriter.cs"];
m16_67 [label="Exit Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="192-192", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JsonSchemaWriter.cs"];
m16_28 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="JsonSchemaWriter.cs"];
m16_13 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(Newtonsoft.Json.Linq.JProperty)", span="100-100", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(Newtonsoft.Json.Linq.JProperty)", file="JsonSchemaWriter.cs"];
m16_14 [label="_name = other.Name", span="103-103", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(Newtonsoft.Json.Linq.JProperty)", file="JsonSchemaWriter.cs"];
m16_15 [label="Exit Newtonsoft.Json.Linq.JProperty.JProperty(Newtonsoft.Json.Linq.JProperty)", span="100-100", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(Newtonsoft.Json.Linq.JProperty)", file="JsonSchemaWriter.cs"];
m16_11 [label="Entry Newtonsoft.Json.Linq.JContainer.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="513-513", cluster="Newtonsoft.Json.Linq.JContainer.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_56 [label="Entry Newtonsoft.Json.Linq.JProperty.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="171-171", cluster="Newtonsoft.Json.Linq.JProperty.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_57 [label="JProperty t = node as JProperty", span="173-173", cluster="Newtonsoft.Json.Linq.JProperty.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_58 [label="return (t != null && _name == t.Name && ContentsEqual(t));", span="174-174", cluster="Newtonsoft.Json.Linq.JProperty.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_59 [label="Exit Newtonsoft.Json.Linq.JProperty.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="171-171", cluster="Newtonsoft.Json.Linq.JProperty.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_43 [label="Entry Newtonsoft.Json.Linq.JProperty.ContainsItem(Newtonsoft.Json.Linq.JToken)", span="145-145", cluster="Newtonsoft.Json.Linq.JProperty.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_44 [label="return (Value == item);", span="147-147", cluster="Newtonsoft.Json.Linq.JProperty.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_45 [label="Exit Newtonsoft.Json.Linq.JProperty.ContainsItem(Newtonsoft.Json.Linq.JToken)", span="145-145", cluster="Newtonsoft.Json.Linq.JProperty.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_83 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="280-280", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonSchemaWriter.cs"];
m16_0 [label="Entry Newtonsoft.Json.Linq.JProperty.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="82-82", cluster="Newtonsoft.Json.Linq.JProperty.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_1 [label="IsTokenUnchanged(existing, replacement)", span="84-84", cluster="Newtonsoft.Json.Linq.JProperty.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_5 [label="base.ReplaceItem(existing, replacement)", span="90-90", cluster="Newtonsoft.Json.Linq.JProperty.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_2 [label="return;", span="85-85", cluster="Newtonsoft.Json.Linq.JProperty.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_3 [label="Parent != null", span="87-87", cluster="Newtonsoft.Json.Linq.JProperty.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_4 [label="((JObject)Parent).InternalPropertyChanging(this)", span="88-88", cluster="Newtonsoft.Json.Linq.JProperty.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_6 [label="Parent != null", span="92-92", cluster="Newtonsoft.Json.Linq.JProperty.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_7 [label="((JObject)Parent).InternalPropertyChanged(this)", span="93-93", cluster="Newtonsoft.Json.Linq.JProperty.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_8 [label="Exit Newtonsoft.Json.Linq.JProperty.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="82-82", cluster="Newtonsoft.Json.Linq.JProperty.ReplaceItem(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_34 [label="Entry Newtonsoft.Json.Linq.JProperty.RemoveItem(Newtonsoft.Json.Linq.JToken)", span="130-130", cluster="Newtonsoft.Json.Linq.JProperty.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_35 [label="throw new Exception(''Cannot add or remove items from {0}.''.FormatWith(CultureInfo.InvariantCulture, typeof(JProperty)));", span="132-132", cluster="Newtonsoft.Json.Linq.JProperty.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_36 [label="Exit Newtonsoft.Json.Linq.JProperty.RemoveItem(Newtonsoft.Json.Linq.JToken)", span="130-130", cluster="Newtonsoft.Json.Linq.JProperty.RemoveItem(Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_61 [label="Entry Newtonsoft.Json.Linq.JProperty.CloneToken()", span="177-177", cluster="Newtonsoft.Json.Linq.JProperty.CloneToken()", file="JsonSchemaWriter.cs"];
m16_62 [label="return new JProperty(this);", span="179-179", cluster="Newtonsoft.Json.Linq.JProperty.CloneToken()", file="JsonSchemaWriter.cs"];
m16_63 [label="Exit Newtonsoft.Json.Linq.JProperty.CloneToken()", span="177-177", cluster="Newtonsoft.Json.Linq.JProperty.CloneToken()", file="JsonSchemaWriter.cs"];
m16_79 [label="Entry Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="231-231", cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaWriter.cs"];
m16_80 [label="writer.WritePropertyName(_name)", span="233-233", cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaWriter.cs"];
m16_81 [label="Value.WriteTo(writer, converters)", span="234-234", cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaWriter.cs"];
m16_82 [label="Exit Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="231-231", cluster="Newtonsoft.Json.Linq.JProperty.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaWriter.cs"];
m16_29 [label="Entry Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", span="122-122", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_30 [label="index != 0", span="124-124", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_32 [label="Value = item", span="127-127", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_31 [label="throw new ArgumentOutOfRangeException();", span="125-125", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_33 [label="Exit Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", span="122-122", cluster="Newtonsoft.Json.Linq.JProperty.SetItem(int, Newtonsoft.Json.Linq.JToken)", file="JsonSchemaWriter.cs"];
m16_52 [label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable(System.Collections.Generic.IEnumerable<T>)", span="26-26", cluster="Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable(System.Collections.Generic.IEnumerable<T>)", file="JsonSchemaWriter.cs"];
m16_53 [label="Entry Newtonsoft.Json.Linq.JProperty.GetValueEnumerable()", span="166-166", cluster="Newtonsoft.Json.Linq.JProperty.GetValueEnumerable()", file="JsonSchemaWriter.cs"];
m16_54 [label="yield return Value;", span="168-168", cluster="Newtonsoft.Json.Linq.JProperty.GetValueEnumerable()", file="JsonSchemaWriter.cs"];
m16_55 [label="Exit Newtonsoft.Json.Linq.JProperty.GetValueEnumerable()", span="166-166", cluster="Newtonsoft.Json.Linq.JProperty.GetValueEnumerable()", file="JsonSchemaWriter.cs"];
m16_68 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonSchemaWriter.cs"];
m16_84 [label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="337-337", cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSchemaWriter.cs"];
m16_10 [label="Entry Newtonsoft.Json.Linq.JObject.InternalPropertyChanging(Newtonsoft.Json.Linq.JProperty)", span="134-134", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanging(Newtonsoft.Json.Linq.JProperty)", file="JsonSchemaWriter.cs"];
m16_12 [label="Entry Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", span="123-123", cluster="Newtonsoft.Json.Linq.JObject.InternalPropertyChanged(Newtonsoft.Json.Linq.JProperty)", file="JsonSchemaWriter.cs"];
m16_49 [label="Entry Newtonsoft.Json.Linq.JProperty.Children()", span="161-161", cluster="Newtonsoft.Json.Linq.JProperty.Children()", file="JsonSchemaWriter.cs"];
m16_50 [label="return new JEnumerable<JToken>(GetValueEnumerable());", span="163-163", cluster="Newtonsoft.Json.Linq.JProperty.Children()", file="JsonSchemaWriter.cs"];
m16_51 [label="Exit Newtonsoft.Json.Linq.JProperty.Children()", span="161-161", cluster="Newtonsoft.Json.Linq.JProperty.Children()", file="JsonSchemaWriter.cs"];
m16_88 [label="Entry string.GetHashCode()", span="0-0", cluster="string.GetHashCode()", file="JsonSchemaWriter.cs"];
m16_77 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="79-79", cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JsonSchemaWriter.cs"];
m16_85 [label="Entry Newtonsoft.Json.Linq.JProperty.GetDeepHashCode()", span="237-237", cluster="Newtonsoft.Json.Linq.JProperty.GetDeepHashCode()", file="JsonSchemaWriter.cs"];
m16_86 [label="return _name.GetHashCode() ^ ((Value != null) ? Value.GetDeepHashCode() : 0);", span="239-239", cluster="Newtonsoft.Json.Linq.JProperty.GetDeepHashCode()", file="JsonSchemaWriter.cs"];
m16_87 [label="Exit Newtonsoft.Json.Linq.JProperty.GetDeepHashCode()", span="237-237", cluster="Newtonsoft.Json.Linq.JProperty.GetDeepHashCode()", file="JsonSchemaWriter.cs"];
m16_23 [label="Entry Newtonsoft.Json.Linq.JProperty.GetItem(int)", span="114-114", cluster="Newtonsoft.Json.Linq.JProperty.GetItem(int)", file="JsonSchemaWriter.cs"];
m16_24 [label="index != 0", span="116-116", cluster="Newtonsoft.Json.Linq.JProperty.GetItem(int)", file="JsonSchemaWriter.cs"];
m16_25 [label="throw new ArgumentOutOfRangeException();", span="117-117", cluster="Newtonsoft.Json.Linq.JProperty.GetItem(int)", file="JsonSchemaWriter.cs"];
m16_26 [label="return Value;", span="119-119", cluster="Newtonsoft.Json.Linq.JProperty.GetItem(int)", file="JsonSchemaWriter.cs"];
m16_27 [label="Exit Newtonsoft.Json.Linq.JProperty.GetItem(int)", span="114-114", cluster="Newtonsoft.Json.Linq.JProperty.GetItem(int)", file="JsonSchemaWriter.cs"];
m16_21 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JsonSchemaWriter.cs"];
m16_104 [label="Newtonsoft.Json.Linq.JProperty", span="", file="JsonSchemaWriter.cs"];
m17_15 [label="string json = left.ToString()", span="87-87", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()", file="JsonSerializer.cs"];
m17_123 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", span="529-529", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_125 [label="c.Merge(new JConstructor())", span="532-532", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_129 [label="o.Merge(new JObject())", span="537-537", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_132 [label="a.Merge(new JArray())", span="541-541", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_135 [label="p.Merge(new JProperty(''name2''))", span="545-545", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_124 [label="JConstructor c = new JConstructor()", span="531-531", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_126 [label="Assert.AreEqual(null, c.Name)", span="533-533", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_128 [label="JObject o = new JObject()", span="536-536", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_130 [label="Assert.AreEqual(0, o.Count)", span="538-538", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_131 [label="JArray a = new JArray()", span="540-540", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_133 [label="Assert.AreEqual(0, a.Count)", span="542-542", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_134 [label="JProperty p = new JProperty(''name1'')", span="544-544", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_136 [label="Assert.AreEqual(''name1'', p.Name)", span="546-546", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_127 [label="Assert.AreEqual(0, c.Count)", span="534-534", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_137 [label="Assert.AreEqual(0, p.Count)", span="547-547", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_138 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", span="529-529", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeDefaultContainers()", file="JsonSerializer.cs"];
m17_114 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JsonSerializer.cs"];
m17_40 [label="Entry Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", span="660-660", cluster="Newtonsoft.Json.Linq.JContainer.Merge(object, Newtonsoft.Json.Linq.JsonMergeSettings)", file="JsonSerializer.cs"];
m17_98 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="283-283", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="JsonSerializer.cs"];
m17_83 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", span="486-486", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", file="JsonSerializer.cs"];
m17_86 [label="p1.Merge(p2)", span="491-491", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", file="JsonSerializer.cs"];
m17_89 [label="p1.Merge(p3)", span="496-496", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", file="JsonSerializer.cs"];
m17_92 [label="p1.Merge(p4)", span="501-501", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", file="JsonSerializer.cs"];
m17_84 [label="JProperty p1 = new JProperty(''p1'', 1)", span="488-488", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", file="JsonSerializer.cs"];
m17_85 [label="JProperty p2 = new JProperty(''p2'', 2)", span="489-489", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", file="JsonSerializer.cs"];
m17_87 [label="Assert.AreEqual(2, (int)p1.Value)", span="492-492", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", file="JsonSerializer.cs"];
m17_88 [label="JProperty p3 = new JProperty(''p3'')", span="494-494", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", file="JsonSerializer.cs"];
m17_90 [label="Assert.AreEqual(2, (int)p1.Value)", span="497-497", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", file="JsonSerializer.cs"];
m17_91 [label="JProperty p4 = new JProperty(''p4'', null)", span="499-499", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", file="JsonSerializer.cs"];
m17_93 [label="Assert.AreEqual(2, (int)p1.Value)", span="502-502", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", file="JsonSerializer.cs"];
m17_94 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", span="486-486", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJProperty()", file="JsonSerializer.cs"];
m17_99 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", span="506-506", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", file="JsonSerializer.cs"];
m17_102 [label="c1.Merge(c2)", span="511-511", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", file="JsonSerializer.cs"];
m17_106 [label="c1.Merge(c3)", span="516-516", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", file="JsonSerializer.cs"];
m17_100 [label="JConstructor c1 = new JConstructor(''c1'', new[] { 1, 2 })", span="508-508", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", file="JsonSerializer.cs"];
m17_101 [label="JConstructor c2 = new JConstructor(''c2'', new[] { 3, 4 })", span="509-509", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", file="JsonSerializer.cs"];
m17_103 [label="Assert.AreEqual(''c2'', c1.Name)", span="512-512", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", file="JsonSerializer.cs"];
m17_105 [label="JConstructor c3 = new JConstructor()", span="515-515", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", file="JsonSerializer.cs"];
m17_107 [label="Assert.AreEqual(''c2'', c1.Name)", span="517-517", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", file="JsonSerializer.cs"];
m17_104 [label="CollectionAssert.AreEquivalent(new[] { 1, 2, 3, 4 }, c1.Select(i => (int)i))", span="513-513", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", file="JsonSerializer.cs"];
m17_109 [label="c1.Merge(c4, new JsonMergeSettings\r\n            {\r\n                MergeArrayHandling = MergeArrayHandling.Replace\r\n            })", span="520-523", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", file="JsonSerializer.cs"];
m17_110 [label="Assert.AreEqual(''c4'', c1.Name)", span="524-524", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", file="JsonSerializer.cs"];
m17_111 [label="CollectionAssert.AreEquivalent(new[] { 5, 6 }, c1.Select(i => (int)i))", span="525-525", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", file="JsonSerializer.cs"];
m17_108 [label="JConstructor c4 = new JConstructor(''c4'', new[] { 5, 6 })", span="519-519", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", file="JsonSerializer.cs"];
m17_112 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", span="506-506", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeJConstructor()", file="JsonSerializer.cs"];
m17_25 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", span="104-104", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="JsonSerializer.cs"];
m17_30 [label="StringAssert.AreEqual(@''{\r\n  ''''Property1'''': {\r\n    ''''SubProperty1'''': 1,\r\n    ''''SubProperty2'''': 2\r\n  },\r\n  ''''Property2'''': 2\r\n}'', json)", span="138-144", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMultipleObjects()", color=green, community=0, file="JsonSerializer.cs"];
m17_29 [label="string json = left.ToString()", span="136-136", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMultipleObjects()", file="JsonSerializer.cs"];
m17_26 [label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string)", span="294-294", cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string)", file="JsonSerializer.cs"];
m17_28 [label="left.Merge(right)", span="134-134", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMultipleObjects()", file="JsonSerializer.cs"];
m17_27 [label="var right = (JObject)JToken.FromObject(new\r\n            {\r\n                Property1 = new { SubProperty2 = 2 },\r\n                Property2 = 2\r\n            })", span="128-132", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMultipleObjects()", file="JsonSerializer.cs"];
m17_31 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeMultipleObjects()", span="122-122", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMultipleObjects()", file="JsonSerializer.cs"];
m17_16 [label="StringAssert.AreEqual(@''{\r\n  ''''Property1'''': {\r\n    ''''SubProperty1'''': 1,\r\n    ''''SubProperty2'''': 2\r\n  }\r\n}'', json)", span="89-94", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()", file="JsonSerializer.cs"];
m17_14 [label="left.Merge(right)", span="85-85", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()", file="JsonSerializer.cs"];
m17_18 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", span="104-104", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="JsonSerializer.cs"];
m17_23 [label="Assert.AreEqual(1, node.Schemas.Count)", span="119-119", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="JsonSerializer.cs"];
m17_22 [label="JsonSchemaNode node = modelBuilder.AddSchema(null, schema)", span="117-117", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="JsonSerializer.cs"];
m17_19 [label="string json = @''{\r\n  ''''id'''':''''CircularReferenceArray'''',\r\n  ''''description'''':''''CircularReference'''',\r\n  ''''type'''':[''''array''''],\r\n  ''''items'''':{''''$ref'''':''''CircularReferenceArray''''}\r\n}''", span="106-111", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="JsonSerializer.cs"];
m17_20 [label="JsonSchema schema = JsonSchema.Parse(json)", span="113-113", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="JsonSerializer.cs"];
m17_21 [label="JsonSchemaModelBuilder modelBuilder = new JsonSchemaModelBuilder()", span="115-115", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="JsonSerializer.cs"];
m17_24 [label="Assert.AreEqual(node, node.Items[0])", span="121-121", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="JsonSerializer.cs"];
m17_0 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", span="45-45", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", file="JsonSerializer.cs"];
m17_5 [label="JsonSchema secondSchema = JsonSchema.Parse(second, resolver)", span="91-91", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", file="JsonSerializer.cs"];
m17_4 [label="JsonSchema firstSchema = JsonSchema.Parse(first, resolver)", span="90-90", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", file="JsonSerializer.cs"];
m17_1 [label="string first = @''{\r\n  ''''id'''':''''first'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''firstproperty'''':{''''type'''':''''string'''',''''maxLength'''':10},\r\n    ''''secondproperty'''':{\r\n      ''''type'''':''''object'''',\r\n      ''''properties'''':\r\n      {\r\n        ''''secondproperty_firstproperty'''':{''''type'''':''''string'''',''''maxLength'''':10,''''minLength'''':7}\r\n      }\r\n    }\r\n  },\r\n  ''''additionalProperties'''':{}\r\n}''", span="47-62", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", file="JsonSerializer.cs"];
m17_2 [label="string second = @''{\r\n  ''''id'''':''''second'''',\r\n  ''''type'''':''''object'''',\r\n  ''''extends'''':{''''$ref'''':''''first''''},\r\n  ''''properties'''':\r\n  {\r\n    ''''firstproperty'''':{''''type'''':''''string''''},\r\n    ''''secondproperty'''':{\r\n      ''''extends'''':{\r\n        ''''properties'''':\r\n        {\r\n          ''''secondproperty_firstproperty'''':{''''maxLength'''':9,''''minLength'''':6}\r\n        }\r\n      },\r\n      ''''type'''':''''object'''',\r\n      ''''properties'''':\r\n      {\r\n        ''''secondproperty_firstproperty'''':{}\r\n      }\r\n    },\r\n    ''''thirdproperty'''':{''''type'''':''''string''''}\r\n  },\r\n  ''''additionalProperties'''':false\r\n}''", span="64-87", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", file="JsonSerializer.cs"];
m17_3 [label="JsonSchemaResolver resolver = new JsonSchemaResolver()", span="89-89", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", file="JsonSerializer.cs"];
m17_6 [label="JsonSchemaModelBuilder modelBuilder = new JsonSchemaModelBuilder()", span="93-93", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", file="JsonSerializer.cs"];
m17_9 [label="Assert.AreEqual(2, node.Properties[''firstproperty''].Schemas.Count)", span="98-98", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", file="JsonSerializer.cs"];
m17_41 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()", span="232-232", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()", file="JsonSerializer.cs"];
m17_46 [label="StringAssert.AreEqual(@''{\r\n  ''''Array1'''': [\r\n    {\r\n      ''''Property1'''': 1\r\n    },\r\n    {\r\n      ''''Property1'''': 1\r\n    },\r\n    {\r\n      ''''Property1'''': 1\r\n    },\r\n    {\r\n      ''''Property2'''': 2\r\n    },\r\n    {\r\n      ''''Property3'''': 3\r\n    }\r\n  ]\r\n}'', json)", span="259-277", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()", file="JsonSerializer.cs"];
m17_45 [label="string json = left.ToString()", span="257-257", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()", file="JsonSerializer.cs"];
m17_42 [label="var left = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    new { Property1 = 1 },\r\n                    new { Property1 = 1 }\r\n                }\r\n            })", span="234-241", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()", file="JsonSerializer.cs"];
m17_43 [label="var right = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    new { Property1 = 1 },\r\n                    new { Property2 = 2 },\r\n                    new { Property3 = 3 }\r\n                }\r\n            })", span="242-250", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()", file="JsonSerializer.cs"];
m17_44 [label="left.Merge(right, new JsonMergeSettings\r\n            {\r\n                MergeArrayHandling = MergeArrayHandling.Concat\r\n            })", span="252-255", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()", file="JsonSerializer.cs"];
m17_47 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()", span="232-232", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.ConcatArray()", file="JsonSerializer.cs"];
m17_7 [label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object)", span="1674-1674", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)", file="JsonSerializer.cs"];
m17_8 [label="Entry Newtonsoft.Json.Linq.JContainer.Merge(object)", span="650-650", cluster="Newtonsoft.Json.Linq.JContainer.Merge(object)", file="JsonSerializer.cs"];
m17_10 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="327-327", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializer.cs"];
m17_11 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()", span="74-74", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()", file="JsonSerializer.cs"];
m17_12 [label="var left = (JObject)JToken.FromObject(new\r\n            {\r\n                Property1 = new { SubProperty1 = 1 }\r\n            })", span="76-79", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()", file="JsonSerializer.cs"];
m17_13 [label="var right = (JObject)JToken.FromObject(new\r\n            {\r\n                Property1 = new { SubProperty2 = 2 }\r\n            })", span="80-83", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()", file="JsonSerializer.cs"];
m17_76 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()", span="440-440", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()", file="JsonSerializer.cs"];
m17_81 [label="StringAssert.AreEqual(@''{\r\n  ''''Array1'''': [\r\n    {\r\n      ''''Property1'''': 1\r\n    },\r\n    {\r\n      ''''Property1'''': 1\r\n    },\r\n    {\r\n      ''''Property2'''': 2\r\n    },\r\n    {\r\n      ''''Property3'''': 3\r\n    }\r\n  ]\r\n}'', json)", span="467-482", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()", file="JsonSerializer.cs"];
m17_80 [label="string json = left.ToString()", span="465-465", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()", file="JsonSerializer.cs"];
m17_77 [label="var left = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    new { Property1 = 1 },\r\n                    new { Property1 = 1 }\r\n                }\r\n            })", span="442-449", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()", file="JsonSerializer.cs"];
m17_78 [label="var right = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    new { Property1 = 1 },\r\n                    new { Property2 = 2 },\r\n                    new { Property3 = 3 }\r\n                }\r\n            })", span="450-458", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()", file="JsonSerializer.cs"];
m17_79 [label="left.Merge(right, new JsonMergeSettings\r\n            {\r\n                MergeArrayHandling = MergeArrayHandling.Union\r\n            })", span="460-463", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()", file="JsonSerializer.cs"];
m17_82 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()", span="440-440", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.UnionArrays()", file="JsonSerializer.cs"];
m17_62 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()", span="376-376", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()", file="JsonSerializer.cs"];
m17_67 [label="StringAssert.AreEqual(@''{\r\n  ''''Array1'''': [\r\n    4,\r\n    5\r\n  ]\r\n}'', json)", span="403-408", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()", file="JsonSerializer.cs"];
m17_66 [label="string json = left.ToString()", span="401-401", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()", file="JsonSerializer.cs"];
m17_63 [label="var left = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    1,\r\n                    2,\r\n                    3\r\n                }\r\n            })", span="378-386", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()", file="JsonSerializer.cs"];
m17_64 [label="var right = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    4,\r\n                    5\r\n                }\r\n            })", span="387-394", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()", file="JsonSerializer.cs"];
m17_65 [label="left.Merge(right, new JsonMergeSettings\r\n            {\r\n                MergeArrayHandling = MergeArrayHandling.Replace\r\n            })", span="396-399", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()", file="JsonSerializer.cs"];
m17_68 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()", span="376-376", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Nested()", file="JsonSerializer.cs"];
m17_141 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", span="551-551", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_143 [label="c.Merge(null)", span="554-554", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_147 [label="o.Merge(null)", span="559-559", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_150 [label="a.Merge(null)", span="563-563", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_153 [label="p.Merge(null)", span="567-567", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_142 [label="JConstructor c = new JConstructor()", span="553-553", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_144 [label="Assert.AreEqual(null, c.Name)", span="555-555", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_146 [label="JObject o = new JObject()", span="558-558", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_148 [label="Assert.AreEqual(0, o.Count)", span="560-560", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_149 [label="JArray a = new JArray()", span="562-562", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_151 [label="Assert.AreEqual(0, a.Count)", span="564-564", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_152 [label="JProperty p = new JProperty(''name1'')", span="566-566", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_154 [label="Assert.AreEqual(''name1'', p.Name)", span="568-568", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_145 [label="Assert.AreEqual(0, c.Count)", span="556-556", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_155 [label="Assert.AreEqual(0, p.Count)", span="569-569", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_156 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", span="551-551", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeNull()", file="JsonSerializer.cs"];
m17_116 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor()", span="83-83", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor()", file="JsonSerializer.cs"];
m17_95 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSerializer.cs"];
m17_97 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string)", span="270-270", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string)", file="JsonSerializer.cs"];
m17_39 [label="Entry Newtonsoft.Json.Linq.JsonMergeSettings.JsonMergeSettings()", span="7-7", cluster="Newtonsoft.Json.Linq.JsonMergeSettings.JsonMergeSettings()", file="JsonSerializer.cs"];
m17_55 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()", span="333-333", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()", file="JsonSerializer.cs"];
m17_60 [label="StringAssert.AreEqual(@''{\r\n  ''''Property1'''': {\r\n    ''''Nested'''': true\r\n  },\r\n  ''''Property2'''': true,\r\n  ''''Property3'''': [\r\n    1\r\n  ],\r\n  ''''Property4'''': true\r\n}'', json)", span="363-372", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()", file="JsonSerializer.cs"];
m17_59 [label="string json = left.ToString()", span="361-361", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()", file="JsonSerializer.cs"];
m17_56 [label="var left = (JObject)JToken.FromObject(new\r\n            {\r\n                Property1 = new object[]\r\n                {\r\n                    1\r\n                },\r\n                Property2 = new object[]\r\n                {\r\n                    1\r\n                },\r\n                Property3 = true,\r\n                Property4 = true\r\n            })", span="335-347", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()", file="JsonSerializer.cs"];
m17_57 [label="var right = (JObject)JToken.FromObject(new\r\n            {\r\n                Property1 = new { Nested = true },\r\n                Property2 = true,\r\n                Property3 = new object[]\r\n                {\r\n                    1\r\n                },\r\n                Property4 = (object)null\r\n            })", span="348-357", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()", file="JsonSerializer.cs"];
m17_58 [label="left.Merge(right)", span="359-359", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()", file="JsonSerializer.cs"];
m17_61 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()", span="333-333", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInObject()", file="JsonSerializer.cs"];
m17_96 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSerializer.cs"];
m17_17 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()", span="74-74", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeChildObject()", file="JsonSerializer.cs"];
m17_115 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonSerializer.cs"];
m17_69 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()", span="412-412", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()", file="JsonSerializer.cs"];
m17_74 [label="StringAssert.AreEqual(@''[\r\n  4,\r\n  5\r\n]'', json)", span="433-436", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()", file="JsonSerializer.cs"];
m17_73 [label="string json = left.ToString()", span="431-431", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()", file="JsonSerializer.cs"];
m17_70 [label="var left = (JArray)JToken.FromObject(new object[]\r\n            {\r\n                1,\r\n                2,\r\n                3\r\n            })", span="414-419", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()", file="JsonSerializer.cs"];
m17_71 [label="var right = (JArray)JToken.FromObject(new object[]\r\n            {\r\n                4,\r\n                5\r\n            })", span="420-424", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()", file="JsonSerializer.cs"];
m17_72 [label="left.Merge(right, new JsonMergeSettings\r\n            {\r\n                MergeArrayHandling = MergeArrayHandling.Replace\r\n            })", span="426-429", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()", file="JsonSerializer.cs"];
m17_75 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()", span="412-412", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArrayOverwrite_Root()", file="JsonSerializer.cs"];
m17_113 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)", span="112-112", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, object)", file="JsonSerializer.cs"];
m17_32 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()", span="148-148", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()", file="JsonSerializer.cs"];
m17_37 [label="StringAssert.AreEqual(@''{\r\n  ''''Array1'''': [\r\n    {\r\n      ''''Property1'''': {\r\n        ''''Property1'''': 1,\r\n        ''''Property2'''': 3,\r\n        ''''Property3'''': {},\r\n        ''''Property4'''': 4,\r\n        ''''Property5'''': null\r\n      }\r\n    },\r\n    {},\r\n    3,\r\n    4,\r\n    5.1,\r\n    null,\r\n    {\r\n      ''''Property1'''': 1\r\n    }\r\n  ]\r\n}'', json)", span="208-228", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()", file="JsonSerializer.cs"];
m17_36 [label="string json = left.ToString()", span="206-206", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()", file="JsonSerializer.cs"];
m17_33 [label="var left = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    new\r\n                    {\r\n                        Property1 = new\r\n                        {\r\n                            Property1 = 1,\r\n                            Property2 = 2,\r\n                            Property3 = 3,\r\n                            Property4 = 4,\r\n                            Property5 = (object)null\r\n                        }\r\n                    },\r\n                    new { },\r\n                    3,\r\n                    null,\r\n                    5,\r\n                    null\r\n                }\r\n            })", span="150-171", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()", file="JsonSerializer.cs"];
m17_34 [label="var right = (JObject)JToken.FromObject(new\r\n            {\r\n                Array1 = new object[]\r\n                {\r\n                    new\r\n                    {\r\n                        Property1 = new\r\n                        {\r\n                            Property1 = (object)null,\r\n                            Property2 = 3,\r\n                            Property3 = new\r\n                            {\r\n\r\n                            },\r\n                            Property5 = (object)null\r\n                        }\r\n                    },\r\n                    null,\r\n                    null,\r\n                    4,\r\n                    5.1,\r\n                    null,\r\n                    new\r\n                    {\r\n                        Property1 = 1\r\n                    }\r\n                }\r\n            })", span="172-199", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()", file="JsonSerializer.cs"];
m17_35 [label="left.Merge(right, new JsonMergeSettings\r\n            {\r\n                MergeArrayHandling = MergeArrayHandling.Merge\r\n            })", span="201-204", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()", file="JsonSerializer.cs"];
m17_38 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()", span="148-148", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeArray()", file="JsonSerializer.cs"];
m17_48 [label="Entry Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()", span="281-281", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()", file="JsonSerializer.cs"];
m17_53 [label="StringAssert.AreEqual(@''[\r\n  1,\r\n  5,\r\n  {\r\n    ''''Property1'''': 1\r\n  },\r\n  [\r\n    1\r\n  ],\r\n  {\r\n    ''''Property1'''': 1\r\n  },\r\n  {\r\n    ''''Property1'''': 1\r\n  },\r\n  [\r\n    1\r\n  ]\r\n]'', json)", span="311-329", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()", file="JsonSerializer.cs"];
m17_52 [label="string json = left.ToString()", span="309-309", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()", file="JsonSerializer.cs"];
m17_49 [label="var left = (JArray)JToken.FromObject(new object[]\r\n                {\r\n                    true,\r\n                    null,\r\n                    new { Property1 = 1 },\r\n                    new object[] { 1 },\r\n                    new { Property1 = 1 },\r\n                    1,\r\n                    new object[] { 1 }\r\n                })", span="283-292", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()", file="JsonSerializer.cs"];
m17_50 [label="var right = (JArray)JToken.FromObject(new object[]\r\n                {\r\n                    1,\r\n                    5,\r\n                    new object[] { 1 },\r\n                    new { Property1 = 1 },\r\n                    true,\r\n                    new { Property1 = 1 },\r\n                    null\r\n                })", span="293-302", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()", file="JsonSerializer.cs"];
m17_51 [label="left.Merge(right, new JsonMergeSettings\r\n            {\r\n                MergeArrayHandling = MergeArrayHandling.Merge\r\n            })", span="304-307", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()", file="JsonSerializer.cs"];
m17_54 [label="Exit Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()", span="281-281", cluster="Newtonsoft.Json.Tests.Linq.MergeTests.MergeMismatchingTypesInArray()", file="JsonSerializer.cs"];
m17_120 [label="Entry lambda expression", span="525-525", cluster="lambda expression", file="JsonSerializer.cs"];
m17_117 [label="Entry lambda expression", span="513-513", cluster="lambda expression", file="JsonSerializer.cs"];
m17_119 [label="Exit lambda expression", span="513-513", cluster="lambda expression", file="JsonSerializer.cs"];
m17_118 [label="(int)i", span="513-513", cluster="lambda expression", file="JsonSerializer.cs"];
m17_121 [label="(int)i", span="525-525", cluster="lambda expression", file="JsonSerializer.cs"];
m17_122 [label="Exit lambda expression", span="525-525", cluster="lambda expression", file="JsonSerializer.cs"];
m17_140 [label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65", cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JsonSerializer.cs"];
m18_1006 [label="Entry Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="54-54", cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs"];
m18_40 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="216-216", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonSerializerInternalReader.cs"];
m18_565 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="39-39", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", file="JsonSerializerInternalReader.cs"];
m18_763 [label="Entry Newtonsoft.Json.JsonReader.GetPosition(int)", span="327-327", cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonSerializerInternalReader.cs"];
m18_899 [label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TrySetMember(System.Dynamic.IDynamicMetaObjectProvider, string, object)", span="105-105", cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TrySetMember(System.Dynamic.IDynamicMetaObjectProvider, string, object)", file="JsonSerializerInternalReader.cs"];
m18_104 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="237-237", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_105 [label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="239-239", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_108 [label="reader.TokenType == JsonToken.PropertyName", span="248-248", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", color=green, community=0];
m18_109 [label="string propertyName = (string)reader.Value", span="250-250", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", color=green, community=0];
m18_110 [label="!reader.Read()", span="253-253", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_111 [label="reader.TokenType == JsonToken.Comment", span="257-257", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_112 [label="CheckPropertyName(reader, propertyName)", span="259-259", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_114 [label="writer.WriteToken(reader, true, true, false)", span="265-265", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_115 [label="reader.TokenType == JsonToken.Comment", span="267-267", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_118 [label="reader.Read()", span="276-276", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_119 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="278-278", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_106 [label="JTokenWriter writer = new JTokenWriter()", span="242-242", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_107 [label="writer.WriteStartObject()", span="244-244", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_113 [label="writer.WritePropertyName(propertyName)", span="264-264", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_116 [label="writer.WriteEndObject()", span="273-273", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_117 [label="return writer.Token;", span="274-274", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_120 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="237-237", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_75 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", span="2209-2209", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1041 [label=hasConverter, span="2213-2213", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1042 [label="return reader.Read();", span="2215-2215", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1043 [label="ReadType t = (contract != null) ? contract.InternalReadType : ReadType.Read", span="2218-2218", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1046 [label="!reader.Read()", span="2225-2225", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_1048 [label="reader.TokenType == JsonToken.Comment", span="2229-2229", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_1051 [label="reader.ReadAsInt32()", span="2233-2233", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1053 [label="reader.ReadAsDecimal()", span="2236-2236", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1055 [label="reader.ReadAsBytes()", span="2239-2239", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1057 [label="reader.ReadAsString()", span="2242-2242", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1059 [label="reader.ReadAsDateTime()", span="2245-2245", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1061 [label="reader.ReadAsDateTimeOffset()", span="2249-2249", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1063 [label="return (reader.TokenType != JsonToken.None);", span="2256-2256", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1044 [label=t, span="2220-2220", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1045 [label="ReadType.Read", span="2222-2222", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1050 [label="ReadType.ReadAsInt32", span="2232-2232", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1052 [label="ReadType.ReadAsDecimal", span="2235-2235", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1054 [label="ReadType.ReadAsBytes", span="2238-2238", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1056 [label="ReadType.ReadAsString", span="2241-2241", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1058 [label="ReadType.ReadAsDateTime", span="2244-2244", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1060 [label="ReadType.ReadAsDateTimeOffset", span="2248-2248", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1062 [label="throw new ArgumentOutOfRangeException();", span="2253-2253", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1047 [label="return false;", span="2227-2227", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_1049 [label="return true;", span="2231-2231", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_1064 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", span="2209-2209", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs"];
m18_1138 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="JsonSerializerInternalReader.cs"];
m18_48 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="138-138", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_49 [label="reader == null", span="140-140", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_50 [label="throw new ArgumentNullException(nameof(reader));", span="142-142", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_51 [label="JsonContract contract = GetContractSafe(objectType)", span="145-145", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_53 [label="reader.TokenType == JsonToken.None && !ReadForType(reader, contract, converter != null)", span="151-151", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_55 [label="throw JsonSerializationException.Create(reader, ''No JSON content found and type '{0}' is not nullable.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="155-155", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_59 [label="deserializedValue = DeserializeConvertable(converter, reader, objectType, null)", span="165-165", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_60 [label="deserializedValue = CreateValueInternal(reader, objectType, contract, null, null, null, null)", span="169-169", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_61 [label=checkAdditionalContent, span="172-172", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_62 [label="reader.Read() && reader.TokenType != JsonToken.Comment", span="174-174", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_66 [label="IsErrorHandled(null, contract, null, reader as IJsonLineInfo, reader.Path, ex)", span="184-184", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_67 [label="HandleError(reader, false, 0)", span="186-186", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_52 [label="JsonConverter converter = GetConverter(contract, null, null, null)", span="149-149", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_54 [label="contract != null && !contract.IsNullable", span="153-153", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_58 [label="converter != null && converter.CanRead", span="163-163", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_57 [label="object deserializedValue", span="161-161", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_56 [label="return null;", span="158-158", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_64 [label="return deserializedValue;", span="180-180", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_63 [label="throw new JsonSerializationException(''Additional text found in JSON string after finishing deserializing object.'');", span="176-176", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_65 [label=Exception, span="182-182", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_69 [label="ClearErrorContext()", span="194-194", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_68 [label="return null;", span="187-187", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_70 [label="throw;", span="195-195", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_71 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="138-138", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs"];
m18_39 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="JsonSerializerInternalReader.cs"];
m18_76 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="2107-2107", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs"];
m18_999 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="2109-2109", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs"];
m18_1000 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="2111-2111", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs"];
m18_1001 [label="object value = converter.ReadJson(reader, objectType, existingValue, GetInternalSerializer())", span="2114-2114", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs"];
m18_1003 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="2118-2118", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs"];
m18_1002 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="2116-2116", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs"];
m18_1004 [label="return value;", span="2121-2121", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs"];
m18_1005 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="2107-2107", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs"];
m18_348 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m18_759 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerInternalReader.cs"];
m18_87 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="225-225", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerInternalReader.cs"];
m18_982 [label="Entry Unk.All", span="", cluster="Unk.All", file="JsonSerializerInternalReader.cs"];
m18_499 [label="Entry System.Enum.ToObject(System.Type, object)", span="0-0", cluster="System.Enum.ToObject(System.Type, object)", file="JsonSerializerInternalReader.cs"];
m18_1141 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="2560-2560", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs"];
m18_1201 [label="property != null && requiredProperties != null", span="2562-2562", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs"];
m18_1203 [label="reader.TokenType", span="2565-2565", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs"];
m18_1205 [label="propertyPresence = (CoerceEmptyStringToNull(property.PropertyType, property.PropertyContract, (string)reader.Value))\r\n                            ? PropertyPresence.Null\r\n                            : PropertyPresence.Value", span="2568-2570", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs"];
m18_1210 [label="requiredProperties[property] = propertyPresence", span="2581-2581", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs"];
m18_1202 [label="PropertyPresence propertyPresence", span="2564-2564", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs"];
m18_1204 [label="JsonToken.String", span="2567-2567", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs"];
m18_1206 [label="JsonToken.Null", span="2572-2572", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs"];
m18_1209 [label="propertyPresence = PropertyPresence.Value", span="2577-2577", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs"];
m18_1207 [label="JsonToken.Undefined", span="2573-2573", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs"];
m18_1208 [label="propertyPresence = PropertyPresence.Null", span="2574-2574", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs"];
m18_1211 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="2560-2560", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs"];
m18_564 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="172-172", cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonSerializerInternalReader.cs"];
m18_561 [label="Entry System.Type.IsValueType()", span="511-511", cluster="System.Type.IsValueType()", file="JsonSerializerInternalReader.cs"];
m18_38 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonSerializerInternalReader.cs"];
m18_560 [label="Entry System.Nullable<T>.GetValueOrDefault(T)", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault(T)", file="JsonSerializerInternalReader.cs"];
m18_573 [label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", span="64-64", cluster="Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", file="JsonSerializerInternalReader.cs"];
m18_1040 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", span="2491-2491", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_1174 [label="object value", span="2493-2493", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_1175 [label="contract.ExtensionDataIsJToken", span="2494-2494", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_1176 [label="value = JToken.ReadFrom(reader)", span="2496-2496", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_1177 [label="value = CreateValueInternal(reader, null, null, null, contract, member, null)", span="2500-2500", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_1178 [label="return value;", span="2502-2502", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_1179 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", span="2491-2491", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadExtensionDataValue(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_566 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="1133-1133", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs"];
m18_567 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1137-1137", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs"];
m18_568 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Read object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, id, value.GetType())), null)", span="1139-1139", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs"];
m18_569 [label="Serializer.GetReferenceResolver().AddReference(this, id, value)", span="1142-1142", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs"];
m18_571 [label="throw JsonSerializationException.Create(reader, ''Error reading object reference '{0}'.''.FormatWith(CultureInfo.InvariantCulture, id), ex);", span="1146-1146", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs"];
m18_570 [label=Exception, span="1144-1144", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs"];
m18_572 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="1133-1133", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs"];
m18_761 [label="Entry System.Collections.Generic.Stack<T>.Peek()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Peek()", file="JsonSerializerInternalReader.cs"];
m18_350 [label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", span="38-38", cluster="Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", file="JsonSerializerInternalReader.cs"];
m18_841 [label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", span="40-40", cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.Serialization.JsonSerializerInternalReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_293 [label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31", cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="JsonSerializerInternalReader.cs"];
m18_562 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="1150-1150", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalReader.cs"];
m18_574 [label="return ((value & flag) == flag);", span="1152-1152", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalReader.cs"];
m18_575 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="1150-1150", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalReader.cs"];
m18_37 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", span="844-844", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_428 [label="!reader.Read()", span="846-846", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_429 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="848-848", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_430 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", span="844-844", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_29 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="58-58", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonSerializerInternalReader.cs"];
m18_500 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", span="360-360", cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_166 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonSerializerInternalReader.cs"];
m18_1069 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="439-439", cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonSerializerInternalReader.cs"];
m18_296 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonSerializerInternalReader.cs"];
m18_74 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="377-377", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_186 [label="JsonConverter converter = null", span="379-379", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_187 [label="memberConverter != null", span="380-380", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_188 [label="converter = memberConverter", span="383-383", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_189 [label="containerProperty != null && containerProperty.ItemConverter != null", span="385-385", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_190 [label="converter = containerProperty.ItemConverter", span="387-387", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_191 [label="containerContract != null && containerContract.ItemConverter != null", span="389-389", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_192 [label="converter = containerContract.ItemConverter", span="391-391", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_193 [label="contract != null", span="393-393", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_195 [label="contract.Converter != null", span="396-396", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_196 [label="converter = contract.Converter", span="399-399", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_197 [label="(matchingConverter = Serializer.GetMatchingConverter(contract.UnderlyingType)) != null", span="401-401", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_199 [label="contract.InternalConverter != null", span="406-406", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_200 [label="converter = contract.InternalConverter", span="409-409", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_201 [label="return converter;", span="412-412", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_194 [label="JsonConverter matchingConverter", span="395-395", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_198 [label="converter = matchingConverter", span="404-404", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_202 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="377-377", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_88 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="210-210", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_89 [label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="212-212", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_90 [label="contract != null", span="214-214", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_91 [label="contract.UnderlyingType == typeof(JRaw)", span="216-216", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_92 [label="return JRaw.Create(reader);", span="218-218", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_93 [label="reader.TokenType == JsonToken.Null\r\n                    && !(contract.UnderlyingType == typeof(JValue) || contract.UnderlyingType == typeof(JToken))", span="220-221", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_97 [label="writer.WriteToken(reader)", span="230-230", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_95 [label="JToken token", span="227-227", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_94 [label="return null;", span="223-223", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_96 [label="JTokenWriter writer = new JTokenWriter()", span="228-228", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_98 [label="token = writer.Token", span="231-231", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_99 [label="return token;", span="234-234", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_100 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="210-210", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_496 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="148-148", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="JsonSerializerInternalReader.cs"];
m18_294 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1781-1781", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_854 [label="IDynamicMetaObjectProvider newObject", span="1783-1783", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_855 [label="!contract.IsInstantiable", span="1785-1785", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_856 [label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1787-1787", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_857 [label="contract.DefaultCreator != null &&\r\n                (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1790-1791", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_858 [label="newObject = (IDynamicMetaObjectProvider)contract.DefaultCreator()", span="1793-1793", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_859 [label="throw JsonSerializationException.Create(reader, ''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1797-1797", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_860 [label="id != null", span="1800-1800", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_861 [label="AddReference(reader, id, newObject)", span="1802-1802", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_862 [label="OnDeserializing(reader, contract, newObject)", span="1805-1805", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_863 [label="int initialDepth = reader.Depth", span="1807-1807", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_865 [label="reader.TokenType", span="1812-1812", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_867 [label="string memberName = reader.Value.ToString()", span="1815-1815", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_868 [label="!reader.Read()", span="1819-1819", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_869 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1821-1821", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_870 [label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="1825-1825", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_875 [label="!SetPropertyValue(property, propertyConverter, null, member, reader, newObject)", span="1836-1836", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_876 [label="reader.Skip()", span="1838-1838", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_877 [label="Type t = (JsonTokenUtils.IsPrimitiveToken(reader.TokenType)) ? reader.ValueType : typeof(IDynamicMetaObjectProvider)", span="1843-1843", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_879 [label="JsonConverter dynamicMemberConverter = GetConverter(dynamicMemberContract, null, null, member)", span="1846-1846", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_882 [label="value = DeserializeConvertable(dynamicMemberConverter, reader, t, null)", span="1851-1851", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_883 [label="value = CreateValueInternal(reader, t, dynamicMemberContract, null, null, member, null)", span="1855-1855", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_884 [label="contract.TrySetMember(newObject, memberName, value)", span="1858-1858", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_886 [label="IsErrorHandled(newObject, contract, memberName, reader as IJsonLineInfo, reader.Path, ex)", span="1863-1863", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_887 [label="HandleError(reader, true, initialDepth)", span="1865-1865", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_891 [label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1877-1877", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_892 [label="!finished && reader.Read()", span="1879-1879", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_894 [label="ThrowUnexpectedEndException(reader, contract, newObject, ''Unexpected end when deserializing object.'')", span="1883-1883", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_895 [label="OnDeserialized(reader, contract, newObject)", span="1886-1886", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_896 [label="return newObject;", span="1888-1888", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_864 [label="bool finished = false", span="1809-1809", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_866 [label="JsonToken.PropertyName", span="1814-1814", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_889 [label="JsonToken.EndObject", span="1873-1873", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_871 [label="property != null && property.Writable && !property.Ignored", span="1827-1827", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_872 [label="property.PropertyContract == null", span="1829-1829", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_873 [label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1831-1831", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_874 [label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, null, null)", span="1834-1834", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_885 [label=Exception, span="1861-1861", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_878 [label="JsonContract dynamicMemberContract = GetContractSafe(t)", span="1845-1845", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_880 [label="object value", span="1848-1848", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_881 [label="dynamicMemberConverter != null && dynamicMemberConverter.CanRead", span="1849-1849", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_888 [label="throw;", span="1869-1869", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_890 [label="finished = true", span="1874-1874", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_893 [label="!finished", span="1881-1881", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_897 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1781-1781", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_80 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="2585-2585", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs"];
m18_1212 [label="ClearErrorContext()", span="2587-2587", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs"];
m18_1213 [label=readPastError, span="2589-2589", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs"];
m18_1214 [label="reader.Skip()", span="2591-2591", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs"];
m18_1215 [label="reader.Depth > (initialDepth + 1)", span="2593-2593", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs"];
m18_1216 [label="!reader.Read()", span="2595-2595", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs"];
m18_1217 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="2585-2585", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs"];
m18_843 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1758-1758", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_844 [label="JsonContract itemContract = GetContractSafe(type)", span="1760-1760", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_845 [label="JsonConverter itemConverter = GetConverter(itemContract, null, contract, member)", span="1761-1761", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_846 [label="JsonReader tokenReader = token.CreateReader()", span="1763-1763", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_850 [label="result = DeserializeConvertable(itemConverter, tokenReader, type, null)", span="1769-1769", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_851 [label="result = CreateValueInternal(tokenReader, type, itemContract, null, contract, member, null)", span="1773-1773", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_849 [label="itemConverter != null && itemConverter.CanRead", span="1767-1767", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_847 [label="CheckedRead(tokenReader)", span="1764-1764", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_848 [label="object result", span="1766-1766", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_852 [label="return result;", span="1776-1776", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_853 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", span="1758-1758", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializableItem(Newtonsoft.Json.Linq.JToken, System.Type, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs"];
m18_35 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1590-1590", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_771 [label="IWrappedCollection wrappedCollection = list as IWrappedCollection", span="1592-1592", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_772 [label="object underlyingList = wrappedCollection != null ? wrappedCollection.UnderlyingCollection : list", span="1593-1593", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_773 [label="id != null", span="1595-1595", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_774 [label="AddReference(reader, id, underlyingList)", span="1597-1597", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_775 [label="list.IsFixedSize", span="1601-1601", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_776 [label="reader.Skip()", span="1603-1603", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_778 [label="OnDeserializing(reader, contract, underlyingList)", span="1607-1607", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_779 [label="int initialDepth = reader.Depth", span="1609-1609", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_780 [label="contract.ItemContract == null", span="1611-1611", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_781 [label="contract.ItemContract = GetContractSafe(contract.CollectionItemType)", span="1613-1613", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_782 [label="JsonConverter collectionItemConverter = GetConverter(contract.ItemContract, null, contract, containerProperty)", span="1616-1616", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_785 [label="ReadForType(reader, contract.ItemContract, collectionItemConverter != null)", span="1625-1625", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_786 [label="reader.TokenType", span="1627-1627", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_792 [label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1639-1639", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_793 [label="value = CreateValueInternal(reader, contract.CollectionItemType, contract.ItemContract, null, contract, containerProperty, null)", span="1643-1643", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_794 [label="list.Add(value)", span="1646-1646", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_796 [label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1657-1657", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_797 [label="IsErrorHandled(underlyingList, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1659-1659", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_798 [label="HandleError(reader, true, initialDepth)", span="1661-1661", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_800 [label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1667-1667", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_805 [label="ThrowUnexpectedEndException(reader, contract, underlyingList, ''Unexpected end when deserializing array.'')", span="1683-1683", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_806 [label="OnDeserialized(reader, contract, underlyingList)", span="1686-1686", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_777 [label="return underlyingList;", span="1604-1604", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_807 [label="return underlyingList;", span="1687-1687", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_783 [label="int? previousErrorIndex = null", span="1618-1618", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_791 [label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1637-1637", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_784 [label="bool finished = false", span="1620-1620", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_799 [label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1663-1663", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_803 [label="!finished", span="1679-1679", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_804 [label="!finished", span="1681-1681", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_787 [label="JsonToken.EndArray", span="1629-1629", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_789 [label="JsonToken.Comment", span="1632-1632", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_790 [label="object value", span="1635-1635", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_788 [label="finished = true", span="1630-1630", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_795 [label=Exception, span="1655-1655", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_801 [label="previousErrorIndex = errorPosition.Position", span="1671-1671", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_802 [label="throw;", span="1676-1676", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_808 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1590-1590", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_418 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="824-824", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_419 [label="contract == null", span="826-826", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_420 [label="throw JsonSerializationException.Create(reader, ''Could not resolve type '{0}' to a JsonContract.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="828-828", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_421 [label="JsonArrayContract arrayContract = contract as JsonArrayContract", span="831-831", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_424 [label="message = message.FormatWith(CultureInfo.InvariantCulture, objectType, GetExpectedDescription(contract))", span="836-836", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_425 [label="throw JsonSerializationException.Create(reader, message);", span="838-838", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_422 [label="arrayContract == null", span="832-832", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_426 [label="return arrayContract;", span="841-841", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_423 [label="string message = @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type '{0}' because the type requires a {1} to deserialize correctly.'' + Environment.NewLine +\r\n                                 @''To fix this error either change the JSON to a {1} or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.'' + Environment.NewLine", span="834-835", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_427 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="824-824", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_103 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="483-483", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_43 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="128-128", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs"];
m18_44 [label="type == null", span="130-130", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs"];
m18_46 [label="return Serializer._contractResolver.ResolveContract(type);", span="135-135", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs"];
m18_45 [label="return null;", span="132-132", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs"];
m18_47 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="128-128", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs"];
m18_287 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="590-590", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_297 [label="id = null", span="592-592", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_299 [label="reader.TokenType == JsonToken.StartObject", span="595-595", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_300 [label="JObject current = (JObject)reader.CurrentToken", span="597-597", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_317 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved object reference '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, newValue.GetType())), null)", span="631-631", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_318 [label="reader.Skip()", span="634-634", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_325 [label="ResolveTypeName(typeTokenReader, ref objectType, ref contract, member, containerContract, containerMember, qualifiedTypeName)", span="644-644", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_329 [label="CheckedRead(reader)", span="651-651", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_330 [label="reader.TokenType == JsonToken.PropertyName", span="652-652", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_331 [label="(string)reader.Value == JsonTypeReflector.ValuePropertyName", span="654-654", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", color=green, community=0];
m18_333 [label="CheckedRead(reader)", span="660-660", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_334 [label="reader.Skip()", span="661-661", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_342 [label="newValue = CreateList(listReader, objectType, contract, member, existingValue, id)", span="675-675", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_343 [label="reader.Skip()", span="677-677", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_345 [label="CheckedRead(reader)", span="682-682", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_298 [label="newValue = null", span="593-593", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_301 [label="JToken refToken = current[JsonTypeReflector.RefPropertyName]", span="599-599", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_320 [label="JToken typeToken = current[JsonTypeReflector.TypePropertyName]", span="638-638", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_326 [label="JToken valueToken = current[JsonTypeReflector.ValuePropertyName]", span="646-646", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_335 [label="JToken idToken = current[JsonTypeReflector.IdPropertyName]", span="665-665", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_338 [label="JToken valuesToken = current[JsonTypeReflector.ArrayValuesPropertyName]", span="670-670", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_302 [label="refToken != null", span="600-600", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_303 [label="refToken.Type != JTokenType.String && refToken.Type != JTokenType.Null", span="602-602", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_304 [label="throw JsonSerializationException.Create(refToken, refToken.Path, ''JSON reference {0} property must have a string or null value.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName), null);", span="604-604", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_305 [label="JToken property = refToken.Parent", span="607-607", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_311 [label="string reference = (string)refToken", span="618-618", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_306 [label="JToken additionalContent = null", span="608-608", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_307 [label="property.Next != null", span="609-609", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_308 [label="additionalContent = property.Next", span="611-611", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_309 [label="property.Previous != null", span="613-613", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_310 [label="additionalContent = property.Previous", span="615-615", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_313 [label="additionalContent != null", span="622-622", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_314 [label="throw JsonSerializationException.Create(additionalContent, additionalContent.Path, ''Additional content found in JSON reference object. A JSON reference object should only have a {0} property.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName), null);", span="624-624", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_312 [label="reference != null", span="620-620", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_315 [label="newValue = Serializer.GetReferenceResolver().ResolveReference(this, reference)", span="627-627", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_316 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="629-629", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_319 [label="return true;", span="635-635", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_321 [label="typeToken != null", span="639-639", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_322 [label="string qualifiedTypeName = (string)typeToken", span="641-641", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_323 [label="JsonReader typeTokenReader = typeToken.CreateReader()", span="642-642", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_324 [label="CheckedRead(typeTokenReader)", span="643-643", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_327 [label="valueToken != null", span="647-647", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_328 [label=true, span="649-649", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_332 [label="return false;", span="656-656", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_336 [label="idToken != null", span="666-666", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_337 [label="id = (string)idToken", span="668-668", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", color=green, community=0];
m18_339 [label="valuesToken != null", span="671-671", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_340 [label="JsonReader listReader = valuesToken.CreateReader()", span="673-673", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_341 [label="CheckedRead(listReader)", span="674-674", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_344 [label="return true;", span="678-678", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_346 [label="return false;", span="683-683", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_347 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="590-590", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_647 [label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", span="388-388", cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalReader.cs"];
m18_1065 [label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="415-415", cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonSerializerInternalReader.cs"];
m18_527 [label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44", cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="JsonSerializerInternalReader.cs"];
m18_165 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="JsonSerializerInternalReader.cs"];
m18_642 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1296-1296", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs"];
m18_643 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1298-1298", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs"];
m18_644 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1300-1300", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs"];
m18_645 [label="contract.InvokeOnDeserialized(value, Serializer._context)", span="1303-1303", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs"];
m18_646 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1296-1296", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs"];
m18_611 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="293-293", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonSerializerInternalReader.cs"];
m18_72 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerInternalReader.cs"];
m18_840 [label="Entry System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", file="JsonSerializerInternalReader.cs"];
m18_498 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="724-724", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerInternalReader.cs"];
m18_989 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", span="2505-2505", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1180 [label="presence == PropertyPresence.None || presence == PropertyPresence.Null", span="2507-2507", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1181 [label="Required resolvedRequired = property._required ?? contract.ItemRequired ?? Required.Default", span="2511-2511", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1182 [label=presence, span="2513-2513", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1185 [label="throw JsonSerializationException.Create(reader, ''Required property '{0}' not found in JSON.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2518-2518", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1186 [label="setDefaultValue && !property.Ignored", span="2521-2521", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1187 [label="property.PropertyContract == null", span="2523-2523", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1188 [label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="2525-2525", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1189 [label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate) && property.Writable", span="2528-2528", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1190 [label="property.ValueProvider.SetValue(newObject, EnsureType(reader, property.GetResolvedDefaultValue(), CultureInfo.InvariantCulture, property.PropertyContract, property.PropertyType))", span="2530-2530", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1193 [label="throw JsonSerializationException.Create(reader, ''Required property '{0}' expects a value but got null.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2537-2537", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1195 [label="throw JsonSerializationException.Create(reader, ''Required property '{0}' expects a non-null value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2541-2541", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1197 [label="IsErrorHandled(newObject, contract, property.PropertyName, reader as IJsonLineInfo, reader.Path, ex)", span="2548-2548", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1198 [label="HandleError(reader, true, initialDepth)", span="2550-2550", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1184 [label="resolvedRequired == Required.AllowNull || resolvedRequired == Required.Always", span="2516-2516", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1192 [label="resolvedRequired == Required.Always", span="2535-2535", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1194 [label="resolvedRequired == Required.DisallowNull", span="2539-2539", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1183 [label="PropertyPresence.None", span="2515-2515", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1191 [label="PropertyPresence.Null", span="2534-2534", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1196 [label=Exception, span="2546-2546", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1199 [label="throw;", span="2554-2554", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_1200 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", span="2505-2505", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndProcessProperty(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence, bool)", file="JsonSerializerInternalReader.cs"];
m18_467 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="1177-1177", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_584 [label="!contract.CanDeserialize", span="1180-1180", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_585 [label="throw JsonSerializationException.Create(reader, ''Cannot create and populate list type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.CreatedType));", span="1182-1182", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_586 [label="contract.OverrideCreator != null", span="1185-1185", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_587 [label="contract.HasParameterizedCreator", span="1187-1187", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_589 [label="return contract.CreateTemporaryCollection();", span="1190-1190", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_591 [label="return (IList)contract.OverrideCreator();", span="1195-1195", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_592 [label="contract.IsReadOnlyOrFixedSize", span="1198-1198", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_594 [label="IList list = contract.CreateTemporaryCollection()", span="1201-1201", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_595 [label="contract.ShouldCreateWrapper", span="1203-1203", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_596 [label="list = contract.CreateWrapper(list)", span="1205-1205", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_598 [label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1210-1210", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_599 [label="object list = contract.DefaultCreator()", span="1212-1212", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_600 [label="contract.ShouldCreateWrapper", span="1214-1214", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_601 [label="list = contract.CreateWrapper(list)", span="1216-1216", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_604 [label="contract.HasParameterizedCreatorInternal", span="1222-1222", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_606 [label="return contract.CreateTemporaryCollection();", span="1225-1225", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_607 [label="!contract.IsInstantiable", span="1229-1229", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_608 [label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1231-1231", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_609 [label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1234-1234", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_588 [label="createdFromNonDefaultCreator = true", span="1189-1189", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_590 [label="createdFromNonDefaultCreator = false", span="1194-1194", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_593 [label="createdFromNonDefaultCreator = true", span="1200-1200", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_597 [label="return list;", span="1208-1208", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_603 [label="return (IList)list;", span="1220-1220", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_602 [label="createdFromNonDefaultCreator = false", span="1219-1219", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_605 [label="createdFromNonDefaultCreator = true", span="1224-1224", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_610 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="1177-1177", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_979 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="JsonSerializerInternalReader.cs"];
m18_163 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="948-948", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_475 [label="targetType == null", span="950-950", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_476 [label="return value;", span="952-952", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_477 [label="Type valueType = ReflectionUtils.GetObjectType(value)", span="955-955", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_478 [label="valueType != targetType", span="959-959", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_479 [label="value == null && contract.IsNullable", span="961-961", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_481 [label="contract.IsConvertable", span="968-968", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_482 [label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="970-970", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_483 [label="contract.IsEnum", span="972-972", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_484 [label="value is string", span="974-974", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_485 [label="return Enum.Parse(contract.NonNullableUnderlyingType, value.ToString(), true);", span="976-976", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_487 [label="return Enum.ToObject(contract.NonNullableUnderlyingType, value);", span="980-980", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_488 [label="value is BigInteger", span="985-985", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_489 [label="return ConvertUtils.FromBigInteger((BigInteger)value, contract.NonNullableUnderlyingType);", span="987-987", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_490 [label="return Convert.ChangeType(value, contract.NonNullableUnderlyingType, culture);", span="992-992", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_491 [label="return ConvertUtils.ConvertOrCast(value, culture, contract.NonNullableUnderlyingType);", span="995-995", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_493 [label="throw JsonSerializationException.Create(reader, ''Error converting value {0} to type '{1}'.''.FormatWith(CultureInfo.InvariantCulture, MiscellaneousUtils.FormatValueForPrint(value), targetType), ex);", span="999-999", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_494 [label="return value;", span="1003-1003", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_480 [label="return null;", span="963-963", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_486 [label="ConvertUtils.IsInteger(primitiveContract.TypeCode)", span="978-978", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_492 [label=Exception, span="997-997", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_495 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="948-948", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_417 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m18_164 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", span="348-348", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", file="JsonSerializerInternalReader.cs"];
m18_167 [label="return string.IsNullOrEmpty(s) && objectType != null && objectType != typeof(string) && objectType != typeof(object) && contract != null && contract.IsNullable;", span="350-350", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", file="JsonSerializerInternalReader.cs"];
m18_168 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", span="348-348", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CoerceEmptyStringToNull(System.Type, Newtonsoft.Json.Serialization.JsonContract, string)", file="JsonSerializerInternalReader.cs"];
m18_415 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="858-858", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JsonSerializerInternalReader.cs"];
m18_73 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JsonSerializerInternalReader.cs"];
m18_987 [label="Entry System.Collections.IDictionary.Add(object, object)", span="0-0", cluster="System.Collections.IDictionary.Add(object, object)", file="JsonSerializerInternalReader.cs"];
m18_760 [label="Entry System.Collections.Generic.Stack<T>.Pop()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Pop()", file="JsonSerializerInternalReader.cs"];
m18_842 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonSerializerInternalReader.cs"];
m18_82 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="200-200", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs"];
m18_83 [label="InternalSerializer == null", span="202-202", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs"];
m18_84 [label="InternalSerializer = new JsonSerializerProxy(this)", span="204-204", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs"];
m18_85 [label="return InternalSerializer;", span="207-207", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs"];
m18_86 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="200-200", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs"];
m18_78 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonSerializerInternalReader.cs"];
m18_502 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="615-615", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_470 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="332-332", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="JsonSerializerInternalReader.cs"];
m18_530 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="JsonSerializerInternalReader.cs"];
m18_352 [label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="25-25", cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m18_161 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="415-415", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_204 [label="string id", span="417-417", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", color=green, community=0];
m18_205 [label="Type resolvedObjectType = objectType", span="418-418", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_207 [label="CheckedRead(reader)", span="423-423", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_210 [label="JTokenReader tokenReader = reader as JTokenReader", span="428-428", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_212 [label="JToken t = JToken.ReadFrom(reader)", span="431-431", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_214 [label="tokenReader.Culture = reader.Culture", span="433-433", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_215 [label="tokenReader.DateFormatString = reader.DateFormatString", span="434-434", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_216 [label="tokenReader.DateParseHandling = reader.DateParseHandling", span="435-435", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", color=green, community=0];
m18_217 [label="tokenReader.DateTimeZoneHandling = reader.DateTimeZoneHandling", span="436-436", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_218 [label="tokenReader.FloatParseHandling = reader.FloatParseHandling", span="437-437", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_219 [label="tokenReader.SupportMultipleContent = reader.SupportMultipleContent", span="438-438", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_223 [label="ReadMetadataPropertiesToken(tokenReader, ref resolvedObjectType, ref contract, member, containerContract, containerMember, existingValue, out newValue, out id)", span="447-447", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_225 [label="CheckedRead(reader)", span="454-454", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_227 [label="ReadMetadataProperties(reader, ref resolvedObjectType, ref contract, member, containerContract, containerMember, existingValue, out newValue, out id)", span="456-456", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_229 [label="HasNoDefinedType(contract)", span="462-462", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_230 [label="return CreateJObject(reader);", span="464-464", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_231 [label="contract.ContractType", span="467-467", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_234 [label="JsonObjectContract objectContract = (JsonObjectContract)contract", span="472-472", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_236 [label="existingValue != null && (resolvedObjectType == objectType || resolvedObjectType.IsAssignableFrom(existingValue.GetType()))", span="475-475", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_237 [label="targetObject = existingValue", span="477-477", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_238 [label="targetObject = CreateNewObject(reader, objectContract, member, containerMember, id, out createdFromNonDefaultCreator)", span="481-481", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_241 [label="return PopulateObject(targetObject, reader, objectContract, member, id);", span="490-490", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_243 [label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="494-494", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", color=green, community=0];
m18_244 [label="Serializer.MetadataPropertyHandling != MetadataPropertyHandling.Ignore\r\n                        && reader.TokenType == JsonToken.PropertyName\r\n                        && string.Equals(reader.Value.ToString(), JsonTypeReflector.ValuePropertyName, StringComparison.Ordinal)", span="496-498", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_245 [label="CheckedRead(reader)", span="500-500", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_246 [label="reader.TokenType == JsonToken.StartObject", span="504-504", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_247 [label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing primitive value: '' + reader.TokenType);", span="506-506", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_248 [label="object value = CreateValueInternal(reader, resolvedObjectType, primitiveContract, member, null, null, existingValue)", span="509-509", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_249 [label="CheckedRead(reader)", span="511-511", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_252 [label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)contract", span="518-518", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_254 [label="existingValue == null", span="521-521", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_256 [label="IDictionary dictionary = CreateNewDictionary(reader, dictionaryContract, out createdFromNonDefaultCreator)", span="524-524", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_259 [label="throw JsonSerializationException.Create(reader, ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="530-530", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_260 [label="contract.OnSerializingCallbacks.Count > 0", span="533-533", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_261 [label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="535-535", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_262 [label="contract.OnErrorCallbacks.Count > 0", span="538-538", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_263 [label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on readonly list, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="540-540", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_265 [label="throw JsonSerializationException.Create(reader, ''Cannot deserialize readonly or fixed size dictionary: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="545-545", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_266 [label="PopulateDictionary(dictionary, reader, dictionaryContract, member, id)", span="549-549", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_273 [label="targetDictionary = PopulateDictionary(dictionaryContract.ShouldCreateWrapper ? dictionaryContract.CreateWrapper(existingValue) : (IDictionary)existingValue, reader, dictionaryContract, member, id)", span="566-566", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_276 [label="JsonDynamicContract dynamicContract = (JsonDynamicContract)contract", span="573-573", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_277 [label="return CreateDynamic(reader, dynamicContract, member, id);", span="574-574", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_279 [label="JsonISerializableContract serializableContract = (JsonISerializableContract)contract", span="578-578", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_280 [label="return CreateISerializable(reader, serializableContract, member, id);", span="579-579", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_282 [label="message = message.FormatWith(CultureInfo.InvariantCulture, resolvedObjectType, GetExpectedDescription(contract))", span="585-585", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_283 [label="throw JsonSerializationException.Create(reader, message);", span="587-587", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_206 [label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.Ignore", span="420-420", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_209 [label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.ReadAhead", span="426-426", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_208 [label="id = null", span="424-424", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_211 [label="tokenReader == null", span="429-429", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_222 [label="object newValue", span="446-446", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_213 [label="tokenReader = (JTokenReader)t.CreateReader()", span="432-432", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_220 [label="CheckedRead(tokenReader)", span="441-441", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_221 [label="reader = tokenReader", span="443-443", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_224 [label="return newValue;", span="449-449", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_258 [label="id != null", span="528-528", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_226 [label="object newValue", span="455-455", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_228 [label="return newValue;", span="458-458", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_232 [label="JsonContractType.Object", span="469-469", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_242 [label="JsonContractType.Primitive", span="492-492", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_251 [label="JsonContractType.Dictionary", span="516-516", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_275 [label="JsonContractType.Dynamic", span="572-572", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_278 [label="JsonContractType.Serializable", span="577-577", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_233 [label="bool createdFromNonDefaultCreator = false", span="471-471", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_239 [label=createdFromNonDefaultCreator, span="485-485", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_235 [label="object targetObject", span="473-473", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_240 [label="return targetObject;", span="487-487", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_281 [label="string message = @''Cannot deserialize the current JSON object (e.g. {{''''name'''':''''value''''}}) into type '{0}' because the type requires a {1} to deserialize correctly.'' + Environment.NewLine +\r\n                             @''To fix this error either change the JSON to a {1} or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine", span="583-584", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_250 [label="return value;", span="512-512", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_253 [label="object targetDictionary", span="519-519", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_264 [label="!dictionaryContract.HasParameterizedCreatorInternal", span="543-543", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_268 [label="ObjectConstructor<object> creator = dictionaryContract.OverrideCreator ?? dictionaryContract.ParameterizedCreator", span="553-553", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_255 [label="bool createdFromNonDefaultCreator", span="523-523", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_257 [label=createdFromNonDefaultCreator, span="526-526", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_267 [label=createdFromNonDefaultCreator, span="551-551", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_269 [label="return creator(dictionary);", span="555-555", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_270 [label="dictionary is IWrappedDictionary", span="557-557", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_271 [label="return ((IWrappedDictionary)dictionary).UnderlyingDictionary;", span="559-559", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_272 [label="targetDictionary = dictionary", span="562-562", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_274 [label="return targetDictionary;", span="569-569", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_284 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="415-415", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_353 [label="Entry Newtonsoft.Json.JsonReader.Skip()", span="901-901", cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonSerializerInternalReader.cs"];
m18_704 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1571-1571", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs"];
m18_765 [label="throw JsonSerializationException.Create(reader, message);", span="1575-1575", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs"];
m18_767 [label="IsErrorHandled(currentObject, contract, null, reader as IJsonLineInfo, reader.Path, ex)", span="1579-1579", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs"];
m18_768 [label="HandleError(reader, false, 0)", span="1581-1581", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs"];
m18_766 [label=Exception, span="1577-1577", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs"];
m18_769 [label="throw;", span="1585-1585", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs"];
m18_770 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1571-1571", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs"];
m18_504 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="1006-1006", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_505 [label="object currentValue", span="1008-1008", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_509 [label="CalculatePropertyDetails(property, ref propertyConverter, containerContract, containerProperty, reader, target, out useExistingValue, out currentValue, out propertyContract, out gottenCurrentValue)", span="1013-1013", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_513 [label="!gottenCurrentValue && target != null && property.Readable", span="1022-1022", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_514 [label="currentValue = property.ValueProvider.GetValue(target)", span="1024-1024", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_515 [label="value = DeserializeConvertable(propertyConverter, reader, property.PropertyType, currentValue)", span="1027-1027", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_516 [label="value = CreateValueInternal(reader, property.PropertyType, propertyContract, property, containerContract, containerProperty, (useExistingValue) ? currentValue : null)", span="1031-1031", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_517 [label="(!useExistingValue || value != currentValue)\r\n                && ShouldSetPropertyValue(property, value)", span="1037-1038", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_518 [label="property.ValueProvider.SetValue(target, value)", span="1040-1040", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_519 [label="property.SetIsSpecified != null", span="1042-1042", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_521 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''IsSpecified for property '{0}' on {1} set to true.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType)), null)", span="1046-1046", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_522 [label="property.SetIsSpecified(target, true)", span="1049-1049", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_506 [label="bool useExistingValue", span="1009-1009", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_507 [label="JsonContract propertyContract", span="1010-1010", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_508 [label="bool gottenCurrentValue", span="1011-1011", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_510 [label="return false;", span="1015-1015", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_511 [label="object value", span="1018-1018", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_512 [label="propertyConverter != null && propertyConverter.CanRead", span="1020-1020", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_524 [label="return useExistingValue;", span="1056-1056", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_520 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1044-1044", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_523 [label="return true;", span="1052-1052", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_525 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="1006-1006", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_703 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="437-437", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(string, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="JsonSerializerInternalReader.cs"];
m18_33 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs"];
m18_351 [label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonSerializerInternalReader.cs"];
m18_354 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="776-776", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_397 [label="TypeNameHandling resolvedTypeNameHandling =\r\n                ((member != null) ? member.TypeNameHandling : null)\r\n                ?? ((containerContract != null) ? containerContract.ItemTypeNameHandling : null)\r\n                ?? ((containerMember != null) ? containerMember.ItemTypeNameHandling : null)\r\n                ?? Serializer._typeNameHandling", span="778-782", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_401 [label="ReflectionUtils.SplitFullyQualifiedTypeName(qualifiedTypeName, out typeName, out assemblyName)", span="788-788", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_405 [label="throw JsonSerializationException.Create(reader, ''Error resolving type specified in JSON '{0}'.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName), ex);", span="797-797", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_407 [label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' was not resolved.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName));", span="802-802", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_409 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved type '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName, specifiedType)), null)", span="807-807", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_410 [label="objectType != null\r\n#if !(NET35 || NET20 || PORTABLE40)\r\n                    && objectType != typeof(IDynamicMetaObjectProvider)\r\n#endif\r\n                    && !objectType.IsAssignableFrom(specifiedType)", span="810-814", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_411 [label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' is not compatible with '{1}'.''.FormatWith(CultureInfo.InvariantCulture, specifiedType.AssemblyQualifiedName, objectType.AssemblyQualifiedName));", span="816-816", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_398 [label="resolvedTypeNameHandling != TypeNameHandling.None", span="784-784", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_399 [label="string typeName", span="786-786", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_400 [label="string assemblyName", span="787-787", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_402 [label="Type specifiedType", span="790-790", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_403 [label="specifiedType = Serializer._binder.BindToType(assemblyName, typeName)", span="793-793", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_404 [label=Exception, span="795-795", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_406 [label="specifiedType == null", span="800-800", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_412 [label="objectType = specifiedType", span="819-819", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_413 [label="contract = GetContractSafe(specifiedType)", span="820-820", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_408 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="805-805", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_414 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="776-776", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_471 [label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0", cluster="System.Array.CreateInstance(System.Type, int)", file="JsonSerializerInternalReader.cs"];
m18_758 [label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerInternalReader.cs"];
m18_986 [label="Entry System.Collections.ObjectModel.Collection<T>.IndexOf(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.IndexOf(T)", file="JsonSerializerInternalReader.cs"];
m18_978 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JsonSerializerInternalReader.cs"];
m18_34 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="268-268", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonSerializerInternalReader.cs"];
m18_529 [label="Entry Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", span="37-37", cluster="Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", file="JsonSerializerInternalReader.cs"];
m18_636 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1286-1286", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs"];
m18_637 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1288-1288", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs"];
m18_638 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1290-1290", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs"];
m18_639 [label="contract.InvokeOnDeserializing(value, Serializer._context)", span="1293-1293", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs"];
m18_640 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1286-1286", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs"];
m18_203 [label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="1098-1098", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializerInternalReader.cs"];
m18_32 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSerializerInternalReader.cs"];
m18_162 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="852-852", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_431 [label="object value", span="854-854", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_432 [label="HasNoDefinedType(contract)", span="856-856", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_433 [label="return CreateJToken(reader, contract);", span="858-858", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_434 [label="JsonArrayContract arrayContract = EnsureArrayContract(reader, objectType, contract)", span="861-861", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_435 [label="existingValue == null", span="863-863", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_437 [label="IList list = CreateNewList(reader, arrayContract, out createdFromNonDefaultCreator)", span="866-866", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_439 [label="id != null", span="870-870", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_440 [label="throw JsonSerializationException.Create(reader, ''Cannot preserve reference to array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="872-872", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_441 [label="contract.OnSerializingCallbacks.Count > 0", span="875-875", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_442 [label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="877-877", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_443 [label="contract.OnErrorCallbacks.Count > 0", span="880-880", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_444 [label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="882-882", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_446 [label="throw JsonSerializationException.Create(reader, ''Cannot deserialize readonly or fixed size list: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="887-887", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_448 [label="PopulateList(list, reader, arrayContract, member, id)", span="893-893", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_449 [label="PopulateMultidimensionalArray(list, reader, arrayContract, member, id)", span="897-897", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_452 [label="list = CollectionUtils.ToMultidimensionalArray(list, arrayContract.CollectionItemType, contract.CreatedType.GetArrayRank())", span="904-904", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_463 [label="throw JsonSerializationException.Create(reader, ''Cannot populate list type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.CreatedType));", span="930-930", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_464 [label="value = PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(existingValue) : (IList)existingValue, reader, arrayContract, member, id)", span="933-933", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_445 [label="!arrayContract.HasParameterizedCreatorInternal && !arrayContract.IsArray", span="885-885", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_447 [label="!arrayContract.IsMultidimensionalArray", span="891-891", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_451 [label="arrayContract.IsMultidimensionalArray", span="902-902", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_453 [label="arrayContract.IsArray", span="906-906", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_454 [label="Array a = Array.CreateInstance(arrayContract.CollectionItemType, list.Count)", span="908-908", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_457 [label="ObjectConstructor<object> creator = arrayContract.OverrideCreator ?? arrayContract.ParameterizedCreator", span="914-914", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_462 [label="!arrayContract.CanDeserialize", span="928-928", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_436 [label="bool createdFromNonDefaultCreator", span="865-865", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_438 [label=createdFromNonDefaultCreator, span="868-868", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_450 [label=createdFromNonDefaultCreator, span="900-900", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_455 [label="list.CopyTo(a, 0)", span="909-909", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_458 [label="return creator(list);", span="916-916", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_459 [label="list is IWrappedCollection", span="919-919", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_460 [label="return ((IWrappedCollection)list).UnderlyingCollection;", span="921-921", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_461 [label="value = list", span="924-924", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_456 [label="list = a", span="910-910", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_465 [label="return value;", span="936-936", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_466 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="852-852", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs"];
m18_289 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="939-939", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_473 [label="return (contract == null || contract.UnderlyingType == typeof(object) || contract.ContractType == JsonContractType.Linq\r\n#if !(NET35 || NET20 || PORTABLE40)\r\n                    || contract.UnderlyingType == typeof(IDynamicMetaObjectProvider)\r\n#endif\r\n                );", span="941-945", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_474 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="939-939", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_286 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1883-1883", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSerializerInternalReader.cs"];
m18_984 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerInternalReader.cs"];
m18_497 [label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0", cluster="System.Enum.Parse(System.Type, string, bool)", file="JsonSerializerInternalReader.cs"];
m18_79 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="108-108", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs"];
m18_528 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="1155-1155", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_576 [label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && value == null", span="1157-1157", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_578 [label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n                && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n                && MiscellaneousUtils.ValueEquals(value, property.GetResolvedDefaultValue())", span="1162-1164", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_580 [label="!property.Writable", span="1169-1169", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_577 [label="return false;", span="1159-1159", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_579 [label="return false;", span="1166-1166", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_581 [label="return false;", span="1171-1171", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_582 [label="return true;", span="1174-1174", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_583 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="1155-1155", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_81 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="98-98", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonSerializerInternalReader.cs"];
m18_292 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="1238-1238", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_613 [label="contract.OverrideCreator != null", span="1240-1240", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_614 [label="contract.HasParameterizedCreator", span="1242-1242", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_616 [label="return contract.CreateTemporaryDictionary();", span="1245-1245", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_618 [label="return (IDictionary)contract.OverrideCreator();", span="1250-1250", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_619 [label="contract.IsReadOnlyOrFixedSize", span="1253-1253", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_621 [label="return contract.CreateTemporaryDictionary();", span="1256-1256", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_622 [label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1258-1258", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_623 [label="object dictionary = contract.DefaultCreator()", span="1260-1260", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_624 [label="contract.ShouldCreateWrapper", span="1262-1262", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_625 [label="dictionary = contract.CreateWrapper(dictionary)", span="1264-1264", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_628 [label="contract.HasParameterizedCreatorInternal", span="1270-1270", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_630 [label="return contract.CreateTemporaryDictionary();", span="1273-1273", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_631 [label="!contract.IsInstantiable", span="1277-1277", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_632 [label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1279-1279", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_633 [label="throw JsonSerializationException.Create(reader, ''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1282-1282", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_615 [label="createdFromNonDefaultCreator = true", span="1244-1244", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_617 [label="createdFromNonDefaultCreator = false", span="1249-1249", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_620 [label="createdFromNonDefaultCreator = true", span="1255-1255", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_627 [label="return (IDictionary)dictionary;", span="1268-1268", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_626 [label="createdFromNonDefaultCreator = false", span="1267-1267", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_629 [label="createdFromNonDefaultCreator = true", span="1272-1272", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_634 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="1238-1238", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_983 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreatorPropertyContext.CreatorPropertyContext()", span="1892-1892", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreatorPropertyContext.CreatorPropertyContext()", file="JsonSerializerInternalReader.cs"];
m18_291 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="2259-2259", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1071 [label="object newObject = null", span="2261-2261", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1072 [label="objectContract.OverrideCreator != null", span="2263-2263", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1073 [label="objectContract.CreatorParameters.Count > 0", span="2265-2265", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1075 [label="return CreateObjectUsingCreatorWithParameters(reader, objectContract, containerMember, objectContract.OverrideCreator, id);", span="2268-2268", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1076 [label="newObject = objectContract.OverrideCreator(new object[0])", span="2271-2271", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1077 [label="objectContract.DefaultCreator != null &&\r\n                     (!objectContract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor || objectContract.ParameterizedCreator == null)", span="2273-2274", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1078 [label="newObject = objectContract.DefaultCreator()", span="2280-2280", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1079 [label="objectContract.ParameterizedCreator != null", span="2282-2282", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1081 [label="return CreateObjectUsingCreatorWithParameters(reader, objectContract, containerMember, objectContract.ParameterizedCreator, id);", span="2285-2285", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1083 [label="!objectContract.IsInstantiable", span="2290-2290", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1084 [label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="2292-2292", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1085 [label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="2295-2295", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1082 [label="newObject == null", span="2288-2288", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1087 [label="return newObject;", span="2299-2299", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1074 [label="createdFromNonDefaultCreator = true", span="2267-2267", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1080 [label="createdFromNonDefaultCreator = true", span="2284-2284", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1086 [label="createdFromNonDefaultCreator = false", span="2298-2298", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_1088 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="2259-2259", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs"];
m18_290 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1145 [label="Entry lambda expression", span="2308-2308", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m18_990 [label="Entry lambda expression", span="1913-1913", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m18_994 [label="p.Property != property", span="1922-1922", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m18_993 [label="Entry lambda expression", span="1922-1922", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m18_996 [label="Entry lambda expression", span="1967-1967", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m18_991 [label="p.PropertyName", span="1913-1913", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m18_992 [label="Exit lambda expression", span="1913-1913", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m18_995 [label="Exit lambda expression", span="1922-1922", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m18_997 [label="p.PropertyName", span="1967-1967", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m18_998 [label="Exit lambda expression", span="1967-1967", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m18_1142 [label="Entry lambda expression", span="2308-2308", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m18_1143 [label=m, span="2308-2308", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m18_1144 [label="Exit lambda expression", span="2308-2308", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m18_1146 [label="PropertyPresence.None", span="2308-2308", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m18_1147 [label="Exit lambda expression", span="2308-2308", cluster="lambda expression", file="JsonSerializerInternalReader.cs"];
m18_30 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonSerializerInternalReader.cs"];
m18_285 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2093-2093", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_981 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", span="2124-2124", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1007 [label="List<CreatorPropertyContext> propertyValues = new List<CreatorPropertyContext>()", span="2126-2126", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1009 [label="reader.TokenType", span="2130-2130", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1011 [label="string memberName = reader.Value.ToString()", span="2133-2133", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1012 [label="CreatorPropertyContext creatorPropertyContext = new CreatorPropertyContext\r\n                        {\r\n                            Name = reader.Value.ToString(),\r\n                            ConstructorProperty = contract.CreatorParameters.GetClosestMatchProperty(memberName),\r\n                            Property = contract.Properties.GetClosestMatchProperty(memberName)\r\n                        }", span="2135-2140", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1018 [label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, contract, containerProperty)", span="2151-2151", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1019 [label="!ReadForType(reader, property.PropertyContract, propertyConverter != null)", span="2153-2153", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1020 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="2155-2155", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1022 [label="creatorPropertyContext.Value = DeserializeConvertable(propertyConverter, reader, property.PropertyType, null)", span="2160-2160", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1023 [label="creatorPropertyContext.Value = CreateValueInternal(reader, property.PropertyType, property.PropertyContract, property, contract, containerProperty, null)", span="2164-2164", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1024 [label="!reader.Read()", span="2171-2171", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1025 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="2173-2173", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1027 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}.''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="2178-2178", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1029 [label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, objectType.Name));", span="2183-2183", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1030 [label="contract.ExtensionDataSetter != null", span="2187-2187", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1031 [label="creatorPropertyContext.Value = ReadExtensionDataValue(contract, containerProperty, reader)", span="2189-2189", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1032 [label="reader.Skip()", span="2193-2193", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1036 [label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="2202-2202", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1037 [label="!exit && reader.Read()", span="2204-2204", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1008 [label="bool exit = false", span="2127-2127", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1013 [label="propertyValues.Add(creatorPropertyContext)", span="2141-2141", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1038 [label="return propertyValues;", span="2206-2206", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1010 [label="JsonToken.PropertyName", span="2132-2132", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1033 [label="JsonToken.Comment", span="2196-2196", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1034 [label="JsonToken.EndObject", span="2198-2198", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1014 [label="JsonProperty property = creatorPropertyContext.ConstructorProperty ?? creatorPropertyContext.Property", span="2143-2143", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1015 [label="property != null && !property.Ignored", span="2144-2144", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1016 [label="property.PropertyContract == null", span="2146-2146", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1017 [label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="2148-2148", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1021 [label="propertyConverter != null && propertyConverter.CanRead", span="2158-2158", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1026 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="2176-2176", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1028 [label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="2181-2181", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1035 [label="exit = true", span="2199-2199", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_1039 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", span="2124-2124", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs"];
m18_169 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JsonSerializerInternalReader.cs"];
m18_468 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1440-1440", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_705 [label="int rank = contract.UnderlyingType.GetArrayRank()", span="1442-1442", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_706 [label="id != null", span="1444-1444", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_707 [label="AddReference(reader, id, list)", span="1446-1446", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_708 [label="OnDeserializing(reader, contract, list)", span="1449-1449", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_709 [label="JsonContract collectionItemContract = GetContractSafe(contract.CollectionItemType)", span="1451-1451", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_710 [label="JsonConverter collectionItemConverter = GetConverter(collectionItemContract, null, contract, containerProperty)", span="1452-1452", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_713 [label="listStack.Push(list)", span="1456-1456", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_714 [label="IList currentList = list", span="1457-1457", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_716 [label="int initialDepth = reader.Depth", span="1462-1462", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_718 [label="ReadForType(reader, collectionItemContract, collectionItemConverter != null)", span="1468-1468", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_719 [label="reader.TokenType", span="1470-1470", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_727 [label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1484-1484", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_728 [label="value = CreateValueInternal(reader, contract.CollectionItemType, collectionItemContract, null, contract, containerProperty, null)", span="1488-1488", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_731 [label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1502-1502", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_732 [label="IsErrorHandled(list, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1504-1504", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_733 [label="HandleError(reader, true, initialDepth)", span="1506-1506", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_735 [label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1512-1512", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_738 [label="reader.Read()", span="1527-1527", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_739 [label="reader.TokenType", span="1529-1529", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_751 [label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing multidimensional array: '' + reader.TokenType);", span="1552-1552", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_754 [label="ThrowUnexpectedEndException(reader, contract, list, ''Unexpected end when deserializing array.'')", span="1564-1564", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_755 [label="OnDeserialized(reader, contract, list)", span="1567-1567", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_756 [label="return list;", span="1568-1568", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_717 [label="listStack.Count == rank", span="1464-1464", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_711 [label="int? previousErrorIndex = null", span="1454-1454", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_726 [label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1482-1482", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_712 [label="Stack<IList> listStack = new Stack<IList>()", span="1455-1455", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_734 [label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1508-1508", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_721 [label="listStack.Pop()", span="1473-1473", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_722 [label="currentList = listStack.Peek()", span="1474-1474", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_743 [label="listStack.Push(newList)", span="1534-1534", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_746 [label="listStack.Pop()", span="1538-1538", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_747 [label="listStack.Count > 0", span="1540-1540", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_748 [label="currentList = listStack.Peek()", span="1542-1542", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_715 [label="bool finished = false", span="1459-1459", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_742 [label="currentList.Add(newList)", span="1533-1533", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_752 [label="!finished", span="1560-1560", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_753 [label="!finished", span="1562-1562", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_720 [label="JsonToken.EndArray", span="1472-1472", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_724 [label="JsonToken.Comment", span="1477-1477", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_725 [label="object value", span="1480-1480", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_723 [label="previousErrorIndex = null", span="1475-1475", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_729 [label="currentList.Add(value)", span="1491-1491", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_730 [label=Exception, span="1500-1500", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_736 [label="previousErrorIndex = errorPosition.Position", span="1516-1516", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_737 [label="throw;", span="1521-1521", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_740 [label="JsonToken.StartArray", span="1531-1531", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_745 [label="JsonToken.EndArray", span="1537-1537", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_750 [label="JsonToken.Comment", span="1549-1549", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_741 [label="IList newList = new List<object>()", span="1532-1532", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_744 [label="currentList = newList", span="1535-1535", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_749 [label="finished = true", span="1546-1546", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_757 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1440-1440", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_77 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="282-282", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_126 [label="contract != null && contract.ContractType == JsonContractType.Linq", span="284-284", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_127 [label="return CreateJToken(reader, contract);", span="286-286", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_128 [label="reader.TokenType", span="291-291", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_130 [label="return CreateObject(reader, objectType, contract, member, containerContract, containerMember, existingValue);", span="296-296", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_132 [label="return CreateList(reader, objectType, contract, member, existingValue, null);", span="298-298", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_138 [label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="304-304", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_140 [label="string s = (string)reader.Value", span="306-306", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_141 [label="CoerceEmptyStringToNull(objectType, contract, s)", span="309-309", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_143 [label="objectType == typeof(byte[])", span="315-315", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_145 [label="return EnsureType(reader, s, CultureInfo.InvariantCulture, contract, objectType);", span="320-320", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_147 [label="string constructorName = reader.Value.ToString()", span="322-322", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_148 [label="return EnsureType(reader, constructorName, CultureInfo.InvariantCulture, contract, objectType);", span="324-324", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_151 [label="objectType == typeof(DBNull)", span="328-328", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_153 [label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="334-334", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_155 [label="return new JRaw((string)reader.Value);", span="336-336", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_157 [label="throw JsonSerializationException.Create(reader, ''Unexpected token while deserializing object: '' + reader.TokenType);", span="341-341", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_158 [label="reader.Read()", span="343-343", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_159 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="345-345", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_129 [label="JsonToken.StartObject", span="295-295", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_131 [label="JsonToken.StartArray", span="297-297", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_133 [label="JsonToken.Integer", span="299-299", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_139 [label="JsonToken.String", span="305-305", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_146 [label="JsonToken.StartConstructor", span="321-321", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_149 [label="JsonToken.Null", span="325-325", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_154 [label="JsonToken.Raw", span="335-335", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_156 [label="JsonToken.Comment", span="337-337", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_134 [label="JsonToken.Float", span="300-300", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_135 [label="JsonToken.Boolean", span="301-301", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_136 [label="JsonToken.Date", span="302-302", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_137 [label="JsonToken.Bytes", span="303-303", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_144 [label="return Convert.FromBase64String(s);", span="317-317", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_142 [label="return null;", span="311-311", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_150 [label="JsonToken.Undefined", span="326-326", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_152 [label="return DBNull.Value;", span="330-330", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_160 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="282-282", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_612 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="JsonSerializerInternalReader.cs"];
m18_2 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="65-65", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_3 [label="ValidationUtils.ArgumentNotNull(target, ''target'')", span="67-67", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_4 [label="Type objectType = target.GetType()", span="69-69", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_6 [label="reader.TokenType == JsonToken.None || reader.TokenType == JsonToken.Comment", span="73-73", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", color=green, community=0, file="JsonSerializerInternalReader.cs"];
m18_7 [label="!reader.Read()", span="75-75", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", color=green, community=0, file="JsonSerializerInternalReader.cs"];
m18_8 [label="throw JsonSerializationException.Create(reader, ''No JSON content found.'');", span="77-77", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_9 [label="reader.TokenType == JsonToken.StartArray", span="81-81", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_12 [label="PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(target) : (IList)target, reader, arrayContract, null, null)", span="87-87", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_13 [label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON array onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="91-91", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_14 [label="reader.TokenType == JsonToken.StartObject", span="94-94", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_15 [label="CheckedRead(reader)", span="96-96", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_17 [label="Serializer.MetadataPropertyHandling != MetadataPropertyHandling.Ignore\r\n                    && reader.TokenType == JsonToken.PropertyName\r\n                    && string.Equals(reader.Value.ToString(), JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="99-101", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", color=green, community=0];
m18_18 [label="CheckedRead(reader)", span="103-103", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_19 [label="id = (reader.Value != null) ? reader.Value.ToString() : null", span="104-104", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_20 [label="CheckedRead(reader)", span="105-105", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_23 [label="PopulateDictionary((dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(target) : (IDictionary)target, reader, dictionaryContract, null, id)", span="111-111", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_25 [label="PopulateObject(target, reader, (JsonObjectContract)contract, null, id)", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_26 [label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON object onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="119-119", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_27 [label="throw JsonSerializationException.Create(reader, ''Unexpected initial token '{0}' when populating object. Expected JSON object or array.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="124-124", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_5 [label="JsonContract contract = Serializer._contractResolver.ResolveContract(objectType)", span="71-71", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_10 [label="contract.ContractType == JsonContractType.Array", span="83-83", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_11 [label="JsonArrayContract arrayContract = (JsonArrayContract)contract", span="85-85", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_21 [label="contract.ContractType == JsonContractType.Dictionary", span="108-108", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_22 [label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)contract", span="110-110", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_24 [label="contract.ContractType == JsonContractType.Object", span="113-113", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_16 [label="string id = null", span="98-98", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_28 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="65-65", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs"];
m18_472 [label="Entry System.Collections.ICollection.CopyTo(System.Array, int)", span="0-0", cluster="System.Collections.ICollection.CopyTo(System.Array, int)", file="JsonSerializerInternalReader.cs"];
m18_563 [label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="58-58", cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonSerializerInternalReader.cs"];
m18_980 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="JsonSerializerInternalReader.cs"];
m18_501 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="JsonSerializerInternalReader.cs"];
m18_1155 [label="Entry System.Predicate<T>.Invoke(T)", span="0-0", cluster="System.Predicate<T>.Invoke(T)", file="JsonSerializerInternalReader.cs"];
m18_764 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerInternalReader.cs"];
m18_42 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="2302-2302", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1089 [label="OnDeserializing(reader, contract, newObject)", span="2304-2304", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1090 [label="Dictionary<JsonProperty, PropertyPresence> propertiesPresence = (contract.HasRequiredOrDefaultValueProperties || HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Populate))\r\n                ? contract.Properties.ToDictionary(m => m, m => PropertyPresence.None)\r\n                : null", span="2307-2309", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1091 [label="id != null", span="2311-2311", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1092 [label="AddReference(reader, id, newObject)", span="2313-2313", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1093 [label="int initialDepth = reader.Depth", span="2316-2316", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1095 [label="reader.TokenType", span="2321-2321", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1097 [label="string memberName = reader.Value.ToString()", span="2325-2325", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1098 [label="CheckPropertyName(reader, memberName)", span="2327-2327", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1099 [label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="2336-2336", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1102 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="2342-2342", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1104 [label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType.Name));", span="2347-2347", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1105 [label="!reader.Read()", span="2350-2350", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1106 [label="SetExtensionData(contract, member, reader, memberName, newObject)", span="2355-2355", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1107 [label="property.Ignored || !ShouldDeserialize(reader, property, newObject)", span="2359-2359", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1108 [label="!reader.Read()", span="2361-2361", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1109 [label="SetPropertyPresence(reader, property, propertiesPresence)", span="2366-2366", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1110 [label="SetExtensionData(contract, member, reader, memberName, newObject)", span="2367-2367", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1113 [label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, contract, member)", span="2376-2376", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1114 [label="!ReadForType(reader, property.PropertyContract, propertyConverter != null)", span="2378-2378", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1115 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="2380-2380", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1116 [label="SetPropertyPresence(reader, property, propertiesPresence)", span="2383-2383", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1117 [label="!SetPropertyValue(property, propertyConverter, contract, member, reader, newObject)", span="2386-2386", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1118 [label="SetExtensionData(contract, member, reader, memberName, newObject)", span="2388-2388", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1120 [label="IsErrorHandled(newObject, contract, memberName, reader as IJsonLineInfo, reader.Path, ex)", span="2394-2394", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1121 [label="HandleError(reader, true, initialDepth)", span="2396-2396", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1126 [label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="2412-2412", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1127 [label="!finished && reader.Read()", span="2414-2414", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1129 [label="ThrowUnexpectedEndException(reader, contract, newObject, ''Unexpected end when deserializing object.'')", span="2418-2418", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1134 [label="EndProcessProperty(newObject, reader, contract, initialDepth, property, presence, true)", span="2428-2428", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1135 [label="OnDeserialized(reader, contract, newObject)", span="2432-2432", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1136 [label="return newObject;", span="2433-2433", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1130 [label="propertiesPresence != null", span="2421-2421", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1131 [label=propertiesPresence, span="2423-2423", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1094 [label="bool finished = false", span="2318-2318", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1096 [label="JsonToken.PropertyName", span="2323-2323", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1123 [label="JsonToken.EndObject", span="2405-2405", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1125 [label="JsonToken.Comment", span="2408-2408", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1100 [label="property == null", span="2338-2338", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1111 [label="property.PropertyContract == null", span="2371-2371", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1112 [label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="2373-2373", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1101 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="2340-2340", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1103 [label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="2345-2345", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1119 [label=Exception, span="2392-2392", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1122 [label="throw;", span="2400-2400", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1124 [label="finished = true", span="2406-2406", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1128 [label="!finished", span="2416-2416", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1132 [label="JsonProperty property = propertyPresence.Key", span="2425-2425", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1133 [label="PropertyPresence presence = propertyPresence.Value", span="2426-2426", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_1137 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="2302-2302", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_0 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="60-60", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs"];
m18_1 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="60-60", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs"];
m18_101 [label="Entry Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", span="58-58", cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs"];
m18_1066 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="433-433", cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonSerializerInternalReader.cs"];
m18_121 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="107-107", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JsonSerializerInternalReader.cs"];
m18_898 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="125-125", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonSerializerInternalReader.cs"];
m18_123 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", span="174-174", cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="JsonSerializerInternalReader.cs"];
m18_124 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", span="522-522", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", file="JsonSerializerInternalReader.cs"];
m18_1139 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", span="2470-2470", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs"];
m18_1167 [label="contract.ExtensionDataSetter != null", span="2472-2472", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs"];
m18_1168 [label="object value = ReadExtensionDataValue(contract, member, reader)", span="2476-2476", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs"];
m18_1169 [label="contract.ExtensionDataSetter(o, memberName, value)", span="2478-2478", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs"];
m18_1171 [label="throw JsonSerializationException.Create(reader, ''Error setting value in extension data for type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType), ex);", span="2482-2482", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs"];
m18_1172 [label="reader.Skip()", span="2487-2487", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs"];
m18_1170 [label=Exception, span="2480-2480", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs"];
m18_1173 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", span="2470-2470", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs"];
m18_185 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="JsonSerializerInternalReader.cs"];
m18_122 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", span="2453-2453", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs"];
m18_1157 [label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.ReadAhead", span="2455-2455", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs"];
m18_1158 [label=memberName, span="2457-2457", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs"];
m18_1163 [label="reader.Skip()", span="2463-2463", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs"];
m18_1165 [label="return false;", span="2467-2467", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs"];
m18_1159 [label="JsonTypeReflector.IdPropertyName", span="2459-2459", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs"];
m18_1160 [label="JsonTypeReflector.RefPropertyName", span="2460-2460", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs"];
m18_1161 [label="JsonTypeReflector.TypePropertyName", span="2461-2461", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs"];
m18_1162 [label="JsonTypeReflector.ArrayValuesPropertyName", span="2462-2462", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs"];
m18_1164 [label="return true;", span="2464-2464", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs"];
m18_1166 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", span="2453-2453", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs"];
m18_125 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSerializerInternalReader.cs"];
m18_170 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="353-353", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_171 [label="contract.ContractType", span="355-355", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_172 [label="JsonContractType.Object", span="357-357", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_177 [label="JsonContractType.Array", span="366-366", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_179 [label="JsonContractType.Primitive", span="368-368", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_181 [label="JsonContractType.String", span="370-370", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_183 [label="throw new ArgumentOutOfRangeException();", span="373-373", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_173 [label="JsonContractType.Dictionary", span="358-358", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_174 [label="JsonContractType.Serializable", span="360-360", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_175 [label="JsonContractType.Dynamic", span="363-363", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_176 [label="return @''JSON object (e.g. {''''name'''':''''value''''})'';", span="365-365", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_178 [label="return @''JSON array (e.g. [1,2,3])'';", span="367-367", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_180 [label="return @''JSON primitive value (e.g. string, number, boolean, null)'';", span="369-369", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_182 [label="return @''JSON string value'';", span="371-371", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_184 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="353-353", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs"];
m18_1067 [label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="427-427", cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonSerializerInternalReader.cs"];
m18_295 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1691-1691", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_809 [label="Type objectType = contract.UnderlyingType", span="1693-1693", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_813 [label="throw JsonSerializationException.Create(reader, message);", span="1701-1701", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_815 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Deserializing {0} using ISerializable constructor.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1706-1706", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_816 [label="SerializationInfo serializationInfo = new SerializationInfo(contract.UnderlyingType, new JsonFormatterConverter(this, contract, member))", span="1709-1709", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_818 [label="reader.TokenType", span="1714-1714", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_820 [label="string memberName = reader.Value.ToString()", span="1717-1717", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_821 [label="!reader.Read()", span="1718-1718", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_822 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1720-1720", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_823 [label="serializationInfo.AddValue(memberName, JToken.ReadFrom(reader))", span="1722-1722", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_827 [label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1730-1730", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_828 [label="!finished && reader.Read()", span="1732-1732", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_830 [label="ThrowUnexpectedEndException(reader, contract, serializationInfo, ''Unexpected end when deserializing object.'')", span="1736-1736", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_831 [label="contract.ISerializableCreator == null", span="1739-1739", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_832 [label="throw JsonSerializationException.Create(reader, ''ISerializable type '{0}' does not have a valid constructor. To correctly implement ISerializable a constructor that takes SerializationInfo and StreamingContext parameters should be present.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="1741-1741", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_833 [label="object createdObject = contract.ISerializableCreator(serializationInfo, Serializer._context)", span="1744-1744", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_834 [label="id != null", span="1746-1746", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", color=green, community=0];
m18_835 [label="AddReference(reader, id, createdObject)", span="1748-1748", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_836 [label="OnDeserializing(reader, contract, createdObject)", span="1752-1752", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_837 [label="OnDeserialized(reader, contract, createdObject)", span="1753-1753", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_810 [label="!JsonTypeReflector.FullyTrusted", span="1695-1695", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_812 [label="message = message.FormatWith(CultureInfo.InvariantCulture, objectType)", span="1699-1699", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_811 [label="string message = @''Type '{0}' implements ISerializable but cannot be deserialized using the ISerializable interface because the current application is not fully trusted and ISerializable can expose secure data.'' + Environment.NewLine +\r\n                                 @''To fix this error either change the environment to be fully trusted, change the application to not deserialize the type, add JsonObjectAttribute to the type or change the JsonSerializer setting ContractResolver to use a new DefaultContractResolver with IgnoreSerializableInterface set to true.'' + Environment.NewLine", span="1697-1698", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_814 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1704-1704", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_817 [label="bool finished = false", span="1711-1711", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_819 [label="JsonToken.PropertyName", span="1716-1716", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_824 [label="JsonToken.Comment", span="1724-1724", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_825 [label="JsonToken.EndObject", span="1726-1726", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_826 [label="finished = true", span="1727-1727", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_829 [label="!finished", span="1734-1734", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_838 [label="return createdObject;", span="1755-1755", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_839 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1691-1691", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_526 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1059-1059", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_531 [label="currentValue = null", span="1061-1061", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_535 [label="property.Ignored", span="1066-1066", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_537 [label="JsonToken tokenType = reader.TokenType", span="1071-1071", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_538 [label="property.PropertyContract == null", span="1073-1073", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_539 [label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1075-1075", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_540 [label="ObjectCreationHandling objectCreationHandling =\r\n                property.ObjectCreationHandling.GetValueOrDefault(Serializer._objectCreationHandling)", span="1078-1079", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_541 [label="(objectCreationHandling != ObjectCreationHandling.Replace)\r\n                && (tokenType == JsonToken.StartArray || tokenType == JsonToken.StartObject)\r\n                && property.Readable", span="1081-1083", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_542 [label="currentValue = property.ValueProvider.GetValue(target)", span="1085-1085", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_547 [label="!property.Writable && !useExistingValue", span="1096-1096", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_549 [label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && tokenType == JsonToken.Null", span="1102-1102", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_551 [label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n                && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n                && JsonTokenUtils.IsPrimitiveToken(tokenType)\r\n                && MiscellaneousUtils.ValueEquals(reader.Value, property.GetResolvedDefaultValue())", span="1108-1111", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_554 [label="propertyContract = property.PropertyContract", span="1118-1118", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_556 [label="propertyContract != property.PropertyContract", span="1124-1124", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_557 [label="propertyConverter = GetConverter(propertyContract, property.MemberConverter, containerContract, containerProperty)", span="1126-1126", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_532 [label="useExistingValue = false", span="1062-1062", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_553 [label="currentValue == null", span="1116-1116", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_555 [label="propertyContract = GetContractSafe(currentValue.GetType())", span="1122-1122", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_533 [label="propertyContract = null", span="1063-1063", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_534 [label="gottenCurrentValue = false", span="1064-1064", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_536 [label="return true;", span="1068-1068", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_543 [label="gottenCurrentValue = true", span="1086-1086", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_544 [label="currentValue != null", span="1088-1088", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_545 [label="propertyContract = GetContractSafe(currentValue.GetType())", span="1090-1090", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_546 [label="useExistingValue = (!propertyContract.IsReadOnlyOrFixedSize && !propertyContract.UnderlyingType.IsValueType())", span="1092-1092", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_548 [label="return true;", span="1098-1098", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_550 [label="return true;", span="1104-1104", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_552 [label="return true;", span="1113-1113", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_558 [label="return false;", span="1130-1130", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_559 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="1059-1059", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs"];
m18_702 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="364-364", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="JsonSerializerInternalReader.cs"];
m18_503 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", span="146-146", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", file="JsonSerializerInternalReader.cs"];
m18_641 [label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", span="377-377", cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalReader.cs"];
m18_1070 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="446-446", cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonSerializerInternalReader.cs"];
m18_988 [label="Entry Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, object)", span="69-69", cluster="Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, object)", file="JsonSerializerInternalReader.cs"];
m18_416 [label="Entry System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", span="0-0", cluster="System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", file="JsonSerializerInternalReader.cs"];
m18_349 [label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="1088-1088", cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializerInternalReader.cs"];
m18_1068 [label="Entry Newtonsoft.Json.JsonReader.ReadAsString()", span="421-421", cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonSerializerInternalReader.cs"];
m18_900 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", span="1902-1902", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_901 [label="ValidationUtils.ArgumentNotNull(creator, ''creator'')", span="1904-1904", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_902 [label="bool trackPresence = (contract.HasRequiredOrDefaultValueProperties || HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Populate))", span="1907-1907", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_903 [label="Type objectType = contract.UnderlyingType", span="1909-1909", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_905 [label="string parameters = string.Join('', '', contract.CreatorParameters.Select(p => p.PropertyName).ToArray())", span="1913-1913", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_906 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Deserializing {0} using creator with parameters: {1}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, parameters)), null)", span="1914-1914", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_907 [label="List<CreatorPropertyContext> propertyContexts = ResolvePropertyAndCreatorValues(contract, containerProperty, reader, objectType)", span="1917-1917", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_909 [label="contract.Properties", span="1920-1920", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_912 [label="object[] creatorParameterValues = new object[contract.CreatorParameters.Count]", span="1934-1934", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_926 [label="constructorProperty = contract.CreatorParameters.ForgivingCaseSensitiveFind(p => p.PropertyName, context.Property.UnderlyingName)", span="1967-1967", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_933 [label="context.Value = EnsureType(\r\n                                    reader,\r\n                                    constructorProperty.GetResolvedDefaultValue(),\r\n                                    CultureInfo.InvariantCulture,\r\n                                    constructorProperty.PropertyContract,\r\n                                    constructorProperty.PropertyType)", span="1985-1990", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_934 [label="int i = contract.CreatorParameters.IndexOf(constructorProperty)", span="1995-1995", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_937 [label="object createdObject = creator(creatorParameterValues)", span="2002-2002", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_938 [label="id != null", span="2004-2004", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_939 [label="AddReference(reader, id, createdObject)", span="2006-2006", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_940 [label="OnDeserializing(reader, contract, createdObject)", span="2009-2009", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_967 [label="contract.ExtensionDataSetter != null", span="2072-2072", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_970 [label="contract.ExtensionDataSetter(createdObject, propertyValue.Name, propertyValue.Value)", span="2078-2078", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_974 [label="EndProcessProperty(\r\n                        createdObject,\r\n                        reader,\r\n                        contract,\r\n                        reader.Depth,\r\n                        context.Property,\r\n                        context.Presence.Value,\r\n                        !context.Used)", span="2092-2099", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_975 [label="OnDeserialized(reader, contract, createdObject)", span="2103-2103", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_908 [label=trackPresence, span="1918-1918", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_914 [label=trackPresence, span="1939-1939", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_928 [label=trackPresence, span="1974-1974", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_971 [label=trackPresence, span="2083-2083", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_904 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1911-1911", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_910 [label="propertyContexts.All(p => p.Property != property)", span="1922-1922", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_911 [label="propertyContexts.Add(new CreatorPropertyContext\r\n                        {\r\n                            Property = property,\r\n                            Name = property.PropertyName,\r\n                            Presence = PropertyPresence.None\r\n                        })", span="1924-1929", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_913 [label=propertyContexts, span="1936-1936", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_941 [label=propertyContexts, span="2012-2012", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_968 [label=propertyContexts, span="2074-2074", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_972 [label=propertyContexts, span="2085-2085", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_935 [label="creatorParameterValues[i] = context.Value", span="1996-1996", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_915 [label="context.Property != null && context.Presence == null", span="1941-1941", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_916 [label="object v = context.Value", span="1943-1943", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_921 [label="propertyPresence = CoerceEmptyStringToNull(context.Property.PropertyType, context.Property.PropertyContract, (string)v)\r\n                                ? PropertyPresence.Null\r\n                                : PropertyPresence.Value", span="1951-1953", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_923 [label="context.Presence = propertyPresence", span="1960-1960", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_924 [label="JsonProperty constructorProperty = context.ConstructorProperty", span="1964-1964", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_925 [label="constructorProperty == null && context.Property != null", span="1965-1965", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_929 [label="context.Presence == PropertyPresence.None || context.Presence == PropertyPresence.Null", span="1976-1976", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_936 [label="context.Used = true", span="1998-1998", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_917 [label="PropertyPresence propertyPresence", span="1944-1944", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_918 [label="v == null", span="1945-1945", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_920 [label="v is string", span="1949-1949", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_919 [label="propertyPresence = PropertyPresence.Null", span="1947-1947", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_922 [label="propertyPresence = PropertyPresence.Value", span="1957-1957", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_927 [label="constructorProperty != null && !constructorProperty.Ignored", span="1970-1970", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_930 [label="constructorProperty.PropertyContract == null", span="1978-1978", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_931 [label="constructorProperty.PropertyContract = GetContractSafe(constructorProperty.PropertyType)", span="1980-1980", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_932 [label="HasFlag(constructorProperty.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)", span="1983-1983", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_946 [label="property.ValueProvider.SetValue(createdObject, value)", span="2027-2027", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_952 [label="object createdObjectCollection = property.ValueProvider.GetValue(createdObject)", span="2039-2039", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_960 [label="object createdObjectDictionary = property.ValueProvider.GetValue(createdObject)", span="2055-2055", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_976 [label="return createdObject;", span="2104-2104", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_942 [label="context.Used ||\r\n                    context.Property == null ||\r\n                    context.Property.Ignored ||\r\n                    context.Presence == PropertyPresence.None", span="2014-2017", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_943 [label="JsonProperty property = context.Property", span="2022-2022", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_944 [label="object value = context.Value", span="2023-2023", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_947 [label="context.Used = true", span="2028-2028", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_966 [label="context.Used = true", span="2068-2068", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_945 [label="ShouldSetPropertyValue(property, value)", span="2025-2025", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_948 [label="!property.Writable && value != null", span="2030-2030", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_949 [label="JsonContract propertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="2033-2033", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_955 [label="IWrappedCollection newValues = propertyArrayContract.CreateWrapper(value)", span="2043-2043", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_963 [label="IDictionary newValues = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(value) : (IDictionary)value", span="2059-2059", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_950 [label="propertyContract.ContractType == JsonContractType.Array", span="2035-2035", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_951 [label="JsonArrayContract propertyArrayContract = (JsonArrayContract)propertyContract", span="2037-2037", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_958 [label="propertyContract.ContractType == JsonContractType.Dictionary", span="2051-2051", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_959 [label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)propertyContract", span="2053-2053", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_954 [label="IWrappedCollection createdObjectCollectionWrapper = propertyArrayContract.CreateWrapper(createdObjectCollection)", span="2042-2042", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_953 [label="createdObjectCollection != null", span="2040-2040", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_957 [label="createdObjectCollectionWrapper.Add(newValue)", span="2047-2047", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_956 [label=newValues, span="2045-2045", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_962 [label="IDictionary targetDictionary = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(createdObjectDictionary) : (IDictionary)createdObjectDictionary", span="2058-2058", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_961 [label="createdObjectDictionary != null", span="2056-2056", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_965 [label="targetDictionary.Add(newValue.Key, newValue.Value)", span="2063-2063", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_964 [label=newValues, span="2061-2061", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_969 [label="!propertyValue.Used", span="2076-2076", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_973 [label="context.Property == null", span="2087-2087", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_977 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", span="1902-1902", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs"];
m18_288 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="686-686", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_355 [label="id = null", span="688-688", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_357 [label="reader.TokenType == JsonToken.PropertyName", span="691-691", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_358 [label="string propertyName = reader.Value.ToString()", span="693-693", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_361 [label="propertyName = reader.Value.ToString()", span="703-703", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_363 [label="CheckedRead(reader)", span="707-707", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_364 [label="reader.TokenType != JsonToken.String && reader.TokenType != JsonToken.Null", span="708-708", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_365 [label="throw JsonSerializationException.Create(reader, ''JSON reference {0} property must have a string or null value.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="710-710", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_366 [label="string reference = (reader.Value != null) ? reader.Value.ToString() : null", span="713-713", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_367 [label="CheckedRead(reader)", span="715-715", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_369 [label="reader.TokenType == JsonToken.PropertyName", span="719-719", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_370 [label="throw JsonSerializationException.Create(reader, ''Additional content found in JSON reference object. A JSON reference object should only have a {0} property.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="721-721", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_373 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved object reference '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, newValue.GetType())), null)", span="728-728", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_377 [label="CheckedRead(reader)", span="740-740", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_378 [label="string qualifiedTypeName = reader.Value.ToString()", span="741-741", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_379 [label="ResolveTypeName(reader, ref objectType, ref contract, member, containerContract, containerMember, qualifiedTypeName)", span="743-743", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_380 [label="CheckedRead(reader)", span="745-745", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", color=green, community=0, file="JsonSerializerInternalReader.cs"];
m18_383 [label="CheckedRead(reader)", span="751-751", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_384 [label="id = (reader.Value != null) ? reader.Value.ToString() : null", span="753-753", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_385 [label="CheckedRead(reader)", span="755-755", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_388 [label="CheckedRead(reader)", span="760-760", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_389 [label="object list = CreateList(reader, objectType, contract, member, existingValue, id)", span="761-761", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_390 [label="CheckedRead(reader)", span="762-762", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", color=red, community=0, file="JsonSerializerInternalReader.cs"];
m18_394 [label="metadataProperty && reader.TokenType == JsonToken.PropertyName", span="770-770", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_356 [label="newValue = null", span="689-689", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_395 [label="return false;", span="773-773", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_359 [label="propertyName.Length > 0 && propertyName[0] == '$'", span="695-695", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_360 [label="bool metadataProperty", span="699-699", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_362 [label="string.Equals(propertyName, JsonTypeReflector.RefPropertyName, StringComparison.Ordinal)", span="705-705", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_376 [label="string.Equals(propertyName, JsonTypeReflector.TypePropertyName, StringComparison.Ordinal)", span="738-738", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_382 [label="string.Equals(propertyName, JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="749-749", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", color=green, community=0];
m18_387 [label="string.Equals(propertyName, JsonTypeReflector.ArrayValuesPropertyName, StringComparison.Ordinal)", span="758-758", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_368 [label="reference != null", span="717-717", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_371 [label="newValue = Serializer.GetReferenceResolver().ResolveReference(this, reference)", span="724-724", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_375 [label="metadataProperty = true", span="735-735", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_372 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="726-726", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_374 [label="return true;", span="731-731", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_381 [label="metadataProperty = true", span="747-747", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_386 [label="metadataProperty = true", span="756-756", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", color=green, community=0];
m18_393 [label="metadataProperty = false", span="768-768", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_391 [label="newValue = list", span="763-763", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_392 [label="return true;", span="764-764", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_396 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="686-686", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs"];
m18_102 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="85-85", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JsonSerializerInternalReader.cs"];
m18_1140 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", span="2436-2436", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_1148 [label="property.ShouldDeserialize == null", span="2438-2438", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_1150 [label="bool shouldDeserialize = property.ShouldDeserialize(target)", span="2443-2443", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_1152 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, reader.Path, ''ShouldDeserialize result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, shouldDeserialize)), null)", span="2447-2447", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_1149 [label="return true;", span="2440-2440", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_1151 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="2445-2445", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_1153 [label="return shouldDeserialize;", span="2450-2450", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_1154 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", span="2436-2436", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldDeserialize(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs"];
m18_469 [label="Entry System.Type.GetArrayRank()", span="0-0", cluster="System.Type.GetArrayRank()", file="JsonSerializerInternalReader.cs"];
m18_985 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", span="146-146", cluster="System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", file="JsonSerializerInternalReader.cs"];
m18_31 [label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43", cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JsonSerializerInternalReader.cs"];
m18_41 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1306-1306", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_648 [label="IWrappedDictionary wrappedDictionary = dictionary as IWrappedDictionary", span="1308-1308", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_649 [label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : dictionary", span="1309-1309", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_650 [label="id != null", span="1311-1311", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_651 [label="AddReference(reader, id, underlyingDictionary)", span="1313-1313", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_652 [label="OnDeserializing(reader, contract, underlyingDictionary)", span="1316-1316", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_653 [label="int initialDepth = reader.Depth", span="1318-1318", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_654 [label="contract.KeyContract == null", span="1320-1320", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_655 [label="contract.KeyContract = GetContractSafe(contract.DictionaryKeyType)", span="1322-1322", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_656 [label="contract.ItemContract == null", span="1325-1325", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_657 [label="contract.ItemContract = GetContractSafe(contract.DictionaryValueType)", span="1327-1327", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_658 [label="JsonConverter dictionaryValueConverter = contract.ItemConverter ?? GetConverter(contract.ItemContract, null, contract, containerProperty)", span="1330-1330", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_659 [label="PrimitiveTypeCode keyTypeCode = (contract.KeyContract is JsonPrimitiveContract) ? ((JsonPrimitiveContract)contract.KeyContract).TypeCode : PrimitiveTypeCode.Empty", span="1331-1331", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_661 [label="reader.TokenType", span="1336-1336", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_663 [label="object keyValue = reader.Value", span="1339-1339", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_664 [label="CheckPropertyName(reader, keyValue.ToString())", span="1340-1340", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_669 [label="DateTimeUtils.TryParseDateTime(keyValue.ToString(), reader.DateTimeZoneHandling, reader.DateFormatString, reader.Culture, out dt)", span="1356-1356", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_671 [label="keyValue = EnsureType(reader, keyValue, CultureInfo.InvariantCulture, contract.KeyContract, contract.DictionaryKeyType)", span="1362-1362", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_675 [label="DateTimeUtils.TryParseDateTimeOffset(keyValue.ToString(), reader.DateFormatString, reader.Culture, out dt)", span="1371-1371", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_677 [label="keyValue = EnsureType(reader, keyValue, CultureInfo.InvariantCulture, contract.KeyContract, contract.DictionaryKeyType)", span="1377-1377", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_678 [label="keyValue = EnsureType(reader, keyValue, CultureInfo.InvariantCulture, contract.KeyContract, contract.DictionaryKeyType)", span="1383-1383", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_680 [label="throw JsonSerializationException.Create(reader, ''Could not convert string '{0}' to dictionary key type '{1}'. Create a TypeConverter to convert from the string to the key type object.''.FormatWith(CultureInfo.InvariantCulture, reader.Value, contract.DictionaryKeyType), ex);", span="1389-1389", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_681 [label="!ReadForType(reader, contract.ItemContract, dictionaryValueConverter != null)", span="1392-1392", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_682 [label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="1394-1394", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_685 [label="itemValue = DeserializeConvertable(dictionaryValueConverter, reader, contract.DictionaryValueType, null)", span="1400-1400", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_686 [label="itemValue = CreateValueInternal(reader, contract.DictionaryValueType, contract.ItemContract, null, contract, containerProperty, null)", span="1404-1404", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_687 [label="dictionary[keyValue] = itemValue", span="1407-1407", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_689 [label="IsErrorHandled(underlyingDictionary, contract, keyValue, reader as IJsonLineInfo, reader.Path, ex)", span="1411-1411", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_690 [label="HandleError(reader, true, initialDepth)", span="1413-1413", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_695 [label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1427-1427", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_696 [label="!finished && reader.Read()", span="1429-1429", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_698 [label="ThrowUnexpectedEndException(reader, contract, underlyingDictionary, ''Unexpected end when deserializing object.'')", span="1433-1433", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_699 [label="OnDeserialized(reader, contract, underlyingDictionary)", span="1436-1436", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_700 [label="return underlyingDictionary;", span="1437-1437", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_684 [label="dictionaryValueConverter != null && dictionaryValueConverter.CanRead", span="1398-1398", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_660 [label="bool finished = false", span="1333-1333", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_665 [label=keyTypeCode, span="1350-1350", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_662 [label="JsonToken.PropertyName", span="1338-1338", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_692 [label="JsonToken.Comment", span="1421-1421", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_693 [label="JsonToken.EndObject", span="1423-1423", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_666 [label="PrimitiveTypeCode.DateTime", span="1352-1352", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_672 [label="PrimitiveTypeCode.DateTimeOffset", span="1367-1367", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_667 [label="PrimitiveTypeCode.DateTimeNullable", span="1353-1353", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_668 [label="DateTime dt", span="1355-1355", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_670 [label="keyValue = dt", span="1358-1358", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_673 [label="PrimitiveTypeCode.DateTimeOffsetNullable", span="1368-1368", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_674 [label="DateTimeOffset dt", span="1370-1370", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_676 [label="keyValue = dt", span="1373-1373", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_679 [label=Exception, span="1387-1387", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_683 [label="object itemValue", span="1397-1397", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_688 [label=Exception, span="1409-1409", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_691 [label="throw;", span="1417-1417", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_694 [label="finished = true", span="1424-1424", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_697 [label="!finished", span="1431-1431", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_701 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1306-1306", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs"];
m18_762 [label="Entry System.Collections.IList.Add(object)", span="0-0", cluster="System.Collections.IList.Add(object)", file="JsonSerializerInternalReader.cs"];
m18_1156 [label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57", cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="JsonSerializerInternalReader.cs"];
m18_635 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="229-229", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonSerializerInternalReader.cs"];
m18_1218 [label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", span="", file="JsonSerializerInternalReader.cs"];
m18_1219 [label=property, span="", file="JsonSerializerInternalReader.cs"];
m19_22 [label="Entry Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", span="117-117", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_23 [label="string json = @''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Expando'''': {\r\n    ''''String'''': ''''String!'''',\r\n    ''''Integer'''': 234,\r\n    ''''Float'''': 1.23,\r\n    ''''List'''': [\r\n      ''''First'''',\r\n      ''''Second'''',\r\n      ''''Third''''\r\n    ],\r\n    ''''Object'''': {\r\n      ''''First'''': 1\r\n    }\r\n  },\r\n  ''''After'''': ''''After!''''\r\n}''", span="119-135", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_24 [label="ExpandoContainer o = JsonConvert.DeserializeObject<ExpandoContainer>(json)", span="137-137", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_25 [label="Assert.AreEqual(o.Before, ''Before!'')", span="139-139", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_26 [label="Assert.AreEqual(o.After, ''After!'')", span="140-140", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_27 [label="Assert.IsNotNull(o.Expando)", span="141-141", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_28 [label="dynamic d = o.Expando", span="143-143", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_29 [label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), d)", span="144-144", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_30 [label="Assert.AreEqual(''String!'', d.String)", span="146-146", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_31 [label="CustomAssert.IsInstanceOfType(typeof(string), d.String)", span="147-147", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_32 [label="Assert.AreEqual(234, d.Integer)", span="149-149", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_33 [label="CustomAssert.IsInstanceOfType(typeof(long), d.Integer)", span="150-150", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_34 [label="Assert.AreEqual(1.23, d.Float)", span="152-152", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_35 [label="CustomAssert.IsInstanceOfType(typeof(double), d.Float)", span="153-153", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_36 [label="Assert.IsNotNull(d.List)", span="155-155", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_37 [label="Assert.AreEqual(3, d.List.Count)", span="156-156", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_38 [label="CustomAssert.IsInstanceOfType(typeof(List<object>), d.List)", span="157-157", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_39 [label="Assert.AreEqual(''First'', d.List[0])", span="159-159", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_40 [label="CustomAssert.IsInstanceOfType(typeof(string), d.List[0])", span="160-160", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_41 [label="Assert.AreEqual(''Second'', d.List[1])", span="162-162", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_42 [label="Assert.AreEqual(''Third'', d.List[2])", span="163-163", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_43 [label="Assert.IsNotNull(d.Object)", span="165-165", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_44 [label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), d.Object)", span="166-166", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_45 [label="Assert.AreEqual(1, d.Object.First)", span="168-168", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_46 [label="CustomAssert.IsInstanceOfType(typeof(long), d.Object.First)", span="169-169", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_47 [label="Exit Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", span="117-117", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_50 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="96-96", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerInternalWriter.cs"];
m19_15 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="839-839", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerInternalWriter.cs"];
m19_12 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_48 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="1016-1016", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerInternalWriter.cs"];
m19_49 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonSerializerInternalWriter.cs"];
m19_17 [label="Entry Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeNullExpandoObject()", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeNullExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_18 [label="ExpandoContainer d = new ExpandoContainer()", span="105-105", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeNullExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_19 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="107-107", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeNullExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_20 [label="Assert.AreEqual(@''{\r\n  ''''Before'''': null,\r\n  ''''Expando'''': null,\r\n  ''''After'''': null\r\n}'', json)", span="109-113", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeNullExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_21 [label="Exit Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeNullExpandoObject()", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeNullExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_11 [label="Entry Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.ExpandoContainer.ExpandoContainer()", span="53-53", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.ExpandoContainer.ExpandoContainer()", file="JsonSerializerInternalWriter.cs"];
m19_51 [label="Entry Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeNullExpandoObject()", span="173-173", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeNullExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_52 [label="string json = @''{\r\n  ''''Before'''': null,\r\n  ''''Expando'''': null,\r\n  ''''After'''': null\r\n}''", span="175-179", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeNullExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_53 [label="ExpandoContainer c = JsonConvert.DeserializeObject<ExpandoContainer>(json)", span="181-181", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeNullExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_54 [label="Assert.AreEqual(null, c.Expando)", span="183-183", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeNullExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_55 [label="Exit Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeNullExpandoObject()", span="173-173", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.DeserializeNullExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_13 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerInternalWriter.cs"];
m19_14 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerInternalWriter.cs"];
m19_0 [label="Entry Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeExpandoObject()", span="61-61", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_1 [label="ExpandoContainer d = new ExpandoContainer\r\n        {\r\n          Before = ''Before!'',\r\n          Expando = new ExpandoObject(),\r\n          After = ''After!''\r\n        }", span="63-68", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_2 [label="dynamic o = d.Expando", span="70-70", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_8 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="81-81", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_3 [label="o.String = ''String!''", span="72-72", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_4 [label="o.Integer = 234", span="73-73", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_5 [label="o.Float = 1.23d", span="74-74", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_6 [label="o.List = new List<string> {''First'', ''Second'', ''Third''}", span="75-75", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_7 [label="o.Object = new Dictionary<string, object>\r\n        {\r\n          {''First'', 1}\r\n        }", span="76-79", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_9 [label="Assert.AreEqual(@''{\r\n  ''''Before'''': ''''Before!'''',\r\n  ''''Expando'''': {\r\n    ''''String'''': ''''String!'''',\r\n    ''''Integer'''': 234,\r\n    ''''Float'''': 1.23,\r\n    ''''List'''': [\r\n      ''''First'''',\r\n      ''''Second'''',\r\n      ''''Third''''\r\n    ],\r\n    ''''Object'''': {\r\n      ''''First'''': 1\r\n    }\r\n  },\r\n  ''''After'''': ''''After!''''\r\n}'', json)", span="83-99", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m19_10 [label="Exit Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeExpandoObject()", span="61-61", cluster="Newtonsoft.Json.Tests.Converters.ExpandoObjectConverterTests.SerializeExpandoObject()", file="JsonSerializerInternalWriter.cs"];
m20_8 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="392-392", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m20_3 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="383-383", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m20_4 [label="DefaultContext = new StreamingContext()", span="385-385", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m20_5 [label="DefaultCulture = CultureInfo.InvariantCulture", span="386-386", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m20_6 [label="Exit Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="383-383", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m20_9 [label="Converters = new List<JsonConverter>()", span="394-394", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m20_10 [label="Exit Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="392-392", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m20_7 [label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext()", span="0-0", cluster="System.Runtime.Serialization.StreamingContext.StreamingContext()", file="JsonSerializerSettings.cs"];
m20_0 [label="Entry lambda expression", span="227-227", cluster="lambda expression", file="JsonSerializerSettings.cs"];
m20_1 [label=value, span="227-227", cluster="lambda expression", file="JsonSerializerSettings.cs"];
m20_2 [label="Exit lambda expression", span="227-227", cluster="lambda expression", file="JsonSerializerSettings.cs"];
m20_11 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerSettings.cs"];
m20_12 [label="Newtonsoft.Json.JsonSerializerSettings", span="", file="JsonSerializerSettings.cs"];
m21_19 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonTextReader.cs"];
m21_20 [label="Entry Unk.Eval", span="", cluster="Unk.Eval", file="JsonTextReader.cs"];
m21_18 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="81-81", cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JsonTextReader.cs"];
m21_0 [label="Entry Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", span="36-36", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_1 [label="JObject o = new JObject(\r\n        new JProperty(''First'', ''String!''),\r\n        new JProperty(''Second'', 12345.6789m),\r\n        new JProperty(''Third'', new JArray(\r\n          1,\r\n          2, \r\n          3,\r\n          4,\r\n          5,\r\n          new JObject(\r\n            new JProperty(''Fourth'', ''String!''),\r\n            new JProperty(''Fifth'', new JObject(\r\n              new JProperty(''Sixth'', ''String!'')))))))", span="38-50", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_2 [label="object value", span="52-52", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_3 [label="value = (string)DataBinder.Eval(o, ''First.Value'')", span="54-54", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_4 [label="Assert.AreEqual(value, (string)o[''First''])", span="55-55", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_5 [label="value = DataBinder.Eval(o, ''Second.Value'')", span="57-57", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_6 [label="Assert.AreEqual(value, (decimal)o[''Second''])", span="58-58", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_7 [label="value = DataBinder.Eval(o, ''Third'')", span="60-60", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_8 [label="Assert.AreEqual(value, o[''Third''])", span="61-61", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_9 [label="value = DataBinder.Eval(o, ''Third[0].Value'')", span="63-63", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_10 [label="Assert.AreEqual((int)value, (int)o[''Third''][0])", span="64-64", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_11 [label="value = DataBinder.Eval(o, ''Third[5].Fourth.Value'')", span="66-66", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_12 [label="Assert.AreEqual(value, (string)o[''Third''][5][''Fourth''])", span="67-67", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_13 [label="value = DataBinder.Eval(o, ''Third[5].Fifth.Sixth.Value'')", span="69-69", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_14 [label="Assert.AreEqual(value, (string)o[''Third''][5][''Fifth''][''Sixth''])", span="70-70", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_15 [label="Exit Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", span="36-36", cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonTextReader.cs"];
m21_17 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="192-192", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonTextReader.cs"];
m21_16 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonTextReader.cs"];
m22_25 [label="Entry Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="108-108", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_33 [label=true, span="110-110", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_38 [label="throw CreateJsonReaderException(''Unterminated string. Expected delimiter: {0}. Line {1}, position {2}.'', quote, _currentLineNumber, _currentLinePosition);", span="118-118", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_70 [label="throw CreateJsonReaderException(''Unterminated string. Expected delimiter: {0}. Line {1}, position {2}.'', quote, _currentLineNumber, _currentLinePosition);", span="169-169", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_73 [label="currentChar == quote", span="174-174", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_34 [label="char currentChar = MoveNext()", span="112-112", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_35 [label=currentChar, span="114-114", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_36 [label="'\0'", span="116-116", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_40 [label="'\\'", span="122-122", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_71 [label="''''", span="172-172", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_76 [label="_buffer.Append(currentChar)", span="184-184", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_37 [label=_end, span="117-117", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_39 [label="_buffer.Append('\0')", span="120-120", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_41 [label="(currentChar = MoveNext()) != '\0' || !_end", span="123-123", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_42 [label=currentChar, span="125-125", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_58 [label="_buffer.Append(currentChar)", span="148-148", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_69 [label="throw CreateJsonReaderException(''Bad JSON escape sequence: {0}. Line {1}, position {2}.'', @''\'' + currentChar, _currentLineNumber, _currentLinePosition);", span="164-164", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_75 [label="_buffer.Append(currentChar)", span="180-180", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_43 [label="'b'", span="127-127", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_45 [label="'t'", span="130-130", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_47 [label="'n'", span="133-133", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_49 [label="'f'", span="136-136", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_51 [label="'r'", span="139-139", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_53 [label="'\\'", span="142-142", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_55 [label="''''", span="145-145", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_59 [label="'u'", span="150-150", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_44 [label="_buffer.Append('\b')", span="128-128", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_46 [label="_buffer.Append('\t')", span="131-131", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_48 [label="_buffer.Append('\n')", span="134-134", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_50 [label="_buffer.Append('\f')", span="137-137", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_52 [label="_buffer.Append('\r')", span="140-140", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_54 [label="_buffer.Append('\\')", span="143-143", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_56 [label="'\''", span="146-146", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_57 [label="'/'", span="147-147", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_60 [label="char[] hexValues = new char[4]", span="151-151", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_61 [label="int i = 0", span="152-152", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_62 [label="i < hexValues.Length", span="152-152", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_64 [label="hexValues[i] = currentChar", span="155-155", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_67 [label="char hexChar = Convert.ToChar(int.Parse(new string(hexValues), NumberStyles.HexNumber, NumberFormatInfo.InvariantInfo))", span="160-160", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_66 [label="i++", span="152-152", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_63 [label="(currentChar = MoveNext()) != '\0' || !_end", span="154-154", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_65 [label="throw CreateJsonReaderException(''Unexpected end while parsing unicode character. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="157-157", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_68 [label="_buffer.Append(hexChar)", span="161-161", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_72 [label="'\''", span="173-173", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_74 [label="return;", span="176-176", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_77 [label="Exit Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="108-108", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReaderTest.cs"];
m22_87 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonTextReaderTest.cs"];
m22_79 [label="Entry Newtonsoft.Json.JsonTextReader.CreateJsonReaderException(string, params object[])", span="190-190", cluster="Newtonsoft.Json.JsonTextReader.CreateJsonReaderException(string, params object[])", file="JsonTextReaderTest.cs"];
m22_84 [label="string message = format.FormatWith(CultureInfo.InvariantCulture, args)", span="192-192", cluster="Newtonsoft.Json.JsonTextReader.CreateJsonReaderException(string, params object[])", file="JsonTextReaderTest.cs"];
m22_85 [label="return new JsonReaderException(message, null, _currentLineNumber, _currentLinePosition);", span="193-193", cluster="Newtonsoft.Json.JsonTextReader.CreateJsonReaderException(string, params object[])", file="JsonTextReaderTest.cs"];
m22_86 [label="Exit Newtonsoft.Json.JsonTextReader.CreateJsonReaderException(string, params object[])", span="190-190", cluster="Newtonsoft.Json.JsonTextReader.CreateJsonReaderException(string, params object[])", file="JsonTextReaderTest.cs"];
m22_133 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="JsonTextReaderTest.cs"];
m22_134 [label="Entry System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", span="0-0", cluster="System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", file="JsonTextReaderTest.cs"];
m22_152 [label="Entry System.IO.TextReader.Peek()", span="0-0", cluster="System.IO.TextReader.Peek()", file="JsonTextReaderTest.cs"];
m22_411 [label="Entry char.IsLetter(char)", span="0-0", cluster="char.IsLetter(char)", file="JsonTextReaderTest.cs"];
m22_536 [label="Entry Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="1006-1006", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReaderTest.cs"];
m22_537 [label="return true;", span="1008-1008", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReaderTest.cs"];
m22_538 [label="Exit Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="1006-1006", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReaderTest.cs"];
m22_380 [label="Entry Newtonsoft.Json.JsonTextReader.ParseFalse()", span="938-938", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReaderTest.cs"];
m22_510 [label="MatchValue('f', JsonConvert.False, true)", span="940-940", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReaderTest.cs"];
m22_511 [label="SetToken(JsonToken.Boolean, false)", span="942-942", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReaderTest.cs"];
m22_512 [label="throw CreateJsonReaderException(''Error parsing boolean value. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="946-946", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReaderTest.cs"];
m22_513 [label="Exit Newtonsoft.Json.JsonTextReader.ParseFalse()", span="938-938", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReaderTest.cs"];
m22_28 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="268-268", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonTextReaderTest.cs"];
m22_159 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="309-309", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReaderTest.cs"];
m22_160 [label="_readType = ReadType.Read", span="311-311", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReaderTest.cs"];
m22_161 [label="return ReadInternal();", span="312-312", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReaderTest.cs"];
m22_162 [label="Exit Newtonsoft.Json.JsonTextReader.Read()", span="309-309", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReaderTest.cs"];
m22_29 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.ToString()", span="82-82", cluster="Newtonsoft.Json.Utilities.StringBuffer.ToString()", file="JsonTextReaderTest.cs"];
m22_7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonTextReaderTest.cs"];
m22_82 [label="Entry int.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0", cluster="int.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="JsonTextReaderTest.cs"];
m22_102 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="JsonTextReaderTest.cs"];
m22_32 [label="Entry Newtonsoft.Json.JsonTextReader.ParseDate(string)", span="212-212", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_104 [label="string value = text.Substring(6, text.Length - 8)", span="214-214", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_105 [label="DateTimeKind kind = DateTimeKind.Utc", span="215-215", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_106 [label="int index = value.IndexOf('+', 1)", span="217-217", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_108 [label="index = value.IndexOf('-', 1)", span="220-220", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_112 [label="offset = ReadOffset(value.Substring(index))", span="227-227", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_113 [label="value = value.Substring(0, index)", span="228-228", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_114 [label="long javaScriptTicks = long.Parse(value, NumberStyles.Integer, CultureInfo.InvariantCulture)", span="231-231", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_119 [label=kind, span="245-245", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_107 [label="index == -1", span="219-219", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_110 [label="index != -1", span="224-224", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_109 [label="TimeSpan offset = TimeSpan.Zero", span="222-222", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_117 [label="SetToken(JsonToken.Date, new DateTimeOffset(utcDateTime.Add(offset).Ticks, offset))", span="238-238", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_111 [label="kind = DateTimeKind.Local", span="226-226", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_115 [label="DateTime utcDateTime = JsonConvert.ConvertJavaScriptTicksToDateTime(javaScriptTicks)", span="233-233", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_116 [label="_readType == ReadType.ReadAsDateTimeOffset", span="236-236", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_121 [label="dateTime = DateTime.SpecifyKind(utcDateTime.ToLocalTime(), DateTimeKind.Unspecified)", span="248-248", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_123 [label="dateTime = utcDateTime.ToLocalTime()", span="251-251", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_124 [label="dateTime = utcDateTime", span="254-254", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_118 [label="DateTime dateTime", span="243-243", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_120 [label="DateTimeKind.Unspecified", span="247-247", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_122 [label="DateTimeKind.Local", span="250-250", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_125 [label="SetToken(JsonToken.Date, dateTime)", span="258-258", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_126 [label="Exit Newtonsoft.Json.JsonTextReader.ParseDate(string)", span="212-212", cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReaderTest.cs"];
m22_101 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonTextReaderTest.cs"];
m22_132 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="JsonTextReaderTest.cs"];
m22_382 [label="Entry Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="687-687", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReaderTest.cs"];
m22_397 [label="MatchValue('n', ''new'', true)", span="689-689", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReaderTest.cs"];
m22_398 [label="char currentChar = MoveNext()", span="691-691", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReaderTest.cs"];
m22_399 [label="EatWhitespace(currentChar, true, out currentChar)", span="693-693", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReaderTest.cs"];
m22_400 [label="char.IsLetter(currentChar)", span="695-695", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReaderTest.cs"];
m22_401 [label="_buffer.Append(currentChar)", span="697-697", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReaderTest.cs"];
m22_403 [label="EatWhitespace(currentChar, false, out currentChar)", span="701-701", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReaderTest.cs"];
m22_402 [label="currentChar = MoveNext()", span="698-698", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReaderTest.cs"];
m22_404 [label="currentChar != '('", span="703-703", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReaderTest.cs"];
m22_405 [label="throw CreateJsonReaderException(''Unexpected character while parsing constructor: {0}. Line {1}, position {2}.'', currentChar, _currentLineNumber, _currentLinePosition);", span="704-704", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReaderTest.cs"];
m22_406 [label="string constructorName = _buffer.ToString()", span="706-706", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReaderTest.cs"];
m22_407 [label="_buffer.Position = 0", span="707-707", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReaderTest.cs"];
m22_408 [label="SetToken(JsonToken.StartConstructor, constructorName)", span="709-709", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReaderTest.cs"];
m22_409 [label="Exit Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="687-687", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReaderTest.cs"];
m22_384 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="962-962", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReaderTest.cs"];
m22_518 [label="MatchValue('I', JsonConvert.PositiveInfinity, true)", span="964-964", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReaderTest.cs"];
m22_519 [label="SetToken(JsonToken.Float, double.PositiveInfinity)", span="966-966", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReaderTest.cs"];
m22_520 [label="throw CreateJsonReaderException(''Error parsing positive infinity value. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="970-970", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReaderTest.cs"];
m22_521 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="962-962", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReaderTest.cs"];
m22_254 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="258-258", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonTextReaderTest.cs"];
m22_381 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNull()", span="914-914", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReaderTest.cs"];
m22_502 [label="MatchValue('n', JsonConvert.Null, true)", span="916-916", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReaderTest.cs"];
m22_503 [label="SetToken(JsonToken.Null)", span="918-918", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReaderTest.cs"];
m22_504 [label="throw CreateJsonReaderException(''Error parsing null value. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="922-922", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReaderTest.cs"];
m22_505 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNull()", span="914-914", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReaderTest.cs"];
m22_300 [label="Entry char.IsLetterOrDigit(char)", span="0-0", cluster="char.IsLetterOrDigit(char)", file="JsonTextReaderTest.cs"];
m22_31 [label="Entry string.EndsWith(string, System.StringComparison)", span="0-0", cluster="string.EndsWith(string, System.StringComparison)", file="JsonTextReaderTest.cs"];
m22_387 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="926-926", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReaderTest.cs"];
m22_506 [label="MatchValue('u', JsonConvert.Undefined, true)", span="928-928", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReaderTest.cs"];
m22_507 [label="SetToken(JsonToken.Undefined)", span="930-930", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReaderTest.cs"];
m22_508 [label="throw CreateJsonReaderException(''Error parsing undefined value. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="934-934", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReaderTest.cs"];
m22_509 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="926-926", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReaderTest.cs"];
m22_533 [label="Entry Newtonsoft.Json.JsonReader.Close()", span="448-448", cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonTextReaderTest.cs"];
m22_189 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="365-365", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m22_190 [label="_readType = ReadType.ReadAsDateTimeOffset", span="367-367", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m22_191 [label="!ReadInternal()", span="368-368", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m22_192 [label="throw CreateJsonReaderException(''Unexpected end when reading date: Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="369-369", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m22_193 [label="TokenType == JsonToken.Null", span="371-371", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m22_194 [label="return null;", span="372-372", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m22_195 [label="TokenType == JsonToken.Date", span="373-373", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m22_196 [label="return (DateTimeOffset)Value;", span="374-374", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m22_197 [label="throw CreateJsonReaderException(''Unexpected token when reading date: {0}. Line {1}, position {2}.'', TokenType, _currentLineNumber, _currentLinePosition);", span="376-376", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m22_198 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="365-365", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m22_257 [label="Entry char.IsWhiteSpace(char)", span="0-0", cluster="char.IsWhiteSpace(char)", file="JsonTextReaderTest.cs"];
m22_153 [label="Entry Newtonsoft.Json.JsonTextReader.HasNext()", span="293-293", cluster="Newtonsoft.Json.JsonTextReader.HasNext()", file="JsonTextReaderTest.cs"];
m22_154 [label="return (_reader.Peek() != -1);", span="295-295", cluster="Newtonsoft.Json.JsonTextReader.HasNext()", file="JsonTextReaderTest.cs"];
m22_155 [label="Exit Newtonsoft.Json.JsonTextReader.HasNext()", span="293-293", cluster="Newtonsoft.Json.JsonTextReader.HasNext()", file="JsonTextReaderTest.cs"];
m22_443 [label="Entry System.Convert.ToInt64(string, int)", span="0-0", cluster="System.Convert.ToInt64(string, int)", file="JsonTextReaderTest.cs"];
m22_174 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="339-339", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m22_175 [label="_readType = ReadType.ReadAsDecimal", span="341-341", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m22_176 [label="!ReadInternal()", span="342-342", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m22_177 [label="throw CreateJsonReaderException(''Unexpected end when reading decimal: Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="343-343", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m22_178 [label="TokenType == JsonToken.Null", span="345-345", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m22_179 [label="return null;", span="346-346", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m22_180 [label="TokenType == JsonToken.Float", span="347-347", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m22_181 [label="return (decimal?)Value;", span="348-348", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m22_182 [label="decimal d", span="350-350", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m22_183 [label="TokenType == JsonToken.String && decimal.TryParse((string)Value, NumberStyles.Number, CultureInfo.InvariantCulture, out d)", span="351-351", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m22_184 [label="SetToken(JsonToken.Float, d)", span="353-353", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m22_186 [label="throw CreateJsonReaderException(''Unexpected token when reading decimal: {0}. Line {1}, position {2}.'', TokenType, _currentLineNumber, _currentLinePosition);", span="357-357", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m22_185 [label="return d;", span="354-354", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m22_187 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="339-339", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m22_388 [label="Entry char.IsNumber(char)", span="0-0", cluster="char.IsNumber(char)", file="JsonTextReaderTest.cs"];
m22_535 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Clear()", span="67-67", cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear()", file="JsonTextReaderTest.cs"];
m22_410 [label="Entry Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", span="851-851", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReaderTest.cs"];
m22_471 [label="bool match = MatchValue(firstChar, value)", span="854-854", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReaderTest.cs"];
m22_472 [label="!noTrailingNonSeperatorCharacters", span="856-856", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReaderTest.cs"];
m22_473 [label="return match;", span="858-858", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReaderTest.cs"];
m22_476 [label="bool matchAndNoTrainingNonSeperatorCharacters = (match && (next == '\0' || IsSeperator(next)))", span="864-864", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReaderTest.cs"];
m22_474 [label="int c = PeekNext()", span="862-862", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReaderTest.cs"];
m22_475 [label="char next = (c != -1) ? (char) c : '\0'", span="863-863", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReaderTest.cs"];
m22_477 [label="return matchAndNoTrainingNonSeperatorCharacters;", span="866-866", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReaderTest.cs"];
m22_478 [label="Exit Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", span="851-851", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReaderTest.cs"];
m22_80 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(char)", span="55-55", cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char)", file="JsonTextReaderTest.cs"];
m22_447 [label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="JsonTextReaderTest.cs"];
m22_100 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="JsonTextReaderTest.cs"];
m22_379 [label="Entry Newtonsoft.Json.JsonTextReader.ParseTrue()", span="899-899", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReaderTest.cs"];
m22_498 [label="MatchValue('t', JsonConvert.True, true)", span="904-904", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReaderTest.cs"];
m22_499 [label="SetToken(JsonToken.Boolean, true)", span="906-906", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReaderTest.cs"];
m22_500 [label="throw CreateJsonReaderException(''Error parsing boolean value. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="910-910", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReaderTest.cs"];
m22_501 [label="Exit Newtonsoft.Json.JsonTextReader.ParseTrue()", span="899-899", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReaderTest.cs"];
m22_30 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="JsonTextReaderTest.cs"];
m22_9 [label="Entry Newtonsoft.Json.JsonTextReader.ParseString(char)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_10 [label="ReadStringIntoBuffer(quote)", span="74-74", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_23 [label="QuoteChar = quote", span="103-103", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_11 [label="_readType == ReadType.ReadAsBytes", span="76-76", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_12 [label="byte[] data", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_18 [label="string text = _buffer.ToString()", span="93-93", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_13 [label="_buffer.Position == 0", span="79-79", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_14 [label="data = new byte[0]", span="81-81", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_15 [label="data = Convert.FromBase64CharArray(_buffer.GetInternalBuffer(), 0, _buffer.Position)", span="85-85", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_16 [label="_buffer.Position = 0", span="86-86", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_17 [label="SetToken(JsonToken.Bytes, data)", span="89-89", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_19 [label="_buffer.Position = 0", span="94-94", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_20 [label="text.StartsWith(''/Date('', StringComparison.Ordinal) && text.EndsWith('')/'', StringComparison.Ordinal)", span="96-96", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_21 [label="ParseDate(text)", span="98-98", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_22 [label="SetToken(JsonToken.String, text)", span="102-102", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_24 [label="Exit Newtonsoft.Json.JsonTextReader.ParseString(char)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReaderTest.cs"];
m22_156 [label="Entry Newtonsoft.Json.JsonTextReader.PeekNext()", span="298-298", cluster="Newtonsoft.Json.JsonTextReader.PeekNext()", file="JsonTextReaderTest.cs"];
m22_157 [label="return _reader.Peek();", span="300-300", cluster="Newtonsoft.Json.JsonTextReader.PeekNext()", file="JsonTextReaderTest.cs"];
m22_158 [label="Exit Newtonsoft.Json.JsonTextReader.PeekNext()", span="298-298", cluster="Newtonsoft.Json.JsonTextReader.PeekNext()", file="JsonTextReaderTest.cs"];
m22_26 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", span="93-93", cluster="Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", file="JsonTextReaderTest.cs"];
m22_274 [label="Entry Newtonsoft.Json.JsonTextReader.ParseProperty(char)", span="506-506", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_275 [label="char currentChar = firstChar", span="508-508", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_276 [label="char quoteChar", span="509-509", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_277 [label="ValidIdentifierChar(currentChar)", span="511-511", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_279 [label="currentChar = ParseUnquotedProperty(currentChar)", span="514-514", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_280 [label="currentChar == '''' || currentChar == '\''", span="516-516", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_281 [label="quoteChar = currentChar", span="518-518", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_284 [label="throw CreateJsonReaderException(''Invalid property identifier character: {0}. Line {1}, position {2}.'', currentChar, _currentLineNumber, _currentLinePosition);", span="524-524", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_285 [label="currentChar != ':'", span="527-527", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_291 [label="QuoteChar = quoteChar", span="539-539", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_278 [label="quoteChar = '\0'", span="513-513", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_282 [label="ReadStringIntoBuffer(quoteChar)", span="519-519", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_283 [label="currentChar = MoveNext()", span="520-520", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_286 [label="currentChar = MoveNext()", span="529-529", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_290 [label="SetToken(JsonToken.PropertyName, _buffer.ToString())", span="538-538", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_287 [label="EatWhitespace(currentChar, false, out currentChar)", span="532-532", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_288 [label="currentChar != ':'", span="534-534", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_289 [label="throw CreateJsonReaderException(''Invalid character after parsing property name. Expected ':' but got: {0}. Line {1}, position {2}.'', currentChar, _currentLineNumber, _currentLinePosition);", span="535-535", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_292 [label="_buffer.Position = 0", span="540-540", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_293 [label="return true;", span="542-542", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_294 [label="Exit Newtonsoft.Json.JsonTextReader.ParseProperty(char)", span="506-506", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReaderTest.cs"];
m22_89 [label="Entry Newtonsoft.Json.JsonTextReader.ReadOffset(string)", span="196-196", cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReaderTest.cs"];
m22_90 [label="bool negative = (offsetText[0] == '-')", span="198-198", cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReaderTest.cs"];
m22_91 [label="int hours = int.Parse(offsetText.Substring(1, 2), NumberStyles.Integer, CultureInfo.InvariantCulture)", span="200-200", cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReaderTest.cs"];
m22_93 [label="offsetText.Length >= 5", span="202-202", cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReaderTest.cs"];
m22_94 [label="minutes = int.Parse(offsetText.Substring(3, 2), NumberStyles.Integer, CultureInfo.InvariantCulture)", span="203-203", cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReaderTest.cs"];
m22_96 [label=negative, span="206-206", cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReaderTest.cs"];
m22_92 [label="int minutes = 0", span="201-201", cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReaderTest.cs"];
m22_95 [label="TimeSpan offset = TimeSpan.FromHours(hours) + TimeSpan.FromMinutes(minutes)", span="205-205", cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReaderTest.cs"];
m22_97 [label="offset = offset.Negate()", span="207-207", cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReaderTest.cs"];
m22_98 [label="return offset;", span="209-209", cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReaderTest.cs"];
m22_99 [label="Exit Newtonsoft.Json.JsonTextReader.ReadOffset(string)", span="196-196", cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReaderTest.cs"];
m22_445 [label="Entry decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0", cluster="decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="JsonTextReaderTest.cs"];
m22_228 [label="Entry Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", span="428-428", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_229 [label=currentChar, span="432-432", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_249 [label="char.IsWhiteSpace(currentChar)", span="457-457", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_250 [label="throw CreateJsonReaderException(''After parsing a value an unexpected character was encountered: {0}. Line {1}, position {2}.'', currentChar, _currentLineNumber, _currentLinePosition);", span="463-463", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_230 [label="'}'", span="434-434", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_233 [label="']'", span="437-437", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_236 [label="')'", span="440-440", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_239 [label="'/'", span="443-443", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_242 [label="','", span="446-446", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_245 [label="' '", span="450-450", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_231 [label="SetToken(JsonToken.EndObject)", span="435-435", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_232 [label="return true;", span="436-436", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_234 [label="SetToken(JsonToken.EndArray)", span="438-438", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_235 [label="return true;", span="439-439", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_237 [label="SetToken(JsonToken.EndConstructor)", span="441-441", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_238 [label="return true;", span="442-442", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_240 [label="ParseComment()", span="444-444", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_241 [label="return true;", span="445-445", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_243 [label="SetStateBasedOnCurrent()", span="448-448", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_244 [label="return false;", span="449-449", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_246 [label="StringUtils.Tab", span="451-451", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_247 [label="StringUtils.LineFeed", span="452-452", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_248 [label="StringUtils.CarriageReturn", span="453-453", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_251 [label="(currentChar = MoveNext()) != '\0' || !_end", span="467-467", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_252 [label="return false;", span="469-469", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_253 [label="Exit Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", span="428-428", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReaderTest.cs"];
m22_446 [label="Entry string.IndexOf(string, System.StringComparison)", span="0-0", cluster="string.IndexOf(string, System.StringComparison)", file="JsonTextReaderTest.cs"];
m22_449 [label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", span="70-70", cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", file="JsonTextReaderTest.cs"];
m22_130 [label="Entry Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", span="200-200", cluster="Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", file="JsonTextReaderTest.cs"];
m22_88 [label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, int, int)", span="75-75", cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, int, int)", file="JsonTextReaderTest.cs"];
m22_296 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", span="550-550", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReaderTest.cs"];
m22_301 [label="_buffer.Append(firstChar)", span="553-553", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReaderTest.cs"];
m22_302 [label="char currentChar", span="555-555", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReaderTest.cs"];
m22_303 [label="(currentChar = MoveNext()) != '\0' || !_end", span="557-557", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReaderTest.cs"];
m22_304 [label="char.IsWhiteSpace(currentChar) || currentChar == ':'", span="559-559", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReaderTest.cs"];
m22_309 [label="throw CreateJsonReaderException(''Unexpected end when parsing unquoted property name. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="573-573", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReaderTest.cs"];
m22_305 [label="return currentChar;", span="561-561", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReaderTest.cs"];
m22_306 [label="ValidIdentifierChar(currentChar)", span="563-563", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReaderTest.cs"];
m22_307 [label="_buffer.Append(currentChar)", span="565-565", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReaderTest.cs"];
m22_308 [label="throw CreateJsonReaderException(''Invalid JavaScript property identifier character: {0}. Line {1}, position {2}.'', currentChar, _currentLineNumber, _currentLinePosition);", span="569-569", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReaderTest.cs"];
m22_310 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", span="550-550", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReaderTest.cs"];
m22_127 [label="Entry string.IndexOf(char, int)", span="0-0", cluster="string.IndexOf(char, int)", file="JsonTextReaderTest.cs"];
m22_163 [label="Entry Newtonsoft.Json.JsonTextReader.ReadInternal()", span="380-380", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_199 [label=true, span="382-382", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_200 [label="char currentChar", span="384-384", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_201 [label="_lastChar != null", span="385-385", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_202 [label="currentChar = _lastChar.Value", span="387-387", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_204 [label="currentChar = MoveNext()", span="392-392", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_203 [label="_lastChar = null", span="388-388", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_205 [label="currentChar == '\0' && _end", span="395-395", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_214 [label="return ParseValue(currentChar);", span="406-406", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_218 [label="return ParseObject(currentChar);", span="411-411", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_220 [label="ParsePostValue(currentChar)", span="415-415", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_206 [label="return false;", span="396-396", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_207 [label=CurrentState, span="398-398", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_208 [label="State.Start", span="400-400", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_215 [label="State.Complete", span="407-407", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_216 [label="State.Object", span="409-409", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_219 [label="State.PostValue", span="412-412", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_222 [label="State.Closed", span="418-418", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_223 [label="State.Error", span="420-420", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_224 [label="throw CreateJsonReaderException(''Unexpected state: {0}. Line {1}, position {2}.'', CurrentState, _currentLineNumber, _currentLinePosition);", span="423-423", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_209 [label="State.Property", span="401-401", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_210 [label="State.Array", span="402-402", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_211 [label="State.ArrayStart", span="403-403", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_212 [label="State.Constructor", span="404-404", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_213 [label="State.ConstructorStart", span="405-405", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_217 [label="State.ObjectStart", span="410-410", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_221 [label="return true;", span="416-416", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_225 [label="Exit Newtonsoft.Json.JsonTextReader.ReadInternal()", span="380-380", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReaderTest.cs"];
m22_386 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumber(char)", span="714-714", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_412 [label="char currentChar = firstChar", span="716-716", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_422 [label="bool nonBase10 = (firstChar == '0' && !number.StartsWith(''0.'', StringComparison.OrdinalIgnoreCase))", span="738-738", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_413 [label="bool end = false", span="719-719", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_414 [label="IsSeperator(currentChar)", span="722-722", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_416 [label="_lastChar = currentChar", span="725-725", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_417 [label="_buffer.Append(currentChar)", span="729-729", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_418 [label="!end && ((currentChar = MoveNext()) != '\0' || !_end)", span="732-732", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_415 [label="end = true", span="724-724", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_419 [label="string number = _buffer.ToString()", span="734-734", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_420 [label="object numberValue", span="735-735", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_425 [label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)\r\n            ? Convert.ToInt64(number, 16)\r\n            : Convert.ToInt64(number, 8)", span="745-747", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_427 [label="numberValue = decimal.Parse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture)", span="753-753", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_430 [label="numberValue = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)\r\n            ? Convert.ToInt64(number, 16)\r\n            : Convert.ToInt64(number, 8)", span="762-764", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_432 [label="number.IndexOf(''.'', StringComparison.OrdinalIgnoreCase) != -1 || number.IndexOf(''e'', StringComparison.OrdinalIgnoreCase) != -1", span="767-767", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_433 [label="numberValue = Convert.ToDouble(number, CultureInfo.InvariantCulture)", span="769-769", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_435 [label="numberValue = Convert.ToInt64(number, CultureInfo.InvariantCulture)", span="776-776", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_437 [label="throw new JsonReaderException(''JSON integer {0} is too large or small for an Int64.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="780-780", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_421 [label="JsonToken numberType", span="736-736", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_423 [label="_readType == ReadType.ReadAsDecimal", span="740-740", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_424 [label=nonBase10, span="742-742", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_429 [label=nonBase10, span="760-760", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_426 [label="numberValue = Convert.ToDecimal(integer)", span="749-749", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_428 [label="numberType = JsonToken.Float", span="756-756", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_440 [label="SetToken(numberType, numberValue)", span="789-789", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_431 [label="numberType = JsonToken.Integer", span="765-765", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_434 [label="numberType = JsonToken.Float", span="770-770", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_436 [label=OverflowException, span="778-778", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_438 [label="numberType = JsonToken.Integer", span="783-783", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_439 [label="_buffer.Position = 0", span="787-787", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_441 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumber(char)", span="714-714", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReaderTest.cs"];
m22_534 [label="Entry System.IO.TextReader.Close()", span="0-0", cluster="System.IO.TextReader.Close()", file="JsonTextReaderTest.cs"];
m22_256 [label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="342-342", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonTextReaderTest.cs"];
m22_385 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="950-950", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReaderTest.cs"];
m22_514 [label="MatchValue('-', JsonConvert.NegativeInfinity, true)", span="952-952", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReaderTest.cs"];
m22_515 [label="SetToken(JsonToken.Float, double.NegativeInfinity)", span="954-954", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReaderTest.cs"];
m22_516 [label="throw CreateJsonReaderException(''Error parsing negative infinity value. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="958-958", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReaderTest.cs"];
m22_517 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="950-950", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReaderTest.cs"];
m22_83 [label="Entry System.Convert.ToChar(int)", span="0-0", cluster="System.Convert.ToChar(int)", file="JsonTextReaderTest.cs"];
m22_226 [label="Entry Newtonsoft.Json.JsonTextReader.ParseValue(char)", span="576-576", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_311 [label=currentChar, span="580-580", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_314 [label="ParseString(currentChar)", span="584-584", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_329 [label="throw CreateJsonReaderException(''Unexpected character encountered while parsing value: {0}. Line {1}, position {2}.'', currentChar, _currentLineNumber, _currentLinePosition);", span="602-602", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_341 [label="ParseNumber(currentChar)", span="619-619", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_371 [label="char.IsWhiteSpace(currentChar)", span="652-652", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_372 [label="char.IsNumber(currentChar) || currentChar == '-' || currentChar == '.'", span="656-656", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_373 [label="ParseNumber(currentChar)", span="658-658", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_375 [label="throw CreateJsonReaderException(''Unexpected character encountered while parsing value: {0}. Line {1}, position {2}.'', currentChar, _currentLineNumber, _currentLinePosition);", span="663-663", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_312 [label="''''", span="582-582", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_316 [label="'t'", span="586-586", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_319 [label="'f'", span="589-589", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_322 [label="'n'", span="592-592", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_332 [label="'N'", span="609-609", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_335 [label="'I'", span="612-612", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_338 [label="'-'", span="615-615", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_343 [label="'/'", span="621-621", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_346 [label="'u'", span="624-624", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_349 [label="'{'", span="627-627", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_352 [label="'['", span="630-630", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_355 [label="'}'", span="633-633", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_358 [label="']'", span="636-636", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_361 [label="','", span="639-639", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_364 [label="')'", span="642-642", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_367 [label="' '", span="645-645", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_313 [label="'\''", span="583-583", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_315 [label="return true;", span="585-585", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_317 [label="ParseTrue()", span="587-587", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_318 [label="return true;", span="588-588", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_320 [label="ParseFalse()", span="590-590", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_321 [label="return true;", span="591-591", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_323 [label="HasNext()", span="593-593", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_324 [label="char next = (char)PeekNext()", span="595-595", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_330 [label="throw CreateJsonReaderException(''Unexpected end. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="606-606", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_325 [label="next == 'u'", span="597-597", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_327 [label="next == 'e'", span="599-599", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_326 [label="ParseNull()", span="598-598", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_328 [label="ParseConstructor()", span="600-600", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_331 [label="return true;", span="608-608", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_333 [label="ParseNumberNaN()", span="610-610", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_334 [label="return true;", span="611-611", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_336 [label="ParseNumberPositiveInfinity()", span="613-613", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_337 [label="return true;", span="614-614", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_339 [label="PeekNext() == 'I'", span="616-616", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_340 [label="ParseNumberNegativeInfinity()", span="617-617", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_342 [label="return true;", span="620-620", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_344 [label="ParseComment()", span="622-622", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_345 [label="return true;", span="623-623", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_347 [label="ParseUndefined()", span="625-625", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_348 [label="return true;", span="626-626", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_350 [label="SetToken(JsonToken.StartObject)", span="628-628", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_351 [label="return true;", span="629-629", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_353 [label="SetToken(JsonToken.StartArray)", span="631-631", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_354 [label="return true;", span="632-632", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_356 [label="SetToken(JsonToken.EndObject)", span="634-634", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_357 [label="return true;", span="635-635", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_359 [label="SetToken(JsonToken.EndArray)", span="637-637", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_360 [label="return true;", span="638-638", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_362 [label="SetToken(JsonToken.Undefined)", span="640-640", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_363 [label="return true;", span="641-641", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_365 [label="SetToken(JsonToken.EndConstructor)", span="643-643", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_366 [label="return true;", span="644-644", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_368 [label="StringUtils.Tab", span="646-646", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_369 [label="StringUtils.LineFeed", span="647-647", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_370 [label="StringUtils.CarriageReturn", span="648-648", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_376 [label="(currentChar = MoveNext()) != '\0' || !_end", span="667-667", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_374 [label="return true;", span="659-659", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_377 [label="return false;", span="669-669", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_378 [label="Exit Newtonsoft.Json.JsonTextReader.ParseValue(char)", span="576-576", cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReaderTest.cs"];
m22_442 [label="Entry Newtonsoft.Json.JsonTextReader.IsSeperator(char)", span="870-870", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_479 [label=c, span="872-872", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_494 [label="char.IsWhiteSpace(c)", span="891-891", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_480 [label="'}'", span="874-874", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_484 [label="'/'", span="878-878", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_486 [label="')'", span="881-881", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_489 [label="' '", span="885-885", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_481 [label="']'", span="875-875", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_482 [label="','", span="876-876", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_483 [label="return true;", span="877-877", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_485 [label="return (HasNext() && PeekNext() == '*');", span="880-880", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_487 [label="CurrentState == State.Constructor || CurrentState == State.ConstructorStart", span="882-882", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_488 [label="return true;", span="883-883", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_496 [label="return false;", span="896-896", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_490 [label="StringUtils.Tab", span="886-886", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_491 [label="StringUtils.LineFeed", span="887-887", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_492 [label="StringUtils.CarriageReturn", span="888-888", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_493 [label="return true;", span="889-889", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_495 [label="return true;", span="892-892", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_497 [label="Exit Newtonsoft.Json.JsonTextReader.IsSeperator(char)", span="870-870", cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReaderTest.cs"];
m22_526 [label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="989-989", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReaderTest.cs"];
m22_527 [label="base.Close()", span="991-991", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReaderTest.cs"];
m22_528 [label="CloseInput && _reader != null", span="993-993", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReaderTest.cs"];
m22_529 [label="_reader.Close()", span="994-994", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReaderTest.cs"];
m22_530 [label="_buffer != null", span="996-996", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReaderTest.cs"];
m22_531 [label="_buffer.Clear()", span="997-997", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReaderTest.cs"];
m22_532 [label="Exit Newtonsoft.Json.JsonTextReader.Close()", span="989-989", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReaderTest.cs"];
m22_129 [label="Entry long.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0", cluster="long.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="JsonTextReaderTest.cs"];
m22_8 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", span="50-50", cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", file="JsonTextReaderTest.cs"];
m22_128 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="JsonTextReaderTest.cs"];
m22_0 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="62-62", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReaderTest.cs"];
m22_1 [label="reader == null", span="64-64", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReaderTest.cs"];
m22_3 [label="_reader = reader", span="67-67", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReaderTest.cs"];
m22_2 [label="throw new ArgumentNullException(''reader'');", span="65-65", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReaderTest.cs"];
m22_4 [label="_buffer = new StringBuffer(4096)", span="68-68", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReaderTest.cs"];
m22_5 [label="_currentLineNumber = 1", span="69-69", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReaderTest.cs"];
m22_6 [label="Exit Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="62-62", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReaderTest.cs"];
m22_151 [label="Entry System.IO.TextReader.Read()", span="0-0", cluster="System.IO.TextReader.Read()", file="JsonTextReaderTest.cs"];
m22_448 [label="Entry System.Convert.ToInt64(string, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt64(string, System.IFormatProvider)", file="JsonTextReaderTest.cs"];
m22_81 [label="Entry string.String(char[])", span="0-0", cluster="string.String(char[])", file="JsonTextReaderTest.cs"];
m22_383 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", span="974-974", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReaderTest.cs"];
m22_522 [label="MatchValue('N', JsonConvert.NaN, true)", span="976-976", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReaderTest.cs"];
m22_523 [label="SetToken(JsonToken.Float, double.NaN)", span="978-978", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReaderTest.cs"];
m22_524 [label="throw CreateJsonReaderException(''Error parsing NaN value. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="982-982", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReaderTest.cs"];
m22_525 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", span="974-974", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReaderTest.cs"];
m22_444 [label="Entry System.Convert.ToDecimal(long)", span="0-0", cluster="System.Convert.ToDecimal(long)", file="JsonTextReaderTest.cs"];
m22_131 [label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonTextReaderTest.cs"];
m22_188 [label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0", cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="JsonTextReaderTest.cs"];
m22_103 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="JsonTextReaderTest.cs"];
m22_164 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="321-321", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m22_165 [label="_readType = ReadType.ReadAsBytes", span="323-323", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m22_166 [label="!ReadInternal()", span="324-324", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m22_167 [label="throw CreateJsonReaderException(''Unexpected end when reading bytes: Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="325-325", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m22_168 [label="TokenType == JsonToken.Null", span="327-327", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m22_169 [label="return null;", span="328-328", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m22_170 [label="TokenType == JsonToken.Bytes", span="329-329", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m22_171 [label="return (byte[]) Value;", span="330-330", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m22_172 [label="throw CreateJsonReaderException(''Unexpected token when reading bytes: {0}. Line {1}, position {2}.'', TokenType, _currentLineNumber, _currentLinePosition);", span="332-332", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m22_173 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="321-321", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m22_227 [label="Entry Newtonsoft.Json.JsonTextReader.ParseObject(char)", span="472-472", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_258 [label=currentChar, span="476-476", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_269 [label="char.IsWhiteSpace(currentChar)", span="491-491", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_270 [label="return ParseProperty(currentChar);", span="497-497", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_259 [label="'}'", span="478-478", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_262 [label="'/'", span="481-481", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_265 [label="' '", span="484-484", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_260 [label="SetToken(JsonToken.EndObject)", span="479-479", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_261 [label="return true;", span="480-480", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_263 [label="ParseComment()", span="482-482", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_264 [label="return true;", span="483-483", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_266 [label="StringUtils.Tab", span="485-485", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_267 [label="StringUtils.LineFeed", span="486-486", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_268 [label="StringUtils.CarriageReturn", span="487-487", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_271 [label="(currentChar = MoveNext()) != '\0' || !_end", span="501-501", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_272 [label="return false;", span="503-503", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_273 [label="Exit Newtonsoft.Json.JsonTextReader.ParseObject(char)", span="472-472", cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReaderTest.cs"];
m22_255 [label="Entry Newtonsoft.Json.JsonTextReader.ParseComment()", span="792-792", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReaderTest.cs"];
m22_450 [label="char currentChar = MoveNext()", span="796-796", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReaderTest.cs"];
m22_451 [label="currentChar == '*'", span="798-798", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReaderTest.cs"];
m22_452 [label="(currentChar = MoveNext()) != '\0' || !_end", span="800-800", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReaderTest.cs"];
m22_459 [label="throw CreateJsonReaderException(''Error parsing comment. Expected: *. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="825-825", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReaderTest.cs"];
m22_453 [label="currentChar == '*'", span="802-802", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReaderTest.cs"];
m22_460 [label="SetToken(JsonToken.Comment, _buffer.ToString())", span="828-828", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReaderTest.cs"];
m22_458 [label="_buffer.Append(currentChar)", span="819-819", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReaderTest.cs"];
m22_454 [label="(currentChar = MoveNext()) != '\0' || !_end", span="804-804", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReaderTest.cs"];
m22_455 [label="currentChar == '/'", span="806-806", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReaderTest.cs"];
m22_457 [label="_buffer.Append(currentChar)", span="813-813", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReaderTest.cs"];
m22_456 [label="_buffer.Append('*')", span="812-812", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReaderTest.cs"];
m22_461 [label="_buffer.Position = 0", span="830-830", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReaderTest.cs"];
m22_462 [label="Exit Newtonsoft.Json.JsonTextReader.ParseComment()", span="792-792", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReaderTest.cs"];
m22_463 [label="Entry Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", span="833-833", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReaderTest.cs"];
m22_464 [label="char currentChar = firstChar", span="835-835", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReaderTest.cs"];
m22_466 [label="currentChar != value[i]", span="840-840", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReaderTest.cs"];
m22_468 [label="i < value.Length && ((currentChar = MoveNext()) != '\0' || !_end)", span="846-846", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReaderTest.cs"];
m22_469 [label="return (i == value.Length);", span="848-848", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReaderTest.cs"];
m22_465 [label="int i = 0", span="837-837", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReaderTest.cs"];
m22_467 [label="i++", span="844-844", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReaderTest.cs"];
m22_470 [label="Exit Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", span="833-833", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReaderTest.cs"];
m22_78 [label="Entry Newtonsoft.Json.JsonTextReader.MoveNext()", span="265-265", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_135 [label="int value = _reader.Read()", span="267-267", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_136 [label=value, span="269-269", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_149 [label="return (char)value;", span="290-290", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_137 [label="-1", span="271-271", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_140 [label=CarriageReturnValue, span="274-274", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_145 [label=LineFeedValue, span="281-281", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_148 [label="_currentLinePosition++", span="286-286", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_138 [label="_end = true", span="272-272", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_139 [label="return '\0';", span="273-273", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_141 [label="_reader.Peek() == LineFeedValue", span="275-275", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_142 [label="_reader.Read()", span="276-276", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_143 [label="_currentLineNumber++", span="278-278", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_144 [label="_currentLinePosition = 0", span="279-279", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_146 [label="_currentLineNumber++", span="282-282", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_147 [label="_currentLinePosition = 0", span="283-283", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_150 [label="Exit Newtonsoft.Json.JsonTextReader.MoveNext()", span="265-265", cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReaderTest.cs"];
m22_297 [label="Entry Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", span="672-672", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReaderTest.cs"];
m22_389 [label="bool whitespace = false", span="674-674", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReaderTest.cs"];
m22_390 [label="char currentChar = initialChar", span="675-675", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReaderTest.cs"];
m22_395 [label="return (!oneOrMore || whitespace);", span="684-684", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReaderTest.cs"];
m22_391 [label="currentChar == ' ' || char.IsWhiteSpace(currentChar)", span="676-676", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReaderTest.cs"];
m22_394 [label="finalChar = currentChar", span="682-682", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReaderTest.cs"];
m22_392 [label="whitespace = true", span="678-678", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReaderTest.cs"];
m22_393 [label="currentChar = MoveNext()", span="679-679", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReaderTest.cs"];
m22_396 [label="Exit Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", span="672-672", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReaderTest.cs"];
m22_295 [label="Entry Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="545-545", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReaderTest.cs"];
m22_298 [label="return (char.IsLetterOrDigit(value) || value == '_' || value == '$');", span="547-547", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReaderTest.cs"];
m22_299 [label="Exit Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="545-545", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReaderTest.cs"];
m22_27 [label="Entry System.Convert.FromBase64CharArray(char[], int, int)", span="0-0", cluster="System.Convert.FromBase64CharArray(char[], int, int)", file="JsonTextReaderTest.cs"];
m22_539 [label="Newtonsoft.Json.JsonTextReader", span="", file="JsonTextReaderTest.cs"];
m23_284 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", span="748-748", cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JsonTextWriter.cs"];
m23_285 [label="InternalWriteWhitespace(ws)", span="750-750", cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JsonTextWriter.cs"];
m23_286 [label="_writer.Write(ws)", span="752-752", cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JsonTextWriter.cs"];
m23_287 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", span="748-748", cluster="Newtonsoft.Json.JsonTextWriter.WriteWhitespace(string)", file="JsonTextWriter.cs"];
m23_55 [label="Entry Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", span="94-94", cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JsonTextWriter.cs"];
m23_227 [label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="JsonTextWriter.cs"];
m23_28 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartObject()", span="198-198", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObject()", file="JsonTextWriter.cs"];
m23_29 [label="InternalWriteStart(JsonToken.StartObject, JsonContainerType.Object)", span="200-200", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObject()", file="JsonTextWriter.cs"];
m23_30 [label="_writer.Write('{')", span="202-202", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObject()", file="JsonTextWriter.cs"];
m23_31 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteStartObject()", span="198-198", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObject()", file="JsonTextWriter.cs"];
m23_127 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteRaw()", span="1680-1680", cluster="Newtonsoft.Json.JsonWriter.InternalWriteRaw()", file="JsonTextWriter.cs"];
m23_179 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", span="527-527", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JsonTextWriter.cs"];
m23_180 [label="InternalWriteValue(JsonToken.Boolean)", span="529-529", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JsonTextWriter.cs"];
m23_181 [label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.Boolean)", span="530-530", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JsonTextWriter.cs"];
m23_182 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", span="527-527", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JsonTextWriter.cs"];
m23_95 [label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0", cluster="System.IO.TextWriter.Write(char[], int, int)", file="JsonTextWriter.cs"];
m23_196 [label="Entry Newtonsoft.Json.JsonConvert.ToString(char)", span="173-173", cluster="Newtonsoft.Json.JsonConvert.ToString(char)", file="JsonTextWriter.cs"];
m23_161 [label="Entry Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="268-268", cluster="Newtonsoft.Json.JsonConvert.ToString(float, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonTextWriter.cs"];
m23_192 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(char)", span="558-558", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", file="JsonTextWriter.cs"];
m23_193 [label="InternalWriteValue(JsonToken.String)", span="560-560", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", file="JsonTextWriter.cs"];
m23_194 [label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.String)", span="561-561", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", file="JsonTextWriter.cs"];
m23_195 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(char)", span="558-558", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(char)", file="JsonTextWriter.cs"];
m23_25 [label="Entry Newtonsoft.Json.JsonWriter.Close()", span="398-398", cluster="Newtonsoft.Json.JsonWriter.Close()", file="JsonTextWriter.cs"];
m23_172 [label="Entry Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", span="298-298", cluster="Newtonsoft.Json.JsonConvert.ToString(double, Newtonsoft.Json.FloatFormatHandling, char, bool)", file="JsonTextWriter.cs"];
m23_63 [label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", span="268-268", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs"];
m23_64 [label="InternalWritePropertyName(name)", span="270-270", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs"];
m23_65 [label=escape, span="272-272", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs"];
m23_66 [label="WriteEscapedString(name, _quoteName)", span="274-274", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs"];
m23_69 [label="_writer.Write(name)", span="283-283", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs"];
m23_67 [label=_quoteName, span="278-278", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs"];
m23_68 [label="_writer.Write(_quoteChar)", span="280-280", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs"];
m23_70 [label=_quoteName, span="285-285", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs"];
m23_71 [label="_writer.Write(_quoteChar)", span="287-287", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs"];
m23_72 [label="_writer.Write(':')", span="291-291", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs"];
m23_73 [label="Exit Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", span="268-268", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriter.cs"];
m23_144 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", span="442-442", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", file="JsonTextWriter.cs"];
m23_145 [label="InternalWriteValue(JsonToken.Integer)", span="444-444", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", file="JsonTextWriter.cs"];
m23_146 [label="WriteIntegerValue(value)", span="445-445", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", file="JsonTextWriter.cs"];
m23_147 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", span="442-442", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(uint)", file="JsonTextWriter.cs"];
m23_162 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", span="483-483", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonTextWriter.cs"];
m23_163 [label="value == null", span="485-485", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonTextWriter.cs"];
m23_166 [label="WriteValueInternal(JsonConvert.ToString(value.Value, FloatFormatHandling, QuoteChar, true), JsonToken.Float)", span="492-492", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", color=red, community=0, file="JsonTextWriter.cs"];
m23_164 [label="WriteNull()", span="487-487", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonTextWriter.cs"];
m23_165 [label="InternalWriteValue(JsonToken.Float)", span="491-491", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonTextWriter.cs"];
m23_167 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", span="483-483", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonTextWriter.cs"];
m23_237 [label="Entry Newtonsoft.Json.Utilities.Base64Encoder.Encode(byte[], int, int)", span="47-47", cluster="Newtonsoft.Json.Utilities.Base64Encoder.Encode(byte[], int, int)", file="JsonTextWriter.cs"];
m23_184 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(short)", span="537-537", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", file="JsonTextWriter.cs"];
m23_185 [label="InternalWriteValue(JsonToken.Integer)", span="539-539", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", file="JsonTextWriter.cs"];
m23_186 [label="WriteIntegerValue(value)", span="540-540", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", file="JsonTextWriter.cs"];
m23_187 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(short)", span="537-537", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(short)", file="JsonTextWriter.cs"];
m23_56 [label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", span="254-254", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonTextWriter.cs"];
m23_57 [label="InternalWritePropertyName(name)", span="256-256", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonTextWriter.cs"];
m23_58 [label="WriteEscapedString(name, _quoteName)", span="258-258", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonTextWriter.cs"];
m23_59 [label="_writer.Write(':')", span="260-260", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonTextWriter.cs"];
m23_60 [label="Exit Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", span="254-254", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonTextWriter.cs"];
m23_128 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="407-407", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriter.cs"];
m23_129 [label="InternalWriteValue(JsonToken.String)", span="409-409", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriter.cs"];
m23_130 [label="value == null", span="411-411", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriter.cs"];
m23_132 [label="WriteEscapedString(value, true)", span="417-417", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriter.cs"];
m23_131 [label="WriteValueInternal(JsonConvert.Null, JsonToken.Null)", span="413-413", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriter.cs"];
m23_133 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="407-407", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriter.cs"];
m23_94 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="JsonTextWriter.cs"];
m23_239 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="648-648", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs"];
m23_240 [label="InternalWriteValue(JsonToken.Date)", span="650-650", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs"];
m23_245 [label="pos = DateTimeUtils.WriteDateTimeString(_writeBuffer, pos, (DateFormatHandling == DateFormatHandling.IsoDateFormat) ? value.DateTime : value.UtcDateTime, value.Offset, DateTimeKind.Local, DateFormatHandling)", span="658-658", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs"];
m23_249 [label="_writer.Write(value.ToString(DateFormatString, Culture))", span="666-666", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs"];
m23_241 [label="string.IsNullOrEmpty(DateFormatString)", span="652-652", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs"];
m23_242 [label="EnsureWriteBuffer()", span="654-654", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs"];
m23_248 [label="_writer.Write(_quoteChar)", span="665-665", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs"];
m23_243 [label="int pos = 0", span="656-656", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs"];
m23_244 [label="_writeBuffer[pos++] = _quoteChar", span="657-657", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs"];
m23_246 [label="_writeBuffer[pos++] = _quoteChar", span="659-659", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs"];
m23_247 [label="_writer.Write(_writeBuffer, 0, pos)", span="661-661", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs"];
m23_250 [label="_writer.Write(_quoteChar)", span="667-667", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs"];
m23_251 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="648-648", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriter.cs"];
m23_209 [label="Entry Newtonsoft.Json.JsonConvert.ToString(decimal)", span="349-349", cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonTextWriter.cs"];
m23_26 [label="Entry Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54", cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JsonTextWriter.cs"];
m23_74 [label="Entry Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged()", span="294-294", cluster="Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged()", file="JsonTextWriter.cs"];
m23_75 [label="UpdateCharEscapeFlags()", span="296-296", cluster="Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged()", file="JsonTextWriter.cs"];
m23_76 [label="Exit Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged()", span="294-294", cluster="Newtonsoft.Json.JsonTextWriter.OnStringEscapeHandlingChanged()", file="JsonTextWriter.cs"];
m23_270 [label="Entry System.TimeSpan.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.TimeSpan.ToString(string, System.IFormatProvider)", file="JsonTextWriter.cs"];
m23_277 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteComment(string)", span="735-735", cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonTextWriter.cs"];
m23_278 [label="InternalWriteComment()", span="737-737", cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonTextWriter.cs"];
m23_280 [label="_writer.Write(text)", span="740-740", cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonTextWriter.cs"];
m23_279 [label="_writer.Write(''/*'')", span="739-739", cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonTextWriter.cs"];
m23_281 [label="_writer.Write(''*/'')", span="741-741", cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonTextWriter.cs"];
m23_282 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteComment(string)", span="735-735", cluster="Newtonsoft.Json.JsonTextWriter.WriteComment(string)", file="JsonTextWriter.cs"];
m23_152 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", span="463-463", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JsonTextWriter.cs"];
m23_153 [label="InternalWriteValue(JsonToken.Integer)", span="465-465", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JsonTextWriter.cs"];
m23_154 [label="WriteIntegerValue(value)", span="466-466", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JsonTextWriter.cs"];
m23_155 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", span="463-463", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ulong)", file="JsonTextWriter.cs"];
m23_288 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", span="1697-1697", cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="JsonTextWriter.cs"];
m23_238 [label="Entry Newtonsoft.Json.Utilities.Base64Encoder.Flush()", span="112-112", cluster="Newtonsoft.Json.Utilities.Base64Encoder.Flush()", file="JsonTextWriter.cs"];
m23_16 [label="Entry System.IO.TextWriter.Flush()", span="0-0", cluster="System.IO.TextWriter.Flush()", file="JsonTextWriter.cs"];
m23_210 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="599-599", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs"];
m23_211 [label="InternalWriteValue(JsonToken.Date)", span="601-601", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs"];
m23_212 [label="value = DateTimeUtils.EnsureDateTime(value, DateTimeZoneHandling)", span="602-602", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs"];
m23_213 [label="string.IsNullOrEmpty(DateFormatString)", span="604-604", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs"];
m23_217 [label="pos = DateTimeUtils.WriteDateTimeString(_writeBuffer, pos, value, null, value.Kind, DateFormatHandling)", span="610-610", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs"];
m23_221 [label="_writer.Write(value.ToString(DateFormatString, Culture))", span="618-618", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs"];
m23_214 [label="EnsureWriteBuffer()", span="606-606", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs"];
m23_220 [label="_writer.Write(_quoteChar)", span="617-617", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs"];
m23_215 [label="int pos = 0", span="608-608", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs"];
m23_216 [label="_writeBuffer[pos++] = _quoteChar", span="609-609", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs"];
m23_218 [label="_writeBuffer[pos++] = _quoteChar", span="611-611", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs"];
m23_219 [label="_writer.Write(_writeBuffer, 0, pos)", span="613-613", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs"];
m23_222 [label="_writer.Write(_quoteChar)", span="619-619", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs"];
m23_223 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="599-599", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriter.cs"];
m23_10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonTextWriter.cs"];
m23_173 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", span="510-510", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonTextWriter.cs"];
m23_174 [label="value == null", span="512-512", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonTextWriter.cs"];
m23_177 [label="WriteValueInternal(JsonConvert.ToString(value.Value, FloatFormatHandling, QuoteChar, true), JsonToken.Float)", span="519-519", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", color=red, community=0, file="JsonTextWriter.cs"];
m23_175 [label="WriteNull()", span="514-514", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonTextWriter.cs"];
m23_176 [label="InternalWriteValue(JsonToken.Float)", span="518-518", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonTextWriter.cs"];
m23_178 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", span="510-510", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonTextWriter.cs"];
m23_168 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="500-500", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonTextWriter.cs"];
m23_169 [label="InternalWriteValue(JsonToken.Float)", span="502-502", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonTextWriter.cs"];
m23_170 [label="WriteValueInternal(JsonConvert.ToString(value, FloatFormatHandling, QuoteChar, false), JsonToken.Float)", span="503-503", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonTextWriter.cs"];
m23_171 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="500-500", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonTextWriter.cs"];
m23_11 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JsonTextWriter.cs"];
m23_111 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", span="1691-1691", cluster="Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs"];
m23_157 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float)", span="473-473", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonTextWriter.cs"];
m23_158 [label="InternalWriteValue(JsonToken.Float)", span="475-475", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonTextWriter.cs"];
m23_159 [label="WriteValueInternal(JsonConvert.ToString(value, FloatFormatHandling, QuoteChar, false), JsonToken.Float)", span="476-476", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonTextWriter.cs"];
m23_160 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(float)", span="473-473", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonTextWriter.cs"];
m23_80 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteIndent()", span="307-307", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs"];
m23_81 [label="_writer.WriteLine()", span="309-309", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs"];
m23_82 [label="int currentIndentCount = Top * _indentation", span="312-312", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs"];
m23_83 [label="currentIndentCount > 0", span="314-314", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs"];
m23_86 [label="currentIndentCount > 0", span="321-321", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs"];
m23_87 [label="int writeCount = Math.Min(currentIndentCount, 10)", span="323-323", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs"];
m23_89 [label="currentIndentCount -= writeCount", span="327-327", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs"];
m23_84 [label="_indentChars == null", span="316-316", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs"];
m23_85 [label="_indentChars = new string(_indentChar, 10).ToCharArray()", span="318-318", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs"];
m23_88 [label="_writer.Write(_indentChars, 0, writeCount)", span="325-325", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs"];
m23_90 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteIndent()", span="307-307", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndent()", file="JsonTextWriter.cs"];
m23_271 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="717-717", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonTextWriter.cs"];
m23_272 [label="value == null", span="719-719", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonTextWriter.cs"];
m23_275 [label="WriteEscapedString(value.OriginalString, true)", span="726-726", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonTextWriter.cs"];
m23_273 [label="WriteNull()", span="721-721", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonTextWriter.cs"];
m23_274 [label="InternalWriteValue(JsonToken.String)", span="725-725", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonTextWriter.cs"];
m23_276 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="717-717", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonTextWriter.cs"];
m23_262 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="697-697", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs"];
m23_263 [label="InternalWriteValue(JsonToken.String)", span="699-699", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs"];
m23_265 [label="text = value.ToString(null, CultureInfo.InvariantCulture)", span="705-705", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs"];
m23_264 [label="string text", span="701-701", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs"];
m23_266 [label="_writer.Write(_quoteChar)", span="708-708", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs"];
m23_267 [label="_writer.Write(text)", span="709-709", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs"];
m23_268 [label="_writer.Write(_quoteChar)", span="710-710", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs"];
m23_269 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="697-697", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriter.cs"];
m23_27 [label="Entry System.IO.TextWriter.Close()", span="0-0", cluster="System.IO.TextWriter.Close()", file="JsonTextWriter.cs"];
m23_45 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="232-232", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs"];
m23_46 [label=token, span="234-234", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs"];
m23_53 [label="throw JsonWriterException.Create(this, ''Invalid JsonToken: '' + token, null);", span="246-246", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs"];
m23_47 [label="JsonToken.EndObject", span="236-236", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs"];
m23_49 [label="JsonToken.EndArray", span="239-239", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs"];
m23_51 [label="JsonToken.EndConstructor", span="242-242", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs"];
m23_48 [label="_writer.Write('}')", span="237-237", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs"];
m23_50 [label="_writer.Write(']')", span="240-240", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs"];
m23_52 [label="_writer.Write(')')", span="243-243", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs"];
m23_54 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="232-232", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs"];
m23_261 [label="Entry System.Guid.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.Guid.ToString(string, System.IFormatProvider)", file="JsonTextWriter.cs"];
m23_33 [label="Entry System.IO.TextWriter.Write(char)", span="0-0", cluster="System.IO.TextWriter.Write(char)", file="JsonTextWriter.cs"];
m23_105 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(object)", span="359-359", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonTextWriter.cs"];
m23_106 [label="value is BigInteger", span="362-362", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonTextWriter.cs"];
m23_108 [label="WriteValueInternal(((BigInteger)value).ToString(CultureInfo.InvariantCulture), JsonToken.String)", span="365-365", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonTextWriter.cs"];
m23_109 [label="base.WriteValue(value)", span="370-370", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonTextWriter.cs"];
m23_107 [label="InternalWriteValue(JsonToken.Integer)", span="364-364", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonTextWriter.cs"];
m23_110 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(object)", span="359-359", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonTextWriter.cs"];
m23_91 [label="Entry System.IO.TextWriter.WriteLine()", span="0-0", cluster="System.IO.TextWriter.WriteLine()", file="JsonTextWriter.cs"];
m23_115 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteNull()", span="377-377", cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonTextWriter.cs"];
m23_116 [label="InternalWriteValue(JsonToken.Null)", span="379-379", cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonTextWriter.cs"];
m23_117 [label="WriteValueInternal(JsonConvert.Null, JsonToken.Null)", span="380-380", cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonTextWriter.cs"];
m23_118 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteNull()", span="377-377", cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonTextWriter.cs"];
m23_93 [label="Entry string.ToCharArray()", span="0-0", cluster="string.ToCharArray()", file="JsonTextWriter.cs"];
m23_17 [label="Entry Newtonsoft.Json.JsonTextWriter.Close()", span="175-175", cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonTextWriter.cs"];
m23_18 [label="base.Close()", span="177-177", cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonTextWriter.cs"];
m23_19 [label="_writeBuffer != null", span="179-179", cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonTextWriter.cs"];
m23_20 [label="BufferUtils.ReturnBuffer(_arrayPool, _writeBuffer)", span="181-181", cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonTextWriter.cs"];
m23_22 [label="CloseOutput && _writer != null", span="185-185", cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonTextWriter.cs"];
m23_21 [label="_writeBuffer = null", span="182-182", cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonTextWriter.cs"];
m23_23 [label="_writer.Close()", span="188-188", cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonTextWriter.cs"];
m23_24 [label="Exit Newtonsoft.Json.JsonTextWriter.Close()", span="175-175", cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonTextWriter.cs"];
m23_38 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="219-219", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonTextWriter.cs"];
m23_39 [label="InternalWriteStart(JsonToken.StartConstructor, JsonContainerType.Constructor)", span="221-221", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonTextWriter.cs"];
m23_41 [label="_writer.Write(name)", span="224-224", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonTextWriter.cs"];
m23_40 [label="_writer.Write(''new '')", span="223-223", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonTextWriter.cs"];
m23_42 [label="_writer.Write('(')", span="225-225", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonTextWriter.cs"];
m23_43 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="219-219", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonTextWriter.cs"];
m23_253 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", span="676-676", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs"];
m23_254 [label="InternalWriteValue(JsonToken.String)", span="678-678", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs"];
m23_256 [label="text = value.ToString(''D'', CultureInfo.InvariantCulture)", span="683-683", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs"];
m23_255 [label="string text = null", span="680-680", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs"];
m23_257 [label="_writer.Write(_quoteChar)", span="688-688", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs"];
m23_258 [label="_writer.Write(text)", span="689-689", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs"];
m23_259 [label="_writer.Write(_quoteChar)", span="690-690", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs"];
m23_260 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", span="676-676", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriter.cs"];
m23_139 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="431-431", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonTextWriter.cs"];
m23_140 [label="InternalWriteValue(JsonToken.Integer)", span="433-433", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonTextWriter.cs"];
m23_141 [label="WriteIntegerValue(value)", span="434-434", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonTextWriter.cs"];
m23_142 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="431-431", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonTextWriter.cs"];
m23_310 [label="Entry Newtonsoft.Json.Utilities.MathUtils.IntLength(ulong)", span="33-33", cluster="Newtonsoft.Json.Utilities.MathUtils.IntLength(ulong)", file="JsonTextWriter.cs"];
m23_201 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", span="579-579", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JsonTextWriter.cs"];
m23_202 [label="InternalWriteValue(JsonToken.Integer)", span="581-581", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JsonTextWriter.cs"];
m23_203 [label="WriteIntegerValue(value)", span="582-582", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JsonTextWriter.cs"];
m23_204 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", span="579-579", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(sbyte)", file="JsonTextWriter.cs"];
m23_12 [label="Entry Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", span="299-299", cluster="Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", file="JsonTextWriter.cs"];
m23_77 [label="_charEscapeFlags = JavaScriptUtils.GetCharEscapeFlags(StringEscapeHandling, _quoteChar)", span="301-301", cluster="Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", file="JsonTextWriter.cs"];
m23_78 [label="Exit Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", span="299-299", cluster="Newtonsoft.Json.JsonTextWriter.UpdateCharEscapeFlags()", file="JsonTextWriter.cs"];
m23_205 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="589-589", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonTextWriter.cs"];
m23_206 [label="InternalWriteValue(JsonToken.Float)", span="591-591", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonTextWriter.cs"];
m23_207 [label="WriteValueInternal(JsonConvert.ToString(value), JsonToken.Float)", span="592-592", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonTextWriter.cs"];
m23_208 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="589-589", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonTextWriter.cs"];
m23_61 [label="Entry Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", span="1674-1674", cluster="Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", file="JsonTextWriter.cs"];
m23_148 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(long)", span="452-452", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JsonTextWriter.cs"];
m23_149 [label="InternalWriteValue(JsonToken.Integer)", span="454-454", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JsonTextWriter.cs"];
m23_150 [label="WriteIntegerValue(value)", span="455-455", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JsonTextWriter.cs"];
m23_151 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(long)", span="452-452", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(long)", file="JsonTextWriter.cs"];
m23_112 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonTextWriter.cs"];
m23_156 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", span="783-783", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs"];
m23_300 [label="uvalue <= 9", span="785-785", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs"];
m23_301 [label="_writer.Write((char)('0' + uvalue))", span="787-787", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs"];
m23_303 [label="int totalLength = MathUtils.IntLength(uvalue)", span="793-793", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs"];
m23_305 [label="_writeBuffer[totalLength - ++length] = (char)('0' + (uvalue % 10))", span="798-798", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs"];
m23_306 [label="uvalue /= 10", span="799-799", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs"];
m23_302 [label="EnsureWriteBuffer()", span="791-791", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs"];
m23_304 [label="int length = 0", span="794-794", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs"];
m23_308 [label="_writer.Write(_writeBuffer, 0, length)", span="802-802", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs"];
m23_307 [label="uvalue != 0", span="800-800", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs"];
m23_309 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", span="783-783", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(ulong)", file="JsonTextWriter.cs"];
m23_13 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="167-167", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonTextWriter.cs"];
m23_14 [label="_writer.Flush()", span="169-169", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonTextWriter.cs"];
m23_15 [label="Exit Newtonsoft.Json.JsonTextWriter.Flush()", span="167-167", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonTextWriter.cs"];
m23_0 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs"];
m23_1 [label="textWriter == null", span="150-150", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs"];
m23_2 [label="throw new ArgumentNullException(nameof(textWriter));", span="152-152", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs"];
m23_3 [label="_writer = textWriter", span="155-155", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs"];
m23_4 [label="_quoteChar = ''''", span="156-156", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs"];
m23_5 [label="_quoteName = true", span="157-157", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs"];
m23_6 [label="_indentChar = ' '", span="158-158", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs"];
m23_7 [label="_indentation = 2", span="159-159", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs"];
m23_8 [label="UpdateCharEscapeFlags()", span="161-161", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs"];
m23_9 [label="Exit Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriter.cs"];
m23_225 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JsonTextWriter.cs"];
m23_224 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="77-77", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonTextWriter.cs"];
m23_143 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", span="764-764", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs"];
m23_293 [label="value >= 0 && value <= 9", span="766-766", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs"];
m23_294 [label="_writer.Write((char)('0' + value))", span="768-768", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs"];
m23_295 [label="ulong uvalue = (value < 0) ? (ulong)-value : (ulong)value", span="772-772", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs"];
m23_296 [label="value < 0", span="774-774", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs"];
m23_298 [label="WriteIntegerValue(uvalue)", span="779-779", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs"];
m23_297 [label="_writer.Write('-')", span="776-776", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs"];
m23_299 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", span="764-764", cluster="Newtonsoft.Json.JsonTextWriter.WriteIntegerValue(long)", file="JsonTextWriter.cs"];
m23_123 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", span="396-396", cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JsonTextWriter.cs"];
m23_124 [label="InternalWriteRaw()", span="398-398", cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JsonTextWriter.cs"];
m23_125 [label="_writer.Write(json)", span="400-400", cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JsonTextWriter.cs"];
m23_126 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", span="396-396", cluster="Newtonsoft.Json.JsonTextWriter.WriteRaw(string)", file="JsonTextWriter.cs"];
m23_197 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", span="568-568", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonTextWriter.cs"];
m23_198 [label="InternalWriteValue(JsonToken.Integer)", span="570-570", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonTextWriter.cs"];
m23_199 [label="WriteIntegerValue(value)", span="571-571", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonTextWriter.cs"];
m23_200 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", span="568-568", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte)", file="JsonTextWriter.cs"];
m23_283 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteComment()", span="1708-1708", cluster="Newtonsoft.Json.JsonWriter.InternalWriteComment()", file="JsonTextWriter.cs"];
m23_183 [label="Entry Newtonsoft.Json.JsonConvert.ToString(bool)", span="163-163", cluster="Newtonsoft.Json.JsonConvert.ToString(bool)", file="JsonTextWriter.cs"];
m23_96 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", span="335-335", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", file="JsonTextWriter.cs"];
m23_97 [label="_writer.Write(',')", span="337-337", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", file="JsonTextWriter.cs"];
m23_98 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", span="335-335", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueDelimiter()", file="JsonTextWriter.cs"];
m23_62 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", span="421-421", cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", file="JsonTextWriter.cs"];
m23_134 [label="EnsureWriteBuffer()", span="423-423", cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", file="JsonTextWriter.cs"];
m23_135 [label="JavaScriptUtils.WriteEscapedJavaScriptString(_writer, value, _quoteChar, quote, _charEscapeFlags, StringEscapeHandling, _arrayPool, ref _writeBuffer)", span="424-424", cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", file="JsonTextWriter.cs"];
m23_136 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", span="421-421", cluster="Newtonsoft.Json.JsonTextWriter.WriteEscapedString(string, bool)", file="JsonTextWriter.cs"];
m23_79 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", span="115-115", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JsonTextWriter.cs"];
m23_92 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="JsonTextWriter.cs"];
m23_113 [label="Entry Unk.WriteValueInternal", span="", cluster="Unk.WriteValueInternal", file="JsonTextWriter.cs"];
m23_292 [label="Entry Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="43-43", cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JsonTextWriter.cs"];
m23_114 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1396-1396", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextWriter.cs"];
m23_34 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="208-208", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTextWriter.cs"];
m23_35 [label="InternalWriteStart(JsonToken.StartArray, JsonContainerType.Array)", span="210-210", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTextWriter.cs"];
m23_36 [label="_writer.Write('[')", span="212-212", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTextWriter.cs"];
m23_37 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="208-208", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTextWriter.cs"];
m23_252 [label="Entry System.DateTimeOffset.ToString(string, System.IFormatProvider)", span="0-0", cluster="System.DateTimeOffset.ToString(string, System.IFormatProvider)", file="JsonTextWriter.cs"];
m23_226 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", span="630-630", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(char[], int, System.DateTime, System.TimeSpan?, System.DateTimeKind, Newtonsoft.Json.DateFormatHandling)", file="JsonTextWriter.cs"];
m23_99 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", span="343-343", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", file="JsonTextWriter.cs"];
m23_100 [label="_writer.Write(' ')", span="345-345", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", file="JsonTextWriter.cs"];
m23_101 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", span="343-343", cluster="Newtonsoft.Json.JsonTextWriter.WriteIndentSpace()", file="JsonTextWriter.cs"];
m23_32 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", span="1684-1684", cluster="Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", file="JsonTextWriter.cs"];
m23_119 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteUndefined()", span="386-386", cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JsonTextWriter.cs"];
m23_120 [label="InternalWriteValue(JsonToken.Undefined)", span="388-388", cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JsonTextWriter.cs"];
m23_121 [label="WriteValueInternal(JsonConvert.Undefined, JsonToken.Undefined)", span="389-389", cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JsonTextWriter.cs"];
m23_122 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteUndefined()", span="386-386", cluster="Newtonsoft.Json.JsonTextWriter.WriteUndefined()", file="JsonTextWriter.cs"];
m23_228 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="627-627", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs"];
m23_229 [label="value == null", span="629-629", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs"];
m23_233 [label="Base64Encoder.Encode(value, 0, value.Length)", span="637-637", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs"];
m23_230 [label="WriteNull()", span="631-631", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs"];
m23_231 [label="InternalWriteValue(JsonToken.Bytes)", span="635-635", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs"];
m23_232 [label="_writer.Write(_quoteChar)", span="636-636", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs"];
m23_234 [label="Base64Encoder.Flush()", span="638-638", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs"];
m23_235 [label="_writer.Write(_quoteChar)", span="639-639", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs"];
m23_236 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="627-627", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriter.cs"];
m23_138 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="148-148", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JsonTextWriter.cs"];
m23_188 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", span="548-548", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonTextWriter.cs"];
m23_189 [label="InternalWriteValue(JsonToken.Integer)", span="550-550", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonTextWriter.cs"];
m23_190 [label="WriteIntegerValue(value)", span="551-551", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonTextWriter.cs"];
m23_191 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", span="548-548", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(ushort)", file="JsonTextWriter.cs"];
m23_44 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="JsonTextWriter.cs"];
m23_102 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", span="348-348", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs"];
m23_103 [label="_writer.Write(value)", span="350-350", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs"];
m23_104 [label="Exit Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", span="348-348", cluster="Newtonsoft.Json.JsonTextWriter.WriteValueInternal(string, Newtonsoft.Json.JsonToken)", file="JsonTextWriter.cs"];
m23_137 [label="Entry Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", span="755-755", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", file="JsonTextWriter.cs"];
m23_289 [label="_writeBuffer == null", span="757-757", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", file="JsonTextWriter.cs"];
m23_290 [label="_writeBuffer = BufferUtils.RentBuffer(_arrayPool, 35)", span="760-760", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", file="JsonTextWriter.cs"];
m23_291 [label="Exit Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", span="755-755", cluster="Newtonsoft.Json.JsonTextWriter.EnsureWriteBuffer()", file="JsonTextWriter.cs"];
m23_311 [label="Newtonsoft.Json.JsonTextWriter", span="", file="JsonTextWriter.cs"];
m24_13 [label="writer.WritePropertyName(''Prop2'')", span="80-80", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_835 [label="Entry char.ToString()", span="0-0", cluster="char.ToString()", file="JsonTextWriterTest.cs"];
m24_54 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="JsonTextWriterTest.cs"];
m24_67 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="JsonTextWriterTest.cs"];
m24_53 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", span="527-527", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JsonTextWriterTest.cs"];
m24_189 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", span="262-262", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs"];
m24_190 [label="StringWriter sw = new StringWriter()", span="264-264", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs"];
m24_198 [label="Assert.AreEqual(expected, json)", span="277-277", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs"];
m24_191 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="265-265", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs"];
m24_196 [label="string json = sw.ToString()", span="274-274", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs"];
m24_197 [label="string expected = @''[''''c'''']''", span="275-275", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs"];
m24_192 [label="char? value = 'c'", span="267-267", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs"];
m24_193 [label="jsonWriter.WriteStartArray()", span="269-269", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs"];
m24_194 [label="jsonWriter.WriteValue((object)value)", span="270-270", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs"];
m24_195 [label="jsonWriter.WriteEndArray()", span="271-271", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs"];
m24_199 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", span="262-262", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs"];
m24_30 [label="Assert.AreEqual(3, m2[''3''])", span="89-89", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="JsonTextWriterTest.cs"];
m24_901 [label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0", cluster="System.IO.TextWriter.Write(char[], int, int)", file="JsonTextWriterTest.cs"];
m24_472 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="357-357", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextWriterTest.cs"];
m24_181 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", span="1135-1135", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="JsonTextWriterTest.cs"];
m24_273 [label="Entry Newtonsoft.Json.JsonWriter.Close()", span="398-398", cluster="Newtonsoft.Json.JsonWriter.Close()", file="JsonTextWriterTest.cs"];
m24_121 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char)", span="1010-1010", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="JsonTextWriterTest.cs"];
m24_52 [label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0", cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="JsonTextWriterTest.cs"];
m24_820 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonTextWriterTest.cs"];
m24_936 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="522-522", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriterTest.cs"];
m24_488 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="905-905", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonTextWriterTest.cs"];
m24_84 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonTextWriterTest.cs"];
m24_10 [label="writer.WriteStartObject()", span="75-75", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_187 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", span="1314-1314", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="JsonTextWriterTest.cs"];
m24_126 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="1038-1038", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonTextWriterTest.cs"];
m24_741 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", span="1157-1157", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_742 [label="StringWriter sw = new StringWriter()", span="1159-1159", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_749 [label="Assert.AreEqual(script, reader.ReadAsString())", span="1175-1175", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_747 [label="Assert.AreEqual(@''''''\u003cscript type=\u0022text/javascript\u0022\u003ealert(\u0027hi\u0027);\u003c/script\u003e'''''', json)", span="1171-1171", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_743 [label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml\r\n            }", span="1160-1163", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_746 [label="string json = sw.ToString()", span="1169-1169", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_744 [label="string script = @''<script type=''''text/javascript''''>alert('hi');</script>''", span="1165-1165", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_748 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1173-1173", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_745 [label="writer.WriteValue(script)", span="1167-1167", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_750 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", span="1157-1157", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_274 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", span="397-397", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_292 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="419-419", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_295 [label="StringAssert.AreEqual(expected, result)", span="445-445", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_277 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="402-402", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_291 [label="jsonWriter.WriteEndObject()", span="418-418", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_293 [label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="433-442", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_294 [label="string result = sb.ToString()", span="443-443", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_276 [label="StringWriter sw = new StringWriter(sb)", span="400-400", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_278 [label="jsonWriter.Formatting = Formatting.Indented", span="404-404", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_279 [label="jsonWriter.WriteStartObject()", span="406-406", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_280 [label="jsonWriter.WritePropertyName(''CPU'')", span="407-407", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_281 [label="jsonWriter.WriteValue(''Intel'')", span="408-408", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_282 [label="jsonWriter.WritePropertyName(''PSU'')", span="409-409", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_283 [label="jsonWriter.WriteValue(''500W'')", span="410-410", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_284 [label="jsonWriter.WritePropertyName(''Drives'')", span="411-411", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_285 [label="jsonWriter.WriteStartArray()", span="412-412", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_286 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="413-413", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_287 [label="jsonWriter.WriteComment(''(broken)'')", span="414-414", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_288 [label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="415-415", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_289 [label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="416-416", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_290 [label="jsonWriter.WriteEnd()", span="417-417", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_275 [label="StringBuilder sb = new StringBuilder()", span="399-399", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_296 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", span="397-397", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs"];
m24_94 [label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1626-1626", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonTextWriterTest.cs"];
m24_979 [label="_value = value", span="1628-1628", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonTextWriterTest.cs"];
m24_980 [label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1626-1626", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonTextWriterTest.cs"];
m24_55 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonTextWriterTest.cs"];
m24_346 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="964-964", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JsonTextWriterTest.cs"];
m24_733 [label="Entry Newtonsoft.Json.JsonWriter.BuildStateArray()", span="78-78", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_530 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", span="823-823", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_547 [label="StringAssert.AreEqual(@''[\r\n  2147483647,\r\n  -2147483648,\r\n  0,\r\n  0,\r\n  9,\r\n  9,\r\n  9223372036854775807,\r\n  -9223372036854775808,\r\n  18446744073709551615,\r\n  0\r\n]'', sb.ToString())", span="848-859", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_533 [label="JsonWriter jsonWriter = new JsonTextWriter(sw) { Formatting = Formatting.Indented }", span="828-828", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_531 [label="StringBuilder sb = new StringBuilder()", span="825-825", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_546 [label="Console.WriteLine(sb.ToString())", span="846-846", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_532 [label="StringWriter sw = new StringWriter(sb)", span="826-826", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_534 [label="jsonWriter.WriteStartArray()", span="830-830", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_535 [label="jsonWriter.WriteValue(int.MaxValue)", span="832-832", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_536 [label="jsonWriter.WriteValue(int.MinValue)", span="833-833", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_537 [label="jsonWriter.WriteValue(0)", span="834-834", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_538 [label="jsonWriter.WriteValue(-0)", span="835-835", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_539 [label="jsonWriter.WriteValue(9L)", span="836-836", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_540 [label="jsonWriter.WriteValue(9UL)", span="837-837", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_541 [label="jsonWriter.WriteValue(long.MaxValue)", span="838-838", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_542 [label="jsonWriter.WriteValue(long.MinValue)", span="839-839", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_543 [label="jsonWriter.WriteValue(ulong.MaxValue)", span="840-840", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_544 [label="jsonWriter.WriteValue(ulong.MinValue)", span="841-841", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_545 [label="jsonWriter.WriteEndArray()", span="843-843", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_548 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", span="823-823", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs"];
m24_176 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short?)", span="1199-1199", cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="JsonTextWriterTest.cs"];
m24_923 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", span="1603-1603", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="JsonTextWriterTest.cs"];
m24_971 [label="SetWriteState(JsonToken.EndObject, null)", span="1605-1605", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="JsonTextWriterTest.cs"];
m24_972 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", span="1603-1603", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="JsonTextWriterTest.cs"];
m24_0 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", span="59-59", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_1 [label="JsonTextReaderTest.FakeArrayPool arrayPool = new JsonTextReaderTest.FakeArrayPool()", span="61-61", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_2 [label="string longString = new string('A', 2000)", span="63-63", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_5 [label="int i = 0", span="67-67", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_6 [label="i < 1000", span="67-67", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_3 [label="string longEscapedString = ''Hello!'' + new string('!', 50) + new string('\n', 1000) + ''Good bye!''", span="64-64", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_4 [label="string longerEscapedString = ''Hello!'' + new string('!', 2000) + new string('\n', 1000) + ''Good bye!''", span="65-65", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_7 [label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="69-69", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_38 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", span="103-103", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs"];
m24_44 [label="jsonWriter.WriteValue(true)", span="117-117", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs"];
m24_41 [label="var jsonWriter = new JsonTextWriter(streamWriter)\r\n            {\r\n                CloseOutput = true,\r\n                Indentation = 2,\r\n                Formatting = Formatting.Indented\r\n            }", span="108-113", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs"];
m24_43 [label="jsonWriter.WritePropertyName(''prop'')", span="116-116", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs"];
m24_45 [label="jsonWriter.WriteEndObject()", span="118-118", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs"];
m24_48 [label="Assert.AreEqual(@''{'' + '\n' + @''  ''''prop'''': true'' + '\n' + ''}'', json)", span="125-125", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs"];
m24_40 [label="var streamWriter = new StreamWriter(ms, new UTF8Encoding(false)) { NewLine = ''\n'' }", span="107-107", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs"];
m24_42 [label="jsonWriter.WriteStartObject()", span="115-115", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs"];
m24_46 [label="byte[] data = ms.ToArray()", span="121-121", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs"];
m24_47 [label="string json = Encoding.UTF8.GetString(data, 0, data.Length)", span="123-123", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs"];
m24_39 [label="MemoryStream ms = new MemoryStream()", span="105-105", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs"];
m24_49 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", span="103-103", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs"];
m24_920 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", span="1596-1596", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonTextWriterTest.cs"];
m24_968 [label="SetWriteState(JsonToken.StartObject, null)", span="1598-1598", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonTextWriterTest.cs"];
m24_969 [label="_writer.Write(''{{{'')", span="1600-1600", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonTextWriterTest.cs"];
m24_970 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", span="1596-1596", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonTextWriterTest.cs"];
m24_87 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", span="166-166", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="JsonTextWriterTest.cs"];
m24_88 [label="var sw = new StringWriter()", span="168-168", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="JsonTextWriterTest.cs"];
m24_91 [label="Assert.AreEqual(''1'', sw.ToString())", span="172-172", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="JsonTextWriterTest.cs"];
m24_89 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="169-169", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="JsonTextWriterTest.cs"];
m24_90 [label="writer.WriteValue(new ConvertibleInt(1))", span="170-170", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="JsonTextWriterTest.cs"];
m24_92 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", span="166-166", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="JsonTextWriterTest.cs"];
m24_183 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", span="483-483", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonTextWriterTest.cs"];
m24_432 [label="Entry Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="1431-1431", cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonTextWriterTest.cs"];
m24_751 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="402-402", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextWriterTest.cs"];
m24_804 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", span="1272-1272", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_808 [label="StringWriter sw = new StringWriter()", span="1278-1278", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_807 [label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="1276-1276", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_809 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1279-1279", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_818 [label="StringAssert.AreEqual(@''[\r\n  '2000 a.m.',\r\n  '2000 a.m.'\r\n]'', sw.ToString())", span="1292-1295", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_805 [label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="1274-1274", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_806 [label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="1275-1275", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_810 [label="writer.Formatting = Formatting.Indented", span="1280-1280", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_811 [label="writer.DateFormatString = ''yyyy tt''", span="1281-1281", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_812 [label="writer.Culture = culture", span="1282-1282", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_813 [label="writer.QuoteChar = '\''", span="1283-1283", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_814 [label="writer.WriteStartArray()", span="1285-1285", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_815 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1287-1287", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_816 [label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1288-1288", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_817 [label="writer.WriteEnd()", span="1290-1290", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_819 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", span="1272-1272", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs"];
m24_186 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonTextWriterTest.cs"];
m24_347 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="393-393", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonTextWriterTest.cs"];
m24_375 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", span="576-576", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_392 [label="StringAssert.AreEqual(expected, result)", span="608-608", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_378 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="581-581", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_391 [label="string result = sb.ToString()", span="606-606", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_390 [label="string expected = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity'''',\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="598-605", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_377 [label="StringWriter sw = new StringWriter(sb)", span="579-579", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_379 [label="jsonWriter.Formatting = Formatting.Indented", span="583-583", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_380 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.String", span="584-584", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_381 [label="jsonWriter.WriteStartArray()", span="586-586", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_382 [label="jsonWriter.WriteValue(double.NaN)", span="587-587", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_383 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="588-588", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_384 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="589-589", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_385 [label="jsonWriter.WriteValue(float.NaN)", span="590-590", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_386 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="591-591", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_387 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="592-592", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_388 [label="jsonWriter.WriteEndArray()", span="593-593", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_389 [label="jsonWriter.Flush()", span="595-595", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_376 [label="StringBuilder sb = new StringBuilder()", span="578-578", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_393 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", span="576-576", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs"];
m24_96 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonTextWriterTest.cs"];
m24_31 [label="Exit Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", span="78-78", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="JsonTextWriterTest.cs"];
m24_34 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="407-407", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriterTest.cs"];
m24_802 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JsonTextWriterTest.cs"];
m24_212 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", span="296-296", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs"];
m24_224 [label="Assert.AreEqual(expected, result)", span="314-314", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs"];
m24_223 [label="string result = sb.ToString()", span="312-312", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs"];
m24_222 [label="string expected = @''[''''\''''These pretzels are making me thirsty!\'''''''',''''Jeff's house was burninated.'''',''''1. You don't talk about fight club.\r\n2. You don't talk about fight club.'''',''''35% of\t statistics\n are made\r up.'''']''", span="311-311", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs"];
m24_215 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="301-301", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs"];
m24_213 [label="StringBuilder sb = new StringBuilder()", span="298-298", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs"];
m24_221 [label="jsonWriter.WriteEndArray()", span="308-308", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs"];
m24_214 [label="StringWriter sw = new StringWriter(sb)", span="299-299", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs"];
m24_216 [label="jsonWriter.WriteStartArray()", span="303-303", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs"];
m24_217 [label="jsonWriter.WriteValue(@''''''These pretzels are making me thirsty!'''''')", span="304-304", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs"];
m24_218 [label="jsonWriter.WriteValue(''Jeff's house was burninated.'')", span="305-305", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs"];
m24_219 [label="jsonWriter.WriteValue(''1. You don't talk about fight club.\r\n2. You don't talk about fight club.'')", span="306-306", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs"];
m24_220 [label="jsonWriter.WriteValue(''35% of\t statistics\n are made\r up.'')", span="307-307", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs"];
m24_225 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", span="296-296", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs"];
m24_449 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", span="703-703", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs"];
m24_459 [label="Assert.AreEqual(expected, result)", span="720-720", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs"];
m24_458 [label="string result = sb.ToString()", span="718-718", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs"];
m24_457 [label="string expected = @''{''''PropertyName'''':[1,2,3,4,5]}''", span="717-717", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs"];
m24_452 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="708-708", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs"];
m24_450 [label="StringBuilder sb = new StringBuilder()", span="705-705", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs"];
m24_456 [label="jsonWriter.WriteEnd()", span="714-714", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs"];
m24_451 [label="StringWriter sw = new StringWriter(sb)", span="706-706", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs"];
m24_453 [label="jsonWriter.Formatting = Formatting.Indented", span="710-710", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs"];
m24_454 [label="jsonWriter.WriteStartObject()", span="712-712", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs"];
m24_455 [label="jsonWriter.WriteRaw(@''''''PropertyName'''':[1,2,3,4,5]'')", span="713-713", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs"];
m24_460 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", span="703-703", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs"];
m24_800 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="648-648", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriterTest.cs"];
m24_565 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken, object)", span="508-508", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken, object)", file="JsonTextWriterTest.cs"];
m24_549 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="945-945", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JsonTextWriterTest.cs"];
m24_550 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="955-955", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JsonTextWriterTest.cs"];
m24_838 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JsonTextWriterTest.cs"];
m24_904 [label="Entry System.IO.TextWriter.Write(char[])", span="0-0", cluster="System.IO.TextWriter.Write(char[])", file="JsonTextWriterTest.cs"];
m24_935 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonTextWriterTest.cs"];
m24_963 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JsonTextWriterTest.cs"];
m24_473 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="483-483", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTextWriterTest.cs"];
m24_33 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="599-599", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriterTest.cs"];
m24_28 [label="Assert.AreEqual(1, m2[''one''])", span="87-87", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="JsonTextWriterTest.cs"];
m24_650 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="JsonTextWriterTest.cs"];
m24_68 [label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonTextWriterTest.cs"];
m24_649 [label="Entry string.Trim(params char[])", span="0-0", cluster="string.Trim(params char[])", file="JsonTextWriterTest.cs"];
m24_821 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", span="1300-1300", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs"];
m24_823 [label="StringWriter swNew = new StringWriter()", span="1306-1306", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs"];
m24_826 [label="StringWriter swOld = new StringWriter()", span="1310-1310", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs"];
m24_827 [label="WriteEscapedJavaScriptStringOld(swOld, c.ToString(), '''', true)", span="1311-1311", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs"];
m24_825 [label="JavaScriptUtils.WriteEscapedJavaScriptString(swNew, c.ToString(), '''', true, JavaScriptUtils.DoubleQuoteCharEscapeFlags, StringEscapeHandling.Default, null, ref buffer)", span="1308-1308", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs"];
m24_822 [label="char c = (char)0", span="1302-1302", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs"];
m24_824 [label="char[] buffer = null", span="1307-1307", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs"];
m24_828 [label="string newText = swNew.ToString()", span="1313-1313", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs"];
m24_829 [label="string oldText = swOld.ToString()", span="1314-1314", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs"];
m24_833 [label="c != char.MaxValue", span="1322-1322", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs"];
m24_831 [label="throw new Exception(''Difference for char '{0}' (value {1}). Old text: {2}, New text: {3}''.FormatWith(CultureInfo.InvariantCulture, c, (int)c, oldText, newText));", span="1318-1318", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs"];
m24_832 [label="c++", span="1321-1321", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs"];
m24_830 [label="newText != oldText", span="1316-1316", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs"];
m24_834 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", span="1300-1300", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs"];
m24_174 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte?)", span="1248-1248", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="JsonTextWriterTest.cs"];
m24_184 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", span="1281-1281", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="JsonTextWriterTest.cs"];
m24_964 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonTextWriterTest.cs"];
m24_182 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", span="510-510", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonTextWriterTest.cs"];
m24_131 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", span="208-208", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_132 [label="StringWriter sw = new StringWriter()", span="210-210", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_169 [label="Assert.AreEqual(expected, json)", span="258-258", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_133 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="211-211", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_166 [label="string json = sw.ToString()", span="249-249", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_168 [label="expected = @''[null,''''c'''',null,true,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1.1,null,1.1,null,1.1,null,''''1970-01-01T00:00:00Z'''',null,''''1970-01-01T00:00:00+00:00'''']''", span="253-253", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_134 [label="jsonWriter.WriteStartArray()", span="213-213", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_135 [label="jsonWriter.WriteValue((char?)null)", span="214-214", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_136 [label="jsonWriter.WriteValue((char?)'c')", span="215-215", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_137 [label="jsonWriter.WriteValue((bool?)null)", span="216-216", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_138 [label="jsonWriter.WriteValue((bool?)true)", span="217-217", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_139 [label="jsonWriter.WriteValue((byte?)null)", span="218-218", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_140 [label="jsonWriter.WriteValue((byte?)1)", span="219-219", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_141 [label="jsonWriter.WriteValue((sbyte?)null)", span="220-220", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_142 [label="jsonWriter.WriteValue((sbyte?)1)", span="221-221", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_143 [label="jsonWriter.WriteValue((short?)null)", span="222-222", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_144 [label="jsonWriter.WriteValue((short?)1)", span="223-223", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_145 [label="jsonWriter.WriteValue((ushort?)null)", span="224-224", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_146 [label="jsonWriter.WriteValue((ushort?)1)", span="225-225", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_147 [label="jsonWriter.WriteValue((int?)null)", span="226-226", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_148 [label="jsonWriter.WriteValue((int?)1)", span="227-227", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_149 [label="jsonWriter.WriteValue((uint?)null)", span="228-228", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_150 [label="jsonWriter.WriteValue((uint?)1)", span="229-229", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_151 [label="jsonWriter.WriteValue((long?)null)", span="230-230", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_152 [label="jsonWriter.WriteValue((long?)1)", span="231-231", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_153 [label="jsonWriter.WriteValue((ulong?)null)", span="232-232", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_154 [label="jsonWriter.WriteValue((ulong?)1)", span="233-233", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_155 [label="jsonWriter.WriteValue((double?)null)", span="234-234", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_156 [label="jsonWriter.WriteValue((double?)1.1)", span="235-235", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_157 [label="jsonWriter.WriteValue((float?)null)", span="236-236", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_158 [label="jsonWriter.WriteValue((float?)1.1)", span="237-237", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_159 [label="jsonWriter.WriteValue((decimal?)null)", span="238-238", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_160 [label="jsonWriter.WriteValue((decimal?)1.1m)", span="239-239", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_161 [label="jsonWriter.WriteValue((DateTime?)null)", span="240-240", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_162 [label="jsonWriter.WriteValue((DateTime?)new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc))", span="241-241", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_163 [label="jsonWriter.WriteValue((DateTimeOffset?)null)", span="243-243", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_164 [label="jsonWriter.WriteValue((DateTimeOffset?)new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero))", span="244-244", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_165 [label="jsonWriter.WriteEndArray()", span="246-246", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_167 [label="string expected", span="250-250", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_170 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", span="208-208", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs"];
m24_414 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="500-500", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonTextWriterTest.cs"];
m24_86 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JsonTextWriterTest.cs"];
m24_651 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", span="1010-1010", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_658 [label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="1021-1021", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_668 [label="StringAssert.AreEqual(expected, result)", span="1041-1041", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_656 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="1018-1018", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_657 [label="jsonWriter.Formatting = Formatting.Indented", span="1020-1020", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_659 [label="jsonWriter.WriteStartArray()", span="1023-1023", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_667 [label="string result = sb.ToString()", span="1039-1039", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_666 [label="string expected = @''[\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  null,\r\n  null\r\n]''", span="1032-1038", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_654 [label="string text = ''Hello world.''", span="1015-1015", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_653 [label="StringWriter sw = new StringWriter(sb)", span="1013-1013", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_655 [label="byte[] data = Encoding.UTF8.GetBytes(text)", span="1016-1016", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_660 [label="jsonWriter.WriteValue(data)", span="1024-1024", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_661 [label="jsonWriter.WriteValue(data)", span="1025-1025", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_662 [label="jsonWriter.WriteValue((object)data)", span="1026-1026", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_663 [label="jsonWriter.WriteValue((byte[])null)", span="1027-1027", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_664 [label="jsonWriter.WriteValue((Uri)null)", span="1028-1028", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_665 [label="jsonWriter.WriteEndArray()", span="1029-1029", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_652 [label="StringBuilder sb = new StringBuilder()", span="1012-1012", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_669 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", span="1010-1010", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs"];
m24_415 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float)", span="473-473", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonTextWriterTest.cs"];
m24_50 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JsonTextWriterTest.cs"];
m24_670 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="717-717", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonTextWriterTest.cs"];
m24_801 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="697-697", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriterTest.cs"];
m24_978 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="232-232", cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriterTest.cs"];
m24_564 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken)", span="517-517", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken)", file="JsonTextWriterTest.cs"];
m24_602 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", span="936-936", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_608 [label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="946-946", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_610 [label="Assert.AreEqual(5, jsonWriter.Indentation)", span="949-949", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_612 [label="Assert.AreEqual('_', jsonWriter.IndentChar)", span="951-951", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_614 [label="Assert.AreEqual(true, jsonWriter.QuoteName)", span="953-953", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_616 [label="Assert.AreEqual('\'', jsonWriter.QuoteChar)", span="955-955", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_621 [label="Assert.AreEqual('?', jsonWriter.IndentChar)", span="963-963", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_623 [label="Assert.AreEqual(6, jsonWriter.Indentation)", span="965-965", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_618 [label="jsonWriter.WritePropertyName(''propertyName'')", span="959-959", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_624 [label="jsonWriter.WritePropertyName(''prop2'')", span="967-967", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_629 [label="StringAssert.AreEqual(expected, result)", span="979-979", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_605 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="941-941", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_607 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="944-944", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_609 [label="jsonWriter.Indentation = 5", span="948-948", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_611 [label="jsonWriter.IndentChar = '_'", span="950-950", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_613 [label="jsonWriter.QuoteName = true", span="952-952", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_615 [label="jsonWriter.QuoteChar = '\''", span="954-954", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_617 [label="jsonWriter.WriteStartObject()", span="957-957", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_620 [label="jsonWriter.IndentChar = '?'", span="962-962", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_622 [label="jsonWriter.Indentation = 6", span="964-964", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_619 [label="jsonWriter.WriteValue(double.NaN)", span="960-960", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_625 [label="jsonWriter.WriteValue(123)", span="968-968", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_626 [label="jsonWriter.WriteEndObject()", span="970-970", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_628 [label="string result = sb.ToString()", span="977-977", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_627 [label="string expected = @''{\r\n_____'propertyName': NaN,\r\n??????'prop2': 123\r\n}''", span="973-976", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_604 [label="StringWriter sw = new StringWriter(sb)", span="939-939", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_606 [label="jsonWriter.Formatting = Formatting.Indented", span="943-943", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_603 [label="StringBuilder sb = new StringBuilder()", span="938-938", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_630 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", span="936-936", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs"];
m24_173 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="1183-1183", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="JsonTextWriterTest.cs"];
m24_128 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="879-879", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonTextWriterTest.cs"];
m24_394 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", span="612-612", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_412 [label="StringAssert.AreEqual(expected, result)", span="645-645", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_397 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="617-617", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_411 [label="string result = sb.ToString()", span="643-643", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_410 [label="string expected = @''[\r\n  'NaN',\r\n  'Infinity',\r\n  '-Infinity',\r\n  'NaN',\r\n  'Infinity',\r\n  '-Infinity'\r\n]''", span="635-642", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_396 [label="StringWriter sw = new StringWriter(sb)", span="615-615", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_398 [label="jsonWriter.Formatting = Formatting.Indented", span="619-619", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_399 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.String", span="620-620", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_400 [label="jsonWriter.QuoteChar = '\''", span="621-621", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_401 [label="jsonWriter.WriteStartArray()", span="623-623", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_402 [label="jsonWriter.WriteValue(double.NaN)", span="624-624", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_403 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="625-625", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_404 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="626-626", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_405 [label="jsonWriter.WriteValue(float.NaN)", span="627-627", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_406 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="628-628", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_407 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="629-629", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_408 [label="jsonWriter.WriteEndArray()", span="630-630", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_409 [label="jsonWriter.Flush()", span="632-632", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_395 [label="StringBuilder sb = new StringBuilder()", span="614-614", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_413 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", span="612-612", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs"];
m24_180 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long?)", span="1118-1118", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="JsonTextWriterTest.cs"];
m24_470 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextWriterTest.cs"];
m24_962 [label="Entry string.String(char[])", span="0-0", cluster="string.String(char[])", file="JsonTextWriterTest.cs"];
m24_947 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", span="493-493", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", file="JsonTextWriterTest.cs"];
m24_837 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", span="1327-1327", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_841 [label="writer.Write(delimiter)", span="1332-1332", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_896 [label="writer.Write(delimiter)", span="1457-1457", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_883 [label="chars = s.ToCharArray()", span="1419-1419", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_893 [label="chars = s.ToCharArray()", span="1446-1446", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_887 [label="writer.Write(escapedValue)", span="1429-1429", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_891 [label="writer.Write(s)", span="1440-1440", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_840 [label=appendDelimiters, span="1330-1330", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_842 [label="s != null", span="1335-1335", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_895 [label=appendDelimiters, span="1455-1455", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_882 [label="chars == null", span="1417-1417", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_884 [label="writer.Write(chars, lastWritePosition, i - lastWritePosition)", span="1423-1423", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_892 [label="chars == null", span="1444-1444", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_894 [label="writer.Write(chars, lastWritePosition, s.Length - lastWritePosition)", span="1450-1450", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_879 [label="escapedValue = null", span="1405-1405", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_878 [label="escapedValue = EscapedUnicodeText", span="1401-1401", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_886 [label="!string.Equals(escapedValue, EscapedUnicodeText)", span="1427-1427", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_889 [label="i++", span="1341-1341", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_890 [label="lastWritePosition == 0", span="1437-1437", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_847 [label="i < s.Length", span="1341-1341", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_848 [label="var c = s[i]", span="1343-1343", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_849 [label="c >= ' ' && c < 128 && c != '\\' && c != delimiter", span="1346-1346", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_888 [label="writer.Write(unicodeBuffer)", span="1433-1433", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_843 [label="char[] chars = null", span="1337-1337", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_881 [label="i > lastWritePosition", span="1415-1415", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_845 [label="int lastWritePosition = 0", span="1339-1339", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_846 [label="int i = 0", span="1341-1341", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_885 [label="lastWritePosition = i + 1", span="1426-1426", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_874 [label="c <= '\u001f'", span="1391-1391", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_880 [label="escapedValue == null", span="1410-1410", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_877 [label="StringUtils.ToCharAsUnicode(c, unicodeBuffer)", span="1398-1398", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_851 [label=c, span="1353-1353", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_850 [label="string escapedValue", span="1351-1351", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_844 [label="char[] unicodeBuffer = null", span="1338-1338", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_876 [label="unicodeBuffer = new char[6]", span="1395-1395", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_875 [label="unicodeBuffer == null", span="1393-1393", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_853 [label="escapedValue = @''\t''", span="1356-1356", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_855 [label="escapedValue = @''\n''", span="1359-1359", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_857 [label="escapedValue = @''\r''", span="1362-1362", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_859 [label="escapedValue = @''\f''", span="1365-1365", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_861 [label="escapedValue = @''\b''", span="1368-1368", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_863 [label="escapedValue = @''\\''", span="1371-1371", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_865 [label="escapedValue = @''\u0085''", span="1374-1374", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_867 [label="escapedValue = @''\u2028''", span="1377-1377", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_869 [label="escapedValue = @''\u2029''", span="1380-1380", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_871 [label="escapedValue = @''\'''", span="1384-1384", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_873 [label="escapedValue = ''\\\''''", span="1388-1388", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_852 [label="'\t'", span="1355-1355", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_854 [label="'\n'", span="1358-1358", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_856 [label="'\r'", span="1361-1361", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_858 [label="'\f'", span="1364-1364", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_860 [label="'\b'", span="1367-1367", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_862 [label="'\\'", span="1370-1370", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_864 [label="'\u0085'", span="1373-1373", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_866 [label="'\u2028'", span="1376-1376", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_868 [label="'\u2029'", span="1379-1379", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_870 [label="'\''", span="1382-1382", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_872 [label="''''", span="1386-1386", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_897 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", span="1327-1327", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs"];
m24_505 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="447-447", cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JsonTextWriterTest.cs"];
m24_9 [label="writer.ArrayPool = arrayPool", span="73-73", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_898 [label="Entry System.IO.TextWriter.Write(char)", span="0-0", cluster="System.IO.TextWriter.Write(char)", file="JsonTextWriterTest.cs"];
m24_327 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", span="492-492", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_344 [label="StringAssert.AreEqual(expected, result)", span="524-524", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_330 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="497-497", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_343 [label="string result = sb.ToString()", span="522-522", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_342 [label="string expected = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity,\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="514-521", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_329 [label="StringWriter sw = new StringWriter(sb)", span="495-495", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_331 [label="jsonWriter.Formatting = Formatting.Indented", span="499-499", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_332 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="500-500", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_333 [label="jsonWriter.WriteStartArray()", span="502-502", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_334 [label="jsonWriter.WriteValue(double.NaN)", span="503-503", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_335 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="504-504", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_336 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="505-505", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_337 [label="jsonWriter.WriteValue(float.NaN)", span="506-506", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_338 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="507-507", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_339 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="508-508", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_340 [label="jsonWriter.WriteEndArray()", span="509-509", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_341 [label="jsonWriter.Flush()", span="511-511", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_328 [label="StringBuilder sb = new StringBuilder()", span="494-494", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_345 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", span="492-492", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs"];
m24_374 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float?)", span="1151-1151", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="JsonTextWriterTest.cs"];
m24_95 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(object)", span="359-359", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonTextWriterTest.cs"];
m24_123 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="982-982", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonTextWriterTest.cs"];
m24_717 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteNull()", span="377-377", cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonTextWriterTest.cs"];
m24_900 [label="Entry string.ToCharArray()", span="0-0", cluster="string.ToCharArray()", file="JsonTextWriterTest.cs"];
m24_172 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char?)", span="1232-1232", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="JsonTextWriterTest.cs"];
m24_15 [label="writer.WritePropertyName(''Prop3'')", span="83-83", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_16 [label="writer.WriteValue(longEscapedString)", span="84-84", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_17 [label="writer.WritePropertyName(''Prop4'')", span="86-86", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_20 [label="(i + 1) % 100 == 0", span="92-92", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_21 [label="Console.WriteLine(''Allocated buffers: '' + arrayPool.FreeArrays.Count)", span="94-94", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_18 [label="writer.WriteValue(longerEscapedString)", span="87-87", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_19 [label="writer.WriteEndObject()", span="89-89", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_22 [label="i++", span="67-67", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_297 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="474-474", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_961 [label="Entry Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", span="1618-1618", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonTextWriterTest.cs"];
m24_85 [label="Entry Newtonsoft.Json.JsonTextWriter.Close()", span="175-175", cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonTextWriterTest.cs"];
m24_716 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="219-219", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonTextWriterTest.cs"];
m24_803 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", span="676-676", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriterTest.cs"];
m24_769 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", span="1215-1215", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs"];
m24_770 [label="StringWriter sw = new StringWriter()", span="1217-1217", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs"];
m24_776 [label="Assert.AreEqual(''{'Blah':null}'', sw.ToString())", span="1225-1225", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs"];
m24_774 [label="writer.WritePropertyName(''Blah'')", span="1222-1222", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs"];
m24_771 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1218-1218", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs"];
m24_775 [label="writer.WriteEnd()", span="1223-1223", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs"];
m24_773 [label="writer.WriteStartObject()", span="1221-1221", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs"];
m24_772 [label="writer.QuoteChar = '\''", span="1219-1219", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs"];
m24_777 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", span="1215-1215", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs"];
m24_631 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="431-431", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonTextWriterTest.cs"];
m24_937 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="991-991", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonTextWriterTest.cs"];
m24_178 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="1085-1085", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="JsonTextWriterTest.cs"];
m24_177 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="1216-1216", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="JsonTextWriterTest.cs"];
m24_51 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream, System.Text.Encoding)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream, System.Text.Encoding)", file="JsonTextWriterTest.cs"];
m24_952 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", span="1570-1570", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs"];
m24_953 [label="SetWriteState(JsonToken.PropertyName, name)", span="1572-1572", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs"];
m24_954 [label=QuoteName, span="1574-1574", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs"];
m24_955 [label="_writer.Write(QuoteChar)", span="1576-1576", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs"];
m24_956 [label="_writer.Write(new string(name.ToCharArray().Reverse().ToArray()))", span="1579-1579", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs"];
m24_957 [label=QuoteName, span="1581-1581", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs"];
m24_958 [label="_writer.Write(QuoteChar)", span="1583-1583", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs"];
m24_959 [label="_writer.Write(':')", span="1586-1586", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs"];
m24_960 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", span="1570-1570", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs"];
m24_26 [label="FSharpMap<string, int> m2 = JsonConvert.DeserializeObject<FSharpMap<string, int>>(json)", span="84-84", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="JsonTextWriterTest.cs"];
m24_250 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1422-1422", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonTextWriterTest.cs"];
m24_36 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonTextWriterTest.cs"];
m24_122 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="917-917", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonTextWriterTest.cs"];
m24_129 [label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="887-887", cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JsonTextWriterTest.cs"];
m24_934 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonTextWriterTest.cs"];
m24_919 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", span="1560-1560", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="JsonTextWriterTest.cs"];
m24_948 [label="_writer = textWriter", span="1562-1562", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", color=green, community=0, file="JsonTextWriterTest.cs"];
m24_949 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", span="1560-1560", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="JsonTextWriterTest.cs"];
m24_56 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", span="129-129", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs"];
m24_65 [label="Assert.AreEqual(@''{name:''''value''''}'', sb.ToString())", span="143-143", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs"];
m24_61 [label="writer.WritePropertyName(''name'')", span="137-137", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs"];
m24_57 [label="StringBuilder sb = new StringBuilder()", span="131-131", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs"];
m24_64 [label="writer.Flush()", span="141-141", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs"];
m24_59 [label="JsonTextWriter writer = new JsonTextWriter(sw) { QuoteName = false }", span="133-133", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs"];
m24_60 [label="writer.WriteStartObject()", span="135-135", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs"];
m24_62 [label="writer.WriteValue(''value'')", span="138-138", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs"];
m24_63 [label="writer.WriteEndObject()", span="140-140", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs"];
m24_58 [label="StringWriter sw = new StringWriter(sb)", span="132-132", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs"];
m24_66 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", span="129-129", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs"];
m24_249 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="456-456", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonTextWriterTest.cs"];
m24_14 [label="writer.WriteValue(longString)", span="81-81", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_506 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="789-789", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_528 [label="Assert.AreEqual(@''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN]'', sb.ToString())", span="819-819", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_507 [label="StringBuilder sb = new StringBuilder()", span="791-791", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_527 [label="jsonWriter.WriteEndArray()", span="816-816", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_509 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="794-794", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_508 [label="StringWriter sw = new StringWriter(sb)", span="792-792", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_526 [label="jsonWriter.WriteValue(float.NaN)", span="814-814", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_510 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="796-796", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_511 [label="jsonWriter.WriteStartArray()", span="798-798", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_512 [label="jsonWriter.WriteValue(0.0)", span="800-800", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_513 [label="jsonWriter.WriteValue(0f)", span="801-801", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_514 [label="jsonWriter.WriteValue(0.1)", span="802-802", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_515 [label="jsonWriter.WriteValue(1.0)", span="803-803", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_516 [label="jsonWriter.WriteValue(1.000001)", span="804-804", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_517 [label="jsonWriter.WriteValue(0.000001)", span="805-805", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_518 [label="jsonWriter.WriteValue(double.Epsilon)", span="806-806", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_519 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="807-807", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_520 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="808-808", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_521 [label="jsonWriter.WriteValue(double.NaN)", span="809-809", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_522 [label="jsonWriter.WriteValue(double.MaxValue)", span="810-810", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_523 [label="jsonWriter.WriteValue(double.MinValue)", span="811-811", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_524 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="812-812", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_525 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="813-813", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_529 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="789-789", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs"];
m24_130 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="430-430", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonTextWriterTest.cs"];
m24_69 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="167-167", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonTextWriterTest.cs"];
m24_973 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="1608-1608", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriterTest.cs"];
m24_975 [label="_writer.Write(''}}}'')", span="1612-1612", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriterTest.cs"];
m24_976 [label="base.WriteEnd(token)", span="1616-1616", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriterTest.cs"];
m24_974 [label="token == JsonToken.EndObject", span="1610-1610", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriterTest.cs"];
m24_977 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="1608-1608", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriterTest.cs"];
m24_924 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", span="1482-1482", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs"];
m24_928 [label="var stringWriter = new StringWriter()", span="1493-1493", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs"];
m24_927 [label="var serializer = JsonSerializer.Create(jsonSerializerSettings)", span="1492-1492", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs"];
m24_929 [label="var writer = new JsonTextWriter(stringWriter) { QuoteName = false }", span="1495-1495", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs"];
m24_932 [label="StringAssert.AreEqual(@''{\r\n  a: 1\r\n}'', stringWriter.ToString())", span="1501-1503", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs"];
m24_926 [label="var jsonSerializerSettings = new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n            }", span="1488-1491", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs"];
m24_930 [label="serializer.Serialize(writer, d)", span="1497-1497", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs"];
m24_931 [label="writer.Close()", span="1498-1498", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs"];
m24_925 [label="var d = new Dictionary<string, int>\r\n            {\r\n                { ''a'', 1 },\r\n            }", span="1484-1487", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs"];
m24_933 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", span="1482-1482", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs"];
m24_592 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", span="920-920", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonTextWriterTest.cs"];
m24_593 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                StringBuilder sb = new StringBuilder();\r\n                StringWriter sw = new StringWriter(sb);\r\n\r\n                using (JsonTextWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.Formatting = Formatting.Indented;\r\n                    jsonWriter.QuoteChar = '*';\r\n                }\r\n            }, @''Invalid JavaScript string quote character. Valid quote characters are ' and ''''.'')", span="922-932", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonTextWriterTest.cs"];
m24_594 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", span="920-920", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonTextWriterTest.cs"];
m24_922 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", span="1589-1589", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonTextWriterTest.cs"];
m24_965 [label="SetWriteState(JsonToken.Null, null)", span="1591-1591", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonTextWriterTest.cs"];
m24_966 [label="_writer.Write(''NULL!!!'')", span="1593-1593", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonTextWriterTest.cs"];
m24_967 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", span="1589-1589", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonTextWriterTest.cs"];
m24_799 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonTextWriterTest.cs"];
m24_185 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", span="1297-1297", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="JsonTextWriterTest.cs"];
m24_29 [label="Assert.AreEqual(2, m2[''II''])", span="88-88", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="JsonTextWriterTest.cs"];
m24_431 [label="Entry Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="896-896", cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="JsonTextWriterTest.cs"];
m24_251 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonTextWriterTest.cs"];
m24_11 [label="writer.WritePropertyName(''Prop1'')", span="77-77", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_921 [label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", span="1565-1565", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="JsonTextWriterTest.cs"];
m24_950 [label="WritePropertyName(name, true)", span="1567-1567", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="JsonTextWriterTest.cs"];
m24_951 [label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", span="1565-1565", cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="JsonTextWriterTest.cs"];
m24_595 [label="Entry lambda expression", span="922-932", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_205 [label="StringWriter sw = new StringWriter()", span="285-285", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_204 [label="Entry lambda expression", span="283-292", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_206 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="286-286", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_586 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="907-907", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_598 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="927-927", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_210 [label="Exit lambda expression", span="283-292", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_207 [label="jsonWriter.WriteStartArray()", span="288-288", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_208 [label="jsonWriter.WriteValue(new Version(1, 1, 1, 1))", span="289-289", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_209 [label="jsonWriter.WriteEndArray()", span="290-290", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_585 [label="StringWriter sw = new StringWriter(sb)", span="905-905", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_597 [label="StringWriter sw = new StringWriter(sb)", span="925-925", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_575 [label="jsonWriter.WriteToken(JsonToken.Integer, ''three'')", span="892-892", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_578 [label="jsonWriter.WriteToken(JsonToken.Integer)", span="894-894", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_587 [label="jsonWriter.WriteStartArray()", span="909-909", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_588 [label="jsonWriter.WriteValue(0.0)", span="911-911", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_589 [label="jsonWriter.WriteEndArray()", span="913-913", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_590 [label="jsonWriter.WriteEndArray()", span="914-914", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_599 [label="jsonWriter.Formatting = Formatting.Indented", span="929-929", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_600 [label="jsonWriter.QuoteChar = '*'", span="930-930", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_584 [label="StringBuilder sb = new StringBuilder()", span="904-904", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_596 [label="StringBuilder sb = new StringBuilder()", span="924-924", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_574 [label="Entry lambda expression", span="892-892", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_576 [label="Exit lambda expression", span="892-892", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_577 [label="Entry lambda expression", span="894-894", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_579 [label="Exit lambda expression", span="894-894", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_591 [label="Exit lambda expression", span="902-916", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_583 [label="Entry lambda expression", span="902-916", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_601 [label="Exit lambda expression", span="922-932", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m24_188 [label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonTextWriterTest.cs"];
m24_348 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", span="528-528", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_371 [label="StringAssert.AreEqual(expected, result)", span="572-572", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_351 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="533-533", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_370 [label="string result = sb.ToString()", span="570-570", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_369 [label="string expected = @''[\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  null,\r\n  null,\r\n  null,\r\n  null,\r\n  null,\r\n  null\r\n]''", span="556-569", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_350 [label="StringWriter sw = new StringWriter(sb)", span="531-531", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_352 [label="jsonWriter.Formatting = Formatting.Indented", span="535-535", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_353 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.DefaultValue", span="536-536", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_354 [label="jsonWriter.WriteStartArray()", span="538-538", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_355 [label="jsonWriter.WriteValue(double.NaN)", span="539-539", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_356 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="540-540", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_357 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="541-541", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_358 [label="jsonWriter.WriteValue(float.NaN)", span="542-542", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_359 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="543-543", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_360 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="544-544", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_361 [label="jsonWriter.WriteValue((double?)double.NaN)", span="545-545", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_362 [label="jsonWriter.WriteValue((double?)double.PositiveInfinity)", span="546-546", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_363 [label="jsonWriter.WriteValue((double?)double.NegativeInfinity)", span="547-547", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_364 [label="jsonWriter.WriteValue((float?)float.NaN)", span="548-548", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_365 [label="jsonWriter.WriteValue((float?)float.PositiveInfinity)", span="549-549", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_366 [label="jsonWriter.WriteValue((float?)float.NegativeInfinity)", span="550-550", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_367 [label="jsonWriter.WriteEndArray()", span="551-551", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_368 [label="jsonWriter.Flush()", span="553-553", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_349 [label="StringBuilder sb = new StringBuilder()", span="530-530", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_372 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", span="528-528", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs"];
m24_433 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="675-675", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_447 [label="StringAssert.AreEqual(expected, result)", span="699-699", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_436 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="680-680", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_446 [label="string result = sb.ToString()", span="697-697", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_445 [label="string expected = @''[\r\n  NaN,[1,2,3,4,5],[1,2,3,4,5],\r\n  NaN\r\n]''", span="693-696", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_435 [label="StringWriter sw = new StringWriter(sb)", span="678-678", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_437 [label="jsonWriter.Formatting = Formatting.Indented", span="682-682", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_438 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="683-683", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_439 [label="jsonWriter.WriteStartArray()", span="685-685", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_440 [label="jsonWriter.WriteValue(double.NaN)", span="686-686", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_441 [label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="687-687", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_442 [label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="688-688", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_443 [label="jsonWriter.WriteValue(float.NaN)", span="689-689", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_444 [label="jsonWriter.WriteEndArray()", span="690-690", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_434 [label="StringBuilder sb = new StringBuilder()", span="677-677", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_448 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="675-675", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs"];
m24_734 [label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="150-150", cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="JsonTextWriterTest.cs"];
m24_252 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", span="358-358", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_271 [label="StringAssert.AreEqual(expected, result)", span="393-393", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_255 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="363-363", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_270 [label="string result = sb.ToString()", span="391-391", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_269 [label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="381-390", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_254 [label="StringWriter sw = new StringWriter(sb)", span="361-361", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_256 [label="jsonWriter.Formatting = Formatting.Indented", span="365-365", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_257 [label="jsonWriter.WriteStartObject()", span="367-367", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_258 [label="jsonWriter.WritePropertyName(''CPU'')", span="368-368", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_259 [label="jsonWriter.WriteValue(''Intel'')", span="369-369", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_260 [label="jsonWriter.WritePropertyName(''PSU'')", span="370-370", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_261 [label="jsonWriter.WriteValue(''500W'')", span="371-371", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_262 [label="jsonWriter.WritePropertyName(''Drives'')", span="372-372", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_263 [label="jsonWriter.WriteStartArray()", span="373-373", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_264 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="374-374", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_265 [label="jsonWriter.WriteComment(''(broken)'')", span="375-375", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_266 [label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="376-376", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_267 [label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="377-377", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_268 [label="jsonWriter.Close()", span="378-378", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_253 [label="StringBuilder sb = new StringBuilder()", span="360-360", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_272 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", span="358-358", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs"];
m24_248 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonTextWriterTest.cs"];
m24_83 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonTextWriterTest.cs"];
m24_471 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonTextWriterTest.cs"];
m24_778 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", span="1230-1230", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_779 [label="StringWriter sw = new StringWriter()", span="1232-1232", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_780 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1233-1233", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_797 [label="StringAssert.AreEqual(@''[\r\n  '2000-01-01T01:01:01Z',\r\n  '2000-01-01T01:01:01+00:00',\r\n  '\/Date(946688461000)\/',\r\n  '\/Date(946688461000+0000)\/',\r\n  '2000 A.D.',\r\n  '2000 A.D.',\r\n  'AQID',\r\n  '00:00:00',\r\n  'http://www.google.com/',\r\n  '00000000-0000-0000-0000-000000000000'\r\n]'', sw.ToString())", span="1257-1268", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_781 [label="writer.Formatting = Formatting.Indented", span="1234-1234", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_782 [label="writer.QuoteChar = '\''", span="1235-1235", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_783 [label="writer.WriteStartArray()", span="1237-1237", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_784 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1239-1239", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_785 [label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1240-1240", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_786 [label="writer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1242-1242", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_787 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1243-1243", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_788 [label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1244-1244", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_789 [label="writer.DateFormatString = ''yyyy gg''", span="1246-1246", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_790 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1247-1247", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_791 [label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1248-1248", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_792 [label="writer.WriteValue(new byte[] { 1, 2, 3 })", span="1250-1250", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_793 [label="writer.WriteValue(TimeSpan.Zero)", span="1251-1251", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_794 [label="writer.WriteValue(new Uri(''http://www.google.com/''))", span="1252-1252", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_795 [label="writer.WriteValue(Guid.Empty)", span="1253-1253", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_796 [label="writer.WriteEnd()", span="1255-1255", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_798 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", span="1230-1230", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs"];
m24_211 [label="Entry System.Version.Version(int, int, int, int)", span="0-0", cluster="System.Version.Version(int, int, int, int)", file="JsonTextWriterTest.cs"];
m24_416 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="649-649", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs"];
m24_429 [label="StringAssert.AreEqual(expected, result)", span="671-671", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs"];
m24_419 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="654-654", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs"];
m24_428 [label="string result = sb.ToString()", span="669-669", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs"];
m24_427 [label="string expected = @''[1,2,3,4,5]  [\r\n  NaN\r\n]''", span="666-668", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs"];
m24_418 [label="StringWriter sw = new StringWriter(sb)", span="652-652", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs"];
m24_420 [label="jsonWriter.Formatting = Formatting.Indented", span="656-656", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs"];
m24_421 [label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="657-657", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs"];
m24_422 [label="jsonWriter.WriteRaw(''[1,2,3,4,5]'')", span="659-659", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs"];
m24_423 [label="jsonWriter.WriteWhitespace(''  '')", span="660-660", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs"];
m24_424 [label="jsonWriter.WriteStartArray()", span="661-661", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs"];
m24_425 [label="jsonWriter.WriteValue(double.NaN)", span="662-662", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs"];
m24_426 [label="jsonWriter.WriteEndArray()", span="663-663", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs"];
m24_417 [label="StringBuilder sb = new StringBuilder()", span="651-651", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs"];
m24_430 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="649-649", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs"];
m24_97 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", span="177-177", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_118 [label="Assert.AreEqual(expected, result)", span="204-204", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_117 [label="string result = sb.ToString()", span="202-202", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_116 [label="string expected = @''[''''@'''',''''\r\n\t\f\b?{\\r\\n\''''''''',true,10,10.99,0.99,1E-18,0.000000000000000001,null,null,''''This is a string.'''',null,undefined]''", span="201-201", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_100 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="182-182", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_110 [label="jsonWriter.WriteValue((string)null)", span="193-193", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_98 [label="StringBuilder sb = new StringBuilder()", span="179-179", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_115 [label="jsonWriter.WriteEndArray()", span="198-198", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_99 [label="StringWriter sw = new StringWriter(sb)", span="180-180", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_101 [label="jsonWriter.WriteStartArray()", span="184-184", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_102 [label="jsonWriter.WriteValue('@')", span="185-185", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_103 [label="jsonWriter.WriteValue(''\r\n\t\f\b?{\\r\\n\''\''')", span="186-186", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_104 [label="jsonWriter.WriteValue(true)", span="187-187", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_105 [label="jsonWriter.WriteValue(10)", span="188-188", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_106 [label="jsonWriter.WriteValue(10.99)", span="189-189", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_107 [label="jsonWriter.WriteValue(0.99)", span="190-190", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_108 [label="jsonWriter.WriteValue(0.000000000000000001d)", span="191-191", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_109 [label="jsonWriter.WriteValue(0.000000000000000001m)", span="192-192", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_111 [label="jsonWriter.WriteValue((object)null)", span="194-194", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_112 [label="jsonWriter.WriteValue(''This is a string.'')", span="195-195", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_113 [label="jsonWriter.WriteNull()", span="196-196", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_114 [label="jsonWriter.WriteUndefined()", span="197-197", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_119 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", span="177-177", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs"];
m24_298 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="449-449", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_302 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="456-456", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_304 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="459-459", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_305 [label="Assert.AreEqual('''', jsonWriter.Path)", span="460-460", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_307 [label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="463-463", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_308 [label="Assert.AreEqual(''CPU'', jsonWriter.Path)", span="464-464", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_310 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="467-467", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_311 [label="Assert.AreEqual(''CPU'', jsonWriter.Path)", span="468-468", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_313 [label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="471-471", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_314 [label="Assert.AreEqual(''Drives'', jsonWriter.Path)", span="472-472", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_316 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="475-475", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_318 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="478-478", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_319 [label="Assert.AreEqual(''Drives[0]'', jsonWriter.Path)", span="479-479", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_321 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="482-482", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_322 [label="Assert.AreEqual(''Drives'', jsonWriter.Path)", span="483-483", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_324 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="486-486", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_325 [label="Assert.AreEqual('''', jsonWriter.Path)", span="487-487", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_301 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="454-454", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_303 [label="jsonWriter.WriteStartObject()", span="458-458", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_306 [label="jsonWriter.WritePropertyName(''CPU'')", span="462-462", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_309 [label="jsonWriter.WriteValue(''Intel'')", span="466-466", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_312 [label="jsonWriter.WritePropertyName(''Drives'')", span="470-470", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_315 [label="jsonWriter.WriteStartArray()", span="474-474", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_317 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="477-477", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_320 [label="jsonWriter.WriteEnd()", span="481-481", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_323 [label="jsonWriter.WriteEndObject()", span="485-485", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_300 [label="StringWriter sw = new StringWriter(sb)", span="452-452", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_299 [label="StringBuilder sb = new StringBuilder()", span="451-451", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_326 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="449-449", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs"];
m24_566 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", span="883-883", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs"];
m24_569 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="888-888", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs"];
m24_568 [label="StringWriter sw = new StringWriter(sb)", span="886-886", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs"];
m24_570 [label="jsonWriter.WriteToken(JsonToken.StartArray)", span="890-890", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs"];
m24_571 [label="ExceptionAssert.Throws<FormatException>(() => { jsonWriter.WriteToken(JsonToken.Integer, ''three''); }, ''Input string was not in a correct format.'')", span="892-892", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs"];
m24_572 [label="ExceptionAssert.Throws<ArgumentNullException>(() => { jsonWriter.WriteToken(JsonToken.Integer); }, @''Value cannot be null.\r\nParameter name: value'')", span="894-895", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs"];
m24_567 [label="StringBuilder sb = new StringBuilder()", span="885-885", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs"];
m24_573 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", span="883-883", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs"];
m24_8 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="71-71", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BufferTest()", file="JsonTextWriterTest.cs"];
m24_120 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="422-422", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonTextWriterTest.cs"];
m24_373 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="1167-1167", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="JsonTextWriterTest.cs"];
m24_23 [label="Entry Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", span="78-78", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="JsonTextWriterTest.cs"];
m24_24 [label="FSharpMap<string, int> m1 = MapModule.OfSeq(new List<Tuple<string, int>> { Tuple.Create(''one'', 1), Tuple.Create(''II'', 2), Tuple.Create(''3'', 3) })", span="80-80", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="JsonTextWriterTest.cs"];
m24_12 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonTextWriterTest.cs"];
m24_25 [label="string json = JsonConvert.SerializeObject(m1, Formatting.Indented)", span="82-82", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="JsonTextWriterTest.cs"];
m24_735 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", span="1143-1143", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonTextWriterTest.cs"];
m24_736 [label="StringWriter sw = new StringWriter()", span="1145-1145", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonTextWriterTest.cs"];
m24_739 [label="Assert.AreEqual(@''''''2000-01-01T01:01:01Z'''''', sw.ToString())", span="1153-1153", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonTextWriterTest.cs"];
m24_737 [label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                DateTimeZoneHandling = Json.DateTimeZoneHandling.Utc\r\n            }", span="1146-1149", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonTextWriterTest.cs"];
m24_738 [label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified))", span="1151-1151", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonTextWriterTest.cs"];
m24_740 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", span="1143-1143", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonTextWriterTest.cs"];
m24_632 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="983-983", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs"];
m24_645 [label="Assert.AreEqual(text, Encoding.UTF8.GetString(d2, 0, d2.Length))", span="1006-1006", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs"];
m24_639 [label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="994-994", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs"];
m24_643 [label="Assert.AreEqual(expected, result)", span="1002-1002", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs"];
m24_635 [label="string text = ''Hello world.''", span="988-988", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs"];
m24_644 [label="byte[] d2 = Convert.FromBase64String(result.Trim(''''))", span="1004-1004", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs"];
m24_637 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="991-991", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs"];
m24_638 [label="jsonWriter.Formatting = Formatting.Indented", span="993-993", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs"];
m24_640 [label="jsonWriter.WriteValue(data)", span="996-996", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs"];
m24_642 [label="string result = sb.ToString()", span="1000-1000", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs"];
m24_641 [label="string expected = @''''''SGVsbG8gd29ybGQu''''''", span="999-999", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs"];
m24_634 [label="StringWriter sw = new StringWriter(sb)", span="986-986", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs"];
m24_636 [label="byte[] data = Encoding.UTF8.GetBytes(text)", span="989-989", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs"];
m24_633 [label="StringBuilder sb = new StringBuilder()", span="985-985", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs"];
m24_646 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="983-983", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs"];
m24_718 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", span="1118-1118", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_731 [label="Assert.AreEqual(valueStates, stateArray[(int)valueToken], ''Error for '' + valueToken + '' states.'')", span="1136-1136", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_719 [label="JsonWriter.State[][] stateArray = JsonWriter.BuildStateArray()", span="1120-1120", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_720 [label="var valueStates = JsonWriter.StateArrayTempate[7]", span="1122-1122", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_721 [label="EnumUtils.GetValues(typeof(JsonToken))", span="1124-1124", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_730 [label="JsonToken.Bytes", span="1135-1135", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_722 [label=valueToken, span="1126-1126", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_729 [label="JsonToken.Date", span="1134-1134", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_723 [label="JsonToken.Integer", span="1128-1128", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_728 [label="JsonToken.Undefined", span="1133-1133", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_724 [label="JsonToken.Float", span="1129-1129", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_727 [label="JsonToken.Null", span="1132-1132", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_725 [label="JsonToken.String", span="1130-1130", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_726 [label="JsonToken.Boolean", span="1131-1131", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_732 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", span="1118-1118", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs"];
m24_93 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonTextWriterTest.cs"];
m24_905 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", span="1462-1462", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs"];
m24_907 [label="CustomJsonTextWriter writer = new CustomJsonTextWriter(sw) { Formatting = Formatting.Indented }", span="1465-1465", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs"];
m24_906 [label="StringWriter sw = new StringWriter()", span="1464-1464", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs"];
m24_908 [label="writer.WriteStartObject()", span="1466-1466", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs"];
m24_909 [label="Assert.AreEqual(WriteState.Object, writer.WriteState)", span="1467-1467", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs"];
m24_910 [label="writer.WritePropertyName(''Property1'')", span="1468-1468", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs"];
m24_911 [label="Assert.AreEqual(WriteState.Property, writer.WriteState)", span="1469-1469", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs"];
m24_912 [label="Assert.AreEqual(''Property1'', writer.Path)", span="1470-1470", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs"];
m24_913 [label="writer.WriteNull()", span="1471-1471", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs"];
m24_914 [label="Assert.AreEqual(WriteState.Object, writer.WriteState)", span="1472-1472", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs"];
m24_915 [label="writer.WriteEndObject()", span="1473-1473", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs"];
m24_916 [label="Assert.AreEqual(WriteState.Start, writer.WriteState)", span="1474-1474", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs"];
m24_917 [label="StringAssert.AreEqual(@''{{{\r\n  ''''1ytreporP'''': NULL!!!\r\n}}}'', sw.ToString())", span="1476-1478", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs"];
m24_918 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", span="1462-1462", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs"];
m24_839 [label="Entry string.FormatWith(System.IFormatProvider, object, object, object, object)", span="62-62", cluster="string.FormatWith(System.IFormatProvider, object, object, object, object)", file="JsonTextWriterTest.cs"];
m24_504 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="439-439", cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JsonTextWriterTest.cs"];
m24_938 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", span="1508-1508", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs"];
m24_941 [label="StringWriter sw = new StringWriter()", span="1533-1533", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs"];
m24_940 [label="JsonTextReader r = new JsonTextReader(new StringReader(json))", span="1531-1531", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs"];
m24_942 [label="JsonTextWriter w = new JsonTextWriter(sw)", span="1534-1534", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs"];
m24_945 [label="StringAssert.AreEqual(@''/*comment*//*hi*/*/{/*comment*/\r\n  ''''Name'''': /*comment*/ true/*comment after true*//*comment after comma*/,\r\n  ''''ExpiryDate'''': /*comment*/ new Constructor(\r\n    /*comment*/,\r\n    null\r\n    /*comment*/\r\n  ),\r\n  ''''Price'''': 3.99,\r\n  ''''Sizes'''': /*comment*/ [\r\n    /*comment*/\r\n    ''''Small''''\r\n    /*comment*/\r\n  ]/*comment*/\r\n}/*comment *//*comment 1 */'', sw.ToString())", span="1539-1552", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs"];
m24_939 [label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn + @''\r\n,//comment after comma'' + StringUtils.CarriageReturnLineFeed + @''\r\n''''ExpiryDate''''://comment'' + StringUtils.LineFeed + @''\r\nnew\r\n'' + StringUtils.LineFeed +\r\n                          @''Constructor\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="1510-1529", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs"];
m24_944 [label="w.WriteToken(r, true)", span="1537-1537", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs"];
m24_943 [label="w.Formatting = Formatting.Indented", span="1535-1535", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs"];
m24_946 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", span="1508-1508", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs"];
m24_474 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="738-738", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs"];
m24_486 [label="Assert.AreEqual(@''{''''d0'''':[1,2],''''d1'''':[1,2],''''d2'''':[1,2]}'', sb.ToString())", span="761-761", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs"];
m24_475 [label="StringBuilder sb = new StringBuilder()", span="740-740", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs"];
m24_485 [label="jsonWriter.WriteEndObject()", span="758-758", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs"];
m24_477 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="743-743", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs"];
m24_476 [label="StringWriter sw = new StringWriter(sb)", span="741-741", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs"];
m24_481 [label="i < 3", span="750-750", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs"];
m24_478 [label="int i = 0", span="745-745", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs"];
m24_480 [label="jsonWriter.WriteStartObject()", span="748-748", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs"];
m24_482 [label="jsonWriter.WritePropertyName(''d'' + i)", span="752-752", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs"];
m24_483 [label="jsonWriter.WriteRawValue(rawJson)", span="753-753", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs"];
m24_484 [label="i++", span="755-755", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs"];
m24_479 [label="string rawJson = ''[1,2]''", span="746-746", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs"];
m24_487 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="738-738", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs"];
m24_35 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTextWriterTest.cs"];
m24_179 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="1102-1102", cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="JsonTextWriterTest.cs"];
m24_1021 [label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", span="1696-1696", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m24_1024 [label="throw new Exception(''Type not supported: '' + conversionType.FullName);", span="1703-1703", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m24_1022 [label="conversionType == typeof(int)", span="1698-1698", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m24_1023 [label="return _value;", span="1700-1700", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m24_1025 [label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", span="1696-1696", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs"];
m24_902 [label="Entry string.Equals(string, string)", span="0-0", cluster="string.Equals(string, string)", file="JsonTextWriterTest.cs"];
m24_752 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", span="1179-1179", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_753 [label="StringWriter sw = new StringWriter()", span="1181-1181", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_762 [label="sw = new StringWriter()", span="1200-1200", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_761 [label="Assert.AreEqual(unicode, reader.ReadAsString())", span="1198-1198", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_758 [label="Assert.AreEqual(8, json.Length)", span="1193-1193", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_759 [label="Assert.AreEqual(@''''''\u5f20'''''', json)", span="1194-1194", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_766 [label="Assert.AreEqual(3, json.Length)", span="1210-1210", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_767 [label="Assert.AreEqual(''\''\u5f20\'''', json)", span="1211-1211", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_754 [label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeNonAscii\r\n            }", span="1182-1185", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_757 [label="string json = sw.ToString()", span="1191-1191", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_763 [label="writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.Default\r\n            }", span="1201-1204", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_765 [label="json = sw.ToString()", span="1208-1208", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_755 [label="string unicode = ''\u5f20''", span="1187-1187", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_760 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1196-1196", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_756 [label="writer.WriteValue(unicode)", span="1189-1189", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_764 [label="writer.WriteValue(unicode)", span="1206-1206", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_768 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", span="1179-1179", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs"];
m24_27 [label="Assert.AreEqual(m1.Count, m2.Count)", span="86-86", cluster="Newtonsoft.Json.Tests.Serialization.FSharpTests.Map()", file="JsonTextWriterTest.cs"];
m24_461 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="724-724", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs"];
m24_465 [label="StringWriter sw = new StringWriter()", span="730-730", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs"];
m24_468 [label="Assert.AreEqual(''1'', sw.ToString())", span="734-734", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs"];
m24_464 [label="reader.Read()", span="728-728", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs"];
m24_466 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="731-731", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs"];
m24_467 [label="writer.WriteToken(reader)", span="732-732", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs"];
m24_462 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''[1,2,3,4,5]''))", span="726-726", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs"];
m24_463 [label="reader.Read()", span="727-727", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs"];
m24_469 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="724-724", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs"];
m24_125 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="973-973", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonTextWriterTest.cs"];
m24_127 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1396-1396", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextWriterTest.cs"];
m24_200 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", span="281-281", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonTextWriterTest.cs"];
m24_201 [label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                StringWriter sw = new StringWriter();\r\n                using (JsonTextWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.WriteStartArray();\r\n                    jsonWriter.WriteValue(new Version(1, 1, 1, 1));\r\n                    jsonWriter.WriteEndArray();\r\n                }\r\n            }, @''Unsupported type: System.Version. Use the JsonSerializer class to get the object's JSON representation. Path ''.'')", span="283-292", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonTextWriterTest.cs"];
m24_202 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", span="281-281", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonTextWriterTest.cs"];
m24_175 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="1265-1265", cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="JsonTextWriterTest.cs"];
m24_171 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="208-208", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTextWriterTest.cs"];
m24_71 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", span="147-147", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs"];
m24_73 [label="JsonTextWriter writer = new JsonTextWriter(new StreamWriter(ms))", span="150-150", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs"];
m24_78 [label="writer = new JsonTextWriter(new StreamWriter(ms)) { CloseOutput = false }", span="157-157", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs"];
m24_72 [label="MemoryStream ms = new MemoryStream()", span="149-149", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs"];
m24_74 [label="Assert.IsTrue(ms.CanRead)", span="152-152", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs"];
m24_75 [label="writer.Close()", span="153-153", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs"];
m24_77 [label="ms = new MemoryStream()", span="156-156", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs"];
m24_79 [label="Assert.IsTrue(ms.CanRead)", span="159-159", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs"];
m24_80 [label="writer.Close()", span="160-160", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs"];
m24_76 [label="Assert.IsFalse(ms.CanRead)", span="154-154", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs"];
m24_81 [label="Assert.IsTrue(ms.CanRead)", span="161-161", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs"];
m24_82 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", span="147-147", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs"];
m24_32 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="JsonTextWriterTest.cs"];
m24_551 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", span="863-863", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs"];
m24_562 [label="Assert.AreEqual(@''[1,{''''string'''':2147483647}]'', sb.ToString())", span="879-879", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs"];
m24_552 [label="StringBuilder sb = new StringBuilder()", span="865-865", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs"];
m24_561 [label="jsonWriter.WriteToken(JsonToken.EndArray)", span="876-876", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs"];
m24_554 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="868-868", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs"];
m24_553 [label="StringWriter sw = new StringWriter(sb)", span="866-866", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs"];
m24_560 [label="jsonWriter.WriteToken(JsonToken.EndObject)", span="875-875", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs"];
m24_555 [label="jsonWriter.WriteToken(JsonToken.StartArray)", span="870-870", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs"];
m24_556 [label="jsonWriter.WriteToken(JsonToken.Integer, 1)", span="871-871", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs"];
m24_557 [label="jsonWriter.WriteToken(JsonToken.StartObject)", span="872-872", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs"];
m24_558 [label="jsonWriter.WriteToken(JsonToken.PropertyName, ''string'')", span="873-873", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs"];
m24_559 [label="jsonWriter.WriteToken(JsonToken.Integer, int.MaxValue)", span="874-874", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs"];
m24_563 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", span="863-863", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs"];
m24_70 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JsonTextWriterTest.cs"];
m24_580 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="900-900", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonTextWriterTest.cs"];
m24_581 [label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                StringBuilder sb = new StringBuilder();\r\n                StringWriter sw = new StringWriter(sb);\r\n\r\n                using (JsonWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.WriteStartArray();\r\n\r\n                    jsonWriter.WriteValue(0.0);\r\n\r\n                    jsonWriter.WriteEndArray();\r\n                    jsonWriter.WriteEndArray();\r\n                }\r\n            }, ''No token to close. Path ''.'')", span="902-916", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonTextWriterTest.cs"];
m24_582 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="900-900", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonTextWriterTest.cs"];
m24_648 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="627-627", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriterTest.cs"];
m24_647 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonTextWriterTest.cs"];
m24_836 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", span="148-148", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, Newtonsoft.Json.IArrayPool<char>, ref char[])", file="JsonTextWriterTest.cs"];
m24_899 [label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="136-136", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="JsonTextWriterTest.cs"];
m24_903 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="JsonTextWriterTest.cs"];
m24_671 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", span="1045-1045", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_682 [label="writer.WritePropertyName(''Property1'')", span="1061-1061", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_676 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1053-1053", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_681 [label="Assert.AreEqual(''[0]'', writer.Path)", span="1060-1060", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_683 [label="Assert.AreEqual(''[0].Property1'', writer.Path)", span="1062-1062", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_679 [label="Assert.AreEqual('''', writer.Path)", span="1058-1058", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_685 [label="Assert.AreEqual(''[0].Property1'', writer.Path)", span="1064-1064", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_687 [label="Assert.AreEqual(''[0].Property1[0]'', writer.Path)", span="1066-1066", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_689 [label="Assert.AreEqual(''[0].Property1[1]'', writer.Path)", span="1068-1068", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_691 [label="Assert.AreEqual(''[0].Property1[1][0]'', writer.Path)", span="1070-1070", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_693 [label="Assert.AreEqual(''[0].Property1[1][0][0]'', writer.Path)", span="1072-1072", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_695 [label="Assert.AreEqual(''[0]'', writer.Path)", span="1074-1074", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_697 [label="Assert.AreEqual(''[1]'', writer.Path)", span="1076-1076", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_699 [label="Assert.AreEqual(''[1].Property2'', writer.Path)", span="1078-1078", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_701 [label="Assert.AreEqual(''[1].Property2'', writer.Path)", span="1080-1080", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_703 [label="Assert.AreEqual(''[1].Property2[0]'', writer.Path)", span="1082-1082", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_705 [label="Assert.AreEqual(''[1].Property2[1]'', writer.Path)", span="1084-1084", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_707 [label="Assert.AreEqual(''[1].Property2[1][0]'', writer.Path)", span="1086-1086", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_709 [label="Assert.AreEqual(''[1].Property2[1]'', writer.Path)", span="1088-1088", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_711 [label="Assert.AreEqual(''[1]'', writer.Path)", span="1090-1090", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_713 [label="Assert.AreEqual('''', writer.Path)", span="1092-1092", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_673 [label="StringWriter sw = new StringWriter(sb)", span="1048-1048", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_675 [label="byte[] data = Encoding.UTF8.GetBytes(text)", span="1051-1051", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_677 [label="writer.Formatting = Formatting.Indented", span="1055-1055", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_678 [label="writer.WriteStartArray()", span="1057-1057", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_680 [label="writer.WriteStartObject()", span="1059-1059", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_684 [label="writer.WriteStartArray()", span="1063-1063", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_686 [label="writer.WriteValue(1)", span="1065-1065", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_688 [label="writer.WriteStartArray()", span="1067-1067", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_690 [label="writer.WriteStartArray()", span="1069-1069", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_692 [label="writer.WriteStartArray()", span="1071-1071", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_694 [label="writer.WriteEndObject()", span="1073-1073", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_696 [label="writer.WriteStartObject()", span="1075-1075", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_698 [label="writer.WritePropertyName(''Property2'')", span="1077-1077", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_700 [label="writer.WriteStartConstructor(''Constructor1'')", span="1079-1079", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_702 [label="writer.WriteNull()", span="1081-1081", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_704 [label="writer.WriteStartArray()", span="1083-1083", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_706 [label="writer.WriteValue(1)", span="1085-1085", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_708 [label="writer.WriteEnd()", span="1087-1087", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_710 [label="writer.WriteEndObject()", span="1089-1089", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_712 [label="writer.WriteEndArray()", span="1091-1091", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_714 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Property1'''': [\r\n      1,\r\n      [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    ''''Property2'''': new Constructor1(\r\n      null,\r\n      [\r\n        1\r\n      ]\r\n    )\r\n  }\r\n]'', sb.ToString())", span="1095-1114", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_672 [label="StringBuilder sb = new StringBuilder()", span="1047-1047", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_674 [label="string text = ''Hello world.''", span="1050-1050", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_715 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", span="1045-1045", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs"];
m24_203 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonTextWriterTest.cs"];
m24_226 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", span="318-318", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_243 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="339-339", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_246 [label="StringAssert.AreEqual(expected, result)", span="354-354", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_229 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="323-323", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_242 [label="jsonWriter.WriteEndObject()", span="338-338", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_244 [label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="342-351", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_245 [label="string result = sb.ToString()", span="352-352", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_228 [label="StringWriter sw = new StringWriter(sb)", span="321-321", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_230 [label="jsonWriter.Formatting = Formatting.Indented", span="325-325", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_231 [label="jsonWriter.WriteStartObject()", span="327-327", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_232 [label="jsonWriter.WritePropertyName(''CPU'')", span="328-328", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_233 [label="jsonWriter.WriteValue(''Intel'')", span="329-329", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_234 [label="jsonWriter.WritePropertyName(''PSU'')", span="330-330", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_235 [label="jsonWriter.WriteValue(''500W'')", span="331-331", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_236 [label="jsonWriter.WritePropertyName(''Drives'')", span="332-332", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_237 [label="jsonWriter.WriteStartArray()", span="333-333", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_238 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="334-334", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_239 [label="jsonWriter.WriteComment(''(broken)'')", span="335-335", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_240 [label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="336-336", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_241 [label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="337-337", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_227 [label="StringBuilder sb = new StringBuilder()", span="320-320", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_247 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", span="318-318", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs"];
m24_124 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="926-926", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonTextWriterTest.cs"];
m24_489 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="765-765", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs"];
m24_502 [label="Assert.AreEqual(@''{''''con'''':new Ext.data.JsonStore({''''aa'''':''''aa''''})}'', sb.ToString())", span="785-785", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs"];
m24_490 [label="StringBuilder sb = new StringBuilder()", span="767-767", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs"];
m24_501 [label="jsonWriter.WriteEndObject()", span="782-782", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs"];
m24_492 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="770-770", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs"];
m24_499 [label="jsonWriter.WriteEndObject()", span="779-779", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs"];
m24_491 [label="StringWriter sw = new StringWriter(sb)", span="768-768", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs"];
m24_500 [label="jsonWriter.WriteEndConstructor()", span="780-780", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs"];
m24_493 [label="jsonWriter.WriteStartObject()", span="772-772", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs"];
m24_494 [label="jsonWriter.WritePropertyName(''con'')", span="773-773", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs"];
m24_495 [label="jsonWriter.WriteStartConstructor(''Ext.data.JsonStore'')", span="775-775", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs"];
m24_496 [label="jsonWriter.WriteStartObject()", span="776-776", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs"];
m24_497 [label="jsonWriter.WritePropertyName(''aa'')", span="777-777", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs"];
m24_498 [label="jsonWriter.WriteValue(''aa'')", span="778-778", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs"];
m24_503 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="765-765", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs"];
m24_1036 [label="Newtonsoft.Json.Tests.CustomJsonTextWriter", span="", file="JsonTextWriterTest.cs"];
m24_1035 [label=jsonWriter, span="", file="JsonTextWriterTest.cs"];
m24_1037 [label="out Newtonsoft.Json.Tests.ConvertibleInt", span="", file="JsonTextWriterTest.cs"];
m24_1038 [label="Newtonsoft.Json.Tests.ConvertibleInt", span="", file="JsonTextWriterTest.cs"];
m25_43 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="JsonTypeReflector.cs"];
m25_110 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", span="858-858", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="JsonTypeReflector.cs"];
m25_119 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", span="143-143", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTypeReflector.cs"];
m25_120 [label="StringWriter sw = new StringWriter()", span="145-145", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTypeReflector.cs"];
m25_121 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="146-146", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTypeReflector.cs"];
m25_126 [label="string json = sw.ToString()", span="155-155", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTypeReflector.cs"];
m25_122 [label="char? value = 'c'", span="148-148", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTypeReflector.cs"];
m25_123 [label="jsonWriter.WriteStartArray()", span="150-150", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTypeReflector.cs"];
m25_124 [label="jsonWriter.WriteValue((object)value)", span="151-151", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTypeReflector.cs"];
m25_125 [label="jsonWriter.WriteEndArray()", span="152-152", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTypeReflector.cs"];
m25_127 [label="string expected = @''[''''c'''']''", span="156-156", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTypeReflector.cs"];
m25_128 [label="Assert.AreEqual(expected, json)", span="158-158", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTypeReflector.cs"];
m25_129 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", span="143-143", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTypeReflector.cs"];
m25_279 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="309-309", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTypeReflector.cs"];
m25_374 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartObject()", span="143-143", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObject()", file="JsonTypeReflector.cs"];
m25_46 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char)", span="763-763", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="JsonTypeReflector.cs"];
m25_295 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="659-659", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonTypeReflector.cs"];
m25_15 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonTypeReflector.cs"];
m25_116 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", span="993-993", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="JsonTypeReflector.cs"];
m25_51 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="791-791", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonTypeReflector.cs"];
m25_154 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", span="201-201", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_155 [label="StringBuilder sb = new StringBuilder()", span="203-203", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_156 [label="StringWriter sw = new StringWriter(sb)", span="204-204", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_173 [label="string result = sb.ToString()", span="246-246", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_157 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="206-206", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_158 [label="jsonWriter.Formatting = Formatting.Indented", span="208-208", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_159 [label="jsonWriter.WriteStartObject()", span="210-210", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_160 [label="jsonWriter.WritePropertyName(''CPU'')", span="211-211", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_161 [label="jsonWriter.WriteValue(''Intel'')", span="212-212", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_162 [label="jsonWriter.WritePropertyName(''PSU'')", span="213-213", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_163 [label="jsonWriter.WriteValue(''500W'')", span="214-214", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_164 [label="jsonWriter.WritePropertyName(''Drives'')", span="215-215", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_165 [label="jsonWriter.WriteStartArray()", span="216-216", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_166 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="217-217", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_167 [label="jsonWriter.WriteComment(''(broken)'')", span="218-218", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_168 [label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="219-219", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_169 [label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="220-220", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_170 [label="jsonWriter.WriteEnd()", span="221-221", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_171 [label="jsonWriter.WriteEndObject()", span="222-222", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_172 [label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="236-245", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_176 [label="Assert.AreEqual(expected, result)", span="251-251", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_174 [label="Console.WriteLine(''Indenting'')", span="248-248", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_175 [label="Console.WriteLine(result)", span="249-249", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_177 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", span="201-201", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTypeReflector.cs"];
m25_205 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", span="291-291", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_206 [label="StringBuilder sb = new StringBuilder()", span="293-293", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_207 [label="StringWriter sw = new StringWriter(sb)", span="294-294", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_220 [label="string result = sb.ToString()", span="320-320", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_208 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="296-296", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_209 [label="jsonWriter.Formatting = Formatting.Indented", span="298-298", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_210 [label="jsonWriter.WriteStartArray()", span="300-300", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_211 [label="jsonWriter.WriteValue(double.NaN)", span="301-301", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_212 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="302-302", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_213 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="303-303", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_214 [label="jsonWriter.WriteValue(float.NaN)", span="304-304", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_215 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="305-305", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_216 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="306-306", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_217 [label="jsonWriter.WriteEndArray()", span="307-307", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_218 [label="jsonWriter.Flush()", span="309-309", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_219 [label="string expected = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity,\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="312-319", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_221 [label="Assert.AreEqual(expected, result)", span="322-322", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_222 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", span="291-291", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers()", file="JsonTypeReflector.cs"];
m25_396 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonTypeReflector.cs"];
m25_223 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="717-717", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JsonTypeReflector.cs"];
m25_105 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short?)", span="906-906", cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="JsonTypeReflector.cs"];
m25_240 [label="Entry Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="1112-1112", cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonTypeReflector.cs"];
m25_115 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonTypeReflector.cs"];
m25_224 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="226-226", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonTypeReflector.cs"];
m25_118 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonTypeReflector.cs"];
m25_375 [label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", span="199-199", cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonTypeReflector.cs"];
m25_138 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", span="175-175", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_139 [label="StringBuilder sb = new StringBuilder()", span="177-177", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_140 [label="StringWriter sw = new StringWriter(sb)", span="178-178", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_149 [label="string result = sb.ToString()", span="192-192", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_141 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="180-180", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_142 [label="jsonWriter.WriteStartArray()", span="182-182", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_143 [label="jsonWriter.WriteValue(@''''''These pretzels are making me thirsty!'''''')", span="183-183", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_144 [label="jsonWriter.WriteValue(''Jeff's house was burninated.'')", span="184-184", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_145 [label="jsonWriter.WriteValue(@''1. You don't talk about fight club.\r\n2. You don't talk about fight club.'')", span="185-186", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_146 [label="jsonWriter.WriteValue(''35% of\t statistics\n are made\r up.'')", span="187-187", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_147 [label="jsonWriter.WriteEndArray()", span="188-188", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_148 [label="string expected = @''[''''\''''These pretzels are making me thirsty!\'''''''',''''Jeff's house was burninated.'''',''''1. You don't talk about fight club.\r\n2. You don't talk about fight club.'''',''''35% of\t statistics\n are made\r up.'''']''", span="191-191", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_152 [label="Assert.AreEqual(expected, result)", span="197-197", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_150 [label="Console.WriteLine(''StringEscaping'')", span="194-194", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_151 [label="Console.WriteLine(result)", span="195-195", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_153 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", span="175-175", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTypeReflector.cs"];
m25_256 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", span="378-378", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTypeReflector.cs"];
m25_257 [label="StringBuilder sb = new StringBuilder()", span="380-380", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTypeReflector.cs"];
m25_258 [label="StringWriter sw = new StringWriter(sb)", span="381-381", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTypeReflector.cs"];
m25_265 [label="string result = sb.ToString()", span="393-393", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTypeReflector.cs"];
m25_259 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="383-383", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTypeReflector.cs"];
m25_260 [label="jsonWriter.Formatting = Formatting.Indented", span="385-385", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTypeReflector.cs"];
m25_261 [label="jsonWriter.WriteStartObject()", span="387-387", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTypeReflector.cs"];
m25_262 [label="jsonWriter.WriteRaw(@''''''PropertyName'''':[1,2,3,4,5]'')", span="388-388", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTypeReflector.cs"];
m25_263 [label="jsonWriter.WriteEnd()", span="389-389", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTypeReflector.cs"];
m25_264 [label="string expected = @''{''''PropertyName'''':[1,2,3,4,5]}''", span="392-392", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTypeReflector.cs"];
m25_266 [label="Assert.AreEqual(expected, result)", span="395-395", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTypeReflector.cs"];
m25_267 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", span="378-378", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTypeReflector.cs"];
m25_280 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="309-309", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTypeReflector.cs"];
m25_395 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="JsonTypeReflector.cs"];
m25_44 [label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonTypeReflector.cs"];
m25_394 [label="Entry string.Trim(params char[])", span="0-0", cluster="string.Trim(params char[])", file="JsonTypeReflector.cs"];
m25_103 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte?)", span="943-943", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="JsonTypeReflector.cs"];
m25_113 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", span="968-968", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="JsonTypeReflector.cs"];
m25_59 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", span="89-89", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_60 [label="StringWriter sw = new StringWriter()", span="91-91", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_61 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="92-92", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_94 [label="string json = sw.ToString()", span="130-130", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_62 [label="jsonWriter.WriteStartArray()", span="94-94", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_63 [label="jsonWriter.WriteValue((char?)null)", span="95-95", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_64 [label="jsonWriter.WriteValue((char?)'c')", span="96-96", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_65 [label="jsonWriter.WriteValue((bool?)null)", span="97-97", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_66 [label="jsonWriter.WriteValue((bool?)true)", span="98-98", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_67 [label="jsonWriter.WriteValue((byte?)null)", span="99-99", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_68 [label="jsonWriter.WriteValue((byte?)1)", span="100-100", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_69 [label="jsonWriter.WriteValue((sbyte?)null)", span="101-101", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_70 [label="jsonWriter.WriteValue((sbyte?)1)", span="102-102", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_71 [label="jsonWriter.WriteValue((short?)null)", span="103-103", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_72 [label="jsonWriter.WriteValue((short?)1)", span="104-104", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_73 [label="jsonWriter.WriteValue((ushort?)null)", span="105-105", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_74 [label="jsonWriter.WriteValue((ushort?)1)", span="106-106", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_75 [label="jsonWriter.WriteValue((int?)null)", span="107-107", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_76 [label="jsonWriter.WriteValue((int?)1)", span="108-108", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_77 [label="jsonWriter.WriteValue((uint?)null)", span="109-109", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_78 [label="jsonWriter.WriteValue((uint?)1)", span="110-110", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_79 [label="jsonWriter.WriteValue((long?)null)", span="111-111", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_80 [label="jsonWriter.WriteValue((long?)1)", span="112-112", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_81 [label="jsonWriter.WriteValue((ulong?)null)", span="113-113", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_82 [label="jsonWriter.WriteValue((ulong?)1)", span="114-114", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_83 [label="jsonWriter.WriteValue((double?)null)", span="115-115", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_84 [label="jsonWriter.WriteValue((double?)1.1)", span="116-116", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_85 [label="jsonWriter.WriteValue((float?)null)", span="117-117", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_86 [label="jsonWriter.WriteValue((float?)1.1)", span="118-118", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_87 [label="jsonWriter.WriteValue((decimal?)null)", span="119-119", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_88 [label="jsonWriter.WriteValue((decimal?)1.1m)", span="120-120", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_89 [label="jsonWriter.WriteValue((DateTime?)null)", span="121-121", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_90 [label="jsonWriter.WriteValue((DateTime?)new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc))", span="122-122", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_91 [label="jsonWriter.WriteValue((DateTimeOffset?)null)", span="124-124", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_92 [label="jsonWriter.WriteValue((DateTimeOffset?)new DateTimeOffset(JsonConvert.InitialJavaScriptDateTicks, TimeSpan.Zero))", span="125-125", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_93 [label="jsonWriter.WriteEndArray()", span="127-127", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_95 [label="string expected", span="131-131", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_97 [label="Assert.AreEqual(expected, json)", span="139-139", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_96 [label="expected = @''[null,''''c'''',null,true,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1.1,null,1.1,null,1.1,null,''''\/Date(0)\/'''',null,''''\/Date(0+0000)\/'''']''", span="134-134", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_98 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", span="89-89", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTypeReflector.cs"];
m25_376 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="347-347", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonTypeReflector.cs"];
m25_17 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JsonTypeReflector.cs"];
m25_397 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", span="589-589", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_398 [label="StringBuilder sb = new StringBuilder()", span="591-591", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_399 [label="StringWriter sw = new StringWriter(sb)", span="592-592", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_412 [label="string result = sb.ToString()", span="616-616", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_400 [label="string text = ''Hello world.''", span="594-594", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_402 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="597-597", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_401 [label="byte[] data = Encoding.UTF8.GetBytes(text)", span="595-595", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_406 [label="jsonWriter.WriteValue(data)", span="603-603", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_407 [label="jsonWriter.WriteValue(data)", span="604-604", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_408 [label="jsonWriter.WriteValue((object)data)", span="605-605", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_403 [label="jsonWriter.Formatting = Formatting.Indented", span="599-599", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_404 [label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="600-600", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_405 [label="jsonWriter.WriteStartArray()", span="602-602", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_409 [label="jsonWriter.WriteValue((byte[])null)", span="606-606", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_410 [label="jsonWriter.WriteEndArray()", span="607-607", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_411 [label="string expected = @''[\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  null\r\n]''", span="610-615", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_413 [label="Assert.AreEqual(expected, result)", span="618-618", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_414 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", span="589-589", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTypeReflector.cs"];
m25_12 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JsonTypeReflector.cs"];
m25_53 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="634-634", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonTypeReflector.cs"];
m25_102 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="894-894", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="JsonTypeReflector.cs"];
m25_352 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", span="528-528", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_353 [label="StringBuilder sb = new StringBuilder()", span="530-530", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_354 [label="StringWriter sw = new StringWriter(sb)", span="531-531", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_371 [label="string result = sb.ToString()", span="556-556", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_355 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="533-533", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_356 [label="jsonWriter.Formatting = Formatting.Indented", span="535-535", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_357 [label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="536-536", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_358 [label="jsonWriter.Indentation = 5", span="538-538", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_359 [label="Assert.AreEqual(5, jsonWriter.Indentation)", span="539-539", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_360 [label="jsonWriter.IndentChar = '_'", span="540-540", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_361 [label="Assert.AreEqual('_', jsonWriter.IndentChar)", span="541-541", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_362 [label="jsonWriter.QuoteName = true", span="542-542", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_363 [label="Assert.AreEqual(true, jsonWriter.QuoteName)", span="543-543", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_364 [label="jsonWriter.QuoteChar = '\''", span="544-544", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_365 [label="Assert.AreEqual('\'', jsonWriter.QuoteChar)", span="545-545", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_366 [label="jsonWriter.WriteStartObject()", span="547-547", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_367 [label="jsonWriter.WritePropertyName(''propertyName'')", span="548-548", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_368 [label="jsonWriter.WriteValue(double.NaN)", span="549-549", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_369 [label="jsonWriter.WriteEndObject()", span="550-550", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_370 [label="string expected = @''{\r\n_____'propertyName': NaN\r\n}''", span="553-555", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_372 [label="Assert.AreEqual(expected, result)", span="558-558", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_373 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", span="528-528", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTypeReflector.cs"];
m25_109 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long?)", span="845-845", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="JsonTypeReflector.cs"];
m25_277 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="62-62", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTypeReflector.cs"];
m25_312 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="283-283", cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JsonTypeReflector.cs"];
m25_112 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float?)", span="870-870", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="JsonTypeReflector.cs"];
m25_48 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="735-735", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonTypeReflector.cs"];
m25_101 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char?)", span="931-931", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="JsonTypeReflector.cs"];
m25_181 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="300-300", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonTypeReflector.cs"];
m25_16 [label="Entry Newtonsoft.Json.JsonTextWriter.Close()", span="132-132", cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonTypeReflector.cs"];
m25_107 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="820-820", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="JsonTypeReflector.cs"];
m25_106 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="919-919", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="JsonTypeReflector.cs"];
m25_54 [label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="642-642", cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JsonTypeReflector.cs"];
m25_180 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1103-1103", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonTypeReflector.cs"];
m25_57 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonTypeReflector.cs"];
m25_47 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="670-670", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonTypeReflector.cs"];
m25_179 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="292-292", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonTypeReflector.cs"];
m25_313 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="464-464", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_314 [label="StringBuilder sb = new StringBuilder()", span="466-466", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_315 [label="StringWriter sw = new StringWriter(sb)", span="467-467", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_334 [label="Assert.AreEqual(@''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN]'', sb.ToString())", span="492-492", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_316 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="469-469", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_317 [label="jsonWriter.WriteStartArray()", span="471-471", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_318 [label="jsonWriter.WriteValue(0.0)", span="473-473", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_319 [label="jsonWriter.WriteValue(0f)", span="474-474", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_320 [label="jsonWriter.WriteValue(0.1)", span="475-475", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_321 [label="jsonWriter.WriteValue(1.0)", span="476-476", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_322 [label="jsonWriter.WriteValue(1.000001)", span="477-477", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_323 [label="jsonWriter.WriteValue(0.000001)", span="478-478", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_324 [label="jsonWriter.WriteValue(double.Epsilon)", span="479-479", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_325 [label="jsonWriter.WriteValue(double.PositiveInfinity)", span="480-480", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_326 [label="jsonWriter.WriteValue(double.NegativeInfinity)", span="481-481", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_327 [label="jsonWriter.WriteValue(double.NaN)", span="482-482", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_328 [label="jsonWriter.WriteValue(double.MaxValue)", span="483-483", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_329 [label="jsonWriter.WriteValue(double.MinValue)", span="484-484", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_330 [label="jsonWriter.WriteValue(float.PositiveInfinity)", span="485-485", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_331 [label="jsonWriter.WriteValue(float.NegativeInfinity)", span="486-486", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_332 [label="jsonWriter.WriteValue(float.NaN)", span="487-487", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_333 [label="jsonWriter.WriteEndArray()", span="489-489", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_335 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="464-464", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTypeReflector.cs"];
m25_55 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="265-265", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonTypeReflector.cs"];
m25_345 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", span="515-515", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonTypeReflector.cs"];
m25_346 [label="StringBuilder sb = new StringBuilder()", span="517-517", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonTypeReflector.cs"];
m25_347 [label="StringWriter sw = new StringWriter(sb)", span="518-518", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonTypeReflector.cs"];
m25_348 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="520-520", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonTypeReflector.cs"];
m25_349 [label="jsonWriter.Formatting = Formatting.Indented", span="522-522", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonTypeReflector.cs"];
m25_350 [label="jsonWriter.QuoteChar = '*'", span="523-523", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonTypeReflector.cs"];
m25_351 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", span="515-515", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonTypeReflector.cs"];
m25_114 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", span="980-980", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="JsonTypeReflector.cs"];
m25_13 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="109-109", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTypeReflector.cs"];
m25_239 [label="Entry Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="651-651", cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="JsonTypeReflector.cs"];
m25_117 [label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonTypeReflector.cs"];
m25_241 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="351-351", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTypeReflector.cs"];
m25_242 [label="StringBuilder sb = new StringBuilder()", span="353-353", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTypeReflector.cs"];
m25_243 [label="StringWriter sw = new StringWriter(sb)", span="354-354", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTypeReflector.cs"];
m25_253 [label="string result = sb.ToString()", span="372-372", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTypeReflector.cs"];
m25_244 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="356-356", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTypeReflector.cs"];
m25_245 [label="jsonWriter.Formatting = Formatting.Indented", span="358-358", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTypeReflector.cs"];
m25_246 [label="jsonWriter.WriteStartArray()", span="360-360", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTypeReflector.cs"];
m25_247 [label="jsonWriter.WriteValue(double.NaN)", span="361-361", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTypeReflector.cs"];
m25_248 [label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="362-362", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTypeReflector.cs"];
m25_249 [label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="363-363", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTypeReflector.cs"];
m25_250 [label="jsonWriter.WriteValue(float.NaN)", span="364-364", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTypeReflector.cs"];
m25_251 [label="jsonWriter.WriteEndArray()", span="365-365", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTypeReflector.cs"];
m25_252 [label="string expected = @''[\r\n  NaN,[1,2,3,4,5],[1,2,3,4,5],\r\n  NaN\r\n]''", span="368-371", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTypeReflector.cs"];
m25_254 [label="Assert.AreEqual(expected, result)", span="374-374", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTypeReflector.cs"];
m25_255 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="351-351", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTypeReflector.cs"];
m25_178 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="239-239", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonTypeReflector.cs"];
m25_14 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonTypeReflector.cs"];
m25_278 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonTypeReflector.cs"];
m25_137 [label="Entry System.Version.Version(int, int, int, int)", span="0-0", cluster="System.Version.Version(int, int, int, int)", file="JsonTypeReflector.cs"];
m25_225 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="326-326", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTypeReflector.cs"];
m25_226 [label="StringBuilder sb = new StringBuilder()", span="328-328", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTypeReflector.cs"];
m25_227 [label="StringWriter sw = new StringWriter(sb)", span="329-329", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTypeReflector.cs"];
m25_236 [label="string result = sb.ToString()", span="345-345", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTypeReflector.cs"];
m25_228 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="331-331", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTypeReflector.cs"];
m25_229 [label="jsonWriter.Formatting = Formatting.Indented", span="333-333", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTypeReflector.cs"];
m25_230 [label="jsonWriter.WriteRaw(''[1,2,3,4,5]'')", span="335-335", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTypeReflector.cs"];
m25_231 [label="jsonWriter.WriteWhitespace(''  '')", span="336-336", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTypeReflector.cs"];
m25_232 [label="jsonWriter.WriteStartArray()", span="337-337", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTypeReflector.cs"];
m25_233 [label="jsonWriter.WriteValue(double.NaN)", span="338-338", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTypeReflector.cs"];
m25_234 [label="jsonWriter.WriteEndArray()", span="339-339", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTypeReflector.cs"];
m25_235 [label="string expected = @''[1,2,3,4,5]  [\r\n  NaN\r\n]''", span="342-344", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTypeReflector.cs"];
m25_237 [label="Assert.AreEqual(expected, result)", span="347-347", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTypeReflector.cs"];
m25_238 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="326-326", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTypeReflector.cs"];
m25_18 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", span="55-55", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_19 [label="StringBuilder sb = new StringBuilder()", span="57-57", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_20 [label="StringWriter sw = new StringWriter(sb)", span="58-58", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_38 [label="string result = sb.ToString()", span="80-80", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_21 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="60-60", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_22 [label="jsonWriter.WriteStartArray()", span="62-62", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_23 [label="jsonWriter.WriteValue('@')", span="63-63", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_24 [label="jsonWriter.WriteValue(''\r\n\t\f\b?{\\r\\n\''\''')", span="64-64", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_25 [label="jsonWriter.WriteValue(true)", span="65-65", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_26 [label="jsonWriter.WriteValue(10)", span="66-66", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_27 [label="jsonWriter.WriteValue(10.99)", span="67-67", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_28 [label="jsonWriter.WriteValue(0.99)", span="68-68", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_29 [label="jsonWriter.WriteValue(0.000000000000000001d)", span="69-69", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_30 [label="jsonWriter.WriteValue(0.000000000000000001m)", span="70-70", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_31 [label="jsonWriter.WriteValue((string)null)", span="71-71", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_32 [label="jsonWriter.WriteValue((object)null)", span="72-72", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_33 [label="jsonWriter.WriteValue(''This is a string.'')", span="73-73", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_34 [label="jsonWriter.WriteNull()", span="74-74", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_35 [label="jsonWriter.WriteUndefined()", span="75-75", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_36 [label="jsonWriter.WriteEndArray()", span="76-76", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_37 [label="string expected = @''[''''@'''',''''\r\n\t\f\b?{\\r\\n\''''''''',true,10,10.99,0.99,1E-18,0.000000000000000001,null,null,''''This is a string.'''',null,undefined]''", span="79-79", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_41 [label="Assert.AreEqual(expected, result)", span="85-85", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_39 [label="Console.WriteLine(''ValueFormatting'')", span="82-82", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_40 [label="Console.WriteLine(result)", span="83-83", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_42 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", span="55-55", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTypeReflector.cs"];
m25_183 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="255-255", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_184 [label="StringBuilder sb = new StringBuilder()", span="257-257", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_185 [label="StringWriter sw = new StringWriter(sb)", span="258-258", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_186 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="260-260", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_187 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="262-262", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_188 [label="jsonWriter.WriteStartObject()", span="264-264", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_189 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="265-265", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_190 [label="jsonWriter.WritePropertyName(''CPU'')", span="267-267", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_191 [label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="268-268", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_192 [label="jsonWriter.WriteValue(''Intel'')", span="270-270", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_193 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="271-271", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_194 [label="jsonWriter.WritePropertyName(''Drives'')", span="273-273", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_195 [label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="274-274", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_196 [label="jsonWriter.WriteStartArray()", span="276-276", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_197 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="277-277", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_198 [label="jsonWriter.WriteValue(''DVD read/writer'')", span="279-279", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_199 [label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="280-280", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_200 [label="jsonWriter.WriteEnd()", span="282-282", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_201 [label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="283-283", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_202 [label="jsonWriter.WriteEndObject()", span="285-285", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_203 [label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="286-286", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_204 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="255-255", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTypeReflector.cs"];
m25_45 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="256-256", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonTypeReflector.cs"];
m25_111 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="882-882", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="JsonTypeReflector.cs"];
m25_377 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="562-562", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTypeReflector.cs"];
m25_378 [label="StringBuilder sb = new StringBuilder()", span="564-564", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTypeReflector.cs"];
m25_379 [label="StringWriter sw = new StringWriter(sb)", span="565-565", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTypeReflector.cs"];
m25_387 [label="string result = sb.ToString()", span="579-579", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTypeReflector.cs"];
m25_380 [label="string text = ''Hello world.''", span="567-567", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTypeReflector.cs"];
m25_382 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="570-570", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTypeReflector.cs"];
m25_381 [label="byte[] data = Encoding.UTF8.GetBytes(text)", span="568-568", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTypeReflector.cs"];
m25_390 [label="Assert.AreEqual(text, Encoding.UTF8.GetString(d2, 0, d2.Length))", span="585-585", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTypeReflector.cs"];
m25_385 [label="jsonWriter.WriteValue(data)", span="575-575", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTypeReflector.cs"];
m25_383 [label="jsonWriter.Formatting = Formatting.Indented", span="572-572", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTypeReflector.cs"];
m25_384 [label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="573-573", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTypeReflector.cs"];
m25_386 [label="string expected = @''''''SGVsbG8gd29ybGQu''''''", span="578-578", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTypeReflector.cs"];
m25_388 [label="Assert.AreEqual(expected, result)", span="581-581", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTypeReflector.cs"];
m25_389 [label="byte[] d2 = Convert.FromBase64String(result.Trim(''''))", span="583-583", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTypeReflector.cs"];
m25_391 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="562-562", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTypeReflector.cs"];
m25_99 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonTypeReflector.cs"];
m25_311 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="274-274", cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JsonTypeReflector.cs"];
m25_108 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="833-833", cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="JsonTypeReflector.cs"];
m25_182 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="248-248", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTypeReflector.cs"];
m25_281 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="413-413", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTypeReflector.cs"];
m25_282 [label="StringBuilder sb = new StringBuilder()", span="415-415", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTypeReflector.cs"];
m25_283 [label="StringWriter sw = new StringWriter(sb)", span="416-416", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTypeReflector.cs"];
m25_293 [label="Assert.AreEqual(@''{''''d0'''':[1,2],''''d1'''':[1,2],''''d2'''':[1,2]}'', sb.ToString())", span="436-436", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTypeReflector.cs"];
m25_284 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="418-418", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTypeReflector.cs"];
m25_285 [label="int i = 0", span="420-420", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTypeReflector.cs"];
m25_287 [label="jsonWriter.WriteStartObject()", span="423-423", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTypeReflector.cs"];
m25_289 [label="jsonWriter.WritePropertyName(''d'' + i)", span="427-427", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTypeReflector.cs"];
m25_290 [label="jsonWriter.WriteRawValue(rawJson)", span="428-428", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTypeReflector.cs"];
m25_292 [label="jsonWriter.WriteEndObject()", span="433-433", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTypeReflector.cs"];
m25_286 [label="string rawJson = ''[1,2]''", span="421-421", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTypeReflector.cs"];
m25_288 [label="i < 3", span="425-425", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTypeReflector.cs"];
m25_291 [label="i++", span="430-430", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTypeReflector.cs"];
m25_294 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="413-413", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTypeReflector.cs"];
m25_268 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="399-399", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTypeReflector.cs"];
m25_269 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''[1,2,3,4,5]''))", span="401-401", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTypeReflector.cs"];
m25_270 [label="reader.Read()", span="402-402", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTypeReflector.cs"];
m25_271 [label="reader.Read()", span="403-403", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTypeReflector.cs"];
m25_274 [label="writer.WriteToken(reader)", span="407-407", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTypeReflector.cs"];
m25_272 [label="StringWriter sw = new StringWriter()", span="405-405", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTypeReflector.cs"];
m25_273 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="406-406", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTypeReflector.cs"];
m25_275 [label="Assert.AreEqual(''1'', sw.ToString())", span="409-409", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTypeReflector.cs"];
m25_276 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="399-399", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTypeReflector.cs"];
m25_50 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="726-726", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonTypeReflector.cs"];
m25_52 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1019-1019", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTypeReflector.cs"];
m25_130 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", span="163-163", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonTypeReflector.cs"];
m25_131 [label="StringWriter sw = new StringWriter()", span="165-165", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonTypeReflector.cs"];
m25_132 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="166-166", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonTypeReflector.cs"];
m25_133 [label="jsonWriter.WriteStartArray()", span="168-168", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonTypeReflector.cs"];
m25_134 [label="jsonWriter.WriteValue(new Version(1, 1, 1, 1))", span="169-169", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonTypeReflector.cs"];
m25_135 [label="jsonWriter.WriteEndArray()", span="170-170", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonTypeReflector.cs"];
m25_136 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", span="163-163", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonTypeReflector.cs"];
m25_104 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="956-956", cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="JsonTypeReflector.cs"];
m25_100 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="153-153", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTypeReflector.cs"];
m25_0 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", span="37-37", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTypeReflector.cs"];
m25_1 [label="MemoryStream ms = new MemoryStream()", span="39-39", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTypeReflector.cs"];
m25_2 [label="JsonTextWriter writer = new JsonTextWriter(new StreamWriter(ms))", span="40-40", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTypeReflector.cs"];
m25_3 [label="Assert.IsTrue(ms.CanRead)", span="42-42", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTypeReflector.cs"];
m25_5 [label="Assert.IsFalse(ms.CanRead)", span="44-44", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTypeReflector.cs"];
m25_4 [label="writer.Close()", span="43-43", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTypeReflector.cs"];
m25_6 [label="ms = new MemoryStream()", span="46-46", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTypeReflector.cs"];
m25_7 [label="writer = new JsonTextWriter(new StreamWriter(ms)) { CloseOutput = false }", span="47-47", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTypeReflector.cs"];
m25_8 [label="Assert.IsTrue(ms.CanRead)", span="49-49", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTypeReflector.cs"];
m25_10 [label="Assert.IsTrue(ms.CanRead)", span="51-51", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTypeReflector.cs"];
m25_9 [label="writer.Close()", span="50-50", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTypeReflector.cs"];
m25_11 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", span="37-37", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTypeReflector.cs"];
m25_56 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JsonTypeReflector.cs"];
m25_336 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="497-497", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonTypeReflector.cs"];
m25_337 [label="StringBuilder sb = new StringBuilder()", span="499-499", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonTypeReflector.cs"];
m25_338 [label="StringWriter sw = new StringWriter(sb)", span="500-500", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonTypeReflector.cs"];
m25_339 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="502-502", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonTypeReflector.cs"];
m25_340 [label="jsonWriter.WriteStartArray()", span="504-504", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonTypeReflector.cs"];
m25_341 [label="jsonWriter.WriteValue(0.0)", span="506-506", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonTypeReflector.cs"];
m25_342 [label="jsonWriter.WriteEndArray()", span="508-508", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonTypeReflector.cs"];
m25_343 [label="jsonWriter.WriteEndArray()", span="509-509", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonTypeReflector.cs"];
m25_344 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="497-497", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonTypeReflector.cs"];
m25_393 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="439-439", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTypeReflector.cs"];
m25_392 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonTypeReflector.cs"];
m25_49 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="679-679", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonTypeReflector.cs"];
m25_296 [label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="440-440", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTypeReflector.cs"];
m25_297 [label="StringBuilder sb = new StringBuilder()", span="442-442", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTypeReflector.cs"];
m25_298 [label="StringWriter sw = new StringWriter(sb)", span="443-443", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTypeReflector.cs"];
m25_309 [label="Assert.AreEqual(@''{''''con'''':new Ext.data.JsonStore({''''aa'''':''''aa''''})}'', sb.ToString())", span="460-460", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTypeReflector.cs"];
m25_299 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="445-445", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTypeReflector.cs"];
m25_300 [label="jsonWriter.WriteStartObject()", span="447-447", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTypeReflector.cs"];
m25_301 [label="jsonWriter.WritePropertyName(''con'')", span="448-448", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTypeReflector.cs"];
m25_302 [label="jsonWriter.WriteStartConstructor(''Ext.data.JsonStore'')", span="450-450", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTypeReflector.cs"];
m25_303 [label="jsonWriter.WriteStartObject()", span="451-451", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTypeReflector.cs"];
m25_304 [label="jsonWriter.WritePropertyName(''aa'')", span="452-452", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTypeReflector.cs"];
m25_305 [label="jsonWriter.WriteValue(''aa'')", span="453-453", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTypeReflector.cs"];
m25_306 [label="jsonWriter.WriteEndObject()", span="454-454", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTypeReflector.cs"];
m25_307 [label="jsonWriter.WriteEndConstructor()", span="455-455", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTypeReflector.cs"];
m25_308 [label="jsonWriter.WriteEndObject()", span="457-457", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTypeReflector.cs"];
m25_310 [label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="440-440", cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTypeReflector.cs"];
m26_48 [label="Entry Newtonsoft.Json.JsonValidatingReader.RaiseError(string, Newtonsoft.Json.Schema.JsonSchemaModel)", span="289-289", cluster="Newtonsoft.Json.JsonValidatingReader.RaiseError(string, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_49 [label="IJsonLineInfo lineInfo = this", span="291-291", cluster="Newtonsoft.Json.JsonValidatingReader.RaiseError(string, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_50 [label="string exceptionMessage = (lineInfo.HasLineInfo())\r\n                ? message + '' Line {0}, position {1}.''.FormatWith(CultureInfo.InvariantCulture, lineInfo.LineNumber, lineInfo.LinePosition)\r\n                : message", span="293-295", cluster="Newtonsoft.Json.JsonValidatingReader.RaiseError(string, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_51 [label="OnValidationEvent(new JsonSchemaException(exceptionMessage, null, Path, lineInfo.LineNumber, lineInfo.LinePosition))", span="297-297", cluster="Newtonsoft.Json.JsonValidatingReader.RaiseError(string, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_52 [label="Exit Newtonsoft.Json.JsonValidatingReader.RaiseError(string, Newtonsoft.Json.Schema.JsonSchemaModel)", span="289-289", cluster="Newtonsoft.Json.JsonValidatingReader.RaiseError(string, Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_10 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="JsonValidatingReader.cs"];
m26_40 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonValidatingReader.cs"];
m26_393 [label="Entry Newtonsoft.Json.JsonValidatingReader.FloatingPointRemainder(double, double)", span="918-918", cluster="Newtonsoft.Json.JsonValidatingReader.FloatingPointRemainder(double, double)", file="JsonValidatingReader.cs"];
m26_394 [label="return dividend - Math.Floor(dividend / divisor) * divisor;", span="920-920", cluster="Newtonsoft.Json.JsonValidatingReader.FloatingPointRemainder(double, double)", file="JsonValidatingReader.cs"];
m26_395 [label="Exit Newtonsoft.Json.JsonValidatingReader.FloatingPointRemainder(double, double)", span="918-918", cluster="Newtonsoft.Json.JsonValidatingReader.FloatingPointRemainder(double, double)", file="JsonValidatingReader.cs"];
m26_220 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="JsonValidatingReader.cs"];
m26_412 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonValidatingReader.cs"];
m26_260 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="163-163", cluster="System.Collections.Generic.IEnumerable<TSource>.ContainsValue<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JsonValidatingReader.cs"];
m26_326 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonValidatingReader.cs"];
m26_423 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", span="978-978", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_424 [label="schema == null", span="980-980", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_426 [label="return (TestType(schema, JsonSchemaType.Array));", span="985-985", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_425 [label="return true;", span="982-982", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_427 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", span="978-978", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_47 [label="Entry System.Collections.Generic.Stack<T>.Peek()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Peek()", file="JsonValidatingReader.cs"];
m26_226 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", span="722-722", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_305 [label="schema == null", span="724-724", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_307 [label="!TestType(schema, JsonSchemaType.Boolean)", span="729-729", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_309 [label="ValidateNotDisallowed(schema)", span="734-734", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_306 [label="return;", span="726-726", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_308 [label="return;", span="731-731", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_310 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", span="722-722", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateBoolean(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_257 [label="Entry Unk.First", span="", cluster="Unk.First", file="JsonValidatingReader.cs"];
m26_282 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="JsonValidatingReader.cs"];
m26_218 [label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsStartToken(Newtonsoft.Json.JsonToken)", span="45-45", cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonValidatingReader.cs"];
m26_56 [label="Entry Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", span="300-300", cluster="Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", file="JsonValidatingReader.cs"];
m26_57 [label="ValidationEventHandler handler = ValidationEventHandler", span="302-302", cluster="Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", file="JsonValidatingReader.cs"];
m26_59 [label="handler(this, new ValidationEventArgs(exception))", span="305-305", cluster="Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", file="JsonValidatingReader.cs"];
m26_60 [label="throw exception;", span="309-309", cluster="Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", file="JsonValidatingReader.cs"];
m26_58 [label="handler != null", span="303-303", cluster="Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", file="JsonValidatingReader.cs"];
m26_61 [label="Exit Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", span="300-300", cluster="Newtonsoft.Json.JsonValidatingReader.OnValidationEvent(Newtonsoft.Json.Schema.JsonSchemaException)", file="JsonValidatingReader.cs"];
m26_225 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", span="737-737", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_311 [label="schema == null", span="739-739", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_313 [label="!TestType(schema, JsonSchemaType.String)", span="744-744", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_315 [label="ValidateNotDisallowed(schema)", span="749-749", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_317 [label="schema.MaximumLength != null && value.Length > schema.MaximumLength", span="753-753", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_318 [label="RaiseError(''String '{0}' exceeds maximum length of {1}.''.FormatWith(CultureInfo.InvariantCulture, value, schema.MaximumLength), schema)", span="755-755", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_319 [label="schema.MinimumLength != null && value.Length < schema.MinimumLength", span="758-758", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_320 [label="RaiseError(''String '{0}' is less than minimum length of {1}.''.FormatWith(CultureInfo.InvariantCulture, value, schema.MinimumLength), schema)", span="760-760", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_321 [label="schema.Patterns != null", span="763-763", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_322 [label="schema.Patterns", span="765-765", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_324 [label="RaiseError(''String '{0}' does not match regex pattern '{1}'.''.FormatWith(CultureInfo.InvariantCulture, value, pattern), schema)", span="769-769", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_312 [label="return;", span="741-741", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_314 [label="return;", span="746-746", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_316 [label="string value = _reader.Value.ToString()", span="751-751", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_323 [label="!Regex.IsMatch(value, pattern)", span="767-767", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_325 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", span="737-737", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateString(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_227 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", span="707-707", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_298 [label="schema == null", span="709-709", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_300 [label="!TestType(schema, JsonSchemaType.Null)", span="714-714", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_302 [label="ValidateNotDisallowed(schema)", span="719-719", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_299 [label="return;", span="711-711", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_301 [label="return;", span="716-716", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_303 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", span="707-707", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNull(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_253 [label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsEndToken(Newtonsoft.Json.JsonToken)", span="32-32", cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsEndToken(Newtonsoft.Json.JsonToken)", file="JsonValidatingReader.cs"];
m26_264 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonValidatingReader.cs"];
m26_327 [label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="JsonValidatingReader.cs"];
m26_69 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="58-58", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonValidatingReader.cs"];
m26_28 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="JsonValidatingReader.cs"];
m26_129 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="439-439", cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonValidatingReader.cs"];
m26_80 [label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.HasFlag(Newtonsoft.Json.Schema.JsonSchemaType?, Newtonsoft.Json.Schema.JsonSchemaType)", span="431-431", cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.HasFlag(Newtonsoft.Json.Schema.JsonSchemaType?, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonValidatingReader.cs"];
m26_54 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonValidatingReader.cs"];
m26_105 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", span="491-491", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_145 [label="_model == null", span="494-494", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_146 [label="JsonSchemaModelBuilder builder = new JsonSchemaModelBuilder()", span="496-496", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_150 [label="_reader.TokenType", span="505-505", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_147 [label="_model = builder.Build(_schema)", span="497-497", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_148 [label="!JsonTokenUtils.IsStartToken(_reader.TokenType)", span="499-499", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_149 [label="Push(new SchemaScope(JTokenType.None, CurrentMemberSchemas))", span="501-501", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_151 [label="JsonToken.StartObject", span="507-507", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_156 [label="JsonToken.StartArray", span="513-513", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_161 [label="JsonToken.StartConstructor", span="519-519", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_165 [label="JsonToken.PropertyName", span="524-524", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_169 [label="JsonToken.Raw", span="531-531", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_171 [label="JsonToken.Integer", span="534-534", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_176 [label="JsonToken.Float", span="542-542", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_181 [label="JsonToken.String", span="550-550", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_186 [label="JsonToken.Boolean", span="558-558", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_191 [label="JsonToken.Null", span="566-566", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_196 [label="JsonToken.EndObject", span="574-574", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_201 [label="JsonToken.EndArray", span="582-582", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_206 [label="JsonToken.EndConstructor", span="590-590", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_209 [label="JsonToken.Undefined", span="594-594", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_213 [label="JsonToken.None", span="600-600", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_214 [label="throw new ArgumentOutOfRangeException();", span="604-604", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_152 [label="ProcessValue()", span="508-508", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_153 [label="IList<JsonSchemaModel> objectSchemas = CurrentMemberSchemas.Where(ValidateObject).ToList()", span="509-509", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_154 [label="Push(new SchemaScope(JTokenType.Object, objectSchemas))", span="510-510", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_155 [label="WriteToken(CurrentSchemas)", span="511-511", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_157 [label="ProcessValue()", span="514-514", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_158 [label="IList<JsonSchemaModel> arraySchemas = CurrentMemberSchemas.Where(ValidateArray).ToList()", span="515-515", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_159 [label="Push(new SchemaScope(JTokenType.Array, arraySchemas))", span="516-516", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_160 [label="WriteToken(CurrentSchemas)", span="517-517", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_162 [label="ProcessValue()", span="520-520", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_163 [label="Push(new SchemaScope(JTokenType.Constructor, null))", span="521-521", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_164 [label="WriteToken(CurrentSchemas)", span="522-522", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_166 [label="WriteToken(CurrentSchemas)", span="525-525", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_167 [label=CurrentSchemas, span="526-526", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_168 [label="ValidatePropertyName(schema)", span="528-528", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_170 [label="ProcessValue()", span="532-532", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_172 [label="ProcessValue()", span="535-535", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_173 [label="WriteToken(CurrentMemberSchemas)", span="536-536", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_174 [label=CurrentMemberSchemas, span="537-537", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_175 [label="ValidateInteger(schema)", span="539-539", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_177 [label="ProcessValue()", span="543-543", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_178 [label="WriteToken(CurrentMemberSchemas)", span="544-544", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_179 [label=CurrentMemberSchemas, span="545-545", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_180 [label="ValidateFloat(schema)", span="547-547", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_182 [label="ProcessValue()", span="551-551", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_183 [label="WriteToken(CurrentMemberSchemas)", span="552-552", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_184 [label=CurrentMemberSchemas, span="553-553", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_185 [label="ValidateString(schema)", span="555-555", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_187 [label="ProcessValue()", span="559-559", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_188 [label="WriteToken(CurrentMemberSchemas)", span="560-560", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_189 [label=CurrentMemberSchemas, span="561-561", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_190 [label="ValidateBoolean(schema)", span="563-563", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_192 [label="ProcessValue()", span="567-567", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_193 [label="WriteToken(CurrentMemberSchemas)", span="568-568", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_194 [label=CurrentMemberSchemas, span="569-569", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_195 [label="ValidateNull(schema)", span="571-571", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_197 [label="WriteToken(CurrentSchemas)", span="575-575", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_198 [label=CurrentSchemas, span="576-576", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_199 [label="ValidateEndObject(schema)", span="578-578", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_200 [label="Pop()", span="580-580", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_202 [label="WriteToken(CurrentSchemas)", span="583-583", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_203 [label=CurrentSchemas, span="584-584", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_204 [label="ValidateEndArray(schema)", span="586-586", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_205 [label="Pop()", span="588-588", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_207 [label="WriteToken(CurrentSchemas)", span="591-591", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_208 [label="Pop()", span="592-592", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_210 [label="JsonToken.Date", span="595-595", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_211 [label="JsonToken.Bytes", span="596-596", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_212 [label="WriteToken(CurrentMemberSchemas)", span="598-598", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_215 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", span="491-491", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateCurrentToken()", file="JsonValidatingReader.cs"];
m26_357 [label="Entry System.Math.Truncate(double)", span="0-0", cluster="System.Math.Truncate(double)", file="JsonValidatingReader.cs"];
m26_219 [label="Entry Newtonsoft.Json.JsonValidatingReader.ProcessValue()", span="847-847", cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonValidatingReader.cs"];
m26_364 [label="_currentScope != null && _currentScope.TokenType == JTokenType.Array", span="849-849", cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonValidatingReader.cs"];
m26_365 [label="_currentScope.ArrayItemCount++", span="851-851", cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonValidatingReader.cs"];
m26_366 [label=CurrentSchemas, span="853-853", cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonValidatingReader.cs"];
m26_367 [label="currentSchema != null\r\n                        && currentSchema.PositionalItemsValidation\r\n                        && !currentSchema.AllowAdditionalItems\r\n                        && (currentSchema.Items == null || _currentScope.ArrayItemCount - 1 >= currentSchema.Items.Count)", span="856-859", cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonValidatingReader.cs"];
m26_368 [label="RaiseError(''Index {0} has not been defined and the schema does not allow additional items.''.FormatWith(CultureInfo.InvariantCulture, _currentScope.ArrayItemCount), currentSchema)", span="861-861", cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonValidatingReader.cs"];
m26_369 [label="Exit Newtonsoft.Json.JsonValidatingReader.ProcessValue()", span="847-847", cluster="Newtonsoft.Json.JsonValidatingReader.ProcessValue()", file="JsonValidatingReader.cs"];
m26_356 [label="Entry Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", span="248-248", cluster="Newtonsoft.Json.Linq.JValue.Compare(Newtonsoft.Json.Linq.JTokenType, object, object)", file="JsonValidatingReader.cs"];
m26_361 [label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JsonValidatingReader.cs"];
m26_136 [label="Entry Newtonsoft.Json.JsonValidatingReader.Read()", span="475-475", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs"];
m26_137 [label="!_reader.Read()", span="477-477", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs"];
m26_138 [label="return false;", span="479-479", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs"];
m26_139 [label="_reader.TokenType == JsonToken.Comment", span="482-482", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs"];
m26_140 [label="return true;", span="484-484", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs"];
m26_141 [label="ValidateCurrentToken()", span="487-487", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs"];
m26_142 [label="return true;", span="488-488", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs"];
m26_143 [label="Exit Newtonsoft.Json.JsonValidatingReader.Read()", span="475-475", cluster="Newtonsoft.Json.JsonValidatingReader.Read()", file="JsonValidatingReader.cs"];
m26_216 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", span="37-37", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", file="JsonValidatingReader.cs"];
m26_130 [label="Entry Newtonsoft.Json.JsonValidatingReader.ReadAsDateTimeOffset()", span="460-460", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDateTimeOffset()", file="JsonValidatingReader.cs"];
m26_131 [label="DateTimeOffset? dateTimeOffset = _reader.ReadAsDateTimeOffset()", span="462-462", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDateTimeOffset()", file="JsonValidatingReader.cs"];
m26_132 [label="ValidateCurrentToken()", span="464-464", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDateTimeOffset()", file="JsonValidatingReader.cs"];
m26_133 [label="return dateTimeOffset;", span="465-465", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDateTimeOffset()", file="JsonValidatingReader.cs"];
m26_134 [label="Exit Newtonsoft.Json.JsonValidatingReader.ReadAsDateTimeOffset()", span="460-460", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDateTimeOffset()", file="JsonValidatingReader.cs"];
m26_258 [label="Entry Unk.RaiseError", span="", cluster="Unk.RaiseError", file="JsonValidatingReader.cs"];
m26_261 [label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="JsonValidatingReader.cs"];
m26_104 [label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="415-415", cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonValidatingReader.cs"];
m26_413 [label="Entry Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", span="957-957", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonValidatingReader.cs"];
m26_414 [label="schema.Properties != null && schema.Properties.ContainsKey(propertyName)", span="959-959", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonValidatingReader.cs"];
m26_416 [label="schema.PatternProperties != null", span="964-964", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonValidatingReader.cs"];
m26_417 [label="schema.PatternProperties.Keys", span="966-966", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonValidatingReader.cs"];
m26_418 [label="Regex.IsMatch(propertyName, pattern)", span="968-968", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonValidatingReader.cs"];
m26_415 [label="return true;", span="961-961", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonValidatingReader.cs"];
m26_420 [label="return false;", span="975-975", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonValidatingReader.cs"];
m26_419 [label="return true;", span="970-970", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonValidatingReader.cs"];
m26_421 [label="Exit Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", span="957-957", cluster="Newtonsoft.Json.JsonValidatingReader.IsPropertyDefinied(Newtonsoft.Json.Schema.JsonSchemaModel, string)", file="JsonValidatingReader.cs"];
m26_55 [label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", span="104-104", cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonValidatingReader.cs"];
m26_391 [label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JsonValidatingReader.cs"];
m26_363 [label="Entry Newtonsoft.Json.JsonConvert.ToString(object)", span="457-457", cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonValidatingReader.cs"];
m26_64 [label="Entry Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", span="318-318", cluster="Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", file="JsonValidatingReader.cs"];
m26_65 [label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="320-320", cluster="Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", file="JsonValidatingReader.cs"];
m26_66 [label="_reader = reader", span="321-321", cluster="Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", file="JsonValidatingReader.cs"];
m26_67 [label="_stack = new Stack<SchemaScope>()", span="322-322", cluster="Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", file="JsonValidatingReader.cs"];
m26_68 [label="Exit Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", span="318-318", cluster="Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", file="JsonValidatingReader.cs"];
m26_46 [label="Entry System.Collections.Generic.Stack<T>.Pop()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Pop()", file="JsonValidatingReader.cs"];
m26_224 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", span="867-867", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_370 [label="schema == null", span="869-869", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_372 [label="!TestType(schema, JsonSchemaType.Float)", span="874-874", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_374 [label="ValidateNotDisallowed(schema)", span="879-879", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_376 [label="schema.Maximum != null", span="883-883", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_377 [label="value > schema.Maximum", span="885-885", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_378 [label="RaiseError(''Float {0} exceeds maximum value of {1}.''.FormatWith(CultureInfo.InvariantCulture, JsonConvert.ToString(value), schema.Maximum), schema)", span="887-887", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_379 [label="schema.ExclusiveMaximum && value == schema.Maximum", span="889-889", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_380 [label="RaiseError(''Float {0} equals maximum value of {1} and exclusive maximum is true.''.FormatWith(CultureInfo.InvariantCulture, JsonConvert.ToString(value), schema.Maximum), schema)", span="891-891", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_381 [label="schema.Minimum != null", span="895-895", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_382 [label="value < schema.Minimum", span="897-897", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_383 [label="RaiseError(''Float {0} is less than minimum value of {1}.''.FormatWith(CultureInfo.InvariantCulture, JsonConvert.ToString(value), schema.Minimum), schema)", span="899-899", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_384 [label="schema.ExclusiveMinimum && value == schema.Minimum", span="901-901", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_385 [label="RaiseError(''Float {0} equals minimum value of {1} and exclusive minimum is true.''.FormatWith(CultureInfo.InvariantCulture, JsonConvert.ToString(value), schema.Minimum), schema)", span="903-903", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_386 [label="schema.DivisibleBy != null", span="907-907", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_387 [label="double remainder = FloatingPointRemainder(value, schema.DivisibleBy.Value)", span="909-909", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", color=green, community=0, file="JsonValidatingReader.cs"];
m26_389 [label="RaiseError(''Float {0} is not evenly divisible by {1}.''.FormatWith(CultureInfo.InvariantCulture, JsonConvert.ToString(value), schema.DivisibleBy), schema)", span="913-913", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_371 [label="return;", span="871-871", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_373 [label="return;", span="876-876", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_375 [label="double value = Convert.ToDouble(_reader.Value, CultureInfo.InvariantCulture)", span="881-881", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_388 [label="!IsZero(remainder)", span="911-911", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_390 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", span="867-867", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateFloat(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_228 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", span="666-666", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_274 [label="schema == null", span="668-668", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_280 [label="RaiseError(''Required properties are missing from object: {0}.''.FormatWith(CultureInfo.InvariantCulture, string.Join('', '', unmatchedRequiredProperties.ToArray())), schema)", span="682-682", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_275 [label="return;", span="670-670", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_276 [label="Dictionary<string, bool> requiredProperties = _currentScope.RequiredProperties", span="673-673", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_277 [label="requiredProperties != null", span="675-675", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_278 [label="List<string> unmatchedRequiredProperties =\r\n                    requiredProperties.Where(kv => !kv.Value).Select(kv => kv.Key).ToList()", span="677-678", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_279 [label="unmatchedRequiredProperties.Count > 0", span="680-680", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_281 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", span="666-666", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_222 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", span="930-930", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_400 [label="schema == null", span="932-932", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_405 [label="!schema.AllowAdditionalProperties", span="944-944", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_406 [label="bool propertyDefinied = IsPropertyDefinied(schema, propertyName)", span="946-946", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_408 [label="RaiseError(''Property '{0}' has not been defined and the schema does not allow additional properties.''.FormatWith(CultureInfo.InvariantCulture, propertyName), schema)", span="950-950", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_401 [label="return;", span="934-934", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_402 [label="string propertyName = Convert.ToString(_reader.Value, CultureInfo.InvariantCulture)", span="937-937", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_403 [label="_currentScope.RequiredProperties.ContainsKey(propertyName)", span="939-939", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_404 [label="_currentScope.RequiredProperties[propertyName] = true", span="941-941", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_409 [label="_currentScope.CurrentPropertyName = propertyName", span="954-954", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_407 [label="!propertyDefinied", span="948-948", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_410 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", span="930-930", cluster="Newtonsoft.Json.JsonValidatingReader.ValidatePropertyName(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_438 [label="Entry Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="1009-1009", cluster="Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonValidatingReader.cs"];
m26_439 [label="IJsonLineInfo lineInfo = _reader as IJsonLineInfo", span="1011-1011", cluster="Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonValidatingReader.cs"];
m26_440 [label="return lineInfo != null && lineInfo.HasLineInfo();", span="1012-1012", cluster="Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonValidatingReader.cs"];
m26_441 [label="Exit Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="1009-1009", cluster="Newtonsoft.Json.JsonValidatingReader.Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonValidatingReader.cs"];
m26_11 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="JsonValidatingReader.cs"];
m26_256 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="JsonValidatingReader.cs"];
m26_124 [label="Entry Newtonsoft.Json.JsonValidatingReader.ReadAsDateTime()", span="447-447", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDateTime()", file="JsonValidatingReader.cs"];
m26_125 [label="DateTime? dateTime = _reader.ReadAsDateTime()", span="449-449", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDateTime()", file="JsonValidatingReader.cs"];
m26_126 [label="ValidateCurrentToken()", span="451-451", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDateTime()", file="JsonValidatingReader.cs"];
m26_127 [label="return dateTime;", span="452-452", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDateTime()", file="JsonValidatingReader.cs"];
m26_128 [label="Exit Newtonsoft.Json.JsonValidatingReader.ReadAsDateTime()", span="447-447", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDateTime()", file="JsonValidatingReader.cs"];
m26_106 [label="Entry Newtonsoft.Json.JsonValidatingReader.ReadAsBytes()", span="411-411", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m26_107 [label="byte[] data = _reader.ReadAsBytes()", span="413-413", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m26_108 [label="ValidateCurrentToken()", span="415-415", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m26_109 [label="return data;", span="416-416", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m26_110 [label="Exit Newtonsoft.Json.JsonValidatingReader.ReadAsBytes()", span="411-411", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m26_255 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", span="493-493", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", file="JsonValidatingReader.cs"];
m26_62 [label="Entry Newtonsoft.Json.Schema.ValidationEventArgs.ValidationEventArgs(Newtonsoft.Json.Schema.JsonSchemaException)", span="43-43", cluster="Newtonsoft.Json.Schema.ValidationEventArgs.ValidationEventArgs(Newtonsoft.Json.Schema.JsonSchemaException)", file="JsonValidatingReader.cs"];
m26_36 [label="Entry Newtonsoft.Json.JsonValidatingReader.Push(Newtonsoft.Json.JsonValidatingReader.SchemaScope)", span="173-173", cluster="Newtonsoft.Json.JsonValidatingReader.Push(Newtonsoft.Json.JsonValidatingReader.SchemaScope)", file="JsonValidatingReader.cs"];
m26_37 [label="_stack.Push(scope)", span="175-175", cluster="Newtonsoft.Json.JsonValidatingReader.Push(Newtonsoft.Json.JsonValidatingReader.SchemaScope)", file="JsonValidatingReader.cs"];
m26_38 [label="_currentScope = scope", span="176-176", cluster="Newtonsoft.Json.JsonValidatingReader.Push(Newtonsoft.Json.JsonValidatingReader.SchemaScope)", file="JsonValidatingReader.cs"];
m26_39 [label="Exit Newtonsoft.Json.JsonValidatingReader.Push(Newtonsoft.Json.JsonValidatingReader.SchemaScope)", span="173-173", cluster="Newtonsoft.Json.JsonValidatingReader.Push(Newtonsoft.Json.JsonValidatingReader.SchemaScope)", file="JsonValidatingReader.cs"];
m26_362 [label="Entry Newtonsoft.Json.JsonValidatingReader.IsZero(double)", span="923-923", cluster="Newtonsoft.Json.JsonValidatingReader.IsZero(double)", file="JsonValidatingReader.cs"];
m26_397 [label="double epsilon = 2.2204460492503131e-016", span="925-925", cluster="Newtonsoft.Json.JsonValidatingReader.IsZero(double)", file="JsonValidatingReader.cs"];
m26_398 [label="return Math.Abs(value) < 20.0 * epsilon;", span="927-927", cluster="Newtonsoft.Json.JsonValidatingReader.IsZero(double)", file="JsonValidatingReader.cs"];
m26_399 [label="Exit Newtonsoft.Json.JsonValidatingReader.IsZero(double)", span="923-923", cluster="Newtonsoft.Json.JsonValidatingReader.IsZero(double)", file="JsonValidatingReader.cs"];
m26_99 [label="Entry Newtonsoft.Json.JsonValidatingReader.ReadAsInt32()", span="397-397", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsInt32()", file="JsonValidatingReader.cs"];
m26_100 [label="int? i = _reader.ReadAsInt32()", span="399-399", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsInt32()", file="JsonValidatingReader.cs"];
m26_101 [label="ValidateCurrentToken()", span="401-401", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsInt32()", file="JsonValidatingReader.cs"];
m26_102 [label="return i;", span="402-402", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsInt32()", file="JsonValidatingReader.cs"];
m26_103 [label="Exit Newtonsoft.Json.JsonValidatingReader.ReadAsInt32()", span="397-397", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsInt32()", file="JsonValidatingReader.cs"];
m26_70 [label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonValidatingReader.cs"];
m26_112 [label="Entry Newtonsoft.Json.JsonValidatingReader.ReadAsDecimal()", span="423-423", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDecimal()", file="JsonValidatingReader.cs"];
m26_113 [label="decimal? d = _reader.ReadAsDecimal()", span="425-425", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDecimal()", file="JsonValidatingReader.cs"];
m26_114 [label="ValidateCurrentToken()", span="427-427", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDecimal()", file="JsonValidatingReader.cs"];
m26_115 [label="return d;", span="428-428", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDecimal()", file="JsonValidatingReader.cs"];
m26_116 [label="Exit Newtonsoft.Json.JsonValidatingReader.ReadAsDecimal()", span="423-423", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsDecimal()", file="JsonValidatingReader.cs"];
m26_0 [label="Entry Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", span="83-83", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_1 [label="_tokenType = tokenType", span="85-85", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_2 [label="_schemas = schemas", span="86-86", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_3 [label="_requiredProperties = schemas.SelectMany<JsonSchemaModel, string>(GetRequiredProperties).Distinct().ToDictionary(p => p, p => false)", span="88-88", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_4 [label="tokenType == JTokenType.Array && schemas.Any(s => s.UniqueItems)", span="90-90", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_5 [label="IsUniqueArray = true", span="92-92", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_6 [label="UniqueArrayItems = new List<JToken>()", span="93-93", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_7 [label="Exit Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", span="83-83", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.SchemaScope(Newtonsoft.Json.Linq.JTokenType, System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_29 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JsonValidatingReader.cs"];
m26_396 [label="Entry System.Math.Floor(double)", span="0-0", cluster="System.Math.Floor(double)", file="JsonValidatingReader.cs"];
m26_144 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonValidatingReader.cs"];
m26_118 [label="Entry Newtonsoft.Json.JsonValidatingReader.ReadAsString()", span="435-435", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsString()", file="JsonValidatingReader.cs"];
m26_119 [label="string s = _reader.ReadAsString()", span="437-437", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsString()", file="JsonValidatingReader.cs"];
m26_120 [label="ValidateCurrentToken()", span="439-439", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsString()", file="JsonValidatingReader.cs"];
m26_121 [label="return s;", span="440-440", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsString()", file="JsonValidatingReader.cs"];
m26_122 [label="Exit Newtonsoft.Json.JsonValidatingReader.ReadAsString()", span="435-435", cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsString()", file="JsonValidatingReader.cs"];
m26_9 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Distinct<TSource>()", file="JsonValidatingReader.cs"];
m26_229 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", span="687-687", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_290 [label="schema == null", span="689-689", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_293 [label="schema.MaximumItems != null && arrayItemCount > schema.MaximumItems", span="696-696", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_294 [label="RaiseError(''Array item count {0} exceeds maximum count of {1}.''.FormatWith(CultureInfo.InvariantCulture, arrayItemCount, schema.MaximumItems), schema)", span="698-698", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_295 [label="schema.MinimumItems != null && arrayItemCount < schema.MinimumItems", span="701-701", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_296 [label="RaiseError(''Array item count {0} is less than minimum count of {1}.''.FormatWith(CultureInfo.InvariantCulture, arrayItemCount, schema.MinimumItems), schema)", span="703-703", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_291 [label="return;", span="691-691", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_292 [label="int arrayItemCount = _currentScope.ArrayItemCount", span="694-694", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_297 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", span="687-687", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateEndArray(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_359 [label="Entry double.Equals(double)", span="0-0", cluster="double.Equals(double)", file="JsonValidatingReader.cs"];
m26_223 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", span="775-775", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_328 [label="schema == null", span="777-777", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_330 [label="!TestType(schema, JsonSchemaType.Integer)", span="782-782", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_332 [label="ValidateNotDisallowed(schema)", span="787-787", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_334 [label="schema.Maximum != null", span="791-791", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_335 [label="JValue.Compare(JTokenType.Integer, value, schema.Maximum) > 0", span="793-793", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_336 [label="RaiseError(''Integer {0} exceeds maximum value of {1}.''.FormatWith(CultureInfo.InvariantCulture, value, schema.Maximum), schema)", span="795-795", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_337 [label="schema.ExclusiveMaximum && JValue.Compare(JTokenType.Integer, value, schema.Maximum) == 0", span="797-797", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_338 [label="RaiseError(''Integer {0} equals maximum value of {1} and exclusive maximum is true.''.FormatWith(CultureInfo.InvariantCulture, value, schema.Maximum), schema)", span="799-799", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_339 [label="schema.Minimum != null", span="803-803", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_340 [label="JValue.Compare(JTokenType.Integer, value, schema.Minimum) < 0", span="805-805", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_341 [label="RaiseError(''Integer {0} is less than minimum value of {1}.''.FormatWith(CultureInfo.InvariantCulture, value, schema.Minimum), schema)", span="807-807", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_342 [label="schema.ExclusiveMinimum && JValue.Compare(JTokenType.Integer, value, schema.Minimum) == 0", span="809-809", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_343 [label="RaiseError(''Integer {0} equals minimum value of {1} and exclusive minimum is true.''.FormatWith(CultureInfo.InvariantCulture, value, schema.Minimum), schema)", span="811-811", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_344 [label="schema.DivisibleBy != null", span="815-815", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_348 [label="bool divisibleNonInteger = !Math.Abs(schema.DivisibleBy.Value - Math.Truncate(schema.DivisibleBy.Value)).Equals(0)", span="824-824", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_351 [label="notDivisible = i % new BigInteger(schema.DivisibleBy.Value) != 0", span="831-831", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_352 [label="notDivisible = !IsZero(Convert.ToInt64(value, CultureInfo.InvariantCulture) % schema.DivisibleBy.Value)", span="837-837", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", color=green, community=0, file="JsonValidatingReader.cs"];
m26_354 [label="RaiseError(''Integer {0} is not evenly divisible by {1}.''.FormatWith(CultureInfo.InvariantCulture, JsonConvert.ToString(value), schema.DivisibleBy), schema)", span="842-842", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_329 [label="return;", span="779-779", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_331 [label="return;", span="784-784", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_333 [label="object value = _reader.Value", span="789-789", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_346 [label="value is BigInteger", span="819-819", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_347 [label="BigInteger i = (BigInteger)value", span="823-823", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_345 [label="bool notDivisible", span="817-817", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_350 [label="notDivisible = i != 0", span="827-827", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_349 [label=divisibleNonInteger, span="825-825", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_353 [label=notDivisible, span="840-840", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_355 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", span="775-775", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateInteger(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_422 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonValidatingReader.cs"];
m26_41 [label="Entry Newtonsoft.Json.JsonValidatingReader.Pop()", span="179-179", cluster="Newtonsoft.Json.JsonValidatingReader.Pop()", file="JsonValidatingReader.cs"];
m26_42 [label="SchemaScope poppedScope = _stack.Pop()", span="181-181", cluster="Newtonsoft.Json.JsonValidatingReader.Pop()", file="JsonValidatingReader.cs"];
m26_43 [label="_currentScope = (_stack.Count != 0)\r\n                ? _stack.Peek()\r\n                : null", span="182-184", cluster="Newtonsoft.Json.JsonValidatingReader.Pop()", file="JsonValidatingReader.cs"];
m26_44 [label="return poppedScope;", span="186-186", cluster="Newtonsoft.Json.JsonValidatingReader.Pop()", file="JsonValidatingReader.cs"];
m26_45 [label="Exit Newtonsoft.Json.JsonValidatingReader.Pop()", span="179-179", cluster="Newtonsoft.Json.JsonValidatingReader.Pop()", file="JsonValidatingReader.cs"];
m26_259 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonValidatingReader.cs"];
m26_358 [label="Entry System.Math.Abs(double)", span="0-0", cluster="System.Math.Abs(double)", file="JsonValidatingReader.cs"];
m26_392 [label="Entry Newtonsoft.Json.JsonConvert.ToString(double)", span="293-293", cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonValidatingReader.cs"];
m26_262 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonValidatingReader.cs"];
m26_287 [label="Entry lambda expression", span="678-678", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_13 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_16 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_19 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_14 [label=p, span="88-88", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_15 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_17 [label=false, span="88-88", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_18 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_20 [label="s.UniqueItems", span="90-90", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_21 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_30 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_33 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_31 [label="p.Value.Required", span="104-104", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_32 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_34 [label="p.Key", span="104-104", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_35 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_265 [label="Entry lambda expression", span="614-614", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_268 [label="Entry lambda expression", span="640-640", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_271 [label="Entry lambda expression", span="645-645", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_266 [label="s.Enum != null", span="614-614", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_267 [label="Exit lambda expression", span="614-614", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_269 [label="s.UniqueItems", span="640-640", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_270 [label="Exit lambda expression", span="640-640", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_272 [label="s.Enum != null", span="645-645", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_273 [label="Exit lambda expression", span="645-645", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_284 [label="Entry lambda expression", span="678-678", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_285 [label="!kv.Value", span="678-678", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_286 [label="Exit lambda expression", span="678-678", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_288 [label="kv.Key", span="678-678", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_289 [label="Exit lambda expression", span="678-678", cluster="lambda expression", file="JsonValidatingReader.cs"];
m26_221 [label="Entry Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", span="608-608", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_231 [label=_stack, span="610-610", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_233 [label="isInUniqueArray || schemas.Any(s => s.Enum != null)", span="614-614", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_245 [label="schemas.Any(s => s.Enum != null)", span="645-645", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_246 [label=schemas, span="647-647", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_232 [label="bool isInUniqueArray = (schemaScope.TokenType == JTokenType.Array && schemaScope.IsUniqueArray && schemaScope.ArrayItemCount > 0)", span="612-612", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_234 [label="schemaScope.CurrentItemWriter == null", span="616-616", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_236 [label="schemaScope.CurrentItemWriter = new JTokenWriter()", span="623-623", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_237 [label="schemaScope.CurrentItemWriter.WriteToken(_reader, false)", span="626-626", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_238 [label="schemaScope.CurrentItemWriter.Top == 0 && _reader.TokenType != JsonToken.PropertyName", span="629-629", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_239 [label="JToken finishedItem = schemaScope.CurrentItemWriter.Token", span="631-631", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_240 [label="schemaScope.CurrentItemWriter = null", span="634-634", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_242 [label="schemaScope.UniqueArrayItems.Contains(finishedItem, JToken.EqualityComparer)", span="638-638", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_243 [label="RaiseError(''Non-unique array item at index {0}.''.FormatWith(CultureInfo.InvariantCulture, schemaScope.ArrayItemCount - 1), schemaScope.Schemas.First(s => s.UniqueItems))", span="640-640", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_244 [label="schemaScope.UniqueArrayItems.Add(finishedItem)", span="643-643", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_241 [label=isInUniqueArray, span="636-636", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_235 [label="JsonTokenUtils.IsEndToken(_reader.TokenType)", span="618-618", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_248 [label="!schema.Enum.ContainsValue(finishedItem, JToken.EqualityComparer)", span="651-651", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_250 [label="finishedItem.WriteTo(new JsonTextWriter(sw))", span="654-654", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_247 [label="schema.Enum != null", span="649-649", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_251 [label="RaiseError(''Value {0} is not defined in enum.''.FormatWith(CultureInfo.InvariantCulture, sw.ToString()), schema)", span="656-656", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_249 [label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="653-653", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_252 [label="Exit Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", span="608-608", cluster="Newtonsoft.Json.JsonValidatingReader.WriteToken(System.Collections.Generic.IList<Newtonsoft.Json.Schema.JsonSchemaModel>)", file="JsonValidatingReader.cs"];
m26_8 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="JsonValidatingReader.cs"];
m26_428 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", span="988-988", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_429 [label="schema == null", span="990-990", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_431 [label="return (TestType(schema, JsonSchemaType.Object));", span="995-995", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_430 [label="return true;", span="992-992", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_432 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", span="988-988", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateObject(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_12 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonValidatingReader.cs"];
m26_22 [label="Entry Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", span="97-97", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_23 [label="schema == null || schema.Properties == null", span="99-99", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_25 [label="return schema.Properties.Where(p => p.Value.Required).Select(p => p.Key);", span="104-104", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_24 [label="return Enumerable.Empty<string>();", span="101-101", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_26 [label="Exit Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", span="97-97", cluster="Newtonsoft.Json.JsonValidatingReader.SchemaScope.GetRequiredProperties(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_71 [label="Entry Newtonsoft.Json.JsonValidatingReader.ValidateNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", span="353-353", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_72 [label="schema == null", span="355-355", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_76 [label="JsonSchemaGenerator.HasFlag(schema.Disallow, currentNodeType.Value)", span="363-363", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", color=green, community=0, file="JsonValidatingReader.cs"];
m26_77 [label="RaiseError(''Type {0} is disallowed.''.FormatWith(CultureInfo.InvariantCulture, currentNodeType), schema)", span="365-365", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_73 [label="return;", span="357-357", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_74 [label="JsonSchemaType? currentNodeType = GetCurrentNodeSchemaType()", span="360-360", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_75 [label="currentNodeType != null", span="361-361", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_78 [label="Exit Newtonsoft.Json.JsonValidatingReader.ValidateNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", span="353-353", cluster="Newtonsoft.Json.JsonValidatingReader.ValidateNotDisallowed(Newtonsoft.Json.Schema.JsonSchemaModel)", file="JsonValidatingReader.cs"];
m26_283 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="JsonValidatingReader.cs"];
m26_117 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="433-433", cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonValidatingReader.cs"];
m26_411 [label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToString(object, System.IFormatProvider)", file="JsonValidatingReader.cs"];
m26_360 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr", file="JsonValidatingReader.cs"];
m26_230 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="JsonValidatingReader.cs"];
m26_53 [label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38", cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonValidatingReader.cs"];
m26_111 [label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="427-427", cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m26_79 [label="Entry Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", span="370-370", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_82 [label="_reader.TokenType", span="372-372", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_83 [label="JsonToken.StartObject", span="374-374", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_85 [label="JsonToken.StartArray", span="376-376", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_87 [label="JsonToken.Integer", span="378-378", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_89 [label="JsonToken.Float", span="380-380", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_91 [label="JsonToken.String", span="382-382", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_93 [label="JsonToken.Boolean", span="384-384", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_95 [label="JsonToken.Null", span="386-386", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_97 [label="return null;", span="389-389", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_84 [label="return JsonSchemaType.Object;", span="375-375", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_86 [label="return JsonSchemaType.Array;", span="377-377", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_88 [label="return JsonSchemaType.Integer;", span="379-379", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_90 [label="return JsonSchemaType.Float;", span="381-381", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_92 [label="return JsonSchemaType.String;", span="383-383", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_94 [label="return JsonSchemaType.Boolean;", span="385-385", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_96 [label="return JsonSchemaType.Null;", span="387-387", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_98 [label="Exit Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", span="370-370", cluster="Newtonsoft.Json.JsonValidatingReader.GetCurrentNodeSchemaType()", file="JsonValidatingReader.cs"];
m26_135 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="446-446", cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonValidatingReader.cs"];
m26_63 [label="Entry Newtonsoft.Json.Schema.ValidationEventHandler.Invoke(object, Newtonsoft.Json.Schema.ValidationEventArgs)", span="38-38", cluster="Newtonsoft.Json.Schema.ValidationEventHandler.Invoke(object, Newtonsoft.Json.Schema.ValidationEventArgs)", file="JsonValidatingReader.cs"];
m26_123 [label="Entry Newtonsoft.Json.JsonReader.ReadAsString()", span="421-421", cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonValidatingReader.cs"];
m26_254 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="85-85", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JsonValidatingReader.cs"];
m26_263 [label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="422-422", cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonValidatingReader.cs"];
m26_304 [label="Entry Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", span="998-998", cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonValidatingReader.cs"];
m26_433 [label="!JsonSchemaGenerator.HasFlag(currentSchema.Type, currentType)", span="1000-1000", cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonValidatingReader.cs"];
m26_434 [label="RaiseError(''Invalid type. Expected {0} but got {1}.''.FormatWith(CultureInfo.InvariantCulture, currentSchema.Type, currentType), currentSchema)", span="1002-1002", cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonValidatingReader.cs"];
m26_436 [label="return true;", span="1006-1006", cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonValidatingReader.cs"];
m26_435 [label="return false;", span="1003-1003", cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonValidatingReader.cs"];
m26_437 [label="Exit Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", span="998-998", cluster="Newtonsoft.Json.JsonValidatingReader.TestType(Newtonsoft.Json.Schema.JsonSchemaModel, Newtonsoft.Json.Schema.JsonSchemaType)", file="JsonValidatingReader.cs"];
m26_27 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="JsonValidatingReader.cs"];
m26_217 [label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", span="43-43", cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.Build(Newtonsoft.Json.Schema.JsonSchema)", file="JsonValidatingReader.cs"];
m26_442 [label="Newtonsoft.Json.JsonValidatingReader.SchemaScope", span="", file="JsonValidatingReader.cs"];
m26_443 [label="Newtonsoft.Json.JsonValidatingReader", span="", file="JsonValidatingReader.cs"];
m28_46 [label="Entry Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", span="50-50", cluster="Newtonsoft.Json.JsonPosition.JsonPosition(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_224 [label="Entry Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", span="94-94", cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JsonWriter.cs"];
m28_47 [label="Entry Newtonsoft.Json.JsonWriter.Pop()", span="368-368", cluster="Newtonsoft.Json.JsonWriter.Pop()", file="JsonWriter.cs"];
m28_48 [label="JsonPosition oldPosition = _currentPosition", span="370-370", cluster="Newtonsoft.Json.JsonWriter.Pop()", file="JsonWriter.cs"];
m28_49 [label="_stack != null && _stack.Count > 0", span="372-372", cluster="Newtonsoft.Json.JsonWriter.Pop()", file="JsonWriter.cs"];
m28_53 [label="return oldPosition.Type;", span="382-382", cluster="Newtonsoft.Json.JsonWriter.Pop()", file="JsonWriter.cs"];
m28_50 [label="_currentPosition = _stack[_stack.Count - 1]", span="374-374", cluster="Newtonsoft.Json.JsonWriter.Pop()", file="JsonWriter.cs"];
m28_52 [label="_currentPosition = new JsonPosition()", span="379-379", cluster="Newtonsoft.Json.JsonWriter.Pop()", file="JsonWriter.cs"];
m28_51 [label="_stack.RemoveAt(_stack.Count - 1)", span="375-375", cluster="Newtonsoft.Json.JsonWriter.Pop()", file="JsonWriter.cs"];
m28_54 [label="Exit Newtonsoft.Json.JsonWriter.Pop()", span="368-368", cluster="Newtonsoft.Json.JsonWriter.Pop()", file="JsonWriter.cs"];
m28_379 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", span="1135-1135", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="JsonWriter.cs"];
m28_380 [label="value == null", span="1137-1137", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="JsonWriter.cs"];
m28_382 [label="WriteValue(value.Value)", span="1143-1143", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", color=green, community=0, file="JsonWriter.cs"];
m28_381 [label="WriteNull()", span="1139-1139", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="JsonWriter.cs"];
m28_383 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", span="1135-1135", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="JsonWriter.cs"];
m28_314 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteRaw()", span="1680-1680", cluster="Newtonsoft.Json.JsonWriter.InternalWriteRaw()", file="JsonWriter.cs"];
m28_619 [label="Exit Newtonsoft.Json.JsonWriter.InternalWriteRaw()", span="1680-1680", cluster="Newtonsoft.Json.JsonWriter.InternalWriteRaw()", file="JsonWriter.cs"];
m28_130 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="JsonWriter.cs"];
m28_476 [label="Entry Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose()", span="1436-1436", cluster="Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose()", file="JsonWriter.cs"];
m28_477 [label="Dispose(true)", span="1438-1438", cluster="Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose()", file="JsonWriter.cs"];
m28_478 [label="Exit Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose()", span="1436-1436", cluster="Newtonsoft.Json.JsonWriter.System.IDisposable.Dispose()", file="JsonWriter.cs"];
m28_62 [label="Entry Newtonsoft.Json.JsonWriter.Close()", span="398-398", cluster="Newtonsoft.Json.JsonWriter.Close()", file="JsonWriter.cs"];
m28_63 [label="AutoCompleteAll()", span="400-400", cluster="Newtonsoft.Json.JsonWriter.Close()", file="JsonWriter.cs"];
m28_64 [label="Exit Newtonsoft.Json.JsonWriter.Close()", span="398-398", cluster="Newtonsoft.Json.JsonWriter.Close()", file="JsonWriter.cs"];
m28_453 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", span="1379-1379", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="JsonWriter.cs"];
m28_454 [label="value == null", span="1381-1381", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="JsonWriter.cs"];
m28_455 [label="WriteNull()", span="1383-1383", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="JsonWriter.cs"];
m28_456 [label="InternalWriteValue(JsonToken.String)", span="1387-1387", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="JsonWriter.cs"];
m28_457 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", span="1379-1379", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Uri)", file="JsonWriter.cs"];
m28_344 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char)", span="1010-1010", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="JsonWriter.cs"];
m28_345 [label="InternalWriteValue(JsonToken.String)", span="1012-1012", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="JsonWriter.cs"];
m28_346 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(char)", span="1010-1010", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="JsonWriter.cs"];
m28_208 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="905-905", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonWriter.cs"];
m28_315 [label="UpdateScopeWithFinishedValue()", span="908-908", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonWriter.cs"];
m28_317 [label="WriteRaw(json)", span="910-910", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonWriter.cs"];
m28_316 [label="AutoComplete(JsonToken.Undefined)", span="909-909", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonWriter.cs"];
m28_318 [label="Exit Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="905-905", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonWriter.cs"];
m28_573 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeInformation(System.IConvertible)", span="223-223", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeInformation(System.IConvertible)", file="JsonWriter.cs"];
m28_434 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", span="1314-1314", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="JsonWriter.cs"];
m28_435 [label="value == null", span="1316-1316", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="JsonWriter.cs"];
m28_437 [label="WriteValue(value.Value)", span="1322-1322", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", color=green, community=0, file="JsonWriter.cs"];
m28_436 [label="WriteNull()", span="1318-1318", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="JsonWriter.cs"];
m28_438 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", span="1314-1314", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="JsonWriter.cs"];
m28_196 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="1038-1038", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonWriter.cs"];
m28_353 [label="InternalWriteValue(JsonToken.Float)", span="1040-1040", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonWriter.cs"];
m28_354 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="1038-1038", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonWriter.cs"];
m28_38 [label="Entry Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.JsonContainerType)", span="353-353", cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_39 [label="_currentPosition.Type != JsonContainerType.None", span="355-355", cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_43 [label="_currentPosition = new JsonPosition(value)", span="365-365", cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_40 [label="_stack == null", span="357-357", cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_41 [label="_stack = new List<JsonPosition>()", span="359-359", cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_42 [label="_stack.Add(_currentPosition)", span="362-362", cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_44 [label="Exit Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.JsonContainerType)", span="353-353", cluster="Newtonsoft.Json.JsonWriter.Push(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_198 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="964-964", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JsonWriter.cs"];
m28_332 [label="InternalWriteValue(JsonToken.Float)", span="966-966", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JsonWriter.cs"];
m28_333 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(float)", span="964-964", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JsonWriter.cs"];
m28_0 [label="Entry Newtonsoft.Json.JsonWriter.BuildStateArray()", span="78-78", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_1 [label="var allStates = StateArrayTempate.ToList()", span="80-80", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_2 [label="var errorStates = StateArrayTempate[0]", span="81-81", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_5 [label="allStates.Count <= (int)valueToken", span="86-86", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_15 [label="allStates.Add(valueStates)", span="98-98", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_16 [label="allStates.Add(errorStates)", span="101-101", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_17 [label="return allStates.ToArray();", span="107-107", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_3 [label="var valueStates = StateArrayTempate[7]", span="82-82", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_4 [label="EnumUtils.GetValues(typeof(JsonToken))", span="84-84", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_6 [label=valueToken, span="88-88", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_7 [label="JsonToken.Integer", span="90-90", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_8 [label="JsonToken.Float", span="91-91", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_9 [label="JsonToken.String", span="92-92", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_10 [label="JsonToken.Boolean", span="93-93", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_11 [label="JsonToken.Null", span="94-94", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_12 [label="JsonToken.Undefined", span="95-95", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_13 [label="JsonToken.Date", span="96-96", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_14 [label="JsonToken.Bytes", span="97-97", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_18 [label="Exit Newtonsoft.Json.JsonWriter.BuildStateArray()", span="78-78", cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonWriter.cs"];
m28_129 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonWriter.cs"];
m28_399 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short?)", span="1199-1199", cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="JsonWriter.cs"];
m28_400 [label="value == null", span="1201-1201", cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="JsonWriter.cs"];
m28_402 [label="WriteValue(value.Value)", span="1207-1207", cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", color=green, community=0, file="JsonWriter.cs"];
m28_401 [label="WriteNull()", span="1203-1203", cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="JsonWriter.cs"];
m28_403 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(short?)", span="1199-1199", cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="JsonWriter.cs"];
m28_284 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="817-817", cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_285 [label="Exit Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="817-817", cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_472 [label="Entry Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="1431-1431", cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonWriter.cs"];
m28_473 [label="InternalWriteWhitespace(ws)", span="1433-1433", cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonWriter.cs"];
m28_474 [label="Exit Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="1431-1431", cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonWriter.cs"];
m28_22 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="JsonWriter.cs"];
m28_121 [label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsStartToken(Newtonsoft.Json.JsonToken)", span="45-45", cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsStartToken(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_467 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="JsonWriter.cs"];
m28_60 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="393-393", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonWriter.cs"];
m28_61 [label="Exit Newtonsoft.Json.JsonWriter.Flush()", span="393-393", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonWriter.cs"];
m28_132 [label="Entry Newtonsoft.Json.Utilities.JsonTokenUtils.IsEndToken(Newtonsoft.Json.JsonToken)", span="32-32", cluster="Newtonsoft.Json.Utilities.JsonTokenUtils.IsEndToken(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_105 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="58-58", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonWriter.cs"];
m28_206 [label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="JsonWriter.cs"];
m28_347 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte)", span="1019-1019", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte)", file="JsonWriter.cs"];
m28_348 [label="InternalWriteValue(JsonToken.Integer)", span="1021-1021", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte)", file="JsonWriter.cs"];
m28_349 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(byte)", span="1019-1019", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte)", file="JsonWriter.cs"];
m28_106 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken, object)", span="508-508", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_107 [label="WriteTokenInternal(token, value)", span="510-510", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_108 [label="Exit Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken, object)", span="508-508", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_465 [label="Entry Newtonsoft.Json.JsonWriter.CreateUnsupportedTypeException(Newtonsoft.Json.JsonWriter, object)", span="1608-1608", cluster="Newtonsoft.Json.JsonWriter.CreateUnsupportedTypeException(Newtonsoft.Json.JsonWriter, object)", file="JsonWriter.cs"];
m28_575 [label="return JsonWriterException.Create(writer, ''Unsupported type: {0}. Use the JsonSerializer class to get the object's JSON representation.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()), null);", span="1610-1610", cluster="Newtonsoft.Json.JsonWriter.CreateUnsupportedTypeException(Newtonsoft.Json.JsonWriter, object)", file="JsonWriter.cs"];
m28_576 [label="Exit Newtonsoft.Json.JsonWriter.CreateUnsupportedTypeException(Newtonsoft.Json.JsonWriter, object)", span="1608-1608", cluster="Newtonsoft.Json.JsonWriter.CreateUnsupportedTypeException(Newtonsoft.Json.JsonWriter, object)", file="JsonWriter.cs"];
m28_195 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="945-945", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JsonWriter.cs"];
m28_327 [label="InternalWriteValue(JsonToken.Integer)", span="947-947", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JsonWriter.cs"];
m28_328 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(long)", span="945-945", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JsonWriter.cs"];
m28_305 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonWriter.cs"];
m28_329 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="955-955", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JsonWriter.cs"];
m28_330 [label="InternalWriteValue(JsonToken.Integer)", span="957-957", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JsonWriter.cs"];
m28_331 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="955-955", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JsonWriter.cs"];
m28_324 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint)", span="936-936", cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint)", file="JsonWriter.cs"];
m28_325 [label="InternalWriteValue(JsonToken.Integer)", span="938-938", cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint)", file="JsonWriter.cs"];
m28_326 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(uint)", span="936-936", cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint)", file="JsonWriter.cs"];
m28_475 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", span="1697-1697", cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="JsonWriter.cs"];
m28_627 [label="ws != null", span="1699-1699", cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="JsonWriter.cs"];
m28_628 [label="!StringUtils.IsWhiteSpace(ws)", span="1701-1701", cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="JsonWriter.cs"];
m28_629 [label="throw JsonWriterException.Create(this, ''Only white space characters should be used.'', null);", span="1703-1703", cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="JsonWriter.cs"];
m28_630 [label="Exit Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", span="1697-1697", cluster="Newtonsoft.Json.JsonWriter.InternalWriteWhitespace(string)", file="JsonWriter.cs"];
m28_194 [label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="JsonWriter.cs"];
m28_97 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="483-483", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_98 [label="WriteToken(reader, true, true, true)", span="485-485", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_99 [label="Exit Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="483-483", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_414 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte?)", span="1248-1248", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="JsonWriter.cs"];
m28_415 [label="value == null", span="1250-1250", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="JsonWriter.cs"];
m28_417 [label="WriteValue(value.Value)", span="1256-1256", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", color=green, community=0, file="JsonWriter.cs"];
m28_416 [label="WriteNull()", span="1252-1252", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="JsonWriter.cs"];
m28_418 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(byte?)", span="1248-1248", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="JsonWriter.cs"];
m28_631 [label="Entry Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", span="83-83", cluster="Newtonsoft.Json.Utilities.StringUtils.IsWhiteSpace(string)", file="JsonWriter.cs"];
m28_56 [label="Entry Newtonsoft.Json.JsonPosition.JsonPosition()", span="41-41", cluster="Newtonsoft.Json.JsonPosition.JsonPosition()", file="JsonWriter.cs"];
m28_424 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", span="1281-1281", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="JsonWriter.cs"];
m28_425 [label="value == null", span="1283-1283", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="JsonWriter.cs"];
m28_427 [label="WriteValue(value.Value)", span="1289-1289", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", color=green, community=0, file="JsonWriter.cs"];
m28_426 [label="WriteNull()", span="1285-1285", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="JsonWriter.cs"];
m28_428 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", span="1281-1281", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="JsonWriter.cs"];
m28_55 [label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="JsonWriter.cs"];
m28_96 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonContainerType)", span="702-702", cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_226 [label=type, span="704-704", cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_233 [label="throw JsonWriterException.Create(this, ''Unexpected type when writing end: '' + type, null);", span="716-716", cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_227 [label="JsonContainerType.Object", span="706-706", cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_229 [label="JsonContainerType.Array", span="709-709", cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_231 [label="JsonContainerType.Constructor", span="712-712", cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_228 [label="WriteEndObject()", span="707-707", cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_230 [label="WriteEndArray()", span="710-710", cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_232 [label="WriteEndConstructor()", span="713-713", cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_234 [label="Exit Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonContainerType)", span="702-702", cluster="Newtonsoft.Json.JsonWriter.WriteEnd(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_205 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="1057-1057", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="JsonWriter.cs"];
m28_357 [label="InternalWriteValue(JsonToken.Date)", span="1059-1059", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="JsonWriter.cs"];
m28_358 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", span="1057-1057", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset)", file="JsonWriter.cs"];
m28_199 [label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="JsonWriter.cs"];
m28_308 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", span="1691-1691", cluster="Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_624 [label="UpdateScopeWithFinishedValue()", span="1693-1693", cluster="Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_625 [label="AutoComplete(token)", span="1694-1694", cluster="Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_626 [label="Exit Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", span="1691-1691", cluster="Newtonsoft.Json.JsonWriter.InternalWriteValue(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_612 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JsonWriter.cs"];
m28_201 [label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JsonWriter.cs"];
m28_611 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="JsonWriter.cs"];
m28_110 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken)", span="517-517", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_111 [label="WriteTokenInternal(token, null)", span="519-519", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_112 [label="Exit Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken)", span="517-517", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_203 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="879-879", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonWriter.cs"];
m28_306 [label="InternalWriteValue(JsonToken.Null)", span="881-881", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonWriter.cs"];
m28_307 [label="Exit Newtonsoft.Json.JsonWriter.WriteNull()", span="879-879", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonWriter.cs"];
m28_394 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="1183-1183", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="JsonWriter.cs"];
m28_395 [label="value == null", span="1185-1185", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="JsonWriter.cs"];
m28_397 [label="WriteValue(value.Value)", span="1191-1191", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", color=green, community=0, file="JsonWriter.cs"];
m28_396 [label="WriteNull()", span="1187-1187", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="JsonWriter.cs"];
m28_398 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="1183-1183", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="JsonWriter.cs"];
m28_193 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="JsonWriter.cs"];
m28_374 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long?)", span="1118-1118", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="JsonWriter.cs"];
m28_375 [label="value == null", span="1120-1120", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="JsonWriter.cs"];
m28_377 [label="WriteValue(value.Value)", span="1126-1126", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", color=green, community=0, file="JsonWriter.cs"];
m28_376 [label="WriteNull()", span="1122-1122", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="JsonWriter.cs"];
m28_378 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(long?)", span="1118-1118", cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="JsonWriter.cs"];
m28_479 [label="Entry Newtonsoft.Json.JsonWriter.Dispose(bool)", span="1441-1441", cluster="Newtonsoft.Json.JsonWriter.Dispose(bool)", file="JsonWriter.cs"];
m28_480 [label="_currentState != State.Closed && disposing", span="1443-1443", cluster="Newtonsoft.Json.JsonWriter.Dispose(bool)", color=green, community=0, file="JsonWriter.cs"];
m28_481 [label="Close()", span="1445-1445", cluster="Newtonsoft.Json.JsonWriter.Dispose(bool)", file="JsonWriter.cs", color=green, community=0];
m28_482 [label="Exit Newtonsoft.Json.JsonWriter.Dispose(bool)", span="1441-1441", cluster="Newtonsoft.Json.JsonWriter.Dispose(bool)", file="JsonWriter.cs"];
m28_101 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", span="493-493", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", file="JsonWriter.cs"];
m28_102 [label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="495-495", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", file="JsonWriter.cs"];
m28_103 [label="WriteToken(reader, writeChildren, true, true)", span="497-497", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", file="JsonWriter.cs"];
m28_104 [label="Exit Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", span="493-493", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", file="JsonWriter.cs"];
m28_83 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="447-447", cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JsonWriter.cs"];
m28_84 [label="InternalWriteEnd(JsonContainerType.Constructor)", span="449-449", cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JsonWriter.cs"];
m28_85 [label="Exit Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="447-447", cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JsonWriter.cs"];
m28_384 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float?)", span="1151-1151", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="JsonWriter.cs"];
m28_385 [label="value == null", span="1153-1153", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="JsonWriter.cs"];
m28_387 [label="WriteValue(value.Value)", span="1159-1159", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", color=green, community=0, file="JsonWriter.cs"];
m28_386 [label="WriteNull()", span="1155-1155", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="JsonWriter.cs"];
m28_388 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(float?)", span="1151-1151", cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="JsonWriter.cs"];
m28_468 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", span="1449-1449", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_483 [label=typeCode, span="1451-1451", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_485 [label="writer.WriteValue((char)value)", span="1454-1454", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_487 [label="writer.WriteValue((value == null) ? (char?)null : (char)value)", span="1457-1457", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_489 [label="writer.WriteValue((bool)value)", span="1460-1460", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_491 [label="writer.WriteValue((value == null) ? (bool?)null : (bool)value)", span="1463-1463", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_493 [label="writer.WriteValue((sbyte)value)", span="1466-1466", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_495 [label="writer.WriteValue((value == null) ? (sbyte?)null : (sbyte)value)", span="1469-1469", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_497 [label="writer.WriteValue((short)value)", span="1472-1472", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_499 [label="writer.WriteValue((value == null) ? (short?)null : (short)value)", span="1475-1475", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_501 [label="writer.WriteValue((ushort)value)", span="1478-1478", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_503 [label="writer.WriteValue((value == null) ? (ushort?)null : (ushort)value)", span="1481-1481", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_505 [label="writer.WriteValue((int)value)", span="1484-1484", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_507 [label="writer.WriteValue((value == null) ? (int?)null : (int)value)", span="1487-1487", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_509 [label="writer.WriteValue((byte)value)", span="1490-1490", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_511 [label="writer.WriteValue((value == null) ? (byte?)null : (byte)value)", span="1493-1493", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_513 [label="writer.WriteValue((uint)value)", span="1496-1496", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_515 [label="writer.WriteValue((value == null) ? (uint?)null : (uint)value)", span="1499-1499", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_517 [label="writer.WriteValue((long)value)", span="1502-1502", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_519 [label="writer.WriteValue((value == null) ? (long?)null : (long)value)", span="1505-1505", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_521 [label="writer.WriteValue((ulong)value)", span="1508-1508", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_523 [label="writer.WriteValue((value == null) ? (ulong?)null : (ulong)value)", span="1511-1511", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_525 [label="writer.WriteValue((float)value)", span="1514-1514", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_527 [label="writer.WriteValue((value == null) ? (float?)null : (float)value)", span="1517-1517", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_529 [label="writer.WriteValue((double)value)", span="1520-1520", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_531 [label="writer.WriteValue((value == null) ? (double?)null : (double)value)", span="1523-1523", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_533 [label="writer.WriteValue((DateTime)value)", span="1526-1526", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_535 [label="writer.WriteValue((value == null) ? (DateTime?)null : (DateTime)value)", span="1529-1529", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_537 [label="writer.WriteValue((DateTimeOffset)value)", span="1533-1533", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_539 [label="writer.WriteValue((value == null) ? (DateTimeOffset?)null : (DateTimeOffset)value)", span="1536-1536", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_541 [label="writer.WriteValue((decimal)value)", span="1540-1540", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_543 [label="writer.WriteValue((value == null) ? (decimal?)null : (decimal)value)", span="1543-1543", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_545 [label="writer.WriteValue((Guid)value)", span="1546-1546", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_547 [label="writer.WriteValue((value == null) ? (Guid?)null : (Guid)value)", span="1549-1549", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_549 [label="writer.WriteValue((TimeSpan)value)", span="1552-1552", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_551 [label="writer.WriteValue((value == null) ? (TimeSpan?)null : (TimeSpan)value)", span="1555-1555", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_553 [label="writer.WriteValue((BigInteger)value)", span="1560-1560", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_555 [label="writer.WriteValue((value == null) ? (BigInteger?)null : (BigInteger)value)", span="1564-1564", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_557 [label="writer.WriteValue((Uri)value)", span="1568-1568", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_559 [label="writer.WriteValue((string)value)", span="1571-1571", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_561 [label="writer.WriteValue((byte[])value)", span="1574-1574", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_563 [label="writer.WriteNull()", span="1578-1578", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_564 [label="value is IConvertible", span="1583-1583", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_565 [label="IConvertible convertable = (IConvertible)value", span="1587-1587", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_570 [label="WriteValue(writer, resolvedTypeCode, convertedValue)", span="1597-1597", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_571 [label="throw CreateUnsupportedTypeException(writer, value);", span="1603-1603", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_484 [label="PrimitiveTypeCode.Char", span="1453-1453", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_486 [label="PrimitiveTypeCode.CharNullable", span="1456-1456", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_488 [label="PrimitiveTypeCode.Boolean", span="1459-1459", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_490 [label="PrimitiveTypeCode.BooleanNullable", span="1462-1462", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_492 [label="PrimitiveTypeCode.SByte", span="1465-1465", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_494 [label="PrimitiveTypeCode.SByteNullable", span="1468-1468", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_496 [label="PrimitiveTypeCode.Int16", span="1471-1471", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_498 [label="PrimitiveTypeCode.Int16Nullable", span="1474-1474", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_500 [label="PrimitiveTypeCode.UInt16", span="1477-1477", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_502 [label="PrimitiveTypeCode.UInt16Nullable", span="1480-1480", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_504 [label="PrimitiveTypeCode.Int32", span="1483-1483", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_506 [label="PrimitiveTypeCode.Int32Nullable", span="1486-1486", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_508 [label="PrimitiveTypeCode.Byte", span="1489-1489", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_510 [label="PrimitiveTypeCode.ByteNullable", span="1492-1492", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_512 [label="PrimitiveTypeCode.UInt32", span="1495-1495", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_514 [label="PrimitiveTypeCode.UInt32Nullable", span="1498-1498", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_516 [label="PrimitiveTypeCode.Int64", span="1501-1501", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_518 [label="PrimitiveTypeCode.Int64Nullable", span="1504-1504", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_520 [label="PrimitiveTypeCode.UInt64", span="1507-1507", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_522 [label="PrimitiveTypeCode.UInt64Nullable", span="1510-1510", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_524 [label="PrimitiveTypeCode.Single", span="1513-1513", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_526 [label="PrimitiveTypeCode.SingleNullable", span="1516-1516", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_528 [label="PrimitiveTypeCode.Double", span="1519-1519", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_530 [label="PrimitiveTypeCode.DoubleNullable", span="1522-1522", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_532 [label="PrimitiveTypeCode.DateTime", span="1525-1525", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_534 [label="PrimitiveTypeCode.DateTimeNullable", span="1528-1528", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_536 [label="PrimitiveTypeCode.DateTimeOffset", span="1532-1532", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_538 [label="PrimitiveTypeCode.DateTimeOffsetNullable", span="1535-1535", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_540 [label="PrimitiveTypeCode.Decimal", span="1539-1539", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_542 [label="PrimitiveTypeCode.DecimalNullable", span="1542-1542", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_544 [label="PrimitiveTypeCode.Guid", span="1545-1545", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_546 [label="PrimitiveTypeCode.GuidNullable", span="1548-1548", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_548 [label="PrimitiveTypeCode.TimeSpan", span="1551-1551", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_550 [label="PrimitiveTypeCode.TimeSpanNullable", span="1554-1554", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_552 [label="PrimitiveTypeCode.BigInteger", span="1558-1558", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_554 [label="PrimitiveTypeCode.BigIntegerNullable", span="1562-1562", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_556 [label="PrimitiveTypeCode.Uri", span="1567-1567", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_558 [label="PrimitiveTypeCode.String", span="1570-1570", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_560 [label="PrimitiveTypeCode.Bytes", span="1573-1573", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_562 [label="PrimitiveTypeCode.DBNull", span="1577-1577", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_566 [label="TypeInformation typeInformation = ConvertUtils.GetTypeInformation(convertable)", span="1589-1589", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_569 [label="object convertedValue = convertable.ToType(resolvedType, CultureInfo.InvariantCulture)", span="1595-1595", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_567 [label="PrimitiveTypeCode resolvedTypeCode = (typeInformation.TypeCode == PrimitiveTypeCode.Object) ? PrimitiveTypeCode.String : typeInformation.TypeCode", span="1592-1592", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_568 [label="Type resolvedType = (typeInformation.TypeCode == PrimitiveTypeCode.Object) ? typeof(string) : typeInformation.Type", span="1593-1593", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_572 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", span="1449-1449", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="JsonWriter.cs"];
m28_202 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="982-982", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonWriter.cs"];
m28_336 [label="InternalWriteValue(JsonToken.Boolean)", span="984-984", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonWriter.cs"];
m28_337 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="982-982", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonWriter.cs"];
m28_409 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char?)", span="1232-1232", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="JsonWriter.cs"];
m28_410 [label="value == null", span="1234-1234", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="JsonWriter.cs"];
m28_412 [label="WriteValue(value.Value)", span="1240-1240", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", color=green, community=0, file="JsonWriter.cs"];
m28_411 [label="WriteNull()", span="1236-1236", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="JsonWriter.cs"];
m28_413 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(char?)", span="1232-1232", cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="JsonWriter.cs"];
m28_26 [label="Entry Newtonsoft.Json.JsonWriter.OnStringEscapeHandlingChanged()", span="291-291", cluster="Newtonsoft.Json.JsonWriter.OnStringEscapeHandlingChanged()", file="JsonWriter.cs"];
m28_27 [label="Exit Newtonsoft.Json.JsonWriter.OnStringEscapeHandlingChanged()", span="291-291", cluster="Newtonsoft.Json.JsonWriter.OnStringEscapeHandlingChanged()", file="JsonWriter.cs"];
m28_93 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="474-474", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonWriter.cs"];
m28_94 [label="WriteEnd(Peek())", span="476-476", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonWriter.cs"];
m28_95 [label="Exit Newtonsoft.Json.JsonWriter.WriteEnd()", span="474-474", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonWriter.cs"];
m28_122 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool, bool)", span="542-542", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool, bool)", file="JsonWriter.cs"];
m28_123 [label="writeDateConstructorAsDate && reader.TokenType == JsonToken.StartConstructor && string.Equals(reader.Value.ToString(), ''Date'', StringComparison.Ordinal)", span="547-547", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool, bool)", file="JsonWriter.cs"];
m28_124 [label="WriteConstructorDate(reader)", span="549-549", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool, bool)", file="JsonWriter.cs"];
m28_125 [label="reader.TokenType != JsonToken.Comment || writeComments", span="553-553", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool, bool)", file="JsonWriter.cs"];
m28_126 [label="WriteTokenInternal(reader.TokenType, reader.Value)", span="555-555", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool, bool)", file="JsonWriter.cs"];
m28_127 [label="initialDepth - 1 < reader.Depth - (JsonTokenUtils.IsEndToken(reader.TokenType) ? 1 : 0)\r\n                && writeChildren\r\n                && reader.Read()", span="560-562", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool, bool)", file="JsonWriter.cs"];
m28_128 [label="Exit Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool, bool)", span="542-542", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int, bool, bool, bool)", file="JsonWriter.cs"];
m28_578 [label="Entry Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", span="1618-1618", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_579 [label=token, span="1620-1620", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_581 [label="InternalWriteStart(token, JsonContainerType.Object)", span="1623-1623", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_583 [label="InternalWriteStart(token, JsonContainerType.Array)", span="1626-1626", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_585 [label="InternalWriteStart(token, JsonContainerType.Constructor)", span="1629-1629", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_587 [label="!(value is string)", span="1632-1632", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_588 [label="throw new ArgumentException(''A name is required when setting property name state.'', nameof(value));", span="1634-1634", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_589 [label="InternalWritePropertyName((string)value)", span="1637-1637", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_602 [label="InternalWriteValue(token)", span="1653-1653", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_609 [label="throw new ArgumentOutOfRangeException(nameof(token));", span="1665-1665", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_580 [label="JsonToken.StartObject", span="1622-1622", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_582 [label="JsonToken.StartArray", span="1625-1625", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_584 [label="JsonToken.StartConstructor", span="1628-1628", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_586 [label="JsonToken.PropertyName", span="1631-1631", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_590 [label="JsonToken.Comment", span="1639-1639", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_592 [label="JsonToken.Raw", span="1642-1642", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_594 [label="JsonToken.Integer", span="1645-1645", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_603 [label="JsonToken.EndObject", span="1655-1655", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_605 [label="JsonToken.EndArray", span="1658-1658", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_607 [label="JsonToken.EndConstructor", span="1661-1661", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_591 [label="InternalWriteComment()", span="1640-1640", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_593 [label="InternalWriteRaw()", span="1643-1643", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_595 [label="JsonToken.Float", span="1646-1646", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_596 [label="JsonToken.String", span="1647-1647", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_597 [label="JsonToken.Boolean", span="1648-1648", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_598 [label="JsonToken.Date", span="1649-1649", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_599 [label="JsonToken.Bytes", span="1650-1650", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_600 [label="JsonToken.Null", span="1651-1651", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_601 [label="JsonToken.Undefined", span="1652-1652", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_604 [label="InternalWriteEnd(JsonContainerType.Object)", span="1656-1656", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_606 [label="InternalWriteEnd(JsonContainerType.Array)", span="1659-1659", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_608 [label="InternalWriteEnd(JsonContainerType.Constructor)", span="1662-1662", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_610 [label="Exit Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", span="1618-1618", cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_90 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", span="466-466", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", file="JsonWriter.cs"];
m28_91 [label="WritePropertyName(name)", span="468-468", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", file="JsonWriter.cs"];
m28_92 [label="Exit Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", span="466-466", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", file="JsonWriter.cs"];
m28_133 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonWriter.cs"];
m28_364 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="1085-1085", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="JsonWriter.cs"];
m28_365 [label="value == null", span="1087-1087", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="JsonWriter.cs"];
m28_367 [label="WriteValue(value.Value)", span="1093-1093", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", color=green, community=0, file="JsonWriter.cs"];
m28_366 [label="WriteNull()", span="1089-1089", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="JsonWriter.cs"];
m28_368 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="1085-1085", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="JsonWriter.cs"];
m28_209 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", span="1067-1067", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", file="JsonWriter.cs"];
m28_359 [label="InternalWriteValue(JsonToken.String)", span="1069-1069", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", file="JsonWriter.cs"];
m28_360 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", span="1067-1067", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid)", file="JsonWriter.cs"];
m28_211 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", span="75-75", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.CreateArgumentOutOfRangeException(string, object, string)", file="JsonWriter.cs"];
m28_404 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="1216-1216", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="JsonWriter.cs"];
m28_405 [label="value == null", span="1218-1218", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="JsonWriter.cs"];
m28_407 [label="WriteValue(value.Value)", span="1224-1224", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", color=green, community=0, file="JsonWriter.cs"];
m28_406 [label="WriteNull()", span="1220-1220", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="JsonWriter.cs"];
m28_408 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="1216-1216", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="JsonWriter.cs"];
m28_21 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonWriter.cs"];
m28_204 [label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="887-887", cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JsonWriter.cs"];
m28_309 [label="InternalWriteValue(JsonToken.Undefined)", span="889-889", cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JsonWriter.cs"];
m28_310 [label="Exit Newtonsoft.Json.JsonWriter.WriteUndefined()", span="887-887", cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JsonWriter.cs"];
m28_192 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1422-1422", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonWriter.cs"];
m28_469 [label="InternalWriteComment()", span="1424-1424", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonWriter.cs"];
m28_470 [label="Exit Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1422-1422", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonWriter.cs"];
m28_200 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="917-917", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonWriter.cs"];
m28_319 [label="InternalWriteValue(JsonToken.String)", span="919-919", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonWriter.cs"];
m28_320 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(string)", span="917-917", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonWriter.cs"];
m28_210 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1363-1363", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JsonWriter.cs"];
m28_449 [label="value == null", span="1365-1365", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JsonWriter.cs"];
m28_450 [label="WriteNull()", span="1367-1367", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JsonWriter.cs"];
m28_451 [label="InternalWriteValue(JsonToken.Bytes)", span="1371-1371", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JsonWriter.cs"];
m28_452 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(byte[])", span="1363-1363", cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte[])", file="JsonWriter.cs"];
m28_207 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="1047-1047", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JsonWriter.cs"];
m28_355 [label="InternalWriteValue(JsonToken.Date)", span="1049-1049", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JsonWriter.cs"];
m28_356 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", span="1047-1047", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime)", file="JsonWriter.cs"];
m28_86 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="456-456", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonWriter.cs"];
m28_87 [label="InternalWritePropertyName(name)", span="458-458", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonWriter.cs"];
m28_88 [label="Exit Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="456-456", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonWriter.cs"];
m28_89 [label="Entry Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", span="1674-1674", cluster="Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", file="JsonWriter.cs"];
m28_616 [label="_currentPosition.PropertyName = name", span="1676-1676", cluster="Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", file="JsonWriter.cs"];
m28_617 [label="AutoComplete(JsonToken.PropertyName)", span="1677-1677", cluster="Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", file="JsonWriter.cs"];
m28_618 [label="Exit Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", span="1674-1674", cluster="Newtonsoft.Json.JsonWriter.InternalWritePropertyName(string)", file="JsonWriter.cs"];
m28_77 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="430-430", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonWriter.cs"];
m28_78 [label="InternalWriteEnd(JsonContainerType.Array)", span="432-432", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonWriter.cs"];
m28_79 [label="Exit Newtonsoft.Json.JsonWriter.WriteEndArray()", span="430-430", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonWriter.cs"];
m28_341 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort)", span="1001-1001", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort)", file="JsonWriter.cs"];
m28_342 [label="InternalWriteValue(JsonToken.Integer)", span="1003-1003", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort)", file="JsonWriter.cs"];
m28_343 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(ushort)", span="1001-1001", cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort)", file="JsonWriter.cs"];
m28_361 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", span="1076-1076", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", file="JsonWriter.cs"];
m28_362 [label="InternalWriteValue(JsonToken.String)", span="1078-1078", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", file="JsonWriter.cs"];
m28_363 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", span="1076-1076", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan)", file="JsonWriter.cs"];
m28_311 [label="Entry Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="896-896", cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="JsonWriter.cs"];
m28_312 [label="InternalWriteRaw()", span="898-898", cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="JsonWriter.cs"];
m28_313 [label="Exit Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="896-896", cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="JsonWriter.cs"];
m28_429 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", span="1297-1297", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="JsonWriter.cs"];
m28_430 [label="value == null", span="1299-1299", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="JsonWriter.cs"];
m28_432 [label="WriteValue(value.Value)", span="1305-1305", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", color=green, community=0, file="JsonWriter.cs"];
m28_431 [label="WriteNull()", span="1301-1301", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="JsonWriter.cs"];
m28_433 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", span="1297-1297", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="JsonWriter.cs"];
m28_73 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteEnd(Newtonsoft.Json.JsonContainerType)", span="1669-1669", cluster="Newtonsoft.Json.JsonWriter.InternalWriteEnd(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_614 [label="AutoCompleteClose(container)", span="1671-1671", cluster="Newtonsoft.Json.JsonWriter.InternalWriteEnd(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_615 [label="Exit Newtonsoft.Json.JsonWriter.InternalWriteEnd(Newtonsoft.Json.JsonContainerType)", span="1669-1669", cluster="Newtonsoft.Json.JsonWriter.InternalWriteEnd(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_466 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonWriter.cs"];
m28_20 [label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="150-150", cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="JsonWriter.cs"];
m28_65 [label="Entry Newtonsoft.Json.JsonWriter.AutoCompleteAll()", span="720-720", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteAll()", file="JsonWriter.cs"];
m28_235 [label="Top > 0", span="722-722", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteAll()", file="JsonWriter.cs"];
m28_236 [label="WriteEnd()", span="724-724", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteAll()", file="JsonWriter.cs"];
m28_237 [label="Exit Newtonsoft.Json.JsonWriter.AutoCompleteAll()", span="720-720", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteAll()", file="JsonWriter.cs"];
m28_19 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonWriter.cs"];
m28_66 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonWriter.cs"];
m28_67 [label="InternalWriteStart(JsonToken.StartObject, JsonContainerType.Object)", span="408-408", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonWriter.cs"];
m28_68 [label="Exit Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonWriter.cs"];
m28_444 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", span="1347-1347", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="JsonWriter.cs"];
m28_445 [label="value == null", span="1349-1349", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="JsonWriter.cs"];
m28_447 [label="WriteValue(value.Value)", span="1355-1355", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", color=green, community=0, file="JsonWriter.cs"];
m28_446 [label="WriteNull()", span="1351-1351", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="JsonWriter.cs"];
m28_448 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", span="1347-1347", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.TimeSpan?)", file="JsonWriter.cs"];
m28_283 [label="Entry Newtonsoft.Json.JsonWriter.WriteIndent()", span="824-824", cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="JsonWriter.cs"];
m28_286 [label="Exit Newtonsoft.Json.JsonWriter.WriteIndent()", span="824-824", cluster="Newtonsoft.Json.JsonWriter.WriteIndent()", file="JsonWriter.cs"];
m28_471 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteComment()", span="1708-1708", cluster="Newtonsoft.Json.JsonWriter.InternalWriteComment()", file="JsonWriter.cs"];
m28_632 [label="AutoComplete(JsonToken.Comment)", span="1710-1710", cluster="Newtonsoft.Json.JsonWriter.InternalWriteComment()", file="JsonWriter.cs"];
m28_633 [label="Exit Newtonsoft.Json.JsonWriter.InternalWriteComment()", span="1708-1708", cluster="Newtonsoft.Json.JsonWriter.InternalWriteComment()", file="JsonWriter.cs"];
m28_34 [label="Entry Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", span="345-345", cluster="Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", file="JsonWriter.cs"];
m28_35 [label="_currentPosition.HasIndex", span="347-347", cluster="Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", file="JsonWriter.cs"];
m28_36 [label="_currentPosition.Position++", span="349-349", cluster="Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", file="JsonWriter.cs"];
m28_37 [label="Exit Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", span="345-345", cluster="Newtonsoft.Json.JsonWriter.UpdateScopeWithFinishedValue()", file="JsonWriter.cs"];
m28_439 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1331-1331", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="JsonWriter.cs"];
m28_440 [label="value == null", span="1333-1333", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="JsonWriter.cs"];
m28_442 [label="WriteValue(value.Value)", span="1339-1339", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", color=green, community=0, file="JsonWriter.cs"];
m28_441 [label="WriteNull()", span="1335-1335", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="JsonWriter.cs"];
m28_443 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1331-1331", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="JsonWriter.cs"];
m28_45 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonWriter.cs"];
m28_74 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="422-422", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonWriter.cs"];
m28_75 [label="InternalWriteStart(JsonToken.StartArray, JsonContainerType.Array)", span="424-424", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonWriter.cs"];
m28_76 [label="Exit Newtonsoft.Json.JsonWriter.WriteStartArray()", span="422-422", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonWriter.cs"];
m28_389 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="1167-1167", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="JsonWriter.cs"];
m28_390 [label="value == null", span="1169-1169", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="JsonWriter.cs"];
m28_392 [label="WriteValue(value.Value)", span="1175-1175", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", color=green, community=0, file="JsonWriter.cs"];
m28_391 [label="WriteNull()", span="1171-1171", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="JsonWriter.cs"];
m28_393 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="1167-1167", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="JsonWriter.cs"];
m28_304 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="JsonWriter.cs"];
m28_289 [label="Entry Newtonsoft.Json.JsonWriter.WriteIndentSpace()", span="838-838", cluster="Newtonsoft.Json.JsonWriter.WriteIndentSpace()", file="JsonWriter.cs"];
m28_290 [label="Exit Newtonsoft.Json.JsonWriter.WriteIndentSpace()", span="838-838", cluster="Newtonsoft.Json.JsonWriter.WriteIndentSpace()", file="JsonWriter.cs"];
m28_131 [label="Entry Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", span="676-676", cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_212 [label="!reader.Read()", span="678-678", cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_214 [label="reader.TokenType != JsonToken.Integer", span="682-682", cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_215 [label="throw JsonWriterException.Create(this, ''Unexpected token when reading date constructor. Expected Integer, got '' + reader.TokenType, null);", span="684-684", cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_216 [label="long ticks = (long)reader.Value", span="687-687", cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_218 [label="!reader.Read()", span="690-690", cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_220 [label="reader.TokenType != JsonToken.EndConstructor", span="694-694", cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_221 [label="throw JsonWriterException.Create(this, ''Unexpected token when reading date constructor. Expected EndConstructor, got '' + reader.TokenType, null);", span="696-696", cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_213 [label="throw JsonWriterException.Create(this, ''Unexpected end when reading date constructor.'', null);", span="680-680", cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_217 [label="DateTime date = DateTimeUtils.ConvertJavaScriptTicksToDateTime(ticks)", span="688-688", cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_222 [label="WriteValue(date)", span="699-699", cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_219 [label="throw JsonWriterException.Create(this, ''Unexpected end when reading date constructor.'', null);", span="692-692", cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_223 [label="Exit Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", span="676-676", cluster="Newtonsoft.Json.JsonWriter.WriteConstructorDate(Newtonsoft.Json.JsonReader)", file="JsonWriter.cs"];
m28_574 [label="Entry System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="0-0", cluster="System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonWriter.cs"];
m28_287 [label="Entry Newtonsoft.Json.JsonWriter.WriteValueDelimiter()", span="831-831", cluster="Newtonsoft.Json.JsonWriter.WriteValueDelimiter()", file="JsonWriter.cs"];
m28_288 [label="Exit Newtonsoft.Json.JsonWriter.WriteValueDelimiter()", span="831-831", cluster="Newtonsoft.Json.JsonWriter.WriteValueDelimiter()", file="JsonWriter.cs"];
m28_350 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", span="1029-1029", cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", file="JsonWriter.cs"];
m28_351 [label="InternalWriteValue(JsonToken.Integer)", span="1031-1031", cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", file="JsonWriter.cs"];
m28_352 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", span="1029-1029", cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte)", file="JsonWriter.cs"];
m28_248 [label="Entry Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", span="743-743", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_249 [label="int levelsToComplete = 0", span="746-746", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_250 [label="_currentPosition.Type == type", span="748-748", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_256 [label="_stack[currentLevel].Type == type", span="759-759", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_259 [label="levelsToComplete == 0", span="767-767", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_262 [label="i < levelsToComplete", span="772-772", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_251 [label="levelsToComplete = 1", span="750-750", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_252 [label="int top = Top - 2", span="754-754", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_253 [label="int i = top", span="755-755", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_255 [label="int currentLevel = top - i", span="757-757", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_254 [label="i >= 0", span="755-755", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_257 [label="levelsToComplete = i + 2", span="761-761", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_258 [label="i--", span="755-755", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_260 [label="throw JsonWriterException.Create(this, ''No token to close.'', null);", span="769-769", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_261 [label="int i = 0", span="772-772", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_281 [label="i++", span="772-772", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_263 [label="JsonToken token = GetCloseTokenForType(Pop())", span="774-774", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_264 [label="_currentState == State.Property", span="776-776", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_269 [label="WriteEnd(token)", span="789-789", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_265 [label="WriteNull()", span="778-778", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_266 [label="_formatting == Formatting.Indented", span="781-781", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_267 [label="_currentState != State.ObjectStart && _currentState != State.ArrayStart", span="783-783", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_268 [label="WriteIndent()", span="785-785", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_270 [label="JsonContainerType currentLevelType = Peek()", span="791-791", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_271 [label=currentLevelType, span="793-793", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_280 [label="throw JsonWriterException.Create(this, ''Unknown JsonType: '' + currentLevelType, null);", span="808-808", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_272 [label="JsonContainerType.Object", span="795-795", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_274 [label="JsonContainerType.Array", span="798-798", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_276 [label="JsonContainerType.Constructor", span="801-801", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_278 [label="JsonContainerType.None", span="804-804", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_273 [label="_currentState = State.Object", span="796-796", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_275 [label="_currentState = State.Array", span="799-799", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_277 [label="_currentState = State.Array", span="802-802", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_279 [label="_currentState = State.Start", span="805-805", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_282 [label="Exit Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", span="743-743", cluster="Newtonsoft.Json.JsonWriter.AutoCompleteClose(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_100 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", span="522-522", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", file="JsonWriter.cs"];
m28_113 [label="int initialDepth", span="524-524", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", file="JsonWriter.cs"];
m28_114 [label="reader.TokenType == JsonToken.None", span="526-526", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", file="JsonWriter.cs"];
m28_116 [label="!JsonTokenUtils.IsStartToken(reader.TokenType)", span="530-530", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", file="JsonWriter.cs"];
m28_117 [label="initialDepth = reader.Depth + 1", span="532-532", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", file="JsonWriter.cs"];
m28_118 [label="initialDepth = reader.Depth", span="536-536", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", file="JsonWriter.cs"];
m28_119 [label="WriteToken(reader, initialDepth, writeChildren, writeDateConstructorAsDate, writeComments)", span="539-539", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", file="JsonWriter.cs"];
m28_115 [label="initialDepth = -1", span="528-528", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", file="JsonWriter.cs"];
m28_120 [label="Exit Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", span="522-522", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool, bool)", file="JsonWriter.cs"];
m28_80 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="439-439", cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JsonWriter.cs"];
m28_81 [label="InternalWriteStart(JsonToken.StartConstructor, JsonContainerType.Constructor)", span="441-441", cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JsonWriter.cs"];
m28_82 [label="Exit Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="439-439", cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JsonWriter.cs"];
m28_70 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonWriter.cs"];
m28_71 [label="InternalWriteEnd(JsonContainerType.Object)", span="416-416", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonWriter.cs"];
m28_72 [label="Exit Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonWriter.cs"];
m28_369 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="1102-1102", cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="JsonWriter.cs"];
m28_370 [label="value == null", span="1104-1104", cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="JsonWriter.cs"];
m28_372 [label="WriteValue(value.Value)", span="1110-1110", cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", color=green, community=0, file="JsonWriter.cs"];
m28_371 [label="WriteNull()", span="1106-1106", cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="JsonWriter.cs"];
m28_373 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="1102-1102", cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="JsonWriter.cs"];
m28_28 [label="Entry Newtonsoft.Json.JsonWriter.JsonWriter()", span="336-336", cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="JsonWriter.cs"];
m28_23 [label="Entry Newtonsoft.Json.JsonWriter.JsonWriter()", span="110-110", cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="JsonWriter.cs"];
m28_24 [label="StateArray = BuildStateArray()", span="112-112", cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="JsonWriter.cs"];
m28_25 [label="Exit Newtonsoft.Json.JsonWriter.JsonWriter()", span="110-110", cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="JsonWriter.cs"];
m28_29 [label="_currentState = State.Start", span="338-338", cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="JsonWriter.cs"];
m28_30 [label="_formatting = Formatting.None", span="339-339", cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="JsonWriter.cs"];
m28_31 [label="_dateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind", span="340-340", cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="JsonWriter.cs"];
m28_32 [label="CloseOutput = true", span="342-342", cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="JsonWriter.cs"];
m28_33 [label="Exit Newtonsoft.Json.JsonWriter.JsonWriter()", span="336-336", cluster="Newtonsoft.Json.JsonWriter.JsonWriter()", file="JsonWriter.cs"];
m28_291 [label="Entry Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", span="842-842", cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_292 [label="State newState = StateArray[(int)tokenBeingWritten][(int)_currentState]", span="845-845", cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_294 [label="throw JsonWriterException.Create(this, ''Token {0} in state {1} would result in an invalid JSON object.''.FormatWith(CultureInfo.InvariantCulture, tokenBeingWritten.ToString(), _currentState.ToString()), null);", span="849-849", cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_295 [label="(_currentState == State.Object || _currentState == State.Array || _currentState == State.Constructor) && tokenBeingWritten != JsonToken.Comment", span="852-852", cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_300 [label="(_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.Constructor || _currentState == State.ConstructorStart)\r\n                    || (tokenBeingWritten == JsonToken.PropertyName && _currentState != State.Start)", span="865-866", cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_293 [label="newState == State.Error", span="847-847", cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_302 [label="_currentState = newState", span="872-872", cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_296 [label="WriteValueDelimiter()", span="854-854", cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_297 [label="_formatting == Formatting.Indented", span="857-857", cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_298 [label="_currentState == State.Property", span="859-859", cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_299 [label="WriteIndentSpace()", span="861-861", cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_301 [label="WriteIndent()", span="868-868", cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_303 [label="Exit Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", span="842-842", cluster="Newtonsoft.Json.JsonWriter.AutoComplete(Newtonsoft.Json.JsonToken)", file="JsonWriter.cs"];
m28_338 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short)", span="991-991", cluster="Newtonsoft.Json.JsonWriter.WriteValue(short)", file="JsonWriter.cs"];
m28_339 [label="InternalWriteValue(JsonToken.Integer)", span="993-993", cluster="Newtonsoft.Json.JsonWriter.WriteValue(short)", file="JsonWriter.cs"];
m28_340 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(short)", span="991-991", cluster="Newtonsoft.Json.JsonWriter.WriteValue(short)", file="JsonWriter.cs"];
m28_57 [label="Entry Newtonsoft.Json.JsonWriter.Peek()", span="385-385", cluster="Newtonsoft.Json.JsonWriter.Peek()", file="JsonWriter.cs"];
m28_58 [label="return _currentPosition.Type;", span="387-387", cluster="Newtonsoft.Json.JsonWriter.Peek()", file="JsonWriter.cs"];
m28_59 [label="Exit Newtonsoft.Json.JsonWriter.Peek()", span="385-385", cluster="Newtonsoft.Json.JsonWriter.Peek()", file="JsonWriter.cs"];
m28_109 [label="Entry Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", span="565-565", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_134 [label=tokenType, span="567-567", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_141 [label="ValidationUtils.ArgumentNotNull(value, ''value'')", span="579-579", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_142 [label="WriteStartConstructor(value.ToString())", span="580-580", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_144 [label="ValidationUtils.ArgumentNotNull(value, ''value'')", span="583-583", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_145 [label="WritePropertyName(value.ToString())", span="584-584", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_147 [label="WriteComment((value != null) ? value.ToString() : null)", span="587-587", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_149 [label="ValidationUtils.ArgumentNotNull(value, ''value'')", span="590-590", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_150 [label="value is BigInteger", span="592-592", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_151 [label="WriteValue((BigInteger)value)", span="594-594", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_152 [label="WriteValue(Convert.ToInt64(value, CultureInfo.InvariantCulture))", span="599-599", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_154 [label="ValidationUtils.ArgumentNotNull(value, ''value'')", span="603-603", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_155 [label="value is decimal", span="604-604", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_156 [label="WriteValue((decimal)value)", span="606-606", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_157 [label="value is double", span="608-608", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_158 [label="WriteValue((double)value)", span="610-610", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_159 [label="value is float", span="612-612", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_160 [label="WriteValue((float)value)", span="614-614", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_161 [label="WriteValue(Convert.ToDouble(value, CultureInfo.InvariantCulture))", span="618-618", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_163 [label="ValidationUtils.ArgumentNotNull(value, ''value'')", span="622-622", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_164 [label="WriteValue(value.ToString())", span="623-623", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_166 [label="ValidationUtils.ArgumentNotNull(value, ''value'')", span="626-626", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_167 [label="WriteValue(Convert.ToBoolean(value, CultureInfo.InvariantCulture))", span="627-627", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_179 [label="ValidationUtils.ArgumentNotNull(value, ''value'')", span="645-645", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_180 [label="value is DateTimeOffset", span="647-647", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_181 [label="WriteValue((DateTimeOffset)value)", span="649-649", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_182 [label="WriteValue(Convert.ToDateTime(value, CultureInfo.InvariantCulture))", span="654-654", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_184 [label="WriteRawValue((value != null) ? value.ToString() : null)", span="658-658", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_186 [label="ValidationUtils.ArgumentNotNull(value, ''value'')", span="661-661", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_187 [label="value is Guid", span="662-662", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_188 [label="WriteValue((Guid)value)", span="664-664", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_189 [label="WriteValue((byte[])value)", span="668-668", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_190 [label="throw MiscellaneousUtils.CreateArgumentOutOfRangeException(''TokenType'', tokenType, ''Unexpected token type.'');", span="672-672", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_135 [label="JsonToken.None", span="569-569", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_136 [label="JsonToken.StartObject", span="572-572", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_138 [label="JsonToken.StartArray", span="575-575", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_140 [label="JsonToken.StartConstructor", span="578-578", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_143 [label="JsonToken.PropertyName", span="582-582", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_146 [label="JsonToken.Comment", span="586-586", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_148 [label="JsonToken.Integer", span="589-589", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_153 [label="JsonToken.Float", span="602-602", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_162 [label="JsonToken.String", span="621-621", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_165 [label="JsonToken.Boolean", span="625-625", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_168 [label="JsonToken.Null", span="629-629", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_170 [label="JsonToken.Undefined", span="632-632", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_172 [label="JsonToken.EndObject", span="635-635", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_174 [label="JsonToken.EndArray", span="638-638", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_176 [label="JsonToken.EndConstructor", span="641-641", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_178 [label="JsonToken.Date", span="644-644", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_183 [label="JsonToken.Raw", span="657-657", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_185 [label="JsonToken.Bytes", span="660-660", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_137 [label="WriteStartObject()", span="573-573", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_139 [label="WriteStartArray()", span="576-576", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_169 [label="WriteNull()", span="630-630", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_171 [label="WriteUndefined()", span="633-633", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_173 [label="WriteEndObject()", span="636-636", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_175 [label="WriteEndArray()", span="639-639", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_177 [label="WriteEndConstructor()", span="642-642", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_191 [label="Exit Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", span="565-565", cluster="Newtonsoft.Json.JsonWriter.WriteTokenInternal(Newtonsoft.Json.JsonToken, object)", file="JsonWriter.cs"];
m28_197 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="973-973", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonWriter.cs"];
m28_334 [label="InternalWriteValue(JsonToken.Float)", span="975-975", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonWriter.cs"];
m28_335 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(double)", span="973-973", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonWriter.cs"];
m28_458 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1396-1396", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonWriter.cs"];
m28_459 [label="value == null", span="1398-1398", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonWriter.cs"];
m28_461 [label="value is BigInteger", span="1407-1407", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonWriter.cs"];
m28_462 [label="throw CreateUnsupportedTypeException(this, value);", span="1409-1409", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonWriter.cs"];
m28_463 [label="WriteValue(this, ConvertUtils.GetTypeCode(value.GetType()), value)", span="1413-1413", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonWriter.cs"];
m28_460 [label="WriteNull()", span="1400-1400", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonWriter.cs"];
m28_464 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1396-1396", cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonWriter.cs"];
m28_613 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="JsonWriter.cs"];
m28_419 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="1265-1265", cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="JsonWriter.cs"];
m28_420 [label="value == null", span="1267-1267", cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="JsonWriter.cs"];
m28_422 [label="WriteValue(value.Value)", span="1273-1273", cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", color=green, community=0, file="JsonWriter.cs"];
m28_421 [label="WriteNull()", span="1269-1269", cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="JsonWriter.cs"];
m28_423 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="1265-1265", cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="JsonWriter.cs"];
m28_69 [label="Entry Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", span="1684-1684", cluster="Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_620 [label="UpdateScopeWithFinishedValue()", span="1686-1686", cluster="Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_621 [label="AutoComplete(token)", span="1687-1687", cluster="Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_622 [label="Push(container)", span="1688-1688", cluster="Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_623 [label="Exit Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", span="1684-1684", cluster="Newtonsoft.Json.JsonWriter.InternalWriteStart(Newtonsoft.Json.JsonToken, Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_238 [label="Entry Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonContainerType)", span="728-728", cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_239 [label=type, span="730-730", cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_246 [label="throw JsonWriterException.Create(this, ''No close token for type: '' + type, null);", span="739-739", cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_240 [label="JsonContainerType.Object", span="732-732", cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_242 [label="JsonContainerType.Array", span="734-734", cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_244 [label="JsonContainerType.Constructor", span="736-736", cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_241 [label="return JsonToken.EndObject;", span="733-733", cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_243 [label="return JsonToken.EndArray;", span="735-735", cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_245 [label="return JsonToken.EndConstructor;", span="737-737", cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_247 [label="Exit Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonContainerType)", span="728-728", cluster="Newtonsoft.Json.JsonWriter.GetCloseTokenForType(Newtonsoft.Json.JsonContainerType)", file="JsonWriter.cs"];
m28_225 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="190-190", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonWriter.cs"];
m28_321 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="926-926", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonWriter.cs"];
m28_322 [label="InternalWriteValue(JsonToken.Integer)", span="928-928", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonWriter.cs"];
m28_323 [label="Exit Newtonsoft.Json.JsonWriter.WriteValue(int)", span="926-926", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonWriter.cs"];
m28_634 [label="Newtonsoft.Json.JsonWriter", span="", file="JsonWriter.cs"];
m29_2094 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="JToken.cs"];
m29_1204 [label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JToken.cs"];
m29_3552 [label="Entry Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", file="JToken.cs"];
m29_1852 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4126-4126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JToken.cs"];
m29_1853 [label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="4128-4128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JToken.cs"];
m29_1854 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4126-4126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JToken.cs"];
m29_403 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="859-859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JToken.cs"];
m29_404 [label="_stringValue = stringValue", span="861-861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JToken.cs"];
m29_405 [label="_intValue = intValue", span="862-862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JToken.cs"];
m29_406 [label="_person1 = p1", span="863-863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JToken.cs"];
m29_407 [label="_person2 = p2", span="864-864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JToken.cs"];
m29_408 [label="_person3 = p3", span="865-865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JToken.cs"];
m29_409 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="859-859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JToken.cs"];
m29_477 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="990-990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JToken.cs"];
m29_478 [label="string s = null", span="992-992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JToken.cs"];
m29_479 [label="var v = new JValue(s)", span="993-993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JToken.cs"];
m29_480 [label="var o = JObject.FromObject(new { title = v })", span="994-994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JToken.cs"];
m29_481 [label="JObject oo = new JObject\r\n            {\r\n                { ''title'', v }\r\n            }", span="996-999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JToken.cs"];
m29_483 [label="Assert.AreEqual(null, v.Value)", span="1003-1003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JToken.cs"];
m29_484 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="1004-1004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JToken.cs"];
m29_482 [label="string output = o.ToString()", span="1001-1001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JToken.cs"];
m29_485 [label="StringAssert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="1006-1008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JToken.cs"];
m29_486 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="990-990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JToken.cs"];
m29_1810 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="3981-3981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JToken.cs"];
m29_510 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", span="1020-1020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", file="JToken.cs"];
m29_1367 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="2897-2897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JToken.cs"];
m29_1368 [label="_name = name", span="2899-2899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JToken.cs"];
m29_1369 [label="Age = age", span="2900-2900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JToken.cs"];
m29_1370 [label="Rank = rank", span="2901-2901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JToken.cs"];
m29_1371 [label="Title = title", span="2902-2902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JToken.cs"];
m29_1372 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="2897-2897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JToken.cs"];
m29_871 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JToken.cs"];
m29_3045 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JToken.cs"];
m29_2095 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="JToken.cs"];
m29_562 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="662-662", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JToken.cs"];
m29_271 [label="Entry System.Globalization.CultureInfo.ToString()", span="0-0", cluster="System.Globalization.CultureInfo.ToString()", file="JToken.cs"];
m29_1939 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JToken.cs"];
m29_554 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="473-473", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JToken.cs"];
m29_2113 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="807-807", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JToken.cs"];
m29_3542 [label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35", cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="JToken.cs"];
m29_3814 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="8787-8787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JToken.cs"];
m29_3815 [label="return objectType == typeof(System.Net.Mail.Attachment);", span="8789-8789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JToken.cs"];
m29_3816 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="8787-8787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JToken.cs"];
m29_518 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1073-1073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JToken.cs"];
m29_519 [label="var original = new Foo1<Bar1> { foo = new Bar1 { bar = ''value'' }, foo2 = new Bar1 { bar = ''value2'' } }", span="1075-1075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JToken.cs"];
m29_520 [label="var json = JsonConvert.SerializeObject(original)", span="1076-1076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JToken.cs"];
m29_521 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1077-1077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JToken.cs"];
m29_522 [label="Assert.AreEqual(expectedJson, json)", span="1078-1078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JToken.cs"];
m29_523 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1073-1073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JToken.cs"];
m29_1010 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JToken.cs"];
m29_1454 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3131-3131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JToken.cs"];
m29_1455 [label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="3133-3133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JToken.cs"];
m29_1456 [label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="3135-3135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JToken.cs"];
m29_1457 [label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="3137-3137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JToken.cs"];
m29_1458 [label="Assert.AreEqual(''Admin'', r.RoleName)", span="3138-3138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JToken.cs"];
m29_1459 [label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="3139-3139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JToken.cs"];
m29_1460 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3131-3131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JToken.cs"];
m29_198 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JToken.cs"];
m29_957 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2027-2027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JToken.cs"];
m29_958 [label="var date = new DateTime(2001, 4, 4, 0, 0, 0, DateTimeKind.Utc)", span="2029-2029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JToken.cs"];
m29_959 [label="string json = JsonConvert.SerializeObject(date)", span="2031-2031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JToken.cs"];
m29_960 [label="Assert.AreEqual(@''''''2001-04-04T00:00:00Z'''''', json)", span="2032-2032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JToken.cs"];
m29_961 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2027-2027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JToken.cs"];
m29_639 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JToken.cs"];
m29_272 [label="Entry Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", file="JToken.cs"];
m29_675 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JToken.cs"];
m29_1757 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="3808-3808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JToken.cs"];
m29_1758 [label=initial, span="3810-3810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JToken.cs"];
m29_1759 [label="Add(pair.Key, pair.Value)", span="3812-3812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JToken.cs"];
m29_1760 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="3808-3808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JToken.cs"];
m29_2149 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4808-4808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JToken.cs"];
m29_2150 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                //Additional text found in JSON string after finishing deserializing object.\r\n                //Test 1\r\n                var reference = new Dictionary<string, object>();\r\n                reference.Add(''$ref'', 1);\r\n                reference.Add(''$id'', 1);\r\n\r\n                var child = new Dictionary<string, object>();\r\n                child.Add(''_id'', 2);\r\n                child.Add(''Name'', ''Isabell'');\r\n                child.Add(''Father'', reference);\r\n\r\n                var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n                JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n            }, ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 14.'')", span="4810-4825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JToken.cs"];
m29_2151 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="4808-4808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JToken.cs"];
m29_612 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="1235-1235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="JToken.cs"];
m29_438 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="901-901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_439 [label="var p1 = new PersonReference\r\n            {\r\n                Name = ''John Smith''\r\n            }", span="903-906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_440 [label="var p2 = new PersonReference\r\n            {\r\n                Name = ''Mary Sue'',\r\n            }", span="907-910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_441 [label="p1.Spouse = p2", span="912-912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_442 [label="p2.Spouse = p1", span="913-913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_443 [label="var obj = new PreserveReferencesCallbackTestObject(''string!'', 42, p1, p2, p1)", span="915-915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_444 [label="obj._parent = obj", span="916-916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_446 [label="string json = JsonConvert.SerializeObject(obj, settings)", span="924-924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_449 [label="Assert.AreEqual(obj._stringValue, obj2._stringValue)", span="954-954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_450 [label="Assert.AreEqual(obj._intValue, obj2._intValue)", span="955-955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_451 [label="Assert.AreEqual(obj._person1.Name, obj2._person1.Name)", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_452 [label="Assert.AreEqual(obj._person2.Name, obj2._person2.Name)", span="957-957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_453 [label="Assert.AreEqual(obj._person3.Name, obj2._person3.Name)", span="958-958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_445 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            }", span="918-922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_447 [label="StringAssert.AreEqual(json, @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''stringValue'''': ''''string!'''',\r\n  ''''intValue'''': 42,\r\n  ''''person1'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''Mary Sue'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''2''''\r\n      }\r\n    }\r\n  },\r\n  ''''person2'''': {\r\n    ''''$ref'''': ''''3''''\r\n  },\r\n  ''''person3'''': {\r\n    ''''$ref'''': ''''2''''\r\n  },\r\n  ''''parent'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'')", span="926-950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_448 [label="PreserveReferencesCallbackTestObject obj2 = JsonConvert.DeserializeObject<PreserveReferencesCallbackTestObject>(json)", span="952-952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_454 [label="Assert.AreEqual(obj2._person1, obj2._person3)", span="959-959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_455 [label="Assert.AreEqual(obj2._person1.Spouse, obj2._person2)", span="960-960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_456 [label="Assert.AreEqual(obj2._person2.Spouse, obj2._person1)", span="961-961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_457 [label="Assert.AreEqual(obj2._parent, obj2)", span="962-962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_458 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="901-901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JToken.cs"];
m29_860 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="755-755", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JToken.cs"];
m29_1589 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="191-191", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JToken.cs"];
m29_1049 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2184-2184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JToken.cs"];
m29_1050 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2186-2186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JToken.cs"];
m29_1051 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2187-2187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JToken.cs"];
m29_1055 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2197-2197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JToken.cs"];
m29_1056 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2198-2198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JToken.cs"];
m29_1052 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n            })", span="2189-2192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JToken.cs"];
m29_1053 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2193-2193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JToken.cs"];
m29_1054 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2195-2195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JToken.cs"];
m29_1057 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2184-2184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JToken.cs"];
m29_1493 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3194-3194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JToken.cs"];
m29_1494 [label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="3196-3196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JToken.cs"];
m29_1495 [label="Assert.AreEqual(3, l.Count)", span="3197-3197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JToken.cs"];
m29_1496 [label="Assert.AreEqual(3.3m, l[0])", span="3199-3199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JToken.cs"];
m29_1497 [label="Assert.AreEqual(null, l[1])", span="3200-3200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JToken.cs"];
m29_1498 [label="Assert.AreEqual(1.1m, l[2])", span="3201-3201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JToken.cs"];
m29_1499 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3194-3194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JToken.cs"];
m29_2778 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6338-6338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JToken.cs"];
m29_2779 [label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="6340-6340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JToken.cs"];
m29_2780 [label="string json = JsonConvert.SerializeObject(d1)", span="6342-6342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JToken.cs"];
m29_2782 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6346-6346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JToken.cs"];
m29_2783 [label="Assert.AreEqual(d1[0], d2[0])", span="6347-6347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JToken.cs"];
m29_2781 [label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="6344-6344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JToken.cs"];
m29_2784 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6338-6338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JToken.cs"];
m29_1434 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3063-3063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JToken.cs"];
m29_1435 [label="var value = new\r\n            {\r\n                bar = new JObject(new JProperty(''baz'', 13))\r\n            }", span="3065-3068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JToken.cs"];
m29_1436 [label="string json = JsonConvert.SerializeObject(value)", span="3070-3070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JToken.cs"];
m29_1437 [label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="3072-3072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JToken.cs"];
m29_1438 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3063-3063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JToken.cs"];
m29_2300 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5135-5135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JToken.cs"];
m29_2301 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="5137-5137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JToken.cs"];
m29_2302 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5138-5138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JToken.cs"];
m29_2303 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5135-5135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JToken.cs"];
m29_1205 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2482-2482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JToken.cs"];
m29_1206 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="2484-2484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JToken.cs"];
m29_1207 [label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="2486-2486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JToken.cs"];
m29_1215 [label="Assert.AreEqual(json, after)", span="2497-2497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JToken.cs"];
m29_1208 [label="Assert.AreEqual(''Before!'', aa.Before)", span="2488-2488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JToken.cs"];
m29_1209 [label="Assert.AreEqual(''After!'', aa.After)", span="2489-2489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JToken.cs"];
m29_1210 [label="Assert.AreEqual(4, aa.Coordinates.Length)", span="2490-2490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JToken.cs"];
m29_1211 [label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="2491-2491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JToken.cs"];
m29_1212 [label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="2492-2492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JToken.cs"];
m29_1213 [label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="2493-2493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JToken.cs"];
m29_1214 [label="string after = JsonConvert.SerializeObject(aa)", span="2495-2495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JToken.cs"];
m29_1216 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2482-2482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JToken.cs"];
m29_1473 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3166-3166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JToken.cs"];
m29_1474 [label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="3168-3168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JToken.cs"];
m29_1475 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<TestObjects.Event>(json); }, @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'')", span="3170-3170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JToken.cs"];
m29_1476 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3166-3166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JToken.cs"];
m29_3016 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="6823-6823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="JToken.cs"];
m29_3761 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", span="8642-8642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", file="JToken.cs"];
m29_173 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)", file="JToken.cs"];
m29_2894 [label="Entry Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", file="JToken.cs"];
m29_1074 [label="Entry System.Convert.ToDateTime(string)", span="0-0", cluster="System.Convert.ToDateTime(string)", file="JToken.cs"];
m29_1432 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JToken.cs"];
m29_1940 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JToken.cs"];
m29_2374 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="5266-5266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JToken.cs"];
m29_763 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="349-349", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JToken.cs"];
m29_2469 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5515-5515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JToken.cs"];
m29_2470 [label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="5517-5522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JToken.cs"];
m29_2471 [label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="5524-5524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JToken.cs"];
m29_2472 [label="Assert.AreEqual(40, p.Age)", span="5525-5525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JToken.cs"];
m29_2473 [label="Assert.AreEqual(44.4, p.Height)", span="5526-5526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JToken.cs"];
m29_2474 [label="Assert.AreEqual(4m, p.Price)", span="5527-5527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JToken.cs"];
m29_2475 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5515-5515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JToken.cs"];
m29_2163 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4829-4829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_2164 [label="var reference = new Dictionary<string, object>()", span="4831-4831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_2165 [label="reference.Add(''$ref'', null)", span="4832-4832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_2166 [label="reference.Add(''$id'', null)", span="4833-4833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_2167 [label="reference.Add(''blah'', ''blah!'')", span="4834-4834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_2171 [label="child.Add(''Father'', reference)", span="4839-4839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_2168 [label="var child = new Dictionary<string, object>()", span="4836-4836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_2169 [label="child.Add(''_id'', 2)", span="4837-4837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_2170 [label="child.Add(''Name'', ''Isabell'')", span="4838-4838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_2172 [label="string json = JsonConvert.SerializeObject(child)", span="4841-4841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_2173 [label="Assert.AreEqual(@''{''''_id'''':2,''''Name'''':''''Isabell'''',''''Father'''':{''''$ref'''':null,''''$id'''':null,''''blah'''':''''blah!''''}}'', json)", span="4843-4843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_2174 [label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="4845-4845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_2175 [label="Assert.AreEqual(3, result.Count)", span="4847-4847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_2176 [label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="4848-4848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_2177 [label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="4849-4849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_2178 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="4829-4829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JToken.cs"];
m29_3791 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="8753-8753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JToken.cs"];
m29_3792 [label="return objectType == typeof(System.Net.Mail.MailAddress);", span="8755-8755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JToken.cs"];
m29_3793 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="8753-8753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JToken.cs"];
m29_878 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="1881-1881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JToken.cs"];
m29_879 [label="string json = JsonConvert.SerializeObject(null)", span="1883-1883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JToken.cs"];
m29_880 [label="Assert.AreEqual(''null'', json)", span="1884-1884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JToken.cs"];
m29_881 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="1881-1881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JToken.cs"];
m29_3613 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8308-8308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JToken.cs"];
m29_3614 [label="var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }, X = 2 }", span="8310-8310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JToken.cs"];
m29_3615 [label="var s = JsonConvert.SerializeObject(c, Formatting.Indented)", span="8311-8311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JToken.cs"];
m29_3616 [label="StringAssert.AreEqual(@''{\r\n  ''''Id'''': ''''1'''',\r\n  ''''X'''': 2\r\n}'', s)", span="8312-8315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JToken.cs"];
m29_3617 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8308-8308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JToken.cs"];
m29_3001 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6765-6765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JToken.cs"];
m29_3002 [label="Product product = new Product()", span="6767-6767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JToken.cs"];
m29_3003 [label="product.Name = ''Apple''", span="6768-6768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JToken.cs"];
m29_3004 [label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="6769-6769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JToken.cs"];
m29_3005 [label="product.Price = 3.99M", span="6770-6770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JToken.cs"];
m29_3006 [label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="6771-6771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JToken.cs"];
m29_3007 [label="string json = JsonConvert.SerializeObject(product)", span="6773-6773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JToken.cs"];
m29_3008 [label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="6781-6786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JToken.cs"];
m29_3009 [label="StringAssert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="6787-6796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JToken.cs"];
m29_3010 [label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="6804-6804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JToken.cs"];
m29_3011 [label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="6806-6811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JToken.cs"];
m29_3012 [label="StringAssert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="6813-6820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JToken.cs"];
m29_3013 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="6765-6765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JToken.cs"];
m29_1196 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2469-2469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JToken.cs"];
m29_1197 [label="JaggedArray aa = new JaggedArray()", span="2471-2471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JToken.cs"];
m29_1198 [label="aa.Before = ''Before!''", span="2472-2472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JToken.cs"];
m29_1199 [label="aa.After = ''After!''", span="2473-2473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JToken.cs"];
m29_1200 [label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="2474-2474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JToken.cs"];
m29_1201 [label="string json = JsonConvert.SerializeObject(aa)", span="2476-2476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JToken.cs"];
m29_1202 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="2478-2478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JToken.cs"];
m29_1203 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2469-2469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JToken.cs"];
m29_3620 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8320-8320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JToken.cs"];
m29_3621 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}'';\r\n                JsonConvert.DeserializeObject<JObject>(content);\r\n            }, ''Can not add property time to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'')", span="8322-8326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JToken.cs"];
m29_3622 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8320-8320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JToken.cs"];
m29_2203 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4911-4911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JToken.cs"];
m29_2204 [label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="4913-4913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JToken.cs"];
m29_2205 [label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="4915-4915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JToken.cs"];
m29_2206 [label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="4916-4916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JToken.cs"];
m29_2207 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4918-4918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JToken.cs"];
m29_2208 [label="StringAssert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="4920-4923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JToken.cs"];
m29_2209 [label="Dictionary<DictionaryKey, string> newDictionary =\r\n                JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="4925-4926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JToken.cs"];
m29_2210 [label="Assert.AreEqual(2, newDictionary.Count)", span="4928-4928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JToken.cs"];
m29_2211 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="4911-4911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JToken.cs"];
m29_2699 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="434-434", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JToken.cs"];
m29_1075 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="JToken.cs"];
m29_1742 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3782-3782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JToken.cs"];
m29_1743 [label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="3784-3784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JToken.cs"];
m29_1744 [label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="3786-3786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JToken.cs"];
m29_1745 [label="Assert.AreEqual(3, dic.Count)", span="3788-3788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JToken.cs"];
m29_1746 [label="Assert.AreEqual(''value1'', dic[''key1''])", span="3789-3789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JToken.cs"];
m29_1747 [label="Assert.AreEqual(''value2'', dic[''key2''])", span="3790-3790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JToken.cs"];
m29_1748 [label="Assert.AreEqual(''value3'', dic[''key3''])", span="3791-3791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JToken.cs"];
m29_1749 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="3782-3782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JToken.cs"];
m29_118 [label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="613-613", cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JToken.cs"];
m29_2709 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6188-6188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JToken.cs"];
m29_2710 [label="string input = @''http://tes/?a=b\\c&d=e\''", span="6190-6190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JToken.cs"];
m29_2711 [label="Uri uri = new Uri(input)", span="6191-6191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JToken.cs"];
m29_2712 [label="string json = JsonConvert.SerializeObject(uri)", span="6192-6192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JToken.cs"];
m29_2714 [label="Assert.AreEqual(uri, output)", span="6195-6195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JToken.cs"];
m29_2713 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6193-6193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JToken.cs"];
m29_2715 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6188-6188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JToken.cs"];
m29_956 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="JToken.cs"];
m29_1860 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4136-4136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JToken.cs"];
m29_1861 [label="return _innerDictionary.TryGetValue(key, out value);", span="4138-4138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JToken.cs"];
m29_1862 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4136-4136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JToken.cs"];
m29_2621 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5980-5980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JToken.cs"];
m29_2622 [label="return _readonlyString;", span="5982-5982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JToken.cs"];
m29_2623 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="5980-5980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JToken.cs"];
m29_1943 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JToken.cs"];
m29_3837 [label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0", cluster="System.Text.Encoding.GetEncoding(string)", file="JToken.cs"];
m29_2792 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6364-6364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JToken.cs"];
m29_2793 [label="IList<byte[]> d1 = new List<byte[]> { null }", span="6366-6366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JToken.cs"];
m29_2794 [label="string json = JsonConvert.SerializeObject(d1)", span="6368-6368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JToken.cs"];
m29_2796 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6372-6372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JToken.cs"];
m29_2797 [label="Assert.AreEqual(d1[0], d2[0])", span="6373-6373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JToken.cs"];
m29_2795 [label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="6370-6370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JToken.cs"];
m29_2798 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6364-6364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JToken.cs"];
m29_3723 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="8567-8567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JToken.cs"];
m29_3724 [label="ConstantTestClass c1 = new ConstantTestClass()", span="8569-8569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JToken.cs"];
m29_3725 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="8571-8571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JToken.cs"];
m29_3726 [label="StringAssert.AreEqual(@''{\r\n  ''''MY_CONSTANT'''': ''''.''''\r\n}'', json)", span="8573-8575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JToken.cs"];
m29_3727 [label="JsonConvert.DeserializeObject<ConstantTestClass>(json)", span="8577-8577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JToken.cs"];
m29_3728 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="8567-8567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JToken.cs"];
m29_1715 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3693-3693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JToken.cs"];
m29_1716 [label="_dict1.Add(item.Key, item)", span="3695-3695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JToken.cs"];
m29_1717 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3693-3693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JToken.cs"];
m29_3376 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="7739-7739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JToken.cs"];
m29_3377 [label="Tuple<int, int> tuple = Tuple.Create(500, 20)", span="7741-7741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JToken.cs"];
m29_3378 [label="string json = JsonConvert.SerializeObject(tuple)", span="7742-7742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JToken.cs"];
m29_3379 [label="Assert.AreEqual(@''{''''Item1'''':500,''''Item2'''':20}'', json)", span="7743-7743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JToken.cs"];
m29_3380 [label="Tuple<int, int> tuple2 = JsonConvert.DeserializeObject<Tuple<int, int>>(json)", span="7745-7745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JToken.cs"];
m29_3381 [label="Assert.AreEqual(500, tuple2.Item1)", span="7746-7746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JToken.cs"];
m29_3382 [label="Assert.AreEqual(20, tuple2.Item2)", span="7747-7747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JToken.cs"];
m29_3383 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="7739-7739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JToken.cs"];
m29_3029 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="6838-6838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JToken.cs"];
m29_3030 [label="return objectType == typeof(Color);", span="6840-6840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JToken.cs"];
m29_3031 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="6838-6838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JToken.cs"];
m29_2330 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JToken.cs"];
m29_553 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JToken.cs"];
m29_1786 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="3944-3944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JToken.cs"];
m29_1788 [label="C2 = c2", span="3946-3946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JToken.cs"];
m29_1789 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="3944-3944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JToken.cs"];
m29_2438 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5454-5454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JToken.cs"];
m29_2439 [label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="5456-5456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JToken.cs"];
m29_2440 [label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="5457-5457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JToken.cs"];
m29_2441 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5454-5454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JToken.cs"];
m29_3335 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7581-7581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JToken.cs"];
m29_3336 [label="IgnoreSerializableAttribute = false", span="7583-7583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JToken.cs"];
m29_3337 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7581-7581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JToken.cs"];
m29_78 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="283-283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JToken.cs"];
m29_79 [label="NullTestClass otc = JsonConvert.DeserializeObject<NullTestClass>(@''{\r\n    ''''Value1'''': null,\r\n    ''''Value2'''': null,\r\n    ''''Value3'''': null,\r\n    ''''Value4'''': null,\r\n    ''''Value5'''': null\r\n}'')", span="285-291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JToken.cs"];
m29_80 [label="Assert.IsNull(otc.Value1)", span="292-292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JToken.cs"];
m29_81 [label="Assert.AreEqual(JTokenType.Null, otc.Value2.Type)", span="293-293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JToken.cs"];
m29_82 [label="Assert.AreEqual(JTokenType.Raw, otc.Value3.Type)", span="294-294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JToken.cs"];
m29_83 [label="Assert.AreEqual(JTokenType.Null, otc.Value4.Type)", span="295-295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JToken.cs"];
m29_84 [label="Assert.IsNull(otc.Value5)", span="296-296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JToken.cs"];
m29_85 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="283-283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JToken.cs"];
m29_1439 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JToken.cs"];
m29_2340 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5221-5221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JToken.cs"];
m29_2341 [label="string json = ''{Amount:123456789876543.21}''", span="5223-5223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JToken.cs"];
m29_2342 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5224-5224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JToken.cs"];
m29_2343 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5225-5225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JToken.cs"];
m29_2345 [label="Invoice i = serializer.Deserialize<Invoice>(reader)", span="5229-5229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JToken.cs"];
m29_2344 [label="JsonSerializer serializer = new JsonSerializer()", span="5227-5227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JToken.cs"];
m29_2346 [label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="5230-5230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JToken.cs"];
m29_2347 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5221-5221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JToken.cs"];
m29_2273 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5086-5086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JToken.cs"];
m29_2274 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            })", span="5088-5091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JToken.cs"];
m29_2275 [label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="5093-5093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JToken.cs"];
m29_2276 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5095-5095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JToken.cs"];
m29_2277 [label="reader.DateParseHandling = DateParseHandling.None", span="5096-5096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JToken.cs"];
m29_2279 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5100-5100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JToken.cs"];
m29_2278 [label="JsonSerializer serializer = new JsonSerializer()", span="5098-5098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JToken.cs"];
m29_2280 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5102-5102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JToken.cs"];
m29_2281 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5103-5103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JToken.cs"];
m29_2282 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5086-5086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JToken.cs"];
m29_2512 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5647-5647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JToken.cs"];
m29_2513 [label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="5649-5649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JToken.cs"];
m29_2514 [label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="5650-5650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JToken.cs"];
m29_2515 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5647-5647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JToken.cs"];
m29_582 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1259-1259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JToken.cs"];
m29_583 [label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1261-1267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JToken.cs"];
m29_584 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1269-1269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JToken.cs"];
m29_585 [label="baseWith.Virtual = ''Virtual2!''", span="1270-1270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JToken.cs"];
m29_586 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1271-1271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JToken.cs"];
m29_587 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1272-1272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JToken.cs"];
m29_588 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1274-1274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JToken.cs"];
m29_589 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1276-1283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JToken.cs"];
m29_590 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1259-1259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JToken.cs"];
m29_2375 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="5254-5254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JToken.cs"];
m29_3410 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="7809-7809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JToken.cs"];
m29_3411 [label="string json = @''[999999999999999999999999999999999999999999999999]''", span="7811-7811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JToken.cs"];
m29_3412 [label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="7813-7813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JToken.cs"];
m29_3414 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<IList<long>>(json), ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'')", span="7817-7817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JToken.cs"];
m29_3413 [label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="7815-7815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JToken.cs"];
m29_3415 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="7809-7809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JToken.cs"];
m29_497 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", span="1015-1015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", file="JToken.cs"];
m29_333 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="743-743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_334 [label="JsonSerializerProxy serializerProxy = new JsonSerializerProxy(new JsonSerializerInternalReader(new JsonSerializer()))", span="745-745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_335 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="747-747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_336 [label="serializerProxy.Binder = customBinder", span="748-748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_337 [label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="749-749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_338 [label="serializerProxy.CheckAdditionalContent = true", span="751-751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_339 [label="Assert.AreEqual(true, serializerProxy.CheckAdditionalContent)", span="752-752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_340 [label="serializerProxy.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="754-754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_341 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializerProxy.ConstructorHandling)", span="755-755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_342 [label="serializerProxy.Context = new StreamingContext(StreamingContextStates.Other)", span="758-758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_343 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializerProxy.Context)", span="759-759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_345 [label="serializerProxy.ContractResolver = resolver", span="763-763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_346 [label="Assert.AreEqual(resolver, serializerProxy.ContractResolver)", span="764-764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_347 [label="serializerProxy.Converters.Add(new StringEnumConverter())", span="766-766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_348 [label="Assert.AreEqual(1, serializerProxy.Converters.Count)", span="767-767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_349 [label="serializerProxy.Culture = new CultureInfo(''en-nz'')", span="769-769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_350 [label="Assert.AreEqual(''en-NZ'', serializerProxy.Culture.ToString())", span="770-770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_351 [label="serializerProxy.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="772-772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_352 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializerProxy.DateFormatHandling)", span="773-773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_353 [label="serializerProxy.DateFormatString = ''yyyy''", span="775-775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_354 [label="Assert.AreEqual(''yyyy'', serializerProxy.DateFormatString)", span="776-776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_355 [label="serializerProxy.DateParseHandling = DateParseHandling.None", span="778-778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_356 [label="Assert.AreEqual(DateParseHandling.None, serializerProxy.DateParseHandling)", span="779-779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_357 [label="serializerProxy.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="781-781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_358 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializerProxy.DateTimeZoneHandling)", span="782-782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_359 [label="serializerProxy.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="784-784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_360 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializerProxy.DefaultValueHandling)", span="785-785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_361 [label="serializerProxy.FloatFormatHandling = FloatFormatHandling.Symbol", span="787-787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_362 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializerProxy.FloatFormatHandling)", span="788-788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_363 [label="serializerProxy.FloatParseHandling = FloatParseHandling.Decimal", span="790-790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_364 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializerProxy.FloatParseHandling)", span="791-791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_365 [label="serializerProxy.Formatting = Formatting.Indented", span="793-793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_366 [label="Assert.AreEqual(Formatting.Indented, serializerProxy.Formatting)", span="794-794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_367 [label="serializerProxy.MaxDepth = 9001", span="796-796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_368 [label="Assert.AreEqual(9001, serializerProxy.MaxDepth)", span="797-797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_369 [label="serializerProxy.MissingMemberHandling = MissingMemberHandling.Error", span="799-799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_370 [label="Assert.AreEqual(MissingMemberHandling.Error, serializerProxy.MissingMemberHandling)", span="800-800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_371 [label="serializerProxy.NullValueHandling = NullValueHandling.Ignore", span="802-802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_372 [label="Assert.AreEqual(NullValueHandling.Ignore, serializerProxy.NullValueHandling)", span="803-803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_373 [label="serializerProxy.ObjectCreationHandling = ObjectCreationHandling.Replace", span="805-805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_374 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializerProxy.ObjectCreationHandling)", span="806-806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_375 [label="serializerProxy.PreserveReferencesHandling = PreserveReferencesHandling.All", span="808-808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_376 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializerProxy.PreserveReferencesHandling)", span="809-809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_377 [label="serializerProxy.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="811-811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_378 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializerProxy.ReferenceLoopHandling)", span="812-812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_380 [label="serializerProxy.ReferenceResolver = referenceResolver", span="815-815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_381 [label="Assert.AreEqual(referenceResolver, serializerProxy.ReferenceResolver)", span="816-816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_382 [label="serializerProxy.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="818-818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_383 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializerProxy.StringEscapeHandling)", span="819-819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_385 [label="serializerProxy.TraceWriter = traceWriter", span="822-822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_386 [label="Assert.AreEqual(traceWriter, serializerProxy.TraceWriter)", span="823-823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_387 [label="serializerProxy.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="826-826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_388 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializerProxy.TypeNameAssemblyFormat)", span="827-827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_389 [label="serializerProxy.TypeNameHandling = TypeNameHandling.All", span="830-830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_390 [label="Assert.AreEqual(TypeNameHandling.All, serializerProxy.TypeNameHandling)", span="831-831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_344 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="762-762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_379 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="814-814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_384 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="821-821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_391 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="743-743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JToken.cs"];
m29_2817 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6415-6415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JToken.cs"];
m29_2818 [label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n            {\r\n                Integer = new ConvertibleInt(1),\r\n                NullableInteger1 = new ConvertibleInt(2),\r\n                NullableInteger2 = null\r\n            }", span="6417-6422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JToken.cs"];
m29_2819 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6424-6424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JToken.cs"];
m29_2820 [label="StringAssert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="6426-6430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JToken.cs"];
m29_2821 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6415-6415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JToken.cs"];
m29_926 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JToken.cs"];
m29_2837 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", file="JToken.cs"];
m29_2486 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5545-5545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JToken.cs"];
m29_2487 [label="MultiIndexSuper e = new MultiIndexSuper()", span="5547-5547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JToken.cs"];
m29_2488 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="5549-5549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JToken.cs"];
m29_2489 [label="Assert.AreEqual(@''{}'', json)", span="5551-5551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JToken.cs"];
m29_2490 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5545-5545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JToken.cs"];
m29_1813 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4034-4034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JToken.cs"];
m29_1814 [label="dictionary == null", span="4036-4036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JToken.cs"];
m29_1816 [label=dictionary, span="4041-4041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JToken.cs"];
m29_1815 [label="throw new ArgumentNullException(''dictionary'');", span="4038-4038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JToken.cs"];
m29_1817 [label="_innerDictionary.Add(entry.Key, entry.Value)", span="4043-4043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JToken.cs"];
m29_1818 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4034-4034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JToken.cs"];
m29_62 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", span="207-207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", file="JToken.cs"];
m29_2590 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="5894-5894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JToken.cs"];
m29_2591 [label="throw new NotImplementedException();", span="5896-5896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JToken.cs"];
m29_2592 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="5894-5894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JToken.cs"];
m29_3423 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="7842-7842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JToken.cs"];
m29_3424 [label="Pair<string, int> p = new Pair<string, int>(''One'', 2)", span="7844-7844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JToken.cs"];
m29_3425 [label="string json = JsonConvert.SerializeObject(p)", span="7846-7846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JToken.cs"];
m29_3429 [label="json = JsonConvert.SerializeObject(p, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = r\r\n            })", span="7854-7857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JToken.cs"];
m29_3426 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="7848-7848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JToken.cs"];
m29_3427 [label="DefaultContractResolver r = new DefaultContractResolver()", span="7851-7851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JToken.cs"];
m29_3428 [label="r.IgnoreSerializableAttribute = false", span="7852-7852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JToken.cs"];
m29_3430 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="7859-7859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JToken.cs"];
m29_3431 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="7842-7842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JToken.cs"];
m29_1166 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2396-2396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JToken.cs"];
m29_1167 [label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2398-2403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JToken.cs"];
m29_1168 [label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2405-2405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JToken.cs"];
m29_1169 [label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="2407-2407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JToken.cs"];
m29_1170 [label="Assert.AreEqual(null, c.MiddleName)", span="2408-2408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JToken.cs"];
m29_1171 [label="Assert.AreEqual(null, c.LastName)", span="2409-2409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JToken.cs"];
m29_1172 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2396-2396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JToken.cs"];
m29_3125 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7022-7022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JToken.cs"];
m29_3126 [label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7024-7028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JToken.cs"];
m29_3127 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7030-7030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JToken.cs"];
m29_3128 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="7032-7035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JToken.cs"];
m29_3129 [label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="7037-7037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JToken.cs"];
m29_3130 [label="Assert.AreEqual(2, dic2.Count)", span="7039-7039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JToken.cs"];
m29_3131 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7040-7040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JToken.cs"];
m29_3132 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7041-7041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JToken.cs"];
m29_3133 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7022-7022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JToken.cs"];
m29_3024 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="JToken.cs"];
m29_3277 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7407-7407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JToken.cs"];
m29_3278 [label="string json =\r\n                JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="7409-7413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JToken.cs"];
m29_3279 [label="StringAssert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="7415-7418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JToken.cs"];
m29_3280 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7407-7407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JToken.cs"];
m29_2129 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4777-4777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m29_2130 [label="throw new NotImplementedException();", span="4779-4779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m29_2131 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="4777-4777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m29_1651 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JToken.cs"];
m29_3257 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="JToken.cs"];
m29_1181 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="JToken.cs"];
m29_3194 [label="Entry Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", file="JToken.cs"];
m29_1528 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3248-3248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JToken.cs"];
m29_1529 [label="string json = @''[]''", span="3250-3250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JToken.cs"];
m29_1530 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeObject<DynamicDictionary>(json); },\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3252-3256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JToken.cs"];
m29_1531 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3248-3248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JToken.cs"];
m29_1018 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JToken.cs"];
m29_602 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="1226-1226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="JToken.cs"];
m29_1829 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JToken.cs"];
m29_1877 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4184-4184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JToken.cs"];
m29_1878 [label="_stringValue = stringValue", span="4186-4186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JToken.cs"];
m29_1879 [label="_intValue = intValue", span="4187-4187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JToken.cs"];
m29_1880 [label="_dateTimeOffsetValue = dateTimeOffset", span="4188-4188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JToken.cs"];
m29_1881 [label="_personValue = personValue", span="4189-4189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JToken.cs"];
m29_1882 [label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="4190-4190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JToken.cs"];
m29_1883 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4184-4184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JToken.cs"];
m29_511 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1064-1064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JToken.cs"];
m29_512 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1066-1066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JToken.cs"];
m29_513 [label="var deserialized = JsonConvert.DeserializeObject<FooBar1>(json)", span="1067-1067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JToken.cs"];
m29_514 [label="Assert.IsNotNull(deserialized.foo)", span="1068-1068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JToken.cs"];
m29_515 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1069-1069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JToken.cs"];
m29_516 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1064-1064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JToken.cs"];
m29_641 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="229-229", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JToken.cs"];
m29_1820 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4078-4078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JToken.cs"];
m29_1821 [label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="4080-4080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JToken.cs"];
m29_1822 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4078-4078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JToken.cs"];
m29_2190 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4879-4879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JToken.cs"];
m29_2191 [label="string json = @''{'value':9.9}''", span="4881-4881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JToken.cs"];
m29_2192 [label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n                json, new JsonSerializerSettings\r\n                {\r\n                    FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="4883-4887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JToken.cs"];
m29_2193 [label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="4889-4889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JToken.cs"];
m29_2194 [label="Assert.AreEqual(9.9m, dic[''value''])", span="4890-4890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JToken.cs"];
m29_2195 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="4879-4879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JToken.cs"];
m29_2332 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5207-5207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JToken.cs"];
m29_2333 [label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="5209-5209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JToken.cs"];
m29_2334 [label="Assert.AreEqual(123456789876543.21m, d)", span="5210-5210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JToken.cs"];
m29_2335 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5207-5207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JToken.cs"];
m29_2538 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="5722-5722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="JToken.cs"];
m29_955 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JToken.cs"];
m29_2067 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4660-4660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JToken.cs"];
m29_2068 [label="XNodeTestObject testObject = new XNodeTestObject()", span="4662-4662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JToken.cs"];
m29_2069 [label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="4663-4663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JToken.cs"];
m29_2070 [label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="4664-4664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JToken.cs"];
m29_2071 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4666-4666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JToken.cs"];
m29_2075 [label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="4682-4682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JToken.cs"];
m29_2076 [label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="4683-4683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JToken.cs"];
m29_2072 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="4667-4678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JToken.cs"];
m29_2073 [label="StringAssert.AreEqual(expected, json)", span="4679-4679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JToken.cs"];
m29_2074 [label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="4681-4681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JToken.cs"];
m29_2077 [label="Assert.IsNull(newTestObject.Element.Parent)", span="4685-4685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JToken.cs"];
m29_2078 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4660-4660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JToken.cs"];
m29_721 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1528-1528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JToken.cs"];
m29_722 [label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="1530-1530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JToken.cs"];
m29_723 [label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="1532-1532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JToken.cs"];
m29_724 [label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="1534-1534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JToken.cs"];
m29_725 [label="StringAssert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="1535-1537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JToken.cs"];
m29_726 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1528-1528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JToken.cs"];
m29_1826 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4088-4088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JToken.cs"];
m29_1827 [label="_innerDictionary.Clear()", span="4090-4090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JToken.cs"];
m29_1828 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4088-4088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JToken.cs"];
m29_524 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", span="1025-1025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", file="JToken.cs"];
m29_712 [label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JToken.cs"];
m29_2491 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="5554-5554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="JToken.cs"];
m29_2531 [label="Entry DataContractSerializer.cstr", span="", cluster="DataContractSerializer.cstr", file="JToken.cs"];
m29_1076 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2236-2236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JToken.cs"];
m29_1077 [label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="2238-2238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JToken.cs"];
m29_1078 [label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="2239-2239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JToken.cs"];
m29_1079 [label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="2240-2240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JToken.cs"];
m29_1080 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2242-2242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JToken.cs"];
m29_1081 [label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="2243-2243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JToken.cs"];
m29_1082 [label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2245-2245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JToken.cs"];
m29_1083 [label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="2247-2247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JToken.cs"];
m29_1084 [label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="2248-2248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JToken.cs"];
m29_1085 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2236-2236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JToken.cs"];
m29_1590 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3351-3351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JToken.cs"];
m29_1591 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || ASPNETCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3353-3364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JToken.cs"];
m29_1592 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3351-3351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JToken.cs"];
m29_2381 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="5309-5309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JToken.cs"];
m29_2382 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="5309-5309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JToken.cs"];
m29_2009 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="4627-4627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JToken.cs"];
m29_2056 [label="BB_field1 = g", span="4630-4630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JToken.cs"];
m29_2057 [label="BB_field2 = g", span="4631-4631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JToken.cs"];
m29_2058 [label="BB_property1 = g", span="4632-4632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JToken.cs"];
m29_2059 [label="BB_property2 = g", span="4633-4633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JToken.cs"];
m29_2060 [label="BB_property3 = g", span="4634-4634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JToken.cs"];
m29_2061 [label="BB_property4 = g", span="4635-4635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JToken.cs"];
m29_2062 [label="BB_property5 = g", span="4636-4636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JToken.cs"];
m29_2063 [label="BB_property6 = g", span="4637-4637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JToken.cs"];
m29_2064 [label="BB_property7 = g", span="4638-4638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JToken.cs"];
m29_2065 [label="BB_property8 = g", span="4639-4639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JToken.cs"];
m29_2066 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="4627-4627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JToken.cs"];
m29_570 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1134-1134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JToken.cs"];
m29_571 [label="var strings = dictionaryKey.Split(' ')", span="1136-1136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JToken.cs"];
m29_572 [label="return new DictionaryKeyCast(strings[0], Convert.ToInt32(strings[1]));", span="1137-1137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JToken.cs"];
m29_573 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1134-1134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JToken.cs"];
m29_3046 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6880-6880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JToken.cs"];
m29_3047 [label="MemoryStream ms = new MemoryStream()", span="6882-6882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JToken.cs"];
m29_3048 [label="BsonWriter writer = new BsonWriter(ms)", span="6883-6883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JToken.cs"];
m29_3052 [label="byte[] data = ms.ToArray()", span="6888-6888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JToken.cs"];
m29_3049 [label="writer.WriteStartArray()", span="6884-6884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JToken.cs"];
m29_3050 [label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="6885-6885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JToken.cs"];
m29_3051 [label="writer.WriteEndArray()", span="6886-6886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JToken.cs"];
m29_3053 [label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n            {\r\n                ReadRootValueAsArray = true\r\n            }", span="6889-6892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JToken.cs"];
m29_3054 [label="JArray a = (JArray)JArray.ReadFrom(reader)", span="6894-6894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JToken.cs"];
m29_3055 [label="JValue v = (JValue)a[0]", span="6895-6895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JToken.cs"];
m29_3057 [label="StringAssert.AreEqual(@''[\r\n  ''''2000-01-02T03:04:05+06:00''''\r\n]'', a.ToString())", span="6898-6900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JToken.cs"];
m29_3056 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="6897-6897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JToken.cs"];
m29_3058 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="6880-6880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JToken.cs"];
m29_51 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JToken.cs"];
m29_1100 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2269-2269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JToken.cs"];
m29_1101 [label="string json", span="2271-2271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JToken.cs"];
m29_1102 [label="json = JsonConvert.SerializeObject((int?)null)", span="2273-2273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JToken.cs"];
m29_1103 [label="Assert.AreEqual(''null'', json)", span="2274-2274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JToken.cs"];
m29_1104 [label="json = JsonConvert.SerializeObject((int?)1)", span="2276-2276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JToken.cs"];
m29_1105 [label="Assert.AreEqual(''1'', json)", span="2277-2277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JToken.cs"];
m29_1106 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2269-2269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JToken.cs"];
m29_1440 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3076-3076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JToken.cs"];
m29_1441 [label="Content content = new Content\r\n            {\r\n                Text = ''Blah, blah, blah'',\r\n                Children = new List<Content>\r\n                {\r\n                    new Content { Text = ''First'' },\r\n                    new Content { Text = ''Second'' }\r\n                }\r\n            }", span="3078-3086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JToken.cs"];
m29_1442 [label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="3088-3088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JToken.cs"];
m29_1443 [label="StringAssert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="3090-3102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JToken.cs"];
m29_1444 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3076-3076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JToken.cs"];
m29_1734 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="3687-3687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JToken.cs"];
m29_2364 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="JToken.cs"];
m29_2503 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="5615-5615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JToken.cs"];
m29_2504 [label="B = 2", span="5617-5617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JToken.cs"];
m29_2505 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="5615-5615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JToken.cs"];
m29_1909 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JToken.cs"];
m29_3489 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8019-8019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JToken.cs"];
m29_3490 [label="string json = @''{''''something_else'''':''''my value''''}''", span="8021-8021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JToken.cs"];
m29_3491 [label="var foo = JsonConvert.DeserializeObject<FooConstructor>(json)", span="8022-8022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JToken.cs"];
m29_3492 [label="Assert.AreEqual(''my value'', foo.Bar)", span="8023-8023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JToken.cs"];
m29_3493 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8019-8019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JToken.cs"];
m29_1948 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4319-4319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1949 [label="Person person = new Person()", span="4321-4321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1950 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4322-4322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1951 [label="person.LastModified = person.BirthDate", span="4323-4323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1952 [label="person.Department = ''Department!''", span="4324-4324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1953 [label="person.Name = ''Name!''", span="4325-4325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1957 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4335-4335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1954 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4327-4327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1955 [label="string dateTimeOffsetText", span="4328-4328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1963 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4366-4366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1956 [label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="4330-4330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1959 [label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4338-4361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1958 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="4337-4337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1960 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4363-4363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1961 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="4364-4364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1962 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4365-4365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1964 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4367-4367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1965 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="4368-4368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1966 [label="Assert.AreEqual(null, o2._nullableInt)", span="4369-4369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_1967 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4319-4319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JToken.cs"];
m29_2799 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6377-6377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JToken.cs"];
m29_2800 [label="Bb b = new Bb()", span="6379-6379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JToken.cs"];
m29_2801 [label="b.no = true", span="6380-6380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JToken.cs"];
m29_2802 [label="Aa a = b", span="6381-6381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JToken.cs"];
m29_2804 [label="string json = JsonConvert.SerializeObject(b)", span="6384-6384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JToken.cs"];
m29_2803 [label="a.no = int.MaxValue", span="6382-6382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JToken.cs"];
m29_2805 [label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="6386-6386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JToken.cs"];
m29_2806 [label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="6388-6388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JToken.cs"];
m29_2807 [label="Assert.AreEqual(true, b2.no)", span="6390-6390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JToken.cs"];
m29_2808 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6377-6377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JToken.cs"];
m29_1157 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2370-2370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JToken.cs"];
m29_1158 [label="RequiredMembersClass c = new RequiredMembersClass()\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                FirstName = ''Bob'',\r\n                LastName = ''Smith'',\r\n                MiddleName = ''Cosmo''\r\n            }", span="2372-2378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JToken.cs"];
m29_1159 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2380-2380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JToken.cs"];
m29_1160 [label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="2382-2387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JToken.cs"];
m29_1161 [label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2389-2389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JToken.cs"];
m29_1162 [label="Assert.AreEqual(''Bob'', c2.FirstName)", span="2391-2391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JToken.cs"];
m29_1163 [label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="2392-2392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JToken.cs"];
m29_1164 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2370-2370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JToken.cs"];
m29_637 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="JToken.cs"];
m29_2551 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5799-5799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JToken.cs"];
m29_2552 [label="Title = title", span="5801-5801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JToken.cs"];
m29_2553 [label="Categories = new List<string>()", span="5802-5802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JToken.cs"];
m29_2554 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="5799-5799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JToken.cs"];
m29_1099 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JToken.cs"];
m29_2700 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="141-141", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JToken.cs"];
m29_3060 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="JToken.cs"];
m29_155 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", span="409-409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", file="JToken.cs"];
m29_1761 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="3852-3852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JToken.cs"];
m29_1762 [label="B value = new B()", span="3854-3854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JToken.cs"];
m29_1763 [label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="3855-3855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JToken.cs"];
m29_1764 [label="StringAssert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="3857-3862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JToken.cs"];
m29_1765 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="3852-3852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JToken.cs"];
m29_1332 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="2797-2797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JToken.cs"];
m29_1333 [label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="2799-2799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JToken.cs"];
m29_1334 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n                o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n                JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n            }, ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'')", span="2801-2807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JToken.cs"];
m29_1335 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="2797-2797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JToken.cs"];
m29_3855 [label="Entry Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="8932-8932", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JToken.cs"];
m29_3856 [label="Value = value", span="8934-8934", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JToken.cs"];
m29_3857 [label="Constructor = ''Public Paramatized''", span="8935-8935", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JToken.cs"];
m29_3858 [label="Exit Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="8932-8932", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JToken.cs"];
m29_3741 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", span="8613-8613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JToken.cs"];
m29_3742 [label="BaseProperty = baseProperty", span="8615-8615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JToken.cs"];
m29_3743 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", span="8613-8613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JToken.cs"];
m29_1173 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2413-2413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JToken.cs"];
m29_1174 [label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2417-2422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JToken.cs"];
m29_1175 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2424-2424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JToken.cs"];
m29_1176 [label="Assert.Fail()", span="2425-2425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JToken.cs"];
m29_1177 [label=JsonSerializationException, span="2427-2427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JToken.cs"];
m29_1178 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'FirstName' expects a value but got null. Path ''''))", span="2429-2429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JToken.cs"];
m29_1179 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2413-2413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JToken.cs"];
m29_2104 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="4742-4742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JToken.cs"];
m29_3354 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7665-7665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JToken.cs"];
m29_3355 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7667-7671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JToken.cs"];
m29_3356 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = new CultureInfo(''en-NZ'')\r\n            })", span="7673-7677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JToken.cs"];
m29_3357 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7679-7682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JToken.cs"];
m29_3358 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7665-7665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JToken.cs"];
m29_65 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="327-327", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JToken.cs"];
m29_2128 [label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0", cluster="string.Format(System.IFormatProvider, string, object, object)", file="JToken.cs"];
m29_3749 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8630-8630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m29_3750 [label="throw new NotImplementedException();", span="8632-8632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m29_3751 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8630-8630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JToken.cs"];
m29_1823 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4083-4083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JToken.cs"];
m29_1824 [label="_innerDictionary.Add(key, value)", span="4085-4085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JToken.cs"];
m29_1825 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4083-4083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JToken.cs"];
m29_556 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JToken.cs"];
m29_567 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JToken.cs"];
m29_568 [label="return _name + '' '' + _number;", span="1131-1131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JToken.cs"];
m29_569 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JToken.cs"];
m29_1863 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JToken.cs"];
m29_1637 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3457-3457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JToken.cs"];
m29_1638 [label="Foo f = new Foo()", span="3459-3459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JToken.cs"];
m29_1639 [label="f.Bars.Add(new Bar { Id = 0 })", span="3460-3460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JToken.cs"];
m29_1640 [label="f.Bars.Add(new Bar { Id = 1 })", span="3461-3461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JToken.cs"];
m29_1641 [label="f.Bars.Add(new Bar { Id = 2 })", span="3462-3462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JToken.cs"];
m29_1642 [label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="3464-3464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JToken.cs"];
m29_1643 [label="StringAssert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="3465-3471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JToken.cs"];
m29_1644 [label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="3473-3473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JToken.cs"];
m29_1645 [label="Assert.AreEqual(3, newFoo.Bars.Count)", span="3474-3474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JToken.cs"];
m29_1646 [label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="3475-3475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JToken.cs"];
m29_1647 [label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="3476-3476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JToken.cs"];
m29_1648 [label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="3477-3477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JToken.cs"];
m29_1649 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3457-3457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JToken.cs"];
m29_1916 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4216-4216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1917 [label="info.AddValue(''stringValue'', _stringValue)", span="4218-4218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1918 [label="info.AddValue(''intValue'', _intValue)", span="4219-4219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1919 [label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="4220-4220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1920 [label="info.AddValue(''personValue'', _personValue)", span="4221-4221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1921 [label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="4222-4222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1922 [label="info.AddValue(''nullableInt'', null)", span="4223-4223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1923 [label="info.AddValue(''booleanValue'', _booleanValue)", span="4225-4225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1924 [label="info.AddValue(''byteValue'', _byteValue)", span="4226-4226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1925 [label="info.AddValue(''charValue'', _charValue)", span="4227-4227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1926 [label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="4228-4228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1927 [label="info.AddValue(''decimalValue'', _decimalValue)", span="4229-4229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1928 [label="info.AddValue(''shortValue'', _shortValue)", span="4230-4230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1929 [label="info.AddValue(''longValue'', _longValue)", span="4231-4231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1930 [label="info.AddValue(''sbyteValue'', _sbyteValue)", span="4232-4232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1931 [label="info.AddValue(''floatValue'', _floatValue)", span="4233-4233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1932 [label="info.AddValue(''ushortValue'', _ushortValue)", span="4234-4234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1933 [label="info.AddValue(''uintValue'', _uintValue)", span="4235-4235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1934 [label="info.AddValue(''ulongValue'', _ulongValue)", span="4236-4236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_1935 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4216-4216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JToken.cs"];
m29_2645 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6076-6076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JToken.cs"];
m29_2646 [label="Exceptions = new List<Exception>()", span="6078-6078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JToken.cs"];
m29_2647 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6076-6076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JToken.cs"];
m29_1142 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2348-2348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JToken.cs"];
m29_1143 [label="string boolRef = typeof(bool).AssemblyQualifiedName", span="2350-2350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JToken.cs"];
m29_1144 [label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="2351-2351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JToken.cs"];
m29_1146 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="2354-2354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JToken.cs"];
m29_1145 [label="string json = JsonConvert.SerializeObject(typeClass)", span="2353-2353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JToken.cs"];
m29_1147 [label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2356-2356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JToken.cs"];
m29_1148 [label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="2357-2357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JToken.cs"];
m29_1149 [label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="2359-2359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JToken.cs"];
m29_1150 [label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="2360-2360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JToken.cs"];
m29_1152 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="2363-2363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JToken.cs"];
m29_1151 [label="json = JsonConvert.SerializeObject(typeClass)", span="2362-2362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JToken.cs"];
m29_1153 [label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2365-2365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JToken.cs"];
m29_1154 [label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="2366-2366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JToken.cs"];
m29_1155 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2348-2348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JToken.cs"];
m29_3063 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="JToken.cs"];
m29_3601 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8280-8280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JToken.cs"];
m29_3602 [label="throw new InvalidCastException();", span="8282-8282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JToken.cs"];
m29_3603 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8280-8280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JToken.cs"];
m29_3364 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7706-7706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JToken.cs"];
m29_3365 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7708-7712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JToken.cs"];
m29_3366 [label="StringWriter sw = new StringWriter()", span="7714-7714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JToken.cs"];
m29_3369 [label="serializer.Serialize(jsonWriter, dates)", span="7723-7723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JToken.cs"];
m29_3367 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7715-7715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JToken.cs"];
m29_3373 [label="string json = sw.ToString()", span="7729-7729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JToken.cs"];
m29_3368 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = new CultureInfo(''en-NZ''),\r\n                Formatting = Formatting.Indented\r\n            })", span="7717-7722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JToken.cs"];
m29_3370 [label="Assert.IsNull(jsonWriter.DateFormatString)", span="7725-7725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JToken.cs"];
m29_3371 [label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="7726-7726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JToken.cs"];
m29_3372 [label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="7727-7727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JToken.cs"];
m29_3374 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7731-7734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JToken.cs"];
m29_3375 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7706-7706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JToken.cs"];
m29_1507 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3215-3215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JToken.cs"];
m29_1508 [label="string json = @''[]''", span="3217-3217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JToken.cs"];
m29_1509 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, string>>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3219-3221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JToken.cs"];
m29_1510 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3215-3215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JToken.cs"];
m29_117 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JToken.cs"];
m29_266 [label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", span="36-36", cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", file="JToken.cs"];
m29_2571 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5842-5842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JToken.cs"];
m29_2572 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="5844-5844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JToken.cs"];
m29_2573 [label="c1.Categories.Add(''one'', 1)", span="5845-5845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JToken.cs"];
m29_2574 [label="c1.Categories.Add(''two'', 2)", span="5846-5846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JToken.cs"];
m29_2575 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="5848-5848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JToken.cs"];
m29_2578 [label="Assert.AreEqual(c1.Title, c2.Title)", span="5858-5858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JToken.cs"];
m29_2579 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="5859-5859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JToken.cs"];
m29_2576 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="5849-5855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JToken.cs"];
m29_2577 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="5857-5857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JToken.cs"];
m29_2580 [label="Assert.AreEqual(1, c2.Categories[''one''])", span="5860-5860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JToken.cs"];
m29_2581 [label="Assert.AreEqual(2, c2.Categories[''two''])", span="5861-5861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JToken.cs"];
m29_2582 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="5842-5842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JToken.cs"];
m29_273 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="JToken.cs"];
m29_561 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JToken.cs"];
m29_2010 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4490-4490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2011 [label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n                @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="4492-4502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2012 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4504-4504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2013 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4505-4505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2014 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4506-4506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2015 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4507-4507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2016 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4508-4508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2017 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4509-4509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2018 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4510-4510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2019 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4511-4511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2020 [label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n                @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="4513-4533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2021 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4535-4535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2022 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4536-4536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2023 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4537-4537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2024 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4538-4538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2025 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4539-4539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2026 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4540-4540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2027 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4541-4541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2028 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4542-4542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2029 [label="Assert.AreEqual(4, myB.BB_field1)", span="4544-4544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2030 [label="Assert.AreEqual(4, myB.BB_field2)", span="4545-4545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2031 [label="Assert.AreEqual(3, myB.BB_property1)", span="4546-4546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2032 [label="Assert.AreEqual(3, myB.BB_property2)", span="4547-4547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2033 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4548-4548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2034 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4549-4549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2035 [label="Assert.AreEqual(0, myB.BB_property5)", span="4550-4550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2036 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4551-4551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2037 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4552-4552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2038 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4553-4553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2039 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4490-4490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JToken.cs"];
m29_2376 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="5292-5292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JToken.cs"];
m29_2377 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="5292-5292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JToken.cs"];
m29_461 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="967-967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JToken.cs"];
m29_462 [label="object o = JsonConvert.DeserializeObject(''100000000000000000000000000000000000000.0'')", span="969-969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JToken.cs"];
m29_463 [label="CustomAssert.IsInstanceOfType(typeof(double), o)", span="971-971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JToken.cs"];
m29_464 [label="Assert.IsTrue(MathUtils.ApproxEquals(1E+38, (double)o))", span="973-973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JToken.cs"];
m29_465 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="967-967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JToken.cs"];
m29_64 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JToken.cs"];
m29_3015 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", file="JToken.cs"];
m29_3589 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8260-8260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JToken.cs"];
m29_3590 [label="return Value;", span="8262-8262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JToken.cs"];
m29_3591 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8260-8260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JToken.cs"];
m29_1262 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="2635-2635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JToken.cs"];
m29_1263 [label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="2637-2642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JToken.cs"];
m29_1264 [label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="2644-2644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JToken.cs"];
m29_1265 [label="Assert.IsNotNull(o)", span="2645-2645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JToken.cs"];
m29_1266 [label="Assert.AreEqual(''firstName'', o.firstName)", span="2647-2647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JToken.cs"];
m29_1267 [label="Assert.AreEqual(''FirstName'', o.FirstName)", span="2648-2648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JToken.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n7  [key=2, style=dotted];
n1 -> n3  [key=1, style=dashed, color=darkseagreen4, label=left];
n1 -> n4  [key=1, style=dashed, color=darkseagreen4, label=left];
n2 -> n3  [key=0, style=solid];
n2 -> n7  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n8  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n9  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n10  [key=2, style=dotted];
n6 -> n0  [key=0, style=bold, color=blue];
n11 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n7  [key=2, style=dotted];
n12 -> n14  [key=1, style=dashed, color=darkseagreen4, label=left];
n12 -> n15  [key=1, style=dashed, color=darkseagreen4, label=left];
n13 -> n14  [key=0, style=solid];
n13 -> n7  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n8  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n9  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid];
n16 -> n10  [key=2, style=dotted];
n17 -> n11  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n7  [key=2, style=dotted];
n19 -> n21  [key=1, style=dashed, color=darkseagreen4, label=left];
n19 -> n22  [key=1, style=dashed, color=darkseagreen4, label=left];
n20 -> n21  [key=0, style=solid];
n20 -> n7  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n8  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n22 -> n9  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n10  [key=2, style=dotted];
n24 -> n18  [key=0, style=bold, color=blue];
n25 -> n26  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n7  [key=2, style=dotted];
n26 -> n28  [key=1, style=dashed, color=darkseagreen4, label=left];
n26 -> n29  [key=1, style=dashed, color=darkseagreen4, label=left];
n27 -> n28  [key=0, style=solid];
n27 -> n7  [key=2, style=dotted];
n28 -> n29  [key=0, style=solid];
n28 -> n8  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n9  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n30 -> n10  [key=2, style=dotted];
n31 -> n25  [key=0, style=bold, color=blue];
n32 -> n33  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n33 -> n7  [key=2, style=dotted];
n33 -> n35  [key=1, style=dashed, color=darkseagreen4, label=left];
n33 -> n36  [key=1, style=dashed, color=darkseagreen4, label=left];
n34 -> n35  [key=0, style=solid];
n34 -> n7  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n39  [key=2, style=dotted];
n35 -> n40  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n9  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n10  [key=2, style=dotted];
n38 -> n32  [key=0, style=bold, color=blue];
n41 -> n42  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n42 -> n7  [key=2, style=dotted];
n42 -> n44  [key=1, style=dashed, color=darkseagreen4, label=left];
n42 -> n45  [key=1, style=dashed, color=darkseagreen4, label=left];
n43 -> n44  [key=0, style=solid];
n43 -> n7  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n39  [key=2, style=dotted];
n44 -> n40  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n9  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n10  [key=2, style=dotted];
n47 -> n41  [key=0, style=bold, color=blue];
n48 -> n49  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n49 -> n7  [key=2, style=dotted];
n49 -> n51  [key=1, style=dashed, color=darkseagreen4, label=left];
n49 -> n52  [key=1, style=dashed, color=darkseagreen4, label=left];
n50 -> n51  [key=0, style=solid];
n50 -> n7  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n51 -> n39  [key=2, style=dotted];
n51 -> n40  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n9  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n10  [key=2, style=dotted];
n54 -> n48  [key=0, style=bold, color=blue];
n55 -> n56  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n56 -> n7  [key=2, style=dotted];
n56 -> n58  [key=1, style=dashed, color=darkseagreen4, label=left];
n56 -> n59  [key=1, style=dashed, color=darkseagreen4, label=left];
n57 -> n58  [key=0, style=solid];
n57 -> n7  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n58 -> n8  [key=2, style=dotted];
n59 -> n60  [key=0, style=solid];
n59 -> n9  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n10  [key=2, style=dotted];
n61 -> n55  [key=0, style=bold, color=blue];
n62 -> n63  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n63 -> n7  [key=2, style=dotted];
n63 -> n65  [key=1, style=dashed, color=darkseagreen4, label=left];
n63 -> n66  [key=1, style=dashed, color=darkseagreen4, label=left];
n64 -> n65  [key=0, style=solid];
n64 -> n7  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n65 -> n39  [key=2, style=dotted];
n65 -> n40  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n66 -> n9  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n10  [key=2, style=dotted];
n68 -> n62  [key=0, style=bold, color=blue];
n69 -> n70  [key=0, style=solid];
n70 -> n71  [key=0, style=solid];
n70 -> n7  [key=2, style=dotted];
n70 -> n72  [key=1, style=dashed, color=darkseagreen4, label=left];
n70 -> n73  [key=1, style=dashed, color=darkseagreen4, label=left];
n71 -> n72  [key=0, style=solid];
n71 -> n7  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n39  [key=2, style=dotted];
n72 -> n40  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n9  [key=2, style=dotted];
n74 -> n75  [key=0, style=solid];
n74 -> n10  [key=2, style=dotted];
n75 -> n69  [key=0, style=bold, color=blue];
n76 -> n77  [key=0, style=solid];
n77 -> n78  [key=0, style=solid];
n77 -> n7  [key=2, style=dotted];
n77 -> n79  [key=1, style=dashed, color=darkseagreen4, label=left];
n77 -> n80  [key=1, style=dashed, color=darkseagreen4, label=left];
n78 -> n79  [key=0, style=solid];
n78 -> n7  [key=2, style=dotted];
n79 -> n80  [key=0, style=solid];
n79 -> n39  [key=2, style=dotted];
n79 -> n40  [key=2, style=dotted];
n80 -> n81  [key=0, style=solid];
n80 -> n9  [key=2, style=dotted];
n81 -> n82  [key=0, style=solid];
n81 -> n10  [key=2, style=dotted];
n82 -> n76  [key=0, style=bold, color=blue];
n83 -> n84  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n84 -> n95  [key=2, style=dotted];
n84 -> n86  [key=1, style=dashed, color=darkseagreen4, label=p1];
n84 -> n87  [key=1, style=dashed, color=darkseagreen4, label=p1];
n84 -> n89  [key=1, style=dashed, color=darkseagreen4, label=p1];
n84 -> n90  [key=1, style=dashed, color=darkseagreen4, label=p1];
n84 -> n92  [key=1, style=dashed, color=darkseagreen4, label=p1];
n84 -> n93  [key=1, style=dashed, color=darkseagreen4, label=p1];
n85 -> n86  [key=0, style=solid];
n85 -> n95  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid];
n86 -> n8  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n87 -> n96  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n8  [key=2, style=dotted];
n90 -> n91  [key=0, style=solid];
n90 -> n96  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n92 -> n8  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n93 -> n96  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n97  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid];
n91 -> n98  [key=2, style=dotted];
n94 -> n83  [key=0, style=bold, color=blue];
n99 -> n100  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n100 -> n113  [key=2, style=dotted];
n100 -> n102  [key=1, style=dashed, color=darkseagreen4, label=c1];
n100 -> n103  [key=1, style=dashed, color=darkseagreen4, label=c1];
n100 -> n104  [key=1, style=dashed, color=darkseagreen4, label=c1];
n100 -> n106  [key=1, style=dashed, color=darkseagreen4, label=c1];
n100 -> n107  [key=1, style=dashed, color=darkseagreen4, label=c1];
n100 -> n109  [key=1, style=dashed, color=darkseagreen4, label=c1];
n100 -> n110  [key=1, style=dashed, color=darkseagreen4, label=c1];
n100 -> n111  [key=1, style=dashed, color=darkseagreen4, label=c1];
n101 -> n102  [key=0, style=solid];
n101 -> n113  [key=2, style=dotted];
n102 -> n103  [key=0, style=solid];
n102 -> n8  [key=2, style=dotted];
n103 -> n104  [key=0, style=solid];
n103 -> n96  [key=2, style=dotted];
n104 -> n105  [key=0, style=solid];
n104 -> n114  [key=2, style=dotted];
n104 -> n115  [key=2, style=dotted];
n104 -> n117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n106 -> n107  [key=0, style=solid];
n106 -> n8  [key=2, style=dotted];
n107 -> n108  [key=0, style=solid];
n107 -> n96  [key=2, style=dotted];
n109 -> n110  [key=0, style=solid];
n109 -> n39  [key=2, style=dotted];
n109 -> n40  [key=2, style=dotted];
n110 -> n111  [key=0, style=solid];
n110 -> n96  [key=2, style=dotted];
n111 -> n112  [key=0, style=solid];
n111 -> n114  [key=2, style=dotted];
n111 -> n115  [key=2, style=dotted];
n111 -> n120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n105 -> n106  [key=0, style=solid];
n105 -> n116  [key=2, style=dotted];
n117 -> n118  [key=0, style=solid];
n108 -> n109  [key=0, style=solid];
n108 -> n113  [key=2, style=dotted];
n112 -> n99  [key=0, style=bold, color=blue];
n120 -> n121  [key=0, style=solid];
n118 -> n119  [key=0, style=solid];
n119 -> n117  [key=0, style=bold, color=blue];
n121 -> n122  [key=0, style=solid];
n122 -> n120  [key=0, style=bold, color=blue];
n123 -> n124  [key=0, style=solid];
n124 -> n125  [key=0, style=solid];
n124 -> n116  [key=2, style=dotted];
n124 -> n126  [key=1, style=dashed, color=darkseagreen4, label=c];
n124 -> n127  [key=1, style=dashed, color=darkseagreen4, label=c];
n125 -> n126  [key=0, style=solid];
n125 -> n116  [key=2, style=dotted];
n125 -> n8  [key=2, style=dotted];
n126 -> n127  [key=0, style=solid];
n126 -> n96  [key=2, style=dotted];
n127 -> n128  [key=0, style=solid];
n127 -> n96  [key=2, style=dotted];
n128 -> n129  [key=0, style=solid];
n128 -> n139  [key=2, style=dotted];
n128 -> n130  [key=1, style=dashed, color=darkseagreen4, label=o];
n129 -> n130  [key=0, style=solid];
n129 -> n139  [key=2, style=dotted];
n129 -> n8  [key=2, style=dotted];
n130 -> n131  [key=0, style=solid];
n130 -> n96  [key=2, style=dotted];
n131 -> n132  [key=0, style=solid];
n131 -> n140  [key=2, style=dotted];
n131 -> n133  [key=1, style=dashed, color=darkseagreen4, label=a];
n132 -> n133  [key=0, style=solid];
n132 -> n140  [key=2, style=dotted];
n132 -> n8  [key=2, style=dotted];
n133 -> n134  [key=0, style=solid];
n133 -> n96  [key=2, style=dotted];
n134 -> n135  [key=0, style=solid];
n134 -> n97  [key=2, style=dotted];
n134 -> n136  [key=1, style=dashed, color=darkseagreen4, label=p];
n134 -> n137  [key=1, style=dashed, color=darkseagreen4, label=p];
n135 -> n136  [key=0, style=solid];
n135 -> n97  [key=2, style=dotted];
n135 -> n8  [key=2, style=dotted];
n136 -> n137  [key=0, style=solid];
n136 -> n96  [key=2, style=dotted];
n137 -> n138  [key=0, style=solid];
n137 -> n96  [key=2, style=dotted];
n138 -> n123  [key=0, style=bold, color=blue];
n141 -> n142  [key=0, style=solid];
n142 -> n143  [key=0, style=solid];
n142 -> n116  [key=2, style=dotted];
n142 -> n144  [key=1, style=dashed, color=darkseagreen4, label=c];
n142 -> n145  [key=1, style=dashed, color=darkseagreen4, label=c];
n143 -> n144  [key=0, style=solid];
n143 -> n8  [key=2, style=dotted];
n144 -> n145  [key=0, style=solid];
n144 -> n96  [key=2, style=dotted];
n145 -> n146  [key=0, style=solid];
n145 -> n96  [key=2, style=dotted];
n146 -> n147  [key=0, style=solid];
n146 -> n139  [key=2, style=dotted];
n146 -> n148  [key=1, style=dashed, color=darkseagreen4, label=o];
n147 -> n148  [key=0, style=solid];
n147 -> n8  [key=2, style=dotted];
n148 -> n149  [key=0, style=solid];
n148 -> n96  [key=2, style=dotted];
n149 -> n150  [key=0, style=solid];
n149 -> n140  [key=2, style=dotted];
n149 -> n151  [key=1, style=dashed, color=darkseagreen4, label=a];
n150 -> n151  [key=0, style=solid];
n150 -> n8  [key=2, style=dotted];
n151 -> n152  [key=0, style=solid];
n151 -> n96  [key=2, style=dotted];
n152 -> n153  [key=0, style=solid];
n152 -> n97  [key=2, style=dotted];
n152 -> n154  [key=1, style=dashed, color=darkseagreen4, label=p];
n152 -> n155  [key=1, style=dashed, color=darkseagreen4, label=p];
n153 -> n154  [key=0, style=solid];
n153 -> n8  [key=2, style=dotted];
n154 -> n155  [key=0, style=solid];
n154 -> n96  [key=2, style=dotted];
n155 -> n156  [key=0, style=solid];
n155 -> n96  [key=2, style=dotted];
n156 -> n141  [key=0, style=bold, color=blue];
d3 -> d4  [key=0, style=solid, color=green];
d3 -> d12  [key=2, style=dotted, color=green];
d3 -> d5  [key=1, style=dashed, color=green, label=v];
d16 -> d3  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter"];
d16 -> d2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter"];
d0 -> d3  [key=1, style=dashed, color=green, label=bool];
d0 -> d1  [key=0, style=solid];
d0 -> d5  [key=0, style=bold, color=crimson];
d0 -> d8  [key=0, style=bold, color=crimson];
d0 -> d9  [key=1, style=dashed, color=darkseagreen4, label=bool];
d1 -> d3  [key=1, style=dashed, color=green, label=t];
d1 -> d2  [key=0, style=solid];
d1 -> d11  [key=0, style=solid];
d1 -> d6  [key=1, style=dashed, color=darkseagreen4, label=t];
d1 -> d7  [key=1, style=dashed, color=darkseagreen4, label=t];
d1 -> d10  [key=1, style=dashed, color=darkseagreen4, label=t];
d2 -> d3  [key=0, style=solid, color=green];
d2 -> d6  [key=0, style=solid];
d4 -> d1  [key=0, style=solid];
d4 -> d5  [key=0, style=solid];
d5 -> d1  [key=0, style=solid];
d11 -> d0  [key=0, style=bold, color=blue];
d8 -> d7  [key=0, style=solid];
d9 -> d1  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d7 -> d1  [key=0, style=solid];
d7 -> d8  [key=0, style=solid];
d6 -> d9  [key=0, style=solid];
d6 -> d7  [key=0, style=solid];
d10 -> d11  [key=0, style=solid];
d10 -> d13  [key=2, style=dotted];
d10 -> d14  [key=2, style=dotted];
d10 -> d15  [key=2, style=dotted];
m0_31 -> m0_36  [key=0, style=solid];
m0_31 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_31 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_31 -> m0_7  [key=3, color=darkorchid, style=bold, label="Parameter variable int index"];
m0_31 -> m0_22  [key=3, color=darkorchid, style=bold, label="Parameter variable int index"];
m0_31 -> m0_8  [key=3, color=darkorchid, style=bold, label="Parameter variable int stopIndex"];
m0_31 -> m0_17  [key=3, color=darkorchid, style=bold, label="Parameter variable bool positiveStep"];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_38  [key=0, style=solid];
m0_37 -> m0_39  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_31  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_21  [key=0, style=bold, color=crimson];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>"];
m0_0 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_0 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_27  [key=0, style=solid];
m0_3 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_23 -> m0_24  [key=0, style=solid, color=red];
m0_23 -> m0_3  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_3  [key=0, style=solid];
m0_2 -> m0_27  [key=0, style=solid];
m0_2 -> m0_28  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_4 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_4 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_4 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_4 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_4 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_4 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_28  [key=2, style=dotted];
m0_26 -> d14  [key=2, style=dotted];
m0_26 -> m0_35  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_25  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=startIndex];
m0_7 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=startIndex];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=stopIndex];
m0_8 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=stopIndex];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=startIndex];
m0_10 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=startIndex];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=stopIndex];
m0_12 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=stopIndex];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_30  [key=2, style=dotted];
m0_14 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=startIndex];
m0_14 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=startIndex];
m0_14 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=startIndex];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_30  [key=2, style=dotted];
m0_16 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=stopIndex];
m0_16 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=stopIndex];
m0_16 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label=stopIndex];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=stepCount];
m0_6 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=stepCount];
m0_6 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=stepCount];
m0_6 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=stepCount];
m0_6 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label=stepCount];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_29  [key=2, style=dotted];
m0_13 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=startIndex];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label=positiveStep];
m0_22 -> m0_20  [key=0, style=solid];
m0_22 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_22 -> m0_7  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m0_22 -> m0_6  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_29  [key=2, style=dotted];
m0_15 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=stopIndex];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_23  [key=0, style=solid];
m0_18 -> m0_31  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_19 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_3  [key=0, style=solid];
m0_20 -> m0_31  [key=2, style=dotted];
m0_24 -> m0_27  [key=0, style=solid, color=red];
m0_24 -> m0_28  [key=2, style=dotted, color=red];
m0_24 -> m0_32  [key=2, style=dotted, color=red];
m0_24 -> m0_33  [key=2, style=dotted, color=red];
m0_27 -> m0_0  [key=0, style=bold, color=blue];
m0_40 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter"];
m0_40 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter"];
m0_40 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter"];
m0_40 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter"];
m0_40 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter"];
m0_40 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter"];
m0_40 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter"];
m0_40 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter"];
m0_40 -> m0_24  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter"];
m1_96 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_96 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_96 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_16  [key=2, style=dotted];
m1_182 -> m1_182  [key=1, style=dashed, color=darkseagreen4, label=size];
m1_50 -> m1_231  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_233 -> m1_251  [key=0, style=solid];
m1_233 -> m1_189  [key=2, style=dotted];
m1_235 -> m1_251  [key=0, style=solid];
m1_235 -> m1_96  [key=2, style=dotted];
m1_237 -> m1_251  [key=0, style=solid];
m1_237 -> m1_183  [key=2, style=dotted];
m1_239 -> m1_251  [key=0, style=solid];
m1_239 -> m1_195  [key=2, style=dotted];
m1_241 -> m1_251  [key=0, style=solid];
m1_241 -> m1_176  [key=2, style=dotted];
m1_243 -> m1_251  [key=0, style=solid];
m1_243 -> m1_183  [key=2, style=dotted];
m1_245 -> m1_251  [key=0, style=solid];
m1_245 -> m1_225  [key=2, style=dotted];
m1_247 -> m1_251  [key=0, style=solid];
m1_247 -> m1_201  [key=2, style=dotted];
m1_249 -> m1_251  [key=0, style=solid];
m1_249 -> m1_217  [key=2, style=dotted];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_96  [key=2, style=dotted];
m1_231 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_235  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_237  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_239  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_241  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_243  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_245  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_247  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_249  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_250  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_232  [key=0, style=solid];
m1_231 -> m1_252  [key=2, style=dotted];
m1_231 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_236  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_238  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_240  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_242  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_244  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_231 -> m1_248  [key=1, style=dashed, color=darkseagreen4, label=t];
m1_232 -> m1_233  [key=0, style=solid];
m1_232 -> m1_234  [key=0, style=solid];
m1_232 -> m1_253  [key=2, style=dotted];
m1_234 -> m1_235  [key=0, style=solid];
m1_234 -> m1_236  [key=0, style=solid];
m1_234 -> m1_254  [key=2, style=dotted];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_238  [key=0, style=solid];
m1_236 -> m1_255  [key=2, style=dotted];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_240  [key=0, style=solid];
m1_238 -> m1_256  [key=2, style=dotted];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_242  [key=0, style=solid];
m1_240 -> m1_257  [key=2, style=dotted];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_244  [key=0, style=solid];
m1_242 -> m1_258  [key=2, style=dotted];
m1_244 -> m1_245  [key=0, style=solid];
m1_244 -> m1_246  [key=0, style=solid];
m1_244 -> m1_259  [key=2, style=dotted];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_248  [key=0, style=solid];
m1_246 -> m1_258  [key=2, style=dotted];
m1_248 -> m1_249  [key=0, style=solid];
m1_248 -> m1_250  [key=0, style=solid];
m1_248 -> m1_258  [key=2, style=dotted];
m1_251 -> m1_50  [key=0, style=bold, color=blue];
m1_217 -> m1_221  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_217 -> m1_218  [key=0, style=solid];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_108  [key=2, style=dotted];
m1_220 -> m1_221  [key=0, style=solid];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_110  [key=2, style=dotted];
m1_221 -> m1_111  [key=2, style=dotted];
m1_218 -> m1_219  [key=0, style=solid];
m1_218 -> m1_220  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_218 -> m1_221  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_218 -> m1_224  [key=2, style=dotted];
m1_218 -> m1_222  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_222 -> m1_223  [key=0, style=solid];
m1_223 -> m1_217  [key=0, style=bold, color=blue];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_125  [key=0, style=solid];
m1_121 -> m1_126  [key=2, style=dotted];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_124  [key=0, style=solid];
m1_123 -> m1_121  [key=0, style=bold, color=blue];
m1_123 -> m1_125  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_170 -> m1_186  [key=0, style=solid];
m1_76 -> m1_82  [key=0, style=solid];
m1_76 -> m1_99  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_18 -> m1_27  [key=0, style=solid];
m1_18 -> m1_37  [key=0, style=solid];
m1_18 -> m1_40  [key=0, style=solid];
m1_18 -> m1_43  [key=0, style=solid];
m1_18 -> m1_46  [key=0, style=solid];
m1_18 -> m1_49  [key=0, style=solid];
m1_18 -> m1_52  [key=0, style=solid];
m1_18 -> m1_54  [key=0, style=solid];
m1_18 -> m1_67  [key=0, style=solid];
m1_18 -> m1_73  [key=0, style=solid];
m1_18 -> m1_77  [key=0, style=solid];
m1_18 -> m1_81  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_21 -> m1_18  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_83  [key=2, style=dotted];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_115  [key=0, style=solid];
m1_115 -> m1_130  [key=0, style=solid];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_120  [key=2, style=dotted];
m1_130 -> m1_112  [key=2, style=dotted];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_130 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_132 -> m1_134  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_137  [key=0, style=solid];
m1_132 -> m1_135  [key=1, style=dashed, color=darkseagreen4, label=p];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_133  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m1_133 -> m1_16  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_133  [key=0, style=solid];
m1_131 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label=bases];
m1_131 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label=bases];
m1_131 -> m1_131  [key=3, color=darkorchid, style=bold, label="Local variable int bases"];
m1_134 -> m1_115  [key=0, style=bold, color=blue];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_16  [key=2, style=dotted];
m1_134 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=size];
m1_187 -> m1_183  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=2, style=dotted];
m1_10 -> m1_8  [key=0, style=bold, color=blue];
m1_108 -> m1_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_143  [key=0, style=solid];
m1_108 -> m1_145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_150  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_154  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_108 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_108 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_108 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_108 -> m1_85  [key=3, color=darkorchid, style=bold, label="Parameter variable int byteCount"];
m1_149 -> m1_150  [key=0, style=solid];
m1_149 -> m1_135  [key=2, style=dotted];
m1_149 -> m1_149  [key=1, style=dashed, color=darkseagreen4, label=size];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_139  [key=2, style=dotted];
m1_145 -> m1_149  [key=0, style=solid];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_145  [key=1, style=dashed, color=darkseagreen4, label=size];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_144  [key=0, style=solid];
m1_148 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_147 -> m1_149  [key=0, style=solid];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_16  [key=2, style=dotted];
m1_147 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label=size];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_170  [key=2, style=dotted];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_154  [key=0, style=solid];
m1_151 -> m1_171  [key=2, style=dotted];
m1_151 -> m1_186  [key=0, style=solid];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_172  [key=2, style=dotted];
m1_153 -> m1_186  [key=0, style=solid];
m1_143 -> m1_145  [key=1, style=dashed, color=darkseagreen4, label=containerAttribute];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_169  [key=2, style=dotted];
m1_143 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_143 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_143 -> m1_30  [key=3, color=darkorchid, style=bold, label="Local variable ulong index"];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_71  [key=2, style=dotted];
m1_146 -> m1_88  [key=2, style=dotted];
m1_146 -> m1_121  [key=2, style=dotted];
m1_146 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label=size];
m1_154 -> m1_168  [key=0, style=solid];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_173  [key=2, style=dotted];
m1_154 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label=method];
m1_154 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label=method];
m1_154 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label=method];
m1_154 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label=method];
m1_154 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label=method];
m1_154 -> m1_162  [key=1, style=dashed, color=darkseagreen4, label=method];
m1_154 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label=method];
m1_154 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label=method];
m1_154 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label=method];
m1_154 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label=method];
m1_154 -> m1_167  [key=1, style=dashed, color=darkseagreen4, label=method];
m1_158 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_160  [key=0, style=solid];
m1_158 -> m1_175  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_159 -> m1_162  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_159 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_160 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_162  [key=0, style=solid];
m1_160 -> m1_175  [key=2, style=dotted];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_187  [key=2, style=dotted];
m1_162 -> m1_162  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_164  [key=0, style=solid];
m1_162 -> m1_175  [key=2, style=dotted];
m1_162 -> m1_124  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_186  [key=0, style=solid];
m1_164 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_166  [key=0, style=solid];
m1_164 -> m1_175  [key=2, style=dotted];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_186  [key=0, style=solid];
m1_166 -> m1_154  [key=0, style=solid];
m1_166 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_175  [key=2, style=dotted];
m1_167 -> m1_154  [key=0, style=solid];
m1_167 -> m1_168  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_146  [key=0, style=solid];
m1_144 -> m1_149  [key=0, style=solid];
m1_144 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_155 -> m1_154  [key=0, style=solid];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_186  [key=0, style=solid];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m1_157 -> m1_162  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m1_157 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m1_157 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m1_157 -> m1_174  [key=2, style=dotted];
m1_157 -> m1_186  [key=0, style=solid];
m1_156 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m1_156 -> m1_157  [key=0, style=solid];
m1_168 -> m1_108  [key=0, style=bold, color=blue];
m1_168 -> m1_186  [key=0, style=solid];
m1_87 -> m1_85  [key=0, style=bold, color=blue];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_114  [key=0, style=bold, color=blue];
m1_126 -> m1_127  [key=0, style=solid];
m1_127 -> m1_124  [key=0, style=bold, color=blue];
m1_127 -> m1_128  [key=0, style=solid];
m1_16 -> m1_128  [key=0, style=solid];
m1_16 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_16 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_16 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_16 -> m1_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_16 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_16 -> m1_185  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_16 -> m1_12  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonToken t"];
m1_16 -> m1_144  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonToken t"];
m1_16 -> m1_131  [key=3, color=darkorchid, style=bold, label="method methodReturn int CalculateSize"];
m1_16 -> m1_155  [key=3, color=darkorchid, style=bold, label="method methodReturn int CalculateSize"];
m1_16 -> m1_133  [key=3, color=darkorchid, style=bold, label="method methodReturn int CalculateSize"];
m1_16 -> m1_30  [key=3, color=darkorchid, style=bold, label="method methodReturn int CalculateSize"];
m1_16 -> m1_177  [key=3, color=darkorchid, style=bold, label="method methodReturn int CalculateSize"];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_140  [key=0, style=solid];
m1_128 -> m1_152  [key=0, style=solid];
m1_128 -> m1_154  [key=0, style=solid];
m1_128 -> m1_156  [key=0, style=solid];
m1_128 -> m1_158  [key=0, style=solid];
m1_128 -> m1_164  [key=0, style=solid];
m1_128 -> m1_166  [key=0, style=solid];
m1_128 -> m1_169  [key=0, style=solid];
m1_128 -> m1_171  [key=0, style=solid];
m1_128 -> m1_176  [key=0, style=solid];
m1_128 -> m1_178  [key=0, style=solid];
m1_128 -> m1_185  [key=0, style=solid];
m1_128 -> m1_76  [key=2, style=dotted];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_144  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_141 -> m1_150  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_141 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_141 -> m1_139  [key=0, style=bold, color=blue];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_172 -> m1_175  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_181  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_179 -> m1_182  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_179 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_179 -> m1_184  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_100  [key=2, style=dotted];
m1_185 -> m1_101  [key=2, style=dotted];
m1_185 -> d15  [key=2, style=dotted];
m1_185 -> m1_108  [key=2, style=dotted];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_127  [key=0, style=bold, color=blue];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_142  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_171 -> m1_172  [key=0, style=solid];
m1_176 -> m1_177  [key=0, style=solid];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_108  [key=2, style=dotted];
m1_138 -> m1_139  [key=0, style=solid];
m1_136 -> m1_132  [key=0, style=solid];
m1_136 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label=bases];
m1_136 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label=bases];
m1_136 -> m1_138  [key=2, style=dotted];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label=bases];
m1_137 -> m1_139  [key=1, style=dashed, color=darkseagreen4, label=bases];
m1_137 -> m1_135  [key=0, style=bold, color=blue];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_16  [key=2, style=dotted];
m1_135 -> m1_135  [key=1, style=dashed, color=darkseagreen4, label=size];
m1_139 -> m1_186  [key=0, style=solid];
m1_139 -> m1_140  [key=0, style=solid];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_145  [key=1, style=dashed, color=darkseagreen4, label=size];
m1_142 -> m1_149  [key=1, style=dashed, color=darkseagreen4, label=size];
m1_142 -> m1_131  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m1_142 -> m1_121  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m1_142 -> m1_16  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m1_173 -> m1_174  [key=0, style=solid];
m1_174 -> m1_175  [key=0, style=solid];
m1_175 -> m1_186  [key=0, style=solid];
m1_175 -> m1_270  [key=0, style=solid];
m1_175 -> m1_272  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m1_175 -> m1_273  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m1_175 -> m1_274  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m1_175 -> m1_275  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m1_175 -> m1_276  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m1_175 -> m1_277  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m1_175 -> m1_278  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m1_175 -> m1_279  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m1_175 -> m1_280  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_175 -> m1_281  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo[]"];
m1_175 -> m1_282  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m1_175 -> m1_283  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo[]"];
m1_175 -> m1_284  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m1_175 -> m1_285  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_177 -> m1_186  [key=0, style=solid];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_177 -> m1_182  [key=2, style=dotted];
m1_177 -> m1_180  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_30  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m1_180 -> m1_16  [key=3, color=darkorchid, style=bold, label="Local variable int size"];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_16  [key=2, style=dotted];
m1_181 -> m1_181  [key=1, style=dashed, color=darkseagreen4, label=size];
m1_181 -> m1_176  [key=0, style=bold, color=blue];
m1_183 -> m1_184  [key=0, style=solid];
m1_184 -> m1_186  [key=0, style=solid];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_188  [key=2, style=dotted];
m1_186 -> m1_16  [key=0, style=bold, color=blue];
m1_186 -> m1_187  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_72 -> m1_82  [key=0, style=solid];
m1_72 -> m1_99  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_108  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_110  [key=2, style=dotted];
m1_100 -> m1_111  [key=2, style=dotted];
m1_102 -> m1_105  [key=0, style=solid];
m1_102 -> m1_114  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid, color=red];
m1_104 -> m1_115  [key=2, style=dotted];
m1_104 -> m1_83  [key=2, style=dotted, color=red];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_97 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_97 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_97 -> m1_107  [key=2, style=dotted];
m1_97 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_97 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_97 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_109  [key=2, style=dotted];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_103  [key=0, style=solid];
m1_101 -> m1_112  [key=2, style=dotted];
m1_101 -> m1_113  [key=2, style=dotted];
m1_101 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_108  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid, color=red];
m1_103 -> m1_105  [key=0, style=solid];
m1_106 -> m1_96  [key=0, style=bold, color=blue];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_86  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=2, style=dotted];
m1_6 -> m1_4  [key=0, style=bold, color=blue];
m1_85 -> m1_103  [key=0, style=solid];
m1_85 -> m1_104  [key=1, style=dashed, color=red, label="int?"];
m1_85 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_85 -> m1_24  [key=3, color=darkorchid, style=bold, label="Parameter variable int? calculatedlengthPrefix"];
m1_85 -> m1_86  [key=0, style=solid];
m1_107 -> m1_85  [key=0, style=bold, color=blue];
m1_195 -> m1_196  [key=0, style=solid];
m1_197 -> m1_198  [key=0, style=solid];
m1_197 -> m1_108  [key=2, style=dotted];
m1_196 -> m1_197  [key=0, style=solid];
m1_196 -> m1_200  [key=2, style=dotted];
m1_196 -> m1_198  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_198 -> m1_199  [key=0, style=solid];
m1_199 -> m1_195  [key=0, style=bold, color=blue];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_204  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_108  [key=2, style=dotted];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_210  [key=2, style=dotted];
m1_202 -> m1_207  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_202 -> m1_208  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_211  [key=2, style=dotted];
m1_204 -> m1_206  [key=1, style=dashed, color=darkseagreen4, label=constructorInfo];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_214  [key=1, style=dashed, color=darkseagreen4, label="object[]"];
m1_208 -> m1_209  [key=0, style=solid];
m1_205 -> m1_208  [key=0, style=solid];
m1_205 -> m1_206  [key=0, style=solid];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_212  [key=2, style=dotted];
m1_206 -> m1_214  [key=1, style=dashed, color=darkseagreen4, label=methodCall];
m1_209 -> m1_201  [key=0, style=bold, color=blue];
m1_47 -> m1_48  [key=0, style=solid];
m1_53 -> m1_44  [key=3, color=darkorchid, style=bold, label="Parameter variable int byteCount"];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_53 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_53 -> m1_67  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_53 -> m1_82  [key=0, style=solid];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_72  [key=2, style=dotted];
m1_55 -> m1_73  [key=2, style=dotted];
m1_55 -> m1_74  [key=2, style=dotted];
m1_55 -> m1_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_55 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label=defaultMembers];
m1_55 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_55 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_55 -> m1_64  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_58  [key=0, style=solid];
m1_59 -> m1_76  [key=2, style=dotted];
m1_59 -> m1_61  [key=0, style=solid];
m1_68 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_73  [key=2, style=dotted];
m1_68 -> m1_74  [key=2, style=dotted];
m1_68 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_71  [key=2, style=dotted];
m1_54 -> m1_64  [key=1, style=dashed, color=darkseagreen4, label=dataContractAttribute];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_72  [key=2, style=dotted];
m1_56 -> m1_73  [key=2, style=dotted];
m1_56 -> m1_74  [key=2, style=dotted];
m1_56 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_56 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label=allMembers];
m1_56 -> m1_30  [key=3, color=darkorchid, style=bold, label="Local variable long ticks"];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_69  [key=0, style=solid];
m1_67 -> m1_80  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_62  [key=0, style=solid];
m1_60 -> m1_77  [key=2, style=dotted];
m1_60 -> m1_63  [key=0, style=solid];
m1_60 -> m1_95  [key=2, style=dotted];
m1_60 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m1_58 -> m1_66  [key=0, style=solid];
m1_58 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=member];
m1_58 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m1_58 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m1_58 -> m1_64  [key=1, style=dashed, color=darkseagreen4, label=member];
m1_58 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label=member];
m1_57 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_75  [key=2, style=dotted];
m1_57 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m1_57 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m1_57 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m1_57 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m1_57 -> m1_64  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label=data];
m1_64 -> m1_58  [key=0, style=solid];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_79  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_82  [key=0, style=solid];
m1_66 -> m1_91  [key=2, style=dotted];
m1_61 -> m1_58  [key=0, style=solid];
m1_61 -> m1_78  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_63  [key=0, style=solid];
m1_62 -> m1_64  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_79  [key=2, style=dotted];
m1_62 -> m1_96  [key=2, style=dotted];
m1_62 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m1_63 -> m1_58  [key=0, style=solid];
m1_63 -> m1_78  [key=2, style=dotted];
m1_63 -> m1_66  [key=0, style=solid];
m1_63 -> m1_97  [key=2, style=dotted];
m1_65 -> m1_58  [key=0, style=solid];
m1_65 -> m1_78  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_98  [key=2, style=dotted];
m1_65 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m1_70 -> m1_53  [key=0, style=bold, color=blue];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_83  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_17 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_17 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_17 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_17 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_17 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_17 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_17 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_17 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_17 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_17 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_17 -> m1_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_17 -> m1_12  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonToken t"];
m1_17 -> m1_31  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonToken t"];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_28 -> m1_30  [key=0, style=solid];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_45  [key=0, style=solid, color=green];
m1_38 -> m1_49  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_22  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid, color=green];
m1_44 -> m1_27  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_100  [key=2, style=dotted];
m1_81 -> m1_101  [key=2, style=dotted];
m1_81 -> d15  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>"];
m1_27 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>"];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_22  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_32  [key=0, style=bold, color=blue];
m1_49 -> m1_50  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_77 -> m1_78  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_26  [key=0, style=solid];
m1_22 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_22 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_84  [key=2, style=dotted];
m1_23 -> m1_25  [key=0, style=solid];
m1_26 -> m1_82  [key=0, style=solid];
m1_26 -> m1_86  [key=2, style=dotted];
m1_26 -> m1_22  [key=0, style=bold, color=blue];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_85  [key=2, style=dotted];
m1_24 -> m1_26  [key=0, style=solid];
m1_25 -> m1_22  [key=0, style=solid];
m1_25 -> m1_17  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_83  [key=2, style=dotted];
m1_29 -> m1_31  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_36  [key=0, style=solid];
m1_31 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_31 -> m1_27  [key=0, style=bold, color=blue];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_30 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_30 -> m1_30  [key=3, color=darkorchid, style=bold, label="Local variable ulong index"];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_87  [key=2, style=dotted];
m1_33 -> m1_88  [key=2, style=dotted];
m1_33 -> m1_85  [key=2, style=dotted];
m1_33 -> m1_35  [key=0, style=solid];
m1_35 -> m1_31  [key=0, style=solid];
m1_35 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=index];
m1_35 -> m1_36  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_84  [key=2, style=dotted];
m1_32 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_32 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_36 -> m1_82  [key=0, style=solid];
m1_36 -> m1_86  [key=2, style=dotted];
m1_36 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=key];
m1_36 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label=key];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_0  [key=2, style=dotted];
m1_36 -> m1_48  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_17  [key=2, style=dotted];
m1_34 -> m1_46  [key=0, style=solid];
m1_34 -> m1_47  [key=2, style=dotted];
m1_39 -> m1_82  [key=0, style=solid];
m1_39 -> m1_89  [key=2, style=dotted];
m1_39 -> m1_83  [key=2, style=dotted];
m1_39 -> m1_45  [key=1, style=dashed, color=green, label=contract];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_50  [key=2, style=dotted];
m1_39 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_42 -> m1_82  [key=0, style=solid];
m1_42 -> m1_90  [key=2, style=dotted];
m1_42 -> m1_91  [key=2, style=dotted];
m1_42 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=updatedCache];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_51  [key=2, style=dotted];
m1_42 -> m1_52  [key=2, style=dotted];
m1_45 -> m1_82  [key=0, style=solid];
m1_45 -> m1_92  [key=2, style=dotted];
m1_45 -> m1_93  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid, color=green];
m1_48 -> m1_82  [key=0, style=solid];
m1_48 -> m1_85  [key=2, style=dotted];
m1_51 -> m1_82  [key=0, style=solid];
m1_51 -> m1_94  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_86  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_85  [key=2, style=dotted];
m1_80 -> m1_82  [key=0, style=solid];
m1_80 -> m1_85  [key=2, style=dotted];
m1_82 -> m1_17  [key=0, style=bold, color=blue];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_84  [key=2, style=dotted];
m1_118 -> m1_116  [key=0, style=bold, color=blue];
m1_225 -> m1_226  [key=0, style=solid];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_108  [key=2, style=dotted];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_230  [key=2, style=dotted];
m1_226 -> m1_228  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_228 -> m1_229  [key=0, style=solid];
m1_229 -> m1_225  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_398  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_398  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_307 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_307 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_307 -> m1_359  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_307 -> m1_316  [key=0, style=solid];
m1_307 -> m1_317  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_307 -> m1_319  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_307 -> m1_320  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_307 -> m1_323  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_307 -> m1_325  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_307 -> m1_326  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_307 -> m1_332  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_307 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m1_307 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_307 -> m1_348  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_307 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_307 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_309  [key=2, style=dotted];
m1_333 -> m1_334  [key=0, style=solid];
m1_333 -> m1_364  [key=2, style=dotted];
m1_341 -> m1_342  [key=0, style=solid];
m1_341 -> m1_343  [key=0, style=solid];
m1_358 -> m1_359  [key=0, style=solid];
m1_358 -> m1_367  [key=2, style=dotted];
m1_359 -> m1_360  [key=0, style=solid];
m1_359 -> m1_368  [key=2, style=dotted];
m1_316 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_359  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_317  [key=0, style=solid];
m1_316 -> m1_362  [key=2, style=dotted];
m1_316 -> m1_319  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_335  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_337  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_338  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_348  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_352  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_353  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_355  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_356  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_357  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_316 -> m1_360  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_317 -> m1_318  [key=0, style=solid];
m1_317 -> m1_363  [key=2, style=dotted];
m1_319 -> m1_320  [key=0, style=solid];
m1_319 -> m1_138  [key=2, style=dotted];
m1_332 -> m1_333  [key=0, style=solid];
m1_331 -> m1_333  [key=0, style=solid];
m1_329 -> m1_333  [key=0, style=solid];
m1_334 -> m1_335  [key=0, style=solid];
m1_334 -> m1_336  [key=0, style=solid];
m1_340 -> m1_341  [key=0, style=solid];
m1_340 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m1_340 -> m1_348  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m1_342 -> m1_343  [key=0, style=solid];
m1_342 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m1_342 -> m1_348  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m1_343 -> m1_344  [key=0, style=solid];
m1_343 -> m1_345  [key=0, style=solid];
m1_357 -> m1_358  [key=0, style=solid];
m1_360 -> m1_361  [key=0, style=solid];
m1_320 -> m1_71  [key=2, style=dotted];
m1_320 -> m1_321  [key=0, style=solid];
m1_320 -> m1_322  [key=1, style=dashed, color=darkseagreen4, label=dataContractAttribute];
m1_323 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m1_323 -> m1_325  [key=0, style=solid];
m1_323 -> m1_79  [key=2, style=dotted];
m1_323 -> m1_330  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m1_323 -> m1_336  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m1_323 -> m1_337  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m1_323 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m1_323 -> m1_345  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m1_325 -> m1_329  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m1_325 -> m1_334  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m1_325 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m1_325 -> m1_357  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m1_325 -> m1_326  [key=0, style=solid];
m1_325 -> m1_79  [key=2, style=dotted];
m1_325 -> m1_328  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m1_325 -> m1_335  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m1_325 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m1_325 -> m1_352  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m1_325 -> m1_353  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m1_325 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m1_325 -> m1_355  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m1_325 -> m1_356  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m1_326 -> m1_327  [key=0, style=solid];
m1_326 -> m1_79  [key=2, style=dotted];
m1_326 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=hasIgnoreAttribute];
m1_339 -> m1_340  [key=0, style=solid];
m1_347 -> m1_348  [key=0, style=solid];
m1_347 -> m1_365  [key=2, style=dotted];
m1_348 -> m1_349  [key=0, style=solid];
m1_348 -> m1_366  [key=2, style=dotted];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_363  [key=2, style=dotted];
m1_349 -> m1_138  [key=2, style=dotted];
m1_350 -> m1_351  [key=0, style=solid];
m1_350 -> m1_79  [key=2, style=dotted];
m1_335 -> m1_339  [key=0, style=solid];
m1_337 -> m1_339  [key=0, style=solid];
m1_338 -> m1_339  [key=0, style=solid];
m1_351 -> m1_352  [key=0, style=solid];
m1_352 -> m1_353  [key=0, style=solid];
m1_353 -> m1_354  [key=0, style=solid];
m1_354 -> m1_355  [key=0, style=solid];
m1_355 -> m1_356  [key=0, style=solid];
m1_356 -> m1_357  [key=0, style=solid];
m1_330 -> m1_332  [key=0, style=solid];
m1_330 -> m1_331  [key=0, style=solid];
m1_324 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m1_324 -> m1_325  [key=0, style=solid];
m1_324 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m1_324 -> m1_337  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m1_324 -> m1_330  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m1_324 -> m1_336  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m1_324 -> m1_345  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m1_328 -> m1_329  [key=0, style=solid];
m1_328 -> m1_330  [key=0, style=solid];
m1_336 -> m1_337  [key=0, style=solid];
m1_336 -> m1_338  [key=0, style=solid];
m1_344 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m1_344 -> m1_348  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m1_344 -> m1_345  [key=0, style=solid];
m1_345 -> m1_347  [key=0, style=solid];
m1_345 -> m1_346  [key=0, style=solid];
m1_321 -> m1_322  [key=0, style=solid];
m1_322 -> m1_323  [key=0, style=solid];
m1_322 -> m1_324  [key=0, style=solid];
m1_327 -> m1_328  [key=0, style=solid];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_348  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m1_361 -> m1_307  [key=0, style=bold, color=blue];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_118  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonToken"];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_16  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_17  [key=2, style=dotted];
m1_15 -> m1_12  [key=0, style=bold, color=blue];
m1_288 -> m1_290  [key=0, style=solid];
m1_288 -> m1_291  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_288 -> m1_292  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_290 -> m1_291  [key=0, style=solid];
m1_290 -> m1_292  [key=0, style=solid];
m1_291 -> m1_293  [key=0, style=solid];
m1_292 -> m1_293  [key=0, style=solid];
m1_292 -> m1_294  [key=2, style=dotted];
m1_293 -> m1_288  [key=0, style=bold, color=blue];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_117  [key=0, style=solid];
m1_367 -> m1_369  [key=0, style=solid];
m1_369 -> m1_370  [key=0, style=solid];
m1_369 -> m1_375  [key=2, style=dotted];
m1_369 -> m1_372  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeMethod];
m1_371 -> m1_374  [key=0, style=solid];
m1_373 -> m1_374  [key=0, style=solid];
m1_373 -> m1_377  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_370 -> m1_371  [key=0, style=solid];
m1_370 -> m1_372  [key=0, style=solid];
m1_372 -> m1_212  [key=2, style=dotted];
m1_372 -> m1_373  [key=0, style=solid];
m1_372 -> m1_377  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeCall];
m1_374 -> m1_367  [key=0, style=bold, color=blue];
m1_114 -> m1_119  [key=0, style=solid];
m1_114 -> m1_117  [key=0, style=solid];
m1_119 -> m1_73  [key=2, style=dotted];
m1_119 -> m1_74  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_112  [key=2, style=dotted];
m1_119 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_119 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label=markedConstructors];
m1_119 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label=markedConstructors];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_122  [key=0, style=solid];
m1_364 -> m1_396  [key=0, style=solid];
m1_396 -> m1_397  [key=0, style=solid];
m1_397 -> m1_364  [key=0, style=bold, color=blue];
m1_376 -> m1_377  [key=0, style=solid];
m1_83 -> m1_81  [key=0, style=bold, color=blue];
m1_117 -> m1_76  [key=2, style=dotted];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_108  [key=0, style=bold, color=blue];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_99  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_84  [key=2, style=dotted];
m1_214 -> m1_215  [key=0, style=solid];
m1_214 -> m1_216  [key=2, style=dotted];
m1_393 -> m1_394  [key=0, style=solid];
m1_393 -> m1_395  [key=2, style=dotted];
m1_213 -> m1_214  [key=0, style=solid];
m1_215 -> m1_213  [key=0, style=bold, color=blue];
m1_377 -> m1_216  [key=2, style=dotted];
m1_377 -> m1_378  [key=0, style=solid];
m1_392 -> m1_393  [key=0, style=solid];
m1_394 -> m1_392  [key=0, style=bold, color=blue];
m1_378 -> m1_376  [key=0, style=bold, color=blue];
m1_188 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_104  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_181  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_188 -> m1_182  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonBinaryWriter"];
m1_368 -> m1_379  [key=0, style=solid];
m1_368 -> m1_381  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_368 -> m1_385  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m1_368 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m1_379 -> m1_380  [key=0, style=solid];
m1_379 -> m1_388  [key=2, style=dotted];
m1_379 -> m1_382  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m1_379 -> m1_384  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m1_379 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m1_381 -> m1_382  [key=0, style=solid];
m1_381 -> m1_389  [key=2, style=dotted];
m1_381 -> m1_384  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m1_381 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m1_385 -> m1_386  [key=0, style=solid];
m1_385 -> m1_393  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_386 -> m1_387  [key=0, style=solid];
m1_386 -> m1_391  [key=2, style=dotted];
m1_382 -> m1_363  [key=2, style=dotted];
m1_382 -> m1_383  [key=0, style=solid];
m1_382 -> m1_384  [key=0, style=solid];
m1_383 -> m1_387  [key=0, style=solid];
m1_380 -> m1_381  [key=0, style=solid];
m1_380 -> m1_382  [key=0, style=solid];
m1_384 -> m1_385  [key=0, style=solid];
m1_384 -> m1_390  [key=2, style=dotted];
m1_384 -> m1_393  [key=1, style=dashed, color=darkseagreen4, label=specifiedPropertyGet];
m1_387 -> m1_368  [key=0, style=bold, color=blue];
m1_189 -> m1_190  [key=0, style=solid];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_108  [key=2, style=dotted];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_194  [key=2, style=dotted];
m1_190 -> m1_192  [key=1, style=dashed, color=darkseagreen4, label=contract];
m1_192 -> m1_193  [key=0, style=solid];
m1_193 -> m1_189  [key=0, style=bold, color=blue];
m1_259 -> m1_260  [key=0, style=solid];
m1_259 -> m1_264  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_261 -> m1_48  [key=2, style=dotted];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_264  [key=0, style=solid];
m1_260 -> m1_261  [key=0, style=solid];
m1_260 -> m1_268  [key=2, style=dotted];
m1_260 -> m1_262  [key=1, style=dashed, color=darkseagreen4, label=converter];
m1_262 -> m1_263  [key=0, style=solid];
m1_262 -> m1_264  [key=0, style=solid];
m1_262 -> m1_269  [key=2, style=dotted];
m1_264 -> m1_256  [key=2, style=dotted];
m1_264 -> m1_265  [key=0, style=solid];
m1_264 -> m1_266  [key=0, style=solid];
m1_263 -> m1_267  [key=0, style=solid];
m1_265 -> m1_267  [key=0, style=solid];
m1_266 -> m1_267  [key=0, style=solid];
m1_267 -> m1_259  [key=0, style=bold, color=blue];
m1_270 -> m1_76  [key=2, style=dotted];
m1_270 -> m1_271  [key=0, style=solid];
m1_270 -> m1_272  [key=0, style=solid];
m1_271 -> m1_287  [key=0, style=solid];
m1_272 -> m1_273  [key=0, style=solid];
m1_272 -> m1_274  [key=0, style=solid];
m1_273 -> m1_287  [key=0, style=solid];
m1_273 -> m1_126  [key=2, style=dotted];
m1_273 -> m1_288  [key=2, style=dotted];
m1_273 -> m1_289  [key=2, style=dotted];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_276  [key=0, style=solid];
m1_275 -> m1_287  [key=0, style=solid];
m1_275 -> m1_126  [key=2, style=dotted];
m1_275 -> m1_288  [key=2, style=dotted];
m1_275 -> m1_289  [key=2, style=dotted];
m1_276 -> m1_277  [key=0, style=solid];
m1_276 -> m1_278  [key=0, style=solid];
m1_277 -> m1_287  [key=0, style=solid];
m1_277 -> m1_126  [key=2, style=dotted];
m1_277 -> m1_288  [key=2, style=dotted];
m1_277 -> m1_289  [key=2, style=dotted];
m1_278 -> m1_279  [key=0, style=solid];
m1_278 -> m1_280  [key=0, style=solid];
m1_279 -> m1_287  [key=0, style=solid];
m1_279 -> m1_126  [key=2, style=dotted];
m1_279 -> m1_288  [key=2, style=dotted];
m1_279 -> m1_289  [key=2, style=dotted];
m1_280 -> m1_281  [key=0, style=solid];
m1_280 -> m1_283  [key=0, style=solid];
m1_281 -> m1_282  [key=0, style=solid];
m1_281 -> m1_285  [key=0, style=solid];
m1_282 -> m1_287  [key=0, style=solid];
m1_282 -> m1_126  [key=2, style=dotted];
m1_282 -> m1_288  [key=2, style=dotted];
m1_282 -> m1_289  [key=2, style=dotted];
m1_283 -> m1_284  [key=0, style=solid];
m1_283 -> m1_285  [key=0, style=solid];
m1_284 -> m1_287  [key=0, style=solid];
m1_284 -> m1_126  [key=2, style=dotted];
m1_284 -> m1_288  [key=2, style=dotted];
m1_284 -> m1_289  [key=2, style=dotted];
m1_285 -> m1_287  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m1_285 -> m1_286  [key=0, style=solid];
m1_286 -> m1_287  [key=0, style=solid];
m1_287 -> m1_175  [key=0, style=bold, color=blue];
m1_309 -> m1_310  [key=0, style=solid];
m1_309 -> m1_311  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_309 -> m1_312  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_310 -> m1_311  [key=0, style=solid];
m1_310 -> m1_312  [key=0, style=solid];
m1_311 -> m1_313  [key=0, style=solid];
m1_311 -> m1_314  [key=2, style=dotted];
m1_312 -> m1_313  [key=0, style=solid];
m1_312 -> m1_315  [key=2, style=dotted];
m1_313 -> m1_309  [key=0, style=bold, color=blue];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_112  [key=0, style=solid];
m1_110 -> m1_295  [key=0, style=solid];
m1_110 -> m1_300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m1_110 -> m1_298  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_295 -> m1_53  [key=2, style=dotted];
m1_295 -> m1_296  [key=0, style=solid];
m1_295 -> m1_299  [key=1, style=dashed, color=darkseagreen4, label=members];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_307  [key=2, style=dotted];
m1_300 -> m1_302  [key=1, style=dashed, color=darkseagreen4, label=property];
m1_296 -> m1_297  [key=0, style=solid];
m1_296 -> m1_298  [key=0, style=solid];
m1_299 -> m1_300  [key=0, style=solid];
m1_299 -> m1_303  [key=0, style=solid];
m1_301 -> m1_299  [key=0, style=solid];
m1_301 -> m1_302  [key=0, style=solid];
m1_302 -> m1_299  [key=0, style=solid];
m1_302 -> m1_308  [key=2, style=dotted];
m1_298 -> m1_299  [key=0, style=solid];
m1_298 -> m1_302  [key=1, style=dashed, color=darkseagreen4, label=properties];
m1_298 -> m1_306  [key=2, style=dotted];
m1_298 -> m1_303  [key=1, style=dashed, color=darkseagreen4, label=properties];
m1_297 -> m1_304  [key=0, style=solid];
m1_297 -> m1_305  [key=2, style=dotted];
m1_303 -> m1_304  [key=0, style=solid];
m1_304 -> m1_110  [key=0, style=bold, color=blue];
m1_401 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_178  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_185  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_295  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_401 -> m1_359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m1_402 -> m1_214  [key=1, style=dashed, color=darkseagreen4, label=methodCall];
m1_404 -> m1_393  [key=1, style=dashed, color=darkseagreen4, label=specifiedPropertyGet];
m1_403 -> m1_377  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeCall];
m2_36 -> m2_37  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=2, style=dotted];
m2_38 -> m2_36  [key=0, style=bold, color=blue];
m2_33 -> m2_40  [key=0, style=solid, color=red];
m2_33 -> m2_41  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonReader"];
m2_33 -> m2_16  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m2_40 -> m2_41  [key=0, style=solid, color=red];
m2_40 -> m2_42  [key=0, style=solid, color=red];
m2_40 -> m2_43  [key=2, style=dotted, color=red];
m2_41 -> m2_42  [key=0, style=solid, color=red];
m2_41 -> m2_44  [key=2, style=dotted, color=red];
m2_42 -> m2_33  [key=0, style=bold, color=blue];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_16 -> m2_21  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonReader"];
m2_16 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_16 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_16 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m2_16 -> m2_28  [key=1, style=dashed, color=red, label="Newtonsoft.Json.JsonReader"];
m2_16 -> m2_18  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_31  [key=2, style=dotted];
m2_19 -> m2_32  [key=2, style=dotted];
m2_19 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label=ds];
m2_19 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=ds];
m2_19 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=ds];
m2_21 -> m2_22  [key=0, style=solid, color=red];
m2_21 -> m2_33  [key=2, style=dotted, color=red];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_29  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_34  [key=2, style=dotted];
m2_25 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_25 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_28 -> m2_22  [key=0, style=solid, color=red];
m2_28 -> m2_33  [key=2, style=dotted, color=red];
m2_18 -> m2_30  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid, color=red];
m2_20 -> m2_10  [key=2, style=dotted];
m2_20 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label=converter];
m2_27 -> m2_28  [key=0, style=solid, color=red];
m2_27 -> m2_35  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=exists];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_28  [key=0, style=solid, color=red];
m2_30 -> m2_16  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m2_0 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_0 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_0 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_0 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=dataSet];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_11  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_12  [key=2, style=dotted];
m2_6 -> m2_13  [key=2, style=dotted];
m2_7 -> m2_5  [key=0, style=solid];
m2_7 -> m2_14  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_15  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_8  [key=0, style=solid];
m2_5 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=table];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_10  [key=2, style=dotted];
m2_3 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=converter];
m2_9 -> m2_0  [key=0, style=bold, color=blue];
m2_45 -> m2_21  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Converters.DataSetConverter"];
m2_45 -> m2_28  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Converters.DataSetConverter"];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_100  [key=0, style=solid];
m4_91 -> m4_105  [key=2, style=dotted];
m4_91 -> m4_106  [key=2, style=dotted];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_92 -> m4_94  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_92 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_92 -> m4_97  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_93  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m4_93 -> m4_98  [key=0, style=solid];
m4_94 -> m4_91  [key=0, style=bold, color=blue];
m4_94 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label=t];
m4_94 -> m4_95  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_8  [key=2, style=dotted];
m4_128 -> m4_74  [key=1, style=dashed, color=darkseagreen4, label=main];
m4_95 -> m4_96  [key=0, style=solid];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_98  [key=2, style=dotted];
m4_96 -> m4_108  [key=2, style=dotted];
m4_97 -> m4_95  [key=0, style=bold, color=blue];
m4_97 -> m4_93  [key=0, style=solid];
m4_97 -> m4_97  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_24  [key=2, style=dotted];
m4_10 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label=u];
m4_10 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label=u];
m4_10 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=u];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_16  [key=2, style=dotted];
m4_11 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_11 -> m4_6  [key=2, style=dotted];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_25  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_17  [key=2, style=dotted];
m4_13 -> m4_18  [key=2, style=dotted];
m4_13 -> m4_6  [key=2, style=dotted];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> n96  [key=2, style=dotted];
m4_14 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m4_14 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m4_14 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m4_14 -> m4_22  [key=0, style=solid];
m4_14 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m4_14 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m4_15 -> m4_10  [key=0, style=bold, color=blue];
m4_15 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m4_15 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m4_15 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_26  [key=2, style=dotted];
m4_15 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m4_15 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m4_102 -> m4_103  [key=0, style=solid];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_87  [key=2, style=dotted];
m4_103 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label=parent];
m4_103 -> m4_106  [key=1, style=dashed, color=darkseagreen4, label=parent];
m4_103 -> m4_108  [key=1, style=dashed, color=darkseagreen4, label=parent];
m4_103 -> m4_111  [key=1, style=dashed, color=darkseagreen4, label=parent];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_87  [key=2, style=dotted];
m4_104 -> m4_106  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_105 -> m4_106  [key=0, style=solid];
m4_106 -> m4_107  [key=0, style=solid];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_72  [key=2, style=dotted];
m4_108 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_17  [key=2, style=dotted];
m4_107 -> m4_111  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_109 -> m4_102  [key=0, style=bold, color=blue];
m4_109 -> m4_110  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> n96  [key=2, style=dotted];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Type CreateUnionTypeLookup"];
m4_1 -> m4_6  [key=2, style=dotted];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_8  [key=2, style=dotted];
m4_1 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m4_1 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m4_1 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_7  [key=2, style=dotted];
m4_2 -> n96  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_8  [key=2, style=dotted];
m4_3 -> n96  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_0  [key=0, style=bold, color=blue];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> n96  [key=2, style=dotted];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_89  [key=0, style=solid];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_90  [key=2, style=dotted];
m4_88 -> m4_100  [key=0, style=solid];
m4_88 -> m4_105  [key=2, style=dotted];
m4_88 -> m4_106  [key=2, style=dotted];
m4_89 -> m4_87  [key=0, style=bold, color=blue];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_98  [key=0, style=solid];
m4_7 -> m4_0  [key=0, style=bold, color=blue];
m4_112 -> m4_116  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_125  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m4_112 -> m4_114  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanConvert"];
m4_112 -> m4_110  [key=0, style=bold, color=blue];
m4_119 -> m4_46  [key=2, style=dotted];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label=attributeType];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_123  [key=0, style=solid];
m4_120 -> m4_118  [key=0, style=solid];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_17  [key=2, style=dotted];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_129  [key=2, style=dotted];
m4_121 -> m4_130  [key=2, style=dotted];
m4_121 -> m4_76  [key=2, style=dotted];
m4_116 -> m4_118  [key=1, style=dashed, color=darkseagreen4, label=attributes];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_128  [key=2, style=dotted];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_123  [key=1, style=dashed, color=darkseagreen4, label=isFSharpType];
m4_117 -> m4_114  [key=3, color=darkorchid, style=bold, label="Local variable bool isFSharpType"];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_125  [key=0, style=solid];
m4_123 -> m4_113  [key=0, style=bold, color=blue];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> n96  [key=2, style=dotted];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_87  [key=2, style=dotted];
m4_115 -> m4_118  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_115 -> m4_119  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_114 -> m4_126  [key=0, style=solid];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_87  [key=2, style=dotted];
m4_114 -> m4_116  [key=1, style=dashed, color=darkseagreen4, label=parent];
m4_114 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label=parent];
m4_114 -> m4_118  [key=1, style=dashed, color=darkseagreen4, label=parent];
m4_114 -> m4_121  [key=1, style=dashed, color=darkseagreen4, label=parent];
m4_124 -> m4_126  [key=0, style=solid];
m4_124 -> m4_125  [key=0, style=solid];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_6  [key=2, style=dotted];
m4_125 -> m4_51  [key=0, style=bold, color=blue];
m4_113 -> m4_115  [key=0, style=solid];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_127  [key=2, style=dotted];
m4_126 -> m4_112  [key=0, style=bold, color=blue];
m4_126 -> m4_54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.MainClass"];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_47  [key=2, style=dotted];
m4_72 -> m4_74  [key=1, style=dashed, color=darkseagreen4, label=union];
m4_18 -> m4_6  [key=2, style=dotted];
m4_18 -> m4_19  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_41  [key=0, style=solid];
m4_42 -> m4_55  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_49  [key=2, style=dotted];
m4_43 -> m4_45  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_43 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label=c];
m4_43 -> m4_56  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_57  [key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_50  [key=2, style=dotted];
m4_45 -> m4_51  [key=2, style=dotted];
m4_45 -> m4_28  [key=0, style=bold, color=blue];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_52  [key=2, style=dotted];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> n96  [key=2, style=dotted];
m4_48 -> m4_42  [key=0, style=bold, color=blue];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_8  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_50  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_40  [key=2, style=dotted];
m4_35 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label=d];
m4_35 -> m4_51  [key=2, style=dotted];
m4_35 -> m4_52  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_41  [key=2, style=dotted];
m4_36 -> m4_53  [key=2, style=dotted];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_17  [key=2, style=dotted];
m4_37 -> m4_18  [key=2, style=dotted];
m4_37 -> m4_44  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> n96  [key=2, style=dotted];
m4_38 -> m4_48  [key=2, style=dotted];
m4_38 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label=fields];
m4_39 -> m4_34  [key=0, style=bold, color=blue];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_51  [key=2, style=dotted];
m4_39 -> m4_52  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_56  [key=2, style=dotted];
m4_129 -> m4_74  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_28 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_28 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_28 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_28 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_28 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_28 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_28 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_28 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_28 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_28 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m4_28 -> m4_33  [key=2, style=dotted];
m4_30 -> m4_47  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_46  [key=2, style=dotted];
m4_30 -> n96  [key=2, style=dotted];
m4_31 -> m4_47  [key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=union];
m4_31 -> m4_26  [key=0, style=bold, color=blue];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m4_29 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m4_29 -> m4_17  [key=2, style=dotted];
m4_29 -> m4_18  [key=2, style=dotted];
m4_32 -> m4_48  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label=tag];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_49  [key=2, style=dotted];
m4_33 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_33 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m4_33 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m4_33 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_54  [key=2, style=dotted];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_43  [key=0, style=solid];
m4_51 -> m4_124  [key=0, style=solid];
m4_55 -> m4_53  [key=0, style=bold, color=blue];
m4_26 -> m4_27  [key=0, style=solid];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_48  [key=2, style=dotted];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_61  [key=0, style=bold, color=blue];
m4_101 -> m4_99  [key=0, style=bold, color=blue];
m4_101 -> m4_61  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m4_101 -> m4_131  [key=0, style=solid];
m4_101 -> m4_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_32  [key=2, style=dotted];
m4_27 -> m4_29  [key=1, style=dashed, color=darkseagreen4, label=a];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_67  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m4_61 -> m4_71  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m4_61 -> m4_78  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m4_61 -> m4_83  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m4_61 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_61 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_61 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m4_61 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_61 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_61 -> m4_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_61 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_61 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_61 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_61 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_61 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_61 -> m4_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m4_61 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m4_61 -> m4_63  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_70  [key=2, style=dotted];
m4_62 -> m4_65  [key=1, style=dashed, color=darkseagreen4, label=main];
m4_62 -> m4_66  [key=1, style=dashed, color=darkseagreen4, label=main];
m4_62 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label=main];
m4_62 -> m4_74  [key=1, style=dashed, color=darkseagreen4, label=main];
m4_62 -> m4_64  [key=0, style=solid];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_71  [key=2, style=dotted];
m4_63 -> m4_65  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_63 -> m4_66  [key=1, style=dashed, color=darkseagreen4, label=child];
m4_63 -> m4_100  [key=0, style=solid];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_91  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m4_65 -> m4_63  [key=3, color=darkorchid, style=bold, label="Local variable string caseName"];
m4_66 -> m4_67  [key=0, style=solid, color=green];
m4_66 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=fields];
m4_66 -> m4_89  [key=1, style=dashed, color=darkseagreen4, label=fields];
m4_66 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=fields];
m4_66 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label=fields];
m4_66 -> m4_94  [key=1, style=dashed, color=darkseagreen4, label=fields];
m4_66 -> m4_63  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.JArray fields"];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_72  [key=2, style=dotted];
m4_68 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_68 -> m4_84  [key=0, style=solid];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_63  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Converters.DiscriminatedUnionConverter.UnionCase caseInfo"];
m4_64 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m4_64 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m4_64 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m4_64 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m4_64 -> m4_86  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m4_64 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m4_67 -> m4_68  [key=0, style=solid, color=green];
m4_67 -> m4_17  [key=2, style=dotted];
m4_67 -> m4_74  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_67 -> m4_101  [key=2, style=dotted, color=green];
m4_69 -> m4_61  [key=0, style=bold, color=blue];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m4_69 -> m4_102  [key=2, style=dotted];
m4_69 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m4_71 -> m4_72  [key=0, style=solid, color=green];
m4_71 -> m4_101  [key=2, style=dotted, color=green];
m4_131 -> m4_133  [key=0, style=solid];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_134  [key=2, style=dotted];
m4_131 -> m4_111  [key=1, style=dashed, color=darkseagreen4, label=parent];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_106  [key=2, style=dotted];
m4_132 -> m4_111  [key=1, style=dashed, color=darkseagreen4, label=settings];
m4_133 -> m4_101  [key=0, style=bold, color=blue];
m4_133 -> m4_124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PropertyItemReferenceLoopHandling"];
m4_70 -> m4_71  [key=0, style=solid, color=green];
m4_70 -> m4_77  [key=0, style=solid];
m4_70 -> m4_103  [key=2, style=dotted];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_92  [key=0, style=solid];
m4_53 -> m4_54  [key=0, style=solid];
m4_57 -> m4_58  [key=0, style=solid, color=red];
m4_57 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m4_24 -> m4_19  [key=0, style=bold, color=blue];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_6  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_25  [key=2, style=dotted];
m4_20 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=o];
m4_20 -> m4_6  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_14  [key=0, style=solid];
m4_21 -> m4_27  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_17  [key=2, style=dotted];
m4_22 -> m4_18  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> n96  [key=2, style=dotted];
m4_23 -> m4_9  [key=0, style=bold, color=blue];
m4_98 -> m4_99  [key=0, style=solid];
m4_9 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m4_9 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m4_9 -> m4_10  [key=0, style=solid];
m4_78 -> m4_79  [key=0, style=solid, color=red];
m4_78 -> m4_101  [key=2, style=dotted, color=green];
m4_78 -> m4_70  [key=2, style=dotted];
m4_78 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label=main];
m4_78 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label=main];
m4_78 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label=main];
m4_77 -> m4_78  [key=0, style=solid, color=green];
m4_77 -> m4_82  [key=0, style=solid];
m4_77 -> m4_103  [key=2, style=dotted];
m4_79 -> m4_80  [key=0, style=solid, color=red];
m4_79 -> m4_81  [key=0, style=solid];
m4_79 -> m4_71  [key=2, style=dotted, color=red];
m4_79 -> m4_82  [key=1, style=dashed, color=red, label=child];
m4_83 -> m4_68  [key=0, style=solid, color=green];
m4_83 -> m4_101  [key=2, style=dotted, color=green];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_17  [key=2, style=dotted];
m4_81 -> m4_83  [key=0, style=solid, color=green];
m4_81 -> m4_107  [key=2, style=dotted];
m4_81 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=fields];
m4_81 -> m4_89  [key=1, style=dashed, color=darkseagreen4, label=fields];
m4_81 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=fields];
m4_81 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label=fields];
m4_81 -> m4_94  [key=1, style=dashed, color=darkseagreen4, label=fields];
m4_81 -> m4_82  [key=0, style=solid];
m4_75 -> m4_83  [key=0, style=solid, color=green];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_73  [key=0, style=bold, color=blue];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_102  [key=2, style=dotted];
m4_73 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m4_73 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m4_73 -> m4_91  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m4_76 -> m4_100  [key=0, style=solid];
m4_76 -> m4_105  [key=2, style=dotted];
m4_76 -> m4_106  [key=2, style=dotted];
m4_80 -> m4_100  [key=0, style=solid];
m4_80 -> m4_106  [key=2, style=dotted];
m4_80 -> m4_81  [key=0, style=solid];
m4_82 -> m4_100  [key=0, style=solid];
m4_82 -> m4_105  [key=2, style=dotted];
m4_82 -> m4_106  [key=2, style=dotted];
m4_82 -> m4_83  [key=0, style=solid];
m4_85 -> m4_100  [key=0, style=solid];
m4_85 -> m4_105  [key=2, style=dotted];
m4_85 -> m4_106  [key=2, style=dotted];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> n96  [key=2, style=dotted];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_86  [key=0, style=solid];
m4_84 -> m4_76  [key=2, style=dotted];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m4_74 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m4_74 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m4_74 -> m4_104  [key=2, style=dotted];
m4_74 -> m4_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_74 -> m4_86  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m4_74 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m4_74 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m4_74 -> m4_76  [key=2, style=dotted];
m4_86 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label=typedFieldValues];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label=typedFieldValues];
m4_86 -> m4_77  [key=0, style=bold, color=blue];
m4_130 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.DictionaryDynamicObject"];
m4_130 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.DictionaryDynamicObject"];
m4_130 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.DictionaryDynamicObject"];
m4_130 -> m4_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.DictionaryDynamicObject"];
m4_127 -> m4_58  [key=1, style=dashed, color=red, label="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ChildClass"];
m4_127 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReferenceLoopHandlingTests.ChildClass"];
m4_58 -> m4_59  [key=0, style=solid, color=red];
m4_58 -> m4_56  [key=2, style=dotted, color=red];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_76  [key=2, style=dotted];
m4_111 -> m4_109  [key=0, style=bold, color=blue];
m4_110 -> m4_111  [key=0, style=solid];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_56  [key=2, style=dotted];
m4_60 -> m4_58  [key=0, style=bold, color=blue];
m4_60 -> m4_57  [key=0, style=bold, color=blue];
m4_136 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m4_135 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label=tag];
m5_361 -> m5_362  [key=0, style=solid];
m5_362 -> m5_363  [key=0, style=solid];
m5_362 -> m5_354  [key=2, style=dotted];
m5_363 -> m5_361  [key=0, style=bold, color=blue];
m5_658 -> m5_659  [key=0, style=solid];
m5_659 -> m5_660  [key=0, style=solid];
m5_659 -> m5_659  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_660 -> m5_661  [key=0, style=solid];
m5_660 -> m5_11  [key=2, style=dotted];
m5_660 -> m5_179  [key=2, style=dotted];
m5_661 -> m5_662  [key=0, style=solid];
m5_662 -> m5_663  [key=0, style=solid];
m5_662 -> m5_109  [key=2, style=dotted];
m5_663 -> m5_658  [key=0, style=bold, color=blue];
m5_664 -> m5_665  [key=0, style=solid];
m5_665 -> m5_666  [key=0, style=solid];
m5_665 -> m5_672  [key=2, style=dotted];
m5_665 -> m5_667  [key=1, style=dashed, color=darkseagreen4, label=data];
m5_666 -> m5_667  [key=0, style=solid];
m5_666 -> m5_6  [key=2, style=dotted];
m5_666 -> m5_673  [key=2, style=dotted];
m5_666 -> m5_318  [key=2, style=dotted];
m5_667 -> m5_668  [key=0, style=solid];
m5_667 -> m5_201  [key=2, style=dotted];
m5_667 -> m5_669  [key=1, style=dashed, color=darkseagreen4, label=serialized];
m5_668 -> m5_669  [key=0, style=solid];
m5_668 -> m5_13  [key=2, style=dotted];
m5_669 -> m5_670  [key=0, style=solid];
m5_669 -> m5_93  [key=2, style=dotted];
m5_670 -> m5_671  [key=0, style=solid];
m5_670 -> m5_674  [key=2, style=dotted];
m5_670 -> m5_109  [key=2, style=dotted];
m5_671 -> m5_664  [key=0, style=bold, color=blue];
m5_202 -> m5_203  [key=0, style=solid];
m5_203 -> m5_204  [key=0, style=solid];
m5_203 -> m5_100  [key=2, style=dotted];
m5_203 -> m5_206  [key=1, style=dashed, color=darkseagreen4, label=listRef];
m5_204 -> m5_205  [key=0, style=solid];
m5_204 -> m5_200  [key=2, style=dotted];
m5_204 -> m5_6  [key=2, style=dotted];
m5_206 -> m5_207  [key=0, style=solid];
m5_206 -> m5_13  [key=2, style=dotted];
m5_205 -> m5_206  [key=0, style=solid];
m5_205 -> m5_201  [key=2, style=dotted];
m5_205 -> m5_207  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_207 -> m5_208  [key=0, style=solid];
m5_207 -> m5_93  [key=2, style=dotted];
m5_207 -> m5_209  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m5_207 -> m5_210  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m5_208 -> m5_209  [key=0, style=solid];
m5_208 -> m5_109  [key=2, style=dotted];
m5_209 -> m5_210  [key=0, style=solid];
m5_209 -> m5_66  [key=2, style=dotted];
m5_210 -> m5_211  [key=0, style=solid];
m5_210 -> m5_212  [key=1, style=dashed, color=darkseagreen4, label=nested];
m5_210 -> m5_213  [key=1, style=dashed, color=darkseagreen4, label=nested];
m5_210 -> m5_214  [key=1, style=dashed, color=darkseagreen4, label=nested];
m5_210 -> m5_215  [key=1, style=dashed, color=darkseagreen4, label=nested];
m5_210 -> m5_216  [key=1, style=dashed, color=darkseagreen4, label=nested];
m5_211 -> m5_212  [key=0, style=solid];
m5_211 -> m5_109  [key=2, style=dotted];
m5_212 -> m5_213  [key=0, style=solid];
m5_212 -> m5_109  [key=2, style=dotted];
m5_213 -> m5_214  [key=0, style=solid];
m5_213 -> m5_109  [key=2, style=dotted];
m5_214 -> m5_215  [key=0, style=solid];
m5_214 -> m5_109  [key=2, style=dotted];
m5_215 -> m5_216  [key=0, style=solid];
m5_215 -> m5_109  [key=2, style=dotted];
m5_216 -> m5_217  [key=0, style=solid];
m5_216 -> m5_109  [key=2, style=dotted];
m5_217 -> m5_202  [key=0, style=bold, color=blue];
m5_322 -> m5_323  [key=0, style=solid];
m5_323 -> m5_324  [key=0, style=solid];
m5_323 -> m5_330  [key=2, style=dotted];
m5_323 -> m5_325  [key=1, style=dashed, color=darkseagreen4, label=message];
m5_323 -> m5_326  [key=1, style=dashed, color=darkseagreen4, label=message];
m5_324 -> m5_325  [key=0, style=solid];
m5_325 -> m5_326  [key=0, style=solid];
m5_325 -> m5_331  [key=2, style=dotted];
m5_326 -> m5_327  [key=0, style=solid];
m5_326 -> m5_201  [key=2, style=dotted];
m5_327 -> m5_328  [key=0, style=solid];
m5_327 -> m5_93  [key=2, style=dotted];
m5_328 -> m5_329  [key=0, style=solid];
m5_329 -> m5_322  [key=0, style=bold, color=blue];
m5_76 -> m5_77  [key=0, style=solid, color=red];
m5_77 -> m5_78  [key=0, style=solid, color=red];
m5_77 -> m5_61  [key=2, style=dotted, color=red];
m5_77 -> m5_11  [key=2, style=dotted, color=red];
m5_77 -> m5_80  [key=2, style=dotted, color=red];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_13  [key=2, style=dotted];
m5_79 -> m5_76  [key=0, style=bold, color=blue];
m5_723 -> m5_724  [key=0, style=solid];
m5_723 -> m5_726  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_723 -> m5_728  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_723 -> m5_729  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_723 -> m5_704  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m5_723 -> m5_727  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m5_724 -> m5_725  [key=0, style=solid];
m5_724 -> m5_726  [key=0, style=solid];
m5_726 -> m5_727  [key=0, style=solid];
m5_726 -> m5_728  [key=0, style=solid];
m5_726 -> m5_732  [key=2, style=dotted];
m5_728 -> m5_729  [key=0, style=solid];
m5_728 -> m5_730  [key=0, style=solid];
m5_729 -> m5_731  [key=0, style=solid];
m5_729 -> m5_733  [key=2, style=dotted];
m5_725 -> m5_731  [key=0, style=solid];
m5_727 -> m5_731  [key=0, style=solid];
m5_730 -> m5_731  [key=0, style=solid];
m5_731 -> m5_723  [key=0, style=bold, color=blue];
m5_617 -> m5_618  [key=0, style=solid];
m5_618 -> m5_619  [key=0, style=solid];
m5_618 -> m5_615  [key=2, style=dotted];
m5_618 -> m5_627  [key=2, style=dotted];
m5_618 -> m5_620  [key=1, style=dashed, color=darkseagreen4, label=p];
m5_619 -> m5_620  [key=0, style=solid];
m5_619 -> m5_11  [key=2, style=dotted];
m5_619 -> m5_622  [key=1, style=dashed, color=darkseagreen4, label=settings];
m5_620 -> m5_621  [key=0, style=solid];
m5_620 -> m5_605  [key=2, style=dotted];
m5_620 -> m5_622  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_622 -> m5_623  [key=0, style=solid];
m5_622 -> m5_179  [key=2, style=dotted];
m5_622 -> m5_624  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_622 -> m5_625  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_621 -> m5_622  [key=0, style=solid];
m5_621 -> m5_13  [key=2, style=dotted];
m5_623 -> m5_624  [key=0, style=solid];
m5_623 -> m5_66  [key=2, style=dotted];
m5_624 -> m5_625  [key=0, style=solid];
m5_624 -> m5_109  [key=2, style=dotted];
m5_625 -> m5_626  [key=0, style=solid];
m5_625 -> m5_109  [key=2, style=dotted];
m5_626 -> m5_617  [key=0, style=bold, color=blue];
m5_26 -> m5_27  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_34  [key=2, style=dotted];
m5_27 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=sb];
m5_27 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=sb];
m5_27 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=sb];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_28 -> m5_28  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_35  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_36  [key=2, style=dotted];
m5_32 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_32  [key=0, style=solid];
m5_31 -> m5_29  [key=0, style=solid];
m5_31 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_33 -> m5_26  [key=0, style=bold, color=blue];
m5_697 -> m5_698  [key=0, style=solid];
m5_698 -> m5_699  [key=0, style=solid];
m5_698 -> m5_700  [key=2, style=dotted];
m5_699 -> m5_697  [key=0, style=bold, color=blue];
m5_332 -> m5_333  [key=0, style=solid];
m5_333 -> m5_334  [key=0, style=solid];
m5_333 -> m5_7  [key=2, style=dotted];
m5_333 -> m5_345  [key=2, style=dotted];
m5_333 -> m5_6  [key=2, style=dotted];
m5_334 -> m5_335  [key=0, style=solid];
m5_334 -> m5_11  [key=2, style=dotted];
m5_334 -> m5_12  [key=2, style=dotted];
m5_334 -> m5_336  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_334 -> m5_337  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_335 -> m5_336  [key=0, style=solid];
m5_335 -> m5_100  [key=2, style=dotted];
m5_336 -> m5_337  [key=0, style=solid];
m5_336 -> m5_13  [key=2, style=dotted];
m5_337 -> m5_338  [key=0, style=solid];
m5_337 -> m5_11  [key=2, style=dotted];
m5_337 -> m5_346  [key=2, style=dotted];
m5_337 -> m5_339  [key=1, style=dashed, color=darkseagreen4, label=c];
m5_338 -> m5_339  [key=0, style=solid];
m5_338 -> m5_66  [key=2, style=dotted];
m5_339 -> m5_340  [key=0, style=solid];
m5_339 -> m5_341  [key=1, style=dashed, color=darkseagreen4, label=newCollection];
m5_339 -> m5_342  [key=1, style=dashed, color=darkseagreen4, label=newCollection];
m5_340 -> m5_341  [key=0, style=solid];
m5_340 -> m5_109  [key=2, style=dotted];
m5_341 -> m5_342  [key=0, style=solid];
m5_341 -> m5_109  [key=2, style=dotted];
m5_342 -> m5_343  [key=0, style=solid];
m5_343 -> m5_344  [key=0, style=solid];
m5_343 -> m5_109  [key=2, style=dotted];
m5_344 -> m5_332  [key=0, style=bold, color=blue];
m5_701 -> m5_702  [key=0, style=solid];
m5_701 -> m5_704  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m5_702 -> m5_703  [key=0, style=solid];
m5_702 -> m5_705  [key=1, style=dashed, color=darkseagreen4, label=w];
m5_703 -> m5_704  [key=0, style=solid];
m5_703 -> m5_705  [key=0, style=solid];
m5_705 -> m5_706  [key=0, style=solid];
m5_705 -> m5_707  [key=2, style=dotted];
m5_704 -> m5_706  [key=0, style=solid];
m5_706 -> m5_701  [key=0, style=bold, color=blue];
m5_683 -> m5_684  [key=0, style=solid];
m5_684 -> m5_685  [key=0, style=solid];
m5_684 -> m5_11  [key=2, style=dotted];
m5_684 -> m5_686  [key=1, style=dashed, color=darkseagreen4, label=serializerSettings];
m5_684 -> m5_687  [key=1, style=dashed, color=darkseagreen4, label=serializerSettings];
m5_685 -> m5_686  [key=0, style=solid];
m5_685 -> m5_7  [key=2, style=dotted];
m5_685 -> m5_682  [key=2, style=dotted];
m5_686 -> m5_687  [key=0, style=solid];
m5_686 -> m5_605  [key=2, style=dotted];
m5_687 -> m5_688  [key=0, style=solid];
m5_687 -> m5_346  [key=2, style=dotted];
m5_688 -> m5_689  [key=0, style=solid];
m5_688 -> m5_321  [key=2, style=dotted];
m5_689 -> m5_683  [key=0, style=bold, color=blue];
m5_606 -> m5_607  [key=0, style=solid];
m5_607 -> m5_608  [key=0, style=solid];
m5_607 -> m5_615  [key=2, style=dotted];
m5_607 -> m5_616  [key=2, style=dotted];
m5_607 -> m5_609  [key=1, style=dashed, color=darkseagreen4, label=p];
m5_608 -> m5_609  [key=0, style=solid];
m5_608 -> m5_11  [key=2, style=dotted];
m5_608 -> m5_611  [key=1, style=dashed, color=darkseagreen4, label=settings];
m5_609 -> m5_610  [key=0, style=solid];
m5_609 -> m5_605  [key=2, style=dotted];
m5_609 -> m5_611  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_611 -> m5_612  [key=0, style=solid];
m5_611 -> m5_179  [key=2, style=dotted];
m5_611 -> m5_613  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_610 -> m5_611  [key=0, style=solid];
m5_610 -> m5_13  [key=2, style=dotted];
m5_612 -> m5_613  [key=0, style=solid];
m5_612 -> m5_66  [key=2, style=dotted];
m5_613 -> m5_614  [key=0, style=solid];
m5_613 -> m5_109  [key=2, style=dotted];
m5_614 -> m5_606  [key=0, style=bold, color=blue];
m5_273 -> m5_274  [key=0, style=solid];
m5_273 -> m5_275  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_274 -> m5_275  [key=0, style=solid];
m5_274 -> m5_276  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m5_275 -> m5_276  [key=0, style=solid];
m5_276 -> m5_273  [key=0, style=bold, color=blue];
m5_734 -> m5_735  [key=0, style=solid];
m5_734 -> m5_28  [key=3, color=darkorchid, style=bold, label="method methodReturn int GetHashCode"];
m5_735 -> m5_736  [key=0, style=solid];
m5_735 -> m5_737  [key=0, style=solid];
m5_736 -> m5_738  [key=0, style=solid];
m5_737 -> m5_738  [key=0, style=solid];
m5_737 -> m5_739  [key=2, style=dotted];
m5_738 -> m5_734  [key=0, style=bold, color=blue];
m5_48 -> m5_49  [key=0, style=solid];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_46  [key=2, style=dotted];
m5_49 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m5_49 -> m5_56  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_59  [key=2, style=dotted];
m5_50 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label=sw];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_60  [key=2, style=dotted];
m5_51 -> m5_61  [key=2, style=dotted];
m5_51 -> m5_62  [key=2, style=dotted];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_47  [key=2, style=dotted];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_63  [key=2, style=dotted];
m5_52 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_52 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label=result];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_13  [key=2, style=dotted];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_64  [key=2, style=dotted];
m5_54 -> m5_65  [key=2, style=dotted];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_43  [key=2, style=dotted];
m5_55 -> m5_44  [key=2, style=dotted];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_66  [key=2, style=dotted];
m5_58 -> m5_48  [key=0, style=bold, color=blue];
m5_218 -> m5_219  [key=0, style=solid];
m5_219 -> m5_220  [key=0, style=solid];
m5_219 -> m5_219  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_220 -> m5_221  [key=0, style=solid];
m5_220 -> m5_11  [key=2, style=dotted];
m5_220 -> m5_225  [key=2, style=dotted];
m5_220 -> m5_108  [key=2, style=dotted];
m5_220 -> m5_222  [key=1, style=dashed, color=darkseagreen4, label=p];
m5_221 -> m5_222  [key=0, style=solid];
m5_221 -> m5_66  [key=2, style=dotted];
m5_222 -> m5_223  [key=0, style=solid];
m5_223 -> m5_224  [key=0, style=solid];
m5_223 -> m5_109  [key=2, style=dotted];
m5_224 -> m5_218  [key=0, style=bold, color=blue];
m5_226 -> m5_227  [key=0, style=solid];
m5_227 -> m5_228  [key=0, style=solid];
m5_228 -> m5_226  [key=0, style=bold, color=blue];
m5_675 -> m5_676  [key=0, style=solid];
m5_676 -> m5_677  [key=0, style=solid];
m5_676 -> m5_11  [key=2, style=dotted];
m5_676 -> m5_678  [key=1, style=dashed, color=darkseagreen4, label=serializerSettings];
m5_676 -> m5_679  [key=1, style=dashed, color=darkseagreen4, label=serializerSettings];
m5_677 -> m5_678  [key=0, style=solid];
m5_677 -> m5_7  [key=2, style=dotted];
m5_677 -> m5_682  [key=2, style=dotted];
m5_678 -> m5_679  [key=0, style=solid];
m5_678 -> m5_605  [key=2, style=dotted];
m5_679 -> m5_680  [key=0, style=solid];
m5_679 -> m5_346  [key=2, style=dotted];
m5_680 -> m5_681  [key=0, style=solid];
m5_680 -> m5_321  [key=2, style=dotted];
m5_681 -> m5_675  [key=0, style=bold, color=blue];
m5_229 -> m5_230  [key=0, style=solid];
m5_230 -> m5_231  [key=0, style=solid];
m5_230 -> m5_242  [key=2, style=dotted];
m5_230 -> m5_232  [key=1, style=dashed, color=darkseagreen4, label=binder];
m5_231 -> m5_232  [key=0, style=solid];
m5_231 -> m5_6  [key=2, style=dotted];
m5_231 -> m5_243  [key=2, style=dotted];
m5_231 -> m5_244  [key=2, style=dotted];
m5_232 -> m5_233  [key=0, style=solid];
m5_232 -> m5_11  [key=2, style=dotted];
m5_232 -> m5_12  [key=2, style=dotted];
m5_232 -> m5_234  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_233 -> m5_234  [key=0, style=solid];
m5_233 -> m5_13  [key=2, style=dotted];
m5_234 -> m5_235  [key=0, style=solid];
m5_234 -> m5_11  [key=2, style=dotted];
m5_234 -> m5_242  [key=2, style=dotted];
m5_234 -> m5_179  [key=2, style=dotted];
m5_234 -> m5_236  [key=1, style=dashed, color=darkseagreen4, label=newValues];
m5_234 -> m5_238  [key=1, style=dashed, color=darkseagreen4, label=newValues];
m5_234 -> m5_239  [key=1, style=dashed, color=darkseagreen4, label=newValues];
m5_235 -> m5_236  [key=0, style=solid];
m5_235 -> m5_66  [key=2, style=dotted];
m5_236 -> m5_237  [key=0, style=solid];
m5_238 -> m5_239  [key=0, style=solid];
m5_238 -> m5_66  [key=2, style=dotted];
m5_239 -> m5_240  [key=0, style=solid];
m5_237 -> m5_238  [key=0, style=solid];
m5_237 -> m5_109  [key=2, style=dotted];
m5_240 -> m5_241  [key=0, style=solid];
m5_240 -> m5_109  [key=2, style=dotted];
m5_241 -> m5_229  [key=0, style=bold, color=blue];
m5_125 -> m5_126  [key=0, style=solid];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_128  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m5_127 -> m5_128  [key=0, style=solid];
m5_128 -> m5_129  [key=0, style=solid];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> m5_11  [key=2, style=dotted];
m5_129 -> m5_108  [key=2, style=dotted];
m5_129 -> m5_131  [key=1, style=dashed, color=darkseagreen4, label=values];
m5_129 -> m5_132  [key=1, style=dashed, color=darkseagreen4, label=values];
m5_129 -> m5_138  [key=1, style=dashed, color=darkseagreen4, label=values];
m5_129 -> m5_139  [key=1, style=dashed, color=darkseagreen4, label=values];
m5_130 -> m5_131  [key=0, style=solid];
m5_130 -> m5_109  [key=2, style=dotted];
m5_131 -> m5_132  [key=0, style=solid];
m5_131 -> m5_133  [key=1, style=dashed, color=darkseagreen4, label=e];
m5_131 -> m5_134  [key=1, style=dashed, color=darkseagreen4, label=e];
m5_132 -> m5_133  [key=0, style=solid];
m5_132 -> m5_135  [key=1, style=dashed, color=darkseagreen4, label=p];
m5_132 -> m5_136  [key=1, style=dashed, color=darkseagreen4, label=p];
m5_132 -> m5_137  [key=1, style=dashed, color=darkseagreen4, label=p];
m5_138 -> m5_139  [key=0, style=solid];
m5_138 -> m5_109  [key=2, style=dotted];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_109  [key=2, style=dotted];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_109  [key=2, style=dotted];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_109  [key=2, style=dotted];
m5_135 -> m5_136  [key=0, style=solid];
m5_135 -> m5_109  [key=2, style=dotted];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_124  [key=2, style=dotted];
m5_136 -> m5_109  [key=2, style=dotted];
m5_137 -> m5_138  [key=0, style=solid];
m5_137 -> m5_124  [key=2, style=dotted];
m5_137 -> m5_109  [key=2, style=dotted];
m5_140 -> m5_125  [key=0, style=bold, color=blue];
m5_141 -> m5_142  [key=0, style=solid];
m5_142 -> m5_143  [key=0, style=solid];
m5_142 -> m5_144  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m5_142 -> m5_147  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> m5_147  [key=1, style=dashed, color=darkseagreen4, label=personRef];
m5_144 -> m5_145  [key=0, style=solid];
m5_147 -> m5_148  [key=0, style=solid];
m5_147 -> m5_149  [key=2, style=dotted];
m5_147 -> m5_65  [key=2, style=dotted];
m5_145 -> m5_146  [key=0, style=solid];
m5_145 -> m5_148  [key=0, style=solid];
m5_145 -> m5_11  [key=2, style=dotted];
m5_145 -> m5_108  [key=2, style=dotted];
m5_146 -> m5_147  [key=0, style=solid];
m5_148 -> m5_141  [key=0, style=bold, color=blue];
m5_180 -> m5_181  [key=0, style=solid];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_185  [key=1, style=dashed, color=darkseagreen4, label=containerTypeName];
m5_182 -> m5_183  [key=0, style=solid];
m5_182 -> m5_185  [key=1, style=dashed, color=darkseagreen4, label=productListTypeName];
m5_185 -> m5_186  [key=0, style=solid];
m5_185 -> m5_13  [key=2, style=dotted];
m5_183 -> m5_184  [key=0, style=solid];
m5_183 -> m5_187  [key=2, style=dotted];
m5_183 -> m5_6  [key=2, style=dotted];
m5_184 -> m5_185  [key=0, style=solid];
m5_184 -> m5_11  [key=2, style=dotted];
m5_184 -> m5_12  [key=2, style=dotted];
m5_186 -> m5_180  [key=0, style=bold, color=blue];
m5_281 -> m5_282  [key=0, style=solid];
m5_282 -> m5_283  [key=0, style=solid];
m5_282 -> m5_316  [key=2, style=dotted];
m5_282 -> m5_284  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m5_282 -> m5_285  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m5_282 -> m5_286  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m5_282 -> m5_287  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m5_282 -> m5_294  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m5_283 -> m5_284  [key=0, style=solid];
m5_283 -> m5_317  [key=2, style=dotted];
m5_284 -> m5_285  [key=0, style=solid];
m5_284 -> m5_7  [key=2, style=dotted];
m5_285 -> m5_286  [key=0, style=solid];
m5_285 -> m5_6  [key=2, style=dotted];
m5_285 -> m5_318  [key=2, style=dotted];
m5_286 -> m5_287  [key=0, style=solid];
m5_286 -> m5_317  [key=2, style=dotted];
m5_286 -> m5_319  [key=2, style=dotted];
m5_287 -> m5_288  [key=0, style=solid];
m5_287 -> m5_317  [key=2, style=dotted];
m5_294 -> m5_295  [key=0, style=solid];
m5_294 -> m5_320  [key=2, style=dotted];
m5_288 -> m5_289  [key=0, style=solid];
m5_288 -> m5_46  [key=2, style=dotted];
m5_288 -> m5_293  [key=1, style=dashed, color=darkseagreen4, label=serializingTester];
m5_288 -> m5_294  [key=1, style=dashed, color=darkseagreen4, label=serializingTester];
m5_289 -> m5_290  [key=0, style=solid];
m5_293 -> m5_294  [key=0, style=solid];
m5_290 -> m5_291  [key=0, style=solid];
m5_290 -> m5_59  [key=2, style=dotted];
m5_290 -> m5_295  [key=1, style=dashed, color=darkseagreen4, label=sw];
m5_291 -> m5_292  [key=0, style=solid];
m5_291 -> m5_60  [key=2, style=dotted];
m5_291 -> m5_294  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_295 -> m5_296  [key=0, style=solid];
m5_295 -> m5_63  [key=2, style=dotted];
m5_295 -> m5_300  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_295 -> m5_301  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_292 -> m5_293  [key=0, style=solid];
m5_296 -> m5_297  [key=0, style=solid];
m5_296 -> m5_100  [key=2, style=dotted];
m5_296 -> m5_299  [key=1, style=dashed, color=darkseagreen4, label=contentSubClassRef];
m5_300 -> m5_301  [key=0, style=solid];
m5_300 -> m5_13  [key=2, style=dotted];
m5_301 -> m5_302  [key=0, style=solid];
m5_301 -> m5_44  [key=2, style=dotted];
m5_301 -> m5_304  [key=1, style=dashed, color=darkseagreen4, label=sr];
m5_297 -> m5_298  [key=0, style=solid];
m5_297 -> m5_100  [key=2, style=dotted];
m5_297 -> m5_299  [key=1, style=dashed, color=darkseagreen4, label=dictionaryRef];
m5_299 -> m5_300  [key=0, style=solid];
m5_298 -> m5_299  [key=0, style=solid];
m5_298 -> m5_100  [key=2, style=dotted];
m5_302 -> m5_303  [key=0, style=solid];
m5_302 -> m5_46  [key=2, style=dotted];
m5_302 -> m5_305  [key=1, style=dashed, color=darkseagreen4, label=deserializingTester];
m5_302 -> m5_306  [key=1, style=dashed, color=darkseagreen4, label=deserializingTester];
m5_304 -> m5_305  [key=0, style=solid];
m5_304 -> m5_43  [key=2, style=dotted];
m5_304 -> m5_306  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_303 -> m5_304  [key=0, style=solid];
m5_305 -> m5_306  [key=0, style=solid];
m5_306 -> m5_307  [key=0, style=solid];
m5_306 -> m5_47  [key=2, style=dotted];
m5_306 -> m5_308  [key=1, style=dashed, color=darkseagreen4, label=anotherTestObject];
m5_306 -> m5_309  [key=1, style=dashed, color=darkseagreen4, label=anotherTestObject];
m5_306 -> m5_310  [key=1, style=dashed, color=darkseagreen4, label=anotherTestObject];
m5_306 -> m5_311  [key=1, style=dashed, color=darkseagreen4, label=anotherTestObject];
m5_307 -> m5_308  [key=0, style=solid];
m5_307 -> m5_321  [key=2, style=dotted];
m5_308 -> m5_309  [key=0, style=solid];
m5_308 -> m5_66  [key=2, style=dotted];
m5_309 -> m5_310  [key=0, style=solid];
m5_309 -> m5_66  [key=2, style=dotted];
m5_310 -> m5_311  [key=0, style=solid];
m5_310 -> m5_109  [key=2, style=dotted];
m5_311 -> m5_312  [key=0, style=solid];
m5_311 -> m5_313  [key=1, style=dashed, color=darkseagreen4, label=list];
m5_311 -> m5_314  [key=1, style=dashed, color=darkseagreen4, label=list];
m5_312 -> m5_313  [key=0, style=solid];
m5_312 -> m5_66  [key=2, style=dotted];
m5_313 -> m5_314  [key=0, style=solid];
m5_313 -> m5_109  [key=2, style=dotted];
m5_314 -> m5_315  [key=0, style=solid];
m5_314 -> m5_66  [key=2, style=dotted];
m5_315 -> m5_281  [key=0, style=bold, color=blue];
m5_405 -> m5_406  [key=0, style=solid];
m5_405 -> m5_408  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.TypeNameHandling"];
m5_405 -> m5_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper"];
m5_405 -> m5_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper"];
m5_405 -> m5_398  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.Serialization.SerializableWrapper e"];
m5_405 -> m5_399  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.TypeNameHandling flag"];
m5_405 -> m5_400  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.TypeNameHandling flag"];
m5_405 -> m5_2  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.TypeNameHandling flag"];
m5_406 -> m5_407  [key=0, style=solid];
m5_406 -> m5_59  [key=2, style=dotted];
m5_406 -> m5_409  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_406 -> m5_410  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_408 -> m5_409  [key=0, style=solid];
m5_409 -> m5_410  [key=0, style=solid];
m5_409 -> m5_60  [key=2, style=dotted];
m5_409 -> m5_320  [key=2, style=dotted];
m5_411 -> m5_412  [key=0, style=solid];
m5_411 -> m5_109  [key=2, style=dotted];
m5_407 -> m5_408  [key=0, style=solid];
m5_407 -> m5_46  [key=2, style=dotted];
m5_407 -> m5_409  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m5_407 -> m5_410  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m5_410 -> m5_411  [key=0, style=solid];
m5_410 -> m5_43  [key=2, style=dotted];
m5_410 -> m5_44  [key=2, style=dotted];
m5_410 -> m5_63  [key=2, style=dotted];
m5_410 -> m5_47  [key=2, style=dotted];
m5_412 -> m5_405  [key=0, style=bold, color=blue];
m5_472 -> m5_473  [key=0, style=solid];
m5_473 -> m5_474  [key=0, style=solid];
m5_473 -> m5_490  [key=2, style=dotted];
m5_473 -> m5_475  [key=1, style=dashed, color=darkseagreen4, label=o1];
m5_473 -> m5_476  [key=1, style=dashed, color=darkseagreen4, label=o1];
m5_473 -> m5_477  [key=1, style=dashed, color=darkseagreen4, label=o1];
m5_473 -> m5_478  [key=1, style=dashed, color=darkseagreen4, label=o1];
m5_473 -> m5_479  [key=1, style=dashed, color=darkseagreen4, label=o1];
m5_474 -> m5_475  [key=0, style=solid];
m5_474 -> m5_455  [key=2, style=dotted];
m5_475 -> m5_476  [key=0, style=solid];
m5_476 -> m5_477  [key=0, style=solid];
m5_476 -> m5_455  [key=2, style=dotted];
m5_477 -> m5_478  [key=0, style=solid];
m5_478 -> m5_479  [key=0, style=solid];
m5_479 -> m5_480  [key=0, style=solid];
m5_479 -> m5_201  [key=2, style=dotted];
m5_479 -> m5_481  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_479 -> m5_482  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_480 -> m5_481  [key=0, style=solid];
m5_480 -> m5_480  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m5_481 -> m5_482  [key=0, style=solid];
m5_481 -> m5_13  [key=2, style=dotted];
m5_482 -> m5_483  [key=0, style=solid];
m5_482 -> m5_93  [key=2, style=dotted];
m5_482 -> m5_484  [key=1, style=dashed, color=darkseagreen4, label=o2];
m5_482 -> m5_485  [key=1, style=dashed, color=darkseagreen4, label=o2];
m5_482 -> m5_486  [key=1, style=dashed, color=darkseagreen4, label=o2];
m5_482 -> m5_487  [key=1, style=dashed, color=darkseagreen4, label=o2];
m5_482 -> m5_488  [key=1, style=dashed, color=darkseagreen4, label=o2];
m5_483 -> m5_484  [key=0, style=solid];
m5_483 -> m5_321  [key=2, style=dotted];
m5_484 -> m5_485  [key=0, style=solid];
m5_484 -> m5_66  [key=2, style=dotted];
m5_485 -> m5_486  [key=0, style=solid];
m5_485 -> m5_109  [key=2, style=dotted];
m5_486 -> m5_487  [key=0, style=solid];
m5_486 -> m5_66  [key=2, style=dotted];
m5_487 -> m5_488  [key=0, style=solid];
m5_487 -> m5_66  [key=2, style=dotted];
m5_488 -> m5_489  [key=0, style=solid];
m5_488 -> m5_491  [key=2, style=dotted];
m5_488 -> m5_13  [key=2, style=dotted];
m5_489 -> m5_472  [key=0, style=bold, color=blue];
m5_364 -> m5_365  [key=0, style=solid];
m5_364 -> m5_366  [key=0, style=bold, color=crimson];
m5_364 -> m5_367  [key=0, style=bold, color=crimson];
m5_364 -> m5_371  [key=0, style=bold, color=crimson];
m5_365 -> m5_366  [key=0, style=solid];
m5_365 -> m5_367  [key=0, style=solid];
m5_366 -> m5_367  [key=0, style=solid];
m5_367 -> m5_368  [key=0, style=solid];
m5_371 -> m5_372  [key=0, style=solid];
m5_368 -> m5_369  [key=0, style=solid];
m5_368 -> m5_370  [key=1, style=dashed, color=darkseagreen4, label=nextInLine];
m5_368 -> m5_371  [key=1, style=dashed, color=darkseagreen4, label=nextInLine];
m5_368 -> m5_372  [key=1, style=dashed, color=darkseagreen4, label=nextInLine];
m5_369 -> m5_370  [key=0, style=solid];
m5_369 -> m5_373  [key=0, style=solid];
m5_370 -> m5_371  [key=0, style=solid];
m5_370 -> m5_372  [key=0, style=solid];
m5_372 -> m5_369  [key=0, style=solid];
m5_372 -> m5_372  [key=1, style=dashed, color=darkseagreen4, label=nextInLine];
m5_373 -> m5_364  [key=0, style=bold, color=blue];
m5_492 -> m5_493  [key=0, style=solid];
m5_493 -> m5_494  [key=0, style=solid];
m5_493 -> m5_505  [key=2, style=dotted];
m5_493 -> m5_495  [key=1, style=dashed, color=darkseagreen4, label=c1];
m5_494 -> m5_495  [key=0, style=solid];
m5_494 -> m5_6  [key=2, style=dotted];
m5_494 -> m5_455  [key=2, style=dotted];
m5_495 -> m5_496  [key=0, style=solid];
m5_495 -> m5_201  [key=2, style=dotted];
m5_495 -> m5_497  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_496 -> m5_497  [key=0, style=solid];
m5_496 -> m5_13  [key=2, style=dotted];
m5_497 -> m5_498  [key=0, style=solid];
m5_497 -> m5_93  [key=2, style=dotted];
m5_497 -> m5_499  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_497 -> m5_500  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_497 -> m5_501  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_497 -> m5_502  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_498 -> m5_499  [key=0, style=solid];
m5_498 -> m5_109  [key=2, style=dotted];
m5_499 -> m5_500  [key=0, style=solid];
m5_499 -> m5_66  [key=2, style=dotted];
m5_500 -> m5_501  [key=0, style=solid];
m5_500 -> m5_66  [key=2, style=dotted];
m5_501 -> m5_502  [key=0, style=solid];
m5_501 -> m5_66  [key=2, style=dotted];
m5_502 -> m5_503  [key=0, style=solid];
m5_503 -> m5_504  [key=0, style=solid];
m5_503 -> m5_109  [key=2, style=dotted];
m5_504 -> m5_492  [key=0, style=bold, color=blue];
m5_110 -> m5_111  [key=0, style=solid];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_100  [key=2, style=dotted];
m5_112 -> m5_113  [key=0, style=solid];
m5_113 -> m5_114  [key=0, style=solid];
m5_113 -> m5_11  [key=2, style=dotted];
m5_113 -> m5_108  [key=2, style=dotted];
m5_114 -> m5_115  [key=0, style=solid];
m5_114 -> m5_66  [key=2, style=dotted];
m5_115 -> m5_110  [key=0, style=bold, color=blue];
m5_347 -> m5_348  [key=0, style=solid];
m5_348 -> m5_349  [key=0, style=solid];
m5_348 -> m5_100  [key=2, style=dotted];
m5_348 -> m5_351  [key=1, style=dashed, color=darkseagreen4, label=productClassRef];
m5_349 -> m5_350  [key=0, style=solid];
m5_349 -> m5_353  [key=2, style=dotted];
m5_351 -> m5_352  [key=0, style=solid];
m5_351 -> m5_13  [key=2, style=dotted];
m5_350 -> m5_351  [key=0, style=solid];
m5_350 -> m5_11  [key=2, style=dotted];
m5_350 -> m5_12  [key=2, style=dotted];
m5_352 -> m5_347  [key=0, style=bold, color=blue];
m5_740 -> m5_741  [key=0, style=solid];
m5_741 -> m5_742  [key=0, style=solid];
m5_741 -> m5_743  [key=2, style=dotted];
m5_742 -> m5_740  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_5  [key=2, style=dotted];
m5_1 -> m5_6  [key=2, style=dotted];
m5_1 -> m5_7  [key=2, style=dotted];
m5_1 -> m5_8  [key=2, style=dotted];
m5_1 -> m5_9  [key=2, style=dotted];
m5_1 -> m5_10  [key=2, style=dotted];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_11  [key=2, style=dotted];
m5_2 -> m5_12  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_13  [key=2, style=dotted];
m5_4 -> m5_0  [key=0, style=bold, color=blue];
m5_396 -> m5_397  [key=0, style=solid];
m5_397 -> m5_398  [key=0, style=solid];
m5_397 -> m5_403  [key=2, style=dotted];
m5_398 -> m5_399  [key=0, style=solid];
m5_398 -> m5_404  [key=2, style=dotted];
m5_398 -> m5_400  [key=1, style=dashed, color=darkseagreen4, label=w];
m5_398 -> m5_401  [key=1, style=dashed, color=darkseagreen4, label=w];
m5_399 -> m5_400  [key=0, style=solid];
m5_399 -> m5_405  [key=2, style=dotted];
m5_400 -> m5_401  [key=0, style=solid];
m5_400 -> m5_405  [key=2, style=dotted];
m5_401 -> m5_402  [key=0, style=solid];
m5_401 -> m5_405  [key=2, style=dotted];
m5_402 -> m5_396  [key=0, style=bold, color=blue];
m5_374 -> m5_375  [key=0, style=solid];
m5_374 -> m5_364  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator"];
m5_375 -> m5_376  [key=0, style=solid];
m5_375 -> m5_364  [key=2, style=dotted];
m5_376 -> m5_374  [key=0, style=bold, color=blue];
m5_81 -> m5_82  [key=0, style=solid];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_91  [key=2, style=dotted];
m5_82 -> m5_84  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m5_82 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label=wrapper];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_6  [key=2, style=dotted];
m5_83 -> m5_92  [key=2, style=dotted];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_7  [key=2, style=dotted];
m5_84 -> m5_92  [key=2, style=dotted];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_11  [key=2, style=dotted];
m5_85 -> m5_12  [key=2, style=dotted];
m5_85 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_13  [key=2, style=dotted];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_93  [key=2, style=dotted];
m5_87 -> m5_89  [key=1, style=dashed, color=darkseagreen4, label=w2];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_66  [key=2, style=dotted];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_66  [key=2, style=dotted];
m5_90 -> m5_81  [key=0, style=bold, color=blue];
m5_720 -> m5_721  [key=0, style=solid];
m5_721 -> m5_722  [key=0, style=solid];
m5_721 -> m5_700  [key=2, style=dotted];
m5_722 -> m5_720  [key=0, style=bold, color=blue];
m5_506 -> m5_507  [key=0, style=solid];
m5_507 -> m5_508  [key=0, style=solid];
m5_507 -> m5_505  [key=2, style=dotted];
m5_507 -> m5_6  [key=2, style=dotted];
m5_507 -> m5_455  [key=2, style=dotted];
m5_508 -> m5_509  [key=0, style=solid];
m5_508 -> m5_201  [key=2, style=dotted];
m5_508 -> m5_510  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_509 -> m5_510  [key=0, style=solid];
m5_509 -> m5_13  [key=2, style=dotted];
m5_510 -> m5_511  [key=0, style=solid];
m5_510 -> m5_93  [key=2, style=dotted];
m5_510 -> m5_512  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_510 -> m5_513  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_510 -> m5_514  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_511 -> m5_512  [key=0, style=solid];
m5_511 -> m5_109  [key=2, style=dotted];
m5_512 -> m5_513  [key=0, style=solid];
m5_512 -> m5_66  [key=2, style=dotted];
m5_513 -> m5_514  [key=0, style=solid];
m5_513 -> m5_66  [key=2, style=dotted];
m5_514 -> m5_515  [key=0, style=solid];
m5_515 -> m5_516  [key=0, style=solid];
m5_515 -> m5_66  [key=2, style=dotted];
m5_516 -> m5_517  [key=0, style=solid];
m5_517 -> m5_518  [key=0, style=solid];
m5_517 -> m5_93  [key=2, style=dotted];
m5_517 -> m5_519  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_517 -> m5_520  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_517 -> m5_521  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_518 -> m5_519  [key=0, style=solid];
m5_518 -> m5_109  [key=2, style=dotted];
m5_519 -> m5_520  [key=0, style=solid];
m5_519 -> m5_66  [key=2, style=dotted];
m5_520 -> m5_521  [key=0, style=solid];
m5_520 -> m5_66  [key=2, style=dotted];
m5_521 -> m5_522  [key=0, style=solid];
m5_521 -> m5_523  [key=1, style=dashed, color=darkseagreen4, label=c];
m5_522 -> m5_523  [key=0, style=solid];
m5_522 -> m5_66  [key=2, style=dotted];
m5_523 -> m5_524  [key=0, style=solid];
m5_524 -> m5_525  [key=0, style=solid];
m5_524 -> m5_109  [key=2, style=dotted];
m5_525 -> m5_506  [key=0, style=bold, color=blue];
m5_270 -> m5_271  [key=0, style=solid];
m5_271 -> m5_272  [key=0, style=solid];
m5_272 -> m5_270  [key=0, style=bold, color=blue];
m5_101 -> m5_102  [key=0, style=solid];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_100  [key=2, style=dotted];
m5_103 -> m5_104  [key=0, style=solid];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_11  [key=2, style=dotted];
m5_104 -> m5_108  [key=2, style=dotted];
m5_104 -> m5_106  [key=1, style=dashed, color=darkseagreen4, label=employee];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_66  [key=2, style=dotted];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_109  [key=2, style=dotted];
m5_107 -> m5_101  [key=0, style=bold, color=blue];
m5_457 -> m5_458  [key=0, style=solid];
m5_458 -> m5_459  [key=0, style=solid];
m5_458 -> m5_471  [key=2, style=dotted];
m5_458 -> m5_460  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_458 -> m5_461  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_458 -> m5_462  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_459 -> m5_460  [key=0, style=solid];
m5_459 -> m5_455  [key=2, style=dotted];
m5_459 -> m5_318  [key=2, style=dotted];
m5_460 -> m5_461  [key=0, style=solid];
m5_460 -> m5_318  [key=2, style=dotted];
m5_461 -> m5_462  [key=0, style=solid];
m5_461 -> m5_318  [key=2, style=dotted];
m5_462 -> m5_463  [key=0, style=solid];
m5_462 -> m5_201  [key=2, style=dotted];
m5_462 -> m5_464  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_463 -> m5_464  [key=0, style=solid];
m5_463 -> m5_13  [key=2, style=dotted];
m5_464 -> m5_465  [key=0, style=solid];
m5_464 -> m5_93  [key=2, style=dotted];
m5_464 -> m5_466  [key=1, style=dashed, color=darkseagreen4, label=l2];
m5_464 -> m5_467  [key=1, style=dashed, color=darkseagreen4, label=l2];
m5_464 -> m5_468  [key=1, style=dashed, color=darkseagreen4, label=l2];
m5_464 -> m5_469  [key=1, style=dashed, color=darkseagreen4, label=l2];
m5_465 -> m5_466  [key=0, style=solid];
m5_465 -> m5_109  [key=2, style=dotted];
m5_466 -> m5_467  [key=0, style=solid];
m5_466 -> m5_66  [key=2, style=dotted];
m5_467 -> m5_468  [key=0, style=solid];
m5_467 -> m5_109  [key=2, style=dotted];
m5_468 -> m5_469  [key=0, style=solid];
m5_468 -> m5_66  [key=2, style=dotted];
m5_469 -> m5_470  [key=0, style=solid];
m5_469 -> m5_66  [key=2, style=dotted];
m5_470 -> m5_457  [key=0, style=bold, color=blue];
m5_413 -> m5_414  [key=0, style=solid];
m5_414 -> m5_415  [key=0, style=solid];
m5_414 -> m5_330  [key=2, style=dotted];
m5_414 -> m5_418  [key=2, style=dotted];
m5_415 -> m5_416  [key=0, style=solid];
m5_415 -> m5_11  [key=2, style=dotted];
m5_415 -> m5_419  [key=2, style=dotted];
m5_415 -> m5_420  [key=2, style=dotted];
m5_415 -> m5_12  [key=2, style=dotted];
m5_416 -> m5_417  [key=0, style=solid];
m5_416 -> m5_13  [key=2, style=dotted];
m5_417 -> m5_413  [key=0, style=bold, color=blue];
m5_672 -> m5_690  [key=0, style=solid];
m5_690 -> m5_691  [key=0, style=solid];
m5_690 -> m5_7  [key=2, style=dotted];
m5_691 -> m5_672  [key=0, style=bold, color=blue];
m5_169 -> m5_170  [key=0, style=solid];
m5_170 -> m5_171  [key=0, style=solid];
m5_171 -> m5_172  [key=0, style=solid];
m5_172 -> m5_173  [key=0, style=solid];
m5_172 -> m5_11  [key=2, style=dotted];
m5_172 -> m5_179  [key=2, style=dotted];
m5_172 -> m5_174  [key=1, style=dashed, color=darkseagreen4, label=message];
m5_173 -> m5_174  [key=0, style=solid];
m5_173 -> m5_66  [key=2, style=dotted];
m5_174 -> m5_175  [key=0, style=solid];
m5_174 -> m5_176  [key=1, style=dashed, color=darkseagreen4, label=request];
m5_174 -> m5_177  [key=1, style=dashed, color=darkseagreen4, label=request];
m5_175 -> m5_176  [key=0, style=solid];
m5_175 -> m5_109  [key=2, style=dotted];
m5_176 -> m5_177  [key=0, style=solid];
m5_176 -> m5_109  [key=2, style=dotted];
m5_177 -> m5_178  [key=0, style=solid];
m5_177 -> m5_109  [key=2, style=dotted];
m5_178 -> m5_169  [key=0, style=bold, color=blue];
m5_377 -> m5_378  [key=0, style=solid];
m5_378 -> m5_379  [key=0, style=solid];
m5_378 -> m5_394  [key=2, style=dotted];
m5_378 -> m5_381  [key=1, style=dashed, color=darkseagreen4, label=testerObject];
m5_378 -> m5_385  [key=1, style=dashed, color=darkseagreen4, label=testerObject];
m5_379 -> m5_380  [key=0, style=solid];
m5_379 -> m5_124  [key=2, style=dotted];
m5_381 -> m5_382  [key=0, style=solid];
m5_385 -> m5_386  [key=0, style=solid];
m5_385 -> m5_12  [key=2, style=dotted];
m5_385 -> m5_387  [key=1, style=dashed, color=darkseagreen4, label=output];
m5_385 -> m5_388  [key=1, style=dashed, color=darkseagreen4, label=output];
m5_380 -> m5_381  [key=0, style=solid];
m5_380 -> m5_392  [key=1, style=dashed, color=darkseagreen4, label=data];
m5_392 -> m5_393  [key=0, style=solid];
m5_392 -> m5_395  [key=2, style=dotted];
m5_382 -> m5_383  [key=0, style=solid];
m5_382 -> m5_11  [key=2, style=dotted];
m5_382 -> m5_384  [key=1, style=dashed, color=darkseagreen4, label=jsonSettings];
m5_382 -> m5_385  [key=1, style=dashed, color=darkseagreen4, label=jsonSettings];
m5_382 -> m5_388  [key=1, style=dashed, color=darkseagreen4, label=jsonSettings];
m5_383 -> m5_384  [key=0, style=solid];
m5_384 -> m5_385  [key=0, style=solid];
m5_388 -> m5_389  [key=0, style=solid];
m5_388 -> m5_179  [key=2, style=dotted];
m5_388 -> m5_390  [key=1, style=dashed, color=darkseagreen4, label=obj];
m5_388 -> m5_391  [key=1, style=dashed, color=darkseagreen4, label=obj];
m5_386 -> m5_387  [key=0, style=solid];
m5_386 -> m5_100  [key=2, style=dotted];
m5_387 -> m5_388  [key=0, style=solid];
m5_387 -> m5_13  [key=2, style=dotted];
m5_389 -> m5_390  [key=0, style=solid];
m5_389 -> m5_321  [key=2, style=dotted];
m5_390 -> m5_391  [key=0, style=solid];
m5_390 -> m5_65  [key=2, style=dotted];
m5_391 -> m5_392  [key=0, style=solid];
m5_393 -> m5_377  [key=0, style=bold, color=blue];
m5_72 -> m5_73  [key=0, style=solid];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_61  [key=2, style=dotted];
m5_73 -> m5_11  [key=2, style=dotted];
m5_73 -> m5_71  [key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_13  [key=2, style=dotted];
m5_75 -> m5_72  [key=0, style=bold, color=blue];
m5_116 -> m5_117  [key=0, style=solid];
m5_117 -> m5_118  [key=0, style=solid];
m5_117 -> m5_121  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_121  [key=1, style=dashed, color=darkseagreen4, label=personRef];
m5_121 -> m5_122  [key=0, style=solid];
m5_121 -> m5_13  [key=2, style=dotted];
m5_119 -> m5_120  [key=0, style=solid];
m5_119 -> m5_6  [key=2, style=dotted];
m5_119 -> m5_92  [key=2, style=dotted];
m5_119 -> m5_123  [key=2, style=dotted];
m5_119 -> m5_124  [key=2, style=dotted];
m5_120 -> m5_121  [key=0, style=solid];
m5_120 -> m5_11  [key=2, style=dotted];
m5_120 -> m5_12  [key=2, style=dotted];
m5_122 -> m5_116  [key=0, style=bold, color=blue];
m5_593 -> m5_594  [key=0, style=solid];
m5_594 -> m5_595  [key=0, style=solid];
m5_594 -> m5_597  [key=1, style=dashed, color=darkseagreen4, label=contextKey];
m5_594 -> m5_602  [key=1, style=dashed, color=darkseagreen4, label=contextKey];
m5_594 -> m5_594  [key=3, color=darkorchid, style=bold, label="Local variable string contextKey"];
m5_595 -> m5_596  [key=0, style=solid];
m5_595 -> m5_604  [key=2, style=dotted];
m5_595 -> m5_597  [key=1, style=dashed, color=darkseagreen4, label=someValue];
m5_595 -> m5_602  [key=1, style=dashed, color=darkseagreen4, label=someValue];
m5_597 -> m5_598  [key=0, style=solid];
m5_597 -> m5_318  [key=2, style=dotted];
m5_602 -> m5_603  [key=0, style=solid];
m5_602 -> m5_109  [key=2, style=dotted];
m5_596 -> m5_597  [key=0, style=solid];
m5_596 -> m5_7  [key=2, style=dotted];
m5_596 -> m5_599  [key=1, style=dashed, color=darkseagreen4, label=inputContext];
m5_599 -> m5_600  [key=0, style=solid];
m5_599 -> m5_605  [key=2, style=dotted];
m5_599 -> m5_601  [key=1, style=dashed, color=darkseagreen4, label=serializedString];
m5_598 -> m5_599  [key=0, style=solid];
m5_598 -> m5_11  [key=2, style=dotted];
m5_598 -> m5_601  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerSettings];
m5_601 -> m5_602  [key=0, style=solid];
m5_601 -> m5_346  [key=2, style=dotted];
m5_600 -> m5_601  [key=0, style=solid];
m5_600 -> m5_13  [key=2, style=dotted];
m5_603 -> m5_593  [key=0, style=bold, color=blue];
m5_150 -> m5_151  [key=0, style=solid];
m5_151 -> m5_152  [key=0, style=solid];
m5_152 -> m5_153  [key=0, style=solid];
m5_153 -> m5_154  [key=0, style=solid];
m5_153 -> m5_156  [key=2, style=dotted];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_157  [key=2, style=dotted];
m5_154 -> m5_13  [key=2, style=dotted];
m5_155 -> m5_150  [key=0, style=bold, color=blue];
m5_257 -> m5_258  [key=0, style=solid];
m5_258 -> m5_259  [key=0, style=solid];
m5_258 -> m5_270  [key=2, style=dotted];
m5_258 -> m5_260  [key=1, style=dashed, color=darkseagreen4, label=binder];
m5_259 -> m5_260  [key=0, style=solid];
m5_259 -> m5_6  [key=2, style=dotted];
m5_259 -> m5_243  [key=2, style=dotted];
m5_259 -> m5_244  [key=2, style=dotted];
m5_260 -> m5_261  [key=0, style=solid];
m5_260 -> m5_11  [key=2, style=dotted];
m5_260 -> m5_12  [key=2, style=dotted];
m5_260 -> m5_262  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_261 -> m5_262  [key=0, style=solid];
m5_261 -> m5_13  [key=2, style=dotted];
m5_262 -> m5_263  [key=0, style=solid];
m5_262 -> m5_11  [key=2, style=dotted];
m5_262 -> m5_270  [key=2, style=dotted];
m5_262 -> m5_179  [key=2, style=dotted];
m5_262 -> m5_264  [key=1, style=dashed, color=darkseagreen4, label=newValues];
m5_262 -> m5_266  [key=1, style=dashed, color=darkseagreen4, label=newValues];
m5_262 -> m5_267  [key=1, style=dashed, color=darkseagreen4, label=newValues];
m5_263 -> m5_264  [key=0, style=solid];
m5_263 -> m5_66  [key=2, style=dotted];
m5_264 -> m5_265  [key=0, style=solid];
m5_266 -> m5_267  [key=0, style=solid];
m5_266 -> m5_66  [key=2, style=dotted];
m5_267 -> m5_268  [key=0, style=solid];
m5_265 -> m5_266  [key=0, style=solid];
m5_265 -> m5_109  [key=2, style=dotted];
m5_268 -> m5_269  [key=0, style=solid];
m5_268 -> m5_109  [key=2, style=dotted];
m5_269 -> m5_257  [key=0, style=bold, color=blue];
m5_421 -> m5_422  [key=0, style=solid];
m5_421 -> m5_95  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Type BindToType"];
m5_422 -> m5_423  [key=0, style=solid];
m5_423 -> m5_421  [key=0, style=bold, color=blue];
m5_247 -> m5_248  [key=0, style=solid];
m5_247 -> m5_249  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_248 -> m5_249  [key=0, style=solid];
m5_248 -> m5_250  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m5_249 -> m5_250  [key=0, style=solid];
m5_250 -> m5_247  [key=0, style=bold, color=blue];
m5_158 -> m5_159  [key=0, style=solid];
m5_159 -> m5_160  [key=0, style=solid];
m5_159 -> m5_163  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_159 -> m5_159  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_160 -> m5_161  [key=0, style=solid];
m5_160 -> m5_36  [key=2, style=dotted];
m5_160 -> m5_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_161 -> m5_158  [key=0, style=bold, color=blue];
m5_242 -> m5_245  [key=0, style=solid];
m5_245 -> m5_246  [key=0, style=solid];
m5_246 -> m5_242  [key=0, style=bold, color=blue];
m5_353 -> m5_359  [key=0, style=solid];
m5_359 -> m5_360  [key=0, style=solid];
m5_360 -> m5_353  [key=0, style=bold, color=blue];
m5_165 -> m5_166  [key=0, style=solid];
m5_166 -> m5_167  [key=0, style=solid];
m5_167 -> m5_168  [key=0, style=solid];
m5_168 -> m5_165  [key=0, style=bold, color=blue];
m5_655 -> m5_656  [key=0, style=solid];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_43  [key=2, style=dotted];
m5_38 -> m5_44  [key=2, style=dotted];
m5_38 -> m5_45  [key=2, style=dotted];
m5_38 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_37 -> m5_38  [key=0, style=solid];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_46  [key=2, style=dotted];
m5_39 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label=ser];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_47  [key=2, style=dotted];
m5_40 -> m5_41  [key=0, style=solid];
m5_42 -> m5_37  [key=0, style=bold, color=blue];
m5_163 -> m5_164  [key=0, style=solid];
m5_163 -> m5_11  [key=2, style=dotted];
m5_163 -> m5_108  [key=2, style=dotted];
m5_162 -> m5_163  [key=0, style=solid];
m5_164 -> m5_162  [key=0, style=bold, color=blue];
m5_656 -> m5_657  [key=0, style=solid];
m5_657 -> m5_655  [key=0, style=bold, color=blue];
m5_67 -> m5_68  [key=0, style=solid];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_61  [key=2, style=dotted];
m5_68 -> m5_11  [key=2, style=dotted];
m5_68 -> m5_71  [key=2, style=dotted];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_13  [key=2, style=dotted];
m5_70 -> m5_67  [key=0, style=bold, color=blue];
m5_188 -> m5_189  [key=0, style=solid];
m5_189 -> m5_190  [key=0, style=solid];
m5_189 -> m5_100  [key=2, style=dotted];
m5_189 -> m5_192  [key=1, style=dashed, color=darkseagreen4, label=typeNamePropertyRef];
m5_190 -> m5_191  [key=0, style=solid];
m5_190 -> m5_200  [key=2, style=dotted];
m5_192 -> m5_193  [key=0, style=solid];
m5_192 -> m5_13  [key=2, style=dotted];
m5_191 -> m5_192  [key=0, style=solid];
m5_191 -> m5_201  [key=2, style=dotted];
m5_191 -> m5_193  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_193 -> m5_194  [key=0, style=solid];
m5_193 -> m5_93  [key=2, style=dotted];
m5_193 -> m5_195  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m5_193 -> m5_196  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m5_194 -> m5_195  [key=0, style=solid];
m5_194 -> m5_109  [key=2, style=dotted];
m5_195 -> m5_196  [key=0, style=solid];
m5_195 -> m5_66  [key=2, style=dotted];
m5_196 -> m5_197  [key=0, style=solid];
m5_196 -> m5_198  [key=1, style=dashed, color=darkseagreen4, label=nested];
m5_197 -> m5_198  [key=0, style=solid];
m5_197 -> m5_109  [key=2, style=dotted];
m5_198 -> m5_199  [key=0, style=solid];
m5_198 -> m5_109  [key=2, style=dotted];
m5_199 -> m5_188  [key=0, style=bold, color=blue];
m5_429 -> m5_430  [key=0, style=solid];
m5_430 -> m5_431  [key=0, style=solid];
m5_430 -> m5_437  [key=2, style=dotted];
m5_430 -> m5_432  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_430 -> m5_433  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_430 -> m5_434  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_431 -> m5_432  [key=0, style=solid];
m5_431 -> m5_438  [key=2, style=dotted];
m5_432 -> m5_433  [key=0, style=solid];
m5_432 -> m5_438  [key=2, style=dotted];
m5_433 -> m5_434  [key=0, style=solid];
m5_433 -> m5_438  [key=2, style=dotted];
m5_434 -> m5_435  [key=0, style=solid];
m5_434 -> m5_201  [key=2, style=dotted];
m5_435 -> m5_436  [key=0, style=solid];
m5_435 -> m5_13  [key=2, style=dotted];
m5_436 -> m5_429  [key=0, style=bold, color=blue];
m5_94 -> m5_95  [key=0, style=solid];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_100  [key=2, style=dotted];
m5_95 -> m5_98  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_92  [key=2, style=dotted];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_13  [key=2, style=dotted];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_11  [key=2, style=dotted];
m5_97 -> m5_12  [key=2, style=dotted];
m5_99 -> m5_94  [key=0, style=bold, color=blue];
m5_14 -> m5_15  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_7  [key=2, style=dotted];
m5_15 -> m5_19  [key=2, style=dotted];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_11  [key=2, style=dotted];
m5_16 -> m5_12  [key=2, style=dotted];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_13  [key=2, style=dotted];
m5_18 -> m5_14  [key=0, style=bold, color=blue];
m5_565 -> m5_566  [key=0, style=solid];
m5_566 -> m5_567  [key=0, style=solid];
m5_566 -> m5_591  [key=2, style=dotted];
m5_566 -> m5_572  [key=1, style=dashed, color=darkseagreen4, label=d1];
m5_566 -> m5_573  [key=1, style=dashed, color=darkseagreen4, label=d1];
m5_567 -> m5_568  [key=0, style=solid];
m5_567 -> m5_592  [key=2, style=dotted];
m5_567 -> m5_571  [key=1, style=dashed, color=darkseagreen4, label=data];
m5_567 -> m5_572  [key=1, style=dashed, color=darkseagreen4, label=data];
m5_572 -> m5_573  [key=0, style=solid];
m5_573 -> m5_574  [key=0, style=solid];
m5_573 -> m5_201  [key=2, style=dotted];
m5_573 -> m5_575  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_568 -> m5_569  [key=0, style=solid];
m5_568 -> m5_455  [key=2, style=dotted];
m5_571 -> m5_572  [key=0, style=solid];
m5_569 -> m5_570  [key=0, style=solid];
m5_569 -> m5_592  [key=2, style=dotted];
m5_569 -> m5_571  [key=1, style=dashed, color=darkseagreen4, label=data2];
m5_570 -> m5_571  [key=0, style=solid];
m5_570 -> m5_455  [key=2, style=dotted];
m5_574 -> m5_575  [key=0, style=solid];
m5_574 -> m5_13  [key=2, style=dotted];
m5_575 -> m5_576  [key=0, style=solid];
m5_575 -> m5_93  [key=2, style=dotted];
m5_575 -> m5_577  [key=1, style=dashed, color=darkseagreen4, label=d2];
m5_575 -> m5_578  [key=1, style=dashed, color=darkseagreen4, label=d2];
m5_576 -> m5_577  [key=0, style=solid];
m5_576 -> m5_321  [key=2, style=dotted];
m5_577 -> m5_578  [key=0, style=solid];
m5_577 -> m5_321  [key=2, style=dotted];
m5_578 -> m5_579  [key=0, style=solid];
m5_578 -> m5_581  [key=1, style=dashed, color=darkseagreen4, label=data3];
m5_579 -> m5_580  [key=0, style=solid];
m5_581 -> m5_582  [key=0, style=solid];
m5_580 -> m5_581  [key=0, style=solid];
m5_580 -> m5_109  [key=2, style=dotted];
m5_582 -> m5_583  [key=0, style=solid];
m5_583 -> m5_584  [key=0, style=solid];
m5_583 -> m5_109  [key=2, style=dotted];
m5_584 -> m5_585  [key=0, style=solid];
m5_585 -> m5_586  [key=0, style=solid];
m5_585 -> m5_93  [key=2, style=dotted];
m5_586 -> m5_587  [key=0, style=solid];
m5_587 -> m5_588  [key=0, style=solid];
m5_588 -> m5_589  [key=0, style=solid];
m5_589 -> m5_590  [key=0, style=solid];
m5_589 -> m5_109  [key=2, style=dotted];
m5_590 -> m5_565  [key=0, style=bold, color=blue];
m5_615 -> m5_696  [key=0, style=solid];
m5_696 -> m5_615  [key=0, style=bold, color=blue];
m5_628 -> m5_629  [key=0, style=solid];
m5_629 -> m5_630  [key=0, style=solid];
m5_629 -> m5_639  [key=2, style=dotted];
m5_629 -> m5_632  [key=1, style=dashed, color=darkseagreen4, label=pp];
m5_630 -> m5_631  [key=0, style=solid];
m5_630 -> m5_615  [key=2, style=dotted];
m5_630 -> m5_616  [key=2, style=dotted];
m5_632 -> m5_633  [key=0, style=solid];
m5_632 -> m5_605  [key=2, style=dotted];
m5_632 -> m5_634  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_631 -> m5_632  [key=0, style=solid];
m5_631 -> m5_11  [key=2, style=dotted];
m5_631 -> m5_634  [key=1, style=dashed, color=darkseagreen4, label=settings];
m5_634 -> m5_635  [key=0, style=solid];
m5_634 -> m5_179  [key=2, style=dotted];
m5_633 -> m5_634  [key=0, style=solid];
m5_633 -> m5_13  [key=2, style=dotted];
m5_635 -> m5_636  [key=0, style=solid];
m5_635 -> m5_637  [key=1, style=dashed, color=darkseagreen4, label=p2];
m5_636 -> m5_637  [key=0, style=solid];
m5_636 -> m5_66  [key=2, style=dotted];
m5_637 -> m5_638  [key=0, style=solid];
m5_637 -> m5_109  [key=2, style=dotted];
m5_638 -> m5_628  [key=0, style=bold, color=blue];
m5_424 -> m5_425  [key=0, style=solid];
m5_424 -> m5_426  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_425 -> m5_426  [key=0, style=solid];
m5_425 -> m5_427  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m5_426 -> m5_427  [key=0, style=solid];
m5_426 -> m5_428  [key=2, style=dotted];
m5_427 -> m5_424  [key=0, style=bold, color=blue];
m5_640 -> m5_641  [key=0, style=solid];
m5_641 -> m5_642  [key=0, style=solid];
m5_641 -> m5_6  [key=2, style=dotted];
m5_641 -> m5_643  [key=1, style=dashed, color=darkseagreen4, label=input];
m5_641 -> m5_644  [key=1, style=dashed, color=darkseagreen4, label=input];
m5_641 -> m5_645  [key=1, style=dashed, color=darkseagreen4, label=input];
m5_642 -> m5_643  [key=0, style=solid];
m5_642 -> m5_652  [key=2, style=dotted];
m5_642 -> m5_6  [key=2, style=dotted];
m5_642 -> m5_438  [key=2, style=dotted];
m5_643 -> m5_644  [key=0, style=solid];
m5_643 -> m5_652  [key=2, style=dotted];
m5_643 -> m5_6  [key=2, style=dotted];
m5_643 -> m5_438  [key=2, style=dotted];
m5_644 -> m5_645  [key=0, style=solid];
m5_644 -> m5_652  [key=2, style=dotted];
m5_644 -> m5_6  [key=2, style=dotted];
m5_644 -> m5_438  [key=2, style=dotted];
m5_645 -> m5_646  [key=0, style=solid];
m5_645 -> m5_11  [key=2, style=dotted];
m5_645 -> m5_12  [key=2, style=dotted];
m5_646 -> m5_647  [key=0, style=solid];
m5_646 -> m5_11  [key=2, style=dotted];
m5_646 -> m5_179  [key=2, style=dotted];
m5_647 -> m5_648  [key=0, style=solid];
m5_647 -> m5_653  [key=2, style=dotted];
m5_647 -> m5_654  [key=2, style=dotted];
m5_647 -> m5_655  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_647 -> m5_649  [key=1, style=dashed, color=darkseagreen4, label=strings];
m5_647 -> m5_650  [key=1, style=dashed, color=darkseagreen4, label=strings];
m5_648 -> m5_649  [key=0, style=solid];
m5_648 -> m5_109  [key=2, style=dotted];
m5_649 -> m5_650  [key=0, style=solid];
m5_649 -> m5_109  [key=2, style=dotted];
m5_650 -> m5_651  [key=0, style=solid];
m5_650 -> m5_109  [key=2, style=dotted];
m5_651 -> m5_640  [key=0, style=bold, color=blue];
m5_526 -> m5_527  [key=0, style=solid];
m5_527 -> m5_528  [key=0, style=solid];
m5_527 -> m5_546  [key=2, style=dotted];
m5_527 -> m5_7  [key=2, style=dotted];
m5_527 -> m5_455  [key=2, style=dotted];
m5_528 -> m5_529  [key=0, style=solid];
m5_528 -> m5_201  [key=2, style=dotted];
m5_528 -> m5_530  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_529 -> m5_530  [key=0, style=solid];
m5_529 -> m5_13  [key=2, style=dotted];
m5_530 -> m5_531  [key=0, style=solid];
m5_530 -> m5_93  [key=2, style=dotted];
m5_530 -> m5_532  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_530 -> m5_533  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_530 -> m5_534  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_531 -> m5_532  [key=0, style=solid];
m5_531 -> m5_109  [key=2, style=dotted];
m5_532 -> m5_533  [key=0, style=solid];
m5_532 -> m5_66  [key=2, style=dotted];
m5_533 -> m5_534  [key=0, style=solid];
m5_533 -> m5_66  [key=2, style=dotted];
m5_534 -> m5_535  [key=0, style=solid];
m5_535 -> m5_536  [key=0, style=solid];
m5_535 -> m5_66  [key=2, style=dotted];
m5_536 -> m5_537  [key=0, style=solid];
m5_537 -> m5_538  [key=0, style=solid];
m5_537 -> m5_93  [key=2, style=dotted];
m5_537 -> m5_539  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_537 -> m5_540  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_537 -> m5_541  [key=1, style=dashed, color=darkseagreen4, label=c2];
m5_538 -> m5_539  [key=0, style=solid];
m5_538 -> m5_109  [key=2, style=dotted];
m5_539 -> m5_540  [key=0, style=solid];
m5_539 -> m5_66  [key=2, style=dotted];
m5_540 -> m5_541  [key=0, style=solid];
m5_540 -> m5_66  [key=2, style=dotted];
m5_541 -> m5_542  [key=0, style=solid];
m5_541 -> m5_543  [key=1, style=dashed, color=darkseagreen4, label=c];
m5_542 -> m5_543  [key=0, style=solid];
m5_542 -> m5_66  [key=2, style=dotted];
m5_543 -> m5_544  [key=0, style=solid];
m5_544 -> m5_545  [key=0, style=solid];
m5_544 -> m5_109  [key=2, style=dotted];
m5_545 -> m5_526  [key=0, style=bold, color=blue];
m5_20 -> m5_21  [key=0, style=solid];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_6  [key=2, style=dotted];
m5_21 -> m5_25  [key=2, style=dotted];
m5_21 -> m5_19  [key=2, style=dotted];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_11  [key=2, style=dotted];
m5_22 -> m5_12  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_13  [key=2, style=dotted];
m5_24 -> m5_20  [key=0, style=bold, color=blue];
m5_547 -> m5_548  [key=0, style=solid];
m5_548 -> m5_549  [key=0, style=solid];
m5_548 -> m5_562  [key=2, style=dotted];
m5_548 -> m5_563  [key=2, style=dotted];
m5_548 -> m5_6  [key=2, style=dotted];
m5_548 -> m5_455  [key=2, style=dotted];
m5_548 -> n139  [key=2, style=dotted];
m5_549 -> m5_550  [key=0, style=solid];
m5_549 -> m5_201  [key=2, style=dotted];
m5_549 -> m5_551  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_550 -> m5_551  [key=0, style=solid];
m5_550 -> m5_13  [key=2, style=dotted];
m5_551 -> m5_552  [key=0, style=solid];
m5_551 -> m5_93  [key=2, style=dotted];
m5_551 -> m5_553  [key=1, style=dashed, color=darkseagreen4, label=o2];
m5_551 -> m5_554  [key=1, style=dashed, color=darkseagreen4, label=o2];
m5_551 -> m5_555  [key=1, style=dashed, color=darkseagreen4, label=o2];
m5_551 -> m5_556  [key=1, style=dashed, color=darkseagreen4, label=o2];
m5_551 -> m5_557  [key=1, style=dashed, color=darkseagreen4, label=o2];
m5_551 -> m5_558  [key=1, style=dashed, color=darkseagreen4, label=o2];
m5_552 -> m5_553  [key=0, style=solid];
m5_552 -> m5_321  [key=2, style=dotted];
m5_553 -> m5_554  [key=0, style=solid];
m5_553 -> m5_321  [key=2, style=dotted];
m5_554 -> m5_555  [key=0, style=solid];
m5_554 -> m5_66  [key=2, style=dotted];
m5_555 -> m5_556  [key=0, style=solid];
m5_555 -> m5_66  [key=2, style=dotted];
m5_556 -> m5_557  [key=0, style=solid];
m5_556 -> m5_66  [key=2, style=dotted];
m5_557 -> m5_558  [key=0, style=solid];
m5_557 -> m5_66  [key=2, style=dotted];
m5_558 -> m5_559  [key=0, style=solid];
m5_559 -> m5_560  [key=0, style=solid];
m5_560 -> m5_561  [key=0, style=solid];
m5_560 -> m5_109  [key=2, style=dotted];
m5_561 -> m5_547  [key=0, style=bold, color=blue];
m5_277 -> m5_278  [key=0, style=solid];
m5_278 -> m5_279  [key=0, style=solid];
m5_278 -> m5_255  [key=2, style=dotted];
m5_279 -> m5_280  [key=0, style=solid];
m5_279 -> m5_256  [key=2, style=dotted];
m5_280 -> m5_277  [key=0, style=bold, color=blue];
m5_403 -> m5_714  [key=0, style=solid];
m5_714 -> m5_715  [key=0, style=solid];
m5_715 -> m5_403  [key=0, style=bold, color=blue];
m5_354 -> m5_355  [key=0, style=solid];
m5_354 -> m5_356  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m5_355 -> m5_356  [key=0, style=solid];
m5_356 -> m5_357  [key=0, style=solid];
m5_357 -> m5_358  [key=0, style=solid];
m5_358 -> m5_354  [key=0, style=bold, color=blue];
m5_708 -> m5_709  [key=0, style=solid];
m5_708 -> m5_28  [key=3, color=darkorchid, style=bold, label="method methodReturn int GetHashCode"];
m5_709 -> m5_710  [key=0, style=solid];
m5_709 -> m5_711  [key=0, style=solid];
m5_710 -> m5_712  [key=0, style=solid];
m5_711 -> m5_712  [key=0, style=solid];
m5_711 -> m5_713  [key=2, style=dotted];
m5_712 -> m5_708  [key=0, style=bold, color=blue];
m5_439 -> m5_440  [key=0, style=solid];
m5_440 -> m5_441  [key=0, style=solid];
m5_440 -> m5_455  [key=2, style=dotted];
m5_440 -> m5_442  [key=1, style=dashed, color=darkseagreen4, label=c1];
m5_441 -> m5_442  [key=0, style=solid];
m5_441 -> m5_437  [key=2, style=dotted];
m5_441 -> m5_443  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_441 -> m5_444  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_441 -> m5_445  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_441 -> m5_446  [key=1, style=dashed, color=darkseagreen4, label=l];
m5_442 -> m5_443  [key=0, style=solid];
m5_442 -> m5_438  [key=2, style=dotted];
m5_443 -> m5_444  [key=0, style=solid];
m5_443 -> m5_456  [key=2, style=dotted];
m5_443 -> m5_124  [key=2, style=dotted];
m5_443 -> m5_438  [key=2, style=dotted];
m5_444 -> m5_445  [key=0, style=solid];
m5_444 -> m5_438  [key=2, style=dotted];
m5_445 -> m5_446  [key=0, style=solid];
m5_445 -> m5_438  [key=2, style=dotted];
m5_446 -> m5_447  [key=0, style=solid];
m5_446 -> m5_201  [key=2, style=dotted];
m5_446 -> m5_448  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_447 -> m5_448  [key=0, style=solid];
m5_447 -> m5_13  [key=2, style=dotted];
m5_448 -> m5_449  [key=0, style=solid];
m5_448 -> m5_93  [key=2, style=dotted];
m5_448 -> m5_450  [key=1, style=dashed, color=darkseagreen4, label=l2];
m5_448 -> m5_451  [key=1, style=dashed, color=darkseagreen4, label=l2];
m5_448 -> m5_452  [key=1, style=dashed, color=darkseagreen4, label=l2];
m5_448 -> m5_453  [key=1, style=dashed, color=darkseagreen4, label=l2];
m5_449 -> m5_450  [key=0, style=solid];
m5_449 -> m5_109  [key=2, style=dotted];
m5_450 -> m5_451  [key=0, style=solid];
m5_450 -> m5_66  [key=2, style=dotted];
m5_451 -> m5_452  [key=0, style=solid];
m5_451 -> m5_66  [key=2, style=dotted];
m5_452 -> m5_453  [key=0, style=solid];
m5_452 -> m5_66  [key=2, style=dotted];
m5_453 -> m5_454  [key=0, style=solid];
m5_453 -> m5_66  [key=2, style=dotted];
m5_454 -> m5_439  [key=0, style=bold, color=blue];
m5_692 -> m5_693  [key=0, style=solid];
m5_693 -> m5_694  [key=0, style=solid];
m5_693 -> m5_695  [key=2, style=dotted];
m5_694 -> m5_692  [key=0, style=bold, color=blue];
m5_716 -> m5_717  [key=0, style=solid];
m5_717 -> m5_718  [key=0, style=solid];
m5_717 -> m5_719  [key=2, style=dotted];
m5_718 -> m5_716  [key=0, style=bold, color=blue];
m5_251 -> m5_252  [key=0, style=solid];
m5_252 -> m5_253  [key=0, style=solid];
m5_252 -> m5_255  [key=2, style=dotted];
m5_253 -> m5_254  [key=0, style=solid];
m5_253 -> m5_256  [key=2, style=dotted];
m5_254 -> m5_251  [key=0, style=bold, color=blue];
m5_744 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=sb];
m5_745 -> m5_163  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_746 -> m5_166  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest"];
m5_746 -> m5_167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SendHttpRequest"];
m5_747 -> m5_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder"];
m5_747 -> m5_252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder"];
m5_748 -> m5_271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder"];
m5_748 -> m5_278  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.NewTypeNameSerializationBinder"];
m5_749 -> m5_355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m5_749 -> m5_356  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m5_749 -> m5_357  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m5_749 -> m5_359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m5_749 -> m5_362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m5_749 -> m5_365  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m5_749 -> m5_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m5_749 -> m5_368  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m5_749 -> m5_375  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>"];
m5_750 -> m5_399  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests"];
m5_750 -> m5_400  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests"];
m5_750 -> m5_401  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests"];
m5_751 -> m5_690  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DataType"];
m5_752 -> m5_693  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MyParent"];
m5_752 -> m5_698  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MyParent"];
m5_753 -> m5_705  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper"];
m5_753 -> m5_709  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper"];
m5_753 -> m5_711  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper"];
m5_754 -> m5_714  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m5_754 -> m5_717  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m5_754 -> m5_721  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m5_754 -> m5_726  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m5_754 -> m5_729  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m5_754 -> m5_735  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m5_754 -> m5_737  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.Example"];
m5_755 -> m5_741  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GroupingInfo"];
m6_246 -> m6_247  [key=0, style=solid];
m6_246 -> m6_248  [key=1, style=dashed, color=darkseagreen4, label="System.Dynamic.BinaryOperationBinder"];
m6_246 -> m6_250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_246 -> m6_253  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_246 -> m6_256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_246 -> m6_259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_246 -> m6_262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_246 -> m6_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_247 -> m6_248  [key=0, style=solid];
m6_247 -> m6_250  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m6_247 -> m6_253  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m6_247 -> m6_256  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m6_247 -> m6_259  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m6_247 -> m6_262  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m6_247 -> m6_265  [key=1, style=dashed, color=darkseagreen4, label=compareValue];
m6_248 -> m6_249  [key=0, style=solid];
m6_248 -> m6_252  [key=0, style=solid];
m6_248 -> m6_255  [key=0, style=solid];
m6_248 -> m6_258  [key=0, style=solid];
m6_248 -> m6_261  [key=0, style=solid];
m6_248 -> m6_264  [key=0, style=solid];
m6_250 -> m6_251  [key=0, style=solid];
m6_250 -> m6_27  [key=2, style=dotted];
m6_253 -> m6_254  [key=0, style=solid];
m6_253 -> m6_27  [key=2, style=dotted];
m6_256 -> m6_257  [key=0, style=solid];
m6_256 -> m6_27  [key=2, style=dotted];
m6_259 -> m6_260  [key=0, style=solid];
m6_259 -> m6_27  [key=2, style=dotted];
m6_262 -> m6_263  [key=0, style=solid];
m6_262 -> m6_27  [key=2, style=dotted];
m6_265 -> m6_266  [key=0, style=solid];
m6_265 -> m6_27  [key=2, style=dotted];
m6_249 -> m6_250  [key=0, style=solid];
m6_252 -> m6_253  [key=0, style=solid];
m6_255 -> m6_256  [key=0, style=solid];
m6_258 -> m6_259  [key=0, style=solid];
m6_261 -> m6_262  [key=0, style=solid];
m6_264 -> m6_265  [key=0, style=solid];
m6_251 -> m6_269  [key=0, style=solid];
m6_254 -> m6_269  [key=0, style=solid];
m6_257 -> m6_269  [key=0, style=solid];
m6_260 -> m6_269  [key=0, style=solid];
m6_263 -> m6_269  [key=0, style=solid];
m6_266 -> m6_269  [key=0, style=solid];
m6_267 -> m6_268  [key=0, style=solid];
m6_267 -> m6_269  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m6_268 -> m6_269  [key=0, style=solid];
m6_269 -> m6_246  [key=0, style=bold, color=blue];
m6_18 -> m6_19  [key=0, style=solid];
m6_19 -> m6_18  [key=0, style=bold, color=blue];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType"];
m6_27 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_38  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_39  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_42  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_46  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_47  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_51  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_54  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_56  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_58  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_60  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_61  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_64  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_66  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_67  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_27 -> m6_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType"];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=0, style=solid];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_32  [key=0, style=solid];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_34  [key=0, style=solid];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_41  [key=0, style=solid];
m6_34 -> m6_43  [key=0, style=solid];
m6_34 -> m6_49  [key=0, style=solid];
m6_34 -> m6_53  [key=0, style=solid];
m6_34 -> m6_63  [key=0, style=solid];
m6_34 -> m6_73  [key=0, style=solid];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_38  [key=0, style=solid];
m6_37 -> m6_74  [key=0, style=solid];
m6_37 -> m6_75  [key=2, style=dotted];
m6_37 -> m6_76  [key=2, style=dotted];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_40  [key=0, style=solid];
m6_39 -> m6_74  [key=0, style=solid];
m6_39 -> m6_77  [key=2, style=dotted];
m6_40 -> m6_74  [key=0, style=solid];
m6_40 -> m6_78  [key=2, style=dotted];
m6_40 -> m6_79  [key=2, style=dotted];
m6_42 -> m6_74  [key=0, style=solid];
m6_42 -> m6_77  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_80  [key=2, style=dotted];
m6_46 -> m6_48  [key=1, style=dashed, color=darkseagreen4, label=s1];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_80  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_82  [key=2, style=dotted];
m6_50 -> m6_52  [key=1, style=dashed, color=darkseagreen4, label=b1];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_82  [key=2, style=dotted];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_58  [key=0, style=solid];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_84  [key=2, style=dotted];
m6_55 -> m6_57  [key=1, style=dashed, color=darkseagreen4, label=date1];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_84  [key=2, style=dotted];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_60  [key=0, style=solid];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_62  [key=1, style=dashed, color=darkseagreen4, label=date1];
m6_61 -> m6_62  [key=0, style=solid];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_66  [key=0, style=solid];
m6_64 -> m6_68  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryParse"];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label=bytes1];
m6_66 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label=bytes1];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_70  [key=1, style=dashed, color=darkseagreen4, label=bytes2];
m6_67 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label=bytes2];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_89  [key=2, style=dotted];
m6_73 -> m6_90  [key=2, style=dotted];
m6_29 -> m6_74  [key=0, style=solid];
m6_31 -> m6_74  [key=0, style=solid];
m6_33 -> m6_74  [key=0, style=solid];
m6_35 -> m6_36  [key=0, style=solid];
m6_41 -> m6_42  [key=0, style=solid];
m6_43 -> m6_44  [key=0, style=solid];
m6_49 -> m6_50  [key=0, style=solid];
m6_53 -> m6_54  [key=0, style=solid];
m6_63 -> m6_64  [key=0, style=solid];
m6_44 -> m6_45  [key=0, style=solid];
m6_45 -> m6_46  [key=0, style=solid];
m6_48 -> m6_74  [key=0, style=solid];
m6_48 -> m6_81  [key=2, style=dotted];
m6_52 -> m6_74  [key=0, style=solid];
m6_52 -> m6_83  [key=2, style=dotted];
m6_57 -> m6_74  [key=0, style=solid];
m6_57 -> m6_85  [key=2, style=dotted];
m6_59 -> m6_74  [key=0, style=solid];
m6_59 -> m6_86  [key=2, style=dotted];
m6_62 -> m6_74  [key=0, style=solid];
m6_62 -> m6_87  [key=2, style=dotted];
m6_62 -> m6_62  [key=1, style=dashed, color=darkseagreen4, label=date1];
m6_65 -> m6_74  [key=0, style=solid];
m6_65 -> m6_86  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_70  [key=0, style=solid];
m6_68 -> m6_64  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Tests.TestObjects.Ratio result"];
m6_72 -> m6_74  [key=0, style=solid];
m6_72 -> m6_88  [key=2, style=dotted];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_72  [key=0, style=solid];
m6_69 -> m6_74  [key=0, style=solid];
m6_71 -> m6_74  [key=0, style=solid];
m6_74 -> m6_27  [key=0, style=bold, color=blue];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_8  [key=0, style=bold, color=blue];
m6_106 -> m6_107  [key=0, style=solid];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_0  [key=2, style=dotted];
m6_108 -> m6_106  [key=0, style=bold, color=blue];
m6_132 -> m6_134  [key=0, style=solid];
m6_132 -> m6_136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType?"];
m6_132 -> m6_140  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType?"];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_136  [key=0, style=solid];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_141  [key=0, style=solid];
m6_140 -> m6_142  [key=0, style=solid];
m6_135 -> m6_142  [key=0, style=solid];
m6_137 -> m6_138  [key=0, style=solid];
m6_141 -> m6_142  [key=0, style=solid];
m6_138 -> m6_139  [key=0, style=solid];
m6_139 -> m6_140  [key=0, style=solid];
m6_142 -> m6_132  [key=0, style=bold, color=blue];
m6_223 -> m6_224  [key=0, style=solid];
m6_224 -> m6_225  [key=0, style=solid];
m6_224 -> m6_226  [key=0, style=solid];
m6_225 -> m6_227  [key=0, style=solid];
m6_226 -> m6_227  [key=0, style=solid];
m6_226 -> m6_205  [key=2, style=dotted];
m6_227 -> m6_223  [key=0, style=bold, color=blue];
m6_100 -> m6_101  [key=0, style=solid];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_4  [key=2, style=dotted];
m6_102 -> m6_100  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType"];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_0  [key=0, style=bold, color=blue];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_16  [key=0, style=bold, color=blue];
m6_233 -> m6_234  [key=0, style=solid];
m6_233 -> m6_235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_233 -> m6_237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_233 -> m6_240  [key=1, style=dashed, color=darkseagreen4, label="System.Dynamic.ConvertBinder"];
m6_233 -> m6_241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_234 -> m6_235  [key=0, style=solid];
m6_234 -> m6_237  [key=0, style=solid];
m6_235 -> m6_236  [key=0, style=solid];
m6_237 -> m6_238  [key=0, style=solid];
m6_240 -> m6_243  [key=0, style=solid];
m6_240 -> m6_244  [key=2, style=dotted];
m6_241 -> m6_242  [key=0, style=solid];
m6_241 -> m6_245  [key=2, style=dotted];
m6_241 -> m6_243  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m6_236 -> m6_243  [key=0, style=solid];
m6_238 -> m6_239  [key=0, style=solid];
m6_238 -> m6_241  [key=0, style=solid];
m6_239 -> m6_240  [key=0, style=solid];
m6_242 -> m6_243  [key=0, style=solid];
m6_243 -> m6_233  [key=0, style=bold, color=blue];
m6_103 -> m6_104  [key=0, style=solid];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_0  [key=2, style=dotted];
m6_105 -> m6_103  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_4  [key=0, style=bold, color=blue];
m6_26 -> m6_207  [key=0, style=solid];
m6_207 -> m6_208  [key=0, style=solid];
m6_207 -> m6_27  [key=2, style=dotted];
m6_208 -> m6_26  [key=0, style=bold, color=blue];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_112  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_109 -> m6_114  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_109 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenType?"];
m6_109 -> m6_116  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_109 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_109 -> m6_120  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_109 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_109 -> m6_124  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_109 -> m6_126  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_109 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_109 -> m6_130  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_110 -> m6_111  [key=0, style=solid];
m6_110 -> m6_112  [key=0, style=solid];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_114  [key=0, style=solid];
m6_114 -> m6_115  [key=0, style=solid];
m6_114 -> m6_116  [key=0, style=solid];
m6_115 -> m6_131  [key=0, style=solid];
m6_115 -> m6_132  [key=2, style=dotted];
m6_116 -> m6_117  [key=0, style=solid];
m6_116 -> m6_118  [key=0, style=solid];
m6_118 -> m6_119  [key=0, style=solid];
m6_118 -> m6_120  [key=0, style=solid];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_122  [key=0, style=solid];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_124  [key=0, style=solid];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_126  [key=0, style=solid];
m6_126 -> m6_127  [key=0, style=solid];
m6_126 -> m6_128  [key=0, style=solid];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_130  [key=0, style=solid];
m6_130 -> m6_131  [key=0, style=solid];
m6_130 -> m6_86  [key=2, style=dotted];
m6_130 -> d14  [key=2, style=dotted];
m6_130 -> m6_89  [key=2, style=dotted];
m6_111 -> m6_131  [key=0, style=solid];
m6_113 -> m6_131  [key=0, style=solid];
m6_117 -> m6_131  [key=0, style=solid];
m6_119 -> m6_131  [key=0, style=solid];
m6_121 -> m6_131  [key=0, style=solid];
m6_123 -> m6_131  [key=0, style=solid];
m6_125 -> m6_131  [key=0, style=solid];
m6_127 -> m6_131  [key=0, style=solid];
m6_129 -> m6_131  [key=0, style=solid];
m6_131 -> m6_109  [key=0, style=bold, color=blue];
m6_228 -> m6_229  [key=0, style=solid];
m6_229 -> m6_230  [key=0, style=solid];
m6_229 -> m6_231  [key=2, style=dotted];
m6_229 -> m6_232  [key=2, style=dotted];
m6_230 -> m6_228  [key=0, style=bold, color=blue];
m6_201 -> m6_202  [key=0, style=solid];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_205  [key=2, style=dotted];
m6_203 -> m6_204  [key=0, style=solid];
m6_203 -> m6_206  [key=2, style=dotted];
m6_204 -> m6_201  [key=0, style=bold, color=blue];
m6_77 -> m6_91  [key=0, style=solid];
m6_77 -> m6_92  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_97  [key=2, style=dotted];
m6_91 -> m6_93  [key=1, style=dashed, color=darkseagreen4, label=d1];
m6_91 -> m6_95  [key=1, style=dashed, color=darkseagreen4, label=d1];
m6_92 -> m6_93  [key=0, style=solid];
m6_92 -> m6_97  [key=2, style=dotted];
m6_92 -> m6_95  [key=1, style=dashed, color=darkseagreen4, label=d2];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_95  [key=0, style=solid];
m6_93 -> m6_98  [key=2, style=dotted];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_99  [key=2, style=dotted];
m6_94 -> m6_96  [key=0, style=solid];
m6_96 -> m6_77  [key=0, style=bold, color=blue];
m6_276 -> m6_277  [key=0, style=solid];
m6_276 -> m6_279  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_279  [key=0, style=solid];
m6_279 -> m6_280  [key=0, style=solid];
m6_279 -> m6_27  [key=2, style=dotted];
m6_278 -> m6_280  [key=0, style=solid];
m6_280 -> m6_276  [key=0, style=bold, color=blue];
m6_143 -> m6_144  [key=0, style=solid];
m6_143 -> m6_146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m6_143 -> m6_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m6_143 -> m6_152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m6_143 -> m6_155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m6_143 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label="params Newtonsoft.Json.JsonConverter[]"];
m6_143 -> m6_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m6_143 -> m6_163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m6_143 -> m6_166  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m6_143 -> m6_169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m6_143 -> m6_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m6_143 -> m6_176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m6_143 -> m6_177  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m6_143 -> m6_180  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_148  [key=0, style=solid];
m6_144 -> m6_151  [key=0, style=solid];
m6_144 -> m6_154  [key=0, style=solid];
m6_146 -> m6_147  [key=0, style=solid];
m6_146 -> m6_184  [key=2, style=dotted];
m6_146 -> m6_185  [key=2, style=dotted];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_184  [key=2, style=dotted];
m6_149 -> m6_186  [key=2, style=dotted];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_187  [key=2, style=dotted];
m6_155 -> m6_156  [key=0, style=solid];
m6_155 -> m6_188  [key=2, style=dotted];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_161  [key=0, style=solid];
m6_158 -> d14  [key=2, style=dotted];
m6_158 -> m6_189  [key=2, style=dotted];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_190  [key=2, style=dotted];
m6_159 -> m6_191  [key=2, style=dotted];
m6_163 -> m6_164  [key=0, style=solid];
m6_163 -> m6_78  [key=2, style=dotted];
m6_163 -> m6_192  [key=2, style=dotted];
m6_166 -> m6_167  [key=0, style=solid];
m6_166 -> m6_97  [key=2, style=dotted];
m6_166 -> m6_193  [key=2, style=dotted];
m6_169 -> m6_170  [key=0, style=solid];
m6_169 -> m6_184  [key=2, style=dotted];
m6_169 -> m6_194  [key=2, style=dotted];
m6_172 -> m6_173  [key=0, style=solid];
m6_172 -> m6_195  [key=2, style=dotted];
m6_172 -> m6_196  [key=2, style=dotted];
m6_176 -> m6_178  [key=0, style=solid];
m6_176 -> m6_197  [key=2, style=dotted];
m6_177 -> m6_178  [key=0, style=solid];
m6_177 -> m6_198  [key=2, style=dotted];
m6_177 -> m6_199  [key=2, style=dotted];
m6_180 -> m6_181  [key=0, style=solid];
m6_180 -> m6_200  [key=2, style=dotted];
m6_145 -> m6_146  [key=0, style=solid];
m6_148 -> m6_149  [key=0, style=solid];
m6_151 -> m6_152  [key=0, style=solid];
m6_154 -> m6_155  [key=0, style=solid];
m6_147 -> m6_182  [key=0, style=solid];
m6_150 -> m6_182  [key=0, style=solid];
m6_153 -> m6_182  [key=0, style=solid];
m6_156 -> m6_182  [key=0, style=solid];
m6_157 -> m6_158  [key=0, style=solid];
m6_161 -> m6_162  [key=0, style=solid];
m6_161 -> m6_165  [key=0, style=solid];
m6_161 -> m6_168  [key=0, style=solid];
m6_161 -> m6_171  [key=0, style=solid];
m6_161 -> m6_174  [key=0, style=solid];
m6_161 -> m6_179  [key=0, style=solid];
m6_160 -> m6_182  [key=0, style=solid];
m6_162 -> m6_163  [key=0, style=solid];
m6_165 -> m6_166  [key=0, style=solid];
m6_168 -> m6_169  [key=0, style=solid];
m6_171 -> m6_172  [key=0, style=solid];
m6_174 -> m6_175  [key=0, style=solid];
m6_179 -> m6_180  [key=0, style=solid];
m6_164 -> m6_182  [key=0, style=solid];
m6_167 -> m6_182  [key=0, style=solid];
m6_170 -> m6_182  [key=0, style=solid];
m6_173 -> m6_182  [key=0, style=solid];
m6_175 -> m6_176  [key=0, style=solid];
m6_175 -> m6_177  [key=0, style=solid];
m6_178 -> m6_182  [key=0, style=solid];
m6_181 -> m6_182  [key=0, style=solid];
m6_183 -> m6_182  [key=0, style=solid];
m6_183 -> m6_90  [key=2, style=dotted];
m6_182 -> m6_143  [key=0, style=bold, color=blue];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_12  [key=0, style=bold, color=blue];
m6_20 -> m6_21  [key=0, style=solid, color=red];
m6_21 -> m6_22  [key=0, style=solid, color=red];
m6_21 -> m6_24  [key=1, style=dashed, color=red, label=other];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_24  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_26  [key=2, style=dotted];
m6_23 -> m6_25  [key=0, style=solid];
m6_25 -> m6_20  [key=0, style=bold, color=blue];
m6_14 -> m6_15  [key=0, style=solid];
m6_15 -> m6_14  [key=0, style=bold, color=blue];
m6_214 -> m6_215  [key=0, style=solid];
m6_214 -> m6_217  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_214 -> m6_220  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_217  [key=0, style=solid];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_219  [key=1, style=dashed, color=darkseagreen4, label=otherValue];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_222  [key=2, style=dotted];
m6_216 -> m6_221  [key=0, style=solid];
m6_218 -> m6_219  [key=0, style=solid];
m6_218 -> m6_220  [key=0, style=solid];
m6_219 -> m6_221  [key=0, style=solid];
m6_219 -> m6_209  [key=2, style=dotted];
m6_221 -> m6_214  [key=0, style=bold, color=blue];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_212  [key=0, style=solid];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_26  [key=2, style=dotted];
m6_211 -> m6_213  [key=0, style=solid];
m6_213 -> m6_209  [key=0, style=bold, color=blue];
m6_270 -> m6_271  [key=0, style=solid];
m6_270 -> m6_273  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_271 -> m6_272  [key=0, style=solid];
m6_271 -> m6_273  [key=0, style=solid];
m6_273 -> m6_274  [key=0, style=solid];
m6_272 -> m6_275  [key=0, style=solid];
m6_274 -> m6_275  [key=0, style=solid];
m6_274 -> m6_27  [key=2, style=dotted];
m6_275 -> m6_270  [key=0, style=bold, color=blue];
m6_10 -> m6_11  [key=0, style=solid];
m6_11 -> m6_10  [key=0, style=bold, color=blue];
m6_6 -> m6_7  [key=0, style=solid];
m6_7 -> m6_6  [key=0, style=bold, color=blue];
m6_281 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_166  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_177  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_180  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_229  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_274  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m6_281 -> m6_279  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JValue"];
m7_137 -> m7_138  [key=0, style=solid];
m7_137 -> m7_13  [key=2, style=dotted];
m7_138 -> m7_139  [key=0, style=solid];
m7_138 -> m7_13  [key=2, style=dotted];
m7_139 -> m7_134  [key=0, style=bold, color=blue];
m7_140 -> m7_141  [key=0, style=solid];
m7_141 -> m7_142  [key=0, style=solid];
m7_142 -> m7_140  [key=0, style=bold, color=blue];
m7_143 -> m7_144  [key=0, style=solid];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_172  [key=2, style=dotted];
m7_145 -> m7_143  [key=0, style=bold, color=blue];
m7_173 -> m7_174  [key=0, style=solid];
m7_174 -> m7_175  [key=0, style=solid];
m7_174 -> m7_28  [key=2, style=dotted];
m7_175 -> m7_176  [key=0, style=solid];
m7_175 -> m7_164  [key=2, style=dotted];
m7_176 -> m7_22  [key=2, style=dotted];
m7_176 -> m7_177  [key=0, style=solid];
m7_177 -> m7_178  [key=0, style=solid];
m7_177 -> m7_12  [key=2, style=dotted];
m7_178 -> m7_173  [key=0, style=bold, color=blue];
m7_179 -> m7_180  [key=0, style=solid];
m7_180 -> m7_181  [key=0, style=solid];
m7_180 -> m7_184  [key=1, style=dashed, color=darkseagreen4, label=s];
m7_180 -> m7_187  [key=1, style=dashed, color=darkseagreen4, label=s];
m7_181 -> m7_190  [key=2, style=dotted];
m7_181 -> m7_182  [key=0, style=solid];
m7_182 -> m7_183  [key=0, style=solid];
m7_182 -> m7_13  [key=2, style=dotted];
m7_183 -> m7_185  [key=1, style=dashed, color=darkseagreen4, label=d1];
m7_183 -> m7_163  [key=2, style=dotted];
m7_183 -> m7_184  [key=0, style=solid];
m7_184 -> m7_185  [key=0, style=solid];
m7_184 -> m7_191  [key=2, style=dotted];
m7_185 -> m7_190  [key=2, style=dotted];
m7_185 -> m7_186  [key=0, style=solid];
m7_185 -> m7_13  [key=2, style=dotted];
m7_186 -> m7_188  [key=1, style=dashed, color=darkseagreen4, label=d2];
m7_186 -> m7_163  [key=2, style=dotted];
m7_186 -> m7_187  [key=0, style=solid];
m7_187 -> m7_188  [key=0, style=solid];
m7_187 -> m7_191  [key=2, style=dotted];
m7_188 -> m7_190  [key=2, style=dotted];
m7_188 -> m7_189  [key=0, style=solid];
m7_188 -> m7_13  [key=2, style=dotted];
m7_189 -> m7_179  [key=0, style=bold, color=blue];
m7_151 -> m7_152  [key=0, style=solid];
m7_152 -> m7_153  [key=0, style=solid];
m7_152 -> m7_35  [key=2, style=dotted];
m7_153 -> m7_151  [key=0, style=bold, color=blue];
m7_671 -> m7_672  [key=0, style=solid];
m7_672 -> m7_673  [key=0, style=solid];
m7_672 -> m7_665  [key=2, style=dotted];
m7_673 -> m7_671  [key=0, style=bold, color=blue];
m7_33 -> m7_35  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_198 -> m7_199  [key=0, style=solid];
m7_198 -> m7_83  [key=2, style=dotted];
m7_199 -> m7_200  [key=0, style=solid];
m7_199 -> m7_22  [key=2, style=dotted];
m7_200 -> m7_7  [key=2, style=dotted];
m7_200 -> m7_201  [key=0, style=solid];
m7_200 -> m7_202  [key=1, style=dashed, color=darkseagreen4, label=newValue];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_73  [key=2, style=dotted];
m7_14 -> m7_256  [key=2, style=dotted];
m7_310 -> m7_311  [key=0, style=solid];
m7_311 -> m7_315  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_311 -> m7_312  [key=0, style=solid];
m7_312 -> m7_313  [key=0, style=solid];
m7_312 -> m7_117  [key=2, style=dotted];
m7_312 -> m7_208  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_313 -> m7_310  [key=0, style=bold, color=blue];
m7_315 -> m7_7  [key=2, style=dotted];
m7_315 -> m7_211  [key=0, style=solid];
m7_317 -> m7_318  [key=0, style=solid];
m7_318 -> m7_319  [key=0, style=solid];
m7_318 -> m7_28  [key=2, style=dotted];
m7_319 -> m7_163  [key=2, style=dotted];
m7_319 -> m7_320  [key=0, style=solid];
m7_320 -> m7_321  [key=0, style=solid];
m7_91 -> m7_92  [key=0, style=solid];
m7_92 -> m7_7  [key=2, style=dotted];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label=d];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_13  [key=2, style=dotted];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_13  [key=2, style=dotted];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_97  [key=2, style=dotted];
m7_96 -> m7_91  [key=0, style=bold, color=blue];
m7_256 -> m7_257  [key=0, style=solid];
m7_126 -> m7_127  [key=0, style=solid];
m7_127 -> m7_7  [key=2, style=dotted];
m7_127 -> m7_128  [key=0, style=solid];
m7_127 -> m7_129  [key=1, style=dashed, color=darkseagreen4, label=dic];
m7_127 -> m7_130  [key=1, style=dashed, color=darkseagreen4, label=dic];
m7_127 -> m7_131  [key=1, style=dashed, color=darkseagreen4, label=dic];
m7_128 -> m7_129  [key=0, style=solid];
m7_128 -> m7_13  [key=2, style=dotted];
m7_129 -> m7_130  [key=0, style=solid];
m7_129 -> m7_13  [key=2, style=dotted];
m7_130 -> m7_131  [key=0, style=solid];
m7_130 -> m7_13  [key=2, style=dotted];
m7_131 -> m7_132  [key=0, style=solid];
m7_131 -> m7_133  [key=2, style=dotted];
m7_132 -> m7_126  [key=0, style=bold, color=blue];
m7_277 -> m7_278  [key=0, style=solid];
m7_277 -> m7_13  [key=2, style=dotted];
m7_53 -> m7_54  [key=0, style=solid];
m7_54 -> m7_35  [key=2, style=dotted];
m7_54 -> m7_55  [key=0, style=solid];
m7_55 -> m7_53  [key=0, style=bold, color=blue];
m7_80 -> m7_81  [key=0, style=solid];
m7_81 -> m7_83  [key=2, style=dotted];
m7_81 -> m7_82  [key=0, style=solid];
m7_82 -> m7_80  [key=0, style=bold, color=blue];
m7_32 -> m7_33  [key=0, style=solid];
m7_34 -> m7_32  [key=0, style=bold, color=blue];
m7_165 -> m7_166  [key=0, style=solid];
m7_166 -> m7_164  [key=0, style=bold, color=blue];
m7_167 -> m7_168  [key=0, style=solid];
m7_168 -> m7_169  [key=0, style=solid];
m7_168 -> m7_35  [key=2, style=dotted];
m7_169 -> m7_167  [key=0, style=bold, color=blue];
m7_170 -> m7_171  [key=0, style=solid];
m7_171 -> m7_172  [key=0, style=solid];
m7_171 -> m7_35  [key=2, style=dotted];
m7_195 -> m7_196  [key=0, style=solid];
m7_201 -> m7_202  [key=0, style=solid];
m7_201 -> m7_13  [key=2, style=dotted];
m7_201 -> m7_76  [key=0, style=solid];
m7_202 -> m7_203  [key=0, style=solid];
m7_202 -> m7_104  [key=2, style=dotted];
m7_202 -> m7_13  [key=2, style=dotted];
m7_196 -> m7_199  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_196 -> m7_197  [key=0, style=solid];
m7_196 -> m7_192  [key=2, style=dotted];
m7_196 -> m7_198  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_197 -> m7_198  [key=0, style=solid];
m7_197 -> m7_83  [key=2, style=dotted];
m7_197 -> m7_194  [key=0, style=bold, color=green];
m7_203 -> m7_195  [key=0, style=bold, color=blue];
m7_164 -> m7_165  [key=0, style=solid];
m7_56 -> m7_57  [key=0, style=solid];
m7_57 -> m7_53  [key=2, style=dotted];
m7_57 -> m7_58  [key=0, style=solid];
m7_58 -> m7_56  [key=0, style=bold, color=blue];
m7_296 -> m7_297  [key=0, style=solid];
m7_465 -> m7_466  [key=0, style=solid];
m7_466 -> m7_470  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_466 -> m7_467  [key=0, style=solid];
m7_467 -> m7_468  [key=0, style=solid];
m7_467 -> m7_117  [key=2, style=dotted];
m7_467 -> m7_488  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_468 -> m7_465  [key=0, style=bold, color=blue];
m7_360 -> m7_361  [key=0, style=solid];
m7_591 -> m7_592  [key=0, style=solid];
m7_591 -> m7_602  [key=2, style=dotted];
m7_591 -> m7_32  [key=2, style=dotted];
m7_298 -> m7_7  [key=2, style=dotted];
m7_298 -> m7_299  [key=0, style=solid];
m7_298 -> m7_300  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_298 -> m7_301  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_298 -> m7_302  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_298 -> m7_303  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_298 -> m7_304  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_298 -> m7_305  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_298 -> m7_306  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_298 -> m7_307  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_298 -> m7_308  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_297 -> m7_298  [key=0, style=solid];
m7_299 -> m7_300  [key=0, style=solid];
m7_299 -> m7_13  [key=2, style=dotted];
m7_300 -> m7_301  [key=0, style=solid];
m7_300 -> m7_13  [key=2, style=dotted];
m7_300 -> m7_430  [key=0, style=solid];
m7_301 -> m7_302  [key=0, style=solid];
m7_301 -> m7_13  [key=2, style=dotted];
m7_302 -> m7_303  [key=0, style=solid];
m7_302 -> m7_13  [key=2, style=dotted];
m7_302 -> m7_300  [key=0, style=bold, color=green];
m7_303 -> m7_304  [key=0, style=solid];
m7_303 -> m7_13  [key=2, style=dotted];
m7_304 -> m7_305  [key=0, style=solid];
m7_304 -> m7_13  [key=2, style=dotted];
m7_305 -> m7_306  [key=0, style=solid];
m7_305 -> m7_13  [key=2, style=dotted];
m7_306 -> m7_307  [key=0, style=solid];
m7_306 -> m7_13  [key=2, style=dotted];
m7_307 -> m7_308  [key=0, style=solid];
m7_307 -> m7_13  [key=2, style=dotted];
m7_308 -> m7_309  [key=0, style=solid];
m7_308 -> m7_13  [key=2, style=dotted];
m7_309 -> m7_296  [key=0, style=bold, color=blue];
m7_98 -> m7_99  [key=0, style=solid];
m7_99 -> m7_7  [key=2, style=dotted];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_101  [key=1, style=dashed, color=darkseagreen4, label=l];
m7_99 -> m7_102  [key=1, style=dashed, color=darkseagreen4, label=l];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_104  [key=2, style=dotted];
m7_100 -> m7_13  [key=2, style=dotted];
m7_101 -> m7_102  [key=0, style=solid];
m7_101 -> m7_13  [key=2, style=dotted];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_13  [key=2, style=dotted];
m7_103 -> m7_98  [key=0, style=bold, color=blue];
m7_331 -> m7_332  [key=0, style=solid];
m7_333 -> m7_22  [key=2, style=dotted];
m7_333 -> m7_334  [key=0, style=solid];
m7_332 -> m7_333  [key=0, style=solid];
m7_332 -> m7_317  [key=2, style=dotted];
m7_334 -> m7_335  [key=0, style=solid];
m7_334 -> m7_12  [key=2, style=dotted];
m7_335 -> m7_331  [key=0, style=bold, color=blue];
m7_365 -> m7_366  [key=0, style=solid];
m7_370 -> m7_22  [key=2, style=dotted];
m7_370 -> m7_371  [key=0, style=solid];
m7_366 -> m7_370  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_366 -> m7_367  [key=0, style=solid];
m7_366 -> m7_373  [key=2, style=dotted];
m7_366 -> m7_368  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_366 -> m7_369  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_369 -> m7_370  [key=0, style=solid];
m7_371 -> m7_372  [key=0, style=solid];
m7_371 -> m7_12  [key=2, style=dotted];
m7_367 -> m7_368  [key=0, style=solid];
m7_368 -> m7_369  [key=0, style=solid];
m7_372 -> m7_365  [key=0, style=bold, color=blue];
m7_76 -> m7_7  [key=2, style=dotted];
m7_76 -> m7_204  [key=0, style=solid];
m7_84 -> m7_85  [key=0, style=solid];
m7_85 -> m7_7  [key=2, style=dotted];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_87  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_85 -> m7_88  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_85 -> m7_89  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_13  [key=2, style=dotted];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_13  [key=2, style=dotted];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_13  [key=2, style=dotted];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_13  [key=2, style=dotted];
m7_59 -> m7_60  [key=0, style=solid];
m7_60 -> m7_64  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_60 -> m7_61  [key=0, style=solid];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_117  [key=2, style=dotted];
m7_61 -> m7_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_62 -> m7_59  [key=0, style=bold, color=blue];
m7_64 -> m7_7  [key=2, style=dotted];
m7_64 -> m7_197  [key=0, style=solid];
m7_147 -> m7_148  [key=0, style=solid];
m7_410 -> m7_7  [key=2, style=dotted];
m7_410 -> m7_276  [key=0, style=solid];
m7_604 -> m7_605  [key=0, style=solid];
m7_605 -> m7_606  [key=0, style=solid];
m7_605 -> m7_608  [key=1, style=dashed, color=darkseagreen4, label=a1];
m7_605 -> m7_615  [key=2, style=dotted];
m7_606 -> m7_607  [key=0, style=solid];
m7_606 -> m7_609  [key=1, style=dashed, color=darkseagreen4, label=a2];
m7_606 -> m7_615  [key=2, style=dotted];
m7_607 -> m7_610  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m7_607 -> m7_612  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m7_607 -> m7_613  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m7_607 -> m7_608  [key=0, style=solid];
m7_607 -> m7_616  [key=2, style=dotted];
m7_607 -> m7_609  [key=1, style=dashed, color=darkseagreen4, label=articles1];
m7_608 -> m7_609  [key=0, style=solid];
m7_608 -> m7_83  [key=2, style=dotted];
m7_609 -> m7_610  [key=0, style=solid];
m7_609 -> m7_83  [key=2, style=dotted];
m7_610 -> m7_611  [key=0, style=solid];
m7_610 -> m7_190  [key=2, style=dotted];
m7_611 -> m7_7  [key=2, style=dotted];
m7_611 -> m7_612  [key=0, style=solid];
m7_611 -> m7_613  [key=1, style=dashed, color=darkseagreen4, label=articles2];
m7_105 -> m7_106  [key=0, style=solid];
m7_106 -> m7_7  [key=2, style=dotted];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_108  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_106 -> m7_109  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_106 -> m7_110  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_13  [key=2, style=dotted];
m7_108 -> m7_109  [key=0, style=solid];
m7_108 -> m7_13  [key=2, style=dotted];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_13  [key=2, style=dotted];
m7_110 -> m7_111  [key=0, style=solid];
m7_110 -> m7_13  [key=2, style=dotted];
m7_111 -> m7_105  [key=0, style=bold, color=blue];
m7_269 -> m7_260  [key=0, style=bold, color=blue];
m7_548 -> m7_549  [key=0, style=solid];
m7_556 -> m7_7  [key=2, style=dotted];
m7_556 -> m7_557  [key=0, style=solid];
m7_556 -> m7_558  [key=1, style=dashed, color=darkseagreen4, label=newName];
m7_556 -> m7_559  [key=1, style=dashed, color=darkseagreen4, label=newName];
m7_556 -> m7_560  [key=1, style=dashed, color=darkseagreen4, label=newName];
m7_554 -> m7_556  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_554 -> m7_555  [key=0, style=solid];
m7_554 -> m7_22  [key=2, style=dotted];
m7_555 -> m7_556  [key=0, style=solid];
m7_555 -> m7_12  [key=2, style=dotted];
m7_557 -> m7_558  [key=0, style=solid];
m7_557 -> m7_13  [key=2, style=dotted];
m7_558 -> m7_559  [key=0, style=solid];
m7_558 -> m7_13  [key=2, style=dotted];
m7_559 -> m7_560  [key=0, style=solid];
m7_559 -> m7_13  [key=2, style=dotted];
m7_560 -> m7_561  [key=0, style=solid];
m7_560 -> m7_13  [key=2, style=dotted];
m7_549 -> m7_554  [key=1, style=dashed, color=darkseagreen4, label=name];
m7_549 -> m7_550  [key=0, style=solid];
m7_549 -> m7_562  [key=2, style=dotted];
m7_549 -> m7_552  [key=1, style=dashed, color=darkseagreen4, label=name];
m7_549 -> m7_553  [key=1, style=dashed, color=darkseagreen4, label=name];
m7_553 -> m7_554  [key=0, style=solid];
m7_553 -> m7_83  [key=2, style=dotted];
m7_550 -> m7_551  [key=0, style=solid];
m7_550 -> m7_563  [key=2, style=dotted];
m7_550 -> m7_552  [key=1, style=dashed, color=darkseagreen4, label=p1];
m7_552 -> m7_553  [key=0, style=solid];
m7_552 -> m7_83  [key=2, style=dotted];
m7_551 -> m7_553  [key=1, style=dashed, color=darkseagreen4, label=p2];
m7_551 -> m7_552  [key=0, style=solid];
m7_551 -> m7_563  [key=2, style=dotted];
m7_561 -> m7_548  [key=0, style=bold, color=blue];
m7_488 -> m7_489  [key=0, style=solid];
m7_488 -> m7_470  [key=0, style=solid];
m7_490 -> m7_7  [key=2, style=dotted];
m7_490 -> m7_491  [key=0, style=solid];
m7_490 -> m7_492  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_490 -> m7_493  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_490 -> m7_494  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_490 -> m7_495  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_490 -> m7_496  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_489 -> m7_490  [key=0, style=solid];
m7_489 -> m7_497  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_491 -> m7_492  [key=0, style=solid];
m7_491 -> m7_13  [key=2, style=dotted];
m7_492 -> m7_493  [key=0, style=solid];
m7_492 -> m7_13  [key=2, style=dotted];
m7_492 -> m7_488  [key=0, style=bold, color=green];
m7_493 -> m7_494  [key=0, style=solid];
m7_493 -> m7_385  [key=2, style=dotted];
m7_493 -> m7_13  [key=2, style=dotted];
m7_494 -> m7_495  [key=0, style=solid];
m7_494 -> m7_385  [key=2, style=dotted];
m7_494 -> m7_13  [key=2, style=dotted];
m7_495 -> m7_496  [key=0, style=solid];
m7_495 -> m7_385  [key=2, style=dotted];
m7_495 -> m7_13  [key=2, style=dotted];
m7_496 -> m7_497  [key=0, style=solid];
m7_496 -> m7_190  [key=2, style=dotted];
m7_497 -> m7_498  [key=0, style=solid];
m7_497 -> m7_13  [key=2, style=dotted];
m7_498 -> m7_488  [key=0, style=bold, color=blue];
m7_541 -> m7_542  [key=0, style=solid];
m7_543 -> m7_7  [key=2, style=dotted];
m7_543 -> m7_544  [key=0, style=solid];
m7_543 -> m7_545  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_543 -> m7_546  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_542 -> m7_543  [key=0, style=solid];
m7_544 -> m7_545  [key=0, style=solid];
m7_544 -> m7_13  [key=2, style=dotted];
m7_544 -> m7_539  [key=0, style=bold, color=green];
m7_545 -> m7_546  [key=0, style=solid];
m7_545 -> m7_13  [key=2, style=dotted];
m7_546 -> m7_547  [key=0, style=solid];
m7_546 -> m7_13  [key=2, style=dotted];
m7_547 -> m7_541  [key=0, style=bold, color=blue];
m7_284 -> m7_285  [key=0, style=solid];
m7_123 -> m7_124  [key=0, style=solid];
m7_123 -> m7_13  [key=2, style=dotted];
m7_124 -> m7_125  [key=0, style=solid];
m7_124 -> m7_13  [key=2, style=dotted];
m7_125 -> m7_119  [key=0, style=bold, color=blue];
m7_412 -> m7_413  [key=0, style=solid];
m7_414 -> m7_7  [key=2, style=dotted];
m7_414 -> m7_415  [key=0, style=solid];
m7_414 -> m7_416  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_414 -> m7_417  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_414 -> m7_418  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_414 -> m7_419  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_414 -> m7_420  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_414 -> m7_421  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_414 -> m7_422  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_413 -> m7_414  [key=0, style=solid];
m7_413 -> m7_423  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_415 -> m7_416  [key=0, style=solid];
m7_415 -> m7_13  [key=2, style=dotted];
m7_416 -> m7_417  [key=0, style=solid];
m7_416 -> m7_13  [key=2, style=dotted];
m7_417 -> m7_418  [key=0, style=solid];
m7_417 -> m7_385  [key=2, style=dotted];
m7_417 -> m7_13  [key=2, style=dotted];
m7_418 -> m7_419  [key=0, style=solid];
m7_418 -> m7_385  [key=2, style=dotted];
m7_418 -> m7_13  [key=2, style=dotted];
m7_419 -> m7_420  [key=0, style=solid];
m7_419 -> m7_385  [key=2, style=dotted];
m7_419 -> m7_13  [key=2, style=dotted];
m7_420 -> m7_421  [key=0, style=solid];
m7_420 -> m7_13  [key=2, style=dotted];
m7_421 -> m7_422  [key=0, style=solid];
m7_421 -> m7_13  [key=2, style=dotted];
m7_422 -> m7_423  [key=0, style=solid];
m7_422 -> m7_190  [key=2, style=dotted];
m7_423 -> m7_424  [key=0, style=solid];
m7_423 -> m7_13  [key=2, style=dotted];
m7_424 -> m7_412  [key=0, style=bold, color=blue];
m7_204 -> m7_205  [key=0, style=solid];
m7_204 -> m7_201  [key=0, style=bold, color=green];
m7_210 -> m7_7  [key=2, style=dotted];
m7_210 -> m7_211  [key=0, style=solid];
m7_210 -> m7_212  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_210 -> m7_213  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_210 -> m7_214  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_210 -> m7_215  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_208 -> m7_210  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_208 -> m7_209  [key=0, style=solid];
m7_208 -> m7_190  [key=2, style=dotted];
m7_208 -> m7_315  [key=0, style=solid];
m7_209 -> m7_210  [key=0, style=solid];
m7_209 -> m7_13  [key=2, style=dotted];
m7_211 -> m7_212  [key=0, style=solid];
m7_211 -> m7_13  [key=2, style=dotted];
m7_211 -> m7_208  [key=0, style=bold, color=green];
m7_212 -> m7_213  [key=0, style=solid];
m7_212 -> m7_13  [key=2, style=dotted];
m7_213 -> m7_214  [key=0, style=solid];
m7_213 -> m7_13  [key=2, style=dotted];
m7_214 -> m7_215  [key=0, style=solid];
m7_214 -> m7_13  [key=2, style=dotted];
m7_215 -> m7_216  [key=0, style=solid];
m7_215 -> m7_13  [key=2, style=dotted];
m7_215 -> m7_403  [key=0, style=solid];
m7_205 -> m7_208  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_205 -> m7_206  [key=0, style=solid];
m7_205 -> m7_28  [key=2, style=dotted];
m7_205 -> m7_207  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_207 -> m7_208  [key=0, style=solid];
m7_207 -> m7_112  [key=2, style=dotted];
m7_207 -> m7_83  [key=2, style=dotted];
m7_206 -> m7_207  [key=0, style=solid];
m7_206 -> m7_83  [key=2, style=dotted];
m7_206 -> m7_112  [key=2, style=dotted];
m7_216 -> m7_204  [key=0, style=bold, color=blue];
m7_612 -> m7_613  [key=0, style=solid];
m7_612 -> m7_13  [key=2, style=dotted];
m7_613 -> m7_614  [key=0, style=solid];
m7_613 -> m7_13  [key=2, style=dotted];
m7_614 -> m7_604  [key=0, style=bold, color=blue];
m7_425 -> m7_426  [key=0, style=solid];
m7_426 -> m7_430  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_426 -> m7_427  [key=0, style=solid];
m7_427 -> m7_428  [key=0, style=solid];
m7_427 -> m7_117  [key=2, style=dotted];
m7_427 -> m7_300  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_428 -> m7_425  [key=0, style=bold, color=blue];
m7_430 -> m7_7  [key=2, style=dotted];
m7_430 -> m7_302  [key=0, style=solid];
m7_432 -> m7_433  [key=0, style=solid];
m7_433 -> m7_437  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_433 -> m7_434  [key=0, style=solid];
m7_434 -> m7_435  [key=0, style=solid];
m7_434 -> m7_117  [key=2, style=dotted];
m7_434 -> m7_452  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_435 -> m7_432  [key=0, style=bold, color=blue];
m7_437 -> m7_7  [key=2, style=dotted];
m7_437 -> m7_456  [key=0, style=solid];
m7_439 -> m7_440  [key=0, style=solid];
m7_440 -> m7_444  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_440 -> m7_441  [key=0, style=solid];
m7_441 -> m7_442  [key=0, style=solid];
m7_441 -> m7_117  [key=2, style=dotted];
m7_441 -> m7_457  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_442 -> m7_439  [key=0, style=bold, color=blue];
m7_444 -> m7_7  [key=2, style=dotted];
m7_444 -> m7_461  [key=0, style=solid];
m7_446 -> m7_447  [key=0, style=solid];
m7_447 -> m7_451  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_447 -> m7_448  [key=0, style=solid];
m7_447 -> m7_364  [key=2, style=dotted];
m7_447 -> m7_449  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_447 -> m7_450  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_448 -> m7_449  [key=0, style=solid];
m7_449 -> m7_450  [key=0, style=solid];
m7_450 -> m7_451  [key=0, style=solid];
m7_451 -> m7_190  [key=2, style=dotted];
m7_451 -> m7_452  [key=0, style=solid];
m7_260 -> m7_261  [key=0, style=solid];
m7_264 -> m7_7  [key=2, style=dotted];
m7_264 -> m7_265  [key=0, style=solid];
m7_264 -> m7_266  [key=1, style=dashed, color=darkseagreen4, label=v2];
m7_264 -> m7_267  [key=1, style=dashed, color=darkseagreen4, label=v2];
m7_264 -> m7_268  [key=1, style=dashed, color=darkseagreen4, label=v2];
m7_262 -> m7_264  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_262 -> m7_263  [key=0, style=solid];
m7_262 -> m7_22  [key=2, style=dotted];
m7_263 -> m7_264  [key=0, style=solid];
m7_263 -> m7_12  [key=2, style=dotted];
m7_265 -> m7_266  [key=0, style=solid];
m7_265 -> m7_13  [key=2, style=dotted];
m7_266 -> m7_267  [key=0, style=solid];
m7_266 -> m7_13  [key=2, style=dotted];
m7_267 -> m7_268  [key=0, style=solid];
m7_267 -> m7_13  [key=2, style=dotted];
m7_268 -> m7_269  [key=0, style=solid];
m7_268 -> m7_13  [key=2, style=dotted];
m7_261 -> m7_262  [key=0, style=solid];
m7_261 -> m7_163  [key=2, style=dotted];
m7_624 -> m7_625  [key=0, style=solid];
m7_630 -> m7_22  [key=2, style=dotted];
m7_630 -> m7_631  [key=0, style=solid];
m7_627 -> m7_630  [key=1, style=dashed, color=darkseagreen4, label=products];
m7_627 -> m7_628  [key=0, style=solid];
m7_627 -> m7_28  [key=2, style=dotted];
m7_627 -> m7_629  [key=1, style=dashed, color=darkseagreen4, label=products];
m7_629 -> m7_630  [key=0, style=solid];
m7_629 -> m7_83  [key=2, style=dotted];
m7_631 -> m7_632  [key=0, style=solid];
m7_631 -> m7_12  [key=2, style=dotted];
m7_628 -> m7_83  [key=2, style=dotted];
m7_628 -> m7_629  [key=0, style=solid];
m7_626 -> m7_627  [key=0, style=solid];
m7_626 -> m7_629  [key=1, style=dashed, color=darkseagreen4, label=p2];
m7_626 -> m7_231  [key=2, style=dotted];
m7_626 -> m7_575  [key=2, style=dotted];
m7_625 -> m7_628  [key=1, style=dashed, color=darkseagreen4, label=p1];
m7_625 -> m7_231  [key=2, style=dotted];
m7_625 -> m7_626  [key=0, style=solid];
m7_625 -> m7_575  [key=2, style=dotted];
m7_632 -> m7_624  [key=0, style=bold, color=blue];
m7_39 -> m7_40  [key=0, style=solid];
m7_278 -> m7_279  [key=0, style=solid];
m7_278 -> m7_13  [key=2, style=dotted];
m7_279 -> m7_270  [key=0, style=bold, color=blue];
m7_283 -> m7_284  [key=0, style=solid];
m7_257 -> m7_7  [key=2, style=dotted];
m7_257 -> m7_258  [key=0, style=solid];
m7_113 -> m7_7  [key=2, style=dotted];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> m7_115  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_113 -> m7_116  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_113 -> m7_117  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_258 -> m7_259  [key=0, style=solid];
m7_258 -> m7_13  [key=2, style=dotted];
m7_259 -> m7_256  [key=0, style=bold, color=blue];
m7_36 -> m7_37  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_32  [key=2, style=dotted];
m7_38 -> m7_36  [key=0, style=bold, color=blue];
m7_46 -> m7_39  [key=0, style=bold, color=blue];
m7_321 -> m7_329  [key=2, style=dotted];
m7_321 -> m7_322  [key=0, style=solid];
m7_322 -> m7_163  [key=2, style=dotted];
m7_322 -> m7_323  [key=0, style=solid];
m7_322 -> m7_330  [key=2, style=dotted];
m7_323 -> m7_329  [key=2, style=dotted];
m7_323 -> m7_324  [key=0, style=solid];
m7_324 -> m7_329  [key=2, style=dotted];
m7_324 -> m7_325  [key=0, style=solid];
m7_325 -> m7_329  [key=2, style=dotted];
m7_325 -> m7_326  [key=0, style=solid];
m7_326 -> m7_163  [key=2, style=dotted];
m7_326 -> m7_327  [key=0, style=solid];
m7_326 -> m7_330  [key=2, style=dotted];
m7_327 -> m7_163  [key=2, style=dotted];
m7_327 -> m7_328  [key=0, style=solid];
m7_327 -> m7_330  [key=2, style=dotted];
m7_328 -> m7_317  [key=0, style=bold, color=blue];
m7_526 -> m7_527  [key=0, style=solid];
m7_526 -> m7_13  [key=2, style=dotted];
m7_527 -> m7_519  [key=0, style=bold, color=blue];
m7_528 -> m7_529  [key=0, style=solid];
m7_529 -> m7_530  [key=0, style=solid];
m7_530 -> m7_7  [key=2, style=dotted];
m7_530 -> m7_531  [key=0, style=solid];
m7_530 -> m7_532  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_530 -> m7_533  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_530 -> m7_534  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_530 -> m7_535  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_530 -> m7_536  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_530 -> m7_537  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_530 -> m7_538  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_530 -> m7_539  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_531 -> m7_532  [key=0, style=solid];
m7_531 -> m7_13  [key=2, style=dotted];
m7_532 -> m7_533  [key=0, style=solid];
m7_532 -> m7_13  [key=2, style=dotted];
m7_533 -> m7_534  [key=0, style=solid];
m7_533 -> m7_13  [key=2, style=dotted];
m7_534 -> m7_535  [key=0, style=solid];
m7_534 -> m7_13  [key=2, style=dotted];
m7_347 -> m7_348  [key=0, style=solid];
m7_352 -> m7_190  [key=2, style=dotted];
m7_352 -> m7_353  [key=0, style=solid];
m7_348 -> m7_352  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_348 -> m7_349  [key=0, style=solid];
m7_348 -> m7_355  [key=2, style=dotted];
m7_348 -> m7_350  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_348 -> m7_351  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_351 -> m7_352  [key=0, style=solid];
m7_353 -> m7_354  [key=0, style=solid];
m7_353 -> m7_13  [key=2, style=dotted];
m7_349 -> m7_350  [key=0, style=solid];
m7_350 -> m7_351  [key=0, style=solid];
m7_354 -> m7_347  [key=0, style=bold, color=blue];
m7_157 -> m7_158  [key=0, style=solid];
m7_160 -> m7_22  [key=2, style=dotted];
m7_160 -> m7_161  [key=0, style=solid];
m7_159 -> m7_160  [key=0, style=solid];
m7_159 -> m7_140  [key=2, style=dotted];
m7_161 -> m7_162  [key=0, style=solid];
m7_161 -> m7_12  [key=2, style=dotted];
m7_158 -> m7_163  [key=2, style=dotted];
m7_158 -> m7_159  [key=0, style=solid];
m7_162 -> m7_157  [key=0, style=bold, color=blue];
m7_356 -> m7_357  [key=0, style=solid];
m7_361 -> m7_190  [key=2, style=dotted];
m7_361 -> m7_362  [key=0, style=solid];
m7_357 -> m7_361  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_357 -> m7_358  [key=0, style=solid];
m7_357 -> m7_364  [key=2, style=dotted];
m7_357 -> m7_359  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_357 -> m7_360  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_362 -> m7_363  [key=0, style=solid];
m7_362 -> m7_13  [key=2, style=dotted];
m7_358 -> m7_359  [key=0, style=solid];
m7_359 -> m7_360  [key=0, style=solid];
m7_363 -> m7_356  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid, color=green];
m7_1 -> m7_2  [key=0, style=solid, color=green];
m7_1 -> m7_117  [key=2, style=dotted, color=green];
m7_1 -> m7_118  [key=1, style=dashed, color=green, label="lambda expression"];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_592 -> m7_190  [key=2, style=dotted];
m7_592 -> m7_593  [key=0, style=solid];
m7_593 -> m7_594  [key=0, style=solid];
m7_593 -> m7_13  [key=2, style=dotted];
m7_594 -> m7_596  [key=1, style=dashed, color=darkseagreen4, label=foo3];
m7_594 -> m7_595  [key=0, style=solid];
m7_594 -> m7_603  [key=2, style=dotted];
m7_595 -> m7_596  [key=0, style=solid];
m7_595 -> m7_602  [key=2, style=dotted];
m7_595 -> m7_32  [key=2, style=dotted];
m7_596 -> m7_190  [key=2, style=dotted];
m7_596 -> m7_597  [key=0, style=solid];
m7_597 -> m7_598  [key=0, style=solid];
m7_597 -> m7_13  [key=2, style=dotted];
m7_598 -> m7_584  [key=0, style=bold, color=blue];
m7_599 -> m7_663  [key=0, style=solid];
m7_119 -> m7_120  [key=0, style=solid];
m7_120 -> m7_7  [key=2, style=dotted];
m7_120 -> m7_121  [key=0, style=solid];
m7_120 -> m7_122  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_120 -> m7_123  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_120 -> m7_124  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_121 -> m7_122  [key=0, style=solid];
m7_121 -> m7_13  [key=2, style=dotted];
m7_122 -> m7_123  [key=0, style=solid];
m7_122 -> m7_13  [key=2, style=dotted];
m7_122 -> m7_118  [key=0, style=bold, color=green];
m7_28 -> m7_29  [key=0, style=solid];
m7_29 -> m7_31  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_30 -> m7_28  [key=0, style=bold, color=blue];
m7_251 -> m7_252  [key=0, style=solid];
m7_252 -> m7_7  [key=2, style=dotted];
m7_252 -> m7_253  [key=0, style=solid];
m7_252 -> m7_254  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m7_253 -> m7_254  [key=0, style=solid];
m7_253 -> m7_13  [key=2, style=dotted];
m7_254 -> m7_255  [key=0, style=solid];
m7_254 -> m7_13  [key=2, style=dotted];
m7_255 -> m7_251  [key=0, style=bold, color=blue];
m7_584 -> m7_585  [key=0, style=solid];
m7_588 -> m7_190  [key=2, style=dotted];
m7_588 -> m7_589  [key=0, style=solid];
m7_586 -> m7_588  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m7_586 -> m7_587  [key=0, style=solid];
m7_586 -> m7_599  [key=2, style=dotted];
m7_587 -> m7_588  [key=0, style=solid];
m7_587 -> m7_600  [key=2, style=dotted];
m7_587 -> m7_32  [key=2, style=dotted];
m7_589 -> m7_590  [key=0, style=solid];
m7_589 -> m7_13  [key=2, style=dotted];
m7_590 -> m7_592  [key=1, style=dashed, color=darkseagreen4, label=foo2];
m7_590 -> m7_591  [key=0, style=solid];
m7_590 -> m7_599  [key=2, style=dotted];
m7_585 -> m7_586  [key=0, style=solid];
m7_535 -> m7_536  [key=0, style=solid];
m7_535 -> m7_133  [key=2, style=dotted];
m7_536 -> m7_537  [key=0, style=solid];
m7_536 -> m7_13  [key=2, style=dotted];
m7_537 -> m7_538  [key=0, style=solid];
m7_537 -> m7_133  [key=2, style=dotted];
m7_538 -> m7_539  [key=0, style=solid];
m7_538 -> m7_13  [key=2, style=dotted];
m7_539 -> m7_540  [key=0, style=solid];
m7_539 -> m7_13  [key=2, style=dotted];
m7_539 -> m7_477  [key=0, style=solid];
m7_540 -> m7_528  [key=0, style=bold, color=blue];
m7_192 -> m7_193  [key=0, style=solid];
m7_193 -> m7_194  [key=0, style=solid];
m7_193 -> m7_28  [key=2, style=dotted];
m7_41 -> m7_7  [key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_43  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_41 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_41 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_40 -> m7_41  [key=0, style=solid];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_71  [key=2, style=dotted];
m7_42 -> m7_13  [key=2, style=dotted];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_146  [key=2, style=dotted];
m7_43 -> m7_13  [key=2, style=dotted];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_146  [key=2, style=dotted];
m7_44 -> m7_13  [key=2, style=dotted];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_146  [key=2, style=dotted];
m7_45 -> m7_13  [key=2, style=dotted];
m7_386 -> m7_387  [key=0, style=solid];
m7_388 -> m7_7  [key=2, style=dotted];
m7_388 -> m7_389  [key=0, style=solid];
m7_388 -> m7_390  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_388 -> m7_391  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_388 -> m7_392  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_388 -> m7_393  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_388 -> m7_394  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_388 -> m7_395  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_387 -> m7_388  [key=0, style=solid];
m7_387 -> m7_396  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_389 -> m7_390  [key=0, style=solid];
m7_389 -> m7_13  [key=2, style=dotted];
m7_390 -> m7_391  [key=0, style=solid];
m7_390 -> m7_13  [key=2, style=dotted];
m7_391 -> m7_392  [key=0, style=solid];
m7_391 -> m7_385  [key=2, style=dotted];
m7_391 -> m7_13  [key=2, style=dotted];
m7_392 -> m7_393  [key=0, style=solid];
m7_392 -> m7_385  [key=2, style=dotted];
m7_392 -> m7_13  [key=2, style=dotted];
m7_393 -> m7_394  [key=0, style=solid];
m7_393 -> m7_13  [key=2, style=dotted];
m7_394 -> m7_395  [key=0, style=solid];
m7_394 -> m7_13  [key=2, style=dotted];
m7_395 -> m7_396  [key=0, style=solid];
m7_395 -> m7_190  [key=2, style=dotted];
m7_396 -> m7_397  [key=0, style=solid];
m7_396 -> m7_13  [key=2, style=dotted];
m7_397 -> m7_386  [key=0, style=bold, color=blue];
m7_172 -> m7_170  [key=0, style=bold, color=blue];
m7_519 -> m7_520  [key=0, style=solid];
m7_520 -> m7_521  [key=0, style=solid];
m7_521 -> m7_7  [key=2, style=dotted];
m7_521 -> m7_522  [key=0, style=solid];
m7_521 -> m7_523  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_521 -> m7_524  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_521 -> m7_525  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_521 -> m7_526  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_522 -> m7_523  [key=0, style=solid];
m7_522 -> m7_13  [key=2, style=dotted];
m7_523 -> m7_524  [key=0, style=solid];
m7_523 -> m7_13  [key=2, style=dotted];
m7_524 -> m7_525  [key=0, style=solid];
m7_524 -> m7_13  [key=2, style=dotted];
m7_112 -> m7_113  [key=0, style=solid];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> m7_13  [key=2, style=dotted];
m7_115 -> m7_116  [key=0, style=solid];
m7_115 -> m7_146  [key=2, style=dotted];
m7_115 -> m7_13  [key=2, style=dotted];
m7_116 -> m7_117  [key=0, style=solid];
m7_116 -> m7_146  [key=2, style=dotted];
m7_116 -> m7_13  [key=2, style=dotted];
m7_117 -> m7_118  [key=0, style=solid];
m7_117 -> m7_146  [key=2, style=dotted];
m7_117 -> m7_13  [key=2, style=dotted];
m7_118 -> m7_112  [key=0, style=bold, color=blue];
m7_118 -> m7_5  [key=0, style=solid, color=green];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_13  [key=2, style=dotted];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_13  [key=2, style=dotted];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_13  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_13  [key=2, style=dotted];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_13  [key=2, style=dotted];
m7_20 -> m7_8  [key=0, style=bold, color=blue];
m7_222 -> m7_224  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_222 -> m7_223  [key=0, style=solid];
m7_222 -> m7_22  [key=2, style=dotted];
m7_223 -> m7_224  [key=0, style=solid];
m7_223 -> m7_12  [key=2, style=dotted];
m7_224 -> m7_7  [key=2, style=dotted];
m7_224 -> m7_225  [key=0, style=solid];
m7_224 -> m7_226  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_224 -> m7_227  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_224 -> m7_228  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_224 -> m7_229  [key=1, style=dashed, color=darkseagreen4, label=result];
m7_225 -> m7_226  [key=0, style=solid];
m7_225 -> m7_13  [key=2, style=dotted];
m7_226 -> m7_227  [key=0, style=solid];
m7_226 -> m7_13  [key=2, style=dotted];
m7_227 -> m7_228  [key=0, style=solid];
m7_227 -> m7_13  [key=2, style=dotted];
m7_228 -> m7_229  [key=0, style=solid];
m7_228 -> m7_13  [key=2, style=dotted];
m7_229 -> m7_230  [key=0, style=solid];
m7_229 -> m7_13  [key=2, style=dotted];
m7_564 -> m7_565  [key=0, style=solid];
m7_565 -> m7_575  [key=2, style=dotted];
m7_565 -> m7_566  [key=0, style=solid];
m7_565 -> m7_574  [key=2, style=dotted];
m7_565 -> m7_569  [key=1, style=dashed, color=darkseagreen4, label=collection];
m7_565 -> m7_572  [key=1, style=dashed, color=darkseagreen4, label=collection];
m7_566 -> m7_567  [key=0, style=solid];
m7_566 -> m7_268  [key=2, style=dotted];
m7_566 -> m7_569  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m7_566 -> m7_571  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m7_569 -> m7_570  [key=0, style=solid];
m7_569 -> m7_578  [key=2, style=dotted];
m7_572 -> m7_573  [key=0, style=solid];
m7_572 -> m7_13  [key=2, style=dotted];
m7_567 -> m7_568  [key=0, style=solid];
m7_571 -> m7_572  [key=0, style=solid];
m7_571 -> m7_29  [key=2, style=dotted];
m7_571 -> m7_30  [key=2, style=dotted];
m7_571 -> m7_579  [key=2, style=dotted];
m7_571 -> m7_580  [key=2, style=dotted];
m7_571 -> m7_269  [key=2, style=dotted];
m7_568 -> m7_569  [key=0, style=solid];
m7_568 -> m7_571  [key=1, style=dashed, color=darkseagreen4, label=sw];
m7_568 -> m7_577  [key=2, style=dotted];
m7_568 -> m7_570  [key=1, style=dashed, color=darkseagreen4, label=sw];
m7_570 -> m7_571  [key=0, style=solid];
m7_570 -> m7_579  [key=2, style=dotted];
m7_570 -> m7_580  [key=2, style=dotted];
m7_570 -> m7_13  [key=2, style=dotted];
m7_573 -> m7_564  [key=0, style=bold, color=blue];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_112  [key=2, style=dotted];
m7_154 -> m7_155  [key=0, style=solid];
m7_155 -> m7_156  [key=0, style=solid];
m7_155 -> m7_35  [key=2, style=dotted];
m7_156 -> m7_154  [key=0, style=bold, color=blue];
m7_10 -> m7_13  [key=1, style=dashed, color=darkseagreen4, label=myOtherArrayAsString];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_22  [key=2, style=dotted];
m7_452 -> m7_453  [key=0, style=solid];
m7_452 -> m7_13  [key=2, style=dotted];
m7_452 -> m7_437  [key=0, style=solid];
m7_453 -> m7_446  [key=0, style=bold, color=blue];
m7_374 -> m7_375  [key=0, style=solid];
m7_376 -> m7_7  [key=2, style=dotted];
m7_376 -> m7_377  [key=0, style=solid];
m7_376 -> m7_378  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_376 -> m7_379  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_376 -> m7_380  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_376 -> m7_381  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_376 -> m7_382  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_376 -> m7_383  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_375 -> m7_376  [key=0, style=solid];
m7_377 -> m7_378  [key=0, style=solid];
m7_377 -> m7_13  [key=2, style=dotted];
m7_378 -> m7_379  [key=0, style=solid];
m7_378 -> m7_13  [key=2, style=dotted];
m7_379 -> m7_380  [key=0, style=solid];
m7_379 -> m7_385  [key=2, style=dotted];
m7_379 -> m7_13  [key=2, style=dotted];
m7_380 -> m7_381  [key=0, style=solid];
m7_380 -> m7_385  [key=2, style=dotted];
m7_380 -> m7_13  [key=2, style=dotted];
m7_381 -> m7_382  [key=0, style=solid];
m7_381 -> m7_385  [key=2, style=dotted];
m7_381 -> m7_13  [key=2, style=dotted];
m7_382 -> m7_383  [key=0, style=solid];
m7_382 -> m7_13  [key=2, style=dotted];
m7_383 -> m7_384  [key=0, style=solid];
m7_383 -> m7_13  [key=2, style=dotted];
m7_384 -> m7_374  [key=0, style=bold, color=blue];
m7_13 -> m7_7  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label=myOtherResult];
m7_13 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label=myOtherResult];
m7_13 -> m7_17  [key=1, style=dashed, color=darkseagreen4, label=myOtherResult];
m7_13 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label=myOtherResult];
m7_13 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label=myOtherResult];
m7_270 -> m7_271  [key=0, style=solid];
m7_275 -> m7_7  [key=2, style=dotted];
m7_275 -> m7_276  [key=0, style=solid];
m7_275 -> m7_277  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m7_275 -> m7_278  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m7_273 -> m7_275  [key=1, style=dashed, color=darkseagreen4, label=originalJson];
m7_273 -> m7_274  [key=0, style=solid];
m7_273 -> m7_22  [key=2, style=dotted];
m7_273 -> m7_410  [key=0, style=solid];
m7_274 -> m7_275  [key=0, style=solid];
m7_274 -> m7_12  [key=2, style=dotted];
m7_276 -> m7_277  [key=0, style=solid];
m7_276 -> m7_13  [key=2, style=dotted];
m7_276 -> m7_273  [key=0, style=bold, color=green];
m7_272 -> m7_273  [key=0, style=solid];
m7_272 -> m7_281  [key=2, style=dotted];
m7_272 -> m7_282  [key=2, style=dotted];
m7_271 -> m7_272  [key=0, style=solid];
m7_271 -> m7_163  [key=2, style=dotted];
m7_271 -> m7_280  [key=2, style=dotted];
m7_405 -> m7_406  [key=0, style=solid];
m7_406 -> m7_410  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_406 -> m7_407  [key=0, style=solid];
m7_407 -> m7_408  [key=0, style=solid];
m7_407 -> m7_117  [key=2, style=dotted];
m7_407 -> m7_273  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_408 -> m7_405  [key=0, style=bold, color=blue];
m7_11 -> m7_12  [key=0, style=solid];
m7_90 -> m7_84  [key=0, style=bold, color=blue];
m7_217 -> m7_218  [key=0, style=solid];
m7_219 -> m7_222  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_219 -> m7_220  [key=0, style=solid];
m7_219 -> m7_28  [key=2, style=dotted];
m7_219 -> m7_221  [key=1, style=dashed, color=darkseagreen4, label=list];
m7_221 -> m7_222  [key=0, style=solid];
m7_221 -> m7_112  [key=2, style=dotted];
m7_221 -> m7_232  [key=2, style=dotted];
m7_221 -> m7_83  [key=2, style=dotted];
m7_221 -> m7_215  [key=0, style=bold, color=green];
m7_218 -> m7_219  [key=0, style=solid];
m7_218 -> m7_221  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m7_218 -> m7_231  [key=2, style=dotted];
m7_218 -> m7_220  [key=1, style=dashed, color=darkseagreen4, label=dateTime];
m7_220 -> m7_221  [key=0, style=solid];
m7_220 -> m7_83  [key=2, style=dotted];
m7_220 -> m7_112  [key=2, style=dotted];
m7_220 -> m7_232  [key=2, style=dotted];
m7_230 -> m7_217  [key=0, style=bold, color=blue];
m7_633 -> m7_634  [key=0, style=solid];
m7_635 -> m7_7  [key=2, style=dotted];
m7_635 -> m7_636  [key=0, style=solid];
m7_635 -> m7_637  [key=1, style=dashed, color=darkseagreen4, label=products];
m7_634 -> m7_635  [key=0, style=solid];
m7_636 -> m7_637  [key=0, style=solid];
m7_636 -> m7_638  [key=1, style=dashed, color=darkseagreen4, label=p1];
m7_637 -> m7_638  [key=0, style=solid];
m7_637 -> m7_13  [key=2, style=dotted];
m7_638 -> m7_639  [key=0, style=solid];
m7_638 -> m7_13  [key=2, style=dotted];
m7_639 -> m7_633  [key=0, style=bold, color=blue];
m7_640 -> m7_641  [key=0, style=solid];
m7_642 -> m7_22  [key=2, style=dotted];
m7_642 -> m7_643  [key=0, style=solid];
m7_641 -> m7_642  [key=0, style=solid];
m7_641 -> m7_645  [key=2, style=dotted];
m7_641 -> m7_28  [key=2, style=dotted];
m7_643 -> m7_644  [key=0, style=solid];
m7_643 -> m7_12  [key=2, style=dotted];
m7_644 -> m7_640  [key=0, style=bold, color=blue];
m7_454 -> m7_455  [key=0, style=solid];
m7_456 -> m7_7  [key=2, style=dotted];
m7_456 -> m7_457  [key=0, style=solid];
m7_456 -> m7_458  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_456 -> m7_459  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_456 -> m7_460  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_456 -> m7_461  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_456 -> m7_462  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_456 -> m7_452  [key=0, style=bold, color=green];
m7_455 -> m7_456  [key=0, style=solid];
m7_455 -> m7_463  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_457 -> m7_458  [key=0, style=solid];
m7_457 -> m7_13  [key=2, style=dotted];
m7_457 -> m7_444  [key=0, style=solid];
m7_458 -> m7_459  [key=0, style=solid];
m7_458 -> m7_13  [key=2, style=dotted];
m7_459 -> m7_460  [key=0, style=solid];
m7_459 -> m7_385  [key=2, style=dotted];
m7_459 -> m7_13  [key=2, style=dotted];
m7_460 -> m7_461  [key=0, style=solid];
m7_460 -> m7_385  [key=2, style=dotted];
m7_460 -> m7_13  [key=2, style=dotted];
m7_461 -> m7_462  [key=0, style=solid];
m7_461 -> m7_385  [key=2, style=dotted];
m7_461 -> m7_13  [key=2, style=dotted];
m7_461 -> m7_457  [key=0, style=bold, color=green];
m7_462 -> m7_463  [key=0, style=solid];
m7_462 -> m7_190  [key=2, style=dotted];
m7_463 -> m7_464  [key=0, style=solid];
m7_463 -> m7_13  [key=2, style=dotted];
m7_464 -> m7_454  [key=0, style=bold, color=blue];
m7_148 -> m7_149  [key=0, style=solid];
m7_148 -> m7_150  [key=2, style=dotted];
m7_149 -> m7_147  [key=0, style=bold, color=blue];
m7_336 -> m7_337  [key=0, style=solid];
m7_337 -> m7_338  [key=0, style=solid];
m7_338 -> m7_7  [key=2, style=dotted];
m7_338 -> m7_339  [key=0, style=solid];
m7_338 -> m7_340  [key=1, style=dashed, color=darkseagreen4, label=c2];
m7_338 -> m7_341  [key=1, style=dashed, color=darkseagreen4, label=c2];
m7_338 -> m7_342  [key=1, style=dashed, color=darkseagreen4, label=c2];
m7_338 -> m7_343  [key=1, style=dashed, color=darkseagreen4, label=c2];
m7_338 -> m7_344  [key=1, style=dashed, color=darkseagreen4, label=c2];
m7_338 -> m7_345  [key=1, style=dashed, color=darkseagreen4, label=c2];
m7_339 -> m7_340  [key=0, style=solid];
m7_339 -> m7_13  [key=2, style=dotted];
m7_340 -> m7_341  [key=0, style=solid];
m7_340 -> m7_13  [key=2, style=dotted];
m7_5 -> m7_122  [key=0, style=solid, color=green];
m7_5 -> m7_7  [key=2, style=dotted, color=green];
m7_8 -> m7_9  [key=0, style=solid];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_277  [key=2, style=dotted];
m7_12 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_194 -> m7_64  [key=0, style=solid];
m7_194 -> m7_192  [key=0, style=bold, color=blue];
m7_403 -> m7_7  [key=2, style=dotted];
m7_403 -> m7_221  [key=0, style=solid];
m7_470 -> m7_7  [key=2, style=dotted];
m7_470 -> m7_492  [key=0, style=solid];
m7_477 -> m7_7  [key=2, style=dotted];
m7_477 -> m7_544  [key=0, style=solid];
m7_341 -> m7_342  [key=0, style=solid];
m7_341 -> m7_13  [key=2, style=dotted];
m7_342 -> m7_343  [key=0, style=solid];
m7_342 -> m7_13  [key=2, style=dotted];
m7_343 -> m7_344  [key=0, style=solid];
m7_343 -> m7_13  [key=2, style=dotted];
m7_344 -> m7_345  [key=0, style=solid];
m7_344 -> m7_13  [key=2, style=dotted];
m7_345 -> m7_346  [key=0, style=solid];
m7_345 -> m7_13  [key=2, style=dotted];
m7_346 -> m7_336  [key=0, style=bold, color=blue];
m7_645 -> m7_654  [key=0, style=solid];
m7_654 -> m7_655  [key=0, style=solid];
m7_655 -> m7_645  [key=0, style=bold, color=blue];
m7_398 -> m7_399  [key=0, style=solid];
m7_399 -> m7_403  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_399 -> m7_400  [key=0, style=solid];
m7_400 -> m7_401  [key=0, style=solid];
m7_400 -> m7_117  [key=2, style=dotted];
m7_400 -> m7_215  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_401 -> m7_398  [key=0, style=bold, color=blue];
m7_525 -> m7_526  [key=0, style=solid];
m7_525 -> m7_13  [key=2, style=dotted];
m7_134 -> m7_135  [key=0, style=solid];
m7_135 -> m7_7  [key=2, style=dotted];
m7_135 -> m7_136  [key=0, style=solid];
m7_135 -> m7_137  [key=1, style=dashed, color=darkseagreen4, label=dic];
m7_135 -> m7_138  [key=1, style=dashed, color=darkseagreen4, label=dic];
m7_136 -> m7_137  [key=0, style=solid];
m7_136 -> m7_13  [key=2, style=dotted];
m7_49 -> m7_50  [key=0, style=solid];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_28  [key=2, style=dotted];
m7_51 -> m7_49  [key=0, style=bold, color=blue];
m7_285 -> m7_7  [key=2, style=dotted];
m7_285 -> m7_286  [key=0, style=solid];
m7_285 -> m7_287  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_285 -> m7_288  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_285 -> m7_289  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_285 -> m7_290  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_285 -> m7_291  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_285 -> m7_292  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_285 -> m7_293  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_285 -> m7_294  [key=1, style=dashed, color=darkseagreen4, label=values];
m7_286 -> m7_287  [key=0, style=solid];
m7_286 -> m7_13  [key=2, style=dotted];
m7_287 -> m7_288  [key=0, style=solid];
m7_287 -> m7_13  [key=2, style=dotted];
m7_288 -> m7_289  [key=0, style=solid];
m7_288 -> m7_13  [key=2, style=dotted];
m7_289 -> m7_290  [key=0, style=solid];
m7_289 -> m7_13  [key=2, style=dotted];
m7_290 -> m7_291  [key=0, style=solid];
m7_290 -> m7_13  [key=2, style=dotted];
m7_291 -> m7_292  [key=0, style=solid];
m7_291 -> m7_13  [key=2, style=dotted];
m7_292 -> m7_293  [key=0, style=solid];
m7_292 -> m7_13  [key=2, style=dotted];
m7_293 -> m7_294  [key=0, style=solid];
m7_293 -> m7_13  [key=2, style=dotted];
m7_294 -> m7_295  [key=0, style=solid];
m7_294 -> m7_13  [key=2, style=dotted];
m7_295 -> m7_283  [key=0, style=bold, color=blue];
m7_617 -> m7_618  [key=0, style=solid];
m7_618 -> m7_619  [key=0, style=solid];
m7_618 -> m7_622  [key=1, style=dashed, color=darkseagreen4, label=r1];
m7_618 -> m7_329  [key=2, style=dotted];
m7_619 -> m7_621  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m7_619 -> m7_620  [key=0, style=solid];
m7_619 -> m7_190  [key=2, style=dotted];
m7_620 -> m7_621  [key=0, style=solid];
m7_620 -> m7_13  [key=2, style=dotted];
m7_479 -> m7_480  [key=0, style=solid];
m7_481 -> m7_7  [key=2, style=dotted];
m7_481 -> m7_482  [key=0, style=solid];
m7_481 -> m7_483  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_481 -> m7_484  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_481 -> m7_485  [key=1, style=dashed, color=darkseagreen4, label=aa];
m7_480 -> m7_481  [key=0, style=solid];
m7_480 -> m7_486  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_482 -> m7_483  [key=0, style=solid];
m7_482 -> m7_13  [key=2, style=dotted];
m7_483 -> m7_484  [key=0, style=solid];
m7_483 -> m7_13  [key=2, style=dotted];
m7_484 -> m7_485  [key=0, style=solid];
m7_484 -> m7_13  [key=2, style=dotted];
m7_485 -> m7_486  [key=0, style=solid];
m7_485 -> m7_190  [key=2, style=dotted];
m7_486 -> m7_487  [key=0, style=solid];
m7_486 -> m7_13  [key=2, style=dotted];
m7_487 -> m7_479  [key=0, style=bold, color=blue];
m7_678 -> m7_683  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m7_678 -> m7_685  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m7_678 -> m7_679  [key=0, style=solid];
m7_678 -> m7_681  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m7_678 -> m7_682  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m7_684 -> m7_83  [key=2, style=dotted];
m7_684 -> m7_685  [key=0, style=solid];
m7_683 -> m7_684  [key=0, style=solid];
m7_680 -> m7_684  [key=1, style=dashed, color=darkseagreen4, label=newStrings];
m7_680 -> m7_681  [key=0, style=solid];
m7_680 -> m7_31  [key=2, style=dotted];
m7_680 -> m7_686  [key=1, style=dashed, color=darkseagreen4, label=newStrings];
m7_685 -> m7_682  [key=0, style=solid];
m7_685 -> m7_255  [key=2, style=dotted];
m7_682 -> m7_683  [key=0, style=solid];
m7_682 -> m7_686  [key=0, style=solid];
m7_679 -> m7_680  [key=0, style=solid];
m7_681 -> m7_682  [key=0, style=solid];
m7_681 -> m7_255  [key=2, style=dotted];
m7_686 -> m7_687  [key=0, style=solid];
m7_687 -> m7_678  [key=0, style=bold, color=blue];
m7_472 -> m7_473  [key=0, style=solid];
m7_473 -> m7_477  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_473 -> m7_474  [key=0, style=solid];
m7_474 -> m7_475  [key=0, style=solid];
m7_474 -> m7_117  [key=2, style=dotted];
m7_474 -> m7_539  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_475 -> m7_472  [key=0, style=bold, color=blue];
m7_665 -> m7_666  [key=0, style=solid];
m7_665 -> m7_668  [key=0, style=bold, color=crimson];
m7_665 -> m7_669  [key=0, style=bold, color=crimson];
m7_666 -> m7_667  [key=0, style=solid];
m7_666 -> m7_669  [key=0, style=solid];
m7_667 -> m7_668  [key=0, style=solid];
m7_667 -> m7_670  [key=0, style=solid];
m7_669 -> m7_670  [key=0, style=solid];
m7_668 -> m7_667  [key=0, style=solid];
m7_670 -> m7_665  [key=0, style=bold, color=blue];
m7_660 -> m7_661  [key=0, style=solid];
m7_661 -> m7_662  [key=0, style=solid];
m7_661 -> m7_656  [key=2, style=dotted];
m7_662 -> m7_660  [key=0, style=bold, color=blue];
m7_663 -> m7_664  [key=0, style=solid];
m7_663 -> m7_28  [key=2, style=dotted];
m7_664 -> m7_599  [key=0, style=bold, color=blue];
m7_621 -> m7_7  [key=2, style=dotted];
m7_621 -> m7_622  [key=0, style=solid];
m7_622 -> m7_623  [key=0, style=solid];
m7_622 -> m7_13  [key=2, style=dotted];
m7_623 -> m7_617  [key=0, style=bold, color=blue];
m7_656 -> m7_657  [key=0, style=solid];
m7_657 -> m7_658  [key=0, style=solid];
m7_657 -> m7_659  [key=2, style=dotted];
m7_658 -> m7_656  [key=0, style=bold, color=blue];
m7_705 -> m7_64  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_710 -> m7_315  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_712 -> m7_403  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_713 -> m7_410  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_714 -> m7_430  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_715 -> m7_437  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_716 -> m7_444  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_717 -> m7_470  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_718 -> m7_477  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_709 -> m7_193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.GenericListTestClass"];
m7_706 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PrivateDefaultCtorWithIEnumerableCtorList<T>"];
m7_711 -> m7_319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m7_711 -> m7_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m7_711 -> m7_326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m7_711 -> m7_327  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m7_711 -> m7_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m7_711 -> m7_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m7_711 -> m7_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m7_711 -> m7_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m7_711 -> m7_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m7_711 -> m7_320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.PopulateReadOnlyTestClass"];
m7_707 -> m7_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>"];
m7_707 -> m7_144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>"];
m7_707 -> m7_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>"];
m7_707 -> m7_152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>"];
m7_707 -> m7_155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyDictionary<TKey, TValue>"];
m7_708 -> m7_165  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>"];
m7_708 -> m7_168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>"];
m7_708 -> m7_171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.CustomReadOnlyCollection<T>"];
m7_719 -> m7_654  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList"];
m7_719 -> m7_657  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList"];
m7_719 -> m7_661  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ReadOnlyIntegerList"];
m7_720 -> m7_663  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>"];
m7_720 -> m7_666  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>"];
m7_720 -> m7_667  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>"];
m7_720 -> m7_672  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.GenericClass<T, TValue>"];
m7_703 -> m7_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>"];
m7_703 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>"];
m7_703 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClass<T>"];
m7_704 -> m7_54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>"];
m7_704 -> m7_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>"];
m7_704 -> m7_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.EnumerableClassFailure<T>"];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_11 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_11 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_11 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_11 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_7  [key=2, style=dotted];
m8_12 -> m8_20  [key=2, style=dotted];
m8_12 -> m8_21  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_22  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_22  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_23  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_10  [key=2, style=dotted];
m8_19 -> m8_11  [key=0, style=bold, color=blue];
m8_36 -> m8_37  [key=0, style=solid];
m8_33 -> m8_34  [key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_35 -> m8_33  [key=0, style=bold, color=blue];
m8_37 -> m8_38  [key=0, style=solid];
m8_38 -> m8_36  [key=0, style=bold, color=blue];
m8_24 -> m8_25  [key=0, style=solid];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_11  [key=2, style=dotted];
m8_26 -> m8_24  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_7  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_8  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_8  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_9  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_10  [key=2, style=dotted];
m8_6 -> m8_0  [key=0, style=bold, color=blue];
m8_10 -> m8_27  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> n114  [key=2, style=dotted];
m8_27 -> m8_30  [key=2, style=dotted];
m8_27 -> m8_31  [key=2, style=dotted];
m8_27 -> m8_32  [key=2, style=dotted];
m8_27 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_27 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_28 -> m8_10  [key=0, style=bold, color=blue];
m8_39 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_39 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_39 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_39 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_39 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_39 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_39 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_39 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_39 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_39 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_39 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_39 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m8_39 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m9_22 -> m9_36  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m9_22 -> m9_37  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_22 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_22 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_22 -> m9_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_22 -> m9_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_22 -> m9_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_22 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_22 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_22 -> m9_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_22 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m9_22 -> m9_27  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m9_22 -> m9_34  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m9_36 -> m9_37  [key=0, style=solid, color=green];
m9_36 -> m9_38  [key=0, style=solid, color=green];
m9_35 -> m9_36  [key=0, style=solid, color=green];
m9_35 -> m9_50  [key=2, style=dotted];
m9_37 -> m9_41  [key=0, style=solid, color=green];
m9_37 -> m9_45  [key=2, style=dotted, color=green];
m9_37 -> m9_46  [key=2, style=dotted, color=green];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_40  [key=0, style=solid];
m9_23 -> m9_38  [key=1, style=dashed, color=darkseagreen4, label=t];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_42  [key=2, style=dotted];
m9_23 -> m9_43  [key=2, style=dotted];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_28  [key=0, style=solid];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_27  [key=0, style=solid];
m9_25 -> m9_44  [key=2, style=dotted];
m9_26 -> m9_41  [key=0, style=solid];
m9_26 -> m9_45  [key=2, style=dotted];
m9_26 -> m9_46  [key=2, style=dotted];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_30  [key=0, style=solid];
m9_28 -> m9_47  [key=2, style=dotted];
m9_28 -> m9_48  [key=2, style=dotted];
m9_29 -> m9_41  [key=0, style=solid];
m9_29 -> m9_46  [key=2, style=dotted];
m9_29 -> m9_49  [key=2, style=dotted];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_50  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_33  [key=0, style=solid];
m9_32 -> m9_41  [key=0, style=solid];
m9_32 -> m9_45  [key=2, style=dotted];
m9_32 -> m9_46  [key=2, style=dotted];
m9_33 -> m9_34  [key=0, style=solid];
m9_27 -> m9_41  [key=0, style=solid];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_51  [key=2, style=dotted];
m9_34 -> m9_39  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_34 -> m9_40  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_39 -> m9_41  [key=0, style=solid];
m9_39 -> m9_52  [key=2, style=dotted];
m9_40 -> m9_41  [key=0, style=solid];
m9_41 -> m9_22  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_11  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> n96  [key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_11  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> n96  [key=2, style=dotted];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_11  [key=2, style=dotted];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> n96  [key=2, style=dotted];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_11  [key=2, style=dotted];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> n96  [key=2, style=dotted];
m9_10 -> m9_0  [key=0, style=bold, color=blue];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_19  [key=2, style=dotted];
m10_17 -> m10_21  [key=0, style=solid];
m10_17 -> m10_38  [key=2, style=dotted];
m10_17 -> m10_39  [key=2, style=dotted];
m10_18 -> n113  [key=0, style=bold, color=blue];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_37  [key=2, style=dotted];
m10_104 -> m10_105  [key=0, style=solid];
m10_104 -> m10_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_104 -> m10_109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_104 -> m10_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_104 -> m10_111  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_104 -> m10_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_104 -> m10_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_104 -> m10_115  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_104 -> m10_118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_104 -> m10_119  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_104 -> m10_161  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_105 -> m10_106  [key=0, style=solid];
m10_105 -> m10_29  [key=2, style=dotted];
m10_108 -> m10_109  [key=0, style=solid];
m10_108 -> m10_115  [key=0, style=solid];
m10_109 -> m10_110  [key=0, style=solid];
m10_109 -> m10_112  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m10_109 -> m10_113  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m10_110 -> m10_111  [key=0, style=solid];
m10_110 -> m10_112  [key=0, style=solid];
m10_110 -> m10_32  [key=2, style=dotted];
m10_111 -> m10_109  [key=0, style=solid];
m10_111 -> m10_112  [key=0, style=solid];
m10_112 -> m10_113  [key=0, style=solid];
m10_112 -> m10_118  [key=0, style=solid];
m10_112 -> m10_122  [key=2, style=dotted];
m10_114 -> m10_118  [key=0, style=solid];
m10_114 -> m10_124  [key=2, style=dotted];
m10_115 -> m10_116  [key=0, style=solid];
m10_115 -> m10_118  [key=0, style=solid];
m10_118 -> m10_107  [key=0, style=solid];
m10_118 -> m10_119  [key=0, style=solid];
m10_118 -> m10_32  [key=2, style=dotted];
m10_119 -> m10_120  [key=0, style=solid];
m10_119 -> m10_33  [key=2, style=dotted];
m10_106 -> m10_107  [key=0, style=solid];
m10_106 -> m10_102  [key=2, style=dotted];
m10_106 -> m10_113  [key=1, style=dashed, color=darkseagreen4, label=writer];
m10_106 -> m10_114  [key=1, style=dashed, color=darkseagreen4, label=writer];
m10_106 -> m10_116  [key=1, style=dashed, color=darkseagreen4, label=writer];
m10_106 -> m10_117  [key=1, style=dashed, color=darkseagreen4, label=writer];
m10_107 -> m10_108  [key=0, style=solid];
m10_107 -> m10_121  [key=2, style=dotted];
m10_113 -> m10_114  [key=0, style=solid];
m10_113 -> m10_123  [key=2, style=dotted];
m10_116 -> m10_117  [key=0, style=solid];
m10_116 -> m10_125  [key=2, style=dotted];
m10_117 -> m10_120  [key=0, style=solid];
m10_120 -> m10_104  [key=0, style=bold, color=blue];
m10_75 -> m10_1041  [key=0, style=solid];
m10_75 -> m10_1042  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_75 -> m10_1043  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_75 -> m10_1046  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_75 -> m10_1048  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_75 -> m10_1051  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_75 -> m10_1053  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_75 -> m10_1055  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_75 -> m10_1057  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_75 -> m10_1059  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_75 -> m10_1061  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_75 -> m10_1063  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_75 -> m10_48  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_75 -> m10_41  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_75 -> m10_468  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_75 -> m10_35  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_75 -> m10_981  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_75 -> m10_42  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_75 -> m10_51  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_75 -> m10_709  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_75 -> m10_67  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadForType"];
m10_75 -> m10_690  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadForType"];
m10_1041 -> m10_1042  [key=0, style=solid];
m10_1041 -> m10_1043  [key=0, style=solid];
m10_1042 -> m10_1064  [key=0, style=solid];
m10_1042 -> m10_32  [key=2, style=dotted];
m10_1043 -> m10_1044  [key=0, style=solid];
m10_1046 -> m10_1047  [key=0, style=solid];
m10_1046 -> m10_1048  [key=0, style=solid];
m10_1046 -> m10_32  [key=2, style=dotted];
m10_1048 -> m10_1045  [key=0, style=solid];
m10_1048 -> m10_1049  [key=0, style=solid];
m10_1051 -> m10_1063  [key=0, style=solid];
m10_1051 -> m10_1065  [key=2, style=dotted];
m10_1053 -> m10_1063  [key=0, style=solid];
m10_1053 -> m10_1066  [key=2, style=dotted];
m10_1055 -> m10_1063  [key=0, style=solid];
m10_1055 -> m10_1067  [key=2, style=dotted];
m10_1057 -> m10_1063  [key=0, style=solid];
m10_1057 -> m10_1068  [key=2, style=dotted];
m10_1059 -> m10_1063  [key=0, style=solid];
m10_1059 -> m10_1069  [key=2, style=dotted];
m10_1061 -> m10_1063  [key=0, style=solid];
m10_1061 -> m10_1070  [key=2, style=dotted];
m10_1063 -> m10_1064  [key=0, style=solid];
m10_1044 -> m10_1045  [key=0, style=solid];
m10_1044 -> m10_1050  [key=0, style=solid];
m10_1044 -> m10_1052  [key=0, style=solid];
m10_1044 -> m10_1054  [key=0, style=solid];
m10_1044 -> m10_1056  [key=0, style=solid];
m10_1044 -> m10_1058  [key=0, style=solid];
m10_1044 -> m10_1060  [key=0, style=solid];
m10_1044 -> m10_1062  [key=0, style=solid];
m10_1045 -> m10_1046  [key=0, style=solid];
m10_1050 -> m10_1051  [key=0, style=solid];
m10_1052 -> m10_1053  [key=0, style=solid];
m10_1054 -> m10_1055  [key=0, style=solid];
m10_1056 -> m10_1057  [key=0, style=solid];
m10_1058 -> m10_1059  [key=0, style=solid];
m10_1060 -> m10_1061  [key=0, style=solid];
m10_1062 -> m10_1064  [key=0, style=solid];
m10_1062 -> m10_185  [key=2, style=dotted];
m10_1047 -> m10_1064  [key=0, style=solid];
m10_1049 -> m10_1064  [key=0, style=solid];
m10_1064 -> m10_75  [key=0, style=bold, color=blue];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_48 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_48 -> m10_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_48 -> m10_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_48 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_48 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_48 -> m10_61  [key=1, style=dashed, color=darkseagreen4, label=bool];
m10_48 -> m10_62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_48 -> m10_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_48 -> m10_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_48 -> m10_12  [key=3, color=darkorchid, style=bold, label="method methodReturn object Deserialize"];
m10_48 -> m10_57  [key=3, color=darkorchid, style=bold, label="method methodReturn object Deserialize"];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_51  [key=0, style=solid];
m10_50 -> m10_71  [key=0, style=solid];
m10_50 -> m10_72  [key=2, style=dotted];
m10_50 -> m10_73  [key=2, style=dotted];
m10_50 -> m10_48  [key=0, style=bold, color=blue];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_43  [key=2, style=dotted];
m10_51 -> m10_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_51 -> m10_54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_51 -> m10_55  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReader"];
m10_51 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_51 -> m10_66  [key=1, style=dashed, color=darkseagreen4, label=contract];
m10_51 -> m10_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_51 -> m10_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_51 -> m10_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_51 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_51 -> m10_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_51 -> m10_48  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_51 -> m10_49  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JsonLoadSettings settings"];
m10_53 -> m10_54  [key=0, style=solid];
m10_53 -> m10_57  [key=0, style=solid];
m10_53 -> m10_75  [key=2, style=dotted];
m10_53 -> m10_55  [key=0, style=solid, color=green];
m10_53 -> m10_64  [key=2, style=dotted];
m10_55 -> m10_71  [key=0, style=solid];
m10_55 -> m10_36  [key=2, style=dotted];
m10_55 -> m10_33  [key=2, style=dotted];
m10_55 -> m10_56  [key=0, style=solid, color=green];
m10_55 -> m10_57  [key=0, style=solid, color=green];
m10_59 -> m10_61  [key=0, style=solid];
m10_59 -> m10_76  [key=2, style=dotted];
m10_59 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label=deserializedValue];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_20  [key=2, style=dotted];
m10_59 -> m10_62  [key=1, style=dashed, color=darkseagreen4, label=c];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_77  [key=2, style=dotted];
m10_60 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label=deserializedValue];
m10_60 -> m10_67  [key=2, style=dotted];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_64  [key=0, style=solid];
m10_61 -> m10_68  [key=2, style=dotted];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_64  [key=0, style=solid];
m10_62 -> m10_32  [key=2, style=dotted];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_69  [key=0, style=solid];
m10_66 -> m10_79  [key=2, style=dotted];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_80  [key=2, style=dotted];
m10_52 -> m10_53  [key=0, style=solid];
m10_52 -> m10_74  [key=2, style=dotted];
m10_52 -> m10_58  [key=1, style=dashed, color=darkseagreen4, label=converter];
m10_52 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label=converter];
m10_52 -> m10_55  [key=0, style=solid, color=green];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_56  [key=0, style=solid];
m10_54 -> m10_63  [key=0, style=solid];
m10_54 -> m10_65  [key=2, style=dotted];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_60  [key=0, style=solid];
m10_58 -> m10_63  [key=0, style=solid];
m10_58 -> m10_66  [key=2, style=dotted];
m10_58 -> m10_65  [key=2, style=dotted];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_76  [key=3, color=darkorchid, style=bold, label="Local variable object deserializedValue"];
m10_57 -> m10_77  [key=3, color=darkorchid, style=bold, label="Local variable object deserializedValue"];
m10_57 -> m10_59  [key=0, style=solid];
m10_56 -> m10_71  [key=0, style=solid];
m10_56 -> m10_55  [key=0, style=solid, color=green];
m10_56 -> m10_64  [key=2, style=dotted];
m10_64 -> m10_71  [key=0, style=solid];
m10_63 -> m10_71  [key=0, style=solid];
m10_63 -> m10_78  [key=2, style=dotted];
m10_63 -> m10_51  [key=0, style=bold, color=blue];
m10_65 -> m10_66  [key=0, style=solid];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_81  [key=2, style=dotted];
m10_69 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JConstructor"];
m10_69 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JConstructor"];
m10_69 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JConstructor"];
m10_69 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JConstructor"];
m10_69 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JConstructor"];
m10_69 -> m10_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JConstructor"];
m10_69 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JConstructor"];
m10_69 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JConstructor"];
m10_69 -> m10_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JConstructor"];
m10_69 -> m10_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JConstructor"];
m10_68 -> m10_71  [key=0, style=solid];
m10_70 -> m10_71  [key=0, style=solid];
m10_71 -> m10_48  [key=0, style=bold, color=blue];
m10_76 -> m10_999  [key=0, style=solid];
m10_76 -> m10_1000  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonConverter"];
m10_76 -> m10_1001  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonConverter"];
m10_76 -> m10_1003  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonConverter"];
m10_76 -> m10_52  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter converter"];
m10_76 -> m10_504  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_76 -> m10_658  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter converter"];
m10_76 -> m10_710  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter converter"];
m10_76 -> m10_782  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter converter"];
m10_76 -> m10_845  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter converter"];
m10_76 -> m10_879  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter converter"];
m10_76 -> m10_1018  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter converter"];
m10_76 -> m10_48  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m10_76 -> m10_41  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_76 -> m10_468  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_76 -> m10_35  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_76 -> m10_846  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_76 -> m10_294  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_76 -> m10_981  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_76 -> m10_843  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m10_76 -> m10_877  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m10_76 -> m10_12  [key=3, color=darkorchid, style=bold, label="Parameter variable object existingValue"];
m10_76 -> m10_505  [key=3, color=darkorchid, style=bold, label="Parameter variable object existingValue"];
m10_999 -> m10_1000  [key=0, style=solid];
m10_999 -> m10_1001  [key=0, style=solid];
m10_1000 -> m10_1001  [key=0, style=solid];
m10_1000 -> m10_30  [key=2, style=dotted];
m10_1000 -> m10_296  [key=2, style=dotted];
m10_1000 -> m10_351  [key=2, style=dotted];
m10_1000 -> m10_352  [key=2, style=dotted];
m10_1001 -> m10_1002  [key=0, style=solid];
m10_1001 -> m10_82  [key=2, style=dotted];
m10_1001 -> m10_1006  [key=2, style=dotted];
m10_1001 -> m10_1004  [key=1, style=dashed, color=darkseagreen4, label=value];
m10_1003 -> m10_1004  [key=0, style=solid];
m10_1003 -> m10_30  [key=2, style=dotted];
m10_1003 -> m10_296  [key=2, style=dotted];
m10_1003 -> m10_351  [key=2, style=dotted];
m10_1003 -> m10_352  [key=2, style=dotted];
m10_1002 -> m10_1003  [key=0, style=solid];
m10_1002 -> m10_1004  [key=0, style=solid];
m10_1004 -> m10_1005  [key=0, style=solid];
m10_1005 -> m10_76  [key=0, style=bold, color=blue];
m10_1141 -> m10_1201  [key=0, style=solid];
m10_1141 -> m10_1203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_1141 -> m10_1205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_1141 -> m10_1210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_1141 -> m10_42  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_1141 -> m10_1099  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property"];
m10_1141 -> m10_1090  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence> requiredProperties"];
m10_1201 -> m10_1202  [key=0, style=solid];
m10_1201 -> m10_1211  [key=0, style=solid];
m10_1203 -> m10_1204  [key=0, style=solid];
m10_1203 -> m10_1206  [key=0, style=solid];
m10_1203 -> m10_1209  [key=0, style=solid];
m10_1205 -> m10_1210  [key=0, style=solid];
m10_1205 -> m10_164  [key=2, style=dotted];
m10_1210 -> m10_1211  [key=0, style=solid];
m10_1202 -> m10_1203  [key=0, style=solid];
m10_1202 -> m10_1156  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence propertyPresence"];
m10_1204 -> m10_1205  [key=0, style=solid];
m10_1206 -> m10_1207  [key=0, style=solid];
m10_1209 -> m10_1210  [key=0, style=solid];
m10_1207 -> m10_1208  [key=0, style=solid];
m10_1208 -> m10_1210  [key=0, style=solid];
m10_1211 -> m10_1141  [key=0, style=bold, color=blue];
m10_38 -> m10_33  [key=0, style=bold, color=blue];
m10_47 -> m10_43  [key=0, style=bold, color=blue];
m10_1040 -> m10_1174  [key=0, style=solid];
m10_1040 -> m10_1175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_1040 -> m10_1176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_1040 -> m10_1177  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_1040 -> m10_981  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_1040 -> m10_1139  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_1174 -> m10_1175  [key=0, style=solid];
m10_1174 -> m10_77  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m10_1175 -> m10_1176  [key=0, style=solid];
m10_1175 -> m10_1177  [key=0, style=solid];
m10_1176 -> m10_1178  [key=0, style=solid];
m10_1176 -> m10_285  [key=2, style=dotted];
m10_1177 -> m10_1178  [key=0, style=solid];
m10_1177 -> m10_77  [key=2, style=dotted];
m10_1178 -> m10_1179  [key=0, style=solid];
m10_1179 -> m10_1040  [key=0, style=bold, color=blue];
m10_566 -> m10_567  [key=0, style=solid];
m10_566 -> m10_568  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_566 -> m10_569  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_566 -> m10_571  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_566 -> m10_41  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_566 -> m10_468  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_566 -> m10_35  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_566 -> m10_295  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_566 -> m10_294  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_566 -> m10_900  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_566 -> m10_42  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_566 -> m10_649  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_566 -> m10_772  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_566 -> m10_833  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_566 -> m10_854  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_566 -> m10_937  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_567 -> m10_568  [key=0, style=solid];
m10_567 -> m10_569  [key=0, style=solid];
m10_568 -> m10_569  [key=0, style=solid];
m10_568 -> m10_30  [key=2, style=dotted];
m10_568 -> m10_296  [key=2, style=dotted];
m10_568 -> m10_351  [key=2, style=dotted];
m10_568 -> m10_352  [key=2, style=dotted];
m10_569 -> m10_570  [key=0, style=solid];
m10_569 -> m10_572  [key=0, style=solid];
m10_569 -> m10_349  [key=2, style=dotted];
m10_569 -> m10_573  [key=2, style=dotted];
m10_571 -> m10_572  [key=0, style=solid];
m10_571 -> m10_36  [key=2, style=dotted];
m10_571 -> m10_417  [key=2, style=dotted];
m10_570 -> m10_571  [key=0, style=solid];
m10_572 -> m10_566  [key=0, style=bold, color=blue];
m10_562 -> m10_574  [key=0, style=solid];
m10_562 -> m10_551  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.DefaultValueHandling flag"];
m10_574 -> m10_575  [key=0, style=solid];
m10_575 -> m10_562  [key=0, style=bold, color=blue];
m10_37 -> m10_428  [key=0, style=solid];
m10_37 -> m10_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_37 -> m10_2  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_37 -> m10_161  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_37 -> m10_210  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_37 -> m10_323  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_37 -> m10_287  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_37 -> m10_340  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_37 -> m10_288  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_37 -> m10_846  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_42  [key=2, style=dotted];
m10_428 -> m10_429  [key=0, style=solid];
m10_428 -> m10_430  [key=0, style=solid];
m10_428 -> m10_32  [key=2, style=dotted];
m10_429 -> m10_430  [key=0, style=solid];
m10_429 -> m10_33  [key=2, style=dotted];
m10_430 -> m10_37  [key=0, style=bold, color=blue];
m10_46 -> m10_47  [key=0, style=solid];
m10_46 -> m10_31  [key=2, style=dotted];
m10_74 -> m10_186  [key=0, style=solid];
m10_74 -> m10_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonConverter"];
m10_74 -> m10_188  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonConverter"];
m10_74 -> m10_189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_74 -> m10_190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_74 -> m10_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m10_74 -> m10_192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m10_74 -> m10_193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_74 -> m10_195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_74 -> m10_196  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_74 -> m10_197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_74 -> m10_199  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_74 -> m10_200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_74 -> m10_51  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_74 -> m10_526  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty"];
m10_74 -> m10_709  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_74 -> m10_844  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_74 -> m10_878  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_74 -> m10_12  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty"];
m10_74 -> m10_41  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty"];
m10_74 -> m10_468  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty"];
m10_74 -> m10_35  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty"];
m10_74 -> m10_843  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty"];
m10_74 -> m10_981  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty"];
m10_74 -> m10_42  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty"];
m10_74 -> m10_294  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty"];
m10_186 -> m10_187  [key=0, style=solid];
m10_186 -> m10_201  [key=1, style=dashed, color=darkseagreen4, label=converter];
m10_186 -> m10_12  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.JsonConverter converter"];
m10_186 -> m10_74  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.JsonConverter converter"];
m10_186 -> m10_194  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.JsonConverter converter"];
m10_187 -> m10_188  [key=0, style=solid];
m10_187 -> m10_189  [key=0, style=solid];
m10_188 -> m10_201  [key=0, style=solid];
m10_189 -> m10_190  [key=0, style=solid];
m10_189 -> m10_191  [key=0, style=solid];
m10_190 -> m10_201  [key=0, style=solid];
m10_191 -> m10_192  [key=0, style=solid];
m10_191 -> m10_193  [key=0, style=solid];
m10_192 -> m10_201  [key=0, style=solid];
m10_193 -> m10_194  [key=0, style=solid];
m10_193 -> m10_201  [key=0, style=solid];
m10_195 -> m10_196  [key=0, style=solid];
m10_195 -> m10_197  [key=0, style=solid];
m10_196 -> m10_201  [key=0, style=solid];
m10_197 -> m10_198  [key=0, style=solid];
m10_197 -> m10_199  [key=0, style=solid];
m10_197 -> m10_203  [key=2, style=dotted];
m10_199 -> m10_200  [key=0, style=solid];
m10_199 -> m10_201  [key=0, style=solid];
m10_200 -> m10_201  [key=0, style=solid];
m10_201 -> m10_202  [key=0, style=solid];
m10_194 -> m10_195  [key=0, style=solid];
m10_198 -> m10_201  [key=0, style=solid];
m10_202 -> m10_74  [key=0, style=bold, color=blue];
m10_88 -> m10_89  [key=0, style=solid];
m10_88 -> m10_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_88 -> m10_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_88 -> m10_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_88 -> m10_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_88 -> m10_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_88 -> m10_12  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JToken CreateJToken"];
m10_88 -> m10_95  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JToken CreateJToken"];
m10_88 -> m10_77  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_88 -> m10_162  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_89 -> m10_90  [key=0, style=solid];
m10_89 -> m10_29  [key=2, style=dotted];
m10_90 -> m10_91  [key=0, style=solid];
m10_90 -> m10_95  [key=0, style=solid];
m10_91 -> m10_92  [key=0, style=solid];
m10_91 -> m10_93  [key=0, style=solid];
m10_92 -> m10_100  [key=0, style=solid];
m10_92 -> m10_101  [key=2, style=dotted];
m10_93 -> m10_94  [key=0, style=solid, color=red];
m10_93 -> m10_95  [key=0, style=solid];
m10_97 -> m10_98  [key=0, style=solid];
m10_97 -> m10_103  [key=2, style=dotted];
m10_95 -> m10_96  [key=0, style=solid];
m10_94 -> m10_100  [key=0, style=solid, color=red];
m10_96 -> m10_97  [key=0, style=solid];
m10_96 -> m10_102  [key=2, style=dotted];
m10_96 -> m10_98  [key=1, style=dashed, color=darkseagreen4, label=writer];
m10_98 -> m10_99  [key=0, style=solid];
m10_99 -> m10_100  [key=0, style=solid];
m10_100 -> m10_88  [key=0, style=bold, color=blue];
m10_294 -> m10_854  [key=0, style=solid];
m10_294 -> m10_855  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDynamicContract"];
m10_294 -> m10_856  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_857  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDynamicContract"];
m10_294 -> m10_858  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDynamicContract"];
m10_294 -> m10_859  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_860  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_294 -> m10_861  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_862  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_863  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_865  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_867  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_868  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_869  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_870  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDynamicContract"];
m10_294 -> m10_875  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_876  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_877  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_879  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_294 -> m10_882  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_883  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_884  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDynamicContract"];
m10_294 -> m10_886  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_887  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_891  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_892  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_894  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_895  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_294 -> m10_161  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member"];
m10_294 -> m10_276  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonDynamicContract contract"];
m10_294 -> m10_204  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_854 -> m10_855  [key=0, style=solid];
m10_854 -> m10_861  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_854 -> m10_862  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_854 -> m10_875  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_854 -> m10_884  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_854 -> m10_886  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_854 -> m10_894  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_854 -> m10_895  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_854 -> m10_896  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_855 -> m10_856  [key=0, style=solid];
m10_855 -> m10_857  [key=0, style=solid];
m10_856 -> m10_897  [key=0, style=solid];
m10_856 -> m10_36  [key=2, style=dotted];
m10_856 -> m10_33  [key=2, style=dotted];
m10_857 -> m10_858  [key=0, style=solid];
m10_857 -> m10_859  [key=0, style=solid];
m10_858 -> m10_860  [key=0, style=solid];
m10_858 -> m10_612  [key=2, style=dotted];
m10_858 -> m10_861  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_858 -> m10_862  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_858 -> m10_875  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_858 -> m10_884  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_858 -> m10_886  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_858 -> m10_894  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_858 -> m10_895  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_858 -> m10_896  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_859 -> m10_897  [key=0, style=solid];
m10_859 -> m10_36  [key=2, style=dotted];
m10_859 -> m10_33  [key=2, style=dotted];
m10_860 -> m10_861  [key=0, style=solid];
m10_860 -> m10_862  [key=0, style=solid];
m10_861 -> m10_862  [key=0, style=solid];
m10_861 -> m10_566  [key=2, style=dotted];
m10_862 -> m10_863  [key=0, style=solid];
m10_862 -> m10_636  [key=2, style=dotted];
m10_863 -> m10_864  [key=0, style=solid];
m10_863 -> m10_887  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m10_865 -> m10_866  [key=0, style=solid];
m10_865 -> m10_889  [key=0, style=solid];
m10_865 -> m10_891  [key=0, style=solid];
m10_867 -> m10_868  [key=0, style=solid];
m10_867 -> m10_38  [key=2, style=dotted];
m10_867 -> m10_869  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_867 -> m10_870  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_867 -> m10_884  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_867 -> m10_886  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_868 -> m10_869  [key=0, style=solid];
m10_868 -> m10_870  [key=0, style=solid];
m10_868 -> m10_32  [key=2, style=dotted];
m10_869 -> m10_892  [key=0, style=solid];
m10_869 -> m10_36  [key=2, style=dotted];
m10_869 -> m10_33  [key=2, style=dotted];
m10_870 -> m10_871  [key=0, style=solid];
m10_870 -> m10_898  [key=2, style=dotted];
m10_870 -> m10_872  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_870 -> m10_873  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_870 -> m10_874  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_870 -> m10_875  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_875 -> m10_876  [key=0, style=solid];
m10_875 -> m10_885  [key=0, style=solid];
m10_875 -> m10_892  [key=0, style=solid];
m10_875 -> m10_504  [key=2, style=dotted];
m10_876 -> m10_885  [key=0, style=solid];
m10_876 -> m10_892  [key=0, style=solid];
m10_876 -> m10_353  [key=2, style=dotted];
m10_877 -> m10_878  [key=0, style=solid];
m10_877 -> m10_563  [key=2, style=dotted];
m10_877 -> m10_882  [key=1, style=dashed, color=darkseagreen4, label=t];
m10_877 -> m10_883  [key=1, style=dashed, color=darkseagreen4, label=t];
m10_879 -> m10_880  [key=0, style=solid];
m10_879 -> m10_74  [key=2, style=dotted];
m10_879 -> m10_881  [key=1, style=dashed, color=darkseagreen4, label=dynamicMemberConverter];
m10_879 -> m10_882  [key=1, style=dashed, color=darkseagreen4, label=dynamicMemberConverter];
m10_882 -> m10_884  [key=0, style=solid];
m10_882 -> m10_76  [key=2, style=dotted];
m10_883 -> m10_884  [key=0, style=solid];
m10_883 -> m10_77  [key=2, style=dotted];
m10_884 -> m10_885  [key=0, style=solid];
m10_884 -> m10_892  [key=0, style=solid];
m10_884 -> m10_899  [key=2, style=dotted];
m10_886 -> m10_887  [key=0, style=solid];
m10_886 -> m10_888  [key=0, style=solid];
m10_886 -> m10_79  [key=2, style=dotted];
m10_887 -> m10_892  [key=0, style=solid];
m10_887 -> m10_80  [key=2, style=dotted];
m10_891 -> m10_897  [key=0, style=solid];
m10_891 -> m10_33  [key=2, style=dotted];
m10_892 -> m10_864  [key=0, style=solid];
m10_892 -> m10_893  [key=0, style=solid];
m10_892 -> m10_32  [key=2, style=dotted];
m10_894 -> m10_895  [key=0, style=solid];
m10_894 -> m10_704  [key=2, style=dotted];
m10_895 -> m10_896  [key=0, style=solid];
m10_895 -> m10_642  [key=2, style=dotted];
m10_896 -> m10_897  [key=0, style=solid];
m10_864 -> m10_865  [key=0, style=solid];
m10_864 -> m10_67  [key=3, color=darkorchid, style=bold, label="Local variable bool finished"];
m10_866 -> m10_867  [key=0, style=solid];
m10_889 -> m10_890  [key=0, style=solid];
m10_871 -> m10_872  [key=0, style=solid];
m10_871 -> m10_877  [key=0, style=solid];
m10_872 -> m10_873  [key=0, style=solid];
m10_872 -> m10_874  [key=0, style=solid];
m10_873 -> m10_874  [key=0, style=solid];
m10_873 -> m10_43  [key=2, style=dotted];
m10_874 -> m10_875  [key=0, style=solid];
m10_874 -> m10_74  [key=2, style=dotted];
m10_885 -> m10_886  [key=0, style=solid];
m10_878 -> m10_879  [key=0, style=solid];
m10_878 -> m10_43  [key=2, style=dotted];
m10_878 -> m10_883  [key=1, style=dashed, color=darkseagreen4, label=dynamicMemberContract];
m10_880 -> m10_881  [key=0, style=solid];
m10_880 -> m10_76  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m10_880 -> m10_77  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m10_881 -> m10_882  [key=0, style=solid];
m10_881 -> m10_883  [key=0, style=solid];
m10_888 -> m10_897  [key=0, style=solid];
m10_890 -> m10_892  [key=0, style=solid];
m10_890 -> m10_893  [key=1, style=dashed, color=darkseagreen4, label=finished];
m10_893 -> m10_894  [key=0, style=solid];
m10_893 -> m10_895  [key=0, style=solid];
m10_897 -> m10_294  [key=0, style=bold, color=blue];
m10_80 -> m10_1212  [key=0, style=solid];
m10_80 -> m10_1213  [key=1, style=dashed, color=darkseagreen4, label=bool];
m10_80 -> m10_1214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_80 -> m10_1215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_80 -> m10_1216  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_80 -> m10_48  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_80 -> m10_41  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_80 -> m10_468  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_80 -> m10_704  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_80 -> m10_35  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_80 -> m10_294  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_80 -> m10_42  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_80 -> m10_989  [key=3, color=darkorchid, style=bold, label="Parameter variable int initialDepth"];
m10_80 -> m10_67  [key=3, color=darkorchid, style=bold, label="Parameter variable int initialDepth"];
m10_80 -> m10_690  [key=3, color=darkorchid, style=bold, label="Parameter variable bool readPastError"];
m10_80 -> m10_653  [key=3, color=darkorchid, style=bold, label="Parameter variable int initialDepth"];
m10_80 -> m10_716  [key=3, color=darkorchid, style=bold, label="Parameter variable int initialDepth"];
m10_80 -> m10_779  [key=3, color=darkorchid, style=bold, label="Parameter variable int initialDepth"];
m10_80 -> m10_863  [key=3, color=darkorchid, style=bold, label="Parameter variable int initialDepth"];
m10_80 -> m10_1093  [key=3, color=darkorchid, style=bold, label="Parameter variable int initialDepth"];
m10_1212 -> m10_1213  [key=0, style=solid];
m10_1212 -> m10_81  [key=2, style=dotted];
m10_1213 -> m10_1214  [key=0, style=solid];
m10_1213 -> m10_1217  [key=0, style=solid];
m10_1214 -> m10_1215  [key=0, style=solid];
m10_1214 -> m10_353  [key=2, style=dotted];
m10_1215 -> m10_1216  [key=0, style=solid];
m10_1215 -> m10_1217  [key=0, style=solid];
m10_1216 -> m10_1215  [key=0, style=solid];
m10_1216 -> m10_1217  [key=0, style=solid];
m10_1216 -> m10_32  [key=2, style=dotted];
m10_1217 -> m10_80  [key=0, style=bold, color=blue];
m10_843 -> m10_844  [key=0, style=solid];
m10_843 -> m10_845  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonISerializableContract"];
m10_843 -> m10_846  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JToken"];
m10_843 -> m10_850  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_843 -> m10_851  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_843 -> m10_848  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateISerializableItem"];
m10_844 -> m10_845  [key=0, style=solid];
m10_844 -> m10_43  [key=2, style=dotted];
m10_844 -> m10_851  [key=1, style=dashed, color=darkseagreen4, label=itemContract];
m10_845 -> m10_846  [key=0, style=solid];
m10_845 -> m10_74  [key=2, style=dotted];
m10_845 -> m10_849  [key=1, style=dashed, color=darkseagreen4, label=itemConverter];
m10_845 -> m10_850  [key=1, style=dashed, color=darkseagreen4, label=itemConverter];
m10_846 -> m10_847  [key=0, style=solid];
m10_846 -> m10_286  [key=2, style=dotted];
m10_846 -> m10_850  [key=1, style=dashed, color=darkseagreen4, label=tokenReader];
m10_846 -> m10_851  [key=1, style=dashed, color=darkseagreen4, label=tokenReader];
m10_850 -> m10_852  [key=0, style=solid];
m10_850 -> m10_76  [key=2, style=dotted];
m10_851 -> m10_852  [key=0, style=solid];
m10_851 -> m10_77  [key=2, style=dotted];
m10_849 -> m10_850  [key=0, style=solid];
m10_849 -> m10_851  [key=0, style=solid];
m10_847 -> m10_848  [key=0, style=solid];
m10_847 -> m10_37  [key=2, style=dotted];
m10_848 -> m10_849  [key=0, style=solid];
m10_848 -> m10_76  [key=3, color=darkorchid, style=bold, label="Local variable object result"];
m10_848 -> m10_77  [key=3, color=darkorchid, style=bold, label="Local variable object result"];
m10_852 -> m10_853  [key=0, style=solid];
m10_853 -> m10_843  [key=0, style=bold, color=blue];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_43 -> m10_12  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract GetContractSafe"];
m10_43 -> m10_48  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m10_43 -> m10_402  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m10_43 -> m10_843  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m10_43 -> m10_877  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_46  [key=2, style=dotted];
m10_44 -> m10_47  [key=2, style=dotted];
m10_45 -> m10_43  [key=0, style=bold, color=blue];
m10_45 -> m10_47  [key=0, style=solid];
m10_35 -> m10_771  [key=0, style=solid];
m10_35 -> m10_772  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m10_35 -> m10_773  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_35 -> m10_774  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_35 -> m10_775  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m10_35 -> m10_776  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_35 -> m10_778  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_35 -> m10_779  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_35 -> m10_780  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_35 -> m10_781  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_35 -> m10_782  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_35 -> m10_785  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_35 -> m10_786  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_35 -> m10_792  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_35 -> m10_793  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_35 -> m10_794  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m10_35 -> m10_796  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_35 -> m10_797  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_35 -> m10_798  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_35 -> m10_800  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_35 -> m10_805  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_35 -> m10_806  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_35 -> m10_2  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_35 -> m10_162  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_35 -> m10_11  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract"];
m10_35 -> m10_434  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract"];
m10_35 -> m10_12  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_35 -> m10_437  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.IList list"];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_37  [key=0, style=solid];
m10_35 -> m10_40  [key=2, style=dotted];
m10_771 -> m10_772  [key=0, style=solid];
m10_772 -> m10_773  [key=0, style=solid];
m10_772 -> m10_774  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
m10_772 -> m10_777  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
m10_772 -> m10_778  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
m10_772 -> m10_797  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
m10_772 -> m10_805  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
m10_772 -> m10_806  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
m10_772 -> m10_807  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
m10_773 -> m10_774  [key=0, style=solid];
m10_773 -> m10_775  [key=0, style=solid];
m10_774 -> m10_775  [key=0, style=solid];
m10_774 -> m10_566  [key=2, style=dotted];
m10_775 -> m10_776  [key=0, style=solid];
m10_775 -> m10_778  [key=0, style=solid];
m10_776 -> m10_777  [key=0, style=solid];
m10_776 -> m10_353  [key=2, style=dotted];
m10_778 -> m10_779  [key=0, style=solid];
m10_778 -> m10_636  [key=2, style=dotted];
m10_779 -> m10_780  [key=0, style=solid];
m10_779 -> m10_796  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m10_779 -> m10_798  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m10_780 -> m10_781  [key=0, style=solid];
m10_780 -> m10_782  [key=0, style=solid];
m10_781 -> m10_782  [key=0, style=solid];
m10_781 -> m10_43  [key=2, style=dotted];
m10_782 -> m10_783  [key=0, style=solid];
m10_782 -> m10_74  [key=2, style=dotted];
m10_782 -> m10_785  [key=1, style=dashed, color=darkseagreen4, label=collectionItemConverter];
m10_782 -> m10_791  [key=1, style=dashed, color=darkseagreen4, label=collectionItemConverter];
m10_782 -> m10_792  [key=1, style=dashed, color=darkseagreen4, label=collectionItemConverter];
m10_785 -> m10_786  [key=0, style=solid];
m10_785 -> m10_804  [key=0, style=solid];
m10_785 -> m10_75  [key=2, style=dotted];
m10_786 -> m10_787  [key=0, style=solid];
m10_786 -> m10_789  [key=0, style=solid];
m10_786 -> m10_790  [key=0, style=solid];
m10_792 -> m10_794  [key=0, style=solid];
m10_792 -> m10_76  [key=2, style=dotted];
m10_793 -> m10_794  [key=0, style=solid];
m10_793 -> m10_77  [key=2, style=dotted];
m10_794 -> m10_795  [key=0, style=solid];
m10_794 -> m10_803  [key=0, style=solid];
m10_794 -> m10_762  [key=2, style=dotted];
m10_796 -> m10_797  [key=0, style=solid];
m10_796 -> m10_763  [key=2, style=dotted];
m10_796 -> m10_799  [key=1, style=dashed, color=darkseagreen4, label=errorPosition];
m10_796 -> m10_801  [key=1, style=dashed, color=darkseagreen4, label=errorPosition];
m10_797 -> m10_798  [key=0, style=solid];
m10_797 -> m10_802  [key=0, style=solid];
m10_797 -> m10_79  [key=2, style=dotted];
m10_798 -> m10_799  [key=0, style=solid];
m10_798 -> m10_80  [key=2, style=dotted];
m10_800 -> m10_808  [key=0, style=solid];
m10_800 -> m10_417  [key=2, style=dotted];
m10_805 -> m10_806  [key=0, style=solid];
m10_805 -> m10_704  [key=2, style=dotted];
m10_806 -> m10_807  [key=0, style=solid];
m10_806 -> m10_642  [key=2, style=dotted];
m10_777 -> m10_808  [key=0, style=solid];
m10_807 -> m10_808  [key=0, style=solid];
m10_783 -> m10_784  [key=0, style=solid];
m10_783 -> m10_799  [key=1, style=dashed, color=darkseagreen4, label=previousErrorIndex];
m10_783 -> m10_12  [key=3, color=darkorchid, style=bold, label="Local variable int? previousErrorIndex"];
m10_791 -> m10_792  [key=0, style=solid];
m10_791 -> m10_793  [key=0, style=solid];
m10_784 -> m10_785  [key=0, style=solid];
m10_784 -> m10_803  [key=1, style=dashed, color=darkseagreen4, label=finished];
m10_784 -> m10_804  [key=1, style=dashed, color=darkseagreen4, label=finished];
m10_784 -> m10_67  [key=3, color=darkorchid, style=bold, label="Local variable bool finished"];
m10_799 -> m10_800  [key=0, style=solid];
m10_799 -> m10_801  [key=0, style=solid];
m10_803 -> m10_784  [key=0, style=solid];
m10_803 -> m10_804  [key=0, style=solid];
m10_804 -> m10_805  [key=0, style=solid];
m10_804 -> m10_806  [key=0, style=solid];
m10_787 -> m10_788  [key=0, style=solid];
m10_789 -> m10_795  [key=0, style=solid];
m10_789 -> m10_803  [key=0, style=solid];
m10_790 -> m10_791  [key=0, style=solid];
m10_790 -> m10_76  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m10_790 -> m10_77  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m10_788 -> m10_795  [key=0, style=solid];
m10_788 -> m10_803  [key=0, style=solid];
m10_788 -> m10_804  [key=1, style=dashed, color=darkseagreen4, label=finished];
m10_795 -> m10_796  [key=0, style=solid];
m10_801 -> m10_803  [key=0, style=solid];
m10_802 -> m10_808  [key=0, style=solid];
m10_808 -> m10_35  [key=0, style=bold, color=blue];
m10_418 -> m10_419  [key=0, style=solid];
m10_418 -> m10_420  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_418 -> m10_421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_418 -> m10_424  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_418 -> m10_425  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_418 -> m10_162  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_419 -> m10_420  [key=0, style=solid];
m10_419 -> m10_421  [key=0, style=solid];
m10_420 -> m10_427  [key=0, style=solid];
m10_420 -> m10_36  [key=2, style=dotted];
m10_420 -> m10_33  [key=2, style=dotted];
m10_421 -> m10_422  [key=0, style=solid];
m10_421 -> m10_426  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m10_424 -> m10_425  [key=0, style=solid];
m10_424 -> m10_170  [key=2, style=dotted];
m10_424 -> m10_296  [key=2, style=dotted];
m10_424 -> m10_424  [key=1, style=dashed, color=darkseagreen4, label=message];
m10_425 -> m10_427  [key=0, style=solid];
m10_425 -> m10_33  [key=2, style=dotted];
m10_422 -> m10_423  [key=0, style=solid];
m10_422 -> m10_426  [key=0, style=solid];
m10_426 -> m10_427  [key=0, style=solid];
m10_423 -> m10_424  [key=0, style=solid];
m10_427 -> m10_418  [key=0, style=bold, color=blue];
m10_287 -> m10_297  [key=0, style=solid];
m10_287 -> m10_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m10_287 -> m10_300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m10_287 -> m10_317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m10_287 -> m10_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m10_287 -> m10_325  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m10_287 -> m10_329  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m10_287 -> m10_330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m10_287 -> m10_331  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m10_287 -> m10_333  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m10_287 -> m10_334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m10_287 -> m10_342  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m10_287 -> m10_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m10_287 -> m10_345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JTokenReader"];
m10_287 -> m10_347  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m10_287 -> m10_210  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Linq.JTokenReader reader"];
m10_287 -> m10_205  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m10_287 -> m10_161  [key=3, color=darkorchid, style=bold, label="Parameter variable object existingValue"];
m10_287 -> m10_222  [key=3, color=darkorchid, style=bold, label="Parameter variable object newValue"];
m10_287 -> m10_162  [key=3, color=darkorchid, style=bold, label="Parameter variable object newValue"];
m10_287 -> m10_204  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_287 -> m10_690  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadMetadataPropertiesToken"];
m10_287 -> m10_67  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadMetadataPropertiesToken"];
m10_297 -> m10_298  [key=0, style=solid];
m10_297 -> m10_342  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m10_297 -> m10_347  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m10_299 -> m10_300  [key=0, style=solid];
m10_299 -> m10_345  [key=0, style=solid];
m10_300 -> m10_301  [key=0, style=solid];
m10_300 -> m10_320  [key=1, style=dashed, color=darkseagreen4, label=current];
m10_300 -> m10_326  [key=1, style=dashed, color=darkseagreen4, label=current];
m10_300 -> m10_335  [key=1, style=dashed, color=darkseagreen4, label=current];
m10_300 -> m10_338  [key=1, style=dashed, color=darkseagreen4, label=current];
m10_317 -> m10_318  [key=0, style=solid];
m10_317 -> m10_30  [key=2, style=dotted];
m10_317 -> m10_296  [key=2, style=dotted];
m10_317 -> m10_351  [key=2, style=dotted];
m10_317 -> m10_352  [key=2, style=dotted];
m10_318 -> m10_319  [key=0, style=solid];
m10_318 -> m10_353  [key=2, style=dotted];
m10_325 -> m10_326  [key=0, style=solid];
m10_325 -> m10_354  [key=2, style=dotted];
m10_325 -> m10_325  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m10_325 -> m10_342  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m10_325 -> m10_347  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m10_329 -> m10_330  [key=0, style=solid];
m10_329 -> m10_37  [key=2, style=dotted];
m10_330 -> m10_331  [key=0, style=solid];
m10_330 -> m10_333  [key=0, style=solid];
m10_331 -> m10_332  [key=0, style=solid];
m10_331 -> m10_333  [key=0, style=solid];
m10_333 -> m10_334  [key=0, style=solid];
m10_333 -> m10_37  [key=2, style=dotted];
m10_334 -> m10_328  [key=0, style=solid];
m10_334 -> m10_353  [key=2, style=dotted];
m10_342 -> m10_343  [key=0, style=solid];
m10_342 -> m10_162  [key=2, style=dotted];
m10_342 -> m10_347  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m10_343 -> m10_344  [key=0, style=solid];
m10_343 -> m10_353  [key=2, style=dotted];
m10_345 -> m10_346  [key=0, style=solid];
m10_345 -> m10_37  [key=2, style=dotted];
m10_298 -> m10_299  [key=0, style=solid];
m10_298 -> m10_347  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m10_301 -> m10_302  [key=0, style=solid];
m10_301 -> m10_303  [key=1, style=dashed, color=darkseagreen4, label=refToken];
m10_301 -> m10_304  [key=1, style=dashed, color=darkseagreen4, label=refToken];
m10_301 -> m10_305  [key=1, style=dashed, color=darkseagreen4, label=refToken];
m10_301 -> m10_311  [key=1, style=dashed, color=darkseagreen4, label=refToken];
m10_320 -> m10_321  [key=0, style=solid];
m10_320 -> m10_322  [key=1, style=dashed, color=darkseagreen4, label=typeToken];
m10_320 -> m10_323  [key=1, style=dashed, color=darkseagreen4, label=typeToken];
m10_326 -> m10_327  [key=0, style=solid];
m10_335 -> m10_336  [key=0, style=solid];
m10_335 -> m10_337  [key=1, style=dashed, color=darkseagreen4, label=idToken];
m10_338 -> m10_339  [key=0, style=solid];
m10_338 -> m10_340  [key=1, style=dashed, color=darkseagreen4, label=valuesToken];
m10_302 -> m10_303  [key=0, style=solid];
m10_302 -> m10_320  [key=0, style=solid];
m10_303 -> m10_304  [key=0, style=solid];
m10_303 -> m10_305  [key=0, style=solid];
m10_304 -> m10_347  [key=0, style=solid];
m10_304 -> m10_36  [key=2, style=dotted];
m10_304 -> m10_348  [key=2, style=dotted];
m10_305 -> m10_306  [key=0, style=solid];
m10_305 -> m10_307  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_305 -> m10_308  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_305 -> m10_309  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_305 -> m10_310  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_311 -> m10_312  [key=0, style=solid];
m10_311 -> m10_315  [key=1, style=dashed, color=darkseagreen4, label=reference];
m10_311 -> m10_317  [key=1, style=dashed, color=darkseagreen4, label=reference];
m10_306 -> m10_307  [key=0, style=solid];
m10_306 -> m10_313  [key=1, style=dashed, color=darkseagreen4, label=additionalContent];
m10_306 -> m10_314  [key=1, style=dashed, color=darkseagreen4, label=additionalContent];
m10_306 -> m10_12  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.JToken additionalContent"];
m10_307 -> m10_308  [key=0, style=solid];
m10_307 -> m10_309  [key=0, style=solid];
m10_308 -> m10_311  [key=0, style=solid];
m10_308 -> m10_313  [key=1, style=dashed, color=darkseagreen4, label=additionalContent];
m10_308 -> m10_314  [key=1, style=dashed, color=darkseagreen4, label=additionalContent];
m10_309 -> m10_310  [key=0, style=solid];
m10_309 -> m10_311  [key=0, style=solid];
m10_310 -> m10_311  [key=0, style=solid];
m10_310 -> m10_313  [key=1, style=dashed, color=darkseagreen4, label=additionalContent];
m10_310 -> m10_314  [key=1, style=dashed, color=darkseagreen4, label=additionalContent];
m10_313 -> m10_314  [key=0, style=solid];
m10_313 -> m10_315  [key=0, style=solid];
m10_314 -> m10_347  [key=0, style=solid];
m10_314 -> m10_36  [key=2, style=dotted];
m10_314 -> m10_348  [key=2, style=dotted];
m10_312 -> m10_313  [key=0, style=solid];
m10_312 -> m10_320  [key=0, style=solid];
m10_315 -> m10_316  [key=0, style=solid];
m10_315 -> m10_349  [key=2, style=dotted];
m10_315 -> m10_350  [key=2, style=dotted];
m10_315 -> m10_317  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m10_315 -> m10_347  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m10_316 -> m10_317  [key=0, style=solid];
m10_316 -> m10_318  [key=0, style=solid];
m10_319 -> m10_347  [key=0, style=solid];
m10_321 -> m10_322  [key=0, style=solid];
m10_321 -> m10_335  [key=0, style=solid];
m10_322 -> m10_323  [key=0, style=solid];
m10_322 -> m10_325  [key=1, style=dashed, color=darkseagreen4, label=qualifiedTypeName];
m10_323 -> m10_324  [key=0, style=solid];
m10_323 -> m10_286  [key=2, style=dotted];
m10_323 -> m10_325  [key=1, style=dashed, color=darkseagreen4, label=typeTokenReader];
m10_324 -> m10_325  [key=0, style=solid];
m10_324 -> m10_37  [key=2, style=dotted];
m10_327 -> m10_328  [key=0, style=solid];
m10_327 -> m10_335  [key=0, style=solid];
m10_328 -> m10_329  [key=0, style=solid];
m10_328 -> m10_335  [key=0, style=solid];
m10_332 -> m10_347  [key=0, style=solid];
m10_336 -> m10_337  [key=0, style=solid];
m10_336 -> m10_338  [key=0, style=solid];
m10_337 -> m10_338  [key=0, style=solid];
m10_337 -> m10_342  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m10_337 -> m10_347  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m10_339 -> m10_340  [key=0, style=solid];
m10_339 -> m10_345  [key=0, style=solid];
m10_340 -> m10_341  [key=0, style=solid];
m10_340 -> m10_286  [key=2, style=dotted];
m10_340 -> m10_342  [key=1, style=dashed, color=darkseagreen4, label=listReader];
m10_341 -> m10_342  [key=0, style=solid];
m10_341 -> m10_37  [key=2, style=dotted];
m10_344 -> m10_347  [key=0, style=solid];
m10_346 -> m10_347  [key=0, style=solid];
m10_347 -> m10_287  [key=0, style=bold, color=blue];
m10_642 -> m10_643  [key=0, style=solid];
m10_642 -> m10_644  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_642 -> m10_645  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_642 -> m10_41  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_642 -> m10_468  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_642 -> m10_35  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_642 -> m10_295  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_642 -> m10_294  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_642 -> m10_900  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_642 -> m10_42  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_642 -> m10_649  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_642 -> m10_772  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_642 -> m10_833  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_642 -> m10_854  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_642 -> m10_937  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_643 -> m10_644  [key=0, style=solid];
m10_643 -> m10_645  [key=0, style=solid];
m10_644 -> m10_645  [key=0, style=solid];
m10_644 -> m10_36  [key=2, style=dotted];
m10_644 -> m10_351  [key=2, style=dotted];
m10_644 -> m10_352  [key=2, style=dotted];
m10_645 -> m10_646  [key=0, style=solid];
m10_645 -> m10_647  [key=2, style=dotted];
m10_646 -> m10_642  [key=0, style=bold, color=blue];
m10_989 -> m10_1180  [key=0, style=solid];
m10_989 -> m10_1181  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_989 -> m10_1182  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence"];
m10_989 -> m10_1185  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_989 -> m10_1186  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_989 -> m10_1187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_989 -> m10_1188  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_989 -> m10_1189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_989 -> m10_1190  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_989 -> m10_1193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_989 -> m10_1195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_989 -> m10_1197  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_989 -> m10_1198  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_989 -> m10_937  [key=3, color=darkorchid, style=bold, label="Parameter variable object newObject"];
m10_989 -> m10_42  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract"];
m10_989 -> m10_900  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract"];
m10_989 -> m10_1093  [key=3, color=darkorchid, style=bold, label="Parameter variable int initialDepth"];
m10_989 -> m10_1132  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property"];
m10_989 -> m10_1133  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence presence"];
m10_989 -> m10_690  [key=3, color=darkorchid, style=bold, label="Parameter variable bool setDefaultValue"];
m10_1180 -> m10_1181  [key=0, style=solid];
m10_1180 -> m10_1200  [key=0, style=solid];
m10_1181 -> m10_1182  [key=0, style=solid];
m10_1181 -> m10_1184  [key=1, style=dashed, color=darkseagreen4, label=resolvedRequired];
m10_1181 -> m10_1192  [key=1, style=dashed, color=darkseagreen4, label=resolvedRequired];
m10_1181 -> m10_1194  [key=1, style=dashed, color=darkseagreen4, label=resolvedRequired];
m10_1182 -> m10_1183  [key=0, style=solid];
m10_1182 -> m10_1191  [key=0, style=solid];
m10_1185 -> m10_1200  [key=0, style=solid];
m10_1185 -> m10_36  [key=2, style=dotted];
m10_1185 -> m10_33  [key=2, style=dotted];
m10_1186 -> m10_1187  [key=0, style=solid];
m10_1186 -> m10_1196  [key=0, style=solid];
m10_1186 -> m10_1200  [key=0, style=solid];
m10_1187 -> m10_1188  [key=0, style=solid];
m10_1187 -> m10_1189  [key=0, style=solid];
m10_1188 -> m10_1189  [key=0, style=solid];
m10_1188 -> m10_43  [key=2, style=dotted];
m10_1189 -> m10_1190  [key=0, style=solid];
m10_1189 -> m10_1196  [key=0, style=solid];
m10_1189 -> m10_1200  [key=0, style=solid];
m10_1189 -> m10_560  [key=2, style=dotted];
m10_1189 -> m10_562  [key=2, style=dotted];
m10_1190 -> m10_1196  [key=0, style=solid];
m10_1190 -> m10_1200  [key=0, style=solid];
m10_1190 -> m10_564  [key=2, style=dotted];
m10_1190 -> m10_163  [key=2, style=dotted];
m10_1190 -> m10_529  [key=2, style=dotted];
m10_1193 -> m10_1200  [key=0, style=solid];
m10_1193 -> m10_36  [key=2, style=dotted];
m10_1193 -> m10_33  [key=2, style=dotted];
m10_1195 -> m10_1200  [key=0, style=solid];
m10_1195 -> m10_36  [key=2, style=dotted];
m10_1195 -> m10_33  [key=2, style=dotted];
m10_1197 -> m10_1198  [key=0, style=solid];
m10_1197 -> m10_1199  [key=0, style=solid];
m10_1197 -> m10_79  [key=2, style=dotted];
m10_1198 -> m10_1200  [key=0, style=solid];
m10_1198 -> m10_80  [key=2, style=dotted];
m10_1184 -> m10_1185  [key=0, style=solid];
m10_1184 -> m10_1186  [key=0, style=solid];
m10_1192 -> m10_1193  [key=0, style=solid];
m10_1192 -> m10_1194  [key=0, style=solid];
m10_1194 -> m10_1195  [key=0, style=solid];
m10_1194 -> m10_1196  [key=0, style=solid];
m10_1194 -> m10_1200  [key=0, style=solid];
m10_1183 -> m10_1184  [key=0, style=solid];
m10_1191 -> m10_1192  [key=0, style=solid];
m10_1196 -> m10_1197  [key=0, style=solid];
m10_1199 -> m10_1200  [key=0, style=solid];
m10_1200 -> m10_989  [key=0, style=bold, color=blue];
m10_467 -> m10_584  [key=0, style=solid];
m10_467 -> m10_585  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_467 -> m10_586  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_467 -> m10_587  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_467 -> m10_589  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_467 -> m10_591  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_467 -> m10_592  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_467 -> m10_594  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_467 -> m10_595  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_467 -> m10_596  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_467 -> m10_598  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_467 -> m10_599  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_467 -> m10_600  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_467 -> m10_601  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_467 -> m10_604  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_467 -> m10_606  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_467 -> m10_607  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_467 -> m10_608  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_467 -> m10_609  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_467 -> m10_162  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_467 -> m10_434  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract"];
m10_467 -> m10_436  [key=3, color=darkorchid, style=bold, label="Parameter variable bool createdFromNonDefaultCreator"];
m10_584 -> m10_585  [key=0, style=solid];
m10_584 -> m10_586  [key=0, style=solid];
m10_585 -> m10_610  [key=0, style=solid];
m10_585 -> m10_36  [key=2, style=dotted];
m10_585 -> m10_33  [key=2, style=dotted];
m10_586 -> m10_587  [key=0, style=solid];
m10_586 -> m10_592  [key=0, style=solid];
m10_587 -> m10_588  [key=0, style=solid];
m10_587 -> m10_590  [key=0, style=solid];
m10_589 -> m10_610  [key=0, style=solid];
m10_589 -> m10_611  [key=2, style=dotted];
m10_591 -> m10_610  [key=0, style=solid];
m10_591 -> m10_293  [key=2, style=dotted];
m10_592 -> m10_593  [key=0, style=solid];
m10_592 -> m10_598  [key=0, style=solid];
m10_594 -> m10_595  [key=0, style=solid];
m10_594 -> m10_611  [key=2, style=dotted];
m10_594 -> m10_596  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_594 -> m10_597  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_595 -> m10_596  [key=0, style=solid];
m10_595 -> m10_597  [key=0, style=solid];
m10_596 -> m10_597  [key=0, style=solid];
m10_596 -> m10_34  [key=2, style=dotted];
m10_596 -> m10_596  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_598 -> m10_599  [key=0, style=solid];
m10_598 -> m10_604  [key=0, style=solid];
m10_599 -> m10_600  [key=0, style=solid];
m10_599 -> m10_612  [key=2, style=dotted];
m10_599 -> m10_601  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_599 -> m10_603  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_600 -> m10_601  [key=0, style=solid];
m10_600 -> m10_602  [key=0, style=solid];
m10_601 -> m10_602  [key=0, style=solid];
m10_601 -> m10_34  [key=2, style=dotted];
m10_601 -> m10_601  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_601 -> m10_603  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_604 -> m10_605  [key=0, style=solid];
m10_604 -> m10_607  [key=0, style=solid];
m10_606 -> m10_610  [key=0, style=solid];
m10_606 -> m10_611  [key=2, style=dotted];
m10_607 -> m10_608  [key=0, style=solid];
m10_607 -> m10_609  [key=0, style=solid];
m10_608 -> m10_610  [key=0, style=solid];
m10_608 -> m10_36  [key=2, style=dotted];
m10_608 -> m10_33  [key=2, style=dotted];
m10_609 -> m10_610  [key=0, style=solid];
m10_609 -> m10_36  [key=2, style=dotted];
m10_609 -> m10_33  [key=2, style=dotted];
m10_588 -> m10_589  [key=0, style=solid];
m10_588 -> m10_610  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_590 -> m10_591  [key=0, style=solid];
m10_590 -> m10_610  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_593 -> m10_594  [key=0, style=solid];
m10_593 -> m10_610  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_597 -> m10_610  [key=0, style=solid];
m10_603 -> m10_610  [key=0, style=solid];
m10_602 -> m10_603  [key=0, style=solid];
m10_602 -> m10_610  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_605 -> m10_606  [key=0, style=solid];
m10_605 -> m10_610  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_610 -> m10_467  [key=0, style=bold, color=blue];
m10_163 -> m10_475  [key=0, style=solid];
m10_163 -> m10_476  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_163 -> m10_477  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_163 -> m10_478  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_163 -> m10_479  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_163 -> m10_481  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_163 -> m10_482  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_163 -> m10_483  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_163 -> m10_484  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_163 -> m10_485  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_163 -> m10_487  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_163 -> m10_488  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_163 -> m10_489  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_163 -> m10_490  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_163 -> m10_491  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_163 -> m10_493  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_163 -> m10_494  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_163 -> m10_77  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m10_163 -> m10_41  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_163 -> m10_900  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_163 -> m10_989  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_163 -> m10_140  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_163 -> m10_147  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_163 -> m10_663  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_163 -> m10_163  [key=3, color=darkorchid, style=bold, label="method methodReturn object EnsureType"];
m10_163 -> m10_12  [key=3, color=darkorchid, style=bold, label="method methodReturn object EnsureType"];
m10_475 -> m10_476  [key=0, style=solid];
m10_475 -> m10_477  [key=0, style=solid];
m10_476 -> m10_495  [key=0, style=solid];
m10_477 -> m10_478  [key=0, style=solid];
m10_477 -> m10_496  [key=2, style=dotted];
m10_478 -> m10_479  [key=0, style=solid];
m10_478 -> m10_494  [key=0, style=solid];
m10_479 -> m10_480  [key=0, style=solid];
m10_479 -> m10_481  [key=0, style=solid];
m10_481 -> m10_482  [key=0, style=solid];
m10_481 -> m10_491  [key=0, style=solid];
m10_482 -> m10_483  [key=0, style=solid];
m10_482 -> m10_486  [key=1, style=dashed, color=darkseagreen4, label=primitiveContract];
m10_483 -> m10_484  [key=0, style=solid];
m10_483 -> m10_488  [key=0, style=solid];
m10_484 -> m10_485  [key=0, style=solid];
m10_484 -> m10_486  [key=0, style=solid];
m10_485 -> m10_495  [key=0, style=solid];
m10_485 -> m10_38  [key=2, style=dotted];
m10_485 -> m10_497  [key=2, style=dotted];
m10_487 -> m10_495  [key=0, style=solid];
m10_487 -> m10_499  [key=2, style=dotted];
m10_488 -> m10_489  [key=0, style=solid];
m10_488 -> m10_490  [key=0, style=solid];
m10_489 -> m10_495  [key=0, style=solid];
m10_489 -> m10_500  [key=2, style=dotted];
m10_490 -> m10_495  [key=0, style=solid];
m10_490 -> m10_501  [key=2, style=dotted];
m10_491 -> m10_495  [key=0, style=solid];
m10_491 -> m10_502  [key=2, style=dotted];
m10_493 -> m10_495  [key=0, style=solid];
m10_493 -> m10_503  [key=2, style=dotted];
m10_493 -> m10_296  [key=2, style=dotted];
m10_493 -> m10_417  [key=2, style=dotted];
m10_494 -> m10_495  [key=0, style=solid];
m10_480 -> m10_495  [key=0, style=solid];
m10_486 -> m10_487  [key=0, style=solid];
m10_486 -> m10_488  [key=0, style=solid];
m10_486 -> m10_498  [key=2, style=dotted];
m10_492 -> m10_493  [key=0, style=solid];
m10_495 -> m10_163  [key=0, style=bold, color=blue];
m10_164 -> m10_167  [key=0, style=solid];
m10_164 -> m10_77  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_164 -> m10_140  [key=3, color=darkorchid, style=bold, label="Parameter variable string s"];
m10_164 -> m10_916  [key=3, color=darkorchid, style=bold, label="Parameter variable string s"];
m10_167 -> m10_168  [key=0, style=solid];
m10_167 -> m10_169  [key=2, style=dotted];
m10_168 -> m10_164  [key=0, style=bold, color=blue];
m10_82 -> m10_83  [key=0, style=solid];
m10_83 -> m10_84  [key=0, style=solid];
m10_83 -> m10_85  [key=0, style=solid];
m10_84 -> m10_85  [key=0, style=solid];
m10_84 -> m10_87  [key=2, style=dotted];
m10_85 -> m10_86  [key=0, style=solid];
m10_86 -> m10_82  [key=0, style=bold, color=blue];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_28  [key=0, style=solid];
m10_25 -> m10_42  [key=2, style=dotted];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_29  [key=2, style=dotted];
m10_27 -> m10_36  [key=2, style=dotted];
m10_27 -> m10_33  [key=2, style=dotted];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_28  [key=0, style=solid];
m10_26 -> m10_36  [key=2, style=dotted];
m10_26 -> m10_33  [key=2, style=dotted];
m10_28 -> m10_25  [key=0, style=bold, color=blue];
m10_28 -> m10_2  [key=0, style=bold, color=blue];
m10_11 -> m10_12  [key=0, style=solid];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_28  [key=0, style=solid];
m10_12 -> m10_34  [key=2, style=dotted];
m10_12 -> m10_35  [key=2, style=dotted];
m10_13 -> m10_11  [key=0, style=bold, color=blue];
m10_13 -> m10_28  [key=0, style=solid];
m10_13 -> m10_36  [key=2, style=dotted];
m10_13 -> m10_33  [key=2, style=dotted];
m10_161 -> m10_204  [key=0, style=solid];
m10_161 -> m10_205  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_161 -> m10_207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_216  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_161 -> m10_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_229  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_161 -> m10_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_161 -> m10_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_161 -> m10_236  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_161 -> m10_237  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_161 -> m10_238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_161 -> m10_244  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_161 -> m10_254  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_161 -> m10_256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_260  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_161 -> m10_261  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_161 -> m10_263  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_273  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_276  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_161 -> m10_277  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_279  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_161 -> m10_280  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_282  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_161 -> m10_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_161 -> m10_77  [key=3, color=darkorchid, style=bold, label="Parameter variable object existingValue"];
m10_161 -> m10_222  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateObject"];
m10_161 -> m10_226  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateObject"];
m10_161 -> m10_104  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateObject"];
m10_161 -> m10_235  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateObject"];
m10_161 -> m10_42  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateObject"];
m10_161 -> m10_253  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateObject"];
m10_161 -> m10_294  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateObject"];
m10_161 -> m10_295  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateObject"];
m10_204 -> m10_205  [key=0, style=solid];
m10_205 -> m10_206  [key=0, style=solid];
m10_205 -> m10_223  [key=1, style=dashed, color=darkseagreen4, label=resolvedObjectType];
m10_205 -> m10_227  [key=1, style=dashed, color=darkseagreen4, label=resolvedObjectType];
m10_205 -> m10_236  [key=1, style=dashed, color=darkseagreen4, label=resolvedObjectType];
m10_205 -> m10_248  [key=1, style=dashed, color=darkseagreen4, label=resolvedObjectType];
m10_205 -> m10_282  [key=1, style=dashed, color=darkseagreen4, label=resolvedObjectType];
m10_205 -> m10_161  [key=3, color=darkorchid, style=bold, label="Local variable System.Type resolvedObjectType"];
m10_207 -> m10_208  [key=0, style=solid];
m10_207 -> m10_37  [key=2, style=dotted];
m10_210 -> m10_211  [key=0, style=solid];
m10_210 -> m10_223  [key=1, style=dashed, color=darkseagreen4, label=tokenReader];
m10_212 -> m10_213  [key=0, style=solid];
m10_212 -> m10_285  [key=2, style=dotted];
m10_214 -> m10_215  [key=0, style=solid];
m10_215 -> m10_216  [key=0, style=solid];
m10_216 -> m10_217  [key=0, style=solid];
m10_217 -> m10_218  [key=0, style=solid];
m10_218 -> m10_219  [key=0, style=solid];
m10_219 -> m10_220  [key=0, style=solid];
m10_223 -> m10_224  [key=0, style=solid];
m10_223 -> m10_229  [key=0, style=solid];
m10_223 -> m10_287  [key=2, style=dotted];
m10_223 -> m10_223  [key=1, style=dashed, color=darkseagreen4, label=resolvedObjectType];
m10_223 -> m10_231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_223 -> m10_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_223 -> m10_236  [key=1, style=dashed, color=darkseagreen4, label=resolvedObjectType];
m10_223 -> m10_238  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_223 -> m10_241  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_223 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_223 -> m10_248  [key=1, style=dashed, color=darkseagreen4, label=resolvedObjectType];
m10_223 -> m10_252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_223 -> m10_258  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_223 -> m10_259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_223 -> m10_260  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_223 -> m10_261  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_223 -> m10_262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_223 -> m10_263  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_223 -> m10_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_223 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_223 -> m10_273  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_223 -> m10_276  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_223 -> m10_277  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_223 -> m10_279  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_223 -> m10_280  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_223 -> m10_282  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_225 -> m10_226  [key=0, style=solid];
m10_225 -> m10_37  [key=2, style=dotted];
m10_227 -> m10_228  [key=0, style=solid];
m10_227 -> m10_229  [key=0, style=solid];
m10_227 -> m10_288  [key=2, style=dotted];
m10_227 -> m10_227  [key=1, style=dashed, color=darkseagreen4, label=resolvedObjectType];
m10_227 -> m10_231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_227 -> m10_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_227 -> m10_236  [key=1, style=dashed, color=darkseagreen4, label=resolvedObjectType];
m10_227 -> m10_238  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_227 -> m10_241  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_227 -> m10_243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_227 -> m10_248  [key=1, style=dashed, color=darkseagreen4, label=resolvedObjectType];
m10_227 -> m10_252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_227 -> m10_258  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_227 -> m10_259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_227 -> m10_260  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_227 -> m10_261  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_227 -> m10_262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_227 -> m10_263  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_227 -> m10_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_227 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_227 -> m10_273  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_227 -> m10_276  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_227 -> m10_277  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_227 -> m10_279  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_227 -> m10_280  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_227 -> m10_282  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_229 -> m10_230  [key=0, style=solid];
m10_229 -> m10_231  [key=0, style=solid];
m10_229 -> m10_289  [key=2, style=dotted];
m10_230 -> m10_284  [key=0, style=solid];
m10_230 -> m10_104  [key=2, style=dotted];
m10_231 -> m10_232  [key=0, style=solid];
m10_231 -> m10_242  [key=0, style=solid];
m10_231 -> m10_251  [key=0, style=solid];
m10_231 -> m10_275  [key=0, style=solid];
m10_231 -> m10_278  [key=0, style=solid];
m10_234 -> m10_235  [key=0, style=solid];
m10_234 -> m10_238  [key=1, style=dashed, color=darkseagreen4, label=objectContract];
m10_234 -> m10_241  [key=1, style=dashed, color=darkseagreen4, label=objectContract];
m10_236 -> m10_237  [key=0, style=solid];
m10_236 -> m10_238  [key=0, style=solid];
m10_236 -> m10_30  [key=2, style=dotted];
m10_236 -> m10_290  [key=2, style=dotted];
m10_237 -> m10_239  [key=0, style=solid];
m10_237 -> m10_240  [key=1, style=dashed, color=darkseagreen4, label=targetObject];
m10_237 -> m10_241  [key=1, style=dashed, color=darkseagreen4, label=targetObject];
m10_238 -> m10_239  [key=0, style=solid];
m10_238 -> m10_291  [key=2, style=dotted];
m10_238 -> m10_240  [key=1, style=dashed, color=darkseagreen4, label=targetObject];
m10_238 -> m10_241  [key=1, style=dashed, color=darkseagreen4, label=targetObject];
m10_241 -> m10_284  [key=0, style=solid];
m10_241 -> m10_42  [key=2, style=dotted];
m10_243 -> m10_244  [key=0, style=solid];
m10_243 -> m10_248  [key=1, style=dashed, color=darkseagreen4, label=primitiveContract];
m10_244 -> m10_245  [key=0, style=solid];
m10_244 -> m10_281  [key=0, style=solid];
m10_244 -> m10_38  [key=2, style=dotted];
m10_244 -> m10_39  [key=2, style=dotted];
m10_245 -> m10_246  [key=0, style=solid];
m10_245 -> m10_37  [key=2, style=dotted];
m10_246 -> m10_247  [key=0, style=solid];
m10_246 -> m10_248  [key=0, style=solid];
m10_247 -> m10_284  [key=0, style=solid];
m10_247 -> m10_33  [key=2, style=dotted];
m10_248 -> m10_249  [key=0, style=solid];
m10_248 -> m10_77  [key=2, style=dotted];
m10_248 -> m10_250  [key=1, style=dashed, color=darkseagreen4, label=value];
m10_249 -> m10_250  [key=0, style=solid];
m10_249 -> m10_37  [key=2, style=dotted];
m10_252 -> m10_253  [key=0, style=solid];
m10_252 -> m10_256  [key=1, style=dashed, color=darkseagreen4, label=dictionaryContract];
m10_252 -> m10_264  [key=1, style=dashed, color=darkseagreen4, label=dictionaryContract];
m10_252 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label=dictionaryContract];
m10_252 -> m10_268  [key=1, style=dashed, color=darkseagreen4, label=dictionaryContract];
m10_252 -> m10_273  [key=1, style=dashed, color=darkseagreen4, label=dictionaryContract];
m10_254 -> m10_255  [key=0, style=solid];
m10_254 -> m10_273  [key=0, style=solid];
m10_256 -> m10_257  [key=0, style=solid];
m10_256 -> m10_292  [key=2, style=dotted];
m10_256 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m10_256 -> m10_267  [key=1, style=dashed, color=darkseagreen4, label=createdFromNonDefaultCreator];
m10_256 -> m10_269  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m10_256 -> m10_270  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m10_256 -> m10_271  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m10_256 -> m10_272  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m10_259 -> m10_284  [key=0, style=solid];
m10_259 -> m10_36  [key=2, style=dotted];
m10_259 -> m10_33  [key=2, style=dotted];
m10_260 -> m10_261  [key=0, style=solid];
m10_260 -> m10_262  [key=0, style=solid];
m10_261 -> m10_284  [key=0, style=solid];
m10_261 -> m10_36  [key=2, style=dotted];
m10_261 -> m10_33  [key=2, style=dotted];
m10_262 -> m10_263  [key=0, style=solid];
m10_262 -> m10_264  [key=0, style=solid];
m10_263 -> m10_284  [key=0, style=solid];
m10_263 -> m10_36  [key=2, style=dotted];
m10_263 -> m10_33  [key=2, style=dotted];
m10_265 -> m10_284  [key=0, style=solid];
m10_265 -> m10_36  [key=2, style=dotted];
m10_265 -> m10_33  [key=2, style=dotted];
m10_266 -> m10_267  [key=0, style=solid];
m10_266 -> m10_41  [key=2, style=dotted];
m10_273 -> m10_274  [key=0, style=solid];
m10_273 -> m10_40  [key=2, style=dotted];
m10_273 -> m10_41  [key=2, style=dotted];
m10_276 -> m10_277  [key=0, style=solid];
m10_277 -> m10_284  [key=0, style=solid];
m10_277 -> m10_294  [key=2, style=dotted];
m10_279 -> m10_280  [key=0, style=solid];
m10_280 -> m10_284  [key=0, style=solid];
m10_280 -> m10_295  [key=2, style=dotted];
m10_282 -> m10_283  [key=0, style=solid];
m10_282 -> m10_170  [key=2, style=dotted];
m10_282 -> m10_296  [key=2, style=dotted];
m10_282 -> m10_282  [key=1, style=dashed, color=darkseagreen4, label=message];
m10_283 -> m10_284  [key=0, style=solid];
m10_283 -> m10_33  [key=2, style=dotted];
m10_206 -> m10_207  [key=0, style=solid];
m10_206 -> m10_209  [key=0, style=solid];
m10_209 -> m10_210  [key=0, style=solid];
m10_209 -> m10_225  [key=0, style=solid];
m10_208 -> m10_229  [key=0, style=solid];
m10_208 -> m10_238  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_208 -> m10_241  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_208 -> m10_258  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_208 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_208 -> m10_273  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_208 -> m10_277  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_208 -> m10_280  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_211 -> m10_212  [key=0, style=solid];
m10_211 -> m10_222  [key=0, style=solid];
m10_222 -> m10_223  [key=0, style=solid];
m10_213 -> m10_214  [key=0, style=solid];
m10_213 -> m10_286  [key=2, style=dotted];
m10_213 -> m10_215  [key=1, style=dashed, color=darkseagreen4, label=tokenReader];
m10_213 -> m10_216  [key=1, style=dashed, color=darkseagreen4, label=tokenReader];
m10_213 -> m10_217  [key=1, style=dashed, color=darkseagreen4, label=tokenReader];
m10_213 -> m10_218  [key=1, style=dashed, color=darkseagreen4, label=tokenReader];
m10_213 -> m10_219  [key=1, style=dashed, color=darkseagreen4, label=tokenReader];
m10_213 -> m10_220  [key=1, style=dashed, color=darkseagreen4, label=tokenReader];
m10_213 -> m10_221  [key=1, style=dashed, color=darkseagreen4, label=tokenReader];
m10_213 -> m10_223  [key=1, style=dashed, color=darkseagreen4, label=tokenReader];
m10_220 -> m10_221  [key=0, style=solid];
m10_220 -> m10_37  [key=2, style=dotted];
m10_221 -> m10_222  [key=0, style=solid];
m10_221 -> m10_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_244  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_261  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_263  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_273  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_277  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_280  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_221 -> m10_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_224 -> m10_284  [key=0, style=solid];
m10_258 -> m10_259  [key=0, style=solid];
m10_258 -> m10_260  [key=0, style=solid];
m10_226 -> m10_227  [key=0, style=solid];
m10_228 -> m10_284  [key=0, style=solid];
m10_232 -> m10_233  [key=0, style=solid];
m10_242 -> m10_243  [key=0, style=solid];
m10_251 -> m10_252  [key=0, style=solid];
m10_275 -> m10_276  [key=0, style=solid];
m10_278 -> m10_279  [key=0, style=solid];
m10_233 -> m10_234  [key=0, style=solid];
m10_233 -> m10_239  [key=1, style=dashed, color=darkseagreen4, label=createdFromNonDefaultCreator];
m10_233 -> m10_67  [key=3, color=darkorchid, style=bold, label="Local variable bool createdFromNonDefaultCreator"];
m10_239 -> m10_240  [key=0, style=solid];
m10_239 -> m10_241  [key=0, style=solid];
m10_235 -> m10_236  [key=0, style=solid];
m10_235 -> m10_161  [key=3, color=darkorchid, style=bold, label="Local variable object targetObject"];
m10_235 -> m10_291  [key=3, color=darkorchid, style=bold, label="Local variable object targetObject"];
m10_240 -> m10_284  [key=0, style=solid];
m10_281 -> m10_282  [key=0, style=solid];
m10_250 -> m10_284  [key=0, style=solid];
m10_253 -> m10_254  [key=0, style=solid];
m10_253 -> m10_256  [key=3, color=darkorchid, style=bold, label="Local variable object targetDictionary"];
m10_253 -> m10_41  [key=3, color=darkorchid, style=bold, label="Local variable object targetDictionary"];
m10_264 -> m10_265  [key=0, style=solid];
m10_264 -> m10_266  [key=0, style=solid];
m10_268 -> m10_269  [key=0, style=solid];
m10_255 -> m10_256  [key=0, style=solid];
m10_257 -> m10_258  [key=0, style=solid];
m10_257 -> m10_266  [key=0, style=solid];
m10_267 -> m10_268  [key=0, style=solid];
m10_267 -> m10_270  [key=0, style=solid];
m10_269 -> m10_284  [key=0, style=solid];
m10_269 -> m10_293  [key=2, style=dotted];
m10_270 -> m10_271  [key=0, style=solid];
m10_270 -> m10_272  [key=0, style=solid];
m10_271 -> m10_284  [key=0, style=solid];
m10_272 -> m10_274  [key=0, style=solid];
m10_274 -> m10_284  [key=0, style=solid];
m10_284 -> m10_161  [key=0, style=bold, color=blue];
m10_704 -> m10_765  [key=0, style=solid];
m10_704 -> m10_767  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_704 -> m10_768  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_704 -> m10_41  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_704 -> m10_468  [key=3, color=darkorchid, style=bold, label="Parameter variable object currentObject"];
m10_704 -> m10_35  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_704 -> m10_295  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_704 -> m10_294  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_704 -> m10_42  [key=3, color=darkorchid, style=bold, label="Parameter variable object currentObject"];
m10_704 -> m10_649  [key=3, color=darkorchid, style=bold, label="Parameter variable object currentObject"];
m10_704 -> m10_772  [key=3, color=darkorchid, style=bold, label="Parameter variable object currentObject"];
m10_704 -> m10_816  [key=3, color=darkorchid, style=bold, label="Parameter variable object currentObject"];
m10_704 -> m10_854  [key=3, color=darkorchid, style=bold, label="Parameter variable object currentObject"];
m10_704 -> m10_119  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
m10_704 -> m10_754  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
m10_765 -> m10_770  [key=0, style=solid];
m10_765 -> m10_33  [key=2, style=dotted];
m10_767 -> m10_768  [key=0, style=solid];
m10_767 -> m10_769  [key=0, style=solid];
m10_767 -> m10_79  [key=2, style=dotted];
m10_768 -> m10_770  [key=0, style=solid];
m10_768 -> m10_80  [key=2, style=dotted];
m10_766 -> m10_767  [key=0, style=solid];
m10_769 -> m10_770  [key=0, style=solid];
m10_770 -> m10_704  [key=0, style=bold, color=blue];
m10_504 -> m10_505  [key=0, style=solid];
m10_504 -> m10_509  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_504 -> m10_513  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_504 -> m10_514  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_504 -> m10_515  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_504 -> m10_516  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_504 -> m10_517  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_504 -> m10_518  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_504 -> m10_519  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_504 -> m10_521  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_504 -> m10_522  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_504 -> m10_67  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetPropertyValue"];
m10_504 -> m10_690  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetPropertyValue"];
m10_504 -> m10_506  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetPropertyValue"];
m10_504 -> m10_870  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property"];
m10_504 -> m10_1099  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property"];
m10_504 -> m10_874  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter propertyConverter"];
m10_504 -> m10_1113  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter propertyConverter"];
m10_504 -> m10_12  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContainerContract containerContract"];
m10_504 -> m10_42  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m10_504 -> m10_294  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_504 -> m10_854  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m10_505 -> m10_506  [key=0, style=solid];
m10_509 -> m10_510  [key=0, style=solid];
m10_509 -> m10_511  [key=0, style=solid];
m10_509 -> m10_526  [key=2, style=dotted];
m10_509 -> m10_509  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonConverter"];
m10_509 -> m10_512  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonConverter"];
m10_509 -> m10_513  [key=1, style=dashed, color=darkseagreen4, label=gottenCurrentValue];
m10_509 -> m10_515  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonConverter"];
m10_509 -> m10_516  [key=1, style=dashed, color=darkseagreen4, label=currentValue];
m10_509 -> m10_517  [key=1, style=dashed, color=darkseagreen4, label=currentValue];
m10_509 -> m10_524  [key=1, style=dashed, color=darkseagreen4, label=useExistingValue];
m10_513 -> m10_514  [key=0, style=solid];
m10_513 -> m10_515  [key=0, style=solid];
m10_514 -> m10_515  [key=0, style=solid];
m10_514 -> m10_527  [key=2, style=dotted];
m10_514 -> m10_517  [key=1, style=dashed, color=darkseagreen4, label=currentValue];
m10_515 -> m10_517  [key=0, style=solid];
m10_515 -> m10_76  [key=2, style=dotted];
m10_515 -> m10_518  [key=1, style=dashed, color=darkseagreen4, label=value];
m10_516 -> m10_517  [key=0, style=solid];
m10_516 -> m10_77  [key=2, style=dotted];
m10_516 -> m10_518  [key=1, style=dashed, color=darkseagreen4, label=value];
m10_517 -> m10_518  [key=0, style=solid];
m10_517 -> m10_524  [key=0, style=solid];
m10_517 -> m10_528  [key=2, style=dotted];
m10_518 -> m10_519  [key=0, style=solid];
m10_518 -> m10_529  [key=2, style=dotted];
m10_519 -> m10_520  [key=0, style=solid];
m10_519 -> m10_523  [key=0, style=solid];
m10_521 -> m10_522  [key=0, style=solid];
m10_521 -> m10_296  [key=2, style=dotted];
m10_521 -> m10_351  [key=2, style=dotted];
m10_521 -> m10_352  [key=2, style=dotted];
m10_522 -> m10_523  [key=0, style=solid];
m10_522 -> m10_530  [key=2, style=dotted];
m10_506 -> m10_507  [key=0, style=solid];
m10_507 -> m10_508  [key=0, style=solid];
m10_508 -> m10_509  [key=0, style=solid];
m10_510 -> m10_525  [key=0, style=solid];
m10_511 -> m10_512  [key=0, style=solid];
m10_511 -> m10_76  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m10_511 -> m10_77  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m10_512 -> m10_513  [key=0, style=solid];
m10_512 -> m10_516  [key=0, style=solid];
m10_524 -> m10_525  [key=0, style=solid];
m10_520 -> m10_521  [key=0, style=solid];
m10_520 -> m10_522  [key=0, style=solid];
m10_523 -> m10_525  [key=0, style=solid];
m10_525 -> m10_504  [key=0, style=bold, color=blue];
m10_42 -> m10_1089  [key=0, style=solid];
m10_42 -> m10_1090  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_42 -> m10_1091  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_42 -> m10_1092  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_42 -> m10_1093  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_42 -> m10_1095  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_42 -> m10_1097  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_42 -> m10_1098  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_42 -> m10_1099  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_42 -> m10_1102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_42 -> m10_1104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_42 -> m10_1105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_42 -> m10_1106  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_42 -> m10_1107  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_42 -> m10_1108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_42 -> m10_1109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_42 -> m10_1110  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_42 -> m10_1113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_42 -> m10_1114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_42 -> m10_1115  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_42 -> m10_1116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_42 -> m10_1117  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_42 -> m10_1118  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_42 -> m10_1120  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_42 -> m10_1121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_42 -> m10_1126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_42 -> m10_1127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_42 -> m10_1129  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_42 -> m10_1134  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_42 -> m10_1135  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_42 -> m10_1136  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_42 -> m10_2  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_42 -> m10_235  [key=3, color=darkorchid, style=bold, label="Parameter variable object newObject"];
m10_42 -> m10_161  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member"];
m10_42 -> m10_5  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract"];
m10_42 -> m10_234  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract"];
m10_42 -> m10_12  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member"];
m10_42 -> m10_16  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_42 -> m10_204  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_42 -> m10_42  [key=3, color=darkorchid, style=bold, label="method methodReturn object PopulateObject"];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_33 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m10_36 -> m10_35  [key=0, style=solid];
m10_36 -> m10_41  [key=2, style=dotted];
m10_354 -> m10_397  [key=0, style=solid];
m10_354 -> m10_401  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_354 -> m10_405  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_354 -> m10_407  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_354 -> m10_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_354 -> m10_410  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m10_354 -> m10_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_354 -> m10_414  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m10_354 -> m10_323  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_354 -> m10_288  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember"];
m10_354 -> m10_287  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember"];
m10_354 -> m10_402  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m10_354 -> m10_43  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_354 -> m10_322  [key=3, color=darkorchid, style=bold, label="Parameter variable string qualifiedTypeName"];
m10_354 -> m10_378  [key=3, color=darkorchid, style=bold, label="Parameter variable string qualifiedTypeName"];
m10_397 -> m10_398  [key=0, style=solid];
m10_401 -> m10_402  [key=0, style=solid];
m10_401 -> m10_415  [key=2, style=dotted];
m10_401 -> m10_403  [key=1, style=dashed, color=darkseagreen4, label=typeName];
m10_405 -> m10_414  [key=0, style=solid];
m10_405 -> m10_36  [key=2, style=dotted];
m10_405 -> m10_417  [key=2, style=dotted];
m10_407 -> m10_414  [key=0, style=solid];
m10_407 -> m10_36  [key=2, style=dotted];
m10_407 -> m10_33  [key=2, style=dotted];
m10_409 -> m10_410  [key=0, style=solid];
m10_409 -> m10_296  [key=2, style=dotted];
m10_409 -> m10_351  [key=2, style=dotted];
m10_409 -> m10_352  [key=2, style=dotted];
m10_410 -> m10_411  [key=0, style=solid];
m10_410 -> m10_412  [key=0, style=solid];
m10_410 -> m10_290  [key=2, style=dotted];
m10_411 -> m10_414  [key=0, style=solid];
m10_411 -> m10_296  [key=2, style=dotted];
m10_411 -> m10_33  [key=2, style=dotted];
m10_398 -> m10_399  [key=0, style=solid];
m10_398 -> m10_414  [key=0, style=solid];
m10_399 -> m10_400  [key=0, style=solid];
m10_400 -> m10_401  [key=0, style=solid];
m10_402 -> m10_403  [key=0, style=solid];
m10_403 -> m10_404  [key=0, style=solid];
m10_403 -> m10_406  [key=0, style=solid];
m10_403 -> m10_416  [key=2, style=dotted];
m10_403 -> m10_409  [key=1, style=dashed, color=darkseagreen4, label=specifiedType];
m10_403 -> m10_410  [key=1, style=dashed, color=darkseagreen4, label=specifiedType];
m10_403 -> m10_411  [key=1, style=dashed, color=darkseagreen4, label=specifiedType];
m10_403 -> m10_412  [key=1, style=dashed, color=darkseagreen4, label=specifiedType];
m10_403 -> m10_413  [key=1, style=dashed, color=darkseagreen4, label=specifiedType];
m10_404 -> m10_405  [key=0, style=solid];
m10_406 -> m10_407  [key=0, style=solid];
m10_406 -> m10_408  [key=0, style=solid];
m10_412 -> m10_413  [key=0, style=solid];
m10_412 -> m10_414  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m10_413 -> m10_414  [key=0, style=solid];
m10_413 -> m10_43  [key=2, style=dotted];
m10_408 -> m10_409  [key=0, style=solid];
m10_408 -> m10_410  [key=0, style=solid];
m10_414 -> m10_354  [key=0, style=bold, color=blue];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_20 -> m10_37  [key=2, style=dotted];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_24  [key=2, style=dotted];
m10_22 -> m10_23  [key=0, style=solid];
m10_23 -> m10_20  [key=0, style=bold, color=blue];
m10_23 -> m10_28  [key=0, style=solid];
m10_23 -> m10_40  [key=2, style=dotted];
m10_23 -> m10_41  [key=2, style=dotted];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_39  [key=2, style=dotted];
m10_636 -> m10_637  [key=0, style=solid];
m10_636 -> m10_638  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_636 -> m10_639  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_636 -> m10_41  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_636 -> m10_468  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_636 -> m10_35  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_636 -> m10_295  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_636 -> m10_294  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_636 -> m10_900  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_636 -> m10_42  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_636 -> m10_649  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_636 -> m10_772  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_636 -> m10_833  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_636 -> m10_854  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_636 -> m10_937  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_637 -> m10_638  [key=0, style=solid];
m10_637 -> m10_639  [key=0, style=solid];
m10_638 -> m10_639  [key=0, style=solid];
m10_638 -> m10_36  [key=2, style=dotted];
m10_638 -> m10_351  [key=2, style=dotted];
m10_638 -> m10_352  [key=2, style=dotted];
m10_639 -> m10_640  [key=0, style=solid];
m10_639 -> m10_641  [key=2, style=dotted];
m10_640 -> m10_636  [key=0, style=bold, color=blue];
m10_32 -> m10_30  [key=0, style=bold, color=blue];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_26  [key=0, style=solid];
m10_162 -> m10_431  [key=0, style=solid];
m10_162 -> m10_432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_162 -> m10_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_162 -> m10_434  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_162 -> m10_435  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_162 -> m10_437  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_162 -> m10_439  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_162 -> m10_440  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_162 -> m10_441  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_162 -> m10_442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_162 -> m10_443  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_162 -> m10_444  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_162 -> m10_446  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_162 -> m10_448  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_162 -> m10_449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_162 -> m10_452  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m10_162 -> m10_463  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_162 -> m10_464  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_162 -> m10_77  [key=3, color=darkorchid, style=bold, label="Parameter variable object existingValue"];
m10_162 -> m10_340  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_162 -> m10_288  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_162 -> m10_287  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_162 -> m10_12  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_162 -> m10_88  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateList"];
m10_431 -> m10_432  [key=0, style=solid];
m10_431 -> m10_437  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m10_431 -> m10_35  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m10_432 -> m10_433  [key=0, style=solid];
m10_432 -> m10_434  [key=0, style=solid];
m10_432 -> m10_289  [key=2, style=dotted];
m10_433 -> m10_466  [key=0, style=solid];
m10_433 -> m10_88  [key=2, style=dotted];
m10_434 -> m10_435  [key=0, style=solid];
m10_434 -> m10_418  [key=2, style=dotted];
m10_434 -> m10_437  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m10_434 -> m10_445  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m10_434 -> m10_447  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m10_434 -> m10_448  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m10_434 -> m10_449  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m10_434 -> m10_451  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m10_434 -> m10_452  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m10_434 -> m10_453  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m10_434 -> m10_454  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m10_434 -> m10_457  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m10_434 -> m10_462  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m10_434 -> m10_464  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m10_435 -> m10_436  [key=0, style=solid];
m10_435 -> m10_462  [key=0, style=solid];
m10_437 -> m10_438  [key=0, style=solid];
m10_437 -> m10_467  [key=2, style=dotted];
m10_437 -> m10_448  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_437 -> m10_449  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_437 -> m10_450  [key=1, style=dashed, color=darkseagreen4, label=createdFromNonDefaultCreator];
m10_437 -> m10_452  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_437 -> m10_454  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_437 -> m10_455  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_437 -> m10_458  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_437 -> m10_459  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_437 -> m10_460  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_437 -> m10_461  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_439 -> m10_440  [key=0, style=solid];
m10_439 -> m10_441  [key=0, style=solid];
m10_440 -> m10_466  [key=0, style=solid];
m10_440 -> m10_36  [key=2, style=dotted];
m10_440 -> m10_33  [key=2, style=dotted];
m10_441 -> m10_442  [key=0, style=solid];
m10_441 -> m10_443  [key=0, style=solid];
m10_442 -> m10_466  [key=0, style=solid];
m10_442 -> m10_36  [key=2, style=dotted];
m10_442 -> m10_33  [key=2, style=dotted];
m10_443 -> m10_444  [key=0, style=solid];
m10_443 -> m10_445  [key=0, style=solid];
m10_444 -> m10_466  [key=0, style=solid];
m10_444 -> m10_36  [key=2, style=dotted];
m10_444 -> m10_33  [key=2, style=dotted];
m10_446 -> m10_466  [key=0, style=solid];
m10_446 -> m10_36  [key=2, style=dotted];
m10_446 -> m10_33  [key=2, style=dotted];
m10_448 -> m10_450  [key=0, style=solid];
m10_448 -> m10_35  [key=2, style=dotted];
m10_449 -> m10_450  [key=0, style=solid];
m10_449 -> m10_468  [key=2, style=dotted];
m10_452 -> m10_461  [key=0, style=solid];
m10_452 -> m10_469  [key=2, style=dotted];
m10_452 -> m10_470  [key=2, style=dotted];
m10_452 -> m10_452  [key=1, style=dashed, color=darkseagreen4, label=list];
m10_463 -> m10_466  [key=0, style=solid];
m10_463 -> m10_36  [key=2, style=dotted];
m10_463 -> m10_33  [key=2, style=dotted];
m10_464 -> m10_465  [key=0, style=solid];
m10_464 -> m10_34  [key=2, style=dotted];
m10_464 -> m10_35  [key=2, style=dotted];
m10_445 -> m10_446  [key=0, style=solid];
m10_445 -> m10_447  [key=0, style=solid];
m10_447 -> m10_448  [key=0, style=solid];
m10_447 -> m10_449  [key=0, style=solid];
m10_451 -> m10_452  [key=0, style=solid];
m10_451 -> m10_453  [key=0, style=solid];
m10_453 -> m10_454  [key=0, style=solid];
m10_453 -> m10_457  [key=0, style=solid];
m10_454 -> m10_455  [key=0, style=solid];
m10_454 -> m10_471  [key=2, style=dotted];
m10_454 -> m10_456  [key=1, style=dashed, color=darkseagreen4, label=a];
m10_457 -> m10_458  [key=0, style=solid];
m10_462 -> m10_463  [key=0, style=solid];
m10_462 -> m10_464  [key=0, style=solid];
m10_436 -> m10_437  [key=0, style=solid];
m10_438 -> m10_439  [key=0, style=solid];
m10_438 -> m10_447  [key=0, style=solid];
m10_450 -> m10_451  [key=0, style=solid];
m10_450 -> m10_459  [key=0, style=solid];
m10_455 -> m10_456  [key=0, style=solid];
m10_455 -> m10_472  [key=2, style=dotted];
m10_458 -> m10_466  [key=0, style=solid];
m10_458 -> m10_293  [key=2, style=dotted];
m10_459 -> m10_460  [key=0, style=solid];
m10_459 -> m10_461  [key=0, style=solid];
m10_460 -> m10_466  [key=0, style=solid];
m10_461 -> m10_465  [key=0, style=solid];
m10_456 -> m10_461  [key=0, style=solid];
m10_465 -> m10_466  [key=0, style=solid];
m10_466 -> m10_162  [key=0, style=bold, color=blue];
m10_289 -> m10_473  [key=0, style=solid];
m10_289 -> m10_161  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_289 -> m10_162  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_473 -> m10_474  [key=0, style=solid];
m10_474 -> m10_289  [key=0, style=bold, color=blue];
m10_528 -> m10_576  [key=0, style=solid];
m10_528 -> m10_578  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_528 -> m10_580  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_528 -> m10_504  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property"];
m10_528 -> m10_943  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property"];
m10_528 -> m10_511  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_528 -> m10_944  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m10_528 -> m10_67  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldSetPropertyValue"];
m10_528 -> m10_690  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldSetPropertyValue"];
m10_576 -> m10_577  [key=0, style=solid];
m10_576 -> m10_578  [key=0, style=solid];
m10_576 -> m10_560  [key=2, style=dotted];
m10_578 -> m10_579  [key=0, style=solid];
m10_578 -> m10_580  [key=0, style=solid];
m10_578 -> m10_560  [key=2, style=dotted];
m10_578 -> m10_562  [key=2, style=dotted];
m10_578 -> m10_564  [key=2, style=dotted];
m10_578 -> m10_565  [key=2, style=dotted];
m10_580 -> m10_581  [key=0, style=solid];
m10_580 -> m10_582  [key=0, style=solid];
m10_577 -> m10_583  [key=0, style=solid];
m10_579 -> m10_583  [key=0, style=solid];
m10_581 -> m10_583  [key=0, style=solid];
m10_582 -> m10_583  [key=0, style=solid];
m10_583 -> m10_528  [key=0, style=bold, color=blue];
m10_0 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JsonMergeSettings"];
m10_0 -> m10_1  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_31  [key=2, style=dotted];
m10_5 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label=contract];
m10_5 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label=contract];
m10_5 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label=contract];
m10_5 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label=contract];
m10_5 -> m10_24  [key=1, style=dashed, color=darkseagreen4, label=contract];
m10_5 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label=contract];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_8  [key=2, style=dotted];
m10_6 -> m10_9  [key=0, style=solid];
m10_1 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label=c];
m10_1 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label=c];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label=c];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_6  [key=0, style=solid];
m10_4 -> m10_30  [key=2, style=dotted];
m10_4 -> m10_13  [key=1, style=dashed, color=darkseagreen4, label=objectType];
m10_4 -> m10_26  [key=1, style=dashed, color=darkseagreen4, label=objectType];
m10_2 -> m10_4  [key=0, style=solid];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_2 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_2 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_2 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_2 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_2 -> m10_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_2 -> m10_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_2 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_2 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_2 -> m10_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_2 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_2 -> m10_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_2 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_2 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_2 -> m10_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_2 -> m10_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_3 -> m10_7  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_29  [key=2, style=dotted];
m10_7 -> m10_0  [key=0, style=bold, color=blue];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_6  [key=0, style=solid];
m10_7 -> m10_32  [key=2, style=dotted];
m10_292 -> m10_613  [key=0, style=solid];
m10_292 -> m10_614  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m10_292 -> m10_616  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m10_292 -> m10_618  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m10_292 -> m10_619  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m10_292 -> m10_621  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m10_292 -> m10_622  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m10_292 -> m10_623  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m10_292 -> m10_624  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m10_292 -> m10_625  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m10_292 -> m10_628  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m10_292 -> m10_630  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m10_292 -> m10_631  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m10_292 -> m10_632  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_292 -> m10_633  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_292 -> m10_161  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_292 -> m10_252  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonDictionaryContract contract"];
m10_292 -> m10_255  [key=3, color=darkorchid, style=bold, label="Parameter variable bool createdFromNonDefaultCreator"];
m10_613 -> m10_614  [key=0, style=solid];
m10_613 -> m10_619  [key=0, style=solid];
m10_614 -> m10_615  [key=0, style=solid];
m10_614 -> m10_617  [key=0, style=solid];
m10_616 -> m10_634  [key=0, style=solid];
m10_616 -> m10_635  [key=2, style=dotted];
m10_618 -> m10_634  [key=0, style=solid];
m10_618 -> m10_293  [key=2, style=dotted];
m10_619 -> m10_620  [key=0, style=solid];
m10_619 -> m10_622  [key=0, style=solid];
m10_621 -> m10_634  [key=0, style=solid];
m10_621 -> m10_635  [key=2, style=dotted];
m10_622 -> m10_623  [key=0, style=solid];
m10_622 -> m10_628  [key=0, style=solid];
m10_623 -> m10_624  [key=0, style=solid];
m10_623 -> m10_612  [key=2, style=dotted];
m10_623 -> m10_625  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m10_623 -> m10_627  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m10_624 -> m10_625  [key=0, style=solid];
m10_624 -> m10_626  [key=0, style=solid];
m10_625 -> m10_626  [key=0, style=solid];
m10_625 -> m10_40  [key=2, style=dotted];
m10_625 -> m10_625  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m10_625 -> m10_627  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m10_628 -> m10_629  [key=0, style=solid];
m10_628 -> m10_631  [key=0, style=solid];
m10_630 -> m10_634  [key=0, style=solid];
m10_630 -> m10_635  [key=2, style=dotted];
m10_631 -> m10_632  [key=0, style=solid];
m10_631 -> m10_633  [key=0, style=solid];
m10_632 -> m10_634  [key=0, style=solid];
m10_632 -> m10_36  [key=2, style=dotted];
m10_632 -> m10_33  [key=2, style=dotted];
m10_633 -> m10_634  [key=0, style=solid];
m10_633 -> m10_36  [key=2, style=dotted];
m10_633 -> m10_33  [key=2, style=dotted];
m10_615 -> m10_616  [key=0, style=solid];
m10_615 -> m10_634  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_617 -> m10_618  [key=0, style=solid];
m10_617 -> m10_634  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_620 -> m10_621  [key=0, style=solid];
m10_620 -> m10_634  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_627 -> m10_634  [key=0, style=solid];
m10_626 -> m10_627  [key=0, style=solid];
m10_626 -> m10_634  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_629 -> m10_630  [key=0, style=solid];
m10_629 -> m10_634  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_634 -> m10_292  [key=0, style=bold, color=blue];
m10_291 -> m10_1071  [key=0, style=solid];
m10_291 -> m10_1072  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_291 -> m10_1073  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_291 -> m10_1075  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_291 -> m10_1076  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_291 -> m10_1077  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_291 -> m10_1078  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_291 -> m10_1079  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_291 -> m10_1081  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_291 -> m10_1083  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_291 -> m10_1084  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_291 -> m10_1085  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_291 -> m10_161  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty"];
m10_291 -> m10_234  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract objectContract"];
m10_291 -> m10_204  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_291 -> m10_233  [key=3, color=darkorchid, style=bold, label="Parameter variable bool createdFromNonDefaultCreator"];
m10_291 -> m10_900  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateNewObject"];
m10_1071 -> m10_1072  [key=0, style=solid];
m10_1071 -> m10_1082  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_1071 -> m10_1087  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_1071 -> m10_12  [key=3, color=darkorchid, style=bold, label="Local variable object newObject"];
m10_1072 -> m10_1073  [key=0, style=solid];
m10_1072 -> m10_1077  [key=0, style=solid];
m10_1073 -> m10_1074  [key=0, style=solid];
m10_1073 -> m10_1076  [key=0, style=solid];
m10_1075 -> m10_1088  [key=0, style=solid];
m10_1075 -> m10_900  [key=2, style=dotted];
m10_1076 -> m10_1082  [key=0, style=solid];
m10_1076 -> m10_293  [key=2, style=dotted];
m10_1076 -> m10_1087  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_1077 -> m10_1078  [key=0, style=solid];
m10_1077 -> m10_1079  [key=0, style=solid];
m10_1078 -> m10_1082  [key=0, style=solid];
m10_1078 -> m10_612  [key=2, style=dotted];
m10_1078 -> m10_1087  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m10_1079 -> m10_1080  [key=0, style=solid];
m10_1079 -> m10_1082  [key=0, style=solid];
m10_1081 -> m10_1088  [key=0, style=solid];
m10_1081 -> m10_900  [key=2, style=dotted];
m10_1083 -> m10_1084  [key=0, style=solid];
m10_1083 -> m10_1085  [key=0, style=solid];
m10_1084 -> m10_1088  [key=0, style=solid];
m10_1084 -> m10_36  [key=2, style=dotted];
m10_1084 -> m10_33  [key=2, style=dotted];
m10_1085 -> m10_1088  [key=0, style=solid];
m10_1085 -> m10_36  [key=2, style=dotted];
m10_1085 -> m10_33  [key=2, style=dotted];
m10_1082 -> m10_1083  [key=0, style=solid];
m10_1082 -> m10_1086  [key=0, style=solid];
m10_1087 -> m10_1088  [key=0, style=solid];
m10_1074 -> m10_1075  [key=0, style=solid];
m10_1080 -> m10_1081  [key=0, style=solid];
m10_1086 -> m10_1087  [key=0, style=solid];
m10_1086 -> m10_1088  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_1088 -> m10_291  [key=0, style=bold, color=blue];
m10_1145 -> m10_1146  [key=0, style=solid];
m10_990 -> m10_991  [key=0, style=solid];
m10_994 -> m10_995  [key=0, style=solid];
m10_993 -> m10_994  [key=0, style=solid];
m10_996 -> m10_997  [key=0, style=solid];
m10_991 -> m10_992  [key=0, style=solid];
m10_992 -> m10_990  [key=0, style=bold, color=blue];
m10_995 -> m10_993  [key=0, style=bold, color=blue];
m10_997 -> m10_998  [key=0, style=solid];
m10_998 -> m10_996  [key=0, style=bold, color=blue];
m10_1142 -> m10_1143  [key=0, style=solid];
m10_1143 -> m10_1144  [key=0, style=solid];
m10_1144 -> m10_1142  [key=0, style=bold, color=blue];
m10_1146 -> m10_1147  [key=0, style=solid];
m10_1147 -> m10_1145  [key=0, style=bold, color=blue];
m10_30 -> m10_31  [key=0, style=solid];
m10_981 -> m10_1007  [key=0, style=solid];
m10_981 -> m10_1009  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_981 -> m10_1011  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_981 -> m10_1012  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_981 -> m10_1018  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_981 -> m10_1019  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_981 -> m10_1020  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_981 -> m10_1022  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_981 -> m10_1023  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_981 -> m10_1024  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_981 -> m10_1025  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_981 -> m10_1027  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_981 -> m10_1029  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_981 -> m10_1030  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_981 -> m10_1031  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_981 -> m10_1032  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_981 -> m10_1036  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_981 -> m10_1037  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_981 -> m10_900  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_981 -> m10_903  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m10_1007 -> m10_1008  [key=0, style=solid];
m10_1007 -> m10_764  [key=2, style=dotted];
m10_1007 -> m10_1013  [key=1, style=dashed, color=darkseagreen4, label=propertyValues];
m10_1007 -> m10_1038  [key=1, style=dashed, color=darkseagreen4, label=propertyValues];
m10_1009 -> m10_1010  [key=0, style=solid];
m10_1009 -> m10_1033  [key=0, style=solid];
m10_1009 -> m10_1034  [key=0, style=solid];
m10_1009 -> m10_1036  [key=0, style=solid];
m10_1011 -> m10_1012  [key=0, style=solid];
m10_1011 -> m10_38  [key=2, style=dotted];
m10_1011 -> m10_1020  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_1011 -> m10_1025  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_1011 -> m10_1027  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_1011 -> m10_1029  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_1012 -> m10_1013  [key=0, style=solid];
m10_1012 -> m10_983  [key=2, style=dotted];
m10_1012 -> m10_38  [key=2, style=dotted];
m10_1012 -> m10_898  [key=2, style=dotted];
m10_1012 -> m10_1014  [key=1, style=dashed, color=darkseagreen4, label=creatorPropertyContext];
m10_1012 -> m10_1022  [key=1, style=dashed, color=darkseagreen4, label=creatorPropertyContext];
m10_1012 -> m10_1023  [key=1, style=dashed, color=darkseagreen4, label=creatorPropertyContext];
m10_1012 -> m10_1031  [key=1, style=dashed, color=darkseagreen4, label=creatorPropertyContext];
m10_1018 -> m10_1019  [key=0, style=solid];
m10_1018 -> m10_74  [key=2, style=dotted];
m10_1018 -> m10_1021  [key=1, style=dashed, color=darkseagreen4, label=propertyConverter];
m10_1018 -> m10_1022  [key=1, style=dashed, color=darkseagreen4, label=propertyConverter];
m10_1019 -> m10_1020  [key=0, style=solid];
m10_1019 -> m10_1021  [key=0, style=solid];
m10_1019 -> m10_75  [key=2, style=dotted];
m10_1020 -> m10_1039  [key=0, style=solid];
m10_1020 -> m10_36  [key=2, style=dotted];
m10_1020 -> m10_33  [key=2, style=dotted];
m10_1022 -> m10_1037  [key=0, style=solid];
m10_1022 -> m10_76  [key=2, style=dotted];
m10_1023 -> m10_1037  [key=0, style=solid];
m10_1023 -> m10_77  [key=2, style=dotted];
m10_1024 -> m10_1025  [key=0, style=solid];
m10_1024 -> m10_1026  [key=0, style=solid];
m10_1024 -> m10_32  [key=2, style=dotted];
m10_1025 -> m10_1039  [key=0, style=solid];
m10_1025 -> m10_36  [key=2, style=dotted];
m10_1025 -> m10_33  [key=2, style=dotted];
m10_1027 -> m10_1028  [key=0, style=solid];
m10_1027 -> m10_296  [key=2, style=dotted];
m10_1027 -> m10_351  [key=2, style=dotted];
m10_1027 -> m10_352  [key=2, style=dotted];
m10_1029 -> m10_1039  [key=0, style=solid];
m10_1029 -> m10_296  [key=2, style=dotted];
m10_1029 -> m10_33  [key=2, style=dotted];
m10_1030 -> m10_1031  [key=0, style=solid];
m10_1030 -> m10_1032  [key=0, style=solid];
m10_1031 -> m10_1037  [key=0, style=solid];
m10_1031 -> m10_1040  [key=2, style=dotted];
m10_1032 -> m10_1037  [key=0, style=solid];
m10_1032 -> m10_353  [key=2, style=dotted];
m10_1036 -> m10_1039  [key=0, style=solid];
m10_1036 -> m10_33  [key=2, style=dotted];
m10_1037 -> m10_1008  [key=0, style=solid];
m10_1037 -> m10_1038  [key=0, style=solid];
m10_1037 -> m10_32  [key=2, style=dotted];
m10_1008 -> m10_1009  [key=0, style=solid];
m10_1008 -> m10_67  [key=3, color=darkorchid, style=bold, label="Local variable bool exit"];
m10_1013 -> m10_1014  [key=0, style=solid];
m10_1013 -> m10_984  [key=2, style=dotted];
m10_1038 -> m10_1039  [key=0, style=solid];
m10_1010 -> m10_1011  [key=0, style=solid];
m10_1033 -> m10_1037  [key=0, style=solid];
m10_1034 -> m10_1035  [key=0, style=solid];
m10_1014 -> m10_1015  [key=0, style=solid];
m10_1014 -> m10_1016  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_1014 -> m10_1017  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_1014 -> m10_1018  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_1014 -> m10_1019  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_1014 -> m10_1022  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_1014 -> m10_1023  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_1015 -> m10_1016  [key=0, style=solid];
m10_1015 -> m10_1024  [key=0, style=solid];
m10_1016 -> m10_1017  [key=0, style=solid];
m10_1016 -> m10_1018  [key=0, style=solid];
m10_1017 -> m10_1018  [key=0, style=solid];
m10_1017 -> m10_43  [key=2, style=dotted];
m10_1021 -> m10_1022  [key=0, style=solid];
m10_1021 -> m10_1023  [key=0, style=solid];
m10_1026 -> m10_1027  [key=0, style=solid];
m10_1026 -> m10_1028  [key=0, style=solid];
m10_1028 -> m10_1029  [key=0, style=solid];
m10_1028 -> m10_1030  [key=0, style=solid];
m10_1035 -> m10_1037  [key=0, style=solid];
m10_1039 -> m10_981  [key=0, style=bold, color=blue];
m10_468 -> m10_705  [key=0, style=solid];
m10_468 -> m10_706  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_468 -> m10_707  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m10_468 -> m10_708  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m10_468 -> m10_709  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_468 -> m10_710  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m10_468 -> m10_713  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m10_468 -> m10_714  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m10_468 -> m10_716  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_468 -> m10_718  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_468 -> m10_719  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_468 -> m10_727  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_468 -> m10_728  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_468 -> m10_731  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_468 -> m10_732  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m10_468 -> m10_733  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_468 -> m10_735  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_468 -> m10_738  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_468 -> m10_739  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_468 -> m10_751  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_468 -> m10_754  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m10_468 -> m10_755  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m10_468 -> m10_756  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IList"];
m10_468 -> m10_437  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.IList list"];
m10_468 -> m10_162  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_468 -> m10_434  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract"];
m10_468 -> m10_468  [key=3, color=darkorchid, style=bold, label="method methodReturn object PopulateMultidimensionalArray"];
m10_705 -> m10_706  [key=0, style=solid];
m10_705 -> m10_469  [key=2, style=dotted];
m10_705 -> m10_717  [key=1, style=dashed, color=darkseagreen4, label=rank];
m10_706 -> m10_707  [key=0, style=solid];
m10_706 -> m10_708  [key=0, style=solid];
m10_707 -> m10_708  [key=0, style=solid];
m10_707 -> m10_566  [key=2, style=dotted];
m10_708 -> m10_709  [key=0, style=solid];
m10_708 -> m10_636  [key=2, style=dotted];
m10_709 -> m10_710  [key=0, style=solid];
m10_709 -> m10_43  [key=2, style=dotted];
m10_709 -> m10_718  [key=1, style=dashed, color=darkseagreen4, label=collectionItemContract];
m10_709 -> m10_728  [key=1, style=dashed, color=darkseagreen4, label=collectionItemContract];
m10_710 -> m10_711  [key=0, style=solid];
m10_710 -> m10_74  [key=2, style=dotted];
m10_710 -> m10_718  [key=1, style=dashed, color=darkseagreen4, label=collectionItemConverter];
m10_710 -> m10_726  [key=1, style=dashed, color=darkseagreen4, label=collectionItemConverter];
m10_710 -> m10_727  [key=1, style=dashed, color=darkseagreen4, label=collectionItemConverter];
m10_713 -> m10_714  [key=0, style=solid];
m10_713 -> m10_759  [key=2, style=dotted];
m10_714 -> m10_715  [key=0, style=solid];
m10_714 -> m10_742  [key=1, style=dashed, color=darkseagreen4, label=currentList];
m10_714 -> m10_468  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.IList currentList"];
m10_714 -> m10_741  [key=3, color=darkorchid, style=bold, label="Local variable System.Collections.IList currentList"];
m10_716 -> m10_717  [key=0, style=solid];
m10_716 -> m10_731  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m10_716 -> m10_733  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m10_718 -> m10_719  [key=0, style=solid];
m10_718 -> m10_753  [key=0, style=solid];
m10_718 -> m10_75  [key=2, style=dotted];
m10_719 -> m10_720  [key=0, style=solid];
m10_719 -> m10_724  [key=0, style=solid];
m10_719 -> m10_725  [key=0, style=solid];
m10_727 -> m10_729  [key=0, style=solid];
m10_727 -> m10_76  [key=2, style=dotted];
m10_728 -> m10_729  [key=0, style=solid];
m10_728 -> m10_77  [key=2, style=dotted];
m10_731 -> m10_732  [key=0, style=solid];
m10_731 -> m10_763  [key=2, style=dotted];
m10_731 -> m10_734  [key=1, style=dashed, color=darkseagreen4, label=errorPosition];
m10_731 -> m10_736  [key=1, style=dashed, color=darkseagreen4, label=errorPosition];
m10_732 -> m10_733  [key=0, style=solid];
m10_732 -> m10_737  [key=0, style=solid];
m10_732 -> m10_79  [key=2, style=dotted];
m10_733 -> m10_734  [key=0, style=solid];
m10_733 -> m10_80  [key=2, style=dotted];
m10_735 -> m10_757  [key=0, style=solid];
m10_735 -> m10_417  [key=2, style=dotted];
m10_738 -> m10_739  [key=0, style=solid];
m10_738 -> m10_753  [key=0, style=solid];
m10_738 -> m10_32  [key=2, style=dotted];
m10_739 -> m10_740  [key=0, style=solid];
m10_739 -> m10_745  [key=0, style=solid];
m10_739 -> m10_750  [key=0, style=solid];
m10_739 -> m10_751  [key=0, style=solid];
m10_751 -> m10_757  [key=0, style=solid];
m10_751 -> m10_33  [key=2, style=dotted];
m10_754 -> m10_755  [key=0, style=solid];
m10_754 -> m10_704  [key=2, style=dotted];
m10_755 -> m10_756  [key=0, style=solid];
m10_755 -> m10_642  [key=2, style=dotted];
m10_756 -> m10_757  [key=0, style=solid];
m10_717 -> m10_718  [key=0, style=solid];
m10_717 -> m10_738  [key=0, style=solid];
m10_711 -> m10_712  [key=0, style=solid];
m10_711 -> m10_734  [key=1, style=dashed, color=darkseagreen4, label=previousErrorIndex];
m10_711 -> m10_12  [key=3, color=darkorchid, style=bold, label="Local variable int? previousErrorIndex"];
m10_726 -> m10_727  [key=0, style=solid];
m10_726 -> m10_728  [key=0, style=solid];
m10_712 -> m10_713  [key=0, style=solid];
m10_712 -> m10_758  [key=2, style=dotted];
m10_712 -> m10_717  [key=1, style=dashed, color=darkseagreen4, label=listStack];
m10_712 -> m10_721  [key=1, style=dashed, color=darkseagreen4, label=listStack];
m10_712 -> m10_722  [key=1, style=dashed, color=darkseagreen4, label=listStack];
m10_712 -> m10_743  [key=1, style=dashed, color=darkseagreen4, label=listStack];
m10_712 -> m10_746  [key=1, style=dashed, color=darkseagreen4, label=listStack];
m10_712 -> m10_747  [key=1, style=dashed, color=darkseagreen4, label=listStack];
m10_712 -> m10_748  [key=1, style=dashed, color=darkseagreen4, label=listStack];
m10_734 -> m10_735  [key=0, style=solid];
m10_734 -> m10_736  [key=0, style=solid];
m10_721 -> m10_722  [key=0, style=solid];
m10_721 -> m10_760  [key=2, style=dotted];
m10_722 -> m10_723  [key=0, style=solid];
m10_722 -> m10_761  [key=2, style=dotted];
m10_722 -> m10_729  [key=1, style=dashed, color=darkseagreen4, label=currentList];
m10_743 -> m10_744  [key=0, style=solid];
m10_743 -> m10_759  [key=2, style=dotted];
m10_746 -> m10_747  [key=0, style=solid];
m10_746 -> m10_760  [key=2, style=dotted];
m10_747 -> m10_748  [key=0, style=solid];
m10_747 -> m10_749  [key=0, style=solid];
m10_748 -> m10_752  [key=0, style=solid];
m10_748 -> m10_761  [key=2, style=dotted];
m10_715 -> m10_716  [key=0, style=solid];
m10_715 -> m10_752  [key=1, style=dashed, color=darkseagreen4, label=finished];
m10_715 -> m10_753  [key=1, style=dashed, color=darkseagreen4, label=finished];
m10_715 -> m10_67  [key=3, color=darkorchid, style=bold, label="Local variable bool finished"];
m10_742 -> m10_743  [key=0, style=solid];
m10_742 -> m10_762  [key=2, style=dotted];
m10_752 -> m10_715  [key=0, style=solid];
m10_752 -> m10_753  [key=0, style=solid];
m10_753 -> m10_754  [key=0, style=solid];
m10_753 -> m10_755  [key=0, style=solid];
m10_720 -> m10_721  [key=0, style=solid];
m10_724 -> m10_730  [key=0, style=solid];
m10_724 -> m10_752  [key=0, style=solid];
m10_725 -> m10_726  [key=0, style=solid];
m10_725 -> m10_76  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m10_725 -> m10_77  [key=3, color=darkorchid, style=bold, label="Local variable object value"];
m10_723 -> m10_730  [key=0, style=solid];
m10_723 -> m10_752  [key=0, style=solid];
m10_723 -> m10_734  [key=1, style=dashed, color=darkseagreen4, label=previousErrorIndex];
m10_729 -> m10_730  [key=0, style=solid];
m10_729 -> m10_752  [key=0, style=solid];
m10_729 -> m10_762  [key=2, style=dotted];
m10_730 -> m10_731  [key=0, style=solid];
m10_736 -> m10_752  [key=0, style=solid];
m10_737 -> m10_757  [key=0, style=solid];
m10_740 -> m10_741  [key=0, style=solid];
m10_745 -> m10_746  [key=0, style=solid];
m10_750 -> m10_752  [key=0, style=solid];
m10_741 -> m10_742  [key=0, style=solid];
m10_741 -> m10_764  [key=2, style=dotted];
m10_741 -> m10_743  [key=1, style=dashed, color=darkseagreen4, label=newList];
m10_741 -> m10_744  [key=1, style=dashed, color=darkseagreen4, label=newList];
m10_744 -> m10_752  [key=0, style=solid];
m10_749 -> m10_752  [key=0, style=solid];
m10_749 -> m10_753  [key=1, style=dashed, color=darkseagreen4, label=finished];
m10_757 -> m10_468  [key=0, style=bold, color=blue];
m10_77 -> m10_126  [key=0, style=solid];
m10_77 -> m10_127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_77 -> m10_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_77 -> m10_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_77 -> m10_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_77 -> m10_138  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_77 -> m10_140  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_77 -> m10_141  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_77 -> m10_143  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_77 -> m10_145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_77 -> m10_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_77 -> m10_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_77 -> m10_151  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_77 -> m10_153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_77 -> m10_155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_77 -> m10_157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_77 -> m10_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_77 -> m10_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_77 -> m10_48  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m10_77 -> m10_161  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateValueInternal"];
m10_77 -> m10_504  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember"];
m10_77 -> m10_41  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember"];
m10_77 -> m10_468  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember"];
m10_77 -> m10_35  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember"];
m10_77 -> m10_846  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_77 -> m10_294  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember"];
m10_77 -> m10_981  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember"];
m10_77 -> m10_1040  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember"];
m10_77 -> m10_205  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m10_77 -> m10_843  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember"];
m10_77 -> m10_877  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m10_77 -> m10_12  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateValueInternal"];
m10_77 -> m10_51  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_77 -> m10_243  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_77 -> m10_507  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_77 -> m10_709  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_77 -> m10_844  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_77 -> m10_878  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_77 -> m10_1014  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member"];
m10_77 -> m10_88  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateValueInternal"];
m10_77 -> m10_162  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateValueInternal"];
m10_77 -> m10_163  [key=3, color=darkorchid, style=bold, label="method methodReturn object CreateValueInternal"];
m10_126 -> m10_127  [key=0, style=solid];
m10_126 -> m10_128  [key=0, style=solid];
m10_127 -> m10_160  [key=0, style=solid];
m10_127 -> m10_88  [key=2, style=dotted];
m10_128 -> m10_129  [key=0, style=solid];
m10_128 -> m10_131  [key=0, style=solid];
m10_128 -> m10_133  [key=0, style=solid];
m10_128 -> m10_139  [key=0, style=solid];
m10_128 -> m10_146  [key=0, style=solid];
m10_128 -> m10_149  [key=0, style=solid];
m10_128 -> m10_154  [key=0, style=solid];
m10_128 -> m10_156  [key=0, style=solid];
m10_128 -> m10_157  [key=0, style=solid];
m10_130 -> m10_160  [key=0, style=solid];
m10_130 -> m10_161  [key=2, style=dotted];
m10_132 -> m10_160  [key=0, style=solid];
m10_132 -> m10_162  [key=2, style=dotted];
m10_138 -> m10_160  [key=0, style=solid];
m10_138 -> m10_163  [key=2, style=dotted];
m10_140 -> m10_141  [key=0, style=solid];
m10_140 -> m10_144  [key=1, style=dashed, color=darkseagreen4, label=s];
m10_140 -> m10_145  [key=1, style=dashed, color=darkseagreen4, label=s];
m10_141 -> m10_142  [key=0, style=solid];
m10_141 -> m10_143  [key=0, style=solid];
m10_141 -> m10_164  [key=2, style=dotted];
m10_143 -> m10_144  [key=0, style=solid];
m10_143 -> m10_145  [key=0, style=solid];
m10_145 -> m10_160  [key=0, style=solid];
m10_145 -> m10_163  [key=2, style=dotted];
m10_147 -> m10_148  [key=0, style=solid];
m10_147 -> m10_38  [key=2, style=dotted];
m10_148 -> m10_160  [key=0, style=solid];
m10_148 -> m10_163  [key=2, style=dotted];
m10_151 -> m10_152  [key=0, style=solid];
m10_151 -> m10_153  [key=0, style=solid];
m10_153 -> m10_160  [key=0, style=solid];
m10_153 -> m10_163  [key=2, style=dotted];
m10_155 -> m10_160  [key=0, style=solid];
m10_155 -> m10_166  [key=2, style=dotted];
m10_157 -> m10_160  [key=0, style=solid];
m10_157 -> m10_33  [key=2, style=dotted];
m10_158 -> m10_127  [key=0, style=solid];
m10_158 -> m10_159  [key=0, style=solid];
m10_158 -> m10_32  [key=2, style=dotted];
m10_159 -> m10_160  [key=0, style=solid];
m10_159 -> m10_33  [key=2, style=dotted];
m10_129 -> m10_130  [key=0, style=solid];
m10_131 -> m10_132  [key=0, style=solid];
m10_133 -> m10_134  [key=0, style=solid];
m10_139 -> m10_140  [key=0, style=solid];
m10_146 -> m10_147  [key=0, style=solid];
m10_149 -> m10_150  [key=0, style=solid];
m10_154 -> m10_155  [key=0, style=solid];
m10_156 -> m10_158  [key=0, style=solid];
m10_134 -> m10_135  [key=0, style=solid];
m10_135 -> m10_136  [key=0, style=solid];
m10_136 -> m10_137  [key=0, style=solid];
m10_137 -> m10_138  [key=0, style=solid];
m10_144 -> m10_160  [key=0, style=solid];
m10_144 -> m10_165  [key=2, style=dotted];
m10_142 -> m10_160  [key=0, style=solid];
m10_150 -> m10_151  [key=0, style=solid];
m10_152 -> m10_160  [key=0, style=solid];
m10_160 -> m10_77  [key=0, style=bold, color=blue];
m10_8 -> m10_28  [key=0, style=solid];
m10_8 -> m10_33  [key=2, style=dotted];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_14  [key=0, style=solid];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> m10_27  [key=0, style=solid];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_37  [key=2, style=dotted];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_38  [key=2, style=dotted];
m10_19 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_19 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_13  [key=0, style=solid];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_16 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label=id];
m10_16 -> m10_12  [key=3, color=darkorchid, style=bold, label="Local variable string id"];
m10_1089 -> m10_1090  [key=0, style=solid];
m10_1089 -> m10_636  [key=2, style=dotted];
m10_1090 -> m10_1091  [key=0, style=solid];
m10_1090 -> m10_562  [key=2, style=dotted];
m10_1090 -> m10_1138  [key=2, style=dotted];
m10_1090 -> m10_1142  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_1090 -> m10_1145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_1090 -> m10_1109  [key=1, style=dashed, color=darkseagreen4, label=propertiesPresence];
m10_1090 -> m10_1116  [key=1, style=dashed, color=darkseagreen4, label=propertiesPresence];
m10_1090 -> m10_1130  [key=1, style=dashed, color=darkseagreen4, label=propertiesPresence];
m10_1090 -> m10_1131  [key=1, style=dashed, color=darkseagreen4, label=propertiesPresence];
m10_1091 -> m10_1092  [key=0, style=solid];
m10_1091 -> m10_1093  [key=0, style=solid];
m10_1092 -> m10_1093  [key=0, style=solid];
m10_1092 -> m10_566  [key=2, style=dotted];
m10_1093 -> m10_1094  [key=0, style=solid];
m10_1093 -> m10_1121  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m10_1093 -> m10_1134  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m10_1095 -> m10_1096  [key=0, style=solid];
m10_1095 -> m10_1123  [key=0, style=solid];
m10_1095 -> m10_1125  [key=0, style=solid];
m10_1095 -> m10_1126  [key=0, style=solid];
m10_1097 -> m10_1098  [key=0, style=solid];
m10_1097 -> m10_38  [key=2, style=dotted];
m10_1097 -> m10_1099  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_1097 -> m10_1102  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_1097 -> m10_1104  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_1097 -> m10_1106  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_1097 -> m10_1110  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_1097 -> m10_1115  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_1097 -> m10_1118  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_1097 -> m10_1120  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_1098 -> m10_1099  [key=0, style=solid];
m10_1098 -> m10_1127  [key=0, style=solid];
m10_1098 -> m10_122  [key=2, style=dotted];
m10_1099 -> m10_1100  [key=0, style=solid];
m10_1099 -> m10_898  [key=2, style=dotted];
m10_1099 -> m10_1107  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_1099 -> m10_1109  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_1099 -> m10_1111  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_1099 -> m10_1112  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_1099 -> m10_1113  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_1099 -> m10_1114  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_1099 -> m10_1116  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_1099 -> m10_1117  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_1102 -> m10_1103  [key=0, style=solid];
m10_1102 -> m10_296  [key=2, style=dotted];
m10_1102 -> m10_351  [key=2, style=dotted];
m10_1102 -> m10_352  [key=2, style=dotted];
m10_1104 -> m10_1127  [key=0, style=solid];
m10_1104 -> m10_296  [key=2, style=dotted];
m10_1104 -> m10_33  [key=2, style=dotted];
m10_1105 -> m10_1106  [key=0, style=solid];
m10_1105 -> m10_1127  [key=0, style=solid];
m10_1105 -> m10_32  [key=2, style=dotted];
m10_1106 -> m10_1127  [key=0, style=solid];
m10_1106 -> m10_1139  [key=2, style=dotted];
m10_1107 -> m10_1108  [key=0, style=solid];
m10_1107 -> m10_1111  [key=0, style=solid];
m10_1107 -> m10_1140  [key=2, style=dotted];
m10_1108 -> m10_1109  [key=0, style=solid];
m10_1108 -> m10_1127  [key=0, style=solid];
m10_1108 -> m10_32  [key=2, style=dotted];
m10_1109 -> m10_1110  [key=0, style=solid];
m10_1109 -> m10_1141  [key=2, style=dotted];
m10_1110 -> m10_1119  [key=0, style=solid];
m10_1110 -> m10_1127  [key=0, style=solid];
m10_1110 -> m10_1139  [key=2, style=dotted];
m10_1113 -> m10_1114  [key=0, style=solid];
m10_1113 -> m10_74  [key=2, style=dotted];
m10_1113 -> m10_1117  [key=1, style=dashed, color=darkseagreen4, label=propertyConverter];
m10_1114 -> m10_1115  [key=0, style=solid];
m10_1114 -> m10_1116  [key=0, style=solid];
m10_1114 -> m10_75  [key=2, style=dotted];
m10_1115 -> m10_1127  [key=0, style=solid];
m10_1115 -> m10_36  [key=2, style=dotted];
m10_1115 -> m10_33  [key=2, style=dotted];
m10_1116 -> m10_1117  [key=0, style=solid];
m10_1116 -> m10_1141  [key=2, style=dotted];
m10_1117 -> m10_1118  [key=0, style=solid];
m10_1117 -> m10_1119  [key=0, style=solid];
m10_1117 -> m10_1127  [key=0, style=solid];
m10_1117 -> m10_504  [key=2, style=dotted];
m10_1118 -> m10_1119  [key=0, style=solid];
m10_1118 -> m10_1127  [key=0, style=solid];
m10_1118 -> m10_1139  [key=2, style=dotted];
m10_1120 -> m10_1121  [key=0, style=solid];
m10_1120 -> m10_1122  [key=0, style=solid];
m10_1120 -> m10_79  [key=2, style=dotted];
m10_1121 -> m10_1127  [key=0, style=solid];
m10_1121 -> m10_80  [key=2, style=dotted];
m10_1126 -> m10_1137  [key=0, style=solid];
m10_1126 -> m10_33  [key=2, style=dotted];
m10_1127 -> m10_1094  [key=0, style=solid];
m10_1127 -> m10_1128  [key=0, style=solid];
m10_1127 -> m10_32  [key=2, style=dotted];
m10_1129 -> m10_1130  [key=0, style=solid];
m10_1129 -> m10_704  [key=2, style=dotted];
m10_1134 -> m10_1131  [key=0, style=solid];
m10_1134 -> m10_989  [key=2, style=dotted];
m10_1135 -> m10_1136  [key=0, style=solid];
m10_1135 -> m10_642  [key=2, style=dotted];
m10_1136 -> m10_1137  [key=0, style=solid];
m10_1130 -> m10_1131  [key=0, style=solid];
m10_1130 -> m10_1135  [key=0, style=solid];
m10_1131 -> m10_1132  [key=0, style=solid];
m10_1131 -> m10_1135  [key=0, style=solid];
m10_1094 -> m10_1095  [key=0, style=solid];
m10_1094 -> m10_67  [key=3, color=darkorchid, style=bold, label="Local variable bool finished"];
m10_1096 -> m10_1097  [key=0, style=solid];
m10_1123 -> m10_1124  [key=0, style=solid];
m10_1125 -> m10_1127  [key=0, style=solid];
m10_1100 -> m10_1101  [key=0, style=solid];
m10_1100 -> m10_1107  [key=0, style=solid];
m10_1111 -> m10_1112  [key=0, style=solid];
m10_1111 -> m10_1113  [key=0, style=solid];
m10_1112 -> m10_1113  [key=0, style=solid];
m10_1112 -> m10_43  [key=2, style=dotted];
m10_1101 -> m10_1102  [key=0, style=solid];
m10_1101 -> m10_1103  [key=0, style=solid];
m10_1103 -> m10_1104  [key=0, style=solid];
m10_1103 -> m10_1105  [key=0, style=solid];
m10_1119 -> m10_1120  [key=0, style=solid];
m10_1122 -> m10_1137  [key=0, style=solid];
m10_1124 -> m10_1127  [key=0, style=solid];
m10_1124 -> m10_1128  [key=1, style=dashed, color=darkseagreen4, label=finished];
m10_1128 -> m10_1129  [key=0, style=solid];
m10_1128 -> m10_1130  [key=0, style=solid];
m10_1132 -> m10_1133  [key=0, style=solid];
m10_1132 -> m10_1132  [key=1, style=dashed, color=darkseagreen4, label=propertyPresence];
m10_1132 -> m10_1134  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_1133 -> m10_1134  [key=0, style=solid];
m10_1133 -> m10_1133  [key=1, style=dashed, color=darkseagreen4, label=propertyPresence];
m10_1137 -> m10_42  [key=0, style=bold, color=blue];
m10_1139 -> m10_1167  [key=0, style=solid];
m10_1139 -> m10_1168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_1139 -> m10_1169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_1139 -> m10_1171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_1139 -> m10_1172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_1139 -> m10_42  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m10_1139 -> m10_1097  [key=3, color=darkorchid, style=bold, label="Parameter variable string memberName"];
m10_1167 -> m10_1168  [key=0, style=solid];
m10_1167 -> m10_1172  [key=0, style=solid];
m10_1168 -> m10_1169  [key=0, style=solid];
m10_1168 -> m10_1040  [key=2, style=dotted];
m10_1169 -> m10_1170  [key=0, style=solid];
m10_1169 -> m10_1173  [key=0, style=solid];
m10_1169 -> m10_988  [key=2, style=dotted];
m10_1171 -> m10_1173  [key=0, style=solid];
m10_1171 -> m10_36  [key=2, style=dotted];
m10_1171 -> m10_417  [key=2, style=dotted];
m10_1172 -> m10_1173  [key=0, style=solid];
m10_1172 -> m10_353  [key=2, style=dotted];
m10_1170 -> m10_1171  [key=0, style=solid];
m10_1173 -> m10_1139  [key=0, style=bold, color=blue];
m10_122 -> m10_1157  [key=0, style=solid];
m10_122 -> m10_1158  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_122 -> m10_1163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_122 -> m10_104  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_122 -> m10_41  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_122 -> m10_42  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m10_122 -> m10_109  [key=3, color=darkorchid, style=bold, label="Parameter variable string memberName"];
m10_122 -> m10_1097  [key=3, color=darkorchid, style=bold, label="Parameter variable string memberName"];
m10_122 -> m10_690  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CheckPropertyName"];
m10_122 -> m10_67  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CheckPropertyName"];
m10_1157 -> m10_1158  [key=0, style=solid];
m10_1157 -> m10_1165  [key=0, style=solid];
m10_1158 -> m10_1159  [key=0, style=solid];
m10_1163 -> m10_1164  [key=0, style=solid];
m10_1163 -> m10_353  [key=2, style=dotted];
m10_1165 -> m10_1166  [key=0, style=solid];
m10_1159 -> m10_1160  [key=0, style=solid];
m10_1160 -> m10_1161  [key=0, style=solid];
m10_1161 -> m10_1162  [key=0, style=solid];
m10_1162 -> m10_1163  [key=0, style=solid];
m10_1164 -> m10_1166  [key=0, style=solid];
m10_1166 -> m10_122  [key=0, style=bold, color=blue];
m10_170 -> m10_171  [key=0, style=solid];
m10_170 -> m10_176  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetExpectedDescription"];
m10_170 -> m10_178  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetExpectedDescription"];
m10_170 -> m10_180  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetExpectedDescription"];
m10_170 -> m10_182  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetExpectedDescription"];
m10_170 -> m10_161  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_170 -> m10_418  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m10_171 -> m10_172  [key=0, style=solid];
m10_171 -> m10_177  [key=0, style=solid];
m10_171 -> m10_179  [key=0, style=solid];
m10_171 -> m10_181  [key=0, style=solid];
m10_171 -> m10_183  [key=0, style=solid];
m10_172 -> m10_173  [key=0, style=solid];
m10_177 -> m10_178  [key=0, style=solid];
m10_179 -> m10_180  [key=0, style=solid];
m10_181 -> m10_182  [key=0, style=solid];
m10_183 -> m10_184  [key=0, style=solid];
m10_183 -> m10_185  [key=2, style=dotted];
m10_173 -> m10_174  [key=0, style=solid];
m10_174 -> m10_175  [key=0, style=solid];
m10_175 -> m10_176  [key=0, style=solid];
m10_176 -> m10_184  [key=0, style=solid];
m10_178 -> m10_184  [key=0, style=solid];
m10_180 -> m10_184  [key=0, style=solid];
m10_182 -> m10_184  [key=0, style=solid];
m10_184 -> m10_170  [key=0, style=bold, color=blue];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_11  [key=2, style=dotted];
m10_295 -> m10_809  [key=0, style=solid];
m10_295 -> m10_813  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_295 -> m10_815  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_295 -> m10_816  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonISerializableContract"];
m10_295 -> m10_818  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_295 -> m10_820  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_295 -> m10_821  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_295 -> m10_822  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_295 -> m10_823  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_295 -> m10_827  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_295 -> m10_828  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_295 -> m10_830  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_295 -> m10_831  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonISerializableContract"];
m10_295 -> m10_832  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_295 -> m10_833  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonISerializableContract"];
m10_295 -> m10_834  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_295 -> m10_835  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_295 -> m10_836  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_295 -> m10_837  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_295 -> m10_161  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member"];
m10_295 -> m10_279  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonISerializableContract contract"];
m10_295 -> m10_204  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_809 -> m10_810  [key=0, style=solid];
m10_809 -> m10_812  [key=1, style=dashed, color=darkseagreen4, label=objectType];
m10_809 -> m10_832  [key=1, style=dashed, color=darkseagreen4, label=objectType];
m10_813 -> m10_839  [key=0, style=solid];
m10_813 -> m10_33  [key=2, style=dotted];
m10_815 -> m10_816  [key=0, style=solid];
m10_815 -> m10_36  [key=2, style=dotted];
m10_815 -> m10_351  [key=2, style=dotted];
m10_815 -> m10_352  [key=2, style=dotted];
m10_816 -> m10_817  [key=0, style=solid];
m10_816 -> m10_840  [key=2, style=dotted];
m10_816 -> m10_841  [key=2, style=dotted];
m10_816 -> m10_823  [key=1, style=dashed, color=darkseagreen4, label=serializationInfo];
m10_816 -> m10_830  [key=1, style=dashed, color=darkseagreen4, label=serializationInfo];
m10_816 -> m10_833  [key=1, style=dashed, color=darkseagreen4, label=serializationInfo];
m10_818 -> m10_819  [key=0, style=solid];
m10_818 -> m10_824  [key=0, style=solid];
m10_818 -> m10_825  [key=0, style=solid];
m10_818 -> m10_827  [key=0, style=solid];
m10_820 -> m10_821  [key=0, style=solid];
m10_820 -> m10_38  [key=2, style=dotted];
m10_820 -> m10_822  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_820 -> m10_823  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m10_821 -> m10_822  [key=0, style=solid];
m10_821 -> m10_823  [key=0, style=solid];
m10_821 -> m10_32  [key=2, style=dotted];
m10_822 -> m10_839  [key=0, style=solid];
m10_822 -> m10_36  [key=2, style=dotted];
m10_822 -> m10_33  [key=2, style=dotted];
m10_823 -> m10_828  [key=0, style=solid];
m10_823 -> m10_285  [key=2, style=dotted];
m10_823 -> m10_842  [key=2, style=dotted];
m10_827 -> m10_839  [key=0, style=solid];
m10_827 -> m10_33  [key=2, style=dotted];
m10_828 -> m10_817  [key=0, style=solid];
m10_828 -> m10_829  [key=0, style=solid];
m10_828 -> m10_32  [key=2, style=dotted];
m10_830 -> m10_831  [key=0, style=solid];
m10_830 -> m10_704  [key=2, style=dotted];
m10_831 -> m10_832  [key=0, style=solid];
m10_831 -> m10_833  [key=0, style=solid];
m10_832 -> m10_839  [key=0, style=solid];
m10_832 -> m10_36  [key=2, style=dotted];
m10_832 -> m10_33  [key=2, style=dotted];
m10_833 -> m10_834  [key=0, style=solid];
m10_833 -> m10_293  [key=2, style=dotted];
m10_833 -> m10_835  [key=1, style=dashed, color=darkseagreen4, label=createdObject];
m10_833 -> m10_836  [key=1, style=dashed, color=darkseagreen4, label=createdObject];
m10_833 -> m10_837  [key=1, style=dashed, color=darkseagreen4, label=createdObject];
m10_833 -> m10_838  [key=1, style=dashed, color=darkseagreen4, label=createdObject];
m10_834 -> m10_835  [key=0, style=solid];
m10_834 -> m10_836  [key=0, style=solid];
m10_835 -> m10_836  [key=0, style=solid];
m10_835 -> m10_566  [key=2, style=dotted];
m10_836 -> m10_837  [key=0, style=solid];
m10_836 -> m10_636  [key=2, style=dotted];
m10_837 -> m10_838  [key=0, style=solid];
m10_837 -> m10_642  [key=2, style=dotted];
m10_810 -> m10_811  [key=0, style=solid];
m10_810 -> m10_814  [key=0, style=solid];
m10_812 -> m10_813  [key=0, style=solid];
m10_812 -> m10_36  [key=2, style=dotted];
m10_812 -> m10_812  [key=1, style=dashed, color=darkseagreen4, label=message];
m10_811 -> m10_812  [key=0, style=solid];
m10_814 -> m10_815  [key=0, style=solid];
m10_814 -> m10_816  [key=0, style=solid];
m10_817 -> m10_818  [key=0, style=solid];
m10_817 -> m10_67  [key=3, color=darkorchid, style=bold, label="Local variable bool finished"];
m10_819 -> m10_820  [key=0, style=solid];
m10_824 -> m10_828  [key=0, style=solid];
m10_825 -> m10_826  [key=0, style=solid];
m10_826 -> m10_828  [key=0, style=solid];
m10_826 -> m10_829  [key=1, style=dashed, color=darkseagreen4, label=finished];
m10_829 -> m10_830  [key=0, style=solid];
m10_829 -> m10_831  [key=0, style=solid];
m10_838 -> m10_839  [key=0, style=solid];
m10_839 -> m10_295  [key=0, style=bold, color=blue];
m10_526 -> m10_531  [key=0, style=solid];
m10_526 -> m10_535  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_526 -> m10_537  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_526 -> m10_538  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_526 -> m10_539  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_526 -> m10_540  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_526 -> m10_541  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_526 -> m10_542  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_526 -> m10_547  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_526 -> m10_549  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_526 -> m10_551  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_526 -> m10_554  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_526 -> m10_556  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_526 -> m10_557  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m10_526 -> m10_559  [key=1, style=dashed, color=darkseagreen4, label="ref Newtonsoft.Json.JsonConverter"];
m10_526 -> m10_504  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m10_526 -> m10_74  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonConverter propertyConverter"];
m10_526 -> m10_506  [key=3, color=darkorchid, style=bold, label="Parameter variable bool useExistingValue"];
m10_526 -> m10_505  [key=3, color=darkorchid, style=bold, label="Parameter variable object currentValue"];
m10_526 -> m10_507  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract propertyContract"];
m10_526 -> m10_43  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract propertyContract"];
m10_526 -> m10_508  [key=3, color=darkorchid, style=bold, label="Parameter variable bool gottenCurrentValue"];
m10_526 -> m10_690  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CalculatePropertyDetails"];
m10_526 -> m10_67  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CalculatePropertyDetails"];
m10_531 -> m10_532  [key=0, style=solid];
m10_531 -> m10_553  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m10_531 -> m10_555  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m10_531 -> m10_559  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m10_535 -> m10_536  [key=0, style=solid];
m10_535 -> m10_537  [key=0, style=solid];
m10_537 -> m10_538  [key=0, style=solid];
m10_537 -> m10_541  [key=1, style=dashed, color=darkseagreen4, label=tokenType];
m10_537 -> m10_549  [key=1, style=dashed, color=darkseagreen4, label=tokenType];
m10_537 -> m10_551  [key=1, style=dashed, color=darkseagreen4, label=tokenType];
m10_538 -> m10_539  [key=0, style=solid];
m10_538 -> m10_540  [key=0, style=solid];
m10_539 -> m10_540  [key=0, style=solid];
m10_539 -> m10_43  [key=2, style=dotted];
m10_540 -> m10_541  [key=0, style=solid];
m10_540 -> m10_560  [key=2, style=dotted];
m10_541 -> m10_542  [key=0, style=solid];
m10_541 -> m10_547  [key=0, style=solid];
m10_542 -> m10_543  [key=0, style=solid];
m10_542 -> m10_527  [key=2, style=dotted];
m10_542 -> m10_544  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m10_542 -> m10_545  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m10_542 -> m10_553  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m10_542 -> m10_555  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m10_542 -> m10_559  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m10_547 -> m10_548  [key=0, style=solid];
m10_547 -> m10_549  [key=0, style=solid];
m10_549 -> m10_550  [key=0, style=solid];
m10_549 -> m10_551  [key=0, style=solid];
m10_549 -> m10_560  [key=2, style=dotted];
m10_551 -> m10_552  [key=0, style=solid];
m10_551 -> m10_553  [key=0, style=solid];
m10_551 -> m10_560  [key=2, style=dotted];
m10_551 -> m10_562  [key=2, style=dotted];
m10_551 -> m10_563  [key=2, style=dotted];
m10_551 -> m10_564  [key=2, style=dotted];
m10_551 -> m10_565  [key=2, style=dotted];
m10_554 -> m10_558  [key=0, style=solid];
m10_554 -> m10_559  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.Serialization.JsonContract"];
m10_556 -> m10_557  [key=0, style=solid];
m10_556 -> m10_558  [key=0, style=solid];
m10_557 -> m10_558  [key=0, style=solid];
m10_557 -> m10_74  [key=2, style=dotted];
m10_557 -> m10_559  [key=1, style=dashed, color=darkseagreen4, label="ref Newtonsoft.Json.JsonConverter"];
m10_532 -> m10_533  [key=0, style=solid];
m10_532 -> m10_547  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_532 -> m10_559  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_553 -> m10_554  [key=0, style=solid];
m10_553 -> m10_555  [key=0, style=solid];
m10_555 -> m10_556  [key=0, style=solid];
m10_555 -> m10_30  [key=2, style=dotted];
m10_555 -> m10_43  [key=2, style=dotted];
m10_555 -> m10_557  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.Serialization.JsonContract"];
m10_555 -> m10_559  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.Serialization.JsonContract"];
m10_533 -> m10_534  [key=0, style=solid];
m10_534 -> m10_535  [key=0, style=solid];
m10_534 -> m10_559  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_536 -> m10_559  [key=0, style=solid];
m10_543 -> m10_544  [key=0, style=solid];
m10_543 -> m10_559  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_544 -> m10_545  [key=0, style=solid];
m10_544 -> m10_547  [key=0, style=solid];
m10_545 -> m10_546  [key=0, style=solid];
m10_545 -> m10_30  [key=2, style=dotted];
m10_545 -> m10_43  [key=2, style=dotted];
m10_546 -> m10_547  [key=0, style=solid];
m10_546 -> m10_561  [key=2, style=dotted];
m10_546 -> m10_559  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m10_548 -> m10_559  [key=0, style=solid];
m10_550 -> m10_559  [key=0, style=solid];
m10_552 -> m10_559  [key=0, style=solid];
m10_558 -> m10_559  [key=0, style=solid];
m10_559 -> m10_526  [key=0, style=bold, color=blue];
m10_900 -> m10_901  [key=0, style=solid];
m10_900 -> m10_902  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_900 -> m10_903  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_900 -> m10_905  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_900 -> m10_906  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_900 -> m10_907  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_900 -> m10_909  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_900 -> m10_912  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_900 -> m10_926  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_900 -> m10_933  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_900 -> m10_934  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_900 -> m10_937  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ObjectConstructor<object>"];
m10_900 -> m10_938  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_900 -> m10_939  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_900 -> m10_940  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_900 -> m10_967  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_900 -> m10_970  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m10_900 -> m10_974  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_900 -> m10_975  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m10_900 -> m10_291  [key=3, color=darkorchid, style=bold, label="Parameter variable string id"];
m10_901 -> m10_902  [key=0, style=solid];
m10_901 -> m10_29  [key=2, style=dotted];
m10_902 -> m10_903  [key=0, style=solid];
m10_902 -> m10_562  [key=2, style=dotted];
m10_902 -> m10_908  [key=1, style=dashed, color=darkseagreen4, label=trackPresence];
m10_902 -> m10_914  [key=1, style=dashed, color=darkseagreen4, label=trackPresence];
m10_902 -> m10_928  [key=1, style=dashed, color=darkseagreen4, label=trackPresence];
m10_902 -> m10_971  [key=1, style=dashed, color=darkseagreen4, label=trackPresence];
m10_903 -> m10_904  [key=0, style=solid];
m10_903 -> m10_907  [key=1, style=dashed, color=darkseagreen4, label=objectType];
m10_905 -> m10_906  [key=0, style=solid];
m10_905 -> m10_978  [key=2, style=dotted];
m10_905 -> m10_979  [key=2, style=dotted];
m10_905 -> m10_980  [key=2, style=dotted];
m10_905 -> m10_990  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_906 -> m10_907  [key=0, style=solid];
m10_906 -> m10_296  [key=2, style=dotted];
m10_906 -> m10_351  [key=2, style=dotted];
m10_906 -> m10_352  [key=2, style=dotted];
m10_907 -> m10_908  [key=0, style=solid];
m10_907 -> m10_981  [key=2, style=dotted];
m10_907 -> m10_910  [key=1, style=dashed, color=darkseagreen4, label=propertyContexts];
m10_907 -> m10_911  [key=1, style=dashed, color=darkseagreen4, label=propertyContexts];
m10_907 -> m10_913  [key=1, style=dashed, color=darkseagreen4, label=propertyContexts];
m10_907 -> m10_941  [key=1, style=dashed, color=darkseagreen4, label=propertyContexts];
m10_907 -> m10_968  [key=1, style=dashed, color=darkseagreen4, label=propertyContexts];
m10_907 -> m10_972  [key=1, style=dashed, color=darkseagreen4, label=propertyContexts];
m10_909 -> m10_910  [key=0, style=solid];
m10_909 -> m10_912  [key=0, style=solid];
m10_909 -> m10_994  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_909 -> m10_911  [key=1, style=dashed, color=darkseagreen4, label=property];
m10_912 -> m10_913  [key=0, style=solid];
m10_912 -> m10_935  [key=1, style=dashed, color=darkseagreen4, label=creatorParameterValues];
m10_912 -> m10_937  [key=1, style=dashed, color=darkseagreen4, label=creatorParameterValues];
m10_926 -> m10_927  [key=0, style=solid];
m10_926 -> m10_985  [key=2, style=dotted];
m10_926 -> m10_996  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_926 -> m10_930  [key=1, style=dashed, color=darkseagreen4, label=constructorProperty];
m10_926 -> m10_931  [key=1, style=dashed, color=darkseagreen4, label=constructorProperty];
m10_926 -> m10_932  [key=1, style=dashed, color=darkseagreen4, label=constructorProperty];
m10_926 -> m10_933  [key=1, style=dashed, color=darkseagreen4, label=constructorProperty];
m10_926 -> m10_934  [key=1, style=dashed, color=darkseagreen4, label=constructorProperty];
m10_933 -> m10_934  [key=0, style=solid];
m10_933 -> m10_564  [key=2, style=dotted];
m10_933 -> m10_163  [key=2, style=dotted];
m10_934 -> m10_935  [key=0, style=solid];
m10_934 -> m10_986  [key=2, style=dotted];
m10_937 -> m10_938  [key=0, style=solid];
m10_937 -> m10_293  [key=2, style=dotted];
m10_937 -> m10_939  [key=1, style=dashed, color=darkseagreen4, label=createdObject];
m10_937 -> m10_940  [key=1, style=dashed, color=darkseagreen4, label=createdObject];
m10_937 -> m10_946  [key=1, style=dashed, color=darkseagreen4, label=createdObject];
m10_937 -> m10_952  [key=1, style=dashed, color=darkseagreen4, label=createdObject];
m10_937 -> m10_960  [key=1, style=dashed, color=darkseagreen4, label=createdObject];
m10_937 -> m10_970  [key=1, style=dashed, color=darkseagreen4, label=createdObject];
m10_937 -> m10_974  [key=1, style=dashed, color=darkseagreen4, label=createdObject];
m10_937 -> m10_975  [key=1, style=dashed, color=darkseagreen4, label=createdObject];
m10_937 -> m10_976  [key=1, style=dashed, color=darkseagreen4, label=createdObject];
m10_938 -> m10_939  [key=0, style=solid];
m10_938 -> m10_940  [key=0, style=solid];
m10_939 -> m10_940  [key=0, style=solid];
m10_939 -> m10_566  [key=2, style=dotted];
m10_940 -> m10_941  [key=0, style=solid];
m10_940 -> m10_636  [key=2, style=dotted];
m10_967 -> m10_968  [key=0, style=solid];
m10_967 -> m10_971  [key=0, style=solid];
m10_970 -> m10_968  [key=0, style=solid];
m10_970 -> m10_988  [key=2, style=dotted];
m10_974 -> m10_972  [key=0, style=solid];
m10_974 -> m10_989  [key=2, style=dotted];
m10_975 -> m10_976  [key=0, style=solid];
m10_975 -> m10_642  [key=2, style=dotted];
m10_908 -> m10_909  [key=0, style=solid];
m10_908 -> m10_912  [key=0, style=solid];
m10_914 -> m10_915  [key=0, style=solid];
m10_914 -> m10_924  [key=0, style=solid];
m10_928 -> m10_929  [key=0, style=solid];
m10_928 -> m10_934  [key=0, style=solid];
m10_971 -> m10_972  [key=0, style=solid];
m10_971 -> m10_975  [key=0, style=solid];
m10_904 -> m10_905  [key=0, style=solid];
m10_904 -> m10_907  [key=0, style=solid];
m10_910 -> m10_911  [key=0, style=solid];
m10_910 -> m10_909  [key=0, style=solid];
m10_910 -> m10_982  [key=2, style=dotted];
m10_910 -> m10_993  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_911 -> m10_909  [key=0, style=solid];
m10_911 -> m10_983  [key=2, style=dotted];
m10_911 -> m10_984  [key=2, style=dotted];
m10_913 -> m10_914  [key=0, style=solid];
m10_913 -> m10_937  [key=0, style=solid];
m10_913 -> m10_915  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_913 -> m10_916  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_913 -> m10_921  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_913 -> m10_923  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_913 -> m10_924  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_913 -> m10_925  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_913 -> m10_926  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_913 -> m10_929  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_913 -> m10_933  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_913 -> m10_935  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_913 -> m10_936  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_941 -> m10_942  [key=0, style=solid];
m10_941 -> m10_967  [key=0, style=solid];
m10_941 -> m10_943  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_941 -> m10_944  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_941 -> m10_947  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_941 -> m10_966  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_968 -> m10_969  [key=0, style=solid];
m10_968 -> m10_971  [key=0, style=solid];
m10_968 -> m10_970  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m10_972 -> m10_973  [key=0, style=solid];
m10_972 -> m10_975  [key=0, style=solid];
m10_972 -> m10_974  [key=1, style=dashed, color=darkseagreen4, label=context];
m10_935 -> m10_936  [key=0, style=solid];
m10_915 -> m10_916  [key=0, style=solid];
m10_915 -> m10_924  [key=0, style=solid];
m10_916 -> m10_917  [key=0, style=solid];
m10_916 -> m10_918  [key=1, style=dashed, color=darkseagreen4, label=v];
m10_916 -> m10_920  [key=1, style=dashed, color=darkseagreen4, label=v];
m10_916 -> m10_921  [key=1, style=dashed, color=darkseagreen4, label=v];
m10_921 -> m10_923  [key=0, style=solid];
m10_921 -> m10_164  [key=2, style=dotted];
m10_923 -> m10_924  [key=0, style=solid];
}
